!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/619a6fac/
A	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anon22
A0	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anon22
AC_KGRAPH_H	lib/klib/kgraph.h	2;"	d
AC_KMATH_H	lib/klib/kmath.h	2;"	d
AC_KSEQ_H	lib/klib/kseq.h	29;"	d
AC_KSORT_H	lib/klib/ksort.h	64;"	d
AC_KVEC_H	lib/klib/kvec.h	49;"	d
AC_SCHMM_H_	lib/klib/khmm.h	2;"	d
AC_VERSION_KHASHL_H	lib/klib/khashl.h	29;"	d
AC_VERSION_KHASH_H	lib/klib/khash.h	126;"	d
ADDdestructors	lib/cimgui/generator/cpp2ffi.lua	/^local function ADDdestructors(FP)$/;"	f
ADDdestructors	lib/cimgui/generator/generator_old.lua	/^local function ADDdestructors(FP)$/;"	f
ADDnonUDT	lib/cimgui/generator/cpp2ffi.lua	/^local function ADDnonUDT(FP)$/;"	f
ADDnonUDT	lib/cimgui/generator/generator_old.lua	/^local function ADDnonUDT(FP)$/;"	f
ALLEGRO_HAS_CLIPBOARD	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	45;"	d	file:
API	lib/cimgui/cimgui.h	11;"	d
API	lib/cimgui/cimgui.h	17;"	d
API	lib/cimgui/cimgui.h	9;"	d
API	lib/cimgui/generator/cimgui_template.h	15;"	d
API	lib/cimgui/generator/cimgui_template.h	7;"	d
API	lib/cimgui/generator/cimgui_template.h	9;"	d
API	lib/cimgui/generator/output/cimgui.h	11;"	d
API	lib/cimgui/generator/output/cimgui.h	17;"	d
API	lib/cimgui/generator/output/cimgui.h	9;"	d
APIENTRY	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	46;"	d	file:
APIENTRY	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	43;"	d	file:
APIENTRY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	64;"	d
APIENTRY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	100;"	d
APIENTRY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	98;"	d
APIENTRY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3native.h	87;"	d
APIENTRY	lib/gl3w/GL/glcorearb.h	64;"	d
APIENTRYP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	67;"	d
APIENTRYP	lib/gl3w/GL/glcorearb.h	67;"	d
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	443;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	446;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	455;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	457;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	461;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	467;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	472;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	475;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	478;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	483;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	486;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	489;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	492;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	425;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	440;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	442;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	446;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	452;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	457;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	460;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	463;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	468;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	471;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	474;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	477;"	d	file:
ARGB	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef DWORD ARGB;$/;"	t
AcceptDragDropPayload	lib/cimgui/imgui/imgui.cpp	/^const ImGuiPayload* ImGui::AcceptDragDropPayload(const char* type, ImGuiDragDropFlags flags)$/;"	f	class:ImGui
ActivateItem	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ActivateItem(ImGuiID id)$/;"	f	class:ImGui
Active	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Active;                             \/\/ Set to true on Begin(), unless Collapsed$/;"	m	struct:ImGuiWindow
ActiveId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ActiveId;                           \/\/ Active widget$/;"	m	struct:ImGuiContext
ActiveIdAllowOverlap	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdAllowOverlap;               \/\/ Active widget allows another widget to steal active id (generally for overlapping widgets, but not always)$/;"	m	struct:ImGuiContext
ActiveIdClickOffset	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ActiveIdClickOffset;                \/\/ Clicked offset from upper-left corner, if applicable (currently only set by ButtonBehavior)$/;"	m	struct:ImGuiContext
ActiveIdHasBeenEditedBefore	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdHasBeenEditedBefore;        \/\/ Was the value associated to the widget Edited over the course of the Active state.$/;"	m	struct:ImGuiContext
ActiveIdHasBeenEditedThisFrame	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdHasBeenEditedThisFrame;$/;"	m	struct:ImGuiContext
ActiveIdHasBeenPressedBefore	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdHasBeenPressedBefore;       \/\/ Track whether the active id led to a press (this is to allow changing between PressOnClick and PressOnRelease without pressing twice). Used by range_select branch.$/;"	m	struct:ImGuiContext
ActiveIdIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ActiveIdIsAlive;                    \/\/ Active widget has been seen this frame (we can't use a bool as the ActiveId may change within the frame)$/;"	m	struct:ImGuiContext
ActiveIdIsJustActivated	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdIsJustActivated;            \/\/ Set at the time of activation for one frame$/;"	m	struct:ImGuiContext
ActiveIdMouseButton	lib/cimgui/imgui/imgui_internal.h	/^    int                     ActiveIdMouseButton;$/;"	m	struct:ImGuiContext
ActiveIdPreviousFrame	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ActiveIdPreviousFrame;$/;"	m	struct:ImGuiContext
ActiveIdPreviousFrameHasBeenEditedBefore	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdPreviousFrameHasBeenEditedBefore;$/;"	m	struct:ImGuiContext
ActiveIdPreviousFrameIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdPreviousFrameIsAlive;$/;"	m	struct:ImGuiContext
ActiveIdPreviousFrameWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            ActiveIdPreviousFrameWindow;$/;"	m	struct:ImGuiContext
ActiveIdSource	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource        ActiveIdSource;                     \/\/ Activating with mouse or nav (gamepad\/keyboard)$/;"	m	struct:ImGuiContext
ActiveIdTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   ActiveIdTimer;$/;"	m	struct:ImGuiContext
ActiveIdUsingKeyInputMask	lib/cimgui/imgui/imgui_internal.h	/^    ImU64                   ActiveIdUsingKeyInputMask;          \/\/ Active widget will want to read those key inputs. When we grow the ImGuiKey enum we'll need to either to order the enum to make useful keys come first, either redesign this into e.g. a small array.$/;"	m	struct:ImGuiContext
ActiveIdUsingNavDirMask	lib/cimgui/imgui/imgui_internal.h	/^    ImU32                   ActiveIdUsingNavDirMask;            \/\/ Active widget will want to read those directional navigation requests (e.g. can activate a button and move away from it)$/;"	m	struct:ImGuiContext
ActiveIdUsingNavInputMask	lib/cimgui/imgui/imgui_internal.h	/^    ImU32                   ActiveIdUsingNavInputMask;          \/\/ Active widget will want to read those nav inputs.$/;"	m	struct:ImGuiContext
ActiveIdWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            ActiveIdWindow;$/;"	m	struct:ImGuiContext
Add	lib/cimgui/imgui/imgui_internal.h	/^    T*          Add()                               { int idx = FreeIdx; if (idx == Buf.Size) { Buf.resize(Buf.Size + 1); FreeIdx++; } else { FreeIdx = *(int*)&Buf[idx]; } IM_PLACEMENT_NEW(&Buf[idx]) T(); return &Buf[idx]; }$/;"	f	struct:ImPool
Add	lib/cimgui/imgui/imgui_internal.h	/^    void        Add(const ImRect& r)                { if (Min.x > r.Min.x) Min.x = r.Min.x; if (Min.y > r.Min.y) Min.y = r.Min.y; if (Max.x < r.Max.x) Max.x = r.Max.x; if (Max.y < r.Max.y) Max.y = r.Max.y; }$/;"	f	struct:ImRect
Add	lib/cimgui/imgui/imgui_internal.h	/^    void        Add(const ImVec2& p)                { if (Min.x > p.x)     Min.x = p.x;     if (Min.y > p.y)     Min.y = p.y;     if (Max.x < p.x)     Max.x = p.x;     if (Max.y < p.y)     Max.y = p.y; }$/;"	f	struct:ImRect
AddBezierCurve	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddBezierCurve(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, ImU32 col, float thickness, int num_segments)$/;"	f	class:ImDrawList
AddCallback	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)$/;"	f	class:ImDrawList
AddChar	lib/cimgui/imgui/imgui.h	/^    inline void     AddChar(ImWchar c)  { SetBit(c); }                          \/\/ Add character$/;"	f	struct:ImFontGlyphRangesBuilder
AddCircle	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddCircle(const ImVec2& center, float radius, ImU32 col, int num_segments, float thickness)$/;"	f	class:ImDrawList
AddCircleFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddCircleFilled(const ImVec2& center, float radius, ImU32 col, int num_segments)$/;"	f	class:ImDrawList
AddConvexPolyFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col)$/;"	f	class:ImDrawList
AddCustomRectFontGlyph	lib/cimgui/imgui/imgui_draw.cpp	/^int ImFontAtlas::AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float advance_x, const ImVec2& offset)$/;"	f	class:ImFontAtlas
AddCustomRectRegular	lib/cimgui/imgui/imgui_draw.cpp	/^int ImFontAtlas::AddCustomRectRegular(unsigned int id, int width, int height)$/;"	f	class:ImFontAtlas
AddDrawCmd	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddDrawCmd()$/;"	f	class:ImDrawList
AddDrawListToDrawData	lib/cimgui/imgui/imgui.cpp	/^static void AddDrawListToDrawData(ImVector<ImDrawList*>* out_list, ImDrawList* draw_list)$/;"	f	file:
AddFont	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)$/;"	f	class:ImFontAtlas
AddFontDefault	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)$/;"	f	class:ImFontAtlas
AddFontFromFileTTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddFontFromMemoryCompressedBase85TTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85, float size_pixels, const ImFontConfig* font_cfg, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddFontFromMemoryCompressedTTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compressed_ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddFontFromMemoryTTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, const ImFontConfig* font_cfg_template, const ImWchar* glyph_ranges)$/;"	f	class:ImFontAtlas
AddGlyph	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::AddGlyph(ImWchar codepoint, float x0, float y0, float x1, float y1, float u0, float v0, float u1, float v1, float advance_x)$/;"	f	class:ImFont
AddImage	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& p_min, const ImVec2& p_max, const ImVec2& uv_min, const ImVec2& uv_max, ImU32 col)$/;"	f	class:ImDrawList
AddImageQuad	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddImageQuad(ImTextureID user_texture_id, const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, const ImVec2& uv1, const ImVec2& uv2, const ImVec2& uv3, const ImVec2& uv4, ImU32 col)$/;"	f	class:ImDrawList
AddImageRounded	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddImageRounded(ImTextureID user_texture_id, const ImVec2& p_min, const ImVec2& p_max, const ImVec2& uv_min, const ImVec2& uv_max, ImU32 col, float rounding, ImDrawCornerFlags rounding_corners)$/;"	f	class:ImDrawList
AddInputCharacter	lib/cimgui/imgui/imgui.cpp	/^void ImGuiIO::AddInputCharacter(unsigned int c)$/;"	f	class:ImGuiIO
AddInputCharactersUTF8	lib/cimgui/imgui/imgui.cpp	/^void ImGuiIO::AddInputCharactersUTF8(const char* utf8_chars)$/;"	f	class:ImGuiIO
AddLine	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddLine(const ImVec2& p1, const ImVec2& p2, ImU32 col, float thickness)$/;"	f	class:ImDrawList
AddNgon	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddNgon(const ImVec2& center, float radius, ImU32 col, int num_segments, float thickness)$/;"	f	class:ImDrawList
AddNgonFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddNgonFilled(const ImVec2& center, float radius, ImU32 col, int num_segments)$/;"	f	class:ImDrawList
AddPolyline	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, bool closed, float thickness)$/;"	f	class:ImDrawList
AddQuad	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddQuad(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, ImU32 col, float thickness)$/;"	f	class:ImDrawList
AddQuadFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddQuadFilled(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, ImU32 col)$/;"	f	class:ImDrawList
AddRanges	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontGlyphRangesBuilder::AddRanges(const ImWchar* ranges)$/;"	f	class:ImFontGlyphRangesBuilder
AddRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddRect(const ImVec2& p_min, const ImVec2& p_max, ImU32 col, float rounding, ImDrawCornerFlags rounding_corners, float thickness)$/;"	f	class:ImDrawList
AddRectFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddRectFilled(const ImVec2& p_min, const ImVec2& p_max, ImU32 col, float rounding, ImDrawCornerFlags rounding_corners)$/;"	f	class:ImDrawList
AddRectFilledMultiColor	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddRectFilledMultiColor(const ImVec2& p_min, const ImVec2& p_max, ImU32 col_upr_left, ImU32 col_upr_right, ImU32 col_bot_right, ImU32 col_bot_left)$/;"	f	class:ImDrawList
AddRemapChar	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)$/;"	f	class:ImFont
AddRootWindowToDrawData	lib/cimgui/imgui/imgui.cpp	/^static void AddRootWindowToDrawData(ImGuiWindow* window)$/;"	f	file:
AddText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end, float wrap_width, const ImVec4* cpu_fine_clip_rect)$/;"	f	class:ImDrawList
AddText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_end)$/;"	f	class:ImDrawList
AddText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontGlyphRangesBuilder::AddText(const char* text, const char* text_end)$/;"	f	class:ImFontGlyphRangesBuilder
AddTriangle	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddTriangle(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 col, float thickness)$/;"	f	class:ImDrawList
AddTriangleFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddTriangleFilled(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, ImU32 col)$/;"	f	class:ImDrawList
AddWindowToDrawData	lib/cimgui/imgui/imgui.cpp	/^static void AddWindowToDrawData(ImVector<ImDrawList*>* out_render_list, ImGuiWindow* window)$/;"	f	file:
AddWindowToSortBuffer	lib/cimgui/imgui/imgui.cpp	/^static void AddWindowToSortBuffer(ImVector<ImGuiWindow*>* out_sorted_windows, ImGuiWindow* window)$/;"	f	file:
AdjustArguments	lib/cimgui/generator/cpp2ffi.lua	/^local function AdjustArguments(FP)$/;"	f
AdjustArguments	lib/cimgui/generator/generator_old.lua	/^local function AdjustArguments(FP)$/;"	f
AdvanceX	lib/cimgui/cimgui.h	/^    float AdvanceX;$/;"	m	struct:ImFontGlyph
AdvanceX	lib/cimgui/generator/output/cimgui.h	/^    float AdvanceX;$/;"	m	struct:ImFontGlyph
AdvanceX	lib/cimgui/imgui/imgui.h	/^    float           AdvanceX;           \/\/ Distance to next character (= data from font + ImFontConfig::GlyphExtraSpacing.x baked in)$/;"	m	struct:ImFontGlyph
AdvanceX	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       AdvanceX;           \/\/ The distance from the origin to the origin of the next glyph. This is usually a value > 0.$/;"	m	struct:__anon112::GlyphInfo	file:
AlignTextToFramePadding	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::AlignTextToFramePadding()$/;"	f	class:ImGui
Allocator	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    const VkAllocationCallbacks* Allocator;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
Alpha	lib/cimgui/cimgui.h	/^    float Alpha;$/;"	m	struct:ImGuiStyle
Alpha	lib/cimgui/generator/output/cimgui.h	/^    float Alpha;$/;"	m	struct:ImGuiStyle
Alpha	lib/cimgui/imgui/imgui.h	/^    float       Alpha;                      \/\/ Global alpha applies to everything in Dear ImGui.$/;"	m	struct:ImGuiStyle
AngleMax12	lib/cimgui/imgui/imgui.cpp	/^    int     AngleMin12, AngleMax12;$/;"	m	struct:ImGuiResizeGripDef	file:
AngleMin12	lib/cimgui/imgui/imgui.cpp	/^    int     AngleMin12, AngleMax12;$/;"	m	struct:ImGuiResizeGripDef	file:
AntiAliasedFill	lib/cimgui/cimgui.h	/^    bool AntiAliasedFill;$/;"	m	struct:ImGuiStyle
AntiAliasedFill	lib/cimgui/generator/output/cimgui.h	/^    bool AntiAliasedFill;$/;"	m	struct:ImGuiStyle
AntiAliasedFill	lib/cimgui/imgui/imgui.h	/^    bool        AntiAliasedFill;            \/\/ Enable anti-aliasing on filled shapes (rounded rectangles, circles, etc.)$/;"	m	struct:ImGuiStyle
AntiAliasedLines	lib/cimgui/cimgui.h	/^    bool AntiAliasedLines;$/;"	m	struct:ImGuiStyle
AntiAliasedLines	lib/cimgui/generator/output/cimgui.h	/^    bool AntiAliasedLines;$/;"	m	struct:ImGuiStyle
AntiAliasedLines	lib/cimgui/imgui/imgui.h	/^    bool        AntiAliasedLines;           \/\/ Enable anti-aliasing on lines\/borders. Disable if you are really tight on CPU\/GPU.$/;"	m	struct:ImGuiStyle
Appearing	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Appearing;                          \/\/ Set during the frame where the window is appearing (or re-appearing)$/;"	m	struct:ImGuiWindow
ArrowButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ArrowButton(const char* str_id, ImGuiDir dir)$/;"	f	class:ImGui
ArrowButtonEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ArrowButtonEx(const char* str_id, ImGuiDir dir, ImVec2 size, ImGuiButtonFlags flags)$/;"	f	class:ImGui
Ascender	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       Ascender;           \/\/ The pixel extents above the baseline in pixels (typically positive).$/;"	m	struct:__anon112::FontInfo	file:
Ascent	lib/cimgui/cimgui.h	/^    float Ascent, Descent;$/;"	m	struct:ImFont
Ascent	lib/cimgui/generator/output/cimgui.h	/^    float Ascent, Descent;$/;"	m	struct:ImFont
Ascent	lib/cimgui/imgui/imgui.h	/^    float                       Ascent, Descent;    \/\/ 4+4   \/\/ out \/\/            \/\/ Ascent: distance from top to bottom of e.g. 'A' [0..FontSize]$/;"	m	struct:ImFont
AutoFitChildAxises	lib/cimgui/imgui/imgui_internal.h	/^    ImS8                    AutoFitChildAxises;$/;"	m	struct:ImGuiWindow
AutoFitFramesX	lib/cimgui/imgui/imgui_internal.h	/^    ImS8                    AutoFitFramesX, AutoFitFramesY;$/;"	m	struct:ImGuiWindow
AutoFitFramesY	lib/cimgui/imgui/imgui_internal.h	/^    ImS8                    AutoFitFramesX, AutoFitFramesY;$/;"	m	struct:ImGuiWindow
AutoFitOnlyGrows	lib/cimgui/imgui/imgui_internal.h	/^    bool                    AutoFitOnlyGrows;$/;"	m	struct:ImGuiWindow
AutoPosLastDirection	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDir                AutoPosLastDirection;$/;"	m	struct:ImGuiWindow
AutoScroll	lib/cimgui/imgui/imgui_demo.cpp	/^    bool                  AutoScroll;$/;"	m	struct:ExampleAppConsole	file:
AutoScroll	lib/cimgui/imgui/imgui_demo.cpp	/^    bool                AutoScroll;     \/\/ Keep scrolling if already at the bottom$/;"	m	struct:ExampleAppLog	file:
Avl	lib/klib/cpp/kavl.hpp	/^	Avl() : root(NULL) {};$/;"	f	class:klib::Avl
Avl	lib/klib/cpp/kavl.hpp	/^class Avl {$/;"	c	namespace:klib
BGZF	lib/klib/bgzf.h	/^} BGZF;$/;"	t	typeref:struct:__anon31
BGZF_BLOCK_SIZE	lib/klib/bgzf.h	35;"	d
BGZF_ERR_HEADER	lib/klib/bgzf.h	39;"	d
BGZF_ERR_IO	lib/klib/bgzf.h	40;"	d
BGZF_ERR_MISUSE	lib/klib/bgzf.h	41;"	d
BGZF_ERR_ZLIB	lib/klib/bgzf.h	38;"	d
BGZF_MAX_BLOCK_SIZE	lib/klib/bgzf.h	36;"	d
BIN	lib/nuklear/demo/allegro5/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/glfw_opengl2/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/glfw_opengl2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/glfw_opengl3/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/glfw_opengl3/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/glfw_opengl4/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/glfw_opengl4/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sdl_opengl2/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/sdl_opengl2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sdl_opengl3/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/sdl_opengl3/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sdl_opengles2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sfml_opengl2/Makefile	/^	BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/sfml_opengl2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sfml_opengl3/Makefile	/^	BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/sfml_opengl3/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/x11/Makefile	/^BIN = zahnrad$/;"	m
BIN	lib/nuklear/demo/x11_opengl2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/x11_opengl3/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/x11_rawfb/Makefile	/^BIN = zahnrad$/;"	m
BIN	lib/nuklear/demo/x11_xft/Makefile	/^BIN = zahnrad$/;"	m
BIN	lib/nuklear/doc/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/doc/Makefile	/^BIN = doc$/;"	m
BIN	lib/nuklear/example/Makefile	/^BIN := $(BIN).exe$/;"	m
BLOCK_FOOTER_LENGTH	lib/klib/bgzf.c	64;"	d	file:
BLOCK_HEADER_LENGTH	lib/klib/bgzf.c	63;"	d	file:
BLOCK_LENGTH	lib/klib/kurl.c	306;"	d	file:
BLOCK_SIZE	lib/klib/test/khash_keith.c	31;"	d	file:
BUF_SIZE	lib/klib/kopen.c	318;"	d	file:
BUF_SIZE	lib/klib/test/kseq_bench.c	8;"	d	file:
BUF_SIZE	lib/klib/test/kseq_bench2.c	9;"	d	file:
Backbuffer	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkImage             Backbuffer;$/;"	m	struct:ImGui_ImplVulkanH_Frame
BackbufferView	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkImageView         BackbufferView;$/;"	m	struct:ImGui_ImplVulkanH_Frame
BackendFlags	lib/cimgui/cimgui.h	/^    ImGuiBackendFlags BackendFlags;$/;"	m	struct:ImGuiIO
BackendFlags	lib/cimgui/generator/output/cimgui.h	/^    ImGuiBackendFlags BackendFlags;$/;"	m	struct:ImGuiIO
BackendFlags	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags  BackendFlags;            \/\/ = 0              \/\/ See ImGuiBackendFlags_ enum. Set by back-end (imgui_impl_xxx files or custom back-end) to communicate features supported by the back-end.$/;"	m	struct:ImGuiIO
BackendLanguageUserData	lib/cimgui/cimgui.h	/^    void* BackendLanguageUserData;$/;"	m	struct:ImGuiIO
BackendLanguageUserData	lib/cimgui/generator/output/cimgui.h	/^    void* BackendLanguageUserData;$/;"	m	struct:ImGuiIO
BackendLanguageUserData	lib/cimgui/imgui/imgui.h	/^    void*       BackendLanguageUserData;        \/\/ = NULL           \/\/ User data for non C++ programming language back-end$/;"	m	struct:ImGuiIO
BackendPlatformName	lib/cimgui/cimgui.h	/^    const char* BackendPlatformName;$/;"	m	struct:ImGuiIO
BackendPlatformName	lib/cimgui/generator/output/cimgui.h	/^    const char* BackendPlatformName;$/;"	m	struct:ImGuiIO
BackendPlatformName	lib/cimgui/imgui/imgui.h	/^    const char* BackendPlatformName;            \/\/ = NULL$/;"	m	struct:ImGuiIO
BackendPlatformUserData	lib/cimgui/cimgui.h	/^    void* BackendPlatformUserData;$/;"	m	struct:ImGuiIO
BackendPlatformUserData	lib/cimgui/generator/output/cimgui.h	/^    void* BackendPlatformUserData;$/;"	m	struct:ImGuiIO
BackendPlatformUserData	lib/cimgui/imgui/imgui.h	/^    void*       BackendPlatformUserData;        \/\/ = NULL           \/\/ User data for platform back-end$/;"	m	struct:ImGuiIO
BackendRendererName	lib/cimgui/cimgui.h	/^    const char* BackendRendererName;$/;"	m	struct:ImGuiIO
BackendRendererName	lib/cimgui/generator/output/cimgui.h	/^    const char* BackendRendererName;$/;"	m	struct:ImGuiIO
BackendRendererName	lib/cimgui/imgui/imgui.h	/^    const char* BackendRendererName;            \/\/ = NULL$/;"	m	struct:ImGuiIO
BackendRendererUserData	lib/cimgui/cimgui.h	/^    void* BackendRendererUserData;$/;"	m	struct:ImGuiIO
BackendRendererUserData	lib/cimgui/generator/output/cimgui.h	/^    void* BackendRendererUserData;$/;"	m	struct:ImGuiIO
BackendRendererUserData	lib/cimgui/imgui/imgui.h	/^    void*       BackendRendererUserData;        \/\/ = NULL           \/\/ User data for renderer back-end$/;"	m	struct:ImGuiIO
BackgroundDrawList	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawList              BackgroundDrawList;                 \/\/ First draw list to be rendered.$/;"	m	struct:ImGuiContext
Backup	lib/cimgui/imgui/imgui_internal.h	/^    void Backup()           { ImGuiWindow* window = GImGui->CurrentWindow; LastItemId = window->DC.LastItemId; LastItemStatusFlags = window->DC.LastItemStatusFlags; LastItemRect = window->DC.LastItemRect; LastItemDisplayRect = window->DC.LastItemDisplayRect; }$/;"	f	struct:ImGuiItemHoveredDataBackup
BackupActiveIdIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID     BackupActiveIdIsAlive;$/;"	m	struct:ImGuiGroupData
BackupActiveIdPreviousFrameIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    bool        BackupActiveIdPreviousFrameIsAlive;$/;"	m	struct:ImGuiGroupData
BackupCurrLineSize	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      BackupCurrLineSize;$/;"	m	struct:ImGuiGroupData
BackupCurrLineTextBaseOffset	lib/cimgui/imgui/imgui_internal.h	/^    float       BackupCurrLineTextBaseOffset;$/;"	m	struct:ImGuiGroupData
BackupCursorMaxPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      BackupCursorMaxPos;$/;"	m	struct:ImGuiGroupData
BackupCursorPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      BackupCursorPos;$/;"	m	struct:ImGuiGroupData
BackupFloat	lib/cimgui/imgui/imgui_internal.h	/^    union           { int BackupInt[2]; float BackupFloat[2]; };$/;"	m	union:ImGuiStyleMod::__anon105
BackupGroupOffset	lib/cimgui/imgui/imgui_internal.h	/^    ImVec1      BackupGroupOffset;$/;"	m	struct:ImGuiGroupData
BackupIndent	lib/cimgui/imgui/imgui_internal.h	/^    ImVec1      BackupIndent;$/;"	m	struct:ImGuiGroupData
BackupInt	lib/cimgui/imgui/imgui_internal.h	/^    union           { int BackupInt[2]; float BackupFloat[2]; };$/;"	m	union:ImGuiStyleMod::__anon105
BackupValue	lib/cimgui/imgui/imgui_internal.h	/^    ImVec4      BackupValue;$/;"	m	struct:ImGuiColorMod
BarRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect              BarRect;$/;"	m	struct:ImGuiTabBar
Begin	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Begin(const char* name, bool* p_open, ImGuiWindowFlags flags)$/;"	f	class:ImGui
Begin	lib/cimgui/imgui/imgui.cpp	/^void ImGuiListClipper::Begin(int count, float items_height)$/;"	f	class:ImGuiListClipper
BeginChild	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginChild(ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui
BeginChild	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginChild(const char* str_id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui
BeginChildEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginChildEx(const char* name, ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags flags)$/;"	f	class:ImGui
BeginChildFrame	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginChildFrame(ImGuiID id, const ImVec2& size, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui
BeginColumns	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::BeginColumns(const char* str_id, int columns_count, ImGuiColumnsFlags flags)$/;"	f	class:ImGui
BeginCombo	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::BeginCombo(const char* label, const char* preview_value, ImGuiComboFlags flags)$/;"	f	class:ImGui
BeginCount	lib/cimgui/imgui/imgui_internal.h	/^    short                   BeginCount;                         \/\/ Number of Begin() during the current frame (generally 0 or 1, 1+ if appending via multiple Begin\/End pairs)$/;"	m	struct:ImGuiWindow
BeginDragDropSource	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginDragDropSource(ImGuiDragDropFlags flags)$/;"	f	class:ImGui
BeginDragDropTarget	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginDragDropTarget()$/;"	f	class:ImGui
BeginDragDropTargetCustom	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginDragDropTargetCustom(const ImRect& bb, ImGuiID id)$/;"	f	class:ImGui
BeginGroup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BeginGroup()$/;"	f	class:ImGui
BeginMainMenuBar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::BeginMainMenuBar()$/;"	f	class:ImGui
BeginMenu	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::BeginMenu(const char* label, bool enabled)$/;"	f	class:ImGui
BeginMenuBar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::BeginMenuBar()$/;"	f	class:ImGui
BeginOrderWithinContext	lib/cimgui/imgui/imgui_internal.h	/^    short                   BeginOrderWithinContext;            \/\/ Order within entire imgui context. This is mostly used for debugging submission order related issues.$/;"	m	struct:ImGuiWindow
BeginOrderWithinParent	lib/cimgui/imgui/imgui_internal.h	/^    short                   BeginOrderWithinParent;             \/\/ Order within immediate parent window, if we are a child window. Otherwise 0.$/;"	m	struct:ImGuiWindow
BeginPopup	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopup(const char* str_id, ImGuiWindowFlags flags)$/;"	f	class:ImGui
BeginPopupContextItem	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupContextItem(const char* str_id, ImGuiMouseButton mouse_button)$/;"	f	class:ImGui
BeginPopupContextVoid	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupContextVoid(const char* str_id, ImGuiMouseButton mouse_button)$/;"	f	class:ImGui
BeginPopupContextWindow	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupContextWindow(const char* str_id, ImGuiMouseButton mouse_button, bool also_over_items)$/;"	f	class:ImGui
BeginPopupEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupEx(ImGuiID id, ImGuiWindowFlags flags)$/;"	f	class:ImGui
BeginPopupModal	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupModal(const char* name, bool* p_open, ImGuiWindowFlags flags)$/;"	f	class:ImGui
BeginPopupStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiPopupData>BeginPopupStack;                    \/\/ Which level of BeginPopup() we are in (reset every frame)$/;"	m	struct:ImGuiContext
BeginTabBar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool    ImGui::BeginTabBar(const char* str_id, ImGuiTabBarFlags flags)$/;"	f	class:ImGui
BeginTabBarEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool    ImGui::BeginTabBarEx(ImGuiTabBar* tab_bar, const ImRect& tab_bar_bb, ImGuiTabBarFlags flags)$/;"	f	class:ImGui
BeginTabItem	lib/cimgui/imgui/imgui_widgets.cpp	/^bool    ImGui::BeginTabItem(const char* label, bool* p_open, ImGuiTabItemFlags flags)$/;"	f	class:ImGui
BeginTooltip	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BeginTooltip()$/;"	f	class:ImGui
BeginTooltipEx	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BeginTooltipEx(ImGuiWindowFlags extra_flags, ImGuiTooltipFlags tooltip_flags)$/;"	f	class:ImGui
BezierClosestPointCasteljauStep	lib/cimgui/imgui/imgui.cpp	/^static void BezierClosestPointCasteljauStep(const ImVec2& p, ImVec2& p_closest, ImVec2& p_last, float& p_closest_dist2, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)$/;"	f	file:
BgAlphaVal	lib/cimgui/imgui/imgui_internal.h	/^    float                       BgAlphaVal;             \/\/ Override background alpha$/;"	m	struct:ImGuiNextWindowData
Big	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s	struct:nk_alignof
Big	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s	struct:nk_alignof
BitmapData	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    unsigned char*      BitmapData;         \/\/ Point within one of the dst_tmp_bitmap_buffers[] array$/;"	m	struct:ImFontBuildSrcGlyphFT	file:
BlitGlyph	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    void FreeTypeFont::BlitGlyph(const FT_Bitmap* ft_bitmap, uint8_t* dst, uint32_t dst_pitch, unsigned char* multiply_table)$/;"	f	class:__anon112::FreeTypeFont
Bold	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        Bold            = 1 << 5,   \/\/ Styling: Should we artificially embolden the font?$/;"	e	enum:ImGuiFreeType::RasterizerFlags
BoyerMoore	lib/klib/test/kstring_bench2.c	/^char *BoyerMoore( unsigned char *data, unsigned int dataLength, unsigned char *string, unsigned int strLength )$/;"	f
BringWindowToDisplayBack	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BringWindowToDisplayBack(ImGuiWindow* window)$/;"	f	class:ImGui
BringWindowToDisplayFront	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BringWindowToDisplayFront(ImGuiWindow* window)$/;"	f	class:ImGui
BringWindowToFocusFront	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BringWindowToFocusFront(ImGuiWindow* window)$/;"	f	class:ImGui
Buf	lib/cimgui/cimgui.h	/^    ImVector_char Buf;$/;"	m	struct:ImGuiTextBuffer
Buf	lib/cimgui/cimgui.h	/^    char* Buf;$/;"	m	struct:ImGuiInputTextCallbackData
Buf	lib/cimgui/generator/output/cimgui.h	/^    ImVector_char Buf;$/;"	m	struct:ImGuiTextBuffer
Buf	lib/cimgui/generator/output/cimgui.h	/^    char* Buf;$/;"	m	struct:ImGuiInputTextCallbackData
Buf	lib/cimgui/imgui/imgui.h	/^    ImVector<char>      Buf;$/;"	m	struct:ImGuiTextBuffer
Buf	lib/cimgui/imgui/imgui.h	/^    char*               Buf;            \/\/ Text buffer                          \/\/ Read-write   \/\/ [Resize] Can replace pointer \/ [Completion,History,Always] Only write to pointed data, don't replace the actual pointer!$/;"	m	struct:ImGuiInputTextCallbackData
Buf	lib/cimgui/imgui/imgui_demo.cpp	/^    ImGuiTextBuffer     Buf;$/;"	m	struct:ExampleAppLog	file:
Buf	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<T>     Buf;        \/\/ Contiguous data$/;"	m	struct:ImPool
Buf	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<char>  Buf;$/;"	m	struct:ImChunkStream
BufCapacityA	lib/cimgui/imgui/imgui_internal.h	/^    int                     BufCapacityA;           \/\/ end-user buffer capacity$/;"	m	struct:ImGuiInputTextState
BufDirty	lib/cimgui/cimgui.h	/^    bool BufDirty;$/;"	m	struct:ImGuiInputTextCallbackData
BufDirty	lib/cimgui/generator/output/cimgui.h	/^    bool BufDirty;$/;"	m	struct:ImGuiInputTextCallbackData
BufDirty	lib/cimgui/imgui/imgui.h	/^    bool                BufDirty;       \/\/ Set if you modify Buf\/BufTextLen!    \/\/ Write        \/\/ [Completion,History,Always]$/;"	m	struct:ImGuiInputTextCallbackData
BufSize	lib/cimgui/cimgui.h	/^    int BufSize;$/;"	m	struct:ImGuiInputTextCallbackData
BufSize	lib/cimgui/generator/output/cimgui.h	/^    int BufSize;$/;"	m	struct:ImGuiInputTextCallbackData
BufSize	lib/cimgui/imgui/imgui.h	/^    int                 BufSize;        \/\/ Buffer size (in bytes) = capacity+1  \/\/ Read-only    \/\/ [Resize,Completion,History,Always] Include zero-terminator storage. In C land == ARRAYSIZE(my_char_array), in C++ land: string.capacity()+1$/;"	m	struct:ImGuiInputTextCallbackData
BufTextLen	lib/cimgui/cimgui.h	/^    int BufTextLen;$/;"	m	struct:ImGuiInputTextCallbackData
BufTextLen	lib/cimgui/generator/output/cimgui.h	/^    int BufTextLen;$/;"	m	struct:ImGuiInputTextCallbackData
BufTextLen	lib/cimgui/imgui/imgui.h	/^    int                 BufTextLen;     \/\/ Text length (in bytes)               \/\/ Read-write   \/\/ [Resize,Completion,History,Always] Exclude zero-terminator storage. In C land: == strlen(some_text), in C++ land: string.length()$/;"	m	struct:ImGuiInputTextCallbackData
Build	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextFilter::Build()$/;"	f	class:ImGuiTextFilter
Build	lib/cimgui/imgui/imgui_draw.cpp	/^bool    ImFontAtlas::Build()$/;"	f	class:ImFontAtlas
BuildFontAtlas	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^bool ImGuiFreeType::BuildFontAtlas(ImFontAtlas* atlas, unsigned int extra_flags)$/;"	f	class:ImGuiFreeType
BuildLookupTable	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::BuildLookupTable()$/;"	f	class:ImFont
BuildRanges	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontGlyphRangesBuilder::BuildRanges(ImVector<ImWchar>* out_ranges)$/;"	f	class:ImFontGlyphRangesBuilder
BuildSortByKey	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::BuildSortByKey()$/;"	f	class:ImGuiStorage
Bullet	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Bullet()$/;"	f	class:ImGui
BulletText	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::BulletText(const char* fmt, ...)$/;"	f	class:ImGui
BulletTextV	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::BulletTextV(const char* fmt, va_list args)$/;"	f	class:ImGui
Button	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::Button(const char* label, const ImVec2& size_arg)$/;"	f	class:ImGui
ButtonBehavior	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ButtonBehavior(const ImRect& bb, ImGuiID id, bool* out_hovered, bool* out_held, ImGuiButtonFlags flags)$/;"	f	class:ImGui
ButtonEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ButtonEx(const char* label, const ImVec2& size_arg, ImGuiButtonFlags flags)$/;"	f	class:ImGui
ButtonTextAlign	lib/cimgui/cimgui.h	/^    ImVec2 ButtonTextAlign;$/;"	m	struct:ImGuiStyle
ButtonTextAlign	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 ButtonTextAlign;$/;"	m	struct:ImGuiStyle
ButtonTextAlign	lib/cimgui/imgui/imgui.h	/^    ImVec2      ButtonTextAlign;            \/\/ Alignment of button text when button is larger than text. Defaults to (0.5f, 0.5f) (centered).$/;"	m	struct:ImGuiStyle
CALLBACK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	114;"	d
CALLBACK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	4215;"	d
CALLOC	lib/klib/test/kavl_test.c	7;"	d	file:
CALLOC	lib/klib/test/krmq_test.c	9;"	d	file:
CASE	lib/nuklear/example/stb_image.h	1361;"	d
CASE	lib/nuklear/example/stb_image.h	1379;"	d
CASE	lib/nuklear/example/stb_image.h	4048;"	d
CASE	lib/nuklear/example/stb_image.h	4061;"	d
CASE	lib/nuklear/example/stb_image.h	4065;"	d
CASE	lib/nuklear/example/stb_image.h	4078;"	d
CC	lib/cimgui/imgui/examples/example_emscripten/Makefile	/^CC = emcc$/;"	m
CC	lib/klib/test/Makefile	/^CC=gcc$/;"	m
CC	lib/nuklear/demo/sfml_opengl2/Makefile	/^CC = g++$/;"	m
CC	lib/nuklear/demo/sfml_opengl3/Makefile	/^CC = g++$/;"	m
CC	lib/nuklear/demo/x11_opengl2/Makefile	/^CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl2/Makefile	/^clang: CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl2/Makefile	/^gcc: CC = gcc$/;"	m
CC	lib/nuklear/demo/x11_opengl3/Makefile	/^CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl3/Makefile	/^clang: CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl3/Makefile	/^gcc: CC = gcc$/;"	m
CFLAGS	lib/cimgui/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_glfw_metal/Makefile	/^CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_null/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_sdl_metal/Makefile	/^CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^   CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/klib/test/Makefile	/^CFLAGS=-g -Wall -O2 -I..$/;"	m
CIMGUI_API	lib/cimgui/cimgui.h	28;"	d
CIMGUI_API	lib/cimgui/generator/cimgui_template.h	26;"	d
CIMGUI_API	lib/cimgui/generator/output/cimgui.h	28;"	d
CIMGUI_DEFINE_ENUMS_AND_STRUCTS	src/gui.c	16;"	d	file:
CIMGUI_INCLUDED	lib/cimgui/cimgui.h	4;"	d
CIMGUI_INCLUDED	lib/cimgui/generator/cimgui_template.h	2;"	d
CIMGUI_INCLUDED	lib/cimgui/generator/output/cimgui.h	4;"	d
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/peko\/lab\/point.cloud\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/peko\/lab\/point.cloud$/;"	m
COBJMACROS	lib/nuklear/demo/d3d11/main.c	2;"	d	file:
COBJMACROS	lib/nuklear/demo/d3d11/nuklear_d3d11.h	41;"	d
COBJMACROS	lib/nuklear/demo/d3d9/main.c	2;"	d	file:
COBJMACROS	lib/nuklear/demo/d3d9/nuklear_d3d9.h	41;"	d
COLUMNS_HIT_RECT_HALF_WIDTH	lib/cimgui/imgui/imgui_widgets.cpp	/^static const float COLUMNS_HIT_RECT_HALF_WIDTH = 4.0f;$/;"	v	file:
COMBO	lib/nuklear/example/stb_image.h	1360;"	d
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	179;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	224;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	242;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	251;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	260;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	275;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	288;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	306;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	309;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	312;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	123;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	153;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	166;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	173;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	222;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	240;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	249;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	258;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	273;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	291;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	294;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	297;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	256;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	254;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	116;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	162;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	168;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	189;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	204;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	215;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	226;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	277;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	291;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	296;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	116;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	140;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	154;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	162;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	168;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	183;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	210;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	224;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	266;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	276;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	281;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	169;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	205;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	217;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	246;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	264;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	269;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	278;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	283;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	292;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	297;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	132;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	141;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	147;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	163;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	169;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	199;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	215;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	244;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	262;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	277;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	282;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	206;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	220;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	231;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	255;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	265;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	270;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	284;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	293;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	298;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	127;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	148;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	185;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	218;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	229;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	245;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	268;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	278;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	283;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	113;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	128;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	143;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	197;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	113;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	128;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	143;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CONST	lib/cimgui/cimgui.h	29;"	d
CONST	lib/cimgui/generator/cimgui_template.h	27;"	d
CONST	lib/cimgui/generator/output/cimgui.h	29;"	d
CUSTOMVERTEX	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^struct CUSTOMVERTEX$/;"	s	file:
CXX	lib/cimgui/imgui/examples/example_emscripten/Makefile	/^CXX = em++$/;"	m
CXX	lib/klib/test/Makefile	/^CXX=g++$/;"	m
CXXFLAGS	lib/cimgui/Makefile	/^CXXFLAGS=-O2 -fno-exceptions -fno-rtti$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/example_glfw_metal/Makefile	/^CXXFLAGS = -I..\/ -I..\/..\/ -I\/usr\/local\/include$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^CXXFLAGS = -I..\/ -I..\/..\/$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^CXXFLAGS = -I..\/ -I..\/..\/$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^CXXFLAGS = -I..\/ -I..\/..\/$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/example_sdl_metal/Makefile	/^CXXFLAGS = -I..\/ -I..\/..\/ -I\/usr\/local\/include$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^CXXFLAGS = -I..\/ -I..\/..\/$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^CXXFLAGS = -I..\/ -I..\/..\/$/;"	m
CXXFLAGS	lib/klib/test/Makefile	/^CXXFLAGS=$(CFLAGS)$/;"	m
CXX_STD	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	558;"	d	file:
CXX_STD	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	560;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	575;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	577;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	580;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	582;"	d	file:
C_DIALECT	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	584;"	d	file:
CalcCustomRectUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlas::CalcCustomRectUV(const ImFontAtlasCustomRect* rect, ImVec2* out_uv_min, ImVec2* out_uv_max) const$/;"	f	class:ImFontAtlas
CalcExtraSpace	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGuiMenuColumns::CalcExtraSpace(float avail_w) const$/;"	f	class:ImGuiMenuColumns
CalcFontSize	lib/cimgui/imgui/imgui_internal.h	/^    float       CalcFontSize() const        { ImGuiContext& g = *GImGui; float scale = g.FontBaseSize * FontWindowScale; if (ParentWindow) scale *= ParentWindow->FontWindowScale; return scale; }$/;"	f	struct:ImGuiWindow
CalcItemRectClosestPoint	lib/cimgui/imgui/imgui.h	/^    static inline ImVec2 CalcItemRectClosestPoint(const ImVec2& pos, bool on_edge = false, float outward = 0.f) { IM_UNUSED(on_edge); IM_UNUSED(outward); IM_ASSERT(0); return pos; }$/;"	f	namespace:ImGui
CalcItemSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::CalcItemSize(ImVec2 size, float default_w, float default_h)$/;"	f	class:ImGui
CalcItemWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::CalcItemWidth()$/;"	f	class:ImGui
CalcListClipping	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CalcListClipping(int items_count, float items_height, int* out_items_display_start, int* out_items_display_end)$/;"	f	class:ImGui
CalcMaxPopupHeightFromItemCount	lib/cimgui/imgui/imgui_widgets.cpp	/^static float CalcMaxPopupHeightFromItemCount(int items_count)$/;"	f	file:
CalcNextScrollFromScrollTargetAndClamp	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow* window, bool snap_on_edges)$/;"	f	file:
CalcResizePosSizeFromAnyCorner	lib/cimgui/imgui/imgui.cpp	/^static void CalcResizePosSizeFromAnyCorner(ImGuiWindow* window, const ImVec2& corner_target, const ImVec2& corner_norm, ImVec2* out_pos, ImVec2* out_size)$/;"	f	file:
CalcTextSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::CalcTextSize(const char* text, const char* text_end, bool hide_text_after_double_hash, float wrap_width)$/;"	f	class:ImGui
CalcTextSizeA	lib/cimgui/imgui/imgui_draw.cpp	/^ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_begin, const char* text_end, const char** remaining) const$/;"	f	class:ImFont
CalcTypematicRepeatAmount	lib/cimgui/imgui/imgui.cpp	/^int ImGui::CalcTypematicRepeatAmount(float t0, float t1, float repeat_delay, float repeat_rate)$/;"	f	class:ImGui
CalcWindowAutoFitSize	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcWindowAutoFitSize(ImGuiWindow* window, const ImVec2& size_contents)$/;"	f	file:
CalcWindowContentSize	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcWindowContentSize(ImGuiWindow* window)$/;"	f	file:
CalcWindowExpectedSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::CalcWindowExpectedSize(ImGuiWindow* window)$/;"	f	class:ImGui
CalcWindowSizeAfterConstraint	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcWindowSizeAfterConstraint(ImGuiWindow* window, ImVec2 new_size)$/;"	f	file:
CalcWordWrapPositionA	lib/cimgui/imgui/imgui_draw.cpp	/^const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, float wrap_width) const$/;"	f	class:ImFont
CalcWrapWidthForPos	lib/cimgui/imgui/imgui.cpp	/^float ImGui::CalcWrapWidthForPos(const ImVec2& pos, float wrap_pos_x)$/;"	f	class:ImGui
CanMergeDrawCommands	lib/cimgui/imgui/imgui_draw.cpp	/^static inline bool CanMergeDrawCommands(ImDrawCmd* a, ImDrawCmd* b)$/;"	f	file:
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	m	struct:ImVector_ImDrawChannel
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	m	struct:ImVector_ImDrawCmd
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	m	struct:ImVector_ImDrawIdx
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	m	struct:ImVector_ImDrawVert
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	m	struct:ImVector_ImFontAtlasCustomRect
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	m	struct:ImVector_ImFontConfig
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	m	struct:ImVector_ImFontGlyph
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	m	struct:ImVector_ImFontPtr
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	m	struct:ImVector_ImGuiStoragePair
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	m	struct:ImVector_ImGuiTextRange
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	m	struct:ImVector_ImTextureID
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	m	struct:ImVector_ImU32
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	m	struct:ImVector_ImVec2
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	m	struct:ImVector_ImVec4
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	m	struct:ImVector_ImWchar
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	m	struct:ImVector_char
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	m	struct:ImVector_float
Capacity	lib/cimgui/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	m	struct:ImVector
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	m	struct:ImVector_ImDrawChannel
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	m	struct:ImVector_ImDrawCmd
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	m	struct:ImVector_ImDrawIdx
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	m	struct:ImVector_ImDrawVert
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	m	struct:ImVector_ImFontAtlasCustomRect
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	m	struct:ImVector_ImFontConfig
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	m	struct:ImVector_ImFontGlyph
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	m	struct:ImVector_ImFontPtr
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	m	struct:ImVector_ImGuiStoragePair
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	m	struct:ImVector_ImGuiTextRange
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	m	struct:ImVector_ImTextureID
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	m	struct:ImVector_ImU32
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	m	struct:ImVector_ImVec2
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	m	struct:ImVector_ImVec4
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	m	struct:ImVector_ImWchar
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	m	struct:ImVector_char
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	m	struct:ImVector_float
Capacity	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	m	struct:ImVector
Capacity	lib/cimgui/imgui/imgui.h	/^    int                 Capacity;$/;"	m	struct:ImVector
CaptureKeyboardFromApp	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CaptureKeyboardFromApp(bool capture)$/;"	f	class:ImGui
CaptureMouseFromApp	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CaptureMouseFromApp(bool capture)$/;"	f	class:ImGui
ChainCallback	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^    ImGuiInputTextCallback  ChainCallback;$/;"	m	struct:InputTextCallback_UserData	file:
ChainCallbackUserData	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^    void*                   ChainCallbackUserData;$/;"	m	struct:InputTextCallback_UserData	file:
ChannelsMerge	lib/cimgui/imgui/imgui.h	/^    inline void     ChannelsMerge()             { _Splitter.Merge(this); }$/;"	f	struct:ImDrawList
ChannelsSetCurrent	lib/cimgui/imgui/imgui.h	/^    inline void     ChannelsSetCurrent(int n)   { _Splitter.SetCurrentChannel(this, n); }$/;"	f	struct:ImDrawList
ChannelsSplit	lib/cimgui/imgui/imgui.h	/^    inline void     ChannelsSplit(int count)    { _Splitter.Split(this, count); }$/;"	f	struct:ImDrawList
CheckProgram	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static bool CheckProgram(GLuint handle, const char* desc)$/;"	f	file:
CheckShader	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static bool CheckShader(GLuint handle, const char* desc)$/;"	f	file:
CheckVkResultFn	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    void                (*CheckVkResultFn)(VkResult err);$/;"	m	struct:ImGui_ImplVulkan_InitInfo
Checkbox	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::Checkbox(const char* label, bool* v)$/;"	f	class:ImGui
CheckboxFlags	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::CheckboxFlags(const char* label, unsigned int* flags, unsigned int flags_value)$/;"	f	class:ImGui
ChildBorderSize	lib/cimgui/cimgui.h	/^    float ChildBorderSize;$/;"	m	struct:ImGuiStyle
ChildBorderSize	lib/cimgui/generator/output/cimgui.h	/^    float ChildBorderSize;$/;"	m	struct:ImGuiStyle
ChildBorderSize	lib/cimgui/imgui/imgui.h	/^    float       ChildBorderSize;            \/\/ Thickness of border around child windows. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU\/GPU costly).$/;"	m	struct:ImGuiStyle
ChildId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ChildId;                            \/\/ ID of corresponding item in parent window (for navigation to return from child window to parent window)$/;"	m	struct:ImGuiWindow
ChildRounding	lib/cimgui/cimgui.h	/^    float ChildRounding;$/;"	m	struct:ImGuiStyle
ChildRounding	lib/cimgui/generator/output/cimgui.h	/^    float ChildRounding;$/;"	m	struct:ImGuiStyle
ChildRounding	lib/cimgui/imgui/imgui.h	/^    float       ChildRounding;              \/\/ Radius of child window corners rounding. Set to 0.0f to have rectangular windows.$/;"	m	struct:ImGuiStyle
ChildWindowComparer	lib/cimgui/imgui/imgui.cpp	/^static int IMGUI_CDECL ChildWindowComparer(const void* lhs, const void* rhs)$/;"	f	file:
ChildWindows	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  ChildWindows;$/;"	m	struct:ImGuiWindowTempData
CimguiStorage	lib/cimgui/generator/cimgui_template.cpp	/^struct CimguiStorage$/;"	s	file:
CircleSegmentCounts	lib/cimgui/imgui/imgui_internal.h	/^    ImU8            CircleSegmentCounts[64];    \/\/ Precomputed segment count for given radius (array index + 1) before we calculate it dynamically (to avoid calculation overhead)$/;"	m	struct:ImDrawListSharedData
CircleSegmentMaxError	lib/cimgui/cimgui.h	/^    float CircleSegmentMaxError;$/;"	m	struct:ImGuiStyle
CircleSegmentMaxError	lib/cimgui/generator/output/cimgui.h	/^    float CircleSegmentMaxError;$/;"	m	struct:ImGuiStyle
CircleSegmentMaxError	lib/cimgui/imgui/imgui.h	/^    float       CircleSegmentMaxError;      \/\/ Maximum error (in pixels) allowed when using AddCircle()\/AddCircleFilled() or drawing rounded corner rectangles with no explicit segment count specified. Decrease for higher quality but more geometry.$/;"	m	struct:ImGuiStyle
CircleSegmentMaxError	lib/cimgui/imgui/imgui_internal.h	/^    float           CircleSegmentMaxError;      \/\/ Number of circle segments to use per pixel of radius for AddCircle() etc$/;"	m	struct:ImDrawListSharedData
CircleVtx12	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2          CircleVtx12[12];            \/\/ FIXME: Bake rounded corners fill\/borders in atlas$/;"	m	struct:ImDrawListSharedData
ClampWindowRect	lib/cimgui/imgui/imgui.cpp	/^static inline void ClampWindowRect(ImGuiWindow* window, const ImRect& rect, const ImVec2& padding)$/;"	f	file:
CleanupDeviceD3D	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^void CleanupDeviceD3D()$/;"	f
CleanupDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^void CleanupDeviceD3D()$/;"	f
CleanupDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^void CleanupDeviceD3D()$/;"	f
CleanupDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^void CleanupDeviceD3D()$/;"	f
CleanupDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^void CleanupDeviceD3D()$/;"	f
CleanupRenderTarget	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^void CleanupRenderTarget()$/;"	f
CleanupRenderTarget	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^void CleanupRenderTarget()$/;"	f
CleanupRenderTarget	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^void CleanupRenderTarget()$/;"	f
CleanupRenderTarget	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^void CleanupRenderTarget()$/;"	f
CleanupVulkan	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void CleanupVulkan()$/;"	f	file:
CleanupVulkan	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static void CleanupVulkan()$/;"	f	file:
CleanupVulkanWindow	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void CleanupVulkanWindow()$/;"	f	file:
CleanupVulkanWindow	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static void CleanupVulkanWindow()$/;"	f	file:
Clear	lib/cimgui/imgui/imgui.h	/^    inline void                 Clear() { _Current = 0; _Count = 1; } \/\/ Do not clear Channels[] so our allocations are reused next frame$/;"	f	struct:ImDrawListSplitter
Clear	lib/cimgui/imgui/imgui.h	/^    inline void     Clear()             { int size_in_bytes = (IM_UNICODE_CODEPOINT_MAX+1) \/ 8; UsedChars.resize(size_in_bytes \/ (int)sizeof(ImU32)); memset(UsedChars.Data, 0, (size_t)size_in_bytes); }$/;"	f	struct:ImFontGlyphRangesBuilder
Clear	lib/cimgui/imgui/imgui.h	/^    void                Clear()          { InputBuf[0] = 0; Build(); }$/;"	f	struct:ImGuiTextFilter
Clear	lib/cimgui/imgui/imgui.h	/^    void                Clear() { Data.clear(); }$/;"	f	struct:ImGuiStorage
Clear	lib/cimgui/imgui/imgui.h	/^    void Clear()    { SourceId = SourceParentId = 0; Data = NULL; DataSize = 0; memset(DataType, 0, sizeof(DataType)); DataFrameCount = -1; Preview = Delivery = false; }$/;"	f	struct:ImGuiPayload
Clear	lib/cimgui/imgui/imgui.h	/^    void Clear()    { Valid = false; CmdLists = NULL; CmdListsCount = TotalVtxCount = TotalIdxCount = 0; DisplayPos = DisplaySize = FramebufferScale = ImVec2(0.f, 0.f); } \/\/ The ImDrawList are owned by ImGuiContext!$/;"	f	struct:ImDrawData
Clear	lib/cimgui/imgui/imgui_demo.cpp	/^    void    Clear()$/;"	f	struct:ExampleAppLog
Clear	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::Clear()$/;"	f	class:ImFontAtlas
Clear	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::Clear()$/;"	f	class:ImDrawList
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void            Clear()                 { Storage.clear(); }$/;"	f	struct:ImBoolVector
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void        Clear()                             { for (int n = 0; n < Map.Data.Size; n++) { int idx = Map.Data[n].val_i; if (idx != -1) Buf[idx].~T(); } Map.Clear(); Buf.clear(); FreeIdx = 0; }$/;"	f	struct:ImPool
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void Clear()            { for (int n = 0; n < IM_ARRAYSIZE(Layers); n++) Layers[n].resize(0); }$/;"	f	struct:ImDrawDataBuilder
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void Clear()         { Window = NULL; ID = FocusScopeId = 0; DistBox = DistCenter = DistAxial = FLT_MAX; RectRel = ImRect(); }$/;"	f	struct:ImGuiNavMoveResult
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void Clear()$/;"	f	struct:ImGuiColumns
ClearActiveID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClearActiveID()$/;"	f	class:ImGui
ClearDragDrop	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClearDragDrop()$/;"	f	class:ImGui
ClearEnable	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    bool                ClearEnable;$/;"	m	struct:ImGui_ImplVulkanH_Window
ClearFlags	lib/cimgui/imgui/imgui_internal.h	/^    inline void ClearFlags()    { Flags = ImGuiNextItemDataFlags_None; } \/\/ Also cleared manually by ItemAdd()!$/;"	f	struct:ImGuiNextItemData
ClearFlags	lib/cimgui/imgui/imgui_internal.h	/^    inline void ClearFlags()    { Flags = ImGuiNextWindowDataFlags_None; }$/;"	f	struct:ImGuiNextWindowData
ClearFonts	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::ClearFonts()$/;"	f	class:ImFontAtlas
ClearFreeMemory	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::ClearFreeMemory()$/;"	f	class:ImDrawList
ClearFreeMemory	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawListSplitter::ClearFreeMemory()$/;"	f	class:ImDrawListSplitter
ClearFreeMemory	lib/cimgui/imgui/imgui_internal.h	/^    void        ClearFreeMemory()           { TextW.clear(); TextA.clear(); InitialTextA.clear(); }$/;"	f	struct:ImGuiInputTextState
ClearFreeMemory	lib/cimgui/imgui/imgui_internal.h	/^    void ClearFreeMemory()  { for (int n = 0; n < IM_ARRAYSIZE(Layers); n++) Layers[n].clear(); }$/;"	f	struct:ImDrawDataBuilder
ClearInputCharacters	lib/cimgui/imgui/imgui.cpp	/^void ImGuiIO::ClearInputCharacters()$/;"	f	class:ImGuiIO
ClearInputData	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::ClearInputData()$/;"	f	class:ImFontAtlas
ClearLog	lib/cimgui/imgui/imgui_demo.cpp	/^    void    ClearLog()$/;"	f	struct:ExampleAppConsole
ClearOutputData	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFont::ClearOutputData()$/;"	f	class:ImFont
ClearSelection	lib/cimgui/imgui/imgui_internal.h	/^    void        ClearSelection()            { Stb.select_start = Stb.select_end = Stb.cursor; }$/;"	f	struct:ImGuiInputTextState
ClearTexData	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::ClearTexData()$/;"	f	class:ImFontAtlas
ClearText	lib/cimgui/imgui/imgui_internal.h	/^    void        ClearText()                 { CurLenW = CurLenA = 0; TextW[0] = 0; TextA[0] = 0; CursorClamp(); }$/;"	f	struct:ImGuiInputTextState
ClearValue	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkClearValue        ClearValue;$/;"	m	struct:ImGui_ImplVulkanH_Window
ClipRect	lib/cimgui/cimgui.h	/^    ImVec4 ClipRect;$/;"	m	struct:ImDrawCmd
ClipRect	lib/cimgui/generator/output/cimgui.h	/^    ImVec4 ClipRect;$/;"	m	struct:ImDrawCmd
ClipRect	lib/cimgui/imgui/imgui.h	/^    ImVec4          ClipRect;               \/\/ Clipping rectangle (x1, y1, x2, y2). Subtract ImDrawData->DisplayPos to get clipping rectangle in "viewport" coordinates$/;"	m	struct:ImDrawCmd
ClipRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  ClipRect;                           \/\/ Current clipping\/scissoring rectangle, evolve as we are using PushClipRect(), etc. == DrawList->clip_rect_stack.back().$/;"	m	struct:ImGuiWindow
ClipRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect              ClipRect;$/;"	m	struct:ImGuiColumnData
ClipRectFullscreen	lib/cimgui/imgui/imgui_internal.h	/^    ImVec4          ClipRectFullscreen;         \/\/ Value for PushClipRectFullscreen()$/;"	m	struct:ImDrawListSharedData
ClipWith	lib/cimgui/imgui/imgui_internal.h	/^    void        ClipWith(const ImRect& r)           { Min = ImMax(Min, r.Min); Max = ImMin(Max, r.Max); }                   \/\/ Simple version, may lead to an inverted rectangle, which is fine for Contains\/Overlaps test but not for display.$/;"	f	struct:ImRect
ClipWithFull	lib/cimgui/imgui/imgui_internal.h	/^    void        ClipWithFull(const ImRect& r)       { Min = ImClamp(Min, r.Min, r.Max); Max = ImClamp(Max, r.Min, r.Max); } \/\/ Full version, ensure both points are fully clipped.$/;"	f	struct:ImRect
ClipboardUserData	lib/cimgui/cimgui.h	/^    void* ClipboardUserData;$/;"	m	struct:ImGuiIO
ClipboardUserData	lib/cimgui/generator/output/cimgui.h	/^    void* ClipboardUserData;$/;"	m	struct:ImGuiIO
ClipboardUserData	lib/cimgui/imgui/imgui.h	/^    void*       ClipboardUserData;$/;"	m	struct:ImGuiIO
CloneOutput	lib/cimgui/imgui/imgui_draw.cpp	/^ImDrawList* ImDrawList::CloneOutput() const$/;"	f	class:ImDrawList
CloseButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::CloseButton(ImGuiID id, const ImVec2& pos)\/\/, float size)$/;"	f	class:ImGui
CloseCurrentPopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CloseCurrentPopup()$/;"	f	class:ImGui
CloseFont	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    void FreeTypeFont::CloseFont()$/;"	f	class:__anon112::FreeTypeFont
ClosePopupToLevel	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClosePopupToLevel(int remaining, bool restore_focus_to_window_under_popup)$/;"	f	class:ImGui
ClosePopupsOverWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClosePopupsOverWindow(ImGuiWindow* ref_window, bool restore_focus_to_window_under_popup)$/;"	f	class:ImGui
CmdBuffer	lib/cimgui/cimgui.h	/^    ImVector_ImDrawCmd CmdBuffer;$/;"	m	struct:ImDrawList
CmdBuffer	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImDrawCmd CmdBuffer;$/;"	m	struct:ImDrawList
CmdBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawCmd>     CmdBuffer;          \/\/ Draw commands. Typically 1 command = 1 GPU draw call, unless the command is a callback.$/;"	m	struct:ImDrawList
CmdLists	lib/cimgui/cimgui.h	/^    ImDrawList** CmdLists;$/;"	m	struct:ImDrawData
CmdLists	lib/cimgui/generator/output/cimgui.h	/^    ImDrawList** CmdLists;$/;"	m	struct:ImDrawData
CmdLists	lib/cimgui/imgui/imgui.h	/^    ImDrawList**    CmdLists;               \/\/ Array of ImDrawList* to render. The ImDrawList are owned by ImGuiContext and only pointed to from here.$/;"	m	struct:ImDrawData
CmdListsCount	lib/cimgui/cimgui.h	/^    int CmdListsCount;$/;"	m	struct:ImDrawData
CmdListsCount	lib/cimgui/generator/output/cimgui.h	/^    int CmdListsCount;$/;"	m	struct:ImDrawData
CmdListsCount	lib/cimgui/imgui/imgui.h	/^    int             CmdListsCount;          \/\/ Number of ImDrawList* to render$/;"	m	struct:ImDrawData
Codepoint	lib/cimgui/cimgui.h	/^    ImWchar Codepoint;$/;"	m	struct:ImFontGlyph
Codepoint	lib/cimgui/generator/output/cimgui.h	/^    ImWchar Codepoint;$/;"	m	struct:ImFontGlyph
Codepoint	lib/cimgui/imgui/imgui.h	/^    unsigned int    Codepoint : 31;     \/\/ 0x0000..0xFFFF$/;"	m	struct:ImFontGlyph
Codepoint	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    uint32_t            Codepoint;$/;"	m	struct:ImFontBuildSrcGlyphFT	file:
Col	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCol    Col;$/;"	m	struct:ImGuiColorMod
CollapseButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::CollapseButton(ImGuiID id, const ImVec2& pos)$/;"	f	class:ImGui
Collapsed	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Collapsed;                          \/\/ Set when collapsing window to become only title-bar$/;"	m	struct:ImGuiWindow
Collapsed	lib/cimgui/imgui/imgui_internal.h	/^    bool        Collapsed;$/;"	m	struct:ImGuiWindowSettings
CollapsedCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond                   CollapsedCond;$/;"	m	struct:ImGuiNextWindowData
CollapsedVal	lib/cimgui/imgui/imgui_internal.h	/^    bool                        CollapsedVal;$/;"	m	struct:ImGuiNextWindowData
CollapsingHeader	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::CollapsingHeader(const char* label, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
CollapsingHeader	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::CollapsingHeader(const char* label, bool* p_open, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
Color	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVec4      Color;          \/\/ An arbitrary variable associated to the document$/;"	m	struct:MyDocument	file:
ColorButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ColorButton(const char* desc_id, const ImVec4& col, ImGuiColorEditFlags flags, ImVec2 size)$/;"	f	class:ImGui
ColorButtonPosition	lib/cimgui/cimgui.h	/^    ImGuiDir ColorButtonPosition;$/;"	m	struct:ImGuiStyle
ColorButtonPosition	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir ColorButtonPosition;$/;"	m	struct:ImGuiStyle
ColorButtonPosition	lib/cimgui/imgui/imgui.h	/^    ImGuiDir    ColorButtonPosition;        \/\/ Side of the color button in the ColorEdit4 widget (left\/right). Defaults to ImGuiDir_Right.$/;"	m	struct:ImGuiStyle
ColorConvertFloat4ToU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::ColorConvertFloat4ToU32(const ImVec4& in)$/;"	f	class:ImGui
ColorConvertHSVtoRGB	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ColorConvertHSVtoRGB(float h, float s, float v, float& out_r, float& out_g, float& out_b)$/;"	f	class:ImGui
ColorConvertRGBtoHSV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ColorConvertRGBtoHSV(float r, float g, float b, float& out_h, float& out_s, float& out_v)$/;"	f	class:ImGui
ColorConvertU32ToFloat4	lib/cimgui/imgui/imgui.cpp	/^ImVec4 ImGui::ColorConvertU32ToFloat4(ImU32 in)$/;"	f	class:ImGui
ColorEdit3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ColorEdit3(const char* label, float col[3], ImGuiColorEditFlags flags)$/;"	f	class:ImGui
ColorEdit4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ColorEdit4(const char* label, float col[4], ImGuiColorEditFlags flags)$/;"	f	class:ImGui
ColorEditLastColor	lib/cimgui/imgui/imgui_internal.h	/^    float                   ColorEditLastColor[3];$/;"	m	struct:ImGuiContext
ColorEditLastHue	lib/cimgui/imgui/imgui_internal.h	/^    float                   ColorEditLastHue;                   \/\/ Backup of last Hue associated to LastColor[3], so we can restore Hue in lossy RGB<>HSV round trips$/;"	m	struct:ImGuiContext
ColorEditLastSat	lib/cimgui/imgui/imgui_internal.h	/^    float                   ColorEditLastSat;                   \/\/ Backup of last Saturation associated to LastColor[3], so we can restore Saturation in lossy RGB<>HSV round trips$/;"	m	struct:ImGuiContext
ColorEditOptions	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColorEditFlags     ColorEditOptions;                   \/\/ Store user options for color edit widgets$/;"	m	struct:ImGuiContext
ColorEditOptionsPopup	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::ColorEditOptionsPopup(const float* col, ImGuiColorEditFlags flags)$/;"	f	class:ImGui
ColorModifiers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiColorMod> ColorModifiers;                     \/\/ Stack for PushStyleColor()\/PopStyleColor()$/;"	m	struct:ImGuiContext
ColorPicker3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ColorPicker3(const char* label, float col[3], ImGuiColorEditFlags flags)$/;"	f	class:ImGui
ColorPicker4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ColorPicker4(const char* label, float col[4], ImGuiColorEditFlags flags, const float* ref_col)$/;"	f	class:ImGui
ColorPickerOptionsPopup	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::ColorPickerOptionsPopup(const float* ref_col, ImGuiColorEditFlags flags)$/;"	f	class:ImGui
ColorPickerRef	lib/cimgui/imgui/imgui_internal.h	/^    ImVec4                  ColorPickerRef;                     \/\/ Initial\/reference color at the time of opening the color picker.$/;"	m	struct:ImGuiContext
ColorTooltip	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::ColorTooltip(const char* text, const float* col, ImGuiColorEditFlags flags)$/;"	f	class:ImGui
Colors	lib/cimgui/cimgui.h	/^    ImVec4 Colors[ImGuiCol_COUNT];$/;"	m	struct:ImGuiStyle
Colors	lib/cimgui/generator/output/cimgui.h	/^    ImVec4 Colors[ImGuiCol_COUNT];$/;"	m	struct:ImGuiStyle
Colors	lib/cimgui/imgui/imgui.h	/^    ImVec4      Colors[ImGuiCol_COUNT];$/;"	m	struct:ImGuiStyle
Columns	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiColumnData> Columns;$/;"	m	struct:ImGuiColumns
Columns	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Columns(int columns_count, const char* id, bool border)$/;"	f	class:ImGui
ColumnsMinSpacing	lib/cimgui/cimgui.h	/^    float ColumnsMinSpacing;$/;"	m	struct:ImGuiStyle
ColumnsMinSpacing	lib/cimgui/generator/output/cimgui.h	/^    float ColumnsMinSpacing;$/;"	m	struct:ImGuiStyle
ColumnsMinSpacing	lib/cimgui/imgui/imgui.h	/^    float       ColumnsMinSpacing;          \/\/ Minimum horizontal spacing between two columns. Preferably > (FramePadding.x + 1).$/;"	m	struct:ImGuiStyle
ColumnsOffset	lib/cimgui/imgui/imgui_internal.h	/^    ImVec1                  ColumnsOffset;          \/\/ Offset to the current column (if ColumnsCurrent > 0). FIXME: This and the above should be a stack to allow use cases like Tree->Column->Tree. Need revamp columns API.$/;"	m	struct:ImGuiWindowTempData
ColumnsStorage	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiColumns>  ColumnsStorage;$/;"	m	struct:ImGuiWindow
CombineMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} CombineMode;$/;"	t	typeref:enum:__anon183
CombineModeComplement	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeComplement$/;"	e	enum:__anon183
CombineModeExclude	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeExclude,$/;"	e	enum:__anon183
CombineModeIntersect	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeIntersect,$/;"	e	enum:__anon183
CombineModeReplace	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeReplace,$/;"	e	enum:__anon183
CombineModeUnion	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeUnion,$/;"	e	enum:__anon183
CombineModeXor	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeXor,$/;"	e	enum:__anon183
Combo	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::Combo(const char* label, int* current_item, bool (*items_getter)(void*, int, const char**), void* data, int items_count, int popup_max_height_in_items)$/;"	f	class:ImGui
Combo	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::Combo(const char* label, int* current_item, const char* const items[], int items_count, int height_in_items)$/;"	f	class:ImGui
Combo	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::Combo(const char* label, int* current_item, const char* items_separated_by_zeros, int height_in_items)$/;"	f	class:ImGui
CommandAllocator	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^    ID3D12CommandAllocator* CommandAllocator;$/;"	m	struct:FrameContext	file:
CommandBuffer	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkCommandBuffer     CommandBuffer;$/;"	m	struct:ImGui_ImplVulkanH_Frame
CommandPool	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkCommandPool       CommandPool;$/;"	m	struct:ImGui_ImplVulkanH_Frame
Commands	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<const char*> Commands;$/;"	m	struct:ExampleAppConsole	file:
ConfigData	lib/cimgui/cimgui.h	/^    ImVector_ImFontConfig ConfigData;$/;"	m	struct:ImFontAtlas
ConfigData	lib/cimgui/cimgui.h	/^    const ImFontConfig* ConfigData;$/;"	m	struct:ImFont
ConfigData	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImFontConfig ConfigData;$/;"	m	struct:ImFontAtlas
ConfigData	lib/cimgui/generator/output/cimgui.h	/^    const ImFontConfig* ConfigData;$/;"	m	struct:ImFont
ConfigData	lib/cimgui/imgui/imgui.h	/^    ImVector<ImFontConfig>      ConfigData;         \/\/ Internal data$/;"	m	struct:ImFontAtlas
ConfigData	lib/cimgui/imgui/imgui.h	/^    const ImFontConfig*         ConfigData;         \/\/ 4-8   \/\/ in  \/\/            \/\/ Pointer within ContainerAtlas->ConfigData$/;"	m	struct:ImFont
ConfigDataCount	lib/cimgui/cimgui.h	/^    short ConfigDataCount;$/;"	m	struct:ImFont
ConfigDataCount	lib/cimgui/generator/output/cimgui.h	/^    short ConfigDataCount;$/;"	m	struct:ImFont
ConfigDataCount	lib/cimgui/imgui/imgui.h	/^    short                       ConfigDataCount;    \/\/ 2     \/\/ in  \/\/ ~ 1        \/\/ Number of ImFontConfig involved in creating this font. Bigger than 1 when merging multiple font sources into one ImFont.$/;"	m	struct:ImFont
ConfigFlags	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags ConfigFlags;$/;"	m	struct:ImGuiIO
ConfigFlags	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags ConfigFlags;$/;"	m	struct:ImGuiIO
ConfigFlags	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags   ConfigFlags;             \/\/ = 0              \/\/ See ImGuiConfigFlags_ enum. Set by user\/application. Gamepad\/keyboard navigation options, etc.$/;"	m	struct:ImGuiIO
ConfigInputTextCursorBlink	lib/cimgui/cimgui.h	/^    bool ConfigInputTextCursorBlink;$/;"	m	struct:ImGuiIO
ConfigInputTextCursorBlink	lib/cimgui/generator/output/cimgui.h	/^    bool ConfigInputTextCursorBlink;$/;"	m	struct:ImGuiIO
ConfigInputTextCursorBlink	lib/cimgui/imgui/imgui.h	/^    bool        ConfigInputTextCursorBlink;     \/\/ = true           \/\/ Set to false to disable blinking cursor, for users who consider it distracting. (was called: io.OptCursorBlink prior to 1.63)$/;"	m	struct:ImGuiIO
ConfigMacOSXBehaviors	lib/cimgui/cimgui.h	/^    bool ConfigMacOSXBehaviors;$/;"	m	struct:ImGuiIO
ConfigMacOSXBehaviors	lib/cimgui/generator/output/cimgui.h	/^    bool ConfigMacOSXBehaviors;$/;"	m	struct:ImGuiIO
ConfigMacOSXBehaviors	lib/cimgui/imgui/imgui.h	/^    bool        ConfigMacOSXBehaviors;          \/\/ = defined(__APPLE__) \/\/ OS X style: Text editing cursor movement using Alt instead of Ctrl, Shortcuts using Cmd\/Super instead of Ctrl, Line\/Text Start and End using Cmd+Arrows instead of Home\/End, Double click selects by word instead of selecting whole text, Multi-selection in lists uses Cmd\/Super instead of Ctrl (was called io.OptMacOSXBehaviors prior to 1.63)$/;"	m	struct:ImGuiIO
ConfigWindowsMemoryCompactTimer	lib/cimgui/cimgui.h	/^    float ConfigWindowsMemoryCompactTimer;$/;"	m	struct:ImGuiIO
ConfigWindowsMemoryCompactTimer	lib/cimgui/generator/output/cimgui.h	/^    float ConfigWindowsMemoryCompactTimer;$/;"	m	struct:ImGuiIO
ConfigWindowsMemoryCompactTimer	lib/cimgui/imgui/imgui.h	/^    float       ConfigWindowsMemoryCompactTimer;\/\/ = 60.0f          \/\/ [BETA] Compact window memory usage when unused. Set to -1.0f to disable.$/;"	m	struct:ImGuiIO
ConfigWindowsMoveFromTitleBarOnly	lib/cimgui/cimgui.h	/^    bool ConfigWindowsMoveFromTitleBarOnly;$/;"	m	struct:ImGuiIO
ConfigWindowsMoveFromTitleBarOnly	lib/cimgui/generator/output/cimgui.h	/^    bool ConfigWindowsMoveFromTitleBarOnly;$/;"	m	struct:ImGuiIO
ConfigWindowsMoveFromTitleBarOnly	lib/cimgui/imgui/imgui.h	/^    bool        ConfigWindowsMoveFromTitleBarOnly; \/\/ = false       \/\/ [BETA] Set to true to only allow moving windows when clicked+dragged from the title bar. Windows without a title bar are not affected.$/;"	m	struct:ImGuiIO
ConfigWindowsResizeFromEdges	lib/cimgui/cimgui.h	/^    bool ConfigWindowsResizeFromEdges;$/;"	m	struct:ImGuiIO
ConfigWindowsResizeFromEdges	lib/cimgui/generator/output/cimgui.h	/^    bool ConfigWindowsResizeFromEdges;$/;"	m	struct:ImGuiIO
ConfigWindowsResizeFromEdges	lib/cimgui/imgui/imgui.h	/^    bool        ConfigWindowsResizeFromEdges;   \/\/ = true           \/\/ Enable resizing of windows from their edges and from the lower-left corner. This requires (io.BackendFlags & ImGuiBackendFlags_HasMouseCursors) because it needs mouse cursor feedback. (This used to be a per-window ImGuiWindowFlags_ResizeFromAnySide flag)$/;"	m	struct:ImGuiIO
ContainerAtlas	lib/cimgui/cimgui.h	/^    ImFontAtlas* ContainerAtlas;$/;"	m	struct:ImFont
ContainerAtlas	lib/cimgui/generator/output/cimgui.h	/^    ImFontAtlas* ContainerAtlas;$/;"	m	struct:ImFont
ContainerAtlas	lib/cimgui/imgui/imgui.h	/^    ImFontAtlas*                ContainerAtlas;     \/\/ 4-8   \/\/ out \/\/            \/\/ What we has been loaded into$/;"	m	struct:ImFont
Contains	lib/cimgui/imgui/imgui_internal.h	/^    bool        Contains(const ImRect& r) const     { return r.Min.x >= Min.x && r.Min.y >= Min.y && r.Max.x <= Max.x && r.Max.y <= Max.y; }$/;"	f	struct:ImRect
Contains	lib/cimgui/imgui/imgui_internal.h	/^    bool        Contains(const ImVec2& p) const     { return p.x     >= Min.x && p.y     >= Min.y && p.x     <  Max.x && p.y     <  Max.y; }$/;"	f	struct:ImRect
Contains	lib/cimgui/imgui/imgui_internal.h	/^    bool        Contains(const T* p) const          { return (p >= Buf.Data && p < Buf.Data + Buf.Size); }$/;"	f	struct:ImPool
ContentRegionRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  ContentRegionRect;                  \/\/ FIXME: This is currently confusing\/misleading. It is essentially WorkRect but not handling of scrolling. We currently rely on it as right\/bottom aligned sizing operation need some size to rely on.$/;"	m	struct:ImGuiWindow
ContentSize	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ContentSize;                        \/\/ Size of contents\/scrollable client area (calculated from the extents reach of the cursor) from previous frame. Does not include window decoration or window padding.$/;"	m	struct:ImGuiWindow
ContentSizeExplicit	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ContentSizeExplicit;                \/\/ Size of contents\/scrollable client area explicitly request by the user via SetNextWindowContentSize().$/;"	m	struct:ImGuiWindow
ContentSizeVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                      ContentSizeVal;$/;"	m	struct:ImGuiNextWindowData
ContentWidth	lib/cimgui/imgui/imgui_internal.h	/^    float               ContentWidth;           \/\/ Width of actual contents, stored during BeginTabItem() call$/;"	m	struct:ImGuiTabItem
CornerPosN	lib/cimgui/imgui/imgui.cpp	/^    ImVec2  CornerPosN;$/;"	m	struct:ImGuiResizeGripDef	file:
Count	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    uint32_t            Count;$/;"	m	struct:ImGui_ImplVulkanH_WindowRenderBuffers	file:
Count	lib/cimgui/imgui/imgui.cpp	/^    ImU32           Count;$/;"	m	struct:ImGuiStyleVarInfo	file:
Count	lib/cimgui/imgui/imgui_internal.h	/^    int                 Count;$/;"	m	struct:ImGuiColumns
CountGrep	lib/cimgui/cimgui.h	/^    int CountGrep;$/;"	m	struct:ImGuiTextFilter
CountGrep	lib/cimgui/generator/output/cimgui.h	/^    int CountGrep;$/;"	m	struct:ImGuiTextFilter
CountGrep	lib/cimgui/imgui/imgui.h	/^    int                     CountGrep;$/;"	m	struct:ImGuiTextFilter
CreateContext	lib/cimgui/imgui/imgui.cpp	/^ImGuiContext* ImGui::CreateContext(ImFontAtlas* shared_font_atlas)$/;"	f	class:ImGui
CreateDeviceD3D	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^bool CreateDeviceD3D(HWND hWnd)$/;"	f
CreateDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^bool CreateDeviceD3D(HWND hWnd)$/;"	f
CreateDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^bool CreateDeviceD3D(HWND hWnd)$/;"	f
CreateDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^bool CreateDeviceD3D(HWND hWnd)$/;"	f
CreateDeviceD3D	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^bool CreateDeviceD3D(HWND hWnd)$/;"	f
CreateNewWindow	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* CreateNewWindow(const char* name, ImVec2 size, ImGuiWindowFlags flags)$/;"	f	file:
CreateNewWindowSettings	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindowSettings* ImGui::CreateNewWindowSettings(const char* name)$/;"	f	class:ImGui
CreateOrResizeBuffer	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static void CreateOrResizeBuffer(VkBuffer& buffer, VkDeviceMemory& buffer_memory, VkDeviceSize& p_buffer_size, size_t new_size, VkBufferUsageFlagBits usage)$/;"	f	file:
CreateRenderTarget	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^void CreateRenderTarget()$/;"	f
CreateRenderTarget	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^void CreateRenderTarget()$/;"	f
CreateRenderTarget	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^void CreateRenderTarget()$/;"	f
CreateRenderTarget	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^void CreateRenderTarget()$/;"	f
CurLenA	lib/cimgui/imgui/imgui_internal.h	/^    int                     CurLenW, CurLenA;       \/\/ we need to maintain our buffer length in both UTF-8 and wchar format. UTF-8 len is valid even if TextA is not.$/;"	m	struct:ImGuiInputTextState
CurLenW	lib/cimgui/imgui/imgui_internal.h	/^    int                     CurLenW, CurLenA;       \/\/ we need to maintain our buffer length in both UTF-8 and wchar format. UTF-8 len is valid even if TextA is not.$/;"	m	struct:ImGuiInputTextState
CurrFrameVisible	lib/cimgui/imgui/imgui_internal.h	/^    int                 CurrFrameVisible;$/;"	m	struct:ImGuiTabBar
CurrLineSize	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CurrLineSize;$/;"	m	struct:ImGuiWindowTempData
CurrLineTextBaseOffset	lib/cimgui/imgui/imgui_internal.h	/^    float                   CurrLineTextBaseOffset; \/\/ Baseline offset (0.0f by default on a new line, generally == style.FramePadding.y when a framed item has been added).$/;"	m	struct:ImGuiWindowTempData
Current	lib/cimgui/imgui/imgui_internal.h	/^    int                 Current;$/;"	m	struct:ImGuiColumns
CurrentColumns	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumns*           CurrentColumns;         \/\/ Current columns set$/;"	m	struct:ImGuiWindowTempData
CurrentSize	lib/cimgui/cimgui.h	/^    ImVec2 CurrentSize;$/;"	m	struct:ImGuiSizeCallbackData
CurrentSize	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 CurrentSize;$/;"	m	struct:ImGuiSizeCallbackData
CurrentSize	lib/cimgui/imgui/imgui.h	/^    ImVec2  CurrentSize;    \/\/ Read-only.   Current window size.$/;"	m	struct:ImGuiSizeCallbackData
CurrentTabBar	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabBar*                    CurrentTabBar;$/;"	m	struct:ImGuiContext
CurrentTabBarStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiPtrOrIndex>       CurrentTabBarStack;$/;"	m	struct:ImGuiContext
CurrentWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            CurrentWindow;                      \/\/ Window being drawn into$/;"	m	struct:ImGuiContext
CurrentWindowStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  CurrentWindowStack;$/;"	m	struct:ImGuiContext
CursorAnim	lib/cimgui/imgui/imgui_internal.h	/^    float                   CursorAnim;             \/\/ timer for cursor blink, reset on every user action so the cursor reappears immediately$/;"	m	struct:ImGuiInputTextState
CursorAnimReset	lib/cimgui/imgui/imgui_internal.h	/^    void        CursorAnimReset()           { CursorAnim = -0.30f; }                                   \/\/ After a user-input the cursor stays on for a while without blinking$/;"	f	struct:ImGuiInputTextState
CursorClamp	lib/cimgui/imgui/imgui_internal.h	/^    void        CursorClamp()               { Stb.cursor = ImMin(Stb.cursor, CurLenW); Stb.select_start = ImMin(Stb.select_start, CurLenW); Stb.select_end = ImMin(Stb.select_end, CurLenW); }$/;"	f	struct:ImGuiInputTextState
CursorFollow	lib/cimgui/imgui/imgui_internal.h	/^    bool                    CursorFollow;           \/\/ set when we want scrolling to follow the current cursor position (not always!)$/;"	m	struct:ImGuiInputTextState
CursorMaxPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorMaxPos;           \/\/ Used to implicitly calculate the size of our contents, always growing during the frame. Used to calculate window->ContentSize at the beginning of next frame$/;"	m	struct:ImGuiWindowTempData
CursorPos	lib/cimgui/cimgui.h	/^    int CursorPos;$/;"	m	struct:ImGuiInputTextCallbackData
CursorPos	lib/cimgui/generator/output/cimgui.h	/^    int CursorPos;$/;"	m	struct:ImGuiInputTextCallbackData
CursorPos	lib/cimgui/imgui/imgui.h	/^    int                 CursorPos;      \/\/                                      \/\/ Read-write   \/\/ [Completion,History,Always]$/;"	m	struct:ImGuiInputTextCallbackData
CursorPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorPos;              \/\/ Current emitting position, in absolute coordinates.$/;"	m	struct:ImGuiWindowTempData
CursorPosPrevLine	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorPosPrevLine;$/;"	m	struct:ImGuiWindowTempData
CursorStartPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorStartPos;         \/\/ Initial position after Begin(), generally ~ window position + WindowPadding.$/;"	m	struct:ImGuiWindowTempData
CurveTessellationTol	lib/cimgui/cimgui.h	/^    float CurveTessellationTol;$/;"	m	struct:ImGuiStyle
CurveTessellationTol	lib/cimgui/generator/output/cimgui.h	/^    float CurveTessellationTol;$/;"	m	struct:ImGuiStyle
CurveTessellationTol	lib/cimgui/imgui/imgui.h	/^    float       CurveTessellationTol;       \/\/ Tessellation tolerance when using PathBezierCurveTo() without a specific number of segments. Decrease for highly tessellated curves (higher quality, more polygons), increase to reduce quality.$/;"	m	struct:ImGuiStyle
CurveTessellationTol	lib/cimgui/imgui/imgui_internal.h	/^    float           CurveTessellationTol;       \/\/ Tessellation tolerance when using PathBezierCurveTo()$/;"	m	struct:ImDrawListSharedData
CustomRect	lib/cimgui/imgui/imgui.h	/^    typedef ImFontAtlasCustomRect    CustomRect;         \/\/ OBSOLETED in 1.72+$/;"	t	struct:ImFontAtlas
CustomRectIds	lib/cimgui/cimgui.h	/^    int CustomRectIds[1];$/;"	m	struct:ImFontAtlas
CustomRectIds	lib/cimgui/generator/output/cimgui.h	/^    int CustomRectIds[1];$/;"	m	struct:ImFontAtlas
CustomRectIds	lib/cimgui/imgui/imgui.h	/^    int                         CustomRectIds[1];   \/\/ Identifiers of custom texture rectangle used by ImFontAtlas\/ImDrawList$/;"	m	struct:ImFontAtlas
CustomRects	lib/cimgui/cimgui.h	/^    ImVector_ImFontAtlasCustomRect CustomRects;$/;"	m	struct:ImFontAtlas
CustomRects	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImFontAtlasCustomRect CustomRects;$/;"	m	struct:ImFontAtlas
CustomRects	lib/cimgui/imgui/imgui.h	/^    ImVector<ImFontAtlasCustomRect> CustomRects;    \/\/ Rectangles for packing custom texture data into the atlas.$/;"	m	struct:ImFontAtlas
D3DFVF_CUSTOMVERTEX	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	46;"	d	file:
DBT_DEVNODES_CHANGED	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	256;"	d	file:
DC	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindowTempData     DC;                                 \/\/ Temporary per-window data, reset at the beginning of the frame. This used to be called ImGuiDrawContext, hence the "DC" variable name.$/;"	m	struct:ImGuiWindow
DCC	lib/nuklear/demo/x11_opengl2/Makefile	/^DCC = gcc$/;"	m
DCC	lib/nuklear/demo/x11_opengl3/Makefile	/^DCC = gcc$/;"	m
DEC	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	496;"	d	file:
DEC	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	481;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	9;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	8;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	8;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	30;"	d	file:
DPI_AWARENESS_CONTEXT	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^DECLARE_HANDLE(DPI_AWARENESS_CONTEXT);$/;"	v
DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	376;"	d	file:
DPI_AWARENESS_CONTEXT_PER_MONITOR_AWARE_V2	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	379;"	d	file:
DTIME	lib/nuklear/demo/x11/main.c	22;"	d	file:
DTIME	lib/nuklear/demo/x11_rawfb/main.c	53;"	d	file:
DTIME	lib/nuklear/demo/x11_xft/main.c	22;"	d	file:
Data	lib/cimgui/cimgui.h	/^    ImVector_ImGuiStoragePair Data;$/;"	m	struct:ImGuiStorage
Data	lib/cimgui/cimgui.h	/^    void* Data;$/;"	m	struct:ImGuiPayload
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	m	struct:ImVector_ImDrawChannel
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	m	struct:ImVector_ImDrawCmd
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	m	struct:ImVector_ImDrawIdx
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	m	struct:ImVector_ImDrawVert
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	m	struct:ImVector_ImFontAtlasCustomRect
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	m	struct:ImVector_ImFontConfig
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	m	struct:ImVector_ImFontGlyph
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	m	struct:ImVector_ImFontPtr
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	m	struct:ImVector_ImGuiStoragePair
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	m	struct:ImVector_ImGuiTextRange
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	m	struct:ImVector_ImTextureID
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	m	struct:ImVector_ImU32
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	m	struct:ImVector_ImVec2
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	m	struct:ImVector_ImVec4
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	m	struct:ImVector_ImWchar
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	m	struct:ImVector_char
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	m	struct:ImVector_float
Data	lib/cimgui/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	m	struct:ImVector
Data	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImGuiStoragePair Data;$/;"	m	struct:ImGuiStorage
Data	lib/cimgui/generator/output/cimgui.h	/^    void* Data;$/;"	m	struct:ImGuiPayload
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	m	struct:ImVector_ImDrawChannel
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	m	struct:ImVector_ImDrawCmd
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	m	struct:ImVector_ImDrawIdx
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	m	struct:ImVector_ImDrawVert
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	m	struct:ImVector_ImFontAtlasCustomRect
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	m	struct:ImVector_ImFontConfig
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	m	struct:ImVector_ImFontGlyph
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	m	struct:ImVector_ImFontPtr
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	m	struct:ImVector_ImGuiStoragePair
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	m	struct:ImVector_ImGuiTextRange
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	m	struct:ImVector_ImTextureID
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	m	struct:ImVector_ImU32
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	m	struct:ImVector_ImVec2
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	m	struct:ImVector_ImVec4
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	m	struct:ImVector_ImWchar
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	m	struct:ImVector_char
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	m	struct:ImVector_float
Data	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	m	struct:ImVector
Data	lib/cimgui/imgui/imgui.h	/^    ImVector<ImGuiStoragePair>      Data;$/;"	m	struct:ImGuiStorage
Data	lib/cimgui/imgui/imgui.h	/^    T*                  Data;$/;"	m	struct:ImVector
Data	lib/cimgui/imgui/imgui.h	/^    void*           Data;               \/\/ Data (copied and owned by dear imgui)$/;"	m	struct:ImGuiPayload
DataFrameCount	lib/cimgui/cimgui.h	/^    int DataFrameCount;$/;"	m	struct:ImGuiPayload
DataFrameCount	lib/cimgui/generator/output/cimgui.h	/^    int DataFrameCount;$/;"	m	struct:ImGuiPayload
DataFrameCount	lib/cimgui/imgui/imgui.h	/^    int             DataFrameCount;     \/\/ Data timestamp$/;"	m	struct:ImGuiPayload
DataSize	lib/cimgui/cimgui.h	/^    int DataSize;$/;"	m	struct:ImGuiPayload
DataSize	lib/cimgui/generator/output/cimgui.h	/^    int DataSize;$/;"	m	struct:ImGuiPayload
DataSize	lib/cimgui/imgui/imgui.h	/^    int             DataSize;           \/\/ Data size$/;"	m	struct:ImGuiPayload
DataType	lib/cimgui/cimgui.h	/^    char DataType[32+1];$/;"	m	struct:ImGuiPayload
DataType	lib/cimgui/generator/output/cimgui.h	/^    char DataType[32+1];$/;"	m	struct:ImGuiPayload
DataType	lib/cimgui/imgui/imgui.h	/^    char            DataType[32+1];     \/\/ Data type tag (short user-supplied string, 32 characters max)$/;"	m	struct:ImGuiPayload
DataTypeApplyOp	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::DataTypeApplyOp(ImGuiDataType data_type, int op, void* output, void* arg1, const void* arg2)$/;"	f	class:ImGui
DataTypeApplyOpFromText	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DataTypeApplyOpFromText(const char* buf, const char* initial_value_buf, ImGuiDataType data_type, void* p_data, const char* format)$/;"	f	class:ImGui
DataTypeFormatString	lib/cimgui/imgui/imgui_widgets.cpp	/^int ImGui::DataTypeFormatString(char* buf, int buf_size, ImGuiDataType data_type, const void* p_data, const char* format)$/;"	f	class:ImGui
DataTypeGetInfo	lib/cimgui/imgui/imgui_widgets.cpp	/^const ImGuiDataTypeInfo* ImGui::DataTypeGetInfo(ImGuiDataType data_type)$/;"	f	class:ImGui
DeIndexAllBuffers	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawData::DeIndexAllBuffers()$/;"	f	class:ImDrawData
DebugCheckVersionAndDataLayout	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DebugCheckVersionAndDataLayout(const char* version, size_t sz_io, size_t sz_style, size_t sz_vec2, size_t sz_vec4, size_t sz_vert, size_t sz_idx)$/;"	f	class:ImGui
DebugDrawItemRect	lib/cimgui/imgui/imgui_internal.h	/^    inline void             DebugDrawItemRect(ImU32 col = IM_COL32(255,0,0,255))    { ImGuiContext& g = *GImGui; ImGuiWindow* window = g.CurrentWindow; GetForegroundDrawList(window)->AddRect(window->DC.LastItemRect.Min, window->DC.LastItemRect.Max, col); }$/;"	f	namespace:ImGui
DebugEventCallback	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    DebugEventProc DebugEventCallback;$/;"	m	struct:__anon187
DebugEventLevel	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} DebugEventLevel;$/;"	t	typeref:enum:__anon186
DebugEventLevelFatal	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    DebugEventLevelFatal,$/;"	e	enum:__anon186
DebugEventLevelWarning	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    DebugEventLevelWarning$/;"	e	enum:__anon186
DebugEventProc	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef VOID (WINAPI *DebugEventProc)(DebugEventLevel level, CHAR *message);$/;"	t
DebugItemPickerActive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    DebugItemPickerActive;$/;"	m	struct:ImGuiContext
DebugItemPickerBreakId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 DebugItemPickerBreakId;             \/\/ Will call IM_DEBUG_BREAK() when encountering this id$/;"	m	struct:ImGuiContext
DebugStartItemPicker	lib/cimgui/imgui/imgui_internal.h	/^    inline void             DebugStartItemPicker()                                  { ImGuiContext& g = *GImGui; g.DebugItemPickerActive = true; }$/;"	f	namespace:ImGui
DeclColumns	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGuiMenuColumns::DeclColumns(float w0, float w1, float w2) \/\/ not using va_arg because they promote float to double$/;"	f	class:ImGuiMenuColumns
Decode85	lib/cimgui/imgui/imgui_draw.cpp	/^static void         Decode85(const unsigned char* src, unsigned char* dst)$/;"	f	file:
Decode85Byte	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int Decode85Byte(char c)                                    { return c >= '\\\\' ? c-36 : c-35; }$/;"	f	file:
DefsByStruct	lib/cimgui/generator/generator.lua	/^local function DefsByStruct(FP)$/;"	f
DefsByStruct	lib/cimgui/generator/generator_old.lua	/^local function DefsByStruct(FP)$/;"	f
DeleteChars	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGuiInputTextCallbackData::DeleteChars(int pos, int bytes_count)$/;"	f	class:ImGuiInputTextCallbackData
Delivery	lib/cimgui/cimgui.h	/^    bool Delivery;$/;"	m	struct:ImGuiPayload
Delivery	lib/cimgui/generator/output/cimgui.h	/^    bool Delivery;$/;"	m	struct:ImGuiPayload
Delivery	lib/cimgui/imgui/imgui.h	/^    bool            Delivery;           \/\/ Set when AcceptDragDropPayload() was called and mouse button is released over the target item.$/;"	m	struct:ImGuiPayload
DeltaTime	lib/cimgui/cimgui.h	/^    float DeltaTime;$/;"	m	struct:ImGuiIO
DeltaTime	lib/cimgui/generator/output/cimgui.h	/^    float DeltaTime;$/;"	m	struct:ImGuiIO
DeltaTime	lib/cimgui/imgui/imgui.h	/^    float       DeltaTime;                      \/\/ = 1.0f\/60.0f     \/\/ Time elapsed since last frame, in seconds.$/;"	m	struct:ImGuiIO
Descender	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       Descender;          \/\/ The extents below the baseline in pixels (typically negative).$/;"	m	struct:__anon112::FontInfo	file:
Descent	lib/cimgui/cimgui.h	/^    float Ascent, Descent;$/;"	m	struct:ImFont
Descent	lib/cimgui/generator/output/cimgui.h	/^    float Ascent, Descent;$/;"	m	struct:ImFont
Descent	lib/cimgui/imgui/imgui.h	/^    float                       Ascent, Descent;    \/\/ 4+4   \/\/ out \/\/            \/\/ Ascent: distance from top to bottom of e.g. 'A' [0..FontSize]$/;"	m	struct:ImFont
DescriptorPool	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkDescriptorPool    DescriptorPool;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
DesiredSize	lib/cimgui/cimgui.h	/^    ImVec2 DesiredSize;$/;"	m	struct:ImGuiSizeCallbackData
DesiredSize	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DesiredSize;$/;"	m	struct:ImGuiSizeCallbackData
DesiredSize	lib/cimgui/imgui/imgui.h	/^    ImVec2  DesiredSize;    \/\/ Read-write.  Desired size, based on user's mouse position. Write to this field to restrain resizing.$/;"	m	struct:ImGuiSizeCallbackData
DestroyContext	lib/cimgui/imgui/imgui.cpp	/^void ImGui::DestroyContext(ImGuiContext* ctx)$/;"	f	class:ImGui
Device	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkDevice            Device;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
DimBgRatio	lib/cimgui/imgui/imgui_internal.h	/^    float                   DimBgRatio;                         \/\/ 0.0..1.0 animation when fading in a dimming background (for modal window and CTRL+TAB list)$/;"	m	struct:ImGuiContext
Dirty	lib/cimgui/imgui/imgui_demo.cpp	/^    bool        Dirty;          \/\/ Set when the document has been modified$/;"	m	struct:MyDocument	file:
DirtyLookupTables	lib/cimgui/cimgui.h	/^    bool DirtyLookupTables;$/;"	m	struct:ImFont
DirtyLookupTables	lib/cimgui/generator/output/cimgui.h	/^    bool DirtyLookupTables;$/;"	m	struct:ImFont
DirtyLookupTables	lib/cimgui/imgui/imgui.h	/^    bool                        DirtyLookupTables;  \/\/ 1     \/\/ out \/\/$/;"	m	struct:ImFont
DisplayContents	lib/cimgui/imgui/imgui_demo.cpp	/^    static void DisplayContents(MyDocument* doc)$/;"	f	struct:MyDocument
DisplayContextMenu	lib/cimgui/imgui/imgui_demo.cpp	/^    static void DisplayContextMenu(MyDocument* doc)$/;"	f	struct:MyDocument
DisplayEnd	lib/cimgui/cimgui.h	/^    int DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayEnd	lib/cimgui/generator/output/cimgui.h	/^    int DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayEnd	lib/cimgui/imgui/imgui.h	/^    int     DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayFramebufferScale	lib/cimgui/cimgui.h	/^    ImVec2 DisplayFramebufferScale;$/;"	m	struct:ImGuiIO
DisplayFramebufferScale	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DisplayFramebufferScale;$/;"	m	struct:ImGuiIO
DisplayFramebufferScale	lib/cimgui/imgui/imgui.h	/^    ImVec2      DisplayFramebufferScale;        \/\/ = (1, 1)         \/\/ For retina display or other situations where window coordinates are different from framebuffer coordinates. This generally ends up in ImDrawData::FramebufferScale.$/;"	m	struct:ImGuiIO
DisplayOffset	lib/cimgui/cimgui.h	/^    ImVec2 DisplayOffset;$/;"	m	struct:ImFont
DisplayOffset	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DisplayOffset;$/;"	m	struct:ImFont
DisplayOffset	lib/cimgui/imgui/imgui.h	/^    ImVec2                      DisplayOffset;      \/\/ 8     \/\/ in  \/\/ = (0,0)    \/\/ Offset font rendering by xx pixels$/;"	m	struct:ImFont
DisplayPos	lib/cimgui/cimgui.h	/^    ImVec2 DisplayPos;$/;"	m	struct:ImDrawData
DisplayPos	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DisplayPos;$/;"	m	struct:ImDrawData
DisplayPos	lib/cimgui/imgui/imgui.h	/^    ImVec2          DisplayPos;             \/\/ Upper-left position of the viewport to render (== upper-left of the orthogonal projection matrix to use)$/;"	m	struct:ImDrawData
DisplaySafeAreaPadding	lib/cimgui/cimgui.h	/^    ImVec2 DisplaySafeAreaPadding;$/;"	m	struct:ImGuiStyle
DisplaySafeAreaPadding	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DisplaySafeAreaPadding;$/;"	m	struct:ImGuiStyle
DisplaySafeAreaPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      DisplaySafeAreaPadding;     \/\/ If you cannot see the edges of your screen (e.g. on a TV) increase the safe area padding. Apply to popups\/tooltips as well regular windows. NB: Prefer configuring your TV sets correctly!$/;"	m	struct:ImGuiStyle
DisplaySize	lib/cimgui/cimgui.h	/^    ImVec2 DisplaySize;$/;"	m	struct:ImDrawData
DisplaySize	lib/cimgui/cimgui.h	/^    ImVec2 DisplaySize;$/;"	m	struct:ImGuiIO
DisplaySize	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DisplaySize;$/;"	m	struct:ImDrawData
DisplaySize	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DisplaySize;$/;"	m	struct:ImGuiIO
DisplaySize	lib/cimgui/imgui/imgui.h	/^    ImVec2          DisplaySize;            \/\/ Size of the viewport to render (== io.DisplaySize for the main viewport) (DisplayPos + DisplaySize == lower-right of the orthogonal projection matrix to use)$/;"	m	struct:ImDrawData
DisplaySize	lib/cimgui/imgui/imgui.h	/^    ImVec2      DisplaySize;                    \/\/ <unset>          \/\/ Main display size, in pixels.$/;"	m	struct:ImGuiIO
DisplayStart	lib/cimgui/cimgui.h	/^    int DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayStart	lib/cimgui/generator/output/cimgui.h	/^    int DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayStart	lib/cimgui/imgui/imgui.h	/^    int     DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper
DisplayWindowPadding	lib/cimgui/cimgui.h	/^    ImVec2 DisplayWindowPadding;$/;"	m	struct:ImGuiStyle
DisplayWindowPadding	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 DisplayWindowPadding;$/;"	m	struct:ImGuiStyle
DisplayWindowPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      DisplayWindowPadding;       \/\/ Window position are clamped to be visible within the display area by at least this amount. Only applies to regular windows.$/;"	m	struct:ImGuiStyle
DistAxial	lib/cimgui/imgui/imgui_internal.h	/^    float           DistAxial;$/;"	m	struct:ImGuiNavMoveResult
DistBox	lib/cimgui/imgui/imgui_internal.h	/^    float           DistBox;            \/\/ Best candidate box distance to current NavId$/;"	m	struct:ImGuiNavMoveResult
DistCenter	lib/cimgui/imgui/imgui_internal.h	/^    float           DistCenter;         \/\/ Best candidate center distance to current NavId$/;"	m	struct:ImGuiNavMoveResult
DoForceClose	lib/cimgui/imgui/imgui_demo.cpp	/^    void DoForceClose() { Open = false; Dirty = false; }$/;"	f	struct:MyDocument
DoOpen	lib/cimgui/imgui/imgui_demo.cpp	/^    void DoOpen()       { Open = true; }$/;"	f	struct:MyDocument
DoQueueClose	lib/cimgui/imgui/imgui_demo.cpp	/^    void DoQueueClose() { WantClose = true; }$/;"	f	struct:MyDocument
DoSave	lib/cimgui/imgui/imgui_demo.cpp	/^    void DoSave()       { Dirty = false; }$/;"	f	struct:MyDocument
Documents	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<MyDocument> Documents;$/;"	m	struct:ExampleAppDocuments	file:
DragBehavior	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragBehavior(ImGuiID id, ImGuiDataType data_type, void* p_v, float v_speed, const void* p_min, const void* p_max, const char* format, float power, ImGuiDragFlags flags)$/;"	f	class:ImGui
DragBehaviorT	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragBehaviorT(ImGuiDataType data_type, TYPE* v, float v_speed, const TYPE v_min, const TYPE v_max, const char* format, float power, ImGuiDragFlags flags)$/;"	f	class:ImGui
DragCurrentAccum	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragCurrentAccum;                   \/\/ Accumulator for dragging modification. Always high-precision, not rounded by end-user precision settings$/;"	m	struct:ImGuiContext
DragCurrentAccumDirty	lib/cimgui/imgui/imgui_internal.h	/^    bool                    DragCurrentAccumDirty;$/;"	m	struct:ImGuiContext
DragDropAcceptFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDragDropFlags      DragDropAcceptFlags;$/;"	m	struct:ImGuiContext
DragDropAcceptFrameCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     DragDropAcceptFrameCount;           \/\/ Last time a target expressed a desire to accept the source$/;"	m	struct:ImGuiContext
DragDropAcceptIdCurr	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 DragDropAcceptIdCurr;               \/\/ Target item id (set at the time of accepting the payload)$/;"	m	struct:ImGuiContext
DragDropAcceptIdCurrRectSurface	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragDropAcceptIdCurrRectSurface;    \/\/ Target item surface (we resolve overlapping targets by prioritizing the smaller surface)$/;"	m	struct:ImGuiContext
DragDropAcceptIdPrev	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 DragDropAcceptIdPrev;               \/\/ Target item id from previous frame (we need to store this to allow for overlapping drag and drop targets)$/;"	m	struct:ImGuiContext
DragDropActive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    DragDropActive;$/;"	m	struct:ImGuiContext
DragDropMouseButton	lib/cimgui/imgui/imgui_internal.h	/^    int                     DragDropMouseButton;$/;"	m	struct:ImGuiContext
DragDropPayload	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPayload            DragDropPayload;$/;"	m	struct:ImGuiContext
DragDropPayloadBufHeap	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<unsigned char> DragDropPayloadBufHeap;             \/\/ We don't expose the ImVector<> directly, ImGuiPayload only holds pointer+size$/;"	m	struct:ImGuiContext
DragDropPayloadBufLocal	lib/cimgui/imgui/imgui_internal.h	/^    unsigned char           DragDropPayloadBufLocal[16];        \/\/ Local buffer for small payloads$/;"	m	struct:ImGuiContext
DragDropSourceFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDragDropFlags      DragDropSourceFlags;$/;"	m	struct:ImGuiContext
DragDropSourceFrameCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     DragDropSourceFrameCount;$/;"	m	struct:ImGuiContext
DragDropTargetId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 DragDropTargetId;$/;"	m	struct:ImGuiContext
DragDropTargetRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  DragDropTargetRect;                 \/\/ Store rectangle of current target candidate (we favor small targets when overlapping)$/;"	m	struct:ImGuiContext
DragDropWithinSourceOrTarget	lib/cimgui/imgui/imgui_internal.h	/^    bool                    DragDropWithinSourceOrTarget;       \/\/ Set when within a BeginDragDropXXX\/EndDragDropXXX block.$/;"	m	struct:ImGuiContext
DragFloat	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragFloat(const char* label, float* v, float v_speed, float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
DragFloat2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragFloat2(const char* label, float v[2], float v_speed, float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
DragFloat3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragFloat3(const char* label, float v[3], float v_speed, float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
DragFloat4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragFloat4(const char* label, float v[4], float v_speed, float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
DragFloatRange2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragFloatRange2(const char* label, float* v_current_min, float* v_current_max, float v_speed, float v_min, float v_max, const char* format, const char* format_max, float power)$/;"	f	class:ImGui
DragInt	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragInt(const char* label, int* v, float v_speed, int v_min, int v_max, const char* format)$/;"	f	class:ImGui
DragInt2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragInt2(const char* label, int v[2], float v_speed, int v_min, int v_max, const char* format)$/;"	f	class:ImGui
DragInt3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragInt3(const char* label, int v[3], float v_speed, int v_min, int v_max, const char* format)$/;"	f	class:ImGui
DragInt4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragInt4(const char* label, int v[4], float v_speed, int v_min, int v_max, const char* format)$/;"	f	class:ImGui
DragIntRange2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragIntRange2(const char* label, int* v_current_min, int* v_current_max, float v_speed, int v_min, int v_max, const char* format, const char* format_max)$/;"	f	class:ImGui
DragScalar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragScalar(const char* label, ImGuiDataType data_type, void* p_data, float v_speed, const void* p_min, const void* p_max, const char* format, float power)$/;"	f	class:ImGui
DragScalarN	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::DragScalarN(const char* label, ImGuiDataType data_type, void* p_data, int components, float v_speed, const void* p_min, const void* p_max, const char* format, float power)$/;"	f	class:ImGui
DragSpeedDefaultRatio	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragSpeedDefaultRatio;              \/\/ If speed == 0.0f, uses (max-min) * DragSpeedDefaultRatio$/;"	m	struct:ImGuiContext
Draw	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiTextFilter::Draw(const char* label, float width)$/;"	f	class:ImGuiTextFilter
Draw	lib/cimgui/imgui/imgui_demo.cpp	/^    void    Draw(const char* title, bool* p_open = NULL)$/;"	f	struct:ExampleAppLog
Draw	lib/cimgui/imgui/imgui_demo.cpp	/^    void    Draw(const char* title, bool* p_open)$/;"	f	struct:ExampleAppConsole
DrawData	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawData              DrawData;                           \/\/ Main ImDrawData instance to pass render information to the user$/;"	m	struct:ImGuiContext
DrawDataBuilder	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawDataBuilder       DrawDataBuilder;$/;"	m	struct:ImGuiContext
DrawList	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawList*             DrawList;                           \/\/ == &DrawListInst (for backward compatibility reason with code using imgui_internal.h we keep this a pointer)$/;"	m	struct:ImGuiWindow
DrawListInst	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawList              DrawListInst;$/;"	m	struct:ImGuiWindow
DrawListSharedData	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawListSharedData    DrawListSharedData;$/;"	m	struct:ImGuiContext
DstFont	lib/cimgui/cimgui.h	/^    ImFont* DstFont;$/;"	m	struct:ImFontConfig
DstFont	lib/cimgui/generator/output/cimgui.h	/^    ImFont* DstFont;$/;"	m	struct:ImFontConfig
DstFont	lib/cimgui/imgui/imgui.h	/^    ImFont*         DstFont;$/;"	m	struct:ImFontConfig
DstIndex	lib/cimgui/imgui/imgui_draw.cpp	/^    int                 DstIndex;           \/\/ Index into atlas->Fonts[] and dst_tmp_array[]$/;"	m	struct:ImFontBuildSrcData	file:
DstIndex	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    int                 DstIndex;           \/\/ Index into atlas->Fonts[] and dst_tmp_array[]$/;"	m	struct:ImFontBuildSrcDataFT	file:
Dummy	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Dummy(const ImVec2& size)$/;"	f	class:ImGui
E	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anon22
E	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
ECHO_MESSAGE	lib/cimgui/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/Makefile	/^	ECHO_MESSAGE = "Windows"$/;"	m
ECHO_MESSAGE	lib/cimgui/Makefile	/^	ECHO_MESSAGE = "macOS"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^	ECHO_MESSAGE = "MinGW"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^	ECHO_MESSAGE = "MinGW"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^	ECHO_MESSAGE = "MinGW"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_null/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_null/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_null/Makefile	/^	ECHO_MESSAGE = "MinGW"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^	ECHO_MESSAGE = "MinGW"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^   ECHO_MESSAGE = "MinGW"$/;"	m
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EXE	lib/cimgui/imgui/examples/example_emscripten/Makefile	/^EXE = example_emscripten.html$/;"	m
EXE	lib/cimgui/imgui/examples/example_glfw_metal/Makefile	/^EXE = example_glfw_metal$/;"	m
EXE	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^EXE = example_glfw_opengl2$/;"	m
EXE	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^EXE = example_glfw_opengl3$/;"	m
EXE	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^EXE = example_glut_opengl2$/;"	m
EXE	lib/cimgui/imgui/examples/example_null/Makefile	/^EXE = example_null$/;"	m
EXE	lib/cimgui/imgui/examples/example_sdl_metal/Makefile	/^EXE = example_sdl_metal$/;"	m
EXE	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^EXE = example_sdl_opengl2$/;"	m
EXE	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^EXE = example_sdl_opengl3$/;"	m
EXTERN	lib/cimgui/cimgui.h	21;"	d
EXTERN	lib/cimgui/cimgui.h	25;"	d
EXTERN	lib/cimgui/generator/cimgui_template.h	19;"	d
EXTERN	lib/cimgui/generator/cimgui_template.h	23;"	d
EXTERN	lib/cimgui/generator/output/cimgui.h	21;"	d
EXTERN	lib/cimgui/generator/output/cimgui.h	25;"	d
EXTRA_WARNINGS	lib/cimgui/imgui/examples/example_null/Makefile	/^EXTRA_WARNINGS ?= 0$/;"	m
ElemCount	lib/cimgui/cimgui.h	/^    unsigned int ElemCount;$/;"	m	struct:ImDrawCmd
ElemCount	lib/cimgui/generator/output/cimgui.h	/^    unsigned int ElemCount;$/;"	m	struct:ImDrawCmd
ElemCount	lib/cimgui/imgui/imgui.h	/^    unsigned int    ElemCount;              \/\/ Number of indices (multiple of 3) to be rendered as triangles. Vertices are stored in the callee ImDrawList's vtx_buffer[] array, indices in idx_buffer[].$/;"	m	struct:ImDrawCmd
EllipsisChar	lib/cimgui/cimgui.h	/^    ImWchar EllipsisChar;$/;"	m	struct:ImFont
EllipsisChar	lib/cimgui/cimgui.h	/^    ImWchar EllipsisChar;$/;"	m	struct:ImFontConfig
EllipsisChar	lib/cimgui/generator/output/cimgui.h	/^    ImWchar EllipsisChar;$/;"	m	struct:ImFont
EllipsisChar	lib/cimgui/generator/output/cimgui.h	/^    ImWchar EllipsisChar;$/;"	m	struct:ImFontConfig
EllipsisChar	lib/cimgui/imgui/imgui.h	/^    ImWchar                     EllipsisChar;       \/\/ 2     \/\/ out \/\/ = -1       \/\/ Character used for ellipsis rendering.$/;"	m	struct:ImFont
EllipsisChar	lib/cimgui/imgui/imgui.h	/^    ImWchar         EllipsisChar;           \/\/ -1       \/\/ Explicitly specify unicode codepoint of ellipsis character. When fonts are being merged first specified ellipsis will be used.$/;"	m	struct:ImFontConfig
EmitItem	lib/cimgui/imgui/imgui_internal.h	/^    bool        EmitItem;$/;"	m	struct:ImGuiGroupData
EmptyString	lib/cimgui/imgui/imgui.cpp	/^char ImGuiTextBuffer::EmptyString[1] = { 0 };$/;"	m	class:ImGuiTextBuffer	file:
EmptyString	lib/cimgui/imgui/imgui.h	/^    IMGUI_API static char EmptyString[1];$/;"	m	struct:ImGuiTextBuffer
Encode85Byte	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^char Encode85Byte(unsigned int x)$/;"	f
End	lib/cimgui/imgui/imgui.cpp	/^void ImGui::End()$/;"	f	class:ImGui
End	lib/cimgui/imgui/imgui.cpp	/^void ImGuiListClipper::End()$/;"	f	class:ImGuiListClipper
EndChild	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndChild()$/;"	f	class:ImGui
EndChildFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndChildFrame()$/;"	f	class:ImGui
EndColumns	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::EndColumns()$/;"	f	class:ImGui
EndCombo	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::EndCombo()$/;"	f	class:ImGui
EndDragDropSource	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndDragDropSource()$/;"	f	class:ImGui
EndDragDropTarget	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndDragDropTarget()$/;"	f	class:ImGui
EndFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndFrame()$/;"	f	class:ImGui
EndGroup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndGroup()$/;"	f	class:ImGui
EndMainMenuBar	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::EndMainMenuBar()$/;"	f	class:ImGui
EndMenu	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::EndMenu()$/;"	f	class:ImGui
EndMenuBar	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::EndMenuBar()$/;"	f	class:ImGui
EndPopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndPopup()$/;"	f	class:ImGui
EndTabBar	lib/cimgui/imgui/imgui_widgets.cpp	/^void    ImGui::EndTabBar()$/;"	f	class:ImGui
EndTabItem	lib/cimgui/imgui/imgui_widgets.cpp	/^void    ImGui::EndTabItem()$/;"	f	class:ImGui
EndTooltip	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndTooltip()$/;"	f	class:ImGui
ErrorCheckBeginEndCompareStacksSize	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::ErrorCheckBeginEndCompareStacksSize(ImGuiWindow* window, bool write)$/;"	f	class:ImGui
ErrorCheckEndFrame	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::ErrorCheckEndFrame()$/;"	f	class:ImGui
EventChar	lib/cimgui/cimgui.h	/^    ImWchar EventChar;$/;"	m	struct:ImGuiInputTextCallbackData
EventChar	lib/cimgui/generator/output/cimgui.h	/^    ImWchar EventChar;$/;"	m	struct:ImGuiInputTextCallbackData
EventChar	lib/cimgui/imgui/imgui.h	/^    ImWchar             EventChar;      \/\/ Character input                      \/\/ Read-write   \/\/ [CharFilter] Replace character with another one, or set to zero to drop. return 1 is equivalent to setting EventChar=0;$/;"	m	struct:ImGuiInputTextCallbackData
EventFlag	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags EventFlag;$/;"	m	struct:ImGuiInputTextCallbackData
EventFlag	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags EventFlag;$/;"	m	struct:ImGuiInputTextCallbackData
EventFlag	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags EventFlag;      \/\/ One ImGuiInputTextFlags_Callback*    \/\/ Read-only$/;"	m	struct:ImGuiInputTextCallbackData
EventKey	lib/cimgui/cimgui.h	/^    ImGuiKey EventKey;$/;"	m	struct:ImGuiInputTextCallbackData
EventKey	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey EventKey;$/;"	m	struct:ImGuiInputTextCallbackData
EventKey	lib/cimgui/imgui/imgui.h	/^    ImGuiKey            EventKey;       \/\/ Key pressed (Up\/Down\/TAB)            \/\/ Read-only    \/\/ [Completion,History]$/;"	m	struct:ImGuiInputTextCallbackData
ExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^    ExampleAppConsole()$/;"	f	struct:ExampleAppConsole
ExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^struct ExampleAppConsole$/;"	s	file:
ExampleAppDocuments	lib/cimgui/imgui/imgui_demo.cpp	/^    ExampleAppDocuments()$/;"	f	struct:ExampleAppDocuments
ExampleAppDocuments	lib/cimgui/imgui/imgui_demo.cpp	/^struct ExampleAppDocuments$/;"	s	file:
ExampleAppLog	lib/cimgui/imgui/imgui_demo.cpp	/^    ExampleAppLog()$/;"	f	struct:ExampleAppLog
ExampleAppLog	lib/cimgui/imgui/imgui_demo.cpp	/^struct ExampleAppLog$/;"	s	file:
ExecCommand	lib/cimgui/imgui/imgui_demo.cpp	/^    void    ExecCommand(const char* command_line)$/;"	f	struct:ExampleAppConsole
Expand	lib/cimgui/imgui/imgui_internal.h	/^    void        Expand(const ImVec2& amount)        { Min.x -= amount.x; Min.y -= amount.y; Max.x += amount.x; Max.y += amount.y; }$/;"	f	struct:ImRect
Expand	lib/cimgui/imgui/imgui_internal.h	/^    void        Expand(const float amount)          { Min.x -= amount;   Min.y -= amount;   Max.x += amount;   Max.y += amount; }$/;"	f	struct:ImRect
FAST_BITS	lib/nuklear/example/stb_image.h	1457;"	d
FILE_BMP	lib/nuklear/example/file_browser.c	/^    FILE_BMP,$/;"	e	enum:file_types	file:
FILE_CPP_HEADER	lib/nuklear/example/file_browser.c	/^    FILE_CPP_HEADER,$/;"	e	enum:file_types	file:
FILE_CPP_SOURCE	lib/nuklear/example/file_browser.c	/^    FILE_CPP_SOURCE,$/;"	e	enum:file_types	file:
FILE_C_SOURCE	lib/nuklear/example/file_browser.c	/^    FILE_C_SOURCE,$/;"	e	enum:file_types	file:
FILE_DEF	lib/nuklear/example/file_browser.c	/^FILE_DEF(enum file_types type, const char *suffix, enum file_groups group)$/;"	f	file:
FILE_DEFAULT	lib/nuklear/example/file_browser.c	/^    FILE_DEFAULT,$/;"	e	enum:file_types	file:
FILE_GIF	lib/nuklear/example/file_browser.c	/^    FILE_GIF,$/;"	e	enum:file_types	file:
FILE_GROUP	lib/nuklear/example/file_browser.c	/^FILE_GROUP(enum file_groups group, const char *name, struct nk_image *icon)$/;"	f	file:
FILE_GROUP_DEFAULT	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_DEFAULT,$/;"	e	enum:file_groups	file:
FILE_GROUP_FONT	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_FONT,$/;"	e	enum:file_groups	file:
FILE_GROUP_IMAGE	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_IMAGE,$/;"	e	enum:file_groups	file:
FILE_GROUP_MAX	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_MAX$/;"	e	enum:file_groups	file:
FILE_GROUP_MOVIE	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_MOVIE,$/;"	e	enum:file_groups	file:
FILE_GROUP_MUSIC	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_MUSIC,$/;"	e	enum:file_groups	file:
FILE_GROUP_TEXT	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_TEXT,$/;"	e	enum:file_groups	file:
FILE_HEADER	lib/nuklear/example/file_browser.c	/^    FILE_HEADER,$/;"	e	enum:file_types	file:
FILE_JPEG	lib/nuklear/example/file_browser.c	/^    FILE_JPEG,$/;"	e	enum:file_types	file:
FILE_MAX	lib/nuklear/example/file_browser.c	/^    FILE_MAX$/;"	e	enum:file_types	file:
FILE_MP3	lib/nuklear/example/file_browser.c	/^    FILE_MP3,$/;"	e	enum:file_types	file:
FILE_OGG	lib/nuklear/example/file_browser.c	/^    FILE_OGG,$/;"	e	enum:file_types	file:
FILE_PCX	lib/nuklear/example/file_browser.c	/^    FILE_PCX,$/;"	e	enum:file_types	file:
FILE_PNG	lib/nuklear/example/file_browser.c	/^    FILE_PNG,$/;"	e	enum:file_types	file:
FILE_TEXT	lib/nuklear/example/file_browser.c	/^    FILE_TEXT,$/;"	e	enum:file_types	file:
FILE_TGA	lib/nuklear/example/file_browser.c	/^    FILE_TGA,$/;"	e	enum:file_types	file:
FILE_TTF	lib/nuklear/example/file_browser.c	/^    FILE_TTF,$/;"	e	enum:file_types	file:
FILE_WAV	lib/nuklear/example/file_browser.c	/^    FILE_WAV,$/;"	e	enum:file_types	file:
FLOAT	lib/klib/khmm.h	26;"	d
FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA	lib/cimgui/imgui/imgui_draw.cpp	/^static const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_COUNT][3] =$/;"	v	file:
FONT_ATLAS_DEFAULT_TEX_DATA_H	lib/cimgui/imgui/imgui_draw.cpp	/^const int FONT_ATLAS_DEFAULT_TEX_DATA_H      = 27;$/;"	v
FONT_ATLAS_DEFAULT_TEX_DATA_ID	lib/cimgui/imgui/imgui_draw.cpp	/^const unsigned int FONT_ATLAS_DEFAULT_TEX_DATA_ID = 0x80000000;$/;"	v
FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS	lib/cimgui/imgui/imgui_draw.cpp	/^static const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF * FONT_ATLAS_DEFAULT_TEX_DATA_H + 1] =$/;"	v	file:
FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF	lib/cimgui/imgui/imgui_draw.cpp	/^const int FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF = 108;$/;"	v
FP.insert	lib/cimgui/generator/generator_old.lua	/^    function FP.insert(line,comment,locat)$/;"	f
FP:compute_overloads	lib/cimgui/generator/generator_old.lua	/^    function FP:compute_overloads()$/;"	f
FP:dump_alltypes	lib/cimgui/generator/generator_old.lua	/^    function FP:dump_alltypes()$/;"	f
FT_CEIL	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	118;"	d	file:
Face	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Face         Face;$/;"	m	struct:__anon112::FreeTypeFont	file:
FallbackAdvanceX	lib/cimgui/cimgui.h	/^    float FallbackAdvanceX;$/;"	m	struct:ImFont
FallbackAdvanceX	lib/cimgui/generator/output/cimgui.h	/^    float FallbackAdvanceX;$/;"	m	struct:ImFont
FallbackAdvanceX	lib/cimgui/imgui/imgui.h	/^    float                       FallbackAdvanceX;   \/\/ 4     \/\/ out \/\/ = FallbackGlyph->AdvanceX$/;"	m	struct:ImFont
FallbackChar	lib/cimgui/cimgui.h	/^    ImWchar FallbackChar;$/;"	m	struct:ImFont
FallbackChar	lib/cimgui/generator/output/cimgui.h	/^    ImWchar FallbackChar;$/;"	m	struct:ImFont
FallbackChar	lib/cimgui/imgui/imgui.h	/^    ImWchar                     FallbackChar;       \/\/ 2     \/\/ in  \/\/ = '?'      \/\/ Replacement character if a glyph isn't found. Only set via SetFallbackChar()$/;"	m	struct:ImFont
FallbackGlyph	lib/cimgui/cimgui.h	/^    const ImFontGlyph* FallbackGlyph;$/;"	m	struct:ImFont
FallbackGlyph	lib/cimgui/generator/output/cimgui.h	/^    const ImFontGlyph* FallbackGlyph;$/;"	m	struct:ImFont
FallbackGlyph	lib/cimgui/imgui/imgui.h	/^    const ImFontGlyph*          FallbackGlyph;      \/\/ 4-8   \/\/ out \/\/ = FindGlyph(FontFallbackChar)$/;"	m	struct:ImFont
Fence	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkFence             Fence;$/;"	m	struct:ImGui_ImplVulkanH_Frame
FenceValue	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^    UINT64                  FenceValue;$/;"	m	struct:FrameContext	file:
FillMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} FillMode;$/;"	t	typeref:enum:__anon182
FillModeAlternate	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FillModeAlternate,$/;"	e	enum:__anon182
FillModeWinding	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FillModeWinding$/;"	e	enum:__anon182
Filter	lib/cimgui/imgui/imgui_demo.cpp	/^    ImGuiTextFilter       Filter;$/;"	m	struct:ExampleAppConsole	file:
Filter	lib/cimgui/imgui/imgui_demo.cpp	/^    ImGuiTextFilter     Filter;$/;"	m	struct:ExampleAppLog	file:
Filters	lib/cimgui/cimgui.h	/^    ImVector_ImGuiTextRange Filters;$/;"	m	struct:ImGuiTextFilter
Filters	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImGuiTextRange Filters;$/;"	m	struct:ImGuiTextFilter
Filters	lib/cimgui/imgui/imgui.h	/^    ImVector<ImGuiTextRange>Filters;$/;"	m	struct:ImGuiTextFilter
FindBestWindowPosForPopup	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::FindBestWindowPosForPopup(ImGuiWindow* window)$/;"	f	class:ImGui
FindBestWindowPosForPopupEx	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::FindBestWindowPosForPopupEx(const ImVec2& ref_pos, const ImVec2& size, ImGuiDir* last_dir, const ImRect& r_outer, const ImRect& r_avoid, ImGuiPopupPositionPolicy policy)$/;"	f	class:ImGui
FindGlyph	lib/cimgui/imgui/imgui_draw.cpp	/^const ImFontGlyph* ImFont::FindGlyph(ImWchar c) const$/;"	f	class:ImFont
FindGlyphNoFallback	lib/cimgui/imgui/imgui_draw.cpp	/^const ImFontGlyph* ImFont::FindGlyphNoFallback(ImWchar c) const$/;"	f	class:ImFont
FindHoveredWindow	lib/cimgui/imgui/imgui.cpp	/^static void FindHoveredWindow()$/;"	f	file:
FindOrCreateColumns	lib/cimgui/imgui/imgui_widgets.cpp	/^ImGuiColumns* ImGui::FindOrCreateColumns(ImGuiWindow* window, ImGuiID id)$/;"	f	class:ImGui
FindOrCreateWindowSettings	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindowSettings* ImGui::FindOrCreateWindowSettings(const char* name)$/;"	f	class:ImGui
FindRenderedTextEnd	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::FindRenderedTextEnd(const char* text, const char* text_end)$/;"	f	class:ImGui
FindSettingsHandler	lib/cimgui/imgui/imgui.cpp	/^ImGuiSettingsHandler* ImGui::FindSettingsHandler(const char* type_name)$/;"	f	class:ImGui
FindWindowByID	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow* ImGui::FindWindowByID(ImGuiID id)$/;"	f	class:ImGui
FindWindowByName	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow* ImGui::FindWindowByName(const char* name)$/;"	f	class:ImGui
FindWindowFocusIndex	lib/cimgui/imgui/imgui.cpp	/^static int ImGui::FindWindowFocusIndex(ImGuiWindow* window) \/\/ FIXME-OPT O(N)$/;"	f	class:ImGui
FindWindowNavFocusable	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* FindWindowNavFocusable(int i_start, int i_stop, int dir) \/\/ FIXME-OPT O(N)$/;"	f	file:
FindWindowSettings	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindowSettings* ImGui::FindWindowSettings(ImGuiID id)$/;"	f	class:ImGui
Flags	lib/cimgui/cimgui.h	/^    ImDrawListFlags Flags;$/;"	m	struct:ImDrawList
Flags	lib/cimgui/cimgui.h	/^    ImFontAtlasFlags Flags;$/;"	m	struct:ImFontAtlas
Flags	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags Flags;$/;"	m	struct:ImGuiInputTextCallbackData
Flags	lib/cimgui/generator/output/cimgui.h	/^    ImDrawListFlags Flags;$/;"	m	struct:ImDrawList
Flags	lib/cimgui/generator/output/cimgui.h	/^    ImFontAtlasFlags Flags;$/;"	m	struct:ImFontAtlas
Flags	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags Flags;$/;"	m	struct:ImGuiInputTextCallbackData
Flags	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags         Flags;              \/\/ Flags, you may poke into these to adjust anti-aliasing settings per-primitive.$/;"	m	struct:ImDrawList
Flags	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasFlags            Flags;              \/\/ Build flags (see ImFontAtlasFlags_)$/;"	m	struct:ImFontAtlas
Flags	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags Flags;          \/\/ What user passed to InputText()      \/\/ Read-only$/;"	m	struct:ImGuiInputTextCallbackData
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags   Flags;              \/\/ Not exposed$/;"	m	struct:ImGuiColumnData
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags   Flags;$/;"	m	struct:ImGuiColumns
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextItemDataFlags      Flags;$/;"	m	struct:ImGuiNextItemData
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags    Flags;$/;"	m	struct:ImGuiNextWindowData
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabBarFlags    Flags;$/;"	m	struct:ImGuiTabBar
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabItemFlags   Flags;$/;"	m	struct:ImGuiTabItem
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindowFlags        Flags;                              \/\/ See enum ImGuiWindowFlags_$/;"	m	struct:ImGuiWindow
FlattenIntoSingleLayer	lib/cimgui/imgui/imgui.cpp	/^void ImDrawDataBuilder::FlattenIntoSingleLayer()$/;"	f	class:ImDrawDataBuilder
Floor	lib/cimgui/imgui/imgui_internal.h	/^    void        Floor()                             { Min.x = IM_FLOOR(Min.x); Min.y = IM_FLOOR(Min.y); Max.x = IM_FLOOR(Max.x); Max.y = IM_FLOOR(Max.y); }$/;"	f	struct:ImRect
FocusCounterRegular	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusCounterRegular;    \/\/ (Legacy Focus\/Tabbing system) Sequential counter, start at -1 and increase as assigned via FocusableItemRegister() (FIXME-NAV: Needs redesign)$/;"	m	struct:ImGuiWindowTempData
FocusCounterTabStop	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusCounterTabStop;    \/\/ (Legacy Focus\/Tabbing system) Same, but only count widgets which you can Tab through.$/;"	m	struct:ImGuiWindowTempData
FocusRequestCurrCounterRegular	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusRequestCurrCounterRegular;     \/\/ Any item being requested for focus, stored as an index (we on layout to be stable between the frame pressing TAB and the next frame, semi-ouch)$/;"	m	struct:ImGuiContext
FocusRequestCurrCounterTabStop	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusRequestCurrCounterTabStop;     \/\/ Tab item being requested for focus, stored as an index$/;"	m	struct:ImGuiContext
FocusRequestCurrWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            FocusRequestCurrWindow;             \/\/$/;"	m	struct:ImGuiContext
FocusRequestNextCounterRegular	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusRequestNextCounterRegular;     \/\/ Stored for next frame$/;"	m	struct:ImGuiContext
FocusRequestNextCounterTabStop	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusRequestNextCounterTabStop;     \/\/ "$/;"	m	struct:ImGuiContext
FocusRequestNextWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            FocusRequestNextWindow;             \/\/$/;"	m	struct:ImGuiContext
FocusScopeId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                     FocusScopeId;   \/\/ Set by SetNextItemMultiSelectData() (!= 0 signify value has been set, so it's an alternate version of HasSelectionData, we don't use Flags for this because they are cleared too early. This is mostly used for debugging)$/;"	m	struct:ImGuiNextItemData
FocusScopeId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID         FocusScopeId;       \/\/ Best candidate focus scope ID$/;"	m	struct:ImGuiNavMoveResult
FocusTabPressed	lib/cimgui/imgui/imgui_internal.h	/^    bool                    FocusTabPressed;                    \/\/$/;"	m	struct:ImGuiContext
FocusTopMostWindowUnderOne	lib/cimgui/imgui/imgui.cpp	/^void ImGui::FocusTopMostWindowUnderOne(ImGuiWindow* under_this_window, ImGuiWindow* ignore_window)$/;"	f	class:ImGui
FocusWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::FocusWindow(ImGuiWindow* window)$/;"	f	class:ImGui
FocusableItemRegister	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::FocusableItemRegister(ImGuiWindow* window, ImGuiID id)$/;"	f	class:ImGui
FocusableItemUnregister	lib/cimgui/imgui/imgui.cpp	/^void ImGui::FocusableItemUnregister(ImGuiWindow* window)$/;"	f	class:ImGui
Font	lib/cimgui/cimgui.h	/^    ImFont* Font;$/;"	m	struct:ImFontAtlasCustomRect
Font	lib/cimgui/generator/output/cimgui.h	/^    ImFont* Font;$/;"	m	struct:ImFontAtlasCustomRect
Font	lib/cimgui/imgui/imgui.h	/^    ImFont*         Font;           \/\/ Input    \/\/ For custom font glyphs only (ID < 0x110000): target font$/;"	m	struct:ImFontAtlasCustomRect
Font	lib/cimgui/imgui/imgui_internal.h	/^    ImFont*                 Font;                               \/\/ (Shortcut) == FontStack.empty() ? IO.Font : FontStack.back()$/;"	m	struct:ImGuiContext
Font	lib/cimgui/imgui/imgui_internal.h	/^    ImFont*         Font;                       \/\/ Current\/default font (optional, for simplified AddText overload)$/;"	m	struct:ImDrawListSharedData
Font	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    FreeTypeFont        Font;$/;"	m	struct:ImFontBuildSrcDataFT	file:
FontAllowUserScaling	lib/cimgui/cimgui.h	/^    bool FontAllowUserScaling;$/;"	m	struct:ImGuiIO
FontAllowUserScaling	lib/cimgui/generator/output/cimgui.h	/^    bool FontAllowUserScaling;$/;"	m	struct:ImGuiIO
FontAllowUserScaling	lib/cimgui/imgui/imgui.h	/^    bool        FontAllowUserScaling;           \/\/ = false          \/\/ Allow user scaling text of individual window with CTRL+Wheel.$/;"	m	struct:ImGuiIO
FontAtlasOwnedByContext	lib/cimgui/imgui/imgui_internal.h	/^    bool                    FontAtlasOwnedByContext;            \/\/ IO.Fonts-> is owned by the ImGuiContext and will be destructed along with it.$/;"	m	struct:ImGuiContext
FontBaseSize	lib/cimgui/imgui/imgui_internal.h	/^    float                   FontBaseSize;                       \/\/ (Shortcut) == IO.FontGlobalScale * Font->Scale * Font->FontSize. Base text height.$/;"	m	struct:ImGuiContext
FontData	lib/cimgui/cimgui.h	/^    void* FontData;$/;"	m	struct:ImFontConfig
FontData	lib/cimgui/generator/output/cimgui.h	/^    void* FontData;$/;"	m	struct:ImFontConfig
FontData	lib/cimgui/imgui/imgui.h	/^    void*           FontData;               \/\/          \/\/ TTF\/OTF data$/;"	m	struct:ImFontConfig
FontDataOwnedByAtlas	lib/cimgui/cimgui.h	/^    bool FontDataOwnedByAtlas;$/;"	m	struct:ImFontConfig
FontDataOwnedByAtlas	lib/cimgui/generator/output/cimgui.h	/^    bool FontDataOwnedByAtlas;$/;"	m	struct:ImFontConfig
FontDataOwnedByAtlas	lib/cimgui/imgui/imgui.h	/^    bool            FontDataOwnedByAtlas;   \/\/ true     \/\/ TTF\/OTF data ownership taken by the container ImFontAtlas (will delete memory itself).$/;"	m	struct:ImFontConfig
FontDataSize	lib/cimgui/cimgui.h	/^    int FontDataSize;$/;"	m	struct:ImFontConfig
FontDataSize	lib/cimgui/generator/output/cimgui.h	/^    int FontDataSize;$/;"	m	struct:ImFontConfig
FontDataSize	lib/cimgui/imgui/imgui.h	/^    int             FontDataSize;           \/\/          \/\/ TTF\/OTF data size$/;"	m	struct:ImFontConfig
FontDefault	lib/cimgui/cimgui.h	/^    ImFont* FontDefault;$/;"	m	struct:ImGuiIO
FontDefault	lib/cimgui/generator/output/cimgui.h	/^    ImFont* FontDefault;$/;"	m	struct:ImGuiIO
FontDefault	lib/cimgui/imgui/imgui.h	/^    ImFont*     FontDefault;                    \/\/ = NULL           \/\/ Font to use on NewFrame(). Use NULL to uses Fonts->Fonts[0].$/;"	m	struct:ImGuiIO
FontGlobalScale	lib/cimgui/cimgui.h	/^    float FontGlobalScale;$/;"	m	struct:ImGuiIO
FontGlobalScale	lib/cimgui/generator/output/cimgui.h	/^    float FontGlobalScale;$/;"	m	struct:ImGuiIO
FontGlobalScale	lib/cimgui/imgui/imgui.h	/^    float       FontGlobalScale;                \/\/ = 1.0f           \/\/ Global scale all fonts$/;"	m	struct:ImGuiIO
FontInfo	lib/cimgui/imgui/imgui_draw.cpp	/^    stbtt_fontinfo      FontInfo;$/;"	m	struct:ImFontBuildSrcData	file:
FontInfo	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    struct FontInfo$/;"	s	namespace:__anon112	file:
FontNo	lib/cimgui/cimgui.h	/^    int FontNo;$/;"	m	struct:ImFontConfig
FontNo	lib/cimgui/generator/output/cimgui.h	/^    int FontNo;$/;"	m	struct:ImFontConfig
FontNo	lib/cimgui/imgui/imgui.h	/^    int             FontNo;                 \/\/ 0        \/\/ Index of font within TTF\/OTF file$/;"	m	struct:ImFontConfig
FontSize	lib/cimgui/cimgui.h	/^    float FontSize;$/;"	m	struct:ImFont
FontSize	lib/cimgui/generator/output/cimgui.h	/^    float FontSize;$/;"	m	struct:ImFont
FontSize	lib/cimgui/imgui/imgui.h	/^    float                       FontSize;           \/\/ 4     \/\/ in  \/\/            \/\/ Height of characters\/line, set during loading (don't change after loading)$/;"	m	struct:ImFont
FontSize	lib/cimgui/imgui/imgui_internal.h	/^    float                   FontSize;                           \/\/ (Shortcut) == FontBaseSize * g.CurrentWindow->FontWindowScale == window->FontSize(). Text height for current window.$/;"	m	struct:ImGuiContext
FontSize	lib/cimgui/imgui/imgui_internal.h	/^    float           FontSize;                   \/\/ Current\/default font size (optional, for simplified AddText overload)$/;"	m	struct:ImDrawListSharedData
FontStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImFont*>       FontStack;                          \/\/ Stack for PushFont()\/PopFont()$/;"	m	struct:ImGuiContext
FontStyle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} FontStyle;$/;"	t	typeref:enum:__anon181
FontStyleBold	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleBold       = 1,$/;"	e	enum:__anon181
FontStyleBoldItalic	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleBoldItalic = 3,$/;"	e	enum:__anon181
FontStyleItalic	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleItalic     = 2,$/;"	e	enum:__anon181
FontStyleRegular	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleRegular    = 0,$/;"	e	enum:__anon181
FontStyleStrikeout	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleStrikeout  = 8$/;"	e	enum:__anon181
FontStyleUnderline	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleUnderline  = 4,$/;"	e	enum:__anon181
FontWindowScale	lib/cimgui/imgui/imgui_internal.h	/^    float                   FontWindowScale;                    \/\/ User scale multiplier per-window, via SetWindowFontScale()$/;"	m	struct:ImGuiWindow
Fonts	lib/cimgui/cimgui.h	/^    ImFontAtlas*Fonts;$/;"	m	struct:ImGuiIO
Fonts	lib/cimgui/cimgui.h	/^    ImVector_ImFontPtr Fonts;$/;"	m	struct:ImFontAtlas
Fonts	lib/cimgui/generator/output/cimgui.h	/^    ImFontAtlas*Fonts;$/;"	m	struct:ImGuiIO
Fonts	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImFontPtr Fonts;$/;"	m	struct:ImFontAtlas
Fonts	lib/cimgui/imgui/imgui.h	/^    ImFontAtlas*Fonts;                          \/\/ <auto>           \/\/ Font atlas: load, rasterize and pack one or more fonts into a single texture.$/;"	m	struct:ImGuiIO
Fonts	lib/cimgui/imgui/imgui.h	/^    ImVector<ImFont*>           Fonts;              \/\/ Hold all the fonts returned by AddFont*. Fonts[0] is the default font upon calling ImGui::NewFrame(), use ImGui::PushFont()\/PopFont() to change the current font.$/;"	m	struct:ImFontAtlas
ForceAutoHint	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        ForceAutoHint   = 1 << 2,   \/\/ Indicates that the auto-hinter is preferred over the font's native hinter.$/;"	e	enum:ImGuiFreeType::RasterizerFlags
ForegroundDrawList	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawList              ForegroundDrawList;                 \/\/ Last draw list to be rendered. This is where we the render software mouse cursor (if io.MouseDrawCursor is set) and most debug overlays.$/;"	m	struct:ImGuiContext
FrameBorderSize	lib/cimgui/cimgui.h	/^    float FrameBorderSize;$/;"	m	struct:ImGuiStyle
FrameBorderSize	lib/cimgui/generator/output/cimgui.h	/^    float FrameBorderSize;$/;"	m	struct:ImGuiStyle
FrameBorderSize	lib/cimgui/imgui/imgui.h	/^    float       FrameBorderSize;            \/\/ Thickness of border around frames. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU\/GPU costly).$/;"	m	struct:ImGuiStyle
FrameContext	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^struct FrameContext$/;"	s	file:
FrameCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     FrameCount;$/;"	m	struct:ImGuiContext
FrameCountEnded	lib/cimgui/imgui/imgui_internal.h	/^    int                     FrameCountEnded;$/;"	m	struct:ImGuiContext
FrameCountRendered	lib/cimgui/imgui/imgui_internal.h	/^    int                     FrameCountRendered;$/;"	m	struct:ImGuiContext
FrameIndex	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    uint32_t            FrameIndex;             \/\/ Current frame being rendered to (0 <= FrameIndex < FrameInFlightCount)$/;"	m	struct:ImGui_ImplVulkanH_Window
FramePadding	lib/cimgui/cimgui.h	/^    ImVec2 FramePadding;$/;"	m	struct:ImGuiStyle
FramePadding	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 FramePadding;$/;"	m	struct:ImGuiStyle
FramePadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      FramePadding;               \/\/ Padding within a framed rectangle (used by most widgets).$/;"	m	struct:ImGuiStyle
FramePadding	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2              FramePadding;           \/\/ style.FramePadding locked at the time of BeginTabBar()$/;"	m	struct:ImGuiTabBar
FramePresent	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void FramePresent(ImGui_ImplVulkanH_Window* wd)$/;"	f	file:
FramePresent	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static void FramePresent(ImGui_ImplVulkanH_Window* wd)$/;"	f	file:
FrameRender	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void FrameRender(ImGui_ImplVulkanH_Window* wd)$/;"	f	file:
FrameRender	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static void FrameRender(ImGui_ImplVulkanH_Window* wd)$/;"	f	file:
FrameRenderBuffers	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    ImGui_ImplVulkanH_FrameRenderBuffers*   FrameRenderBuffers;$/;"	m	struct:ImGui_ImplVulkanH_WindowRenderBuffers	file:
FrameResources	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^struct FrameResources$/;"	s	file:
FrameRounding	lib/cimgui/cimgui.h	/^    float FrameRounding;$/;"	m	struct:ImGuiStyle
FrameRounding	lib/cimgui/generator/output/cimgui.h	/^    float FrameRounding;$/;"	m	struct:ImGuiStyle
FrameRounding	lib/cimgui/imgui/imgui.h	/^    float       FrameRounding;              \/\/ Radius of frame corners rounding. Set to 0.0f to have rectangular frame (used by most widgets).$/;"	m	struct:ImGuiStyle
FrameSemaphores	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    ImGui_ImplVulkanH_FrameSemaphores*  FrameSemaphores;$/;"	m	struct:ImGui_ImplVulkanH_Window
Framebuffer	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkFramebuffer       Framebuffer;$/;"	m	struct:ImGui_ImplVulkanH_Frame
FramebufferScale	lib/cimgui/cimgui.h	/^    ImVec2 FramebufferScale;$/;"	m	struct:ImDrawData
FramebufferScale	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 FramebufferScale;$/;"	m	struct:ImDrawData
FramebufferScale	lib/cimgui/imgui/imgui.h	/^    ImVec2          FramebufferScale;       \/\/ Amount of pixels for each unit of DisplaySize. Based on io.DisplayFramebufferScale. Generally (1,1) on normal display, (2,2) on OSX with Retina display.$/;"	m	struct:ImDrawData
Framerate	lib/cimgui/cimgui.h	/^    float Framerate;$/;"	m	struct:ImGuiIO
Framerate	lib/cimgui/generator/output/cimgui.h	/^    float Framerate;$/;"	m	struct:ImGuiIO
Framerate	lib/cimgui/imgui/imgui.h	/^    float       Framerate;                      \/\/ Application framerate estimation, in frame per second. Solely for convenience. Rolling average estimation based on IO.DeltaTime over 120 frames$/;"	m	struct:ImGuiIO
FramerateSecPerFrame	lib/cimgui/imgui/imgui_internal.h	/^    float                   FramerateSecPerFrame[120];          \/\/ Calculate estimate of framerate for user over the last 2 seconds.$/;"	m	struct:ImGuiContext
FramerateSecPerFrameAccum	lib/cimgui/imgui/imgui_internal.h	/^    float                   FramerateSecPerFrameAccum;$/;"	m	struct:ImGuiContext
FramerateSecPerFrameIdx	lib/cimgui/imgui/imgui_internal.h	/^    int                     FramerateSecPerFrameIdx;$/;"	m	struct:ImGuiContext
Frames	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    ImGui_ImplVulkanH_Frame*            Frames;$/;"	m	struct:ImGui_ImplVulkanH_Window
FreeIdx	lib/cimgui/imgui/imgui_internal.h	/^    ImPoolIdx       FreeIdx;    \/\/ Next free idx to use$/;"	m	struct:ImPool
FreeTypeFont	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    struct FreeTypeFont$/;"	s	namespace:__anon112	file:
FreeType_Alloc	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void* FreeType_Alloc(FT_Memory \/*memory*\/, long size)$/;"	f	file:
FreeType_Free	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void FreeType_Free(FT_Memory \/*memory*\/, void* block)$/;"	f	file:
FreeType_Realloc	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void* FreeType_Realloc(FT_Memory \/*memory*\/, long cur_size, long new_size, void* block)$/;"	f	file:
FreeWrapper	lib/cimgui/imgui/imgui.cpp	/^static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); IM_UNUSED(ptr); IM_ASSERT(0); }$/;"	f	file:
FreeWrapper	lib/cimgui/imgui/imgui.cpp	/^static void    FreeWrapper(void* ptr, void* user_data)        { IM_UNUSED(user_data); free(ptr); }$/;"	f	file:
GCrc32LookupTable	lib/cimgui/imgui/imgui.cpp	/^static const ImU32 GCrc32LookupTable[256] =$/;"	v	file:
GDIPCONST	lib/nuklear/demo/gdip/nuklear_gdip.h	54;"	d
GDataTypeInfo	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImGuiDataTypeInfo GDataTypeInfo[] =$/;"	v	file:
GImAllocatorAllocFunc	lib/cimgui/imgui/imgui.cpp	/^static void*  (*GImAllocatorAllocFunc)(size_t size, void* user_data) = MallocWrapper;$/;"	v	file:
GImAllocatorFreeFunc	lib/cimgui/imgui/imgui.cpp	/^static void   (*GImAllocatorFreeFunc)(void* ptr, void* user_data) = FreeWrapper;$/;"	v	file:
GImAllocatorUserData	lib/cimgui/imgui/imgui.cpp	/^static void*    GImAllocatorUserData = NULL;$/;"	v	file:
GImFreeTypeAllocFunc	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void* (*GImFreeTypeAllocFunc)(size_t size, void* user_data) = ImFreeTypeDefaultAllocFunc;$/;"	v	file:
GImFreeTypeAllocatorUserData	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void* GImFreeTypeAllocatorUserData = NULL;$/;"	v	file:
GImFreeTypeFreeFunc	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void  (*GImFreeTypeFreeFunc)(void* ptr, void* user_data) = ImFreeTypeDefaultFreeFunc;$/;"	v	file:
GLAD_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	GLAD_DIR = C:\/Users\/Ricky\/MinGW-Libs\/GLAD$/;"	m
GLAD_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	GLAD_DIR = \/home\/ricky\/Libraries\/GLAD$/;"	m
GLAD_INC	lib/nuklear/demo/sfml_opengl3/Makefile	/^GLAD_INC = -I $(GLAD_DIR)\/include$/;"	m
GLAD_SRC	lib/nuklear/demo/sfml_opengl3/Makefile	/^GLAD_SRC = $(GLAD_DIR)\/src\/glad.c$/;"	m
GLAPI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	70;"	d
GLAPI	lib/gl3w/GL/glcorearb.h	70;"	d
GLDEBUGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCAMD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCAMD	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLDEBUGPROCARB	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar *message,GLvoid *userParam);$/;"	t
GLEXT_64_TYPES_DEFINED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2641;"	d
GLEXT_64_TYPES_DEFINED	lib/gl3w/GL/glcorearb.h	2641;"	d
GLFW3	lib/nuklear/demo/glfw_opengl3/Makefile	/^	GLFW3 := $(shell pkg-config --libs glfw3)$/;"	m
GLFW3	lib/nuklear/demo/glfw_opengl4/Makefile	/^	GLFW3 := $(shell pkg-config --libs glfw3)$/;"	m
GLFW3	lib/nuklear/example/Makefile	/^	GLFW3 := $(shell pkg-config --libs glfw3)$/;"	m
GLFWAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	191;"	d
GLFWAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	194;"	d
GLFWAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	197;"	d
GLFWAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	200;"	d
GLFW_ACCUM_ALPHA_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	640;"	d
GLFW_ACCUM_BLUE_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	639;"	d
GLFW_ACCUM_GREEN_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	638;"	d
GLFW_ACCUM_RED_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	637;"	d
GLFW_ALPHA_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	634;"	d
GLFW_ANY_RELEASE_BEHAVIOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	679;"	d
GLFW_API_UNAVAILABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	564;"	d
GLFW_ARROW_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	694;"	d
GLFW_AUTO_ICONIFY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	627;"	d
GLFW_AUX_BUFFERS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	641;"	d
GLFW_BLUE_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	633;"	d
GLFW_CALLBACK_DEFINED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	115;"	d
GLFW_CALLBACK_DEFINED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	4216;"	d
GLFW_CLIENT_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	648;"	d
GLFW_CONNECTED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	722;"	d
GLFW_CONTEXT_NO_ERROR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	657;"	d
GLFW_CONTEXT_RELEASE_BEHAVIOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	656;"	d
GLFW_CONTEXT_REVISION	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	651;"	d
GLFW_CONTEXT_ROBUSTNESS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	652;"	d
GLFW_CONTEXT_VERSION_MAJOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	649;"	d
GLFW_CONTEXT_VERSION_MINOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	650;"	d
GLFW_CROSSHAIR_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	704;"	d
GLFW_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	671;"	d
GLFW_CURSOR_DISABLED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	677;"	d
GLFW_CURSOR_HIDDEN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	676;"	d
GLFW_CURSOR_NORMAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	675;"	d
GLFW_DECORATED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	626;"	d
GLFW_DEPTH_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	635;"	d
GLFW_DISCONNECTED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	723;"	d
GLFW_DONT_CARE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	725;"	d
GLFW_DOUBLEBUFFER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	646;"	d
GLFW_EXPOSE_NATIVE_WIN32	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	47;"	d	file:
GLFW_FALSE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	247;"	d
GLFW_FLOATING	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	628;"	d
GLFW_FOCUSED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	622;"	d
GLFW_FORMAT_UNAVAILABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	611;"	d
GLFW_GREEN_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	632;"	d
GLFW_HAND_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	709;"	d
GLFW_HAS_NEW_CURSORS	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	56;"	d	file:
GLFW_HAS_NEW_CURSORS	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	58;"	d	file:
GLFW_HAS_PER_MONITOR_DPI	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	53;"	d	file:
GLFW_HAS_VULKAN	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	54;"	d	file:
GLFW_HAS_WINDOW_ALPHA	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	52;"	d	file:
GLFW_HAS_WINDOW_HOVERED	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	51;"	d	file:
GLFW_HAS_WINDOW_TOPMOST	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	50;"	d	file:
GLFW_HRESIZE_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	714;"	d
GLFW_IBEAM_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	699;"	d
GLFW_ICONIFIED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	623;"	d
GLFW_INCLUDE_NONE	lib/cimgui/imgui/examples/example_glfw_opengl3/main.cpp	21;"	d	file:
GLFW_INCLUDE_NONE	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	16;"	d	file:
GLFW_INCLUDE_VULKAN	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	17;"	d	file:
GLFW_INVALID_ENUM	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	529;"	d
GLFW_INVALID_VALUE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	540;"	d
GLFW_JOYSTICK_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	477;"	d
GLFW_JOYSTICK_10	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	486;"	d
GLFW_JOYSTICK_11	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	487;"	d
GLFW_JOYSTICK_12	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	488;"	d
GLFW_JOYSTICK_13	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	489;"	d
GLFW_JOYSTICK_14	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	490;"	d
GLFW_JOYSTICK_15	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	491;"	d
GLFW_JOYSTICK_16	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	492;"	d
GLFW_JOYSTICK_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	478;"	d
GLFW_JOYSTICK_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	479;"	d
GLFW_JOYSTICK_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	480;"	d
GLFW_JOYSTICK_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	481;"	d
GLFW_JOYSTICK_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	482;"	d
GLFW_JOYSTICK_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	483;"	d
GLFW_JOYSTICK_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	484;"	d
GLFW_JOYSTICK_9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	485;"	d
GLFW_JOYSTICK_LAST	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	493;"	d
GLFW_KEY_0	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	308;"	d
GLFW_KEY_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	309;"	d
GLFW_KEY_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	310;"	d
GLFW_KEY_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	311;"	d
GLFW_KEY_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	312;"	d
GLFW_KEY_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	313;"	d
GLFW_KEY_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	314;"	d
GLFW_KEY_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	315;"	d
GLFW_KEY_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	316;"	d
GLFW_KEY_9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	317;"	d
GLFW_KEY_A	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	320;"	d
GLFW_KEY_APOSTROPHE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	303;"	d
GLFW_KEY_B	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	321;"	d
GLFW_KEY_BACKSLASH	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	347;"	d
GLFW_KEY_BACKSPACE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	357;"	d
GLFW_KEY_C	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	322;"	d
GLFW_KEY_CAPS_LOCK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	368;"	d
GLFW_KEY_COMMA	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	304;"	d
GLFW_KEY_D	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	323;"	d
GLFW_KEY_DELETE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	359;"	d
GLFW_KEY_DOWN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	362;"	d
GLFW_KEY_E	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	324;"	d
GLFW_KEY_END	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	367;"	d
GLFW_KEY_ENTER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	355;"	d
GLFW_KEY_EQUAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	319;"	d
GLFW_KEY_ESCAPE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	354;"	d
GLFW_KEY_F	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	325;"	d
GLFW_KEY_F1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	373;"	d
GLFW_KEY_F10	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	382;"	d
GLFW_KEY_F11	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	383;"	d
GLFW_KEY_F12	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	384;"	d
GLFW_KEY_F13	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	385;"	d
GLFW_KEY_F14	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	386;"	d
GLFW_KEY_F15	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	387;"	d
GLFW_KEY_F16	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	388;"	d
GLFW_KEY_F17	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	389;"	d
GLFW_KEY_F18	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	390;"	d
GLFW_KEY_F19	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	391;"	d
GLFW_KEY_F2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	374;"	d
GLFW_KEY_F20	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	392;"	d
GLFW_KEY_F21	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	393;"	d
GLFW_KEY_F22	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	394;"	d
GLFW_KEY_F23	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	395;"	d
GLFW_KEY_F24	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	396;"	d
GLFW_KEY_F25	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	397;"	d
GLFW_KEY_F3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	375;"	d
GLFW_KEY_F4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	376;"	d
GLFW_KEY_F5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	377;"	d
GLFW_KEY_F6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	378;"	d
GLFW_KEY_F7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	379;"	d
GLFW_KEY_F8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	380;"	d
GLFW_KEY_F9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	381;"	d
GLFW_KEY_G	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	326;"	d
GLFW_KEY_GRAVE_ACCENT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	349;"	d
GLFW_KEY_H	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	327;"	d
GLFW_KEY_HOME	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	366;"	d
GLFW_KEY_I	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	328;"	d
GLFW_KEY_INSERT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	358;"	d
GLFW_KEY_J	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	329;"	d
GLFW_KEY_K	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	330;"	d
GLFW_KEY_KP_0	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	398;"	d
GLFW_KEY_KP_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	399;"	d
GLFW_KEY_KP_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	400;"	d
GLFW_KEY_KP_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	401;"	d
GLFW_KEY_KP_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	402;"	d
GLFW_KEY_KP_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	403;"	d
GLFW_KEY_KP_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	404;"	d
GLFW_KEY_KP_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	405;"	d
GLFW_KEY_KP_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	406;"	d
GLFW_KEY_KP_9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	407;"	d
GLFW_KEY_KP_ADD	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	412;"	d
GLFW_KEY_KP_DECIMAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	408;"	d
GLFW_KEY_KP_DIVIDE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	409;"	d
GLFW_KEY_KP_ENTER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	413;"	d
GLFW_KEY_KP_EQUAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	414;"	d
GLFW_KEY_KP_MULTIPLY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	410;"	d
GLFW_KEY_KP_SUBTRACT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	411;"	d
GLFW_KEY_L	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	331;"	d
GLFW_KEY_LAST	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	425;"	d
GLFW_KEY_LEFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	361;"	d
GLFW_KEY_LEFT_ALT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	417;"	d
GLFW_KEY_LEFT_BRACKET	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	346;"	d
GLFW_KEY_LEFT_CONTROL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	416;"	d
GLFW_KEY_LEFT_SHIFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	415;"	d
GLFW_KEY_LEFT_SUPER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	418;"	d
GLFW_KEY_M	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	332;"	d
GLFW_KEY_MENU	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	423;"	d
GLFW_KEY_MINUS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	305;"	d
GLFW_KEY_N	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	333;"	d
GLFW_KEY_NUM_LOCK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	370;"	d
GLFW_KEY_O	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	334;"	d
GLFW_KEY_P	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	335;"	d
GLFW_KEY_PAGE_DOWN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	365;"	d
GLFW_KEY_PAGE_UP	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	364;"	d
GLFW_KEY_PAUSE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	372;"	d
GLFW_KEY_PERIOD	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	306;"	d
GLFW_KEY_PRINT_SCREEN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	371;"	d
GLFW_KEY_Q	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	336;"	d
GLFW_KEY_R	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	337;"	d
GLFW_KEY_RIGHT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	360;"	d
GLFW_KEY_RIGHT_ALT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	421;"	d
GLFW_KEY_RIGHT_BRACKET	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	348;"	d
GLFW_KEY_RIGHT_CONTROL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	420;"	d
GLFW_KEY_RIGHT_SHIFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	419;"	d
GLFW_KEY_RIGHT_SUPER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	422;"	d
GLFW_KEY_S	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	338;"	d
GLFW_KEY_SCROLL_LOCK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	369;"	d
GLFW_KEY_SEMICOLON	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	318;"	d
GLFW_KEY_SLASH	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	307;"	d
GLFW_KEY_SPACE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	302;"	d
GLFW_KEY_T	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	339;"	d
GLFW_KEY_TAB	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	356;"	d
GLFW_KEY_U	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	340;"	d
GLFW_KEY_UNKNOWN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	299;"	d
GLFW_KEY_UP	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	363;"	d
GLFW_KEY_V	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	341;"	d
GLFW_KEY_W	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	342;"	d
GLFW_KEY_WORLD_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	350;"	d
GLFW_KEY_WORLD_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	351;"	d
GLFW_KEY_X	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	343;"	d
GLFW_KEY_Y	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	344;"	d
GLFW_KEY_Z	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	345;"	d
GLFW_LOSE_CONTEXT_ON_RESET	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	665;"	d
GLFW_MAXIMIZED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	629;"	d
GLFW_MOD_ALT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	444;"	d
GLFW_MOD_CONTROL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	441;"	d
GLFW_MOD_SHIFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	438;"	d
GLFW_MOD_SUPER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	447;"	d
GLFW_MOUSE_BUTTON_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	457;"	d
GLFW_MOUSE_BUTTON_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	458;"	d
GLFW_MOUSE_BUTTON_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	459;"	d
GLFW_MOUSE_BUTTON_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	460;"	d
GLFW_MOUSE_BUTTON_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	461;"	d
GLFW_MOUSE_BUTTON_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	462;"	d
GLFW_MOUSE_BUTTON_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	463;"	d
GLFW_MOUSE_BUTTON_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	464;"	d
GLFW_MOUSE_BUTTON_LAST	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	465;"	d
GLFW_MOUSE_BUTTON_LEFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	466;"	d
GLFW_MOUSE_BUTTON_MIDDLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	468;"	d
GLFW_MOUSE_BUTTON_RIGHT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	467;"	d
GLFW_NOT_INITIALIZED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	510;"	d
GLFW_NO_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	659;"	d
GLFW_NO_CURRENT_CONTEXT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	520;"	d
GLFW_NO_RESET_NOTIFICATION	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	664;"	d
GLFW_NO_ROBUSTNESS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	663;"	d
GLFW_NO_WINDOW_CONTEXT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	619;"	d
GLFW_OPENGL_ANY_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	667;"	d
GLFW_OPENGL_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	660;"	d
GLFW_OPENGL_COMPAT_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	669;"	d
GLFW_OPENGL_CORE_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	668;"	d
GLFW_OPENGL_DEBUG_CONTEXT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	654;"	d
GLFW_OPENGL_ES_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	661;"	d
GLFW_OPENGL_FORWARD_COMPAT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	653;"	d
GLFW_OPENGL_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	655;"	d
GLFW_OUT_OF_MEMORY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	548;"	d
GLFW_PLATFORM_ERROR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	592;"	d
GLFW_PRESS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	265;"	d
GLFW_RED_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	631;"	d
GLFW_REFRESH_RATE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	645;"	d
GLFW_RELEASE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	258;"	d
GLFW_RELEASE_BEHAVIOR_FLUSH	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	680;"	d
GLFW_RELEASE_BEHAVIOR_NONE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	681;"	d
GLFW_REPEAT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	272;"	d
GLFW_RESIZABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	624;"	d
GLFW_SAMPLES	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	643;"	d
GLFW_SRGB_CAPABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	644;"	d
GLFW_STENCIL_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	636;"	d
GLFW_STEREO	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	642;"	d
GLFW_STICKY_KEYS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	672;"	d
GLFW_STICKY_MOUSE_BUTTONS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	673;"	d
GLFW_TRUE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	240;"	d
GLFW_VERSION_MAJOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	215;"	d
GLFW_VERSION_MINOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	222;"	d
GLFW_VERSION_REVISION	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	229;"	d
GLFW_VERSION_UNAVAILABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	581;"	d
GLFW_VISIBLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	625;"	d
GLFW_VRESIZE_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	719;"	d
GLFW_WINGDIAPI_DEFINED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	108;"	d
GLFW_WINGDIAPI_DEFINED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	4211;"	d
GLFWcharfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcharfun)(GLFWwindow*,unsigned int);$/;"	t
GLFWcharmodsfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcharmodsfun)(GLFWwindow*,unsigned int,int);$/;"	t
GLFWcursor	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWcursor GLFWcursor;$/;"	t	typeref:struct:GLFWcursor
GLFWcursorenterfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcursorenterfun)(GLFWwindow*,int);$/;"	t
GLFWcursorposfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcursorposfun)(GLFWwindow*,double,double);$/;"	t
GLFWdropfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWdropfun)(GLFWwindow*,int,const char**);$/;"	t
GLFWerrorfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWerrorfun)(int,const char*);$/;"	t
GLFWframebuffersizefun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWframebuffersizefun)(GLFWwindow*,int,int);$/;"	t
GLFWgammaramp	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWgammaramp$/;"	s
GLFWgammaramp	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^} GLFWgammaramp;$/;"	t	typeref:struct:GLFWgammaramp
GLFWglproc	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (*GLFWglproc)(void);$/;"	t
GLFWimage	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWimage$/;"	s
GLFWimage	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^} GLFWimage;$/;"	t	typeref:struct:GLFWimage
GLFWjoystickfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWjoystickfun)(int,int);$/;"	t
GLFWkeyfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWkeyfun)(GLFWwindow*,int,int,int,int);$/;"	t
GLFWmonitor	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWmonitor GLFWmonitor;$/;"	t	typeref:struct:GLFWmonitor
GLFWmonitorfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWmonitorfun)(GLFWmonitor*,int);$/;"	t
GLFWmousebuttonfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWmousebuttonfun)(GLFWwindow*,int,int,int);$/;"	t
GLFWscrollfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWscrollfun)(GLFWwindow*,double,double);$/;"	t
GLFWvidmode	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWvidmode$/;"	s
GLFWvidmode	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^} GLFWvidmode;$/;"	t	typeref:struct:GLFWvidmode
GLFWvkproc	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (*GLFWvkproc)(void);$/;"	t
GLFWwindow	lib/cimgui/generator/output/cimgui_impl.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindow	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindow	src/gui.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindow	src/interactive.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindowclosefun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowclosefun)(GLFWwindow*);$/;"	t
GLFWwindowfocusfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowfocusfun)(GLFWwindow*,int);$/;"	t
GLFWwindowiconifyfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowiconifyfun)(GLFWwindow*,int);$/;"	t
GLFWwindowposfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowposfun)(GLFWwindow*,int,int);$/;"	t
GLFWwindowrefreshfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowrefreshfun)(GLFWwindow*);$/;"	t
GLFWwindowsizefun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowsizefun)(GLFWwindow*,int,int);$/;"	t
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2144;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2144;"	d
GL_ACTIVE_ATTRIBUTES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	562;"	d
GL_ACTIVE_ATTRIBUTES	lib/gl3w/GL/glcorearb.h	562;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	563;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	563;"	d
GL_ACTIVE_PROGRAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2003;"	d
GL_ACTIVE_PROGRAM	lib/gl3w/GL/glcorearb.h	2003;"	d
GL_ACTIVE_RESOURCES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2529;"	d
GL_ACTIVE_RESOURCES	lib/gl3w/GL/glcorearb.h	2529;"	d
GL_ACTIVE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1896;"	d
GL_ACTIVE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	1896;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1899;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	1899;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1897;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	lib/gl3w/GL/glcorearb.h	1897;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1898;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	lib/gl3w/GL/glcorearb.h	1898;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1900;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	1900;"	d
GL_ACTIVE_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	413;"	d
GL_ACTIVE_TEXTURE	lib/gl3w/GL/glcorearb.h	413;"	d
GL_ACTIVE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	559;"	d
GL_ACTIVE_UNIFORMS	lib/gl3w/GL/glcorearb.h	559;"	d
GL_ACTIVE_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1687;"	d
GL_ACTIVE_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	1687;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1686;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	1686;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	560;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	560;"	d
GL_ACTIVE_VARIABLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2545;"	d
GL_ACTIVE_VARIABLES	lib/gl3w/GL/glcorearb.h	2545;"	d
GL_ALIASED_LINE_WIDTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	363;"	d
GL_ALIASED_LINE_WIDTH_RANGE	lib/gl3w/GL/glcorearb.h	363;"	d
GL_ALL_BARRIER_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2162;"	d
GL_ALL_BARRIER_BITS	lib/gl3w/GL/glcorearb.h	2162;"	d
GL_ALL_SHADER_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2001;"	d
GL_ALL_SHADER_BITS	lib/gl3w/GL/glcorearb.h	2001;"	d
GL_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	275;"	d
GL_ALPHA	lib/gl3w/GL/glcorearb.h	275;"	d
GL_ALREADY_SIGNALED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1745;"	d
GL_ALREADY_SIGNALED	lib/gl3w/GL/glcorearb.h	1745;"	d
GL_ALWAYS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	119;"	d
GL_ALWAYS	lib/gl3w/GL/glcorearb.h	119;"	d
GL_AND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	248;"	d
GL_AND	lib/gl3w/GL/glcorearb.h	248;"	d
GL_AND_INVERTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	251;"	d
GL_AND_INVERTED	lib/gl3w/GL/glcorearb.h	251;"	d
GL_AND_REVERSE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	249;"	d
GL_AND_REVERSE	lib/gl3w/GL/glcorearb.h	249;"	d
GL_ANY_SAMPLES_PASSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1833;"	d
GL_ANY_SAMPLES_PASSED	lib/gl3w/GL/glcorearb.h	1833;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2361;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	lib/gl3w/GL/glcorearb.h	2361;"	d
GL_ARB_ES2_compatibility	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3953;"	d
GL_ARB_ES2_compatibility	lib/gl3w/GL/glcorearb.h	3953;"	d
GL_ARB_ES3_compatibility	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4401;"	d
GL_ARB_ES3_compatibility	lib/gl3w/GL/glcorearb.h	4401;"	d
GL_ARB_arrays_of_arrays	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4323;"	d
GL_ARB_arrays_of_arrays	lib/gl3w/GL/glcorearb.h	4323;"	d
GL_ARB_base_instance	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4207;"	d
GL_ARB_base_instance	lib/gl3w/GL/glcorearb.h	4207;"	d
GL_ARB_blend_func_extended	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3669;"	d
GL_ARB_blend_func_extended	lib/gl3w/GL/glcorearb.h	3669;"	d
GL_ARB_cl_event	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4159;"	d
GL_ARB_cl_event	lib/gl3w/GL/glcorearb.h	4159;"	d
GL_ARB_clear_buffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4327;"	d
GL_ARB_clear_buffer_object	lib/gl3w/GL/glcorearb.h	4327;"	d
GL_ARB_compressed_texture_pixel_storage	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4233;"	d
GL_ARB_compressed_texture_pixel_storage	lib/gl3w/GL/glcorearb.h	4233;"	d
GL_ARB_compute_shader	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4341;"	d
GL_ARB_compute_shader	lib/gl3w/GL/glcorearb.h	4341;"	d
GL_ARB_conservative_depth	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4237;"	d
GL_ARB_conservative_depth	lib/gl3w/GL/glcorearb.h	4237;"	d
GL_ARB_copy_buffer	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3533;"	d
GL_ARB_copy_buffer	lib/gl3w/GL/glcorearb.h	3533;"	d
GL_ARB_copy_image	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4351;"	d
GL_ARB_copy_image	lib/gl3w/GL/glcorearb.h	4351;"	d
GL_ARB_debug_output	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4167;"	d
GL_ARB_debug_output	lib/gl3w/GL/glcorearb.h	4167;"	d
GL_ARB_depth_buffer_float	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3423;"	d
GL_ARB_depth_buffer_float	lib/gl3w/GL/glcorearb.h	3423;"	d
GL_ARB_depth_clamp	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3541;"	d
GL_ARB_depth_clamp	lib/gl3w/GL/glcorearb.h	3541;"	d
GL_ARB_draw_buffers_blend	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3613;"	d
GL_ARB_draw_buffers_blend	lib/gl3w/GL/glcorearb.h	3613;"	d
GL_ARB_draw_elements_base_vertex	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3545;"	d
GL_ARB_draw_elements_base_vertex	lib/gl3w/GL/glcorearb.h	3545;"	d
GL_ARB_draw_indirect	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3827;"	d
GL_ARB_draw_indirect	lib/gl3w/GL/glcorearb.h	3827;"	d
GL_ARB_explicit_attrib_location	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3679;"	d
GL_ARB_explicit_attrib_location	lib/gl3w/GL/glcorearb.h	3679;"	d
GL_ARB_explicit_uniform_location	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4405;"	d
GL_ARB_explicit_uniform_location	lib/gl3w/GL/glcorearb.h	4405;"	d
GL_ARB_fragment_coord_conventions	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3559;"	d
GL_ARB_fragment_coord_conventions	lib/gl3w/GL/glcorearb.h	3559;"	d
GL_ARB_fragment_layer_viewport	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4409;"	d
GL_ARB_fragment_layer_viewport	lib/gl3w/GL/glcorearb.h	4409;"	d
GL_ARB_framebuffer_no_attachments	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4413;"	d
GL_ARB_framebuffer_no_attachments	lib/gl3w/GL/glcorearb.h	4413;"	d
GL_ARB_framebuffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3427;"	d
GL_ARB_framebuffer_object	lib/gl3w/GL/glcorearb.h	3427;"	d
GL_ARB_framebuffer_sRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3473;"	d
GL_ARB_framebuffer_sRGB	lib/gl3w/GL/glcorearb.h	3473;"	d
GL_ARB_get_program_binary	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3969;"	d
GL_ARB_get_program_binary	lib/gl3w/GL/glcorearb.h	3969;"	d
GL_ARB_gpu_shader5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3837;"	d
GL_ARB_gpu_shader5	lib/gl3w/GL/glcorearb.h	3837;"	d
GL_ARB_gpu_shader_fp64	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3841;"	d
GL_ARB_gpu_shader_fp64	lib/gl3w/GL/glcorearb.h	3841;"	d
GL_ARB_half_float_vertex	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3477;"	d
GL_ARB_half_float_vertex	lib/gl3w/GL/glcorearb.h	3477;"	d
GL_ARB_internalformat_query	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4241;"	d
GL_ARB_internalformat_query	lib/gl3w/GL/glcorearb.h	4241;"	d
GL_ARB_internalformat_query2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4427;"	d
GL_ARB_internalformat_query2	lib/gl3w/GL/glcorearb.h	4427;"	d
GL_ARB_invalidate_subdata	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4435;"	d
GL_ARB_invalidate_subdata	lib/gl3w/GL/glcorearb.h	4435;"	d
GL_ARB_map_buffer_alignment	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4249;"	d
GL_ARB_map_buffer_alignment	lib/gl3w/GL/glcorearb.h	4249;"	d
GL_ARB_map_buffer_range	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3481;"	d
GL_ARB_map_buffer_range	lib/gl3w/GL/glcorearb.h	3481;"	d
GL_ARB_multi_draw_indirect	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4453;"	d
GL_ARB_multi_draw_indirect	lib/gl3w/GL/glcorearb.h	4453;"	d
GL_ARB_occlusion_query2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3683;"	d
GL_ARB_occlusion_query2	lib/gl3w/GL/glcorearb.h	3683;"	d
GL_ARB_program_interface_query	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4463;"	d
GL_ARB_program_interface_query	lib/gl3w/GL/glcorearb.h	4463;"	d
GL_ARB_provoking_vertex	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3563;"	d
GL_ARB_provoking_vertex	lib/gl3w/GL/glcorearb.h	3563;"	d
GL_ARB_robust_buffer_access_behavior	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4481;"	d
GL_ARB_robust_buffer_access_behavior	lib/gl3w/GL/glcorearb.h	4481;"	d
GL_ARB_robustness	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4181;"	d
GL_ARB_robustness	lib/gl3w/GL/glcorearb.h	4181;"	d
GL_ARB_robustness_isolation	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4397;"	d
GL_ARB_robustness_isolation	lib/gl3w/GL/glcorearb.h	4397;"	d
GL_ARB_sample_shading	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3627;"	d
GL_ARB_sample_shading	lib/gl3w/GL/glcorearb.h	3627;"	d
GL_ARB_sampler_objects	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3687;"	d
GL_ARB_sampler_objects	lib/gl3w/GL/glcorearb.h	3687;"	d
GL_ARB_seamless_cube_map	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3571;"	d
GL_ARB_seamless_cube_map	lib/gl3w/GL/glcorearb.h	3571;"	d
GL_ARB_separate_shader_objects	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3981;"	d
GL_ARB_separate_shader_objects	lib/gl3w/GL/glcorearb.h	3981;"	d
GL_ARB_shader_atomic_counters	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4253;"	d
GL_ARB_shader_atomic_counters	lib/gl3w/GL/glcorearb.h	4253;"	d
GL_ARB_shader_bit_encoding	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3721;"	d
GL_ARB_shader_bit_encoding	lib/gl3w/GL/glcorearb.h	3721;"	d
GL_ARB_shader_image_load_store	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4261;"	d
GL_ARB_shader_image_load_store	lib/gl3w/GL/glcorearb.h	4261;"	d
GL_ARB_shader_image_size	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4485;"	d
GL_ARB_shader_image_size	lib/gl3w/GL/glcorearb.h	4485;"	d
GL_ARB_shader_stencil_export	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4203;"	d
GL_ARB_shader_stencil_export	lib/gl3w/GL/glcorearb.h	4203;"	d
GL_ARB_shader_storage_buffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4489;"	d
GL_ARB_shader_storage_buffer_object	lib/gl3w/GL/glcorearb.h	4489;"	d
GL_ARB_shader_subroutine	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3883;"	d
GL_ARB_shader_subroutine	lib/gl3w/GL/glcorearb.h	3883;"	d
GL_ARB_shading_language_420pack	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4219;"	d
GL_ARB_shading_language_420pack	lib/gl3w/GL/glcorearb.h	4219;"	d
GL_ARB_shading_language_include	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3647;"	d
GL_ARB_shading_language_include	lib/gl3w/GL/glcorearb.h	3647;"	d
GL_ARB_shading_language_packing	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4271;"	d
GL_ARB_shading_language_packing	lib/gl3w/GL/glcorearb.h	4271;"	d
GL_ARB_stencil_texturing	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4497;"	d
GL_ARB_stencil_texturing	lib/gl3w/GL/glcorearb.h	4497;"	d
GL_ARB_sync	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3575;"	d
GL_ARB_sync	lib/gl3w/GL/glcorearb.h	3575;"	d
GL_ARB_tessellation_shader	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3905;"	d
GL_ARB_tessellation_shader	lib/gl3w/GL/glcorearb.h	3905;"	d
GL_ARB_texture_buffer_object_rgb32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3915;"	d
GL_ARB_texture_buffer_object_rgb32	lib/gl3w/GL/glcorearb.h	3915;"	d
GL_ARB_texture_buffer_range	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4501;"	d
GL_ARB_texture_buffer_range	lib/gl3w/GL/glcorearb.h	4501;"	d
GL_ARB_texture_compression_bptc	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3665;"	d
GL_ARB_texture_compression_bptc	lib/gl3w/GL/glcorearb.h	3665;"	d
GL_ARB_texture_compression_rgtc	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3491;"	d
GL_ARB_texture_compression_rgtc	lib/gl3w/GL/glcorearb.h	3491;"	d
GL_ARB_texture_cube_map_array	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3635;"	d
GL_ARB_texture_cube_map_array	lib/gl3w/GL/glcorearb.h	3635;"	d
GL_ARB_texture_gather	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3639;"	d
GL_ARB_texture_gather	lib/gl3w/GL/glcorearb.h	3639;"	d
GL_ARB_texture_multisample	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3595;"	d
GL_ARB_texture_multisample	lib/gl3w/GL/glcorearb.h	3595;"	d
GL_ARB_texture_query_levels	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4511;"	d
GL_ARB_texture_query_levels	lib/gl3w/GL/glcorearb.h	4511;"	d
GL_ARB_texture_query_lod	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3643;"	d
GL_ARB_texture_query_lod	lib/gl3w/GL/glcorearb.h	3643;"	d
GL_ARB_texture_rg	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3495;"	d
GL_ARB_texture_rg	lib/gl3w/GL/glcorearb.h	3495;"	d
GL_ARB_texture_rgb10_a2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3725;"	d
GL_ARB_texture_rgb10_a2ui	lib/gl3w/GL/glcorearb.h	3725;"	d
GL_ARB_texture_storage	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4275;"	d
GL_ARB_texture_storage	lib/gl3w/GL/glcorearb.h	4275;"	d
GL_ARB_texture_storage_multisample	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4515;"	d
GL_ARB_texture_storage_multisample	lib/gl3w/GL/glcorearb.h	4515;"	d
GL_ARB_texture_swizzle	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3729;"	d
GL_ARB_texture_swizzle	lib/gl3w/GL/glcorearb.h	3729;"	d
GL_ARB_texture_view	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4359;"	d
GL_ARB_texture_view	lib/gl3w/GL/glcorearb.h	4359;"	d
GL_ARB_timer_query	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3733;"	d
GL_ARB_timer_query	lib/gl3w/GL/glcorearb.h	3733;"	d
GL_ARB_transform_feedback2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3919;"	d
GL_ARB_transform_feedback2	lib/gl3w/GL/glcorearb.h	3919;"	d
GL_ARB_transform_feedback3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3939;"	d
GL_ARB_transform_feedback3	lib/gl3w/GL/glcorearb.h	3939;"	d
GL_ARB_transform_feedback_instanced	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4223;"	d
GL_ARB_transform_feedback_instanced	lib/gl3w/GL/glcorearb.h	4223;"	d
GL_ARB_uniform_buffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3513;"	d
GL_ARB_uniform_buffer_object	lib/gl3w/GL/glcorearb.h	3513;"	d
GL_ARB_vertex_array_bgra	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3609;"	d
GL_ARB_vertex_array_bgra	lib/gl3w/GL/glcorearb.h	3609;"	d
GL_ARB_vertex_array_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3499;"	d
GL_ARB_vertex_array_object	lib/gl3w/GL/glcorearb.h	3499;"	d
GL_ARB_vertex_attrib_64bit	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4107;"	d
GL_ARB_vertex_attrib_64bit	lib/gl3w/GL/glcorearb.h	4107;"	d
GL_ARB_vertex_attrib_binding	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4367;"	d
GL_ARB_vertex_attrib_binding	lib/gl3w/GL/glcorearb.h	4367;"	d
GL_ARB_vertex_type_2_10_10_10_rev	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3745;"	d
GL_ARB_vertex_type_2_10_10_10_rev	lib/gl3w/GL/glcorearb.h	3745;"	d
GL_ARB_viewport_array	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4133;"	d
GL_ARB_viewport_array	lib/gl3w/GL/glcorearb.h	4133;"	d
GL_ARRAY_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	468;"	d
GL_ARRAY_BUFFER	lib/gl3w/GL/glcorearb.h	468;"	d
GL_ARRAY_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	470;"	d
GL_ARRAY_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	470;"	d
GL_ARRAY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2535;"	d
GL_ARRAY_SIZE	lib/gl3w/GL/glcorearb.h	2535;"	d
GL_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2538;"	d
GL_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	2538;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2161;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2161;"	d
GL_ATOMIC_COUNTER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2118;"	d
GL_ATOMIC_COUNTER_BUFFER	lib/gl3w/GL/glcorearb.h	2118;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2123;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2123;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2124;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	lib/gl3w/GL/glcorearb.h	2124;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2119;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	2119;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2122;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	lib/gl3w/GL/glcorearb.h	2122;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2541;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	lib/gl3w/GL/glcorearb.h	2541;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2319;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	2319;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2129;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	2129;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2128;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	2128;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2126;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	2126;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2127;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	2127;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2125;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	2125;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2121;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	2121;"	d
GL_ATOMIC_COUNTER_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2120;"	d
GL_ATOMIC_COUNTER_BUFFER_START	lib/gl3w/GL/glcorearb.h	2120;"	d
GL_ATTACHED_SHADERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	558;"	d
GL_ATTACHED_SHADERS	lib/gl3w/GL/glcorearb.h	558;"	d
GL_AUTO_GENERATE_MIPMAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2439;"	d
GL_AUTO_GENERATE_MIPMAP	lib/gl3w/GL/glcorearb.h	2439;"	d
GL_BACK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	140;"	d
GL_BACK	lib/gl3w/GL/glcorearb.h	140;"	d
GL_BACK_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	137;"	d
GL_BACK_LEFT	lib/gl3w/GL/glcorearb.h	137;"	d
GL_BACK_RIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	138;"	d
GL_BACK_RIGHT	lib/gl3w/GL/glcorearb.h	138;"	d
GL_BGR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	350;"	d
GL_BGR	lib/gl3w/GL/glcorearb.h	350;"	d
GL_BGRA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	351;"	d
GL_BGRA	lib/gl3w/GL/glcorearb.h	351;"	d
GL_BGRA_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	667;"	d
GL_BGRA_INTEGER	lib/gl3w/GL/glcorearb.h	667;"	d
GL_BGR_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	666;"	d
GL_BGR_INTEGER	lib/gl3w/GL/glcorearb.h	666;"	d
GL_BLEND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	184;"	d
GL_BLEND	lib/gl3w/GL/glcorearb.h	184;"	d
GL_BLEND_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	371;"	d
GL_BLEND_COLOR	lib/gl3w/GL/glcorearb.h	371;"	d
GL_BLEND_DST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	182;"	d
GL_BLEND_DST	lib/gl3w/GL/glcorearb.h	182;"	d
GL_BLEND_DST_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	445;"	d
GL_BLEND_DST_ALPHA	lib/gl3w/GL/glcorearb.h	445;"	d
GL_BLEND_DST_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	443;"	d
GL_BLEND_DST_RGB	lib/gl3w/GL/glcorearb.h	443;"	d
GL_BLEND_EQUATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	375;"	d
GL_BLEND_EQUATION	lib/gl3w/GL/glcorearb.h	375;"	d
GL_BLEND_EQUATION_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	522;"	d
GL_BLEND_EQUATION_ALPHA	lib/gl3w/GL/glcorearb.h	522;"	d
GL_BLEND_EQUATION_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	493;"	d
GL_BLEND_EQUATION_RGB	lib/gl3w/GL/glcorearb.h	493;"	d
GL_BLEND_SRC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	183;"	d
GL_BLEND_SRC	lib/gl3w/GL/glcorearb.h	183;"	d
GL_BLEND_SRC_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	446;"	d
GL_BLEND_SRC_ALPHA	lib/gl3w/GL/glcorearb.h	446;"	d
GL_BLEND_SRC_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	444;"	d
GL_BLEND_SRC_RGB	lib/gl3w/GL/glcorearb.h	444;"	d
GL_BLOCK_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2537;"	d
GL_BLOCK_INDEX	lib/gl3w/GL/glcorearb.h	2537;"	d
GL_BLUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	274;"	d
GL_BLUE	lib/gl3w/GL/glcorearb.h	274;"	d
GL_BLUE_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	663;"	d
GL_BLUE_INTEGER	lib/gl3w/GL/glcorearb.h	663;"	d
GL_BOOL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	540;"	d
GL_BOOL	lib/gl3w/GL/glcorearb.h	540;"	d
GL_BOOL_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	541;"	d
GL_BOOL_VEC2	lib/gl3w/GL/glcorearb.h	541;"	d
GL_BOOL_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	542;"	d
GL_BOOL_VEC3	lib/gl3w/GL/glcorearb.h	542;"	d
GL_BOOL_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	543;"	d
GL_BOOL_VEC4	lib/gl3w/GL/glcorearb.h	543;"	d
GL_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2277;"	d
GL_BUFFER	lib/gl3w/GL/glcorearb.h	2277;"	d
GL_BUFFER_ACCESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	476;"	d
GL_BUFFER_ACCESS	lib/gl3w/GL/glcorearb.h	476;"	d
GL_BUFFER_ACCESS_FLAGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	692;"	d
GL_BUFFER_ACCESS_FLAGS	lib/gl3w/GL/glcorearb.h	692;"	d
GL_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2542;"	d
GL_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	2542;"	d
GL_BUFFER_DATA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2543;"	d
GL_BUFFER_DATA_SIZE	lib/gl3w/GL/glcorearb.h	2543;"	d
GL_BUFFER_MAPPED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	477;"	d
GL_BUFFER_MAPPED	lib/gl3w/GL/glcorearb.h	477;"	d
GL_BUFFER_MAP_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	693;"	d
GL_BUFFER_MAP_LENGTH	lib/gl3w/GL/glcorearb.h	693;"	d
GL_BUFFER_MAP_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	694;"	d
GL_BUFFER_MAP_OFFSET	lib/gl3w/GL/glcorearb.h	694;"	d
GL_BUFFER_MAP_POINTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	478;"	d
GL_BUFFER_MAP_POINTER	lib/gl3w/GL/glcorearb.h	478;"	d
GL_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	462;"	d
GL_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	462;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2158;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2158;"	d
GL_BUFFER_USAGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	463;"	d
GL_BUFFER_USAGE	lib/gl3w/GL/glcorearb.h	463;"	d
GL_BUFFER_VARIABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2513;"	d
GL_BUFFER_VARIABLE	lib/gl3w/GL/glcorearb.h	2513;"	d
GL_BYTE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	235;"	d
GL_BYTE	lib/gl3w/GL/glcorearb.h	235;"	d
GL_CAVEAT_SUPPORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2472;"	d
GL_CAVEAT_SUPPORT	lib/gl3w/GL/glcorearb.h	2472;"	d
GL_CCW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	152;"	d
GL_CCW	lib/gl3w/GL/glcorearb.h	152;"	d
GL_CLAMP_READ_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	620;"	d
GL_CLAMP_READ_COLOR	lib/gl3w/GL/glcorearb.h	620;"	d
GL_CLAMP_TO_BORDER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	439;"	d
GL_CLAMP_TO_BORDER	lib/gl3w/GL/glcorearb.h	439;"	d
GL_CLAMP_TO_EDGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	354;"	d
GL_CLAMP_TO_EDGE	lib/gl3w/GL/glcorearb.h	354;"	d
GL_CLEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	247;"	d
GL_CLEAR	lib/gl3w/GL/glcorearb.h	247;"	d
GL_CLEAR_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2468;"	d
GL_CLEAR_BUFFER	lib/gl3w/GL/glcorearb.h	2468;"	d
GL_CLIP_DISTANCE0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	596;"	d
GL_CLIP_DISTANCE0	lib/gl3w/GL/glcorearb.h	596;"	d
GL_CLIP_DISTANCE1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	597;"	d
GL_CLIP_DISTANCE1	lib/gl3w/GL/glcorearb.h	597;"	d
GL_CLIP_DISTANCE2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	598;"	d
GL_CLIP_DISTANCE2	lib/gl3w/GL/glcorearb.h	598;"	d
GL_CLIP_DISTANCE3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	599;"	d
GL_CLIP_DISTANCE3	lib/gl3w/GL/glcorearb.h	599;"	d
GL_CLIP_DISTANCE4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	600;"	d
GL_CLIP_DISTANCE4	lib/gl3w/GL/glcorearb.h	600;"	d
GL_CLIP_DISTANCE5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	601;"	d
GL_CLIP_DISTANCE5	lib/gl3w/GL/glcorearb.h	601;"	d
GL_CLIP_DISTANCE6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	602;"	d
GL_CLIP_DISTANCE6	lib/gl3w/GL/glcorearb.h	602;"	d
GL_CLIP_DISTANCE7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	603;"	d
GL_CLIP_DISTANCE7	lib/gl3w/GL/glcorearb.h	603;"	d
GL_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	266;"	d
GL_COLOR	lib/gl3w/GL/glcorearb.h	266;"	d
GL_COLOR_ATTACHMENT0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1581;"	d
GL_COLOR_ATTACHMENT0	lib/gl3w/GL/glcorearb.h	1581;"	d
GL_COLOR_ATTACHMENT1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1582;"	d
GL_COLOR_ATTACHMENT1	lib/gl3w/GL/glcorearb.h	1582;"	d
GL_COLOR_ATTACHMENT10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1591;"	d
GL_COLOR_ATTACHMENT10	lib/gl3w/GL/glcorearb.h	1591;"	d
GL_COLOR_ATTACHMENT11	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1592;"	d
GL_COLOR_ATTACHMENT11	lib/gl3w/GL/glcorearb.h	1592;"	d
GL_COLOR_ATTACHMENT12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1593;"	d
GL_COLOR_ATTACHMENT12	lib/gl3w/GL/glcorearb.h	1593;"	d
GL_COLOR_ATTACHMENT13	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1594;"	d
GL_COLOR_ATTACHMENT13	lib/gl3w/GL/glcorearb.h	1594;"	d
GL_COLOR_ATTACHMENT14	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1595;"	d
GL_COLOR_ATTACHMENT14	lib/gl3w/GL/glcorearb.h	1595;"	d
GL_COLOR_ATTACHMENT15	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1596;"	d
GL_COLOR_ATTACHMENT15	lib/gl3w/GL/glcorearb.h	1596;"	d
GL_COLOR_ATTACHMENT2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1583;"	d
GL_COLOR_ATTACHMENT2	lib/gl3w/GL/glcorearb.h	1583;"	d
GL_COLOR_ATTACHMENT3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1584;"	d
GL_COLOR_ATTACHMENT3	lib/gl3w/GL/glcorearb.h	1584;"	d
GL_COLOR_ATTACHMENT4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1585;"	d
GL_COLOR_ATTACHMENT4	lib/gl3w/GL/glcorearb.h	1585;"	d
GL_COLOR_ATTACHMENT5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1586;"	d
GL_COLOR_ATTACHMENT5	lib/gl3w/GL/glcorearb.h	1586;"	d
GL_COLOR_ATTACHMENT6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1587;"	d
GL_COLOR_ATTACHMENT6	lib/gl3w/GL/glcorearb.h	1587;"	d
GL_COLOR_ATTACHMENT7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1588;"	d
GL_COLOR_ATTACHMENT7	lib/gl3w/GL/glcorearb.h	1588;"	d
GL_COLOR_ATTACHMENT8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1589;"	d
GL_COLOR_ATTACHMENT8	lib/gl3w/GL/glcorearb.h	1589;"	d
GL_COLOR_ATTACHMENT9	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1590;"	d
GL_COLOR_ATTACHMENT9	lib/gl3w/GL/glcorearb.h	1590;"	d
GL_COLOR_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	98;"	d
GL_COLOR_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	98;"	d
GL_COLOR_CLEAR_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	191;"	d
GL_COLOR_CLEAR_VALUE	lib/gl3w/GL/glcorearb.h	191;"	d
GL_COLOR_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2421;"	d
GL_COLOR_COMPONENTS	lib/gl3w/GL/glcorearb.h	2421;"	d
GL_COLOR_ENCODING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2440;"	d
GL_COLOR_ENCODING	lib/gl3w/GL/glcorearb.h	2440;"	d
GL_COLOR_LOGIC_OP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	186;"	d
GL_COLOR_LOGIC_OP	lib/gl3w/GL/glcorearb.h	186;"	d
GL_COLOR_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2424;"	d
GL_COLOR_RENDERABLE	lib/gl3w/GL/glcorearb.h	2424;"	d
GL_COLOR_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	192;"	d
GL_COLOR_WRITEMASK	lib/gl3w/GL/glcorearb.h	192;"	d
GL_COMMAND_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2155;"	d
GL_COMMAND_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2155;"	d
GL_COMPARE_REF_TO_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	595;"	d
GL_COMPARE_REF_TO_TEXTURE	lib/gl3w/GL/glcorearb.h	595;"	d
GL_COMPATIBLE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1904;"	d
GL_COMPATIBLE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	1904;"	d
GL_COMPILE_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	554;"	d
GL_COMPILE_STATUS	lib/gl3w/GL/glcorearb.h	554;"	d
GL_COMPRESSED_R11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2356;"	d
GL_COMPRESSED_R11_EAC	lib/gl3w/GL/glcorearb.h	2356;"	d
GL_COMPRESSED_RED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	609;"	d
GL_COMPRESSED_RED	lib/gl3w/GL/glcorearb.h	609;"	d
GL_COMPRESSED_RED_RGTC1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1636;"	d
GL_COMPRESSED_RED_RGTC1	lib/gl3w/GL/glcorearb.h	1636;"	d
GL_COMPRESSED_RG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	610;"	d
GL_COMPRESSED_RG	lib/gl3w/GL/glcorearb.h	610;"	d
GL_COMPRESSED_RG11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2358;"	d
GL_COMPRESSED_RG11_EAC	lib/gl3w/GL/glcorearb.h	2358;"	d
GL_COMPRESSED_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	432;"	d
GL_COMPRESSED_RGB	lib/gl3w/GL/glcorearb.h	432;"	d
GL_COMPRESSED_RGB8_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2350;"	d
GL_COMPRESSED_RGB8_ETC2	lib/gl3w/GL/glcorearb.h	2350;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2352;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/gl3w/GL/glcorearb.h	2352;"	d
GL_COMPRESSED_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	433;"	d
GL_COMPRESSED_RGBA	lib/gl3w/GL/glcorearb.h	433;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2354;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	lib/gl3w/GL/glcorearb.h	2354;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2235;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	lib/gl3w/GL/glcorearb.h	2235;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2232;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	lib/gl3w/GL/glcorearb.h	2232;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2233;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	lib/gl3w/GL/glcorearb.h	2233;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2234;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	lib/gl3w/GL/glcorearb.h	2234;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2236;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	lib/gl3w/GL/glcorearb.h	2236;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2237;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	lib/gl3w/GL/glcorearb.h	2237;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2224;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	lib/gl3w/GL/glcorearb.h	2224;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2225;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	lib/gl3w/GL/glcorearb.h	2225;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2226;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	lib/gl3w/GL/glcorearb.h	2226;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2227;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	lib/gl3w/GL/glcorearb.h	2227;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2228;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	lib/gl3w/GL/glcorearb.h	2228;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2229;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	lib/gl3w/GL/glcorearb.h	2229;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2230;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	lib/gl3w/GL/glcorearb.h	2230;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2231;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	lib/gl3w/GL/glcorearb.h	2231;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1815;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	lib/gl3w/GL/glcorearb.h	1815;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1817;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	lib/gl3w/GL/glcorearb.h	1817;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1818;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	lib/gl3w/GL/glcorearb.h	1818;"	d
GL_COMPRESSED_RG_RGTC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1638;"	d
GL_COMPRESSED_RG_RGTC2	lib/gl3w/GL/glcorearb.h	1638;"	d
GL_COMPRESSED_SIGNED_R11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2357;"	d
GL_COMPRESSED_SIGNED_R11_EAC	lib/gl3w/GL/glcorearb.h	2357;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1637;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	lib/gl3w/GL/glcorearb.h	1637;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2359;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	lib/gl3w/GL/glcorearb.h	2359;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1639;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	lib/gl3w/GL/glcorearb.h	1639;"	d
GL_COMPRESSED_SRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	590;"	d
GL_COMPRESSED_SRGB	lib/gl3w/GL/glcorearb.h	590;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2249;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	lib/gl3w/GL/glcorearb.h	2249;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2246;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	lib/gl3w/GL/glcorearb.h	2246;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2247;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	lib/gl3w/GL/glcorearb.h	2247;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2248;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	lib/gl3w/GL/glcorearb.h	2248;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2250;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	lib/gl3w/GL/glcorearb.h	2250;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2251;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	lib/gl3w/GL/glcorearb.h	2251;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2238;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	lib/gl3w/GL/glcorearb.h	2238;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2239;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	lib/gl3w/GL/glcorearb.h	2239;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2240;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	lib/gl3w/GL/glcorearb.h	2240;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2241;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	lib/gl3w/GL/glcorearb.h	2241;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2242;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	lib/gl3w/GL/glcorearb.h	2242;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2243;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	lib/gl3w/GL/glcorearb.h	2243;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2244;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	lib/gl3w/GL/glcorearb.h	2244;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2245;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	lib/gl3w/GL/glcorearb.h	2245;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2355;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	lib/gl3w/GL/glcorearb.h	2355;"	d
GL_COMPRESSED_SRGB8_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2351;"	d
GL_COMPRESSED_SRGB8_ETC2	lib/gl3w/GL/glcorearb.h	2351;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2353;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/gl3w/GL/glcorearb.h	2353;"	d
GL_COMPRESSED_SRGB_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	591;"	d
GL_COMPRESSED_SRGB_ALPHA	lib/gl3w/GL/glcorearb.h	591;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1816;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	lib/gl3w/GL/glcorearb.h	1816;"	d
GL_COMPRESSED_TEXTURE_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	438;"	d
GL_COMPRESSED_TEXTURE_FORMATS	lib/gl3w/GL/glcorearb.h	438;"	d
GL_COMPUTE_LOCAL_WORK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2317;"	d
GL_COMPUTE_LOCAL_WORK_SIZE	lib/gl3w/GL/glcorearb.h	2317;"	d
GL_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2305;"	d
GL_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	2305;"	d
GL_COMPUTE_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2322;"	d
GL_COMPUTE_SHADER_BIT	lib/gl3w/GL/glcorearb.h	2322;"	d
GL_COMPUTE_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2521;"	d
GL_COMPUTE_SUBROUTINE	lib/gl3w/GL/glcorearb.h	2521;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2527;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	2527;"	d
GL_COMPUTE_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2450;"	d
GL_COMPUTE_TEXTURE	lib/gl3w/GL/glcorearb.h	2450;"	d
GL_CONDITION_SATISFIED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1747;"	d
GL_CONDITION_SATISFIED	lib/gl3w/GL/glcorearb.h	1747;"	d
GL_CONSTANT_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	369;"	d
GL_CONSTANT_ALPHA	lib/gl3w/GL/glcorearb.h	369;"	d
GL_CONSTANT_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	367;"	d
GL_CONSTANT_COLOR	lib/gl3w/GL/glcorearb.h	367;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	891;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	lib/gl3w/GL/glcorearb.h	891;"	d
GL_CONTEXT_CORE_PROFILE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	890;"	d
GL_CONTEXT_CORE_PROFILE_BIT	lib/gl3w/GL/glcorearb.h	890;"	d
GL_CONTEXT_FLAGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	608;"	d
GL_CONTEXT_FLAGS	lib/gl3w/GL/glcorearb.h	608;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2293;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	lib/gl3w/GL/glcorearb.h	2293;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	611;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	lib/gl3w/GL/glcorearb.h	611;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2074;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	lib/gl3w/GL/glcorearb.h	2074;"	d
GL_CONTEXT_PROFILE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	911;"	d
GL_CONTEXT_PROFILE_MASK	lib/gl3w/GL/glcorearb.h	911;"	d
GL_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	250;"	d
GL_COPY	lib/gl3w/GL/glcorearb.h	250;"	d
GL_COPY_INVERTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	259;"	d
GL_COPY_INVERTED	lib/gl3w/GL/glcorearb.h	259;"	d
GL_COPY_READ_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1709;"	d
GL_COPY_READ_BUFFER	lib/gl3w/GL/glcorearb.h	1709;"	d
GL_COPY_READ_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1708;"	d
GL_COPY_READ_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1708;"	d
GL_COPY_WRITE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1711;"	d
GL_COPY_WRITE_BUFFER	lib/gl3w/GL/glcorearb.h	1711;"	d
GL_COPY_WRITE_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1710;"	d
GL_COPY_WRITE_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1710;"	d
GL_CULL_FACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	163;"	d
GL_CULL_FACE	lib/gl3w/GL/glcorearb.h	163;"	d
GL_CULL_FACE_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	164;"	d
GL_CULL_FACE_MODE	lib/gl3w/GL/glcorearb.h	164;"	d
GL_CURRENT_PROGRAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	566;"	d
GL_CURRENT_PROGRAM	lib/gl3w/GL/glcorearb.h	566;"	d
GL_CURRENT_QUERY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	465;"	d
GL_CURRENT_QUERY	lib/gl3w/GL/glcorearb.h	465;"	d
GL_CURRENT_VERTEX_ATTRIB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	498;"	d
GL_CURRENT_VERTEX_ATTRIB	lib/gl3w/GL/glcorearb.h	498;"	d
GL_CW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	151;"	d
GL_CW	lib/gl3w/GL/glcorearb.h	151;"	d
GL_DEBUG_CALLBACK_FUNCTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2257;"	d
GL_DEBUG_CALLBACK_FUNCTION	lib/gl3w/GL/glcorearb.h	2257;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2050;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	lib/gl3w/GL/glcorearb.h	2050;"	d
GL_DEBUG_CALLBACK_USER_PARAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2258;"	d
GL_DEBUG_CALLBACK_USER_PARAM	lib/gl3w/GL/glcorearb.h	2258;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2051;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	lib/gl3w/GL/glcorearb.h	2051;"	d
GL_DEBUG_GROUP_STACK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2276;"	d
GL_DEBUG_GROUP_STACK_DEPTH	lib/gl3w/GL/glcorearb.h	2276;"	d
GL_DEBUG_LOGGED_MESSAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2288;"	d
GL_DEBUG_LOGGED_MESSAGES	lib/gl3w/GL/glcorearb.h	2288;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2066;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	lib/gl3w/GL/glcorearb.h	2066;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2256;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	lib/gl3w/GL/glcorearb.h	2256;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2049;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	lib/gl3w/GL/glcorearb.h	2049;"	d
GL_DEBUG_OUTPUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2292;"	d
GL_DEBUG_OUTPUT	lib/gl3w/GL/glcorearb.h	2292;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2255;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	lib/gl3w/GL/glcorearb.h	2255;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2048;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	lib/gl3w/GL/glcorearb.h	2048;"	d
GL_DEBUG_SEVERITY_HIGH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2289;"	d
GL_DEBUG_SEVERITY_HIGH	lib/gl3w/GL/glcorearb.h	2289;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2067;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	lib/gl3w/GL/glcorearb.h	2067;"	d
GL_DEBUG_SEVERITY_LOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2291;"	d
GL_DEBUG_SEVERITY_LOW	lib/gl3w/GL/glcorearb.h	2291;"	d
GL_DEBUG_SEVERITY_LOW_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2069;"	d
GL_DEBUG_SEVERITY_LOW_ARB	lib/gl3w/GL/glcorearb.h	2069;"	d
GL_DEBUG_SEVERITY_MEDIUM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2290;"	d
GL_DEBUG_SEVERITY_MEDIUM	lib/gl3w/GL/glcorearb.h	2290;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2068;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	lib/gl3w/GL/glcorearb.h	2068;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2274;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	lib/gl3w/GL/glcorearb.h	2274;"	d
GL_DEBUG_SOURCE_API	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2259;"	d
GL_DEBUG_SOURCE_API	lib/gl3w/GL/glcorearb.h	2259;"	d
GL_DEBUG_SOURCE_API_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2052;"	d
GL_DEBUG_SOURCE_API_ARB	lib/gl3w/GL/glcorearb.h	2052;"	d
GL_DEBUG_SOURCE_APPLICATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2263;"	d
GL_DEBUG_SOURCE_APPLICATION	lib/gl3w/GL/glcorearb.h	2263;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2056;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	lib/gl3w/GL/glcorearb.h	2056;"	d
GL_DEBUG_SOURCE_OTHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2264;"	d
GL_DEBUG_SOURCE_OTHER	lib/gl3w/GL/glcorearb.h	2264;"	d
GL_DEBUG_SOURCE_OTHER_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2057;"	d
GL_DEBUG_SOURCE_OTHER_ARB	lib/gl3w/GL/glcorearb.h	2057;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2261;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	lib/gl3w/GL/glcorearb.h	2261;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2054;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	lib/gl3w/GL/glcorearb.h	2054;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2262;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	lib/gl3w/GL/glcorearb.h	2262;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2055;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	lib/gl3w/GL/glcorearb.h	2055;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2260;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	lib/gl3w/GL/glcorearb.h	2260;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2053;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	lib/gl3w/GL/glcorearb.h	2053;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2266;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	lib/gl3w/GL/glcorearb.h	2266;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2059;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	lib/gl3w/GL/glcorearb.h	2059;"	d
GL_DEBUG_TYPE_ERROR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2265;"	d
GL_DEBUG_TYPE_ERROR	lib/gl3w/GL/glcorearb.h	2265;"	d
GL_DEBUG_TYPE_ERROR_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2058;"	d
GL_DEBUG_TYPE_ERROR_ARB	lib/gl3w/GL/glcorearb.h	2058;"	d
GL_DEBUG_TYPE_MARKER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2271;"	d
GL_DEBUG_TYPE_MARKER	lib/gl3w/GL/glcorearb.h	2271;"	d
GL_DEBUG_TYPE_OTHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2270;"	d
GL_DEBUG_TYPE_OTHER	lib/gl3w/GL/glcorearb.h	2270;"	d
GL_DEBUG_TYPE_OTHER_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2063;"	d
GL_DEBUG_TYPE_OTHER_ARB	lib/gl3w/GL/glcorearb.h	2063;"	d
GL_DEBUG_TYPE_PERFORMANCE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2269;"	d
GL_DEBUG_TYPE_PERFORMANCE	lib/gl3w/GL/glcorearb.h	2269;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2062;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	lib/gl3w/GL/glcorearb.h	2062;"	d
GL_DEBUG_TYPE_POP_GROUP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2273;"	d
GL_DEBUG_TYPE_POP_GROUP	lib/gl3w/GL/glcorearb.h	2273;"	d
GL_DEBUG_TYPE_PORTABILITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2268;"	d
GL_DEBUG_TYPE_PORTABILITY	lib/gl3w/GL/glcorearb.h	2268;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2061;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	lib/gl3w/GL/glcorearb.h	2061;"	d
GL_DEBUG_TYPE_PUSH_GROUP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2272;"	d
GL_DEBUG_TYPE_PUSH_GROUP	lib/gl3w/GL/glcorearb.h	2272;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2267;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	lib/gl3w/GL/glcorearb.h	2267;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2060;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	lib/gl3w/GL/glcorearb.h	2060;"	d
GL_DECR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	286;"	d
GL_DECR	lib/gl3w/GL/glcorearb.h	286;"	d
GL_DECR_WRAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	455;"	d
GL_DECR_WRAP	lib/gl3w/GL/glcorearb.h	455;"	d
GL_DELETE_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	553;"	d
GL_DELETE_STATUS	lib/gl3w/GL/glcorearb.h	553;"	d
GL_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	267;"	d
GL_DEPTH	lib/gl3w/GL/glcorearb.h	267;"	d
GL_DEPTH24_STENCIL8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1554;"	d
GL_DEPTH24_STENCIL8	lib/gl3w/GL/glcorearb.h	1554;"	d
GL_DEPTH32F_STENCIL8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1534;"	d
GL_DEPTH32F_STENCIL8	lib/gl3w/GL/glcorearb.h	1534;"	d
GL_DEPTH_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1597;"	d
GL_DEPTH_ATTACHMENT	lib/gl3w/GL/glcorearb.h	1597;"	d
GL_DEPTH_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	96;"	d
GL_DEPTH_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	96;"	d
GL_DEPTH_CLAMP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1715;"	d
GL_DEPTH_CLAMP	lib/gl3w/GL/glcorearb.h	1715;"	d
GL_DEPTH_CLEAR_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	169;"	d
GL_DEPTH_CLEAR_VALUE	lib/gl3w/GL/glcorearb.h	169;"	d
GL_DEPTH_COMPONENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	271;"	d
GL_DEPTH_COMPONENT	lib/gl3w/GL/glcorearb.h	271;"	d
GL_DEPTH_COMPONENT16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	448;"	d
GL_DEPTH_COMPONENT16	lib/gl3w/GL/glcorearb.h	448;"	d
GL_DEPTH_COMPONENT24	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	449;"	d
GL_DEPTH_COMPONENT24	lib/gl3w/GL/glcorearb.h	449;"	d
GL_DEPTH_COMPONENT32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	450;"	d
GL_DEPTH_COMPONENT32	lib/gl3w/GL/glcorearb.h	450;"	d
GL_DEPTH_COMPONENT32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1533;"	d
GL_DEPTH_COMPONENT32F	lib/gl3w/GL/glcorearb.h	1533;"	d
GL_DEPTH_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2422;"	d
GL_DEPTH_COMPONENTS	lib/gl3w/GL/glcorearb.h	2422;"	d
GL_DEPTH_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	170;"	d
GL_DEPTH_FUNC	lib/gl3w/GL/glcorearb.h	170;"	d
GL_DEPTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	166;"	d
GL_DEPTH_RANGE	lib/gl3w/GL/glcorearb.h	166;"	d
GL_DEPTH_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2425;"	d
GL_DEPTH_RENDERABLE	lib/gl3w/GL/glcorearb.h	2425;"	d
GL_DEPTH_STENCIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1552;"	d
GL_DEPTH_STENCIL	lib/gl3w/GL/glcorearb.h	1552;"	d
GL_DEPTH_STENCIL_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1550;"	d
GL_DEPTH_STENCIL_ATTACHMENT	lib/gl3w/GL/glcorearb.h	1550;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2588;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	lib/gl3w/GL/glcorearb.h	2588;"	d
GL_DEPTH_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	167;"	d
GL_DEPTH_TEST	lib/gl3w/GL/glcorearb.h	167;"	d
GL_DEPTH_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	168;"	d
GL_DEPTH_WRITEMASK	lib/gl3w/GL/glcorearb.h	168;"	d
GL_DISPATCH_INDIRECT_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2320;"	d
GL_DISPATCH_INDIRECT_BUFFER	lib/gl3w/GL/glcorearb.h	2320;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2321;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	2321;"	d
GL_DISPLAY_LIST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2283;"	d
GL_DISPLAY_LIST	lib/gl3w/GL/glcorearb.h	2283;"	d
GL_DITHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	181;"	d
GL_DITHER	lib/gl3w/GL/glcorearb.h	181;"	d
GL_DONT_CARE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	231;"	d
GL_DONT_CARE	lib/gl3w/GL/glcorearb.h	231;"	d
GL_DOUBLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	242;"	d
GL_DOUBLE	lib/gl3w/GL/glcorearb.h	242;"	d
GL_DOUBLEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	193;"	d
GL_DOUBLEBUFFER	lib/gl3w/GL/glcorearb.h	193;"	d
GL_DOUBLE_MAT2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1884;"	d
GL_DOUBLE_MAT2	lib/gl3w/GL/glcorearb.h	1884;"	d
GL_DOUBLE_MAT2x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1887;"	d
GL_DOUBLE_MAT2x3	lib/gl3w/GL/glcorearb.h	1887;"	d
GL_DOUBLE_MAT2x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1888;"	d
GL_DOUBLE_MAT2x4	lib/gl3w/GL/glcorearb.h	1888;"	d
GL_DOUBLE_MAT3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1885;"	d
GL_DOUBLE_MAT3	lib/gl3w/GL/glcorearb.h	1885;"	d
GL_DOUBLE_MAT3x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1889;"	d
GL_DOUBLE_MAT3x2	lib/gl3w/GL/glcorearb.h	1889;"	d
GL_DOUBLE_MAT3x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1890;"	d
GL_DOUBLE_MAT3x4	lib/gl3w/GL/glcorearb.h	1890;"	d
GL_DOUBLE_MAT4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1886;"	d
GL_DOUBLE_MAT4	lib/gl3w/GL/glcorearb.h	1886;"	d
GL_DOUBLE_MAT4x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1891;"	d
GL_DOUBLE_MAT4x2	lib/gl3w/GL/glcorearb.h	1891;"	d
GL_DOUBLE_MAT4x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1892;"	d
GL_DOUBLE_MAT4x3	lib/gl3w/GL/glcorearb.h	1892;"	d
GL_DOUBLE_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1881;"	d
GL_DOUBLE_VEC2	lib/gl3w/GL/glcorearb.h	1881;"	d
GL_DOUBLE_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1882;"	d
GL_DOUBLE_VEC3	lib/gl3w/GL/glcorearb.h	1882;"	d
GL_DOUBLE_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1883;"	d
GL_DOUBLE_VEC4	lib/gl3w/GL/glcorearb.h	1883;"	d
GL_DRAW_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	187;"	d
GL_DRAW_BUFFER	lib/gl3w/GL/glcorearb.h	187;"	d
GL_DRAW_BUFFER0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	506;"	d
GL_DRAW_BUFFER0	lib/gl3w/GL/glcorearb.h	506;"	d
GL_DRAW_BUFFER1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	507;"	d
GL_DRAW_BUFFER1	lib/gl3w/GL/glcorearb.h	507;"	d
GL_DRAW_BUFFER10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	516;"	d
GL_DRAW_BUFFER10	lib/gl3w/GL/glcorearb.h	516;"	d
GL_DRAW_BUFFER11	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	517;"	d
GL_DRAW_BUFFER11	lib/gl3w/GL/glcorearb.h	517;"	d
GL_DRAW_BUFFER12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	518;"	d
GL_DRAW_BUFFER12	lib/gl3w/GL/glcorearb.h	518;"	d
GL_DRAW_BUFFER13	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	519;"	d
GL_DRAW_BUFFER13	lib/gl3w/GL/glcorearb.h	519;"	d
GL_DRAW_BUFFER14	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	520;"	d
GL_DRAW_BUFFER14	lib/gl3w/GL/glcorearb.h	520;"	d
GL_DRAW_BUFFER15	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	521;"	d
GL_DRAW_BUFFER15	lib/gl3w/GL/glcorearb.h	521;"	d
GL_DRAW_BUFFER2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	508;"	d
GL_DRAW_BUFFER2	lib/gl3w/GL/glcorearb.h	508;"	d
GL_DRAW_BUFFER3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	509;"	d
GL_DRAW_BUFFER3	lib/gl3w/GL/glcorearb.h	509;"	d
GL_DRAW_BUFFER4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	510;"	d
GL_DRAW_BUFFER4	lib/gl3w/GL/glcorearb.h	510;"	d
GL_DRAW_BUFFER5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	511;"	d
GL_DRAW_BUFFER5	lib/gl3w/GL/glcorearb.h	511;"	d
GL_DRAW_BUFFER6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	512;"	d
GL_DRAW_BUFFER6	lib/gl3w/GL/glcorearb.h	512;"	d
GL_DRAW_BUFFER7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	513;"	d
GL_DRAW_BUFFER7	lib/gl3w/GL/glcorearb.h	513;"	d
GL_DRAW_BUFFER8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	514;"	d
GL_DRAW_BUFFER8	lib/gl3w/GL/glcorearb.h	514;"	d
GL_DRAW_BUFFER9	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	515;"	d
GL_DRAW_BUFFER9	lib/gl3w/GL/glcorearb.h	515;"	d
GL_DRAW_FRAMEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1566;"	d
GL_DRAW_FRAMEBUFFER	lib/gl3w/GL/glcorearb.h	1566;"	d
GL_DRAW_FRAMEBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1563;"	d
GL_DRAW_FRAMEBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1563;"	d
GL_DRAW_INDIRECT_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1866;"	d
GL_DRAW_INDIRECT_BUFFER	lib/gl3w/GL/glcorearb.h	1866;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1867;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1867;"	d
GL_DST_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	127;"	d
GL_DST_ALPHA	lib/gl3w/GL/glcorearb.h	127;"	d
GL_DST_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	130;"	d
GL_DST_COLOR	lib/gl3w/GL/glcorearb.h	130;"	d
GL_DYNAMIC_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	487;"	d
GL_DYNAMIC_COPY	lib/gl3w/GL/glcorearb.h	487;"	d
GL_DYNAMIC_DRAW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	485;"	d
GL_DYNAMIC_DRAW	lib/gl3w/GL/glcorearb.h	485;"	d
GL_DYNAMIC_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	486;"	d
GL_DYNAMIC_READ	lib/gl3w/GL/glcorearb.h	486;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2151;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2151;"	d
GL_ELEMENT_ARRAY_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	469;"	d
GL_ELEMENT_ARRAY_BUFFER	lib/gl3w/GL/glcorearb.h	469;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	471;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	471;"	d
GL_EQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	114;"	d
GL_EQUAL	lib/gl3w/GL/glcorearb.h	114;"	d
GL_EQUIV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	256;"	d
GL_EQUIV	lib/gl3w/GL/glcorearb.h	256;"	d
GL_EXT	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	247;"	d
GL_EXTENSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	291;"	d
GL_EXTENSIONS	lib/gl3w/GL/glcorearb.h	291;"	d
GL_FALSE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	100;"	d
GL_FALSE	lib/gl3w/GL/glcorearb.h	100;"	d
GL_FASTEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	232;"	d
GL_FASTEST	lib/gl3w/GL/glcorearb.h	232;"	d
GL_FILL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	281;"	d
GL_FILL	lib/gl3w/GL/glcorearb.h	281;"	d
GL_FILTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2444;"	d
GL_FILTER	lib/gl3w/GL/glcorearb.h	2444;"	d
GL_FIRST_VERTEX_CONVENTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1726;"	d
GL_FIRST_VERTEX_CONVENTION	lib/gl3w/GL/glcorearb.h	1726;"	d
GL_FIXED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1970;"	d
GL_FIXED	lib/gl3w/GL/glcorearb.h	1970;"	d
GL_FIXED_ONLY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	621;"	d
GL_FIXED_ONLY	lib/gl3w/GL/glcorearb.h	621;"	d
GL_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	241;"	d
GL_FLOAT	lib/gl3w/GL/glcorearb.h	241;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1535;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	lib/gl3w/GL/glcorearb.h	1535;"	d
GL_FLOAT_MAT2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	544;"	d
GL_FLOAT_MAT2	lib/gl3w/GL/glcorearb.h	544;"	d
GL_FLOAT_MAT2x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	580;"	d
GL_FLOAT_MAT2x3	lib/gl3w/GL/glcorearb.h	580;"	d
GL_FLOAT_MAT2x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	581;"	d
GL_FLOAT_MAT2x4	lib/gl3w/GL/glcorearb.h	581;"	d
GL_FLOAT_MAT3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	545;"	d
GL_FLOAT_MAT3	lib/gl3w/GL/glcorearb.h	545;"	d
GL_FLOAT_MAT3x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	582;"	d
GL_FLOAT_MAT3x2	lib/gl3w/GL/glcorearb.h	582;"	d
GL_FLOAT_MAT3x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	583;"	d
GL_FLOAT_MAT3x4	lib/gl3w/GL/glcorearb.h	583;"	d
GL_FLOAT_MAT4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	546;"	d
GL_FLOAT_MAT4	lib/gl3w/GL/glcorearb.h	546;"	d
GL_FLOAT_MAT4x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	584;"	d
GL_FLOAT_MAT4x2	lib/gl3w/GL/glcorearb.h	584;"	d
GL_FLOAT_MAT4x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	585;"	d
GL_FLOAT_MAT4x3	lib/gl3w/GL/glcorearb.h	585;"	d
GL_FLOAT_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	534;"	d
GL_FLOAT_VEC2	lib/gl3w/GL/glcorearb.h	534;"	d
GL_FLOAT_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	535;"	d
GL_FLOAT_VEC3	lib/gl3w/GL/glcorearb.h	535;"	d
GL_FLOAT_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	536;"	d
GL_FLOAT_VEC4	lib/gl3w/GL/glcorearb.h	536;"	d
GL_FRACTIONAL_EVEN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1924;"	d
GL_FRACTIONAL_EVEN	lib/gl3w/GL/glcorearb.h	1924;"	d
GL_FRACTIONAL_ODD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1923;"	d
GL_FRACTIONAL_ODD	lib/gl3w/GL/glcorearb.h	1923;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1875;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	lib/gl3w/GL/glcorearb.h	1875;"	d
GL_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	526;"	d
GL_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	526;"	d
GL_FRAGMENT_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1997;"	d
GL_FRAGMENT_SHADER_BIT	lib/gl3w/GL/glcorearb.h	1997;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	564;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	lib/gl3w/GL/glcorearb.h	564;"	d
GL_FRAGMENT_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2520;"	d
GL_FRAGMENT_SUBROUTINE	lib/gl3w/GL/glcorearb.h	2520;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2526;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	2526;"	d
GL_FRAGMENT_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2449;"	d
GL_FRAGMENT_TEXTURE	lib/gl3w/GL/glcorearb.h	2449;"	d
GL_FRAMEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1599;"	d
GL_FRAMEBUFFER	lib/gl3w/GL/glcorearb.h	1599;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1545;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	1545;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1544;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	1544;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1540;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	lib/gl3w/GL/glcorearb.h	1540;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1541;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	lib/gl3w/GL/glcorearb.h	1541;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1546;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	1546;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1543;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	1543;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	898;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	lib/gl3w/GL/glcorearb.h	898;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1570;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	lib/gl3w/GL/glcorearb.h	1570;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1569;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	lib/gl3w/GL/glcorearb.h	1569;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1542;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	lib/gl3w/GL/glcorearb.h	1542;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1547;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	1547;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1572;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	lib/gl3w/GL/glcorearb.h	1572;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1573;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	lib/gl3w/GL/glcorearb.h	1573;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1571;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	lib/gl3w/GL/glcorearb.h	1571;"	d
GL_FRAMEBUFFER_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2159;"	d
GL_FRAMEBUFFER_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2159;"	d
GL_FRAMEBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1562;"	d
GL_FRAMEBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1562;"	d
GL_FRAMEBUFFER_BLEND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2429;"	d
GL_FRAMEBUFFER_BLEND	lib/gl3w/GL/glcorearb.h	2429;"	d
GL_FRAMEBUFFER_COMPLETE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1574;"	d
GL_FRAMEBUFFER_COMPLETE	lib/gl3w/GL/glcorearb.h	1574;"	d
GL_FRAMEBUFFER_DEFAULT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1548;"	d
GL_FRAMEBUFFER_DEFAULT	lib/gl3w/GL/glcorearb.h	1548;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2377;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	lib/gl3w/GL/glcorearb.h	2377;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2374;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	lib/gl3w/GL/glcorearb.h	2374;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2375;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	lib/gl3w/GL/glcorearb.h	2375;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2376;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	lib/gl3w/GL/glcorearb.h	2376;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2373;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	lib/gl3w/GL/glcorearb.h	2373;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1575;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	lib/gl3w/GL/glcorearb.h	1575;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1577;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	lib/gl3w/GL/glcorearb.h	1577;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	899;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	lib/gl3w/GL/glcorearb.h	899;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1576;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	lib/gl3w/GL/glcorearb.h	1576;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1614;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	1614;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1578;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	lib/gl3w/GL/glcorearb.h	1578;"	d
GL_FRAMEBUFFER_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2427;"	d
GL_FRAMEBUFFER_RENDERABLE	lib/gl3w/GL/glcorearb.h	2427;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2428;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	lib/gl3w/GL/glcorearb.h	2428;"	d
GL_FRAMEBUFFER_SRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1619;"	d
GL_FRAMEBUFFER_SRGB	lib/gl3w/GL/glcorearb.h	1619;"	d
GL_FRAMEBUFFER_UNDEFINED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1549;"	d
GL_FRAMEBUFFER_UNDEFINED	lib/gl3w/GL/glcorearb.h	1549;"	d
GL_FRAMEBUFFER_UNSUPPORTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1579;"	d
GL_FRAMEBUFFER_UNSUPPORTED	lib/gl3w/GL/glcorearb.h	1579;"	d
GL_FRONT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	139;"	d
GL_FRONT	lib/gl3w/GL/glcorearb.h	139;"	d
GL_FRONT_AND_BACK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	143;"	d
GL_FRONT_AND_BACK	lib/gl3w/GL/glcorearb.h	143;"	d
GL_FRONT_FACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	165;"	d
GL_FRONT_FACE	lib/gl3w/GL/glcorearb.h	165;"	d
GL_FRONT_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	135;"	d
GL_FRONT_LEFT	lib/gl3w/GL/glcorearb.h	135;"	d
GL_FRONT_RIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	136;"	d
GL_FRONT_RIGHT	lib/gl3w/GL/glcorearb.h	136;"	d
GL_FULL_SUPPORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2471;"	d
GL_FULL_SUPPORT	lib/gl3w/GL/glcorearb.h	2471;"	d
GL_FUNC_ADD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	372;"	d
GL_FUNC_ADD	lib/gl3w/GL/glcorearb.h	372;"	d
GL_FUNC_REVERSE_SUBTRACT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	377;"	d
GL_FUNC_REVERSE_SUBTRACT	lib/gl3w/GL/glcorearb.h	377;"	d
GL_FUNC_SUBTRACT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	376;"	d
GL_FUNC_SUBTRACT	lib/gl3w/GL/glcorearb.h	376;"	d
GL_GEOMETRY_INPUT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	902;"	d
GL_GEOMETRY_INPUT_TYPE	lib/gl3w/GL/glcorearb.h	902;"	d
GL_GEOMETRY_OUTPUT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	903;"	d
GL_GEOMETRY_OUTPUT_TYPE	lib/gl3w/GL/glcorearb.h	903;"	d
GL_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	900;"	d
GL_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	900;"	d
GL_GEOMETRY_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1998;"	d
GL_GEOMETRY_SHADER_BIT	lib/gl3w/GL/glcorearb.h	1998;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1871;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	lib/gl3w/GL/glcorearb.h	1871;"	d
GL_GEOMETRY_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2519;"	d
GL_GEOMETRY_SUBROUTINE	lib/gl3w/GL/glcorearb.h	2519;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2525;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	2525;"	d
GL_GEOMETRY_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2448;"	d
GL_GEOMETRY_TEXTURE	lib/gl3w/GL/glcorearb.h	2448;"	d
GL_GEOMETRY_VERTICES_OUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	901;"	d
GL_GEOMETRY_VERTICES_OUT	lib/gl3w/GL/glcorearb.h	901;"	d
GL_GEQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	118;"	d
GL_GEQUAL	lib/gl3w/GL/glcorearb.h	118;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2435;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	lib/gl3w/GL/glcorearb.h	2435;"	d
GL_GET_TEXTURE_IMAGE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2436;"	d
GL_GET_TEXTURE_IMAGE_TYPE	lib/gl3w/GL/glcorearb.h	2436;"	d
GL_GLEXT_LEGACY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	135;"	d
GL_GREATER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	116;"	d
GL_GREATER	lib/gl3w/GL/glcorearb.h	116;"	d
GL_GREEN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	273;"	d
GL_GREEN	lib/gl3w/GL/glcorearb.h	273;"	d
GL_GREEN_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	662;"	d
GL_GREEN_INTEGER	lib/gl3w/GL/glcorearb.h	662;"	d
GL_GUILTY_CONTEXT_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2076;"	d
GL_GUILTY_CONTEXT_RESET_ARB	lib/gl3w/GL/glcorearb.h	2076;"	d
GL_HALF_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1623;"	d
GL_HALF_FLOAT	lib/gl3w/GL/glcorearb.h	1623;"	d
GL_HIGH_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1975;"	d
GL_HIGH_FLOAT	lib/gl3w/GL/glcorearb.h	1975;"	d
GL_HIGH_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1978;"	d
GL_HIGH_INT	lib/gl3w/GL/glcorearb.h	1978;"	d
GL_IMAGE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2170;"	d
GL_IMAGE_1D	lib/gl3w/GL/glcorearb.h	2170;"	d
GL_IMAGE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2176;"	d
GL_IMAGE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	2176;"	d
GL_IMAGE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2171;"	d
GL_IMAGE_2D	lib/gl3w/GL/glcorearb.h	2171;"	d
GL_IMAGE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2177;"	d
GL_IMAGE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	2177;"	d
GL_IMAGE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2179;"	d
GL_IMAGE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	2179;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2180;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	2180;"	d
GL_IMAGE_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2173;"	d
GL_IMAGE_2D_RECT	lib/gl3w/GL/glcorearb.h	2173;"	d
GL_IMAGE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2172;"	d
GL_IMAGE_3D	lib/gl3w/GL/glcorearb.h	2172;"	d
GL_IMAGE_BINDING_ACCESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2169;"	d
GL_IMAGE_BINDING_ACCESS	lib/gl3w/GL/glcorearb.h	2169;"	d
GL_IMAGE_BINDING_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2204;"	d
GL_IMAGE_BINDING_FORMAT	lib/gl3w/GL/glcorearb.h	2204;"	d
GL_IMAGE_BINDING_LAYER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2168;"	d
GL_IMAGE_BINDING_LAYER	lib/gl3w/GL/glcorearb.h	2168;"	d
GL_IMAGE_BINDING_LAYERED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2167;"	d
GL_IMAGE_BINDING_LAYERED	lib/gl3w/GL/glcorearb.h	2167;"	d
GL_IMAGE_BINDING_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2166;"	d
GL_IMAGE_BINDING_LEVEL	lib/gl3w/GL/glcorearb.h	2166;"	d
GL_IMAGE_BINDING_NAME	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2165;"	d
GL_IMAGE_BINDING_NAME	lib/gl3w/GL/glcorearb.h	2165;"	d
GL_IMAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2175;"	d
GL_IMAGE_BUFFER	lib/gl3w/GL/glcorearb.h	2175;"	d
GL_IMAGE_CLASS_10_10_10_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2483;"	d
GL_IMAGE_CLASS_10_10_10_2	lib/gl3w/GL/glcorearb.h	2483;"	d
GL_IMAGE_CLASS_11_11_10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2482;"	d
GL_IMAGE_CLASS_11_11_10	lib/gl3w/GL/glcorearb.h	2482;"	d
GL_IMAGE_CLASS_1_X_16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2478;"	d
GL_IMAGE_CLASS_1_X_16	lib/gl3w/GL/glcorearb.h	2478;"	d
GL_IMAGE_CLASS_1_X_32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2475;"	d
GL_IMAGE_CLASS_1_X_32	lib/gl3w/GL/glcorearb.h	2475;"	d
GL_IMAGE_CLASS_1_X_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2481;"	d
GL_IMAGE_CLASS_1_X_8	lib/gl3w/GL/glcorearb.h	2481;"	d
GL_IMAGE_CLASS_2_X_16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2477;"	d
GL_IMAGE_CLASS_2_X_16	lib/gl3w/GL/glcorearb.h	2477;"	d
GL_IMAGE_CLASS_2_X_32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2474;"	d
GL_IMAGE_CLASS_2_X_32	lib/gl3w/GL/glcorearb.h	2474;"	d
GL_IMAGE_CLASS_2_X_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2480;"	d
GL_IMAGE_CLASS_2_X_8	lib/gl3w/GL/glcorearb.h	2480;"	d
GL_IMAGE_CLASS_4_X_16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2476;"	d
GL_IMAGE_CLASS_4_X_16	lib/gl3w/GL/glcorearb.h	2476;"	d
GL_IMAGE_CLASS_4_X_32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2473;"	d
GL_IMAGE_CLASS_4_X_32	lib/gl3w/GL/glcorearb.h	2473;"	d
GL_IMAGE_CLASS_4_X_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2479;"	d
GL_IMAGE_CLASS_4_X_8	lib/gl3w/GL/glcorearb.h	2479;"	d
GL_IMAGE_COMPATIBILITY_CLASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2458;"	d
GL_IMAGE_COMPATIBILITY_CLASS	lib/gl3w/GL/glcorearb.h	2458;"	d
GL_IMAGE_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2174;"	d
GL_IMAGE_CUBE	lib/gl3w/GL/glcorearb.h	2174;"	d
GL_IMAGE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2178;"	d
GL_IMAGE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	2178;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2207;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	lib/gl3w/GL/glcorearb.h	2207;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2206;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	lib/gl3w/GL/glcorearb.h	2206;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2205;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	lib/gl3w/GL/glcorearb.h	2205;"	d
GL_IMAGE_PIXEL_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2459;"	d
GL_IMAGE_PIXEL_FORMAT	lib/gl3w/GL/glcorearb.h	2459;"	d
GL_IMAGE_PIXEL_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2460;"	d
GL_IMAGE_PIXEL_TYPE	lib/gl3w/GL/glcorearb.h	2460;"	d
GL_IMAGE_TEXEL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2457;"	d
GL_IMAGE_TEXEL_SIZE	lib/gl3w/GL/glcorearb.h	2457;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1972;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	lib/gl3w/GL/glcorearb.h	1972;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1971;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	lib/gl3w/GL/glcorearb.h	1971;"	d
GL_INCR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	285;"	d
GL_INCR	lib/gl3w/GL/glcorearb.h	285;"	d
GL_INCR_WRAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	454;"	d
GL_INCR_WRAP	lib/gl3w/GL/glcorearb.h	454;"	d
GL_INFO_LOG_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	557;"	d
GL_INFO_LOG_LENGTH	lib/gl3w/GL/glcorearb.h	557;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2077;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	lib/gl3w/GL/glcorearb.h	2077;"	d
GL_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	239;"	d
GL_INT	lib/gl3w/GL/glcorearb.h	239;"	d
GL_INTERLEAVED_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	645;"	d
GL_INTERLEAVED_ATTRIBS	lib/gl3w/GL/glcorearb.h	645;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2406;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	2406;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2413;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	lib/gl3w/GL/glcorearb.h	2413;"	d
GL_INTERNALFORMAT_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2405;"	d
GL_INTERNALFORMAT_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	2405;"	d
GL_INTERNALFORMAT_BLUE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2412;"	d
GL_INTERNALFORMAT_BLUE_TYPE	lib/gl3w/GL/glcorearb.h	2412;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2407;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	2407;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2414;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	lib/gl3w/GL/glcorearb.h	2414;"	d
GL_INTERNALFORMAT_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2404;"	d
GL_INTERNALFORMAT_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	2404;"	d
GL_INTERNALFORMAT_GREEN_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2411;"	d
GL_INTERNALFORMAT_GREEN_TYPE	lib/gl3w/GL/glcorearb.h	2411;"	d
GL_INTERNALFORMAT_PREFERRED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2402;"	d
GL_INTERNALFORMAT_PREFERRED	lib/gl3w/GL/glcorearb.h	2402;"	d
GL_INTERNALFORMAT_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2403;"	d
GL_INTERNALFORMAT_RED_SIZE	lib/gl3w/GL/glcorearb.h	2403;"	d
GL_INTERNALFORMAT_RED_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2410;"	d
GL_INTERNALFORMAT_RED_TYPE	lib/gl3w/GL/glcorearb.h	2410;"	d
GL_INTERNALFORMAT_SHARED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2409;"	d
GL_INTERNALFORMAT_SHARED_SIZE	lib/gl3w/GL/glcorearb.h	2409;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2408;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	2408;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2415;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	lib/gl3w/GL/glcorearb.h	2415;"	d
GL_INTERNALFORMAT_SUPPORTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2401;"	d
GL_INTERNALFORMAT_SUPPORTED	lib/gl3w/GL/glcorearb.h	2401;"	d
GL_INT_2_10_10_10_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1862;"	d
GL_INT_2_10_10_10_REV	lib/gl3w/GL/glcorearb.h	1862;"	d
GL_INT_IMAGE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2181;"	d
GL_INT_IMAGE_1D	lib/gl3w/GL/glcorearb.h	2181;"	d
GL_INT_IMAGE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2187;"	d
GL_INT_IMAGE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	2187;"	d
GL_INT_IMAGE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2182;"	d
GL_INT_IMAGE_2D	lib/gl3w/GL/glcorearb.h	2182;"	d
GL_INT_IMAGE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2188;"	d
GL_INT_IMAGE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	2188;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2190;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	2190;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2191;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	2191;"	d
GL_INT_IMAGE_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2184;"	d
GL_INT_IMAGE_2D_RECT	lib/gl3w/GL/glcorearb.h	2184;"	d
GL_INT_IMAGE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2183;"	d
GL_INT_IMAGE_3D	lib/gl3w/GL/glcorearb.h	2183;"	d
GL_INT_IMAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2186;"	d
GL_INT_IMAGE_BUFFER	lib/gl3w/GL/glcorearb.h	2186;"	d
GL_INT_IMAGE_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2185;"	d
GL_INT_IMAGE_CUBE	lib/gl3w/GL/glcorearb.h	2185;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2189;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	2189;"	d
GL_INT_SAMPLER_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	676;"	d
GL_INT_SAMPLER_1D	lib/gl3w/GL/glcorearb.h	676;"	d
GL_INT_SAMPLER_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	680;"	d
GL_INT_SAMPLER_1D_ARRAY	lib/gl3w/GL/glcorearb.h	680;"	d
GL_INT_SAMPLER_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	677;"	d
GL_INT_SAMPLER_2D	lib/gl3w/GL/glcorearb.h	677;"	d
GL_INT_SAMPLER_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	681;"	d
GL_INT_SAMPLER_2D_ARRAY	lib/gl3w/GL/glcorearb.h	681;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1767;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	1767;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1770;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	1770;"	d
GL_INT_SAMPLER_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	825;"	d
GL_INT_SAMPLER_2D_RECT	lib/gl3w/GL/glcorearb.h	825;"	d
GL_INT_SAMPLER_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	678;"	d
GL_INT_SAMPLER_3D	lib/gl3w/GL/glcorearb.h	678;"	d
GL_INT_SAMPLER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	826;"	d
GL_INT_SAMPLER_BUFFER	lib/gl3w/GL/glcorearb.h	826;"	d
GL_INT_SAMPLER_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	679;"	d
GL_INT_SAMPLER_CUBE	lib/gl3w/GL/glcorearb.h	679;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1005;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	1005;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1795;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	1795;"	d
GL_INT_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	537;"	d
GL_INT_VEC2	lib/gl3w/GL/glcorearb.h	537;"	d
GL_INT_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	538;"	d
GL_INT_VEC3	lib/gl3w/GL/glcorearb.h	538;"	d
GL_INT_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	539;"	d
GL_INT_VEC4	lib/gl3w/GL/glcorearb.h	539;"	d
GL_INVALID_ENUM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	146;"	d
GL_INVALID_ENUM	lib/gl3w/GL/glcorearb.h	146;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1539;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	lib/gl3w/GL/glcorearb.h	1539;"	d
GL_INVALID_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1704;"	d
GL_INVALID_INDEX	lib/gl3w/GL/glcorearb.h	1704;"	d
GL_INVALID_OPERATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	148;"	d
GL_INVALID_OPERATION	lib/gl3w/GL/glcorearb.h	148;"	d
GL_INVALID_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	147;"	d
GL_INVALID_VALUE	lib/gl3w/GL/glcorearb.h	147;"	d
GL_INVERT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	257;"	d
GL_INVERT	lib/gl3w/GL/glcorearb.h	257;"	d
GL_ISOLINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1921;"	d
GL_ISOLINES	lib/gl3w/GL/glcorearb.h	1921;"	d
GL_IS_PER_PATCH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2556;"	d
GL_IS_PER_PATCH	lib/gl3w/GL/glcorearb.h	2556;"	d
GL_IS_ROW_MAJOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2540;"	d
GL_IS_ROW_MAJOR	lib/gl3w/GL/glcorearb.h	2540;"	d
GL_KEEP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	283;"	d
GL_KEEP	lib/gl3w/GL/glcorearb.h	283;"	d
GL_KHR_debug	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4297;"	d
GL_KHR_debug	lib/gl3w/GL/glcorearb.h	4297;"	d
GL_KHR_texture_compression_astc_ldr	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	4293;"	d
GL_KHR_texture_compression_astc_ldr	lib/gl3w/GL/glcorearb.h	4293;"	d
GL_LAST_VERTEX_CONVENTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1727;"	d
GL_LAST_VERTEX_CONVENTION	lib/gl3w/GL/glcorearb.h	1727;"	d
GL_LAYER_PROVOKING_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2034;"	d
GL_LAYER_PROVOKING_VERTEX	lib/gl3w/GL/glcorearb.h	2034;"	d
GL_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	141;"	d
GL_LEFT	lib/gl3w/GL/glcorearb.h	141;"	d
GL_LEQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	115;"	d
GL_LEQUAL	lib/gl3w/GL/glcorearb.h	115;"	d
GL_LESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	113;"	d
GL_LESS	lib/gl3w/GL/glcorearb.h	113;"	d
GL_LINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	280;"	d
GL_LINE	lib/gl3w/GL/glcorearb.h	280;"	d
GL_LINEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	294;"	d
GL_LINEAR	lib/gl3w/GL/glcorearb.h	294;"	d
GL_LINEAR_MIPMAP_LINEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	299;"	d
GL_LINEAR_MIPMAP_LINEAR	lib/gl3w/GL/glcorearb.h	299;"	d
GL_LINEAR_MIPMAP_NEAREST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	297;"	d
GL_LINEAR_MIPMAP_NEAREST	lib/gl3w/GL/glcorearb.h	297;"	d
GL_LINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	104;"	d
GL_LINES	lib/gl3w/GL/glcorearb.h	104;"	d
GL_LINES_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	892;"	d
GL_LINES_ADJACENCY	lib/gl3w/GL/glcorearb.h	892;"	d
GL_LINE_LOOP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	105;"	d
GL_LINE_LOOP	lib/gl3w/GL/glcorearb.h	105;"	d
GL_LINE_SMOOTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	157;"	d
GL_LINE_SMOOTH	lib/gl3w/GL/glcorearb.h	157;"	d
GL_LINE_SMOOTH_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	195;"	d
GL_LINE_SMOOTH_HINT	lib/gl3w/GL/glcorearb.h	195;"	d
GL_LINE_STRIP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	106;"	d
GL_LINE_STRIP	lib/gl3w/GL/glcorearb.h	106;"	d
GL_LINE_STRIP_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	893;"	d
GL_LINE_STRIP_ADJACENCY	lib/gl3w/GL/glcorearb.h	893;"	d
GL_LINE_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	158;"	d
GL_LINE_WIDTH	lib/gl3w/GL/glcorearb.h	158;"	d
GL_LINE_WIDTH_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	160;"	d
GL_LINE_WIDTH_GRANULARITY	lib/gl3w/GL/glcorearb.h	160;"	d
GL_LINE_WIDTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	159;"	d
GL_LINE_WIDTH_RANGE	lib/gl3w/GL/glcorearb.h	159;"	d
GL_LINK_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	555;"	d
GL_LINK_STATUS	lib/gl3w/GL/glcorearb.h	555;"	d
GL_LOCATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2554;"	d
GL_LOCATION	lib/gl3w/GL/glcorearb.h	2554;"	d
GL_LOCATION_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2555;"	d
GL_LOCATION_INDEX	lib/gl3w/GL/glcorearb.h	2555;"	d
GL_LOGIC_OP_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	185;"	d
GL_LOGIC_OP_MODE	lib/gl3w/GL/glcorearb.h	185;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2075;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	lib/gl3w/GL/glcorearb.h	2075;"	d
GL_LOWER_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	568;"	d
GL_LOWER_LEFT	lib/gl3w/GL/glcorearb.h	568;"	d
GL_LOW_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1973;"	d
GL_LOW_FLOAT	lib/gl3w/GL/glcorearb.h	1973;"	d
GL_LOW_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1976;"	d
GL_LOW_INT	lib/gl3w/GL/glcorearb.h	1976;"	d
GL_MAJOR_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	605;"	d
GL_MAJOR_VERSION	lib/gl3w/GL/glcorearb.h	605;"	d
GL_MANUAL_GENERATE_MIPMAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2438;"	d
GL_MANUAL_GENERATE_MIPMAP	lib/gl3w/GL/glcorearb.h	2438;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1631;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	lib/gl3w/GL/glcorearb.h	1631;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1630;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	1630;"	d
GL_MAP_INVALIDATE_RANGE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1629;"	d
GL_MAP_INVALIDATE_RANGE_BIT	lib/gl3w/GL/glcorearb.h	1629;"	d
GL_MAP_READ_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1627;"	d
GL_MAP_READ_BIT	lib/gl3w/GL/glcorearb.h	1627;"	d
GL_MAP_UNSYNCHRONIZED_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1632;"	d
GL_MAP_UNSYNCHRONIZED_BIT	lib/gl3w/GL/glcorearb.h	1632;"	d
GL_MAP_WRITE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1628;"	d
GL_MAP_WRITE_BIT	lib/gl3w/GL/glcorearb.h	1628;"	d
GL_MATRIX_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2539;"	d
GL_MATRIX_STRIDE	lib/gl3w/GL/glcorearb.h	2539;"	d
GL_MAX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	374;"	d
GL_MAX	lib/gl3w/GL/glcorearb.h	374;"	d
GL_MAX_3D_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	342;"	d
GL_MAX_3D_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	342;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	617;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	lib/gl3w/GL/glcorearb.h	617;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2143;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	lib/gl3w/GL/glcorearb.h	2143;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2142;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	2142;"	d
GL_MAX_CLIP_DISTANCES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	604;"	d
GL_MAX_CLIP_DISTANCES	lib/gl3w/GL/glcorearb.h	604;"	d
GL_MAX_COLOR_ATTACHMENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1580;"	d
GL_MAX_COLOR_ATTACHMENTS	lib/gl3w/GL/glcorearb.h	1580;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1772;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	lib/gl3w/GL/glcorearb.h	1772;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2141;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2141;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2135;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2135;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2313;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	2313;"	d
GL_MAX_COMBINED_DIMENSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2420;"	d
GL_MAX_COMBINED_DIMENSIONS	lib/gl3w/GL/glcorearb.h	2420;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1684;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	1684;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1683;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	1683;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2213;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	2213;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2164;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	lib/gl3w/GL/glcorearb.h	2164;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2583;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	lib/gl3w/GL/glcorearb.h	2583;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2578;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	2578;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1941;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	1941;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1942;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	1942;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	532;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	532;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1679;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	1679;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1682;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	1682;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2312;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2312;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2311;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2311;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2308;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	2308;"	d
GL_MAX_COMPUTE_LOCAL_INVOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2314;"	d
GL_MAX_COMPUTE_LOCAL_INVOCATIONS	lib/gl3w/GL/glcorearb.h	2314;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2577;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	2577;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2309;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	lib/gl3w/GL/glcorearb.h	2309;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2307;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	2307;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2306;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	2306;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2310;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	2310;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2315;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	lib/gl3w/GL/glcorearb.h	2315;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2316;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	lib/gl3w/GL/glcorearb.h	2316;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	431;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	431;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2275;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	lib/gl3w/GL/glcorearb.h	2275;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2287;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	lib/gl3w/GL/glcorearb.h	2287;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2065;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	lib/gl3w/GL/glcorearb.h	2065;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2286;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	lib/gl3w/GL/glcorearb.h	2286;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2064;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	lib/gl3w/GL/glcorearb.h	2064;"	d
GL_MAX_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2418;"	d
GL_MAX_DEPTH	lib/gl3w/GL/glcorearb.h	2418;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1773;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	lib/gl3w/GL/glcorearb.h	1773;"	d
GL_MAX_DRAW_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	505;"	d
GL_MAX_DRAW_BUFFERS	lib/gl3w/GL/glcorearb.h	505;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1826;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	lib/gl3w/GL/glcorearb.h	1826;"	d
GL_MAX_ELEMENTS_INDICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	353;"	d
GL_MAX_ELEMENTS_INDICES	lib/gl3w/GL/glcorearb.h	353;"	d
GL_MAX_ELEMENTS_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	352;"	d
GL_MAX_ELEMENTS_VERTICES	lib/gl3w/GL/glcorearb.h	352;"	d
GL_MAX_ELEMENT_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2362;"	d
GL_MAX_ELEMENT_INDEX	lib/gl3w/GL/glcorearb.h	2362;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2140;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2140;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2134;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2134;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2212;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	2212;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	910;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	910;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1874;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	lib/gl3w/GL/glcorearb.h	1874;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2576;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	2576;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1678;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	1678;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	528;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	528;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1984;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	lib/gl3w/GL/glcorearb.h	1984;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2379;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	lib/gl3w/GL/glcorearb.h	2379;"	d
GL_MAX_FRAMEBUFFER_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2380;"	d
GL_MAX_FRAMEBUFFER_LAYERS	lib/gl3w/GL/glcorearb.h	2380;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2381;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	lib/gl3w/GL/glcorearb.h	2381;"	d
GL_MAX_FRAMEBUFFER_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2378;"	d
GL_MAX_FRAMEBUFFER_WIDTH	lib/gl3w/GL/glcorearb.h	2378;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2139;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2139;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2133;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2133;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2211;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	2211;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	908;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	908;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	909;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	909;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	905;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	lib/gl3w/GL/glcorearb.h	905;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1872;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	lib/gl3w/GL/glcorearb.h	1872;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2573;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	2573;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	897;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	897;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	906;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	906;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1677;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	1677;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	904;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	904;"	d
GL_MAX_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2417;"	d
GL_MAX_HEIGHT	lib/gl3w/GL/glcorearb.h	2417;"	d
GL_MAX_IMAGE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2203;"	d
GL_MAX_IMAGE_SAMPLES	lib/gl3w/GL/glcorearb.h	2203;"	d
GL_MAX_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2163;"	d
GL_MAX_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	2163;"	d
GL_MAX_INTEGER_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1774;"	d
GL_MAX_INTEGER_SAMPLES	lib/gl3w/GL/glcorearb.h	1774;"	d
GL_MAX_LABEL_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2285;"	d
GL_MAX_LABEL_LENGTH	lib/gl3w/GL/glcorearb.h	2285;"	d
GL_MAX_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2419;"	d
GL_MAX_LAYERS	lib/gl3w/GL/glcorearb.h	2419;"	d
GL_MAX_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2530;"	d
GL_MAX_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	2530;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2531;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	lib/gl3w/GL/glcorearb.h	2531;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2532;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	2532;"	d
GL_MAX_PATCH_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1927;"	d
GL_MAX_PATCH_VERTICES	lib/gl3w/GL/glcorearb.h	1927;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	619;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	lib/gl3w/GL/glcorearb.h	619;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1802;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	lib/gl3w/GL/glcorearb.h	1802;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	999;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	lib/gl3w/GL/glcorearb.h	999;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1801;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/gl3w/GL/glcorearb.h	1801;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	836;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	836;"	d
GL_MAX_RENDERBUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1551;"	d
GL_MAX_RENDERBUFFER_SIZE	lib/gl3w/GL/glcorearb.h	1551;"	d
GL_MAX_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1615;"	d
GL_MAX_SAMPLES	lib/gl3w/GL/glcorearb.h	1615;"	d
GL_MAX_SAMPLE_MASK_WORDS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1757;"	d
GL_MAX_SAMPLE_MASK_WORDS	lib/gl3w/GL/glcorearb.h	1757;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1736;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	lib/gl3w/GL/glcorearb.h	1736;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2580;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	2580;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2579;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	lib/gl3w/GL/glcorearb.h	2579;"	d
GL_MAX_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1901;"	d
GL_MAX_SUBROUTINES	lib/gl3w/GL/glcorearb.h	1901;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1902;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	lib/gl3w/GL/glcorearb.h	1902;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2137;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2137;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2131;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2131;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2209;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	2209;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1939;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	1939;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1933;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	1933;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2574;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	2574;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1931;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	1931;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1935;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	1935;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1937;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	1937;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1929;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	1929;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2138;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2138;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2132;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2132;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2210;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	2210;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1940;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	1940;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1936;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	1936;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2575;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	2575;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1932;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	1932;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1938;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	1938;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1930;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	1930;"	d
GL_MAX_TESS_GEN_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1928;"	d
GL_MAX_TESS_GEN_LEVEL	lib/gl3w/GL/glcorearb.h	1928;"	d
GL_MAX_TESS_PATCH_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1934;"	d
GL_MAX_TESS_PATCH_COMPONENTS	lib/gl3w/GL/glcorearb.h	1934;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	830;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	830;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	525;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	525;"	d
GL_MAX_TEXTURE_LOD_BIAS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	452;"	d
GL_MAX_TEXTURE_LOD_BIAS	lib/gl3w/GL/glcorearb.h	452;"	d
GL_MAX_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	209;"	d
GL_MAX_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	209;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1965;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	lib/gl3w/GL/glcorearb.h	1965;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	643;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	lib/gl3w/GL/glcorearb.h	643;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	644;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	lib/gl3w/GL/glcorearb.h	644;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	636;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	lib/gl3w/GL/glcorearb.h	636;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1681;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	1681;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1680;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	lib/gl3w/GL/glcorearb.h	1680;"	d
GL_MAX_UNIFORM_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2366;"	d
GL_MAX_UNIFORM_LOCATIONS	lib/gl3w/GL/glcorearb.h	2366;"	d
GL_MAX_VARYING_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	622;"	d
GL_MAX_VARYING_COMPONENTS	lib/gl3w/GL/glcorearb.h	622;"	d
GL_MAX_VARYING_FLOATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	530;"	d
GL_MAX_VARYING_FLOATS	lib/gl3w/GL/glcorearb.h	530;"	d
GL_MAX_VARYING_VECTORS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1983;"	d
GL_MAX_VARYING_VECTORS	lib/gl3w/GL/glcorearb.h	1983;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2136;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	2136;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2130;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	2130;"	d
GL_MAX_VERTEX_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	523;"	d
GL_MAX_VERTEX_ATTRIBS	lib/gl3w/GL/glcorearb.h	523;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2343;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	lib/gl3w/GL/glcorearb.h	2343;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2342;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/gl3w/GL/glcorearb.h	2342;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2208;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	2208;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	907;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	907;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2572;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	2572;"	d
GL_MAX_VERTEX_STREAMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1966;"	d
GL_MAX_VERTEX_STREAMS	lib/gl3w/GL/glcorearb.h	1966;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	531;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	531;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1676;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	1676;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	529;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	529;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1982;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	lib/gl3w/GL/glcorearb.h	1982;"	d
GL_MAX_VIEWPORTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2031;"	d
GL_MAX_VIEWPORTS	lib/gl3w/GL/glcorearb.h	2031;"	d
GL_MAX_VIEWPORT_DIMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	210;"	d
GL_MAX_VIEWPORT_DIMS	lib/gl3w/GL/glcorearb.h	210;"	d
GL_MAX_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2416;"	d
GL_MAX_WIDTH	lib/gl3w/GL/glcorearb.h	2416;"	d
GL_MEDIUM_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1974;"	d
GL_MEDIUM_FLOAT	lib/gl3w/GL/glcorearb.h	1974;"	d
GL_MEDIUM_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1977;"	d
GL_MEDIUM_INT	lib/gl3w/GL/glcorearb.h	1977;"	d
GL_MIN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	373;"	d
GL_MIN	lib/gl3w/GL/glcorearb.h	373;"	d
GL_MINOR_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	606;"	d
GL_MINOR_VERSION	lib/gl3w/GL/glcorearb.h	606;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1873;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	lib/gl3w/GL/glcorearb.h	1873;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2114;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	lib/gl3w/GL/glcorearb.h	2114;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	618;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	lib/gl3w/GL/glcorearb.h	618;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	998;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	lib/gl3w/GL/glcorearb.h	998;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1800;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/gl3w/GL/glcorearb.h	1800;"	d
GL_MIN_SAMPLE_SHADING_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	997;"	d
GL_MIN_SAMPLE_SHADING_VALUE	lib/gl3w/GL/glcorearb.h	997;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1786;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	lib/gl3w/GL/glcorearb.h	1786;"	d
GL_MIPMAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2437;"	d
GL_MIPMAP	lib/gl3w/GL/glcorearb.h	2437;"	d
GL_MIRRORED_REPEAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	451;"	d
GL_MIRRORED_REPEAT	lib/gl3w/GL/glcorearb.h	451;"	d
GL_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	414;"	d
GL_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	414;"	d
GL_NAMED_STRING_LENGTH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1810;"	d
GL_NAMED_STRING_LENGTH_ARB	lib/gl3w/GL/glcorearb.h	1810;"	d
GL_NAMED_STRING_TYPE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1811;"	d
GL_NAMED_STRING_TYPE_ARB	lib/gl3w/GL/glcorearb.h	1811;"	d
GL_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2533;"	d
GL_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	2533;"	d
GL_NAND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	261;"	d
GL_NAND	lib/gl3w/GL/glcorearb.h	261;"	d
GL_NEAREST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	293;"	d
GL_NEAREST	lib/gl3w/GL/glcorearb.h	293;"	d
GL_NEAREST_MIPMAP_LINEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	298;"	d
GL_NEAREST_MIPMAP_LINEAR	lib/gl3w/GL/glcorearb.h	298;"	d
GL_NEAREST_MIPMAP_NEAREST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	296;"	d
GL_NEAREST_MIPMAP_NEAREST	lib/gl3w/GL/glcorearb.h	296;"	d
GL_NEVER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	112;"	d
GL_NEVER	lib/gl3w/GL/glcorearb.h	112;"	d
GL_NICEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	233;"	d
GL_NICEST	lib/gl3w/GL/glcorearb.h	233;"	d
GL_NONE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	134;"	d
GL_NONE	lib/gl3w/GL/glcorearb.h	134;"	d
GL_NOOP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	252;"	d
GL_NOOP	lib/gl3w/GL/glcorearb.h	252;"	d
GL_NOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	255;"	d
GL_NOR	lib/gl3w/GL/glcorearb.h	255;"	d
GL_NOTEQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	117;"	d
GL_NOTEQUAL	lib/gl3w/GL/glcorearb.h	117;"	d
GL_NO_ERROR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	145;"	d
GL_NO_ERROR	lib/gl3w/GL/glcorearb.h	145;"	d
GL_NO_RESET_NOTIFICATION_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2080;"	d
GL_NO_RESET_NOTIFICATION_ARB	lib/gl3w/GL/glcorearb.h	2080;"	d
GL_NUM_ACTIVE_VARIABLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2544;"	d
GL_NUM_ACTIVE_VARIABLES	lib/gl3w/GL/glcorearb.h	2544;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1903;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	1903;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	437;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	lib/gl3w/GL/glcorearb.h	437;"	d
GL_NUM_EXTENSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	607;"	d
GL_NUM_EXTENSIONS	lib/gl3w/GL/glcorearb.h	607;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1991;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	1991;"	d
GL_NUM_SAMPLE_COUNTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2110;"	d
GL_NUM_SAMPLE_COUNTS	lib/gl3w/GL/glcorearb.h	2110;"	d
GL_NUM_SHADER_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1981;"	d
GL_NUM_SHADER_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	1981;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1249;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	lib/gl3w/GL/glcorearb.h	1249;"	d
GL_OBJECT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1737;"	d
GL_OBJECT_TYPE	lib/gl3w/GL/glcorearb.h	1737;"	d
GL_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2536;"	d
GL_OFFSET	lib/gl3w/GL/glcorearb.h	2536;"	d
GL_ONE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	122;"	d
GL_ONE	lib/gl3w/GL/glcorearb.h	122;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	370;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	lib/gl3w/GL/glcorearb.h	370;"	d
GL_ONE_MINUS_CONSTANT_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	368;"	d
GL_ONE_MINUS_CONSTANT_COLOR	lib/gl3w/GL/glcorearb.h	368;"	d
GL_ONE_MINUS_DST_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	128;"	d
GL_ONE_MINUS_DST_ALPHA	lib/gl3w/GL/glcorearb.h	128;"	d
GL_ONE_MINUS_DST_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	131;"	d
GL_ONE_MINUS_DST_COLOR	lib/gl3w/GL/glcorearb.h	131;"	d
GL_ONE_MINUS_SRC1_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1825;"	d
GL_ONE_MINUS_SRC1_ALPHA	lib/gl3w/GL/glcorearb.h	1825;"	d
GL_ONE_MINUS_SRC1_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1824;"	d
GL_ONE_MINUS_SRC1_COLOR	lib/gl3w/GL/glcorearb.h	1824;"	d
GL_ONE_MINUS_SRC_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	126;"	d
GL_ONE_MINUS_SRC_ALPHA	lib/gl3w/GL/glcorearb.h	126;"	d
GL_ONE_MINUS_SRC_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	124;"	d
GL_ONE_MINUS_SRC_COLOR	lib/gl3w/GL/glcorearb.h	124;"	d
GL_OR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	254;"	d
GL_OR	lib/gl3w/GL/glcorearb.h	254;"	d
GL_OR_INVERTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	260;"	d
GL_OR_INVERTED	lib/gl3w/GL/glcorearb.h	260;"	d
GL_OR_REVERSE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	258;"	d
GL_OR_REVERSE	lib/gl3w/GL/glcorearb.h	258;"	d
GL_OUT_OF_MEMORY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	149;"	d
GL_OUT_OF_MEMORY	lib/gl3w/GL/glcorearb.h	149;"	d
GL_PACK_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	208;"	d
GL_PACK_ALIGNMENT	lib/gl3w/GL/glcorearb.h	208;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2102;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	lib/gl3w/GL/glcorearb.h	2102;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2101;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	lib/gl3w/GL/glcorearb.h	2101;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2103;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	2103;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2100;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	lib/gl3w/GL/glcorearb.h	2100;"	d
GL_PACK_IMAGE_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	335;"	d
GL_PACK_IMAGE_HEIGHT	lib/gl3w/GL/glcorearb.h	335;"	d
GL_PACK_LSB_FIRST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	204;"	d
GL_PACK_LSB_FIRST	lib/gl3w/GL/glcorearb.h	204;"	d
GL_PACK_ROW_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	205;"	d
GL_PACK_ROW_LENGTH	lib/gl3w/GL/glcorearb.h	205;"	d
GL_PACK_SKIP_IMAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	334;"	d
GL_PACK_SKIP_IMAGES	lib/gl3w/GL/glcorearb.h	334;"	d
GL_PACK_SKIP_PIXELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	207;"	d
GL_PACK_SKIP_PIXELS	lib/gl3w/GL/glcorearb.h	207;"	d
GL_PACK_SKIP_ROWS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	206;"	d
GL_PACK_SKIP_ROWS	lib/gl3w/GL/glcorearb.h	206;"	d
GL_PACK_SWAP_BYTES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	203;"	d
GL_PACK_SWAP_BYTES	lib/gl3w/GL/glcorearb.h	203;"	d
GL_PATCHES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1910;"	d
GL_PATCHES	lib/gl3w/GL/glcorearb.h	1910;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1912;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	lib/gl3w/GL/glcorearb.h	1912;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1913;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	lib/gl3w/GL/glcorearb.h	1913;"	d
GL_PATCH_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1911;"	d
GL_PATCH_VERTICES	lib/gl3w/GL/glcorearb.h	1911;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2156;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2156;"	d
GL_PIXEL_PACK_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	576;"	d
GL_PIXEL_PACK_BUFFER	lib/gl3w/GL/glcorearb.h	576;"	d
GL_PIXEL_PACK_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	578;"	d
GL_PIXEL_PACK_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	578;"	d
GL_PIXEL_UNPACK_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	577;"	d
GL_PIXEL_UNPACK_BUFFER	lib/gl3w/GL/glcorearb.h	577;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	579;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	579;"	d
GL_POINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	279;"	d
GL_POINT	lib/gl3w/GL/glcorearb.h	279;"	d
GL_POINTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	103;"	d
GL_POINTS	lib/gl3w/GL/glcorearb.h	103;"	d
GL_POINT_FADE_THRESHOLD_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	447;"	d
GL_POINT_FADE_THRESHOLD_SIZE	lib/gl3w/GL/glcorearb.h	447;"	d
GL_POINT_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	154;"	d
GL_POINT_SIZE	lib/gl3w/GL/glcorearb.h	154;"	d
GL_POINT_SIZE_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	156;"	d
GL_POINT_SIZE_GRANULARITY	lib/gl3w/GL/glcorearb.h	156;"	d
GL_POINT_SIZE_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	155;"	d
GL_POINT_SIZE_RANGE	lib/gl3w/GL/glcorearb.h	155;"	d
GL_POINT_SPRITE_COORD_ORIGIN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	567;"	d
GL_POINT_SPRITE_COORD_ORIGIN	lib/gl3w/GL/glcorearb.h	567;"	d
GL_POLYGON_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	161;"	d
GL_POLYGON_MODE	lib/gl3w/GL/glcorearb.h	161;"	d
GL_POLYGON_OFFSET_FACTOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	218;"	d
GL_POLYGON_OFFSET_FACTOR	lib/gl3w/GL/glcorearb.h	218;"	d
GL_POLYGON_OFFSET_FILL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	217;"	d
GL_POLYGON_OFFSET_FILL	lib/gl3w/GL/glcorearb.h	217;"	d
GL_POLYGON_OFFSET_LINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	216;"	d
GL_POLYGON_OFFSET_LINE	lib/gl3w/GL/glcorearb.h	216;"	d
GL_POLYGON_OFFSET_POINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	215;"	d
GL_POLYGON_OFFSET_POINT	lib/gl3w/GL/glcorearb.h	215;"	d
GL_POLYGON_OFFSET_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	214;"	d
GL_POLYGON_OFFSET_UNITS	lib/gl3w/GL/glcorearb.h	214;"	d
GL_POLYGON_SMOOTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	162;"	d
GL_POLYGON_SMOOTH	lib/gl3w/GL/glcorearb.h	162;"	d
GL_POLYGON_SMOOTH_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	196;"	d
GL_POLYGON_SMOOTH_HINT	lib/gl3w/GL/glcorearb.h	196;"	d
GL_PRIMITIVES_GENERATED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	640;"	d
GL_PRIMITIVES_GENERATED	lib/gl3w/GL/glcorearb.h	640;"	d
GL_PRIMITIVE_RESTART	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	850;"	d
GL_PRIMITIVE_RESTART	lib/gl3w/GL/glcorearb.h	850;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2360;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	lib/gl3w/GL/glcorearb.h	2360;"	d
GL_PRIMITIVE_RESTART_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	851;"	d
GL_PRIMITIVE_RESTART_INDEX	lib/gl3w/GL/glcorearb.h	851;"	d
GL_PROGRAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2279;"	d
GL_PROGRAM	lib/gl3w/GL/glcorearb.h	2279;"	d
GL_PROGRAM_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1992;"	d
GL_PROGRAM_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	1992;"	d
GL_PROGRAM_BINARY_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1990;"	d
GL_PROGRAM_BINARY_LENGTH	lib/gl3w/GL/glcorearb.h	1990;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1989;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	lib/gl3w/GL/glcorearb.h	1989;"	d
GL_PROGRAM_INPUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2511;"	d
GL_PROGRAM_INPUT	lib/gl3w/GL/glcorearb.h	2511;"	d
GL_PROGRAM_OUTPUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2512;"	d
GL_PROGRAM_OUTPUT	lib/gl3w/GL/glcorearb.h	2512;"	d
GL_PROGRAM_PIPELINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2281;"	d
GL_PROGRAM_PIPELINE	lib/gl3w/GL/glcorearb.h	2281;"	d
GL_PROGRAM_PIPELINE_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2004;"	d
GL_PROGRAM_PIPELINE_BINDING	lib/gl3w/GL/glcorearb.h	2004;"	d
GL_PROGRAM_POINT_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	896;"	d
GL_PROGRAM_POINT_SIZE	lib/gl3w/GL/glcorearb.h	896;"	d
GL_PROGRAM_SEPARABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2002;"	d
GL_PROGRAM_SEPARABLE	lib/gl3w/GL/glcorearb.h	2002;"	d
GL_PROVOKING_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1728;"	d
GL_PROVOKING_VERTEX	lib/gl3w/GL/glcorearb.h	1728;"	d
GL_PROXY_TEXTURE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	306;"	d
GL_PROXY_TEXTURE_1D	lib/gl3w/GL/glcorearb.h	306;"	d
GL_PROXY_TEXTURE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	624;"	d
GL_PROXY_TEXTURE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	624;"	d
GL_PROXY_TEXTURE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	307;"	d
GL_PROXY_TEXTURE_2D	lib/gl3w/GL/glcorearb.h	307;"	d
GL_PROXY_TEXTURE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	626;"	d
GL_PROXY_TEXTURE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	626;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1759;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	1759;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1761;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	1761;"	d
GL_PROXY_TEXTURE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	339;"	d
GL_PROXY_TEXTURE_3D	lib/gl3w/GL/glcorearb.h	339;"	d
GL_PROXY_TEXTURE_CUBE_MAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	430;"	d
GL_PROXY_TEXTURE_CUBE_MAP	lib/gl3w/GL/glcorearb.h	430;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1002;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	1002;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1792;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	1792;"	d
GL_PROXY_TEXTURE_RECTANGLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	835;"	d
GL_PROXY_TEXTURE_RECTANGLE	lib/gl3w/GL/glcorearb.h	835;"	d
GL_QUADS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	110;"	d
GL_QUADS	lib/gl3w/GL/glcorearb.h	110;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1725;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	lib/gl3w/GL/glcorearb.h	1725;"	d
GL_QUERY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2280;"	d
GL_QUERY	lib/gl3w/GL/glcorearb.h	2280;"	d
GL_QUERY_BY_REGION_NO_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	691;"	d
GL_QUERY_BY_REGION_NO_WAIT	lib/gl3w/GL/glcorearb.h	691;"	d
GL_QUERY_BY_REGION_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	690;"	d
GL_QUERY_BY_REGION_WAIT	lib/gl3w/GL/glcorearb.h	690;"	d
GL_QUERY_COUNTER_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	464;"	d
GL_QUERY_COUNTER_BITS	lib/gl3w/GL/glcorearb.h	464;"	d
GL_QUERY_NO_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	689;"	d
GL_QUERY_NO_WAIT	lib/gl3w/GL/glcorearb.h	689;"	d
GL_QUERY_RESULT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	466;"	d
GL_QUERY_RESULT	lib/gl3w/GL/glcorearb.h	466;"	d
GL_QUERY_RESULT_AVAILABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	467;"	d
GL_QUERY_RESULT_AVAILABLE	lib/gl3w/GL/glcorearb.h	467;"	d
GL_QUERY_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	688;"	d
GL_QUERY_WAIT	lib/gl3w/GL/glcorearb.h	688;"	d
GL_R11F_G11F_B10F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	629;"	d
GL_R11F_G11F_B10F	lib/gl3w/GL/glcorearb.h	629;"	d
GL_R16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1646;"	d
GL_R16	lib/gl3w/GL/glcorearb.h	1646;"	d
GL_R16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1649;"	d
GL_R16F	lib/gl3w/GL/glcorearb.h	1649;"	d
GL_R16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1655;"	d
GL_R16I	lib/gl3w/GL/glcorearb.h	1655;"	d
GL_R16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1656;"	d
GL_R16UI	lib/gl3w/GL/glcorearb.h	1656;"	d
GL_R16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	845;"	d
GL_R16_SNORM	lib/gl3w/GL/glcorearb.h	845;"	d
GL_R32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1650;"	d
GL_R32F	lib/gl3w/GL/glcorearb.h	1650;"	d
GL_R32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1657;"	d
GL_R32I	lib/gl3w/GL/glcorearb.h	1657;"	d
GL_R32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1658;"	d
GL_R32UI	lib/gl3w/GL/glcorearb.h	1658;"	d
GL_R3_G3_B2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	311;"	d
GL_R3_G3_B2	lib/gl3w/GL/glcorearb.h	311;"	d
GL_R8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1645;"	d
GL_R8	lib/gl3w/GL/glcorearb.h	1645;"	d
GL_R8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1653;"	d
GL_R8I	lib/gl3w/GL/glcorearb.h	1653;"	d
GL_R8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1654;"	d
GL_R8UI	lib/gl3w/GL/glcorearb.h	1654;"	d
GL_R8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	841;"	d
GL_R8_SNORM	lib/gl3w/GL/glcorearb.h	841;"	d
GL_RASTERIZER_DISCARD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	642;"	d
GL_RASTERIZER_DISCARD	lib/gl3w/GL/glcorearb.h	642;"	d
GL_READ_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	188;"	d
GL_READ_BUFFER	lib/gl3w/GL/glcorearb.h	188;"	d
GL_READ_FRAMEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1565;"	d
GL_READ_FRAMEBUFFER	lib/gl3w/GL/glcorearb.h	1565;"	d
GL_READ_FRAMEBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1567;"	d
GL_READ_FRAMEBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1567;"	d
GL_READ_ONLY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	473;"	d
GL_READ_ONLY	lib/gl3w/GL/glcorearb.h	473;"	d
GL_READ_PIXELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2430;"	d
GL_READ_PIXELS	lib/gl3w/GL/glcorearb.h	2430;"	d
GL_READ_PIXELS_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2431;"	d
GL_READ_PIXELS_FORMAT	lib/gl3w/GL/glcorearb.h	2431;"	d
GL_READ_PIXELS_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2432;"	d
GL_READ_PIXELS_TYPE	lib/gl3w/GL/glcorearb.h	2432;"	d
GL_READ_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	475;"	d
GL_READ_WRITE	lib/gl3w/GL/glcorearb.h	475;"	d
GL_RED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	272;"	d
GL_RED	lib/gl3w/GL/glcorearb.h	272;"	d
GL_RED_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	661;"	d
GL_RED_INTEGER	lib/gl3w/GL/glcorearb.h	661;"	d
GL_RED_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	837;"	d
GL_RED_SNORM	lib/gl3w/GL/glcorearb.h	837;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2551;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	2551;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2550;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	2550;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2549;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	2549;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2547;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	2547;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2548;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	2548;"	d
GL_REFERENCED_BY_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2546;"	d
GL_REFERENCED_BY_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	2546;"	d
GL_RENDERBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1600;"	d
GL_RENDERBUFFER	lib/gl3w/GL/glcorearb.h	1600;"	d
GL_RENDERBUFFER_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1611;"	d
GL_RENDERBUFFER_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	1611;"	d
GL_RENDERBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1564;"	d
GL_RENDERBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1564;"	d
GL_RENDERBUFFER_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1610;"	d
GL_RENDERBUFFER_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	1610;"	d
GL_RENDERBUFFER_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1612;"	d
GL_RENDERBUFFER_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	1612;"	d
GL_RENDERBUFFER_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1609;"	d
GL_RENDERBUFFER_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	1609;"	d
GL_RENDERBUFFER_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1602;"	d
GL_RENDERBUFFER_HEIGHT	lib/gl3w/GL/glcorearb.h	1602;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1603;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	lib/gl3w/GL/glcorearb.h	1603;"	d
GL_RENDERBUFFER_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1608;"	d
GL_RENDERBUFFER_RED_SIZE	lib/gl3w/GL/glcorearb.h	1608;"	d
GL_RENDERBUFFER_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1568;"	d
GL_RENDERBUFFER_SAMPLES	lib/gl3w/GL/glcorearb.h	1568;"	d
GL_RENDERBUFFER_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1613;"	d
GL_RENDERBUFFER_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	1613;"	d
GL_RENDERBUFFER_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1601;"	d
GL_RENDERBUFFER_WIDTH	lib/gl3w/GL/glcorearb.h	1601;"	d
GL_RENDERER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	289;"	d
GL_RENDERER	lib/gl3w/GL/glcorearb.h	289;"	d
GL_REPEAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	309;"	d
GL_REPEAT	lib/gl3w/GL/glcorearb.h	309;"	d
GL_REPLACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	284;"	d
GL_REPLACE	lib/gl3w/GL/glcorearb.h	284;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2079;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	lib/gl3w/GL/glcorearb.h	2079;"	d
GL_RG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1643;"	d
GL_RG	lib/gl3w/GL/glcorearb.h	1643;"	d
GL_RG16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1648;"	d
GL_RG16	lib/gl3w/GL/glcorearb.h	1648;"	d
GL_RG16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1651;"	d
GL_RG16F	lib/gl3w/GL/glcorearb.h	1651;"	d
GL_RG16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1661;"	d
GL_RG16I	lib/gl3w/GL/glcorearb.h	1661;"	d
GL_RG16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1662;"	d
GL_RG16UI	lib/gl3w/GL/glcorearb.h	1662;"	d
GL_RG16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	846;"	d
GL_RG16_SNORM	lib/gl3w/GL/glcorearb.h	846;"	d
GL_RG32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1652;"	d
GL_RG32F	lib/gl3w/GL/glcorearb.h	1652;"	d
GL_RG32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1663;"	d
GL_RG32I	lib/gl3w/GL/glcorearb.h	1663;"	d
GL_RG32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1664;"	d
GL_RG32UI	lib/gl3w/GL/glcorearb.h	1664;"	d
GL_RG8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1647;"	d
GL_RG8	lib/gl3w/GL/glcorearb.h	1647;"	d
GL_RG8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1659;"	d
GL_RG8I	lib/gl3w/GL/glcorearb.h	1659;"	d
GL_RG8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1660;"	d
GL_RG8UI	lib/gl3w/GL/glcorearb.h	1660;"	d
GL_RG8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	842;"	d
GL_RG8_SNORM	lib/gl3w/GL/glcorearb.h	842;"	d
GL_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	276;"	d
GL_RGB	lib/gl3w/GL/glcorearb.h	276;"	d
GL_RGB10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	315;"	d
GL_RGB10	lib/gl3w/GL/glcorearb.h	315;"	d
GL_RGB10_A2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	322;"	d
GL_RGB10_A2	lib/gl3w/GL/glcorearb.h	322;"	d
GL_RGB10_A2UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1844;"	d
GL_RGB10_A2UI	lib/gl3w/GL/glcorearb.h	1844;"	d
GL_RGB12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	316;"	d
GL_RGB12	lib/gl3w/GL/glcorearb.h	316;"	d
GL_RGB16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	317;"	d
GL_RGB16	lib/gl3w/GL/glcorearb.h	317;"	d
GL_RGB16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	615;"	d
GL_RGB16F	lib/gl3w/GL/glcorearb.h	615;"	d
GL_RGB16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	658;"	d
GL_RGB16I	lib/gl3w/GL/glcorearb.h	658;"	d
GL_RGB16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	652;"	d
GL_RGB16UI	lib/gl3w/GL/glcorearb.h	652;"	d
GL_RGB16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	847;"	d
GL_RGB16_SNORM	lib/gl3w/GL/glcorearb.h	847;"	d
GL_RGB32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	613;"	d
GL_RGB32F	lib/gl3w/GL/glcorearb.h	613;"	d
GL_RGB32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	656;"	d
GL_RGB32I	lib/gl3w/GL/glcorearb.h	656;"	d
GL_RGB32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	650;"	d
GL_RGB32UI	lib/gl3w/GL/glcorearb.h	650;"	d
GL_RGB4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	312;"	d
GL_RGB4	lib/gl3w/GL/glcorearb.h	312;"	d
GL_RGB5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	313;"	d
GL_RGB5	lib/gl3w/GL/glcorearb.h	313;"	d
GL_RGB565	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1985;"	d
GL_RGB565	lib/gl3w/GL/glcorearb.h	1985;"	d
GL_RGB5_A1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	320;"	d
GL_RGB5_A1	lib/gl3w/GL/glcorearb.h	320;"	d
GL_RGB8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	314;"	d
GL_RGB8	lib/gl3w/GL/glcorearb.h	314;"	d
GL_RGB8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	660;"	d
GL_RGB8I	lib/gl3w/GL/glcorearb.h	660;"	d
GL_RGB8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	654;"	d
GL_RGB8UI	lib/gl3w/GL/glcorearb.h	654;"	d
GL_RGB8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	843;"	d
GL_RGB8_SNORM	lib/gl3w/GL/glcorearb.h	843;"	d
GL_RGB9_E5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	631;"	d
GL_RGB9_E5	lib/gl3w/GL/glcorearb.h	631;"	d
GL_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	277;"	d
GL_RGBA	lib/gl3w/GL/glcorearb.h	277;"	d
GL_RGBA12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	323;"	d
GL_RGBA12	lib/gl3w/GL/glcorearb.h	323;"	d
GL_RGBA16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	324;"	d
GL_RGBA16	lib/gl3w/GL/glcorearb.h	324;"	d
GL_RGBA16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	614;"	d
GL_RGBA16F	lib/gl3w/GL/glcorearb.h	614;"	d
GL_RGBA16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	657;"	d
GL_RGBA16I	lib/gl3w/GL/glcorearb.h	657;"	d
GL_RGBA16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	651;"	d
GL_RGBA16UI	lib/gl3w/GL/glcorearb.h	651;"	d
GL_RGBA16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	848;"	d
GL_RGBA16_SNORM	lib/gl3w/GL/glcorearb.h	848;"	d
GL_RGBA2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	318;"	d
GL_RGBA2	lib/gl3w/GL/glcorearb.h	318;"	d
GL_RGBA32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	612;"	d
GL_RGBA32F	lib/gl3w/GL/glcorearb.h	612;"	d
GL_RGBA32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	655;"	d
GL_RGBA32I	lib/gl3w/GL/glcorearb.h	655;"	d
GL_RGBA32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	649;"	d
GL_RGBA32UI	lib/gl3w/GL/glcorearb.h	649;"	d
GL_RGBA4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	319;"	d
GL_RGBA4	lib/gl3w/GL/glcorearb.h	319;"	d
GL_RGBA8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	321;"	d
GL_RGBA8	lib/gl3w/GL/glcorearb.h	321;"	d
GL_RGBA8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	659;"	d
GL_RGBA8I	lib/gl3w/GL/glcorearb.h	659;"	d
GL_RGBA8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	653;"	d
GL_RGBA8UI	lib/gl3w/GL/glcorearb.h	653;"	d
GL_RGBA8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	844;"	d
GL_RGBA8_SNORM	lib/gl3w/GL/glcorearb.h	844;"	d
GL_RGBA_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	665;"	d
GL_RGBA_INTEGER	lib/gl3w/GL/glcorearb.h	665;"	d
GL_RGBA_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	840;"	d
GL_RGBA_SNORM	lib/gl3w/GL/glcorearb.h	840;"	d
GL_RGB_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	664;"	d
GL_RGB_INTEGER	lib/gl3w/GL/glcorearb.h	664;"	d
GL_RGB_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	839;"	d
GL_RGB_SNORM	lib/gl3w/GL/glcorearb.h	839;"	d
GL_RG_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1644;"	d
GL_RG_INTEGER	lib/gl3w/GL/glcorearb.h	1644;"	d
GL_RG_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	838;"	d
GL_RG_SNORM	lib/gl3w/GL/glcorearb.h	838;"	d
GL_RIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	142;"	d
GL_RIGHT	lib/gl3w/GL/glcorearb.h	142;"	d
GL_SAMPLER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2282;"	d
GL_SAMPLER	lib/gl3w/GL/glcorearb.h	2282;"	d
GL_SAMPLER_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	547;"	d
GL_SAMPLER_1D	lib/gl3w/GL/glcorearb.h	547;"	d
GL_SAMPLER_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	668;"	d
GL_SAMPLER_1D_ARRAY	lib/gl3w/GL/glcorearb.h	668;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	670;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	lib/gl3w/GL/glcorearb.h	670;"	d
GL_SAMPLER_1D_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	551;"	d
GL_SAMPLER_1D_SHADOW	lib/gl3w/GL/glcorearb.h	551;"	d
GL_SAMPLER_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	548;"	d
GL_SAMPLER_2D	lib/gl3w/GL/glcorearb.h	548;"	d
GL_SAMPLER_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	669;"	d
GL_SAMPLER_2D_ARRAY	lib/gl3w/GL/glcorearb.h	669;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	671;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	lib/gl3w/GL/glcorearb.h	671;"	d
GL_SAMPLER_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1766;"	d
GL_SAMPLER_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	1766;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1769;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	1769;"	d
GL_SAMPLER_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	822;"	d
GL_SAMPLER_2D_RECT	lib/gl3w/GL/glcorearb.h	822;"	d
GL_SAMPLER_2D_RECT_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	823;"	d
GL_SAMPLER_2D_RECT_SHADOW	lib/gl3w/GL/glcorearb.h	823;"	d
GL_SAMPLER_2D_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	552;"	d
GL_SAMPLER_2D_SHADOW	lib/gl3w/GL/glcorearb.h	552;"	d
GL_SAMPLER_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	549;"	d
GL_SAMPLER_3D	lib/gl3w/GL/glcorearb.h	549;"	d
GL_SAMPLER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1837;"	d
GL_SAMPLER_BINDING	lib/gl3w/GL/glcorearb.h	1837;"	d
GL_SAMPLER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	824;"	d
GL_SAMPLER_BUFFER	lib/gl3w/GL/glcorearb.h	824;"	d
GL_SAMPLER_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	550;"	d
GL_SAMPLER_CUBE	lib/gl3w/GL/glcorearb.h	550;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1003;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	1003;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1793;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	1793;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1004;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	lib/gl3w/GL/glcorearb.h	1004;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1794;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	lib/gl3w/GL/glcorearb.h	1794;"	d
GL_SAMPLER_CUBE_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	672;"	d
GL_SAMPLER_CUBE_SHADOW	lib/gl3w/GL/glcorearb.h	672;"	d
GL_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	419;"	d
GL_SAMPLES	lib/gl3w/GL/glcorearb.h	419;"	d
GL_SAMPLES_PASSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	488;"	d
GL_SAMPLES_PASSED	lib/gl3w/GL/glcorearb.h	488;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	415;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	lib/gl3w/GL/glcorearb.h	415;"	d
GL_SAMPLE_ALPHA_TO_ONE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	416;"	d
GL_SAMPLE_ALPHA_TO_ONE	lib/gl3w/GL/glcorearb.h	416;"	d
GL_SAMPLE_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	418;"	d
GL_SAMPLE_BUFFERS	lib/gl3w/GL/glcorearb.h	418;"	d
GL_SAMPLE_COVERAGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	417;"	d
GL_SAMPLE_COVERAGE	lib/gl3w/GL/glcorearb.h	417;"	d
GL_SAMPLE_COVERAGE_INVERT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	421;"	d
GL_SAMPLE_COVERAGE_INVERT	lib/gl3w/GL/glcorearb.h	421;"	d
GL_SAMPLE_COVERAGE_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	420;"	d
GL_SAMPLE_COVERAGE_VALUE	lib/gl3w/GL/glcorearb.h	420;"	d
GL_SAMPLE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1755;"	d
GL_SAMPLE_MASK	lib/gl3w/GL/glcorearb.h	1755;"	d
GL_SAMPLE_MASK_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1756;"	d
GL_SAMPLE_MASK_VALUE	lib/gl3w/GL/glcorearb.h	1756;"	d
GL_SAMPLE_POSITION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1754;"	d
GL_SAMPLE_POSITION	lib/gl3w/GL/glcorearb.h	1754;"	d
GL_SAMPLE_SHADING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	996;"	d
GL_SAMPLE_SHADING	lib/gl3w/GL/glcorearb.h	996;"	d
GL_SAMPLE_SHADING_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1785;"	d
GL_SAMPLE_SHADING_ARB	lib/gl3w/GL/glcorearb.h	1785;"	d
GL_SCISSOR_BOX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	189;"	d
GL_SCISSOR_BOX	lib/gl3w/GL/glcorearb.h	189;"	d
GL_SCISSOR_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	190;"	d
GL_SCISSOR_TEST	lib/gl3w/GL/glcorearb.h	190;"	d
GL_SEPARATE_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	646;"	d
GL_SEPARATE_ATTRIBS	lib/gl3w/GL/glcorearb.h	646;"	d
GL_SET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	262;"	d
GL_SET	lib/gl3w/GL/glcorearb.h	262;"	d
GL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2278;"	d
GL_SHADER	lib/gl3w/GL/glcorearb.h	2278;"	d
GL_SHADER_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1980;"	d
GL_SHADER_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	1980;"	d
GL_SHADER_COMPILER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1979;"	d
GL_SHADER_COMPILER	lib/gl3w/GL/glcorearb.h	1979;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2154;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2154;"	d
GL_SHADER_IMAGE_ATOMIC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2456;"	d
GL_SHADER_IMAGE_ATOMIC	lib/gl3w/GL/glcorearb.h	2456;"	d
GL_SHADER_IMAGE_LOAD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2454;"	d
GL_SHADER_IMAGE_LOAD	lib/gl3w/GL/glcorearb.h	2454;"	d
GL_SHADER_IMAGE_STORE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2455;"	d
GL_SHADER_IMAGE_STORE	lib/gl3w/GL/glcorearb.h	2455;"	d
GL_SHADER_INCLUDE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1809;"	d
GL_SHADER_INCLUDE_ARB	lib/gl3w/GL/glcorearb.h	1809;"	d
GL_SHADER_SOURCE_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	561;"	d
GL_SHADER_SOURCE_LENGTH	lib/gl3w/GL/glcorearb.h	561;"	d
GL_SHADER_STORAGE_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2582;"	d
GL_SHADER_STORAGE_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2582;"	d
GL_SHADER_STORAGE_BLOCK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2514;"	d
GL_SHADER_STORAGE_BLOCK	lib/gl3w/GL/glcorearb.h	2514;"	d
GL_SHADER_STORAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2568;"	d
GL_SHADER_STORAGE_BUFFER	lib/gl3w/GL/glcorearb.h	2568;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2569;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	2569;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2581;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	lib/gl3w/GL/glcorearb.h	2581;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2571;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	2571;"	d
GL_SHADER_STORAGE_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2570;"	d
GL_SHADER_STORAGE_BUFFER_START	lib/gl3w/GL/glcorearb.h	2570;"	d
GL_SHADER_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	533;"	d
GL_SHADER_TYPE	lib/gl3w/GL/glcorearb.h	533;"	d
GL_SHADING_LANGUAGE_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	565;"	d
GL_SHADING_LANGUAGE_VERSION	lib/gl3w/GL/glcorearb.h	565;"	d
GL_SHORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	237;"	d
GL_SHORT	lib/gl3w/GL/glcorearb.h	237;"	d
GL_SIGNALED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1744;"	d
GL_SIGNALED	lib/gl3w/GL/glcorearb.h	1744;"	d
GL_SIGNED_NORMALIZED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	849;"	d
GL_SIGNED_NORMALIZED	lib/gl3w/GL/glcorearb.h	849;"	d
GL_SILENCE_DEPRECATION	lib/cimgui/imgui/examples/example_glfw_opengl2/main.cpp	14;"	d	file:
GL_SILENCE_DEPRECATION	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	49;"	d	file:
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2461;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	lib/gl3w/GL/glcorearb.h	2461;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2463;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	lib/gl3w/GL/glcorearb.h	2463;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2462;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	lib/gl3w/GL/glcorearb.h	2462;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2464;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	lib/gl3w/GL/glcorearb.h	2464;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	362;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	lib/gl3w/GL/glcorearb.h	362;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	361;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	lib/gl3w/GL/glcorearb.h	361;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	360;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	lib/gl3w/GL/glcorearb.h	360;"	d
GL_SMOOTH_POINT_SIZE_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	359;"	d
GL_SMOOTH_POINT_SIZE_RANGE	lib/gl3w/GL/glcorearb.h	359;"	d
GL_SRC1_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	489;"	d
GL_SRC1_ALPHA	lib/gl3w/GL/glcorearb.h	489;"	d
GL_SRC1_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1822;"	d
GL_SRC1_COLOR	lib/gl3w/GL/glcorearb.h	1822;"	d
GL_SRC_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	125;"	d
GL_SRC_ALPHA	lib/gl3w/GL/glcorearb.h	125;"	d
GL_SRC_ALPHA_SATURATE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	132;"	d
GL_SRC_ALPHA_SATURATE	lib/gl3w/GL/glcorearb.h	132;"	d
GL_SRC_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	123;"	d
GL_SRC_COLOR	lib/gl3w/GL/glcorearb.h	123;"	d
GL_SRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	586;"	d
GL_SRGB	lib/gl3w/GL/glcorearb.h	586;"	d
GL_SRGB8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	587;"	d
GL_SRGB8	lib/gl3w/GL/glcorearb.h	587;"	d
GL_SRGB8_ALPHA8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	589;"	d
GL_SRGB8_ALPHA8	lib/gl3w/GL/glcorearb.h	589;"	d
GL_SRGB_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	588;"	d
GL_SRGB_ALPHA	lib/gl3w/GL/glcorearb.h	588;"	d
GL_SRGB_DECODE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2443;"	d
GL_SRGB_DECODE_ARB	lib/gl3w/GL/glcorearb.h	2443;"	d
GL_SRGB_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2441;"	d
GL_SRGB_READ	lib/gl3w/GL/glcorearb.h	2441;"	d
GL_SRGB_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2442;"	d
GL_SRGB_WRITE	lib/gl3w/GL/glcorearb.h	2442;"	d
GL_STACK_OVERFLOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	244;"	d
GL_STACK_OVERFLOW	lib/gl3w/GL/glcorearb.h	244;"	d
GL_STACK_UNDERFLOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	245;"	d
GL_STACK_UNDERFLOW	lib/gl3w/GL/glcorearb.h	245;"	d
GL_STATIC_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	484;"	d
GL_STATIC_COPY	lib/gl3w/GL/glcorearb.h	484;"	d
GL_STATIC_DRAW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	482;"	d
GL_STATIC_DRAW	lib/gl3w/GL/glcorearb.h	482;"	d
GL_STATIC_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	483;"	d
GL_STATIC_READ	lib/gl3w/GL/glcorearb.h	483;"	d
GL_STENCIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	268;"	d
GL_STENCIL	lib/gl3w/GL/glcorearb.h	268;"	d
GL_STENCIL_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1598;"	d
GL_STENCIL_ATTACHMENT	lib/gl3w/GL/glcorearb.h	1598;"	d
GL_STENCIL_BACK_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	502;"	d
GL_STENCIL_BACK_FAIL	lib/gl3w/GL/glcorearb.h	502;"	d
GL_STENCIL_BACK_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	501;"	d
GL_STENCIL_BACK_FUNC	lib/gl3w/GL/glcorearb.h	501;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	503;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	lib/gl3w/GL/glcorearb.h	503;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	504;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	lib/gl3w/GL/glcorearb.h	504;"	d
GL_STENCIL_BACK_REF	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	570;"	d
GL_STENCIL_BACK_REF	lib/gl3w/GL/glcorearb.h	570;"	d
GL_STENCIL_BACK_VALUE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	571;"	d
GL_STENCIL_BACK_VALUE_MASK	lib/gl3w/GL/glcorearb.h	571;"	d
GL_STENCIL_BACK_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	572;"	d
GL_STENCIL_BACK_WRITEMASK	lib/gl3w/GL/glcorearb.h	572;"	d
GL_STENCIL_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	97;"	d
GL_STENCIL_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	97;"	d
GL_STENCIL_CLEAR_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	172;"	d
GL_STENCIL_CLEAR_VALUE	lib/gl3w/GL/glcorearb.h	172;"	d
GL_STENCIL_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2423;"	d
GL_STENCIL_COMPONENTS	lib/gl3w/GL/glcorearb.h	2423;"	d
GL_STENCIL_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	175;"	d
GL_STENCIL_FAIL	lib/gl3w/GL/glcorearb.h	175;"	d
GL_STENCIL_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	173;"	d
GL_STENCIL_FUNC	lib/gl3w/GL/glcorearb.h	173;"	d
GL_STENCIL_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	270;"	d
GL_STENCIL_INDEX	lib/gl3w/GL/glcorearb.h	270;"	d
GL_STENCIL_INDEX1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1604;"	d
GL_STENCIL_INDEX1	lib/gl3w/GL/glcorearb.h	1604;"	d
GL_STENCIL_INDEX16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1607;"	d
GL_STENCIL_INDEX16	lib/gl3w/GL/glcorearb.h	1607;"	d
GL_STENCIL_INDEX4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1605;"	d
GL_STENCIL_INDEX4	lib/gl3w/GL/glcorearb.h	1605;"	d
GL_STENCIL_INDEX8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1606;"	d
GL_STENCIL_INDEX8	lib/gl3w/GL/glcorearb.h	1606;"	d
GL_STENCIL_PASS_DEPTH_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	176;"	d
GL_STENCIL_PASS_DEPTH_FAIL	lib/gl3w/GL/glcorearb.h	176;"	d
GL_STENCIL_PASS_DEPTH_PASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	177;"	d
GL_STENCIL_PASS_DEPTH_PASS	lib/gl3w/GL/glcorearb.h	177;"	d
GL_STENCIL_REF	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	178;"	d
GL_STENCIL_REF	lib/gl3w/GL/glcorearb.h	178;"	d
GL_STENCIL_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2426;"	d
GL_STENCIL_RENDERABLE	lib/gl3w/GL/glcorearb.h	2426;"	d
GL_STENCIL_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	171;"	d
GL_STENCIL_TEST	lib/gl3w/GL/glcorearb.h	171;"	d
GL_STENCIL_VALUE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	174;"	d
GL_STENCIL_VALUE_MASK	lib/gl3w/GL/glcorearb.h	174;"	d
GL_STENCIL_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	179;"	d
GL_STENCIL_WRITEMASK	lib/gl3w/GL/glcorearb.h	179;"	d
GL_STEREO	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	194;"	d
GL_STEREO	lib/gl3w/GL/glcorearb.h	194;"	d
GL_STREAM_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	481;"	d
GL_STREAM_COPY	lib/gl3w/GL/glcorearb.h	481;"	d
GL_STREAM_DRAW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	479;"	d
GL_STREAM_DRAW	lib/gl3w/GL/glcorearb.h	479;"	d
GL_STREAM_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	480;"	d
GL_STREAM_READ	lib/gl3w/GL/glcorearb.h	480;"	d
GL_SUBPIXEL_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	211;"	d
GL_SUBPIXEL_BITS	lib/gl3w/GL/glcorearb.h	211;"	d
GL_SYNC_CL_EVENT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2043;"	d
GL_SYNC_CL_EVENT_ARB	lib/gl3w/GL/glcorearb.h	2043;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2044;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	lib/gl3w/GL/glcorearb.h	2044;"	d
GL_SYNC_CONDITION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1738;"	d
GL_SYNC_CONDITION	lib/gl3w/GL/glcorearb.h	1738;"	d
GL_SYNC_FENCE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1741;"	d
GL_SYNC_FENCE	lib/gl3w/GL/glcorearb.h	1741;"	d
GL_SYNC_FLAGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1740;"	d
GL_SYNC_FLAGS	lib/gl3w/GL/glcorearb.h	1740;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1749;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	lib/gl3w/GL/glcorearb.h	1749;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1742;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	lib/gl3w/GL/glcorearb.h	1742;"	d
GL_SYNC_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1739;"	d
GL_SYNC_STATUS	lib/gl3w/GL/glcorearb.h	1739;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1914;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	lib/gl3w/GL/glcorearb.h	1914;"	d
GL_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1946;"	d
GL_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	1946;"	d
GL_TESS_CONTROL_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1999;"	d
GL_TESS_CONTROL_SHADER_BIT	lib/gl3w/GL/glcorearb.h	1999;"	d
GL_TESS_CONTROL_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2517;"	d
GL_TESS_CONTROL_SUBROUTINE	lib/gl3w/GL/glcorearb.h	2517;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2523;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	2523;"	d
GL_TESS_CONTROL_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2446;"	d
GL_TESS_CONTROL_TEXTURE	lib/gl3w/GL/glcorearb.h	2446;"	d
GL_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1945;"	d
GL_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	1945;"	d
GL_TESS_EVALUATION_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2000;"	d
GL_TESS_EVALUATION_SHADER_BIT	lib/gl3w/GL/glcorearb.h	2000;"	d
GL_TESS_EVALUATION_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2518;"	d
GL_TESS_EVALUATION_SUBROUTINE	lib/gl3w/GL/glcorearb.h	2518;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2524;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	2524;"	d
GL_TESS_EVALUATION_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2447;"	d
GL_TESS_EVALUATION_TEXTURE	lib/gl3w/GL/glcorearb.h	2447;"	d
GL_TESS_GEN_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1915;"	d
GL_TESS_GEN_MODE	lib/gl3w/GL/glcorearb.h	1915;"	d
GL_TESS_GEN_POINT_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1918;"	d
GL_TESS_GEN_POINT_MODE	lib/gl3w/GL/glcorearb.h	1918;"	d
GL_TESS_GEN_SPACING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1916;"	d
GL_TESS_GEN_SPACING	lib/gl3w/GL/glcorearb.h	1916;"	d
GL_TESS_GEN_VERTEX_ORDER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1917;"	d
GL_TESS_GEN_VERTEX_ORDER	lib/gl3w/GL/glcorearb.h	1917;"	d
GL_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	264;"	d
GL_TEXTURE	lib/gl3w/GL/glcorearb.h	264;"	d
GL_TEXTURE0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	381;"	d
GL_TEXTURE0	lib/gl3w/GL/glcorearb.h	381;"	d
GL_TEXTURE1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	382;"	d
GL_TEXTURE1	lib/gl3w/GL/glcorearb.h	382;"	d
GL_TEXTURE10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	391;"	d
GL_TEXTURE10	lib/gl3w/GL/glcorearb.h	391;"	d
GL_TEXTURE11	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	392;"	d
GL_TEXTURE11	lib/gl3w/GL/glcorearb.h	392;"	d
GL_TEXTURE12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	393;"	d
GL_TEXTURE12	lib/gl3w/GL/glcorearb.h	393;"	d
GL_TEXTURE13	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	394;"	d
GL_TEXTURE13	lib/gl3w/GL/glcorearb.h	394;"	d
GL_TEXTURE14	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	395;"	d
GL_TEXTURE14	lib/gl3w/GL/glcorearb.h	395;"	d
GL_TEXTURE15	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	396;"	d
GL_TEXTURE15	lib/gl3w/GL/glcorearb.h	396;"	d
GL_TEXTURE16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	397;"	d
GL_TEXTURE16	lib/gl3w/GL/glcorearb.h	397;"	d
GL_TEXTURE17	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	398;"	d
GL_TEXTURE17	lib/gl3w/GL/glcorearb.h	398;"	d
GL_TEXTURE18	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	399;"	d
GL_TEXTURE18	lib/gl3w/GL/glcorearb.h	399;"	d
GL_TEXTURE19	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	400;"	d
GL_TEXTURE19	lib/gl3w/GL/glcorearb.h	400;"	d
GL_TEXTURE2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	383;"	d
GL_TEXTURE2	lib/gl3w/GL/glcorearb.h	383;"	d
GL_TEXTURE20	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	401;"	d
GL_TEXTURE20	lib/gl3w/GL/glcorearb.h	401;"	d
GL_TEXTURE21	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	402;"	d
GL_TEXTURE21	lib/gl3w/GL/glcorearb.h	402;"	d
GL_TEXTURE22	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	403;"	d
GL_TEXTURE22	lib/gl3w/GL/glcorearb.h	403;"	d
GL_TEXTURE23	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	404;"	d
GL_TEXTURE23	lib/gl3w/GL/glcorearb.h	404;"	d
GL_TEXTURE24	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	405;"	d
GL_TEXTURE24	lib/gl3w/GL/glcorearb.h	405;"	d
GL_TEXTURE25	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	406;"	d
GL_TEXTURE25	lib/gl3w/GL/glcorearb.h	406;"	d
GL_TEXTURE26	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	407;"	d
GL_TEXTURE26	lib/gl3w/GL/glcorearb.h	407;"	d
GL_TEXTURE27	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	408;"	d
GL_TEXTURE27	lib/gl3w/GL/glcorearb.h	408;"	d
GL_TEXTURE28	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	409;"	d
GL_TEXTURE28	lib/gl3w/GL/glcorearb.h	409;"	d
GL_TEXTURE29	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	410;"	d
GL_TEXTURE29	lib/gl3w/GL/glcorearb.h	410;"	d
GL_TEXTURE3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	384;"	d
GL_TEXTURE3	lib/gl3w/GL/glcorearb.h	384;"	d
GL_TEXTURE30	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	411;"	d
GL_TEXTURE30	lib/gl3w/GL/glcorearb.h	411;"	d
GL_TEXTURE31	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	412;"	d
GL_TEXTURE31	lib/gl3w/GL/glcorearb.h	412;"	d
GL_TEXTURE4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	385;"	d
GL_TEXTURE4	lib/gl3w/GL/glcorearb.h	385;"	d
GL_TEXTURE5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	386;"	d
GL_TEXTURE5	lib/gl3w/GL/glcorearb.h	386;"	d
GL_TEXTURE6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	387;"	d
GL_TEXTURE6	lib/gl3w/GL/glcorearb.h	387;"	d
GL_TEXTURE7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	388;"	d
GL_TEXTURE7	lib/gl3w/GL/glcorearb.h	388;"	d
GL_TEXTURE8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	389;"	d
GL_TEXTURE8	lib/gl3w/GL/glcorearb.h	389;"	d
GL_TEXTURE9	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	390;"	d
GL_TEXTURE9	lib/gl3w/GL/glcorearb.h	390;"	d
GL_TEXTURE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	212;"	d
GL_TEXTURE_1D	lib/gl3w/GL/glcorearb.h	212;"	d
GL_TEXTURE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	623;"	d
GL_TEXTURE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	623;"	d
GL_TEXTURE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	213;"	d
GL_TEXTURE_2D	lib/gl3w/GL/glcorearb.h	213;"	d
GL_TEXTURE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	625;"	d
GL_TEXTURE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	625;"	d
GL_TEXTURE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1758;"	d
GL_TEXTURE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	1758;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1760;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	1760;"	d
GL_TEXTURE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	338;"	d
GL_TEXTURE_3D	lib/gl3w/GL/glcorearb.h	338;"	d
GL_TEXTURE_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	229;"	d
GL_TEXTURE_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	229;"	d
GL_TEXTURE_ALPHA_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1559;"	d
GL_TEXTURE_ALPHA_TYPE	lib/gl3w/GL/glcorearb.h	1559;"	d
GL_TEXTURE_BASE_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	357;"	d
GL_TEXTURE_BASE_LEVEL	lib/gl3w/GL/glcorearb.h	357;"	d
GL_TEXTURE_BINDING_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	219;"	d
GL_TEXTURE_BINDING_1D	lib/gl3w/GL/glcorearb.h	219;"	d
GL_TEXTURE_BINDING_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	627;"	d
GL_TEXTURE_BINDING_1D_ARRAY	lib/gl3w/GL/glcorearb.h	627;"	d
GL_TEXTURE_BINDING_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	220;"	d
GL_TEXTURE_BINDING_2D	lib/gl3w/GL/glcorearb.h	220;"	d
GL_TEXTURE_BINDING_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	628;"	d
GL_TEXTURE_BINDING_2D_ARRAY	lib/gl3w/GL/glcorearb.h	628;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1762;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	1762;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1763;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	1763;"	d
GL_TEXTURE_BINDING_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	333;"	d
GL_TEXTURE_BINDING_3D	lib/gl3w/GL/glcorearb.h	333;"	d
GL_TEXTURE_BINDING_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	831;"	d
GL_TEXTURE_BINDING_BUFFER	lib/gl3w/GL/glcorearb.h	831;"	d
GL_TEXTURE_BINDING_CUBE_MAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	423;"	d
GL_TEXTURE_BINDING_CUBE_MAP	lib/gl3w/GL/glcorearb.h	423;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1001;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	1001;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1791;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	1791;"	d
GL_TEXTURE_BINDING_RECTANGLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	834;"	d
GL_TEXTURE_BINDING_RECTANGLE	lib/gl3w/GL/glcorearb.h	834;"	d
GL_TEXTURE_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	228;"	d
GL_TEXTURE_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	228;"	d
GL_TEXTURE_BLUE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1558;"	d
GL_TEXTURE_BLUE_TYPE	lib/gl3w/GL/glcorearb.h	1558;"	d
GL_TEXTURE_BORDER_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	225;"	d
GL_TEXTURE_BORDER_COLOR	lib/gl3w/GL/glcorearb.h	225;"	d
GL_TEXTURE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	829;"	d
GL_TEXTURE_BUFFER	lib/gl3w/GL/glcorearb.h	829;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	832;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	lib/gl3w/GL/glcorearb.h	832;"	d
GL_TEXTURE_BUFFER_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2592;"	d
GL_TEXTURE_BUFFER_OFFSET	lib/gl3w/GL/glcorearb.h	2592;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2594;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	lib/gl3w/GL/glcorearb.h	2594;"	d
GL_TEXTURE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2593;"	d
GL_TEXTURE_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	2593;"	d
GL_TEXTURE_COMPARE_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	458;"	d
GL_TEXTURE_COMPARE_FUNC	lib/gl3w/GL/glcorearb.h	458;"	d
GL_TEXTURE_COMPARE_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	457;"	d
GL_TEXTURE_COMPARE_MODE	lib/gl3w/GL/glcorearb.h	457;"	d
GL_TEXTURE_COMPRESSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	436;"	d
GL_TEXTURE_COMPRESSED	lib/gl3w/GL/glcorearb.h	436;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2466;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	lib/gl3w/GL/glcorearb.h	2466;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2467;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	2467;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2465;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	lib/gl3w/GL/glcorearb.h	2465;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	435;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	lib/gl3w/GL/glcorearb.h	435;"	d
GL_TEXTURE_COMPRESSION_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	434;"	d
GL_TEXTURE_COMPRESSION_HINT	lib/gl3w/GL/glcorearb.h	434;"	d
GL_TEXTURE_CUBE_MAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	422;"	d
GL_TEXTURE_CUBE_MAP	lib/gl3w/GL/glcorearb.h	422;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1000;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	1000;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1790;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	1790;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	425;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	lib/gl3w/GL/glcorearb.h	425;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	427;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	lib/gl3w/GL/glcorearb.h	427;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	429;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	lib/gl3w/GL/glcorearb.h	429;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	424;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	lib/gl3w/GL/glcorearb.h	424;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	426;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	lib/gl3w/GL/glcorearb.h	426;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	428;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	lib/gl3w/GL/glcorearb.h	428;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1732;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	lib/gl3w/GL/glcorearb.h	1732;"	d
GL_TEXTURE_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	340;"	d
GL_TEXTURE_DEPTH	lib/gl3w/GL/glcorearb.h	340;"	d
GL_TEXTURE_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	456;"	d
GL_TEXTURE_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	456;"	d
GL_TEXTURE_DEPTH_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1560;"	d
GL_TEXTURE_DEPTH_TYPE	lib/gl3w/GL/glcorearb.h	1560;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2153;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2153;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1765;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	lib/gl3w/GL/glcorearb.h	1765;"	d
GL_TEXTURE_GATHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2452;"	d
GL_TEXTURE_GATHER	lib/gl3w/GL/glcorearb.h	2452;"	d
GL_TEXTURE_GATHER_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2453;"	d
GL_TEXTURE_GATHER_SHADOW	lib/gl3w/GL/glcorearb.h	2453;"	d
GL_TEXTURE_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	227;"	d
GL_TEXTURE_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	227;"	d
GL_TEXTURE_GREEN_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1557;"	d
GL_TEXTURE_GREEN_TYPE	lib/gl3w/GL/glcorearb.h	1557;"	d
GL_TEXTURE_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	223;"	d
GL_TEXTURE_HEIGHT	lib/gl3w/GL/glcorearb.h	223;"	d
GL_TEXTURE_IMAGE_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2433;"	d
GL_TEXTURE_IMAGE_FORMAT	lib/gl3w/GL/glcorearb.h	2433;"	d
GL_TEXTURE_IMAGE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2434;"	d
GL_TEXTURE_IMAGE_TYPE	lib/gl3w/GL/glcorearb.h	2434;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2220;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	lib/gl3w/GL/glcorearb.h	2220;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2333;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	lib/gl3w/GL/glcorearb.h	2333;"	d
GL_TEXTURE_INTERNAL_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	224;"	d
GL_TEXTURE_INTERNAL_FORMAT	lib/gl3w/GL/glcorearb.h	224;"	d
GL_TEXTURE_LOD_BIAS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	453;"	d
GL_TEXTURE_LOD_BIAS	lib/gl3w/GL/glcorearb.h	453;"	d
GL_TEXTURE_MAG_FILTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	301;"	d
GL_TEXTURE_MAG_FILTER	lib/gl3w/GL/glcorearb.h	301;"	d
GL_TEXTURE_MAX_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	358;"	d
GL_TEXTURE_MAX_LEVEL	lib/gl3w/GL/glcorearb.h	358;"	d
GL_TEXTURE_MAX_LOD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	356;"	d
GL_TEXTURE_MAX_LOD	lib/gl3w/GL/glcorearb.h	356;"	d
GL_TEXTURE_MIN_FILTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	302;"	d
GL_TEXTURE_MIN_FILTER	lib/gl3w/GL/glcorearb.h	302;"	d
GL_TEXTURE_MIN_LOD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	355;"	d
GL_TEXTURE_MIN_LOD	lib/gl3w/GL/glcorearb.h	355;"	d
GL_TEXTURE_RECTANGLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	833;"	d
GL_TEXTURE_RECTANGLE	lib/gl3w/GL/glcorearb.h	833;"	d
GL_TEXTURE_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	226;"	d
GL_TEXTURE_RED_SIZE	lib/gl3w/GL/glcorearb.h	226;"	d
GL_TEXTURE_RED_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1556;"	d
GL_TEXTURE_RED_TYPE	lib/gl3w/GL/glcorearb.h	1556;"	d
GL_TEXTURE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1764;"	d
GL_TEXTURE_SAMPLES	lib/gl3w/GL/glcorearb.h	1764;"	d
GL_TEXTURE_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2451;"	d
GL_TEXTURE_SHADOW	lib/gl3w/GL/glcorearb.h	2451;"	d
GL_TEXTURE_SHARED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	633;"	d
GL_TEXTURE_SHARED_SIZE	lib/gl3w/GL/glcorearb.h	633;"	d
GL_TEXTURE_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1555;"	d
GL_TEXTURE_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	1555;"	d
GL_TEXTURE_SWIZZLE_A	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1851;"	d
GL_TEXTURE_SWIZZLE_A	lib/gl3w/GL/glcorearb.h	1851;"	d
GL_TEXTURE_SWIZZLE_B	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1850;"	d
GL_TEXTURE_SWIZZLE_B	lib/gl3w/GL/glcorearb.h	1850;"	d
GL_TEXTURE_SWIZZLE_G	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1849;"	d
GL_TEXTURE_SWIZZLE_G	lib/gl3w/GL/glcorearb.h	1849;"	d
GL_TEXTURE_SWIZZLE_R	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1848;"	d
GL_TEXTURE_SWIZZLE_R	lib/gl3w/GL/glcorearb.h	1848;"	d
GL_TEXTURE_SWIZZLE_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1852;"	d
GL_TEXTURE_SWIZZLE_RGBA	lib/gl3w/GL/glcorearb.h	1852;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2157;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2157;"	d
GL_TEXTURE_VIEW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2469;"	d
GL_TEXTURE_VIEW	lib/gl3w/GL/glcorearb.h	2469;"	d
GL_TEXTURE_VIEW_MIN_LAYER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2331;"	d
GL_TEXTURE_VIEW_MIN_LAYER	lib/gl3w/GL/glcorearb.h	2331;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2329;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	lib/gl3w/GL/glcorearb.h	2329;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2332;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	lib/gl3w/GL/glcorearb.h	2332;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2330;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	lib/gl3w/GL/glcorearb.h	2330;"	d
GL_TEXTURE_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	222;"	d
GL_TEXTURE_WIDTH	lib/gl3w/GL/glcorearb.h	222;"	d
GL_TEXTURE_WRAP_R	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	341;"	d
GL_TEXTURE_WRAP_R	lib/gl3w/GL/glcorearb.h	341;"	d
GL_TEXTURE_WRAP_S	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	303;"	d
GL_TEXTURE_WRAP_S	lib/gl3w/GL/glcorearb.h	303;"	d
GL_TEXTURE_WRAP_T	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	304;"	d
GL_TEXTURE_WRAP_T	lib/gl3w/GL/glcorearb.h	304;"	d
GL_TIMEOUT_EXPIRED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1746;"	d
GL_TIMEOUT_EXPIRED	lib/gl3w/GL/glcorearb.h	1746;"	d
GL_TIMEOUT_IGNORED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1750;"	d
GL_TIMEOUT_IGNORED	lib/gl3w/GL/glcorearb.h	1750;"	d
GL_TIMESTAMP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1857;"	d
GL_TIMESTAMP	lib/gl3w/GL/glcorearb.h	1857;"	d
GL_TIME_ELAPSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1856;"	d
GL_TIME_ELAPSED	lib/gl3w/GL/glcorearb.h	1856;"	d
GL_TOP_LEVEL_ARRAY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2552;"	d
GL_TOP_LEVEL_ARRAY_SIZE	lib/gl3w/GL/glcorearb.h	2552;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2553;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	2553;"	d
GL_TRANSFORM_FEEDBACK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1956;"	d
GL_TRANSFORM_FEEDBACK	lib/gl3w/GL/glcorearb.h	1956;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1959;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	lib/gl3w/GL/glcorearb.h	1959;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2160;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2160;"	d
GL_TRANSFORM_FEEDBACK_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1961;"	d
GL_TRANSFORM_FEEDBACK_BINDING	lib/gl3w/GL/glcorearb.h	1961;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	647;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	lib/gl3w/GL/glcorearb.h	647;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1960;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	lib/gl3w/GL/glcorearb.h	1960;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	648;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	648;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	635;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	lib/gl3w/GL/glcorearb.h	635;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1958;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	lib/gl3w/GL/glcorearb.h	1958;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	639;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	639;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	638;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	lib/gl3w/GL/glcorearb.h	638;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1957;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	lib/gl3w/GL/glcorearb.h	1957;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	641;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	lib/gl3w/GL/glcorearb.h	641;"	d
GL_TRANSFORM_FEEDBACK_VARYING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2528;"	d
GL_TRANSFORM_FEEDBACK_VARYING	lib/gl3w/GL/glcorearb.h	2528;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	637;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	lib/gl3w/GL/glcorearb.h	637;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	634;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	634;"	d
GL_TRIANGLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	107;"	d
GL_TRIANGLES	lib/gl3w/GL/glcorearb.h	107;"	d
GL_TRIANGLES_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	894;"	d
GL_TRIANGLES_ADJACENCY	lib/gl3w/GL/glcorearb.h	894;"	d
GL_TRIANGLE_FAN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	109;"	d
GL_TRIANGLE_FAN	lib/gl3w/GL/glcorearb.h	109;"	d
GL_TRIANGLE_STRIP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	108;"	d
GL_TRIANGLE_STRIP	lib/gl3w/GL/glcorearb.h	108;"	d
GL_TRIANGLE_STRIP_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	895;"	d
GL_TRIANGLE_STRIP_ADJACENCY	lib/gl3w/GL/glcorearb.h	895;"	d
GL_TRUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	101;"	d
GL_TRUE	lib/gl3w/GL/glcorearb.h	101;"	d
GL_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2534;"	d
GL_TYPE	lib/gl3w/GL/glcorearb.h	2534;"	d
GL_UNDEFINED_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2036;"	d
GL_UNDEFINED_VERTEX	lib/gl3w/GL/glcorearb.h	2036;"	d
GL_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2509;"	d
GL_UNIFORM	lib/gl3w/GL/glcorearb.h	2509;"	d
GL_UNIFORM_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1693;"	d
GL_UNIFORM_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	1693;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2145;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	lib/gl3w/GL/glcorearb.h	2145;"	d
GL_UNIFORM_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2152;"	d
GL_UNIFORM_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2152;"	d
GL_UNIFORM_BLOCK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2510;"	d
GL_UNIFORM_BLOCK	lib/gl3w/GL/glcorearb.h	2510;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1699;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	lib/gl3w/GL/glcorearb.h	1699;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1700;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	lib/gl3w/GL/glcorearb.h	1700;"	d
GL_UNIFORM_BLOCK_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1696;"	d
GL_UNIFORM_BLOCK_BINDING	lib/gl3w/GL/glcorearb.h	1696;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1697;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	lib/gl3w/GL/glcorearb.h	1697;"	d
GL_UNIFORM_BLOCK_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1691;"	d
GL_UNIFORM_BLOCK_INDEX	lib/gl3w/GL/glcorearb.h	1691;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1698;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	1698;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2318;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	2318;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1703;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	1703;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1702;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	1702;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1943;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	1943;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1944;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	1944;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1701;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	1701;"	d
GL_UNIFORM_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1672;"	d
GL_UNIFORM_BUFFER	lib/gl3w/GL/glcorearb.h	1672;"	d
GL_UNIFORM_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1673;"	d
GL_UNIFORM_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	1673;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1685;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	lib/gl3w/GL/glcorearb.h	1685;"	d
GL_UNIFORM_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1675;"	d
GL_UNIFORM_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	1675;"	d
GL_UNIFORM_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1674;"	d
GL_UNIFORM_BUFFER_START	lib/gl3w/GL/glcorearb.h	1674;"	d
GL_UNIFORM_IS_ROW_MAJOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1695;"	d
GL_UNIFORM_IS_ROW_MAJOR	lib/gl3w/GL/glcorearb.h	1695;"	d
GL_UNIFORM_MATRIX_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1694;"	d
GL_UNIFORM_MATRIX_STRIDE	lib/gl3w/GL/glcorearb.h	1694;"	d
GL_UNIFORM_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1690;"	d
GL_UNIFORM_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	1690;"	d
GL_UNIFORM_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1692;"	d
GL_UNIFORM_OFFSET	lib/gl3w/GL/glcorearb.h	1692;"	d
GL_UNIFORM_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1689;"	d
GL_UNIFORM_SIZE	lib/gl3w/GL/glcorearb.h	1689;"	d
GL_UNIFORM_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1688;"	d
GL_UNIFORM_TYPE	lib/gl3w/GL/glcorearb.h	1688;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2078;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	lib/gl3w/GL/glcorearb.h	2078;"	d
GL_UNPACK_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	202;"	d
GL_UNPACK_ALIGNMENT	lib/gl3w/GL/glcorearb.h	202;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2098;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	lib/gl3w/GL/glcorearb.h	2098;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2097;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	lib/gl3w/GL/glcorearb.h	2097;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2099;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	2099;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2096;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	lib/gl3w/GL/glcorearb.h	2096;"	d
GL_UNPACK_IMAGE_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	337;"	d
GL_UNPACK_IMAGE_HEIGHT	lib/gl3w/GL/glcorearb.h	337;"	d
GL_UNPACK_LSB_FIRST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	198;"	d
GL_UNPACK_LSB_FIRST	lib/gl3w/GL/glcorearb.h	198;"	d
GL_UNPACK_ROW_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	199;"	d
GL_UNPACK_ROW_LENGTH	lib/gl3w/GL/glcorearb.h	199;"	d
GL_UNPACK_SKIP_IMAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	336;"	d
GL_UNPACK_SKIP_IMAGES	lib/gl3w/GL/glcorearb.h	336;"	d
GL_UNPACK_SKIP_PIXELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	201;"	d
GL_UNPACK_SKIP_PIXELS	lib/gl3w/GL/glcorearb.h	201;"	d
GL_UNPACK_SKIP_ROWS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	200;"	d
GL_UNPACK_SKIP_ROWS	lib/gl3w/GL/glcorearb.h	200;"	d
GL_UNPACK_SWAP_BYTES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	197;"	d
GL_UNPACK_SWAP_BYTES	lib/gl3w/GL/glcorearb.h	197;"	d
GL_UNSIGNALED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1743;"	d
GL_UNSIGNALED	lib/gl3w/GL/glcorearb.h	1743;"	d
GL_UNSIGNED_BYTE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	236;"	d
GL_UNSIGNED_BYTE	lib/gl3w/GL/glcorearb.h	236;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	343;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	lib/gl3w/GL/glcorearb.h	343;"	d
GL_UNSIGNED_BYTE_3_3_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	328;"	d
GL_UNSIGNED_BYTE_3_3_2	lib/gl3w/GL/glcorearb.h	328;"	d
GL_UNSIGNED_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	240;"	d
GL_UNSIGNED_INT	lib/gl3w/GL/glcorearb.h	240;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	630;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	lib/gl3w/GL/glcorearb.h	630;"	d
GL_UNSIGNED_INT_10_10_10_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	332;"	d
GL_UNSIGNED_INT_10_10_10_2	lib/gl3w/GL/glcorearb.h	332;"	d
GL_UNSIGNED_INT_24_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1553;"	d
GL_UNSIGNED_INT_24_8	lib/gl3w/GL/glcorearb.h	1553;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	349;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	lib/gl3w/GL/glcorearb.h	349;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	632;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	lib/gl3w/GL/glcorearb.h	632;"	d
GL_UNSIGNED_INT_8_8_8_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	331;"	d
GL_UNSIGNED_INT_8_8_8_8	lib/gl3w/GL/glcorearb.h	331;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	348;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	lib/gl3w/GL/glcorearb.h	348;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2146;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	lib/gl3w/GL/glcorearb.h	2146;"	d
GL_UNSIGNED_INT_IMAGE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2192;"	d
GL_UNSIGNED_INT_IMAGE_1D	lib/gl3w/GL/glcorearb.h	2192;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2198;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	2198;"	d
GL_UNSIGNED_INT_IMAGE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2193;"	d
GL_UNSIGNED_INT_IMAGE_2D	lib/gl3w/GL/glcorearb.h	2193;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2199;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	2199;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2201;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	2201;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2202;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	2202;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2195;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	lib/gl3w/GL/glcorearb.h	2195;"	d
GL_UNSIGNED_INT_IMAGE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2194;"	d
GL_UNSIGNED_INT_IMAGE_3D	lib/gl3w/GL/glcorearb.h	2194;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2197;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	lib/gl3w/GL/glcorearb.h	2197;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2196;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	lib/gl3w/GL/glcorearb.h	2196;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2200;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	2200;"	d
GL_UNSIGNED_INT_SAMPLER_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	682;"	d
GL_UNSIGNED_INT_SAMPLER_1D	lib/gl3w/GL/glcorearb.h	682;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	686;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	lib/gl3w/GL/glcorearb.h	686;"	d
GL_UNSIGNED_INT_SAMPLER_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	683;"	d
GL_UNSIGNED_INT_SAMPLER_2D	lib/gl3w/GL/glcorearb.h	683;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	687;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	lib/gl3w/GL/glcorearb.h	687;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1768;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	1768;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1771;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	1771;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	827;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	lib/gl3w/GL/glcorearb.h	827;"	d
GL_UNSIGNED_INT_SAMPLER_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	684;"	d
GL_UNSIGNED_INT_SAMPLER_3D	lib/gl3w/GL/glcorearb.h	684;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	828;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	lib/gl3w/GL/glcorearb.h	828;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	685;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	lib/gl3w/GL/glcorearb.h	685;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1006;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	1006;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1796;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	1796;"	d
GL_UNSIGNED_INT_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	673;"	d
GL_UNSIGNED_INT_VEC2	lib/gl3w/GL/glcorearb.h	673;"	d
GL_UNSIGNED_INT_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	674;"	d
GL_UNSIGNED_INT_VEC3	lib/gl3w/GL/glcorearb.h	674;"	d
GL_UNSIGNED_INT_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	675;"	d
GL_UNSIGNED_INT_VEC4	lib/gl3w/GL/glcorearb.h	675;"	d
GL_UNSIGNED_NORMALIZED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1561;"	d
GL_UNSIGNED_NORMALIZED	lib/gl3w/GL/glcorearb.h	1561;"	d
GL_UNSIGNED_SHORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	238;"	d
GL_UNSIGNED_SHORT	lib/gl3w/GL/glcorearb.h	238;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	347;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	lib/gl3w/GL/glcorearb.h	347;"	d
GL_UNSIGNED_SHORT_4_4_4_4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	329;"	d
GL_UNSIGNED_SHORT_4_4_4_4	lib/gl3w/GL/glcorearb.h	329;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	346;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	lib/gl3w/GL/glcorearb.h	346;"	d
GL_UNSIGNED_SHORT_5_5_5_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	330;"	d
GL_UNSIGNED_SHORT_5_5_5_1	lib/gl3w/GL/glcorearb.h	330;"	d
GL_UNSIGNED_SHORT_5_6_5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	344;"	d
GL_UNSIGNED_SHORT_5_6_5	lib/gl3w/GL/glcorearb.h	344;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	345;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	lib/gl3w/GL/glcorearb.h	345;"	d
GL_UPPER_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	569;"	d
GL_UPPER_LEFT	lib/gl3w/GL/glcorearb.h	569;"	d
GL_VALIDATE_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	556;"	d
GL_VALIDATE_STATUS	lib/gl3w/GL/glcorearb.h	556;"	d
GL_VENDOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	288;"	d
GL_VENDOR	lib/gl3w/GL/glcorearb.h	288;"	d
GL_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	290;"	d
GL_VERSION	lib/gl3w/GL/glcorearb.h	290;"	d
GL_VERSION_1_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2711;"	d
GL_VERSION_1_0	lib/gl3w/GL/glcorearb.h	2711;"	d
GL_VERSION_1_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2813;"	d
GL_VERSION_1_1	lib/gl3w/GL/glcorearb.h	2813;"	d
GL_VERSION_1_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2847;"	d
GL_VERSION_1_2	lib/gl3w/GL/glcorearb.h	2847;"	d
GL_VERSION_1_3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2865;"	d
GL_VERSION_1_3	lib/gl3w/GL/glcorearb.h	2865;"	d
GL_VERSION_1_4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2889;"	d
GL_VERSION_1_4	lib/gl3w/GL/glcorearb.h	2889;"	d
GL_VERSION_1_5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2909;"	d
GL_VERSION_1_5	lib/gl3w/GL/glcorearb.h	2909;"	d
GL_VERSION_2_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2953;"	d
GL_VERSION_2_0	lib/gl3w/GL/glcorearb.h	2953;"	d
GL_VERSION_2_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3145;"	d
GL_VERSION_2_1	lib/gl3w/GL/glcorearb.h	3145;"	d
GL_VERSION_3_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3163;"	d
GL_VERSION_3_0	lib/gl3w/GL/glcorearb.h	3163;"	d
GL_VERSION_3_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3289;"	d
GL_VERSION_3_1	lib/gl3w/GL/glcorearb.h	3289;"	d
GL_VERSION_3_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3306;"	d
GL_VERSION_3_2	lib/gl3w/GL/glcorearb.h	3306;"	d
GL_VERSION_3_3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3323;"	d
GL_VERSION_3_3	lib/gl3w/GL/glcorearb.h	3323;"	d
GL_VERSION_4_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3341;"	d
GL_VERSION_4_0	lib/gl3w/GL/glcorearb.h	3341;"	d
GL_VERSION_4_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3369;"	d
GL_VERSION_4_1	lib/gl3w/GL/glcorearb.h	3369;"	d
GL_VERSION_4_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3380;"	d
GL_VERSION_4_2	lib/gl3w/GL/glcorearb.h	3380;"	d
GL_VERSION_4_3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	3396;"	d
GL_VERSION_4_3	lib/gl3w/GL/glcorearb.h	3396;"	d
GL_VERTEX_ARRAY_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1668;"	d
GL_VERTEX_ARRAY_BINDING	lib/gl3w/GL/glcorearb.h	1668;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2150;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	2150;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	472;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	472;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	968;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	lib/gl3w/GL/glcorearb.h	968;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	494;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	lib/gl3w/GL/glcorearb.h	494;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	616;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	lib/gl3w/GL/glcorearb.h	616;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1250;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	lib/gl3w/GL/glcorearb.h	1250;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	524;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	lib/gl3w/GL/glcorearb.h	524;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	500;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	lib/gl3w/GL/glcorearb.h	500;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	495;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	lib/gl3w/GL/glcorearb.h	495;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	496;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	496;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	497;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	lib/gl3w/GL/glcorearb.h	497;"	d
GL_VERTEX_ATTRIB_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2337;"	d
GL_VERTEX_ATTRIB_BINDING	lib/gl3w/GL/glcorearb.h	2337;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2338;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/gl3w/GL/glcorearb.h	2338;"	d
GL_VERTEX_BINDING_DIVISOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2339;"	d
GL_VERTEX_BINDING_DIVISOR	lib/gl3w/GL/glcorearb.h	2339;"	d
GL_VERTEX_BINDING_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2340;"	d
GL_VERTEX_BINDING_OFFSET	lib/gl3w/GL/glcorearb.h	2340;"	d
GL_VERTEX_BINDING_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2341;"	d
GL_VERTEX_BINDING_STRIDE	lib/gl3w/GL/glcorearb.h	2341;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	499;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	lib/gl3w/GL/glcorearb.h	499;"	d
GL_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	527;"	d
GL_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	527;"	d
GL_VERTEX_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1996;"	d
GL_VERTEX_SHADER_BIT	lib/gl3w/GL/glcorearb.h	1996;"	d
GL_VERTEX_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2516;"	d
GL_VERTEX_SUBROUTINE	lib/gl3w/GL/glcorearb.h	2516;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2522;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	2522;"	d
GL_VERTEX_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2445;"	d
GL_VERTEX_TEXTURE	lib/gl3w/GL/glcorearb.h	2445;"	d
GL_VIEWPORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	180;"	d
GL_VIEWPORT	lib/gl3w/GL/glcorearb.h	180;"	d
GL_VIEWPORT_BOUNDS_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2033;"	d
GL_VIEWPORT_BOUNDS_RANGE	lib/gl3w/GL/glcorearb.h	2033;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2035;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	lib/gl3w/GL/glcorearb.h	2035;"	d
GL_VIEWPORT_SUBPIXEL_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2032;"	d
GL_VIEWPORT_SUBPIXEL_BITS	lib/gl3w/GL/glcorearb.h	2032;"	d
GL_VIEW_CLASS_128_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2484;"	d
GL_VIEW_CLASS_128_BITS	lib/gl3w/GL/glcorearb.h	2484;"	d
GL_VIEW_CLASS_16_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2490;"	d
GL_VIEW_CLASS_16_BITS	lib/gl3w/GL/glcorearb.h	2490;"	d
GL_VIEW_CLASS_24_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2489;"	d
GL_VIEW_CLASS_24_BITS	lib/gl3w/GL/glcorearb.h	2489;"	d
GL_VIEW_CLASS_32_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2488;"	d
GL_VIEW_CLASS_32_BITS	lib/gl3w/GL/glcorearb.h	2488;"	d
GL_VIEW_CLASS_48_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2487;"	d
GL_VIEW_CLASS_48_BITS	lib/gl3w/GL/glcorearb.h	2487;"	d
GL_VIEW_CLASS_64_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2486;"	d
GL_VIEW_CLASS_64_BITS	lib/gl3w/GL/glcorearb.h	2486;"	d
GL_VIEW_CLASS_8_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2491;"	d
GL_VIEW_CLASS_8_BITS	lib/gl3w/GL/glcorearb.h	2491;"	d
GL_VIEW_CLASS_96_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2485;"	d
GL_VIEW_CLASS_96_BITS	lib/gl3w/GL/glcorearb.h	2485;"	d
GL_VIEW_CLASS_BPTC_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2499;"	d
GL_VIEW_CLASS_BPTC_FLOAT	lib/gl3w/GL/glcorearb.h	2499;"	d
GL_VIEW_CLASS_BPTC_UNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2498;"	d
GL_VIEW_CLASS_BPTC_UNORM	lib/gl3w/GL/glcorearb.h	2498;"	d
GL_VIEW_CLASS_RGTC1_RED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2496;"	d
GL_VIEW_CLASS_RGTC1_RED	lib/gl3w/GL/glcorearb.h	2496;"	d
GL_VIEW_CLASS_RGTC2_RG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2497;"	d
GL_VIEW_CLASS_RGTC2_RG	lib/gl3w/GL/glcorearb.h	2497;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2492;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	lib/gl3w/GL/glcorearb.h	2492;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2493;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	lib/gl3w/GL/glcorearb.h	2493;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2494;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	lib/gl3w/GL/glcorearb.h	2494;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2495;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	lib/gl3w/GL/glcorearb.h	2495;"	d
GL_VIEW_COMPATIBILITY_CLASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2470;"	d
GL_VIEW_COMPATIBILITY_CLASS	lib/gl3w/GL/glcorearb.h	2470;"	d
GL_WAIT_FAILED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	1748;"	d
GL_WAIT_FAILED	lib/gl3w/GL/glcorearb.h	1748;"	d
GL_WRITE_ONLY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	474;"	d
GL_WRITE_ONLY	lib/gl3w/GL/glcorearb.h	474;"	d
GL_XOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	253;"	d
GL_XOR	lib/gl3w/GL/glcorearb.h	253;"	d
GL_ZERO	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	121;"	d
GL_ZERO	lib/gl3w/GL/glcorearb.h	121;"	d
GLbitfield	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t
GLbitfield	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t
GLboolean	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t
GLboolean	lib/gl3w/GL/glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t
GLbyte	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef signed char GLbyte;$/;"	t
GLbyte	lib/gl3w/GL/glcorearb.h	/^typedef signed char GLbyte;$/;"	t
GLchar	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef char GLchar;$/;"	t
GLchar	lib/gl3w/GL/glcorearb.h	/^typedef char GLchar;$/;"	t
GLcharARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef char GLcharARB;$/;"	t
GLcharARB	lib/gl3w/GL/glcorearb.h	/^typedef char GLcharARB;$/;"	t
GLclampd	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef double GLclampd;$/;"	t
GLclampd	lib/gl3w/GL/glcorearb.h	/^typedef double GLclampd;$/;"	t
GLclampf	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef float GLclampf;$/;"	t
GLclampf	lib/gl3w/GL/glcorearb.h	/^typedef float GLclampf;$/;"	t
GLdouble	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef double GLdouble;$/;"	t
GLdouble	lib/gl3w/GL/glcorearb.h	/^typedef double GLdouble;$/;"	t
GLenum	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLenum;$/;"	t
GLenum	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLenum;$/;"	t
GLfloat	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef float GLfloat;$/;"	t
GLfloat	lib/gl3w/GL/glcorearb.h	/^typedef float GLfloat;$/;"	t
GLhalf	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalf;$/;"	t
GLhalf	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalf;$/;"	t
GLhalfARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfARB	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfARB;$/;"	t
GLhalfNV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhalfNV	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfNV;$/;"	t
GLhandleARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLhandleARB	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLhandleARB;$/;"	t
GLint	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int GLint;$/;"	t
GLint	lib/gl3w/GL/glcorearb.h	/^typedef int GLint;$/;"	t
GLint64	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64;$/;"	t
GLint64	lib/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64;$/;"	t
GLint64EXT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64EXT;$/;"	t
GLint64EXT	lib/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64EXT;$/;"	t
GLintptr	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptr	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptr;$/;"	t
GLintptrARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLintptrARB	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t
GLshort	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef short GLshort;$/;"	t
GLshort	lib/gl3w/GL/glcorearb.h	/^typedef short GLshort;$/;"	t
GLsizei	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int GLsizei;$/;"	t
GLsizei	lib/gl3w/GL/glcorearb.h	/^typedef int GLsizei;$/;"	t
GLsizeiptr	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptr	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t
GLsizeiptrARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsizeiptrARB	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t
GLsync	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLsync	lib/gl3w/GL/glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync
GLubyte	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned char GLubyte;$/;"	t
GLubyte	lib/gl3w/GL/glcorearb.h	/^typedef unsigned char GLubyte;$/;"	t
GLuint	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLuint;$/;"	t
GLuint	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLuint;$/;"	t
GLuint64	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64	lib/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64;$/;"	t
GLuint64EXT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLuint64EXT	lib/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64EXT;$/;"	t
GLushort	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLushort;$/;"	t
GLushort	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLushort;$/;"	t
GLvdpauSurfaceNV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t
GLvdpauSurfaceNV	lib/gl3w/GL/glcorearb.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t
GLvoid	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void GLvoid;$/;"	t
GLvoid	lib/gl3w/GL/glcorearb.h	/^typedef void GLvoid;$/;"	t
GStyleVarInfo	lib/cimgui/imgui/imgui.cpp	/^static const ImGuiStyleVarInfo GStyleVarInfo[] =$/;"	v	file:
GcAwakeTransientWindowBuffers	lib/cimgui/imgui/imgui.cpp	/^void ImGui::GcAwakeTransientWindowBuffers(ImGuiWindow* window)$/;"	f	class:ImGui
GcCompactTransientWindowBuffers	lib/cimgui/imgui/imgui.cpp	/^void ImGui::GcCompactTransientWindowBuffers(ImGuiWindow* window)$/;"	f	class:ImGui
GdiFont	lib/nuklear/demo/gdi/nuklear_gdi.h	/^struct GdiFont {$/;"	s
GdiFont	lib/nuklear/demo/gdi/nuklear_gdi.h	/^typedef struct GdiFont GdiFont;$/;"	t	typeref:struct:GdiFont
GdipFont	lib/nuklear/demo/gdip/nuklear_gdip.h	/^struct GdipFont$/;"	s
GdipFont	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GdipFont GdipFont;$/;"	t	typeref:struct:GdipFont
GdiplusStartupInput	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} GdiplusStartupInput;$/;"	t	typeref:struct:__anon187
GdiplusStartupOutput	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} GdiplusStartupOutput;$/;"	t	typeref:struct:__anon188
GdiplusVersion	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UINT32 GdiplusVersion;$/;"	m	struct:__anon187
GetActiveID	lib/cimgui/imgui/imgui_internal.h	/^    inline ImGuiID          GetActiveID()   { ImGuiContext& g = *GImGui; return g.ActiveId; }$/;"	f	namespace:ImGui
GetBL	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetBL() const                       { return ImVec2(Min.x, Max.y); }  \/\/ Bottom-left$/;"	f	struct:ImRect
GetBR	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetBR() const                       { return Max; }                   \/\/ Bottom-right$/;"	f	struct:ImRect
GetBackgroundDrawList	lib/cimgui/imgui/imgui.cpp	/^ImDrawList* ImGui::GetBackgroundDrawList()$/;"	f	class:ImGui
GetBit	lib/cimgui/imgui/imgui.h	/^    inline bool     GetBit(int n) const { int off = (n >> 5); ImU32 mask = 1u << (n & 31); return (UsedChars[off] & mask) != 0; }  \/\/ Get bit n in the array$/;"	f	struct:ImFontGlyphRangesBuilder
GetBit	lib/cimgui/imgui/imgui_internal.h	/^    bool            GetBit(int n) const     { int off = (n >> 5); int mask = 1 << (n & 31); return (Storage[off] & mask) != 0; }$/;"	f	struct:ImBoolVector
GetBool	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiStorage::GetBool(ImGuiID key, bool default_val) const$/;"	f	class:ImGuiStorage
GetBoolRef	lib/cimgui/imgui/imgui.cpp	/^bool* ImGuiStorage::GetBoolRef(ImGuiID key, bool default_val)$/;"	f	class:ImGuiStorage
GetByIndex	lib/cimgui/imgui/imgui_internal.h	/^    T*          GetByIndex(ImPoolIdx n)             { return &Buf[n]; }$/;"	f	struct:ImPool
GetByKey	lib/cimgui/imgui/imgui_internal.h	/^    T*          GetByKey(ImGuiID key)               { int idx = Map.GetInt(key, -1); return (idx != -1) ? &Buf[idx] : NULL; }$/;"	f	struct:ImPool
GetCenter	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetCenter() const                   { return ImVec2((Min.x + Max.x) * 0.5f, (Min.y + Max.y) * 0.5f); }$/;"	f	struct:ImRect
GetCharAdvance	lib/cimgui/imgui/imgui.h	/^    float                       GetCharAdvance(ImWchar c) const     { return ((int)c < IndexAdvanceX.Size) ? IndexAdvanceX[(int)c] : FallbackAdvanceX; }$/;"	f	struct:ImFont
GetCimguiStorage	lib/cimgui/generator/cimgui_template.cpp	/^CimguiStorage& GetCimguiStorage()$/;"	f
GetClipRectMax	lib/cimgui/imgui/imgui.h	/^    inline ImVec2   GetClipRectMax() const { const ImVec4& cr = _ClipRectStack.back(); return ImVec2(cr.z, cr.w); }$/;"	f	struct:ImDrawList
GetClipRectMin	lib/cimgui/imgui/imgui.h	/^    inline ImVec2   GetClipRectMin() const { const ImVec4& cr = _ClipRectStack.back(); return ImVec2(cr.x, cr.y); }$/;"	f	struct:ImDrawList
GetClipboardText	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::GetClipboardText()$/;"	f	class:ImGui
GetClipboardTextFn	lib/cimgui/cimgui.h	/^    const char* (*GetClipboardTextFn)(void* user_data);$/;"	m	struct:ImGuiIO
GetClipboardTextFn	lib/cimgui/generator/output/cimgui.h	/^    const char* (*GetClipboardTextFn)(void* user_data);$/;"	m	struct:ImGuiIO
GetClipboardTextFn	lib/cimgui/imgui/imgui.h	/^    const char* (*GetClipboardTextFn)(void* user_data);$/;"	m	struct:ImGuiIO
GetClipboardTextFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static const char* GetClipboardTextFn_DefaultImpl(void*)$/;"	f	file:
GetColorU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::GetColorU32(ImGuiCol idx, float alpha_mul)$/;"	f	class:ImGui
GetColorU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::GetColorU32(ImU32 col)$/;"	f	class:ImGui
GetColorU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::GetColorU32(const ImVec4& col)$/;"	f	class:ImGui
GetColumnIndex	lib/cimgui/imgui/imgui_widgets.cpp	/^int ImGui::GetColumnIndex()$/;"	f	class:ImGui
GetColumnNormFromOffset	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGui::GetColumnNormFromOffset(const ImGuiColumns* columns, float offset)$/;"	f	class:ImGui
GetColumnOffset	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGui::GetColumnOffset(int column_index)$/;"	f	class:ImGui
GetColumnOffsetFromNorm	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGui::GetColumnOffsetFromNorm(const ImGuiColumns* columns, float offset_norm)$/;"	f	class:ImGui
GetColumnWidth	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGui::GetColumnWidth(int column_index)$/;"	f	class:ImGui
GetColumnWidthEx	lib/cimgui/imgui/imgui_widgets.cpp	/^static float GetColumnWidthEx(ImGuiColumns* columns, int column_index, bool before_resize = false)$/;"	f	file:
GetColumnsCount	lib/cimgui/imgui/imgui_widgets.cpp	/^int ImGui::GetColumnsCount()$/;"	f	class:ImGui
GetColumnsID	lib/cimgui/imgui/imgui_widgets.cpp	/^ImGuiID ImGui::GetColumnsID(const char* str_id, int columns_count)$/;"	f	class:ImGui
GetContentRegionAvail	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetContentRegionAvail()$/;"	f	class:ImGui
GetContentRegionAvailWidth	lib/cimgui/imgui/imgui.h	/^    static inline float GetContentRegionAvailWidth()          { return GetContentRegionAvail().x; }$/;"	f	namespace:ImGui
GetContentRegionMax	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetContentRegionMax()$/;"	f	class:ImGui
GetContentRegionMaxAbs	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetContentRegionMaxAbs()$/;"	f	class:ImGui
GetCurrentClipRect	lib/cimgui/imgui/imgui_draw.cpp	420;"	d	file:
GetCurrentClipRect	lib/cimgui/imgui/imgui_draw.cpp	489;"	d	file:
GetCurrentContext	lib/cimgui/imgui/imgui.cpp	/^ImGuiContext* ImGui::GetCurrentContext()$/;"	f	class:ImGui
GetCurrentTextureId	lib/cimgui/imgui/imgui_draw.cpp	421;"	d	file:
GetCurrentTextureId	lib/cimgui/imgui/imgui_draw.cpp	490;"	d	file:
GetCurrentWindow	lib/cimgui/imgui/imgui_internal.h	/^    inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWindow->WriteAccessed = true; return g.CurrentWindow; }$/;"	f	namespace:ImGui
GetCurrentWindowRead	lib/cimgui/imgui/imgui_internal.h	/^    inline    ImGuiWindow*  GetCurrentWindowRead()      { ImGuiContext& g = *GImGui; return g.CurrentWindow; }$/;"	f	namespace:ImGui
GetCursorPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetCursorPos()$/;"	f	class:ImGui
GetCursorPosX	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetCursorPosX()$/;"	f	class:ImGui
GetCursorPosY	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetCursorPosY()$/;"	f	class:ImGui
GetCursorScreenPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetCursorScreenPos()$/;"	f	class:ImGui
GetCursorStartPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetCursorStartPos()$/;"	f	class:ImGui
GetCustomRectByIndex	lib/cimgui/imgui/imgui.h	/^    const ImFontAtlasCustomRect*GetCustomRectByIndex(int index) const { if (index < 0) return NULL; return &CustomRects[index]; }$/;"	f	struct:ImFontAtlas
GetDebugName	lib/cimgui/imgui/imgui.h	/^    const char*                 GetDebugName() const                { return ConfigData ? ConfigData->Name : "<unknown>"; }$/;"	f	struct:ImFont
GetDefaultCompressedFontDataTTFBase85	lib/cimgui/imgui/imgui_draw.cpp	/^static const char* GetDefaultCompressedFontDataTTFBase85()$/;"	f	file:
GetDefaultFont	lib/cimgui/imgui/imgui_internal.h	/^    inline ImFont*          GetDefaultFont() { ImGuiContext& g = *GImGui; return g.IO.FontDefault ? g.IO.FontDefault : g.IO.Fonts->Fonts[0]; }$/;"	f	namespace:ImGui
GetDragDropPayload	lib/cimgui/imgui/imgui.cpp	/^const ImGuiPayload* ImGui::GetDragDropPayload()$/;"	f	class:ImGui
GetDraggedColumnOffset	lib/cimgui/imgui/imgui_widgets.cpp	/^static float GetDraggedColumnOffset(ImGuiColumns* columns, int column_index)$/;"	f	file:
GetDrawData	lib/cimgui/imgui/imgui.cpp	/^ImDrawData* ImGui::GetDrawData()$/;"	f	class:ImGui
GetDrawListSharedData	lib/cimgui/imgui/imgui.cpp	/^ImDrawListSharedData* ImGui::GetDrawListSharedData()$/;"	f	class:ImGui
GetFallbackWindowNameForWindowingList	lib/cimgui/imgui/imgui.cpp	/^static const char* GetFallbackWindowNameForWindowingList(ImGuiWindow* window)$/;"	f	file:
GetFloat	lib/cimgui/imgui/imgui.cpp	/^float ImGuiStorage::GetFloat(ImGuiID key, float default_val) const$/;"	f	class:ImGuiStorage
GetFloatRef	lib/cimgui/imgui/imgui.cpp	/^float* ImGuiStorage::GetFloatRef(ImGuiID key, float default_val)$/;"	f	class:ImGuiStorage
GetFocusID	lib/cimgui/imgui/imgui_internal.h	/^    inline ImGuiID          GetFocusID()    { ImGuiContext& g = *GImGui; return g.NavId; }$/;"	f	namespace:ImGui
GetFocusScopeID	lib/cimgui/imgui/imgui_internal.h	/^    inline ImGuiID          GetFocusScopeID()               { ImGuiContext& g = *GImGui; return g.NavFocusScopeId; }$/;"	f	namespace:ImGui
GetFont	lib/cimgui/imgui/imgui.cpp	/^ImFont* ImGui::GetFont()$/;"	f	class:ImGui
GetFontSize	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetFontSize()$/;"	f	class:ImGui
GetFontTexUvWhitePixel	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetFontTexUvWhitePixel()$/;"	f	class:ImGui
GetForegroundDrawList	lib/cimgui/imgui/imgui.cpp	/^ImDrawList* ImGui::GetForegroundDrawList()$/;"	f	class:ImGui
GetForegroundDrawList	lib/cimgui/imgui/imgui_internal.h	/^    inline ImDrawList*      GetForegroundDrawList(ImGuiWindow* window) { IM_UNUSED(window); ImGuiContext& g = *GImGui; return &g.ForegroundDrawList; } \/\/ This seemingly unnecessary wrapper simplifies compatibility between the 'master' and 'docking' branches.$/;"	f	namespace:ImGui
GetFrameCount	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetFrameCount()$/;"	f	class:ImGui
GetFrameHeight	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetFrameHeight()$/;"	f	class:ImGui
GetFrameHeightWithSpacing	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetFrameHeightWithSpacing()$/;"	f	class:ImGui
GetGlyphRangesChineseFull	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesChineseFull()$/;"	f	class:ImFontAtlas
GetGlyphRangesChineseSimplifiedCommon	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesChineseSimplifiedCommon()$/;"	f	class:ImFontAtlas
GetGlyphRangesCyrillic	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()$/;"	f	class:ImFontAtlas
GetGlyphRangesDefault	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()$/;"	f	class:ImFontAtlas
GetGlyphRangesJapanese	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()$/;"	f	class:ImFontAtlas
GetGlyphRangesKorean	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()$/;"	f	class:ImFontAtlas
GetGlyphRangesThai	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesThai()$/;"	f	class:ImFontAtlas
GetGlyphRangesVietnamese	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesVietnamese()$/;"	f	class:ImFontAtlas
GetHeight	lib/cimgui/imgui/imgui_internal.h	/^    float       GetHeight() const                   { return Max.y - Min.y; }$/;"	f	struct:ImRect
GetHoveredID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetHoveredID()$/;"	f	class:ImGui
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetID(const char* str_id)$/;"	f	class:ImGui
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetID(const char* str_id_begin, const char* str_id_end)$/;"	f	class:ImGui
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetID(const void* ptr_id)$/;"	f	class:ImGui
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetID(const char* str, const char* str_end)$/;"	f	class:ImGuiWindow
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetID(const void* ptr)$/;"	f	class:ImGuiWindow
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetID(int n)$/;"	f	class:ImGuiWindow
GetIDFromRectangle	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetIDFromRectangle(const ImRect& r_abs)$/;"	f	class:ImGuiWindow
GetIDNoKeepAlive	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetIDNoKeepAlive(const char* str, const char* str_end)$/;"	f	class:ImGuiWindow
GetIDNoKeepAlive	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetIDNoKeepAlive(const void* ptr)$/;"	f	class:ImGuiWindow
GetIDNoKeepAlive	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetIDNoKeepAlive(int n)$/;"	f	class:ImGuiWindow
GetIO	lib/cimgui/imgui/imgui.cpp	/^ImGuiIO& ImGui::GetIO()$/;"	f	class:ImGui
GetIndex	lib/cimgui/imgui/imgui_internal.h	/^    ImPoolIdx   GetIndex(const T* p) const          { IM_ASSERT(p >= Buf.Data && p < Buf.Data + Buf.Size); return (ImPoolIdx)(p - Buf.Data); }$/;"	f	struct:ImPool
GetInt	lib/cimgui/imgui/imgui.cpp	/^int ImGuiStorage::GetInt(ImGuiID key, int default_val) const$/;"	f	class:ImGuiStorage
GetIntRef	lib/cimgui/imgui/imgui.cpp	/^int* ImGuiStorage::GetIntRef(ImGuiID key, int default_val)$/;"	f	class:ImGuiStorage
GetItemID	lib/cimgui/imgui/imgui_internal.h	/^    inline ImGuiID          GetItemID()     { ImGuiContext& g = *GImGui; return g.CurrentWindow->DC.LastItemId; }$/;"	f	namespace:ImGui
GetItemRectMax	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetItemRectMax()$/;"	f	class:ImGui
GetItemRectMin	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetItemRectMin()$/;"	f	class:ImGui
GetItemRectSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetItemRectSize()$/;"	f	class:ImGui
GetItemStatusFlags	lib/cimgui/imgui/imgui_internal.h	/^    inline ImGuiItemStatusFlags GetItemStatusFlags() { ImGuiContext& g = *GImGui; return g.CurrentWindow->DC.LastItemStatusFlags; }$/;"	f	namespace:ImGui
GetKeyIndex	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetKeyIndex(ImGuiKey imgui_key)$/;"	f	class:ImGui
GetKeyPressedAmount	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetKeyPressedAmount(int key_index, float repeat_delay, float repeat_rate)$/;"	f	class:ImGui
GetMinimumStepAtDecimalPrecision	lib/cimgui/imgui/imgui_widgets.cpp	/^static float GetMinimumStepAtDecimalPrecision(int decimal_precision)$/;"	f	file:
GetMouseCursor	lib/cimgui/imgui/imgui.cpp	/^ImGuiMouseCursor ImGui::GetMouseCursor()$/;"	f	class:ImGui
GetMouseCursorTexData	lib/cimgui/imgui/imgui_draw.cpp	/^bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor cursor_type, ImVec2* out_offset, ImVec2* out_size, ImVec2 out_uv_border[2], ImVec2 out_uv_fill[2])$/;"	f	class:ImFontAtlas
GetMouseDragDelta	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetMouseDragDelta(ImGuiMouseButton button, float lock_threshold)$/;"	f	class:ImGui
GetMousePos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetMousePos()$/;"	f	class:ImGui
GetMousePosOnOpeningCurrentPopup	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetMousePosOnOpeningCurrentPopup()$/;"	f	class:ImGui
GetName	lib/cimgui/imgui/imgui_internal.h	/^    char* GetName()             { return (char*)(this + 1); }$/;"	f	struct:ImGuiWindowSettings
GetNavInputAmount	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetNavInputAmount(ImGuiNavInput n, ImGuiInputReadMode mode)$/;"	f	class:ImGui
GetNavInputAmount2d	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetNavInputAmount2d(ImGuiNavDirSourceFlags dir_sources, ImGuiInputReadMode mode, float slow_factor, float fast_factor)$/;"	f	class:ImGui
GetOrAddByKey	lib/cimgui/imgui/imgui_internal.h	/^    T*          GetOrAddByKey(ImGuiID key)          { int* p_idx = Map.GetIntRef(key, -1); if (*p_idx != -1) return &Buf[*p_idx]; *p_idx = FreeIdx; return Add(); }$/;"	f	struct:ImPool
GetOverlayDrawList	lib/cimgui/imgui/imgui.h	/^    static inline ImDrawList* GetOverlayDrawList()            { return GetForegroundDrawList(); }$/;"	f	namespace:ImGui
GetRedoAvailCount	lib/cimgui/imgui/imgui_internal.h	/^    int         GetRedoAvailCount() const   { return STB_TEXTEDIT_UNDOSTATECOUNT - Stb.undostate.redo_point; }$/;"	f	struct:ImGuiInputTextState
GetResizeBorderRect	lib/cimgui/imgui/imgui.cpp	/^static ImRect GetResizeBorderRect(ImGuiWindow* window, int border_n, float perp_padding, float thickness)$/;"	f	file:
GetScrollMaxX	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollMaxX()$/;"	f	class:ImGui
GetScrollMaxY	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollMaxY()$/;"	f	class:ImGui
GetScrollX	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollX()$/;"	f	class:ImGui
GetScrollY	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollY()$/;"	f	class:ImGui
GetSize	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetSize() const                     { return ImVec2(Max.x - Min.x, Max.y - Min.y); }$/;"	f	struct:ImRect
GetSize	lib/cimgui/imgui/imgui_internal.h	/^    int         GetSize() const                     { return Buf.Size; }$/;"	f	struct:ImPool
GetStateStorage	lib/cimgui/imgui/imgui.cpp	/^ImGuiStorage* ImGui::GetStateStorage()$/;"	f	class:ImGui
GetStyle	lib/cimgui/imgui/imgui.cpp	/^ImGuiStyle& ImGui::GetStyle()$/;"	f	class:ImGui
GetStyleColorName	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::GetStyleColorName(ImGuiCol idx)$/;"	f	class:ImGui
GetStyleColorVec4	lib/cimgui/imgui/imgui.cpp	/^const ImVec4& ImGui::GetStyleColorVec4(ImGuiCol idx)$/;"	f	class:ImGui
GetStyleVarInfo	lib/cimgui/imgui/imgui.cpp	/^static const ImGuiStyleVarInfo* GetStyleVarInfo(ImGuiStyleVar idx)$/;"	f	file:
GetTL	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetTL() const                       { return Min; }                   \/\/ Top-left$/;"	f	struct:ImRect
GetTR	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetTR() const                       { return ImVec2(Max.x, Min.y); }  \/\/ Top-right$/;"	f	struct:ImRect
GetTabBarFromTabBarRef	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImGuiTabBar* GetTabBarFromTabBarRef(const ImGuiPtrOrIndex& ref)$/;"	f	file:
GetTabBarRefFromTabBar	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImGuiPtrOrIndex GetTabBarRefFromTabBar(ImGuiTabBar* tab_bar)$/;"	f	file:
GetTabName	lib/cimgui/imgui/imgui_internal.h	/^    const char*         GetTabName(const ImGuiTabItem* tab) const$/;"	f	struct:ImGuiTabBar
GetTabOrder	lib/cimgui/imgui/imgui_internal.h	/^    int                 GetTabOrder(const ImGuiTabItem* tab) const  { return Tabs.index_from_ptr(tab); }$/;"	f	struct:ImGuiTabBar
GetTexDataAsAlpha8	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)$/;"	f	class:ImFontAtlas
GetTexDataAsRGBA32	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_height, int* out_bytes_per_pixel)$/;"	f	class:ImFontAtlas
GetTextLineHeight	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetTextLineHeight()$/;"	f	class:ImGui
GetTextLineHeightWithSpacing	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetTextLineHeightWithSpacing()$/;"	f	class:ImGui
GetTime	lib/cimgui/imgui/imgui.cpp	/^double ImGui::GetTime()$/;"	f	class:ImGui
GetTopMostPopupModal	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow* ImGui::GetTopMostPopupModal()$/;"	f	class:ImGui
GetTreeNodeToLabelSpacing	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGui::GetTreeNodeToLabelSpacing()$/;"	f	class:ImGui
GetUndoAvailCount	lib/cimgui/imgui/imgui_internal.h	/^    int         GetUndoAvailCount() const   { return Stb.undostate.undo_point; }$/;"	f	struct:ImGuiInputTextState
GetVarPtr	lib/cimgui/imgui/imgui.cpp	/^    void*           GetVarPtr(ImGuiStyle* style) const { return (void*)((unsigned char*)style + Offset); }$/;"	f	struct:ImGuiStyleVarInfo
GetVersion	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::GetVersion()$/;"	f	class:ImGui
GetViewportRect	lib/cimgui/imgui/imgui.cpp	/^static ImRect GetViewportRect()$/;"	f	file:
GetVoidPtr	lib/cimgui/imgui/imgui.cpp	/^void* ImGuiStorage::GetVoidPtr(ImGuiID key) const$/;"	f	class:ImGuiStorage
GetVoidPtrRef	lib/cimgui/imgui/imgui.cpp	/^void** ImGuiStorage::GetVoidPtrRef(ImGuiID key, void* default_val)$/;"	f	class:ImGuiStorage
GetWidth	lib/cimgui/imgui/imgui_internal.h	/^    float       GetWidth() const                    { return Max.x - Min.x; }$/;"	f	struct:ImRect
GetWindowAllowedExtentRect	lib/cimgui/imgui/imgui.cpp	/^ImRect ImGui::GetWindowAllowedExtentRect(ImGuiWindow* window)$/;"	f	class:ImGui
GetWindowBgColorIdxFromFlags	lib/cimgui/imgui/imgui.cpp	/^static ImGuiCol GetWindowBgColorIdxFromFlags(ImGuiWindowFlags flags)$/;"	f	file:
GetWindowContentRegionMax	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowContentRegionMax()$/;"	f	class:ImGui
GetWindowContentRegionMin	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowContentRegionMin()$/;"	f	class:ImGui
GetWindowContentRegionWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetWindowContentRegionWidth()$/;"	f	class:ImGui
GetWindowDrawList	lib/cimgui/imgui/imgui.cpp	/^ImDrawList* ImGui::GetWindowDrawList()$/;"	f	class:ImGui
GetWindowHeight	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetWindowHeight()$/;"	f	class:ImGui
GetWindowPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowPos()$/;"	f	class:ImGui
GetWindowResizeID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetWindowResizeID(ImGuiWindow* window, int n)$/;"	f	class:ImGui
GetWindowScrollbarID	lib/cimgui/imgui/imgui_widgets.cpp	/^ImGuiID ImGui::GetWindowScrollbarID(ImGuiWindow* window, ImGuiAxis axis)$/;"	f	class:ImGui
GetWindowSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowSize()$/;"	f	class:ImGui
GetWindowWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetWindowWidth()$/;"	f	class:ImGui
GlfwClientApi	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^enum GlfwClientApi$/;"	g	file:
GlfwClientApi_OpenGL	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^    GlfwClientApi_OpenGL,$/;"	e	enum:GlfwClientApi	file:
GlfwClientApi_Unknown	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^    GlfwClientApi_Unknown,$/;"	e	enum:GlfwClientApi	file:
GlfwClientApi_Vulkan	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^    GlfwClientApi_Vulkan$/;"	e	enum:GlfwClientApi	file:
GlyphAdvanceX	lib/cimgui/cimgui.h	/^    float GlyphAdvanceX;$/;"	m	struct:ImFontAtlasCustomRect
GlyphAdvanceX	lib/cimgui/generator/output/cimgui.h	/^    float GlyphAdvanceX;$/;"	m	struct:ImFontAtlasCustomRect
GlyphAdvanceX	lib/cimgui/imgui/imgui.h	/^    float           GlyphAdvanceX;  \/\/ Input    \/\/ For custom font glyphs only (ID < 0x110000): glyph xadvance$/;"	m	struct:ImFontAtlasCustomRect
GlyphExtraSpacing	lib/cimgui/cimgui.h	/^    ImVec2 GlyphExtraSpacing;$/;"	m	struct:ImFontConfig
GlyphExtraSpacing	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 GlyphExtraSpacing;$/;"	m	struct:ImFontConfig
GlyphExtraSpacing	lib/cimgui/imgui/imgui.h	/^    ImVec2          GlyphExtraSpacing;      \/\/ 0, 0     \/\/ Extra spacing (in pixels) between glyphs. Only X axis is supported for now.$/;"	m	struct:ImFontConfig
GlyphInfo	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    struct GlyphInfo$/;"	s	namespace:__anon112	file:
GlyphMaxAdvanceX	lib/cimgui/cimgui.h	/^    float GlyphMaxAdvanceX;$/;"	m	struct:ImFontConfig
GlyphMaxAdvanceX	lib/cimgui/generator/output/cimgui.h	/^    float GlyphMaxAdvanceX;$/;"	m	struct:ImFontConfig
GlyphMaxAdvanceX	lib/cimgui/imgui/imgui.h	/^    float           GlyphMaxAdvanceX;       \/\/ FLT_MAX  \/\/ Maximum AdvanceX for glyphs$/;"	m	struct:ImFontConfig
GlyphMinAdvanceX	lib/cimgui/cimgui.h	/^    float GlyphMinAdvanceX;$/;"	m	struct:ImFontConfig
GlyphMinAdvanceX	lib/cimgui/generator/output/cimgui.h	/^    float GlyphMinAdvanceX;$/;"	m	struct:ImFontConfig
GlyphMinAdvanceX	lib/cimgui/imgui/imgui.h	/^    float           GlyphMinAdvanceX;       \/\/ 0        \/\/ Minimum AdvanceX for glyphs, set Min to align font icons, set both Min\/Max to enforce mono-space font$/;"	m	struct:ImFontConfig
GlyphOffset	lib/cimgui/cimgui.h	/^    ImVec2 GlyphOffset;$/;"	m	struct:ImFontAtlasCustomRect
GlyphOffset	lib/cimgui/cimgui.h	/^    ImVec2 GlyphOffset;$/;"	m	struct:ImFontConfig
GlyphOffset	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 GlyphOffset;$/;"	m	struct:ImFontAtlasCustomRect
GlyphOffset	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 GlyphOffset;$/;"	m	struct:ImFontConfig
GlyphOffset	lib/cimgui/imgui/imgui.h	/^    ImVec2          GlyphOffset;            \/\/ 0, 0     \/\/ Offset all glyphs from this font input.$/;"	m	struct:ImFontConfig
GlyphOffset	lib/cimgui/imgui/imgui.h	/^    ImVec2          GlyphOffset;    \/\/ Input    \/\/ For custom font glyphs only (ID < 0x110000): glyph display offset$/;"	m	struct:ImFontAtlasCustomRect
GlyphRanges	lib/cimgui/cimgui.h	/^    const ImWchar* GlyphRanges;$/;"	m	struct:ImFontConfig
GlyphRanges	lib/cimgui/generator/output/cimgui.h	/^    const ImWchar* GlyphRanges;$/;"	m	struct:ImFontConfig
GlyphRanges	lib/cimgui/imgui/imgui.h	/^    const ImWchar*  GlyphRanges;            \/\/ NULL     \/\/ Pointer to a user-provided list of Unicode range (2 value per range, values are inclusive, zero-terminated list). THE ARRAY DATA NEEDS TO PERSIST AS LONG AS THE FONT IS ALIVE.$/;"	m	struct:ImFontConfig
GlyphRangesBuilder	lib/cimgui/imgui/imgui.h	/^    typedef ImFontGlyphRangesBuilder GlyphRangesBuilder; \/\/ OBSOLETED in 1.67+$/;"	t	struct:ImFontAtlas
Glyphs	lib/cimgui/cimgui.h	/^    ImVector_ImFontGlyph Glyphs;$/;"	m	struct:ImFont
Glyphs	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImFontGlyph Glyphs;$/;"	m	struct:ImFont
Glyphs	lib/cimgui/imgui/imgui.h	/^    ImVector<ImFontGlyph>       Glyphs;             \/\/ 12-16 \/\/ out \/\/            \/\/ All glyphs.$/;"	m	struct:ImFont
GlyphsCount	lib/cimgui/imgui/imgui_draw.cpp	/^    int                 GlyphsCount;        \/\/ Glyph count (excluding missing glyphs and glyphs already set by an earlier source font)$/;"	m	struct:ImFontBuildSrcData	file:
GlyphsCount	lib/cimgui/imgui/imgui_draw.cpp	/^    int                 GlyphsCount;$/;"	m	struct:ImFontBuildDstData	file:
GlyphsCount	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    int                 GlyphsCount;        \/\/ Glyph count (excluding missing glyphs and glyphs already set by an earlier source font)$/;"	m	struct:ImFontBuildSrcDataFT	file:
GlyphsCount	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    int                 GlyphsCount;$/;"	m	struct:ImFontBuildDstDataFT	file:
GlyphsHighest	lib/cimgui/imgui/imgui_draw.cpp	/^    int                 GlyphsHighest;      \/\/ Highest requested codepoint$/;"	m	struct:ImFontBuildSrcData	file:
GlyphsHighest	lib/cimgui/imgui/imgui_draw.cpp	/^    int                 GlyphsHighest;$/;"	m	struct:ImFontBuildDstData	file:
GlyphsHighest	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    int                 GlyphsHighest;      \/\/ Highest requested codepoint$/;"	m	struct:ImFontBuildSrcDataFT	file:
GlyphsHighest	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    int                 GlyphsHighest;$/;"	m	struct:ImFontBuildDstDataFT	file:
GlyphsList	lib/cimgui/imgui/imgui_draw.cpp	/^    ImVector<int>       GlyphsList;         \/\/ Glyph codepoints list (flattened version of GlyphsMap)$/;"	m	struct:ImFontBuildSrcData	file:
GlyphsList	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    ImVector<ImFontBuildSrcGlyphFT>   GlyphsList;$/;"	m	struct:ImFontBuildSrcDataFT	file:
GlyphsSet	lib/cimgui/imgui/imgui_draw.cpp	/^    ImBoolVector        GlyphsSet;          \/\/ Glyph bit map (random access, 1-bit per codepoint. This will be a maximum of 8KB)$/;"	m	struct:ImFontBuildSrcData	file:
GlyphsSet	lib/cimgui/imgui/imgui_draw.cpp	/^    ImBoolVector        GlyphsSet;          \/\/ This is used to resolve collision when multiple sources are merged into a same destination font.$/;"	m	struct:ImFontBuildDstData	file:
GlyphsSet	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    ImBoolVector        GlyphsSet;          \/\/ Glyph bit map (random access, 1-bit per codepoint. This will be a maximum of 8KB)$/;"	m	struct:ImFontBuildSrcDataFT	file:
GlyphsSet	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    ImBoolVector        GlyphsSet;          \/\/ This is used to resolve collision when multiple sources are merged into a same destination font.$/;"	m	struct:ImFontBuildDstDataFT	file:
GpBitmap	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef GpImage GpBitmap;$/;"	t
GpBrush	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpBrush GpBrush;$/;"	t	typeref:struct:GpBrush
GpFont	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpFont GpFont;$/;"	t	typeref:struct:GpFont
GpFontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpFontCollection GpFontCollection;$/;"	t	typeref:struct:GpFontCollection
GpFontFamily	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpFontFamily GpFontFamily;$/;"	t	typeref:struct:GpFontFamily
GpGraphics	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpGraphics GpGraphics;$/;"	t	typeref:struct:GpGraphics
GpImage	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpImage GpImage;$/;"	t	typeref:struct:GpImage
GpPen	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpPen GpPen;$/;"	t	typeref:struct:GpPen
GpPoint	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef POINT GpPoint;$/;"	t
GpSolidFill	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef GpBrush GpSolidFill;$/;"	t
GpStatus	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef Status GpStatus;$/;"	t
GpStringFormat	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpStringFormat GpStringFormat;$/;"	t	typeref:struct:GpStringFormat
GrabMinSize	lib/cimgui/cimgui.h	/^    float GrabMinSize;$/;"	m	struct:ImGuiStyle
GrabMinSize	lib/cimgui/generator/output/cimgui.h	/^    float GrabMinSize;$/;"	m	struct:ImGuiStyle
GrabMinSize	lib/cimgui/imgui/imgui.h	/^    float       GrabMinSize;                \/\/ Minimum width\/height of a grab box for slider\/scrollbar.$/;"	m	struct:ImGuiStyle
GrabRounding	lib/cimgui/cimgui.h	/^    float GrabRounding;$/;"	m	struct:ImGuiStyle
GrabRounding	lib/cimgui/generator/output/cimgui.h	/^    float GrabRounding;$/;"	m	struct:ImGuiStyle
GrabRounding	lib/cimgui/imgui/imgui.h	/^    float       GrabRounding;               \/\/ Radius of grabs corners rounding. Set to 0.0f to have rectangular slider grabs.$/;"	m	struct:ImGuiStyle
GroupOffset	lib/cimgui/imgui/imgui_internal.h	/^    ImVec1                  GroupOffset;$/;"	m	struct:ImGuiWindowTempData
GroupStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiGroupData>GroupStack;$/;"	m	struct:ImGuiWindowTempData
GrowIndex	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::GrowIndex(int new_size)$/;"	f	class:ImFont
H0	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
H1	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
HASH_LENGTH	lib/klib/kurl.c	305;"	d	file:
HAVE_MEMMEM	lib/klib/test/kstring_bench2.c	12;"	d	file:
HAVE_STRNSTR	lib/klib/test/kstring_bench2.c	8;"	d	file:
HEX	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	507;"	d	file:
HEX	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	492;"	d	file:
HMAC_IPAD	lib/klib/kurl.c	385;"	d	file:
HMAC_OPAD	lib/klib/kurl.c	386;"	d	file:
HMM_BACKWARD	lib/klib/khmm.h	21;"	d
HMM_FORWARD	lib/klib/khmm.h	20;"	d
HMM_INF	lib/klib/khmm.h	29;"	d
HMM_POSTDEC	lib/klib/khmm.h	23;"	d
HMM_TINY	lib/klib/khmm.h	28;"	d
HMM_VERSION	lib/klib/khmm.h	18;"	d
HMM_VITERBI	lib/klib/khmm.h	22;"	d
HSV	lib/cimgui/imgui/imgui.h	/^    static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorConvertHSVtoRGB(h, s, v, r, g, b); return ImColor(r,g,b,a); }$/;"	f	struct:ImColor
HasCloseButton	lib/cimgui/imgui/imgui_internal.h	/^    bool                    HasCloseButton;                     \/\/ Set when the window has a close button (p_open != NULL)$/;"	m	struct:ImGuiWindow
HasSelection	lib/cimgui/imgui/imgui.h	/^    bool                HasSelection() const { return SelectionStart != SelectionEnd; }$/;"	f	struct:ImGuiInputTextCallbackData
HasSelection	lib/cimgui/imgui/imgui_internal.h	/^    bool        HasSelection() const        { return Stb.select_start != Stb.select_end; }$/;"	f	struct:ImGuiInputTextState
Height	lib/cimgui/cimgui.h	/^    unsigned short Width, Height;$/;"	m	struct:ImFontAtlasCustomRect
Height	lib/cimgui/generator/output/cimgui.h	/^    unsigned short Width, Height;$/;"	m	struct:ImFontAtlasCustomRect
Height	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    int                 Height;$/;"	m	struct:ImGui_ImplVulkanH_Window
Height	lib/cimgui/imgui/imgui.h	/^    unsigned short  Width, Height;  \/\/ Input    \/\/ Desired rectangle dimension$/;"	m	struct:ImFontAtlasCustomRect
Height	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        int         Height;             \/\/ Glyph's height in pixels.$/;"	m	struct:__anon112::GlyphInfo	file:
Height	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT Height;$/;"	m	struct:__anon185
HelpMarker	lib/cimgui/imgui/imgui_demo.cpp	/^static void HelpMarker(const char* desc)$/;"	f	file:
Hidden	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Hidden;                             \/\/ Do not display (== (HiddenFrames*** > 0))$/;"	m	struct:ImGuiWindow
HiddenFramesCanSkipItems	lib/cimgui/imgui/imgui_internal.h	/^    int                     HiddenFramesCanSkipItems;           \/\/ Hide the window for N frames$/;"	m	struct:ImGuiWindow
HiddenFramesCannotSkipItems	lib/cimgui/imgui/imgui_internal.h	/^    int                     HiddenFramesCannotSkipItems;        \/\/ Hide the window for N frames while allowing items to be submitted so we can measure their size$/;"	m	struct:ImGuiWindow
History	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<char*>       History;$/;"	m	struct:ExampleAppConsole	file:
HistoryPos	lib/cimgui/imgui/imgui_demo.cpp	/^    int                   HistoryPos;    \/\/ -1: new line, 0..History.Size-1 browsing history.$/;"	m	struct:ExampleAppConsole	file:
Hmax	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
HostClipRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect              HostClipRect;           \/\/ Backup of ClipRect at the time of BeginColumns()$/;"	m	struct:ImGuiColumns
HostCursorMaxPosX	lib/cimgui/imgui/imgui_internal.h	/^    float               HostCursorMaxPosX;      \/\/ Backup of CursorMaxPos at the time of BeginColumns()$/;"	m	struct:ImGuiColumns
HostCursorPosY	lib/cimgui/imgui/imgui_internal.h	/^    float               HostCursorPosY;         \/\/ Backup of CursorPos at the time of BeginColumns()$/;"	m	struct:ImGuiColumns
HostWorkRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect              HostWorkRect;           \/\/ Backup of WorkRect at the time of BeginColumns()$/;"	m	struct:ImGuiColumns
HoveredId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 HoveredId;                          \/\/ Hovered widget$/;"	m	struct:ImGuiContext
HoveredIdAllowOverlap	lib/cimgui/imgui/imgui_internal.h	/^    bool                    HoveredIdAllowOverlap;$/;"	m	struct:ImGuiContext
HoveredIdNotActiveTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   HoveredIdNotActiveTimer;            \/\/ Measure contiguous hovering time where the item has not been active$/;"	m	struct:ImGuiContext
HoveredIdPreviousFrame	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 HoveredIdPreviousFrame;$/;"	m	struct:ImGuiContext
HoveredIdTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   HoveredIdTimer;                     \/\/ Measure contiguous hovering time$/;"	m	struct:ImGuiContext
HoveredRootWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            HoveredRootWindow;                  \/\/ Will catch mouse inputs (for focus\/move only)$/;"	m	struct:ImGuiContext
HoveredWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            HoveredWindow;                      \/\/ Will catch mouse inputs$/;"	m	struct:ImGuiContext
ID	lib/cimgui/cimgui.h	/^    unsigned int ID;$/;"	m	struct:ImFontAtlasCustomRect
ID	lib/cimgui/generator/output/cimgui.h	/^    unsigned int ID;$/;"	m	struct:ImFontAtlasCustomRect
ID	lib/cimgui/imgui/imgui.h	/^    unsigned int    ID;             \/\/ Input    \/\/ User ID. Use < 0x110000 to map into a font glyph, >= 0x110000 for other\/internal\/custom texture data.$/;"	m	struct:ImFontAtlasCustomRect
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ID;                                 \/\/ == ImHashStr(Name)$/;"	m	struct:ImGuiWindow
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ID;                     \/\/ widget id owning the text state$/;"	m	struct:ImGuiInputTextState
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             ID;                     \/\/ Zero for tab-bars used by docking$/;"	m	struct:ImGuiTabBar
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             ID;$/;"	m	struct:ImGuiColumns
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             ID;$/;"	m	struct:ImGuiTabItem
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID         ID;                 \/\/ Best candidate ID$/;"	m	struct:ImGuiNavMoveResult
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID     ID;$/;"	m	struct:ImGuiWindowSettings
ID	lib/nuklear/demo/node_editor.c	/^    int ID;$/;"	m	struct:node	file:
ID3D11Device	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^typedef struct ID3D11Device ID3D11Device;$/;"	t	typeref:struct:ID3D11Device
ID3D11DeviceContext	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^typedef struct ID3D11DeviceContext ID3D11DeviceContext;$/;"	t	typeref:struct:ID3D11DeviceContext
IDStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiID>       IDStack;                            \/\/ ID stack. ID are hashes seeded with the value at the top of the stack. (In theory this should be in the TempData structure)$/;"	m	struct:ImGuiWindow
ID_VOID_MAIN	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IDirect3DDevice9	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^typedef struct IDirect3DDevice9 IDirect3DDevice9;$/;"	t	typeref:struct:IDirect3DDevice9
IMGUI_API	lib/cimgui/imgui/imgui.h	70;"	d
IMGUI_CDECL	lib/cimgui/imgui/imgui_internal.h	190;"	d
IMGUI_CDECL	lib/cimgui/imgui/imgui_internal.h	192;"	d
IMGUI_CHECKVERSION	lib/cimgui/imgui/imgui.h	64;"	d
IMGUI_DEBUG_INI_SETTINGS	lib/cimgui/imgui/imgui.cpp	812;"	d	file:
IMGUI_DEBUG_LOG	lib/cimgui/imgui/imgui_internal.h	150;"	d
IMGUI_DEBUG_NAV_RECTS	lib/cimgui/imgui/imgui.cpp	811;"	d	file:
IMGUI_DEBUG_NAV_SCORING	lib/cimgui/imgui/imgui.cpp	810;"	d	file:
IMGUI_DEFINE_MATH_OPERATORS	lib/cimgui/imgui/imgui.cpp	797;"	d	file:
IMGUI_DEFINE_MATH_OPERATORS	lib/cimgui/imgui/imgui_draw.cpp	33;"	d	file:
IMGUI_DEFINE_MATH_OPERATORS	lib/cimgui/imgui/imgui_widgets.cpp	39;"	d	file:
IMGUI_DISABLE_DEFAULT_FILE_FUNCTIONS	lib/cimgui/imgui/imgui_internal.h	275;"	d
IMGUI_DISABLE_TTY_FUNCTIONS	lib/cimgui/imgui/imgui_internal.h	292;"	d
IMGUI_DISABLE_WIN32_DEFAULT_CLIPBOARD_FUNCTIONS	lib/cimgui/imgui/imgui.cpp	9690;"	d	file:
IMGUI_DISABLE_WIN32_DEFAULT_IME_FUNCTIONS	lib/cimgui/imgui/imgui.cpp	9691;"	d	file:
IMGUI_IMPL_API	lib/cimgui/imgui/imgui.h	73;"	d
IMGUI_IMPL_OPENGL_ES2	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	92;"	d	file:
IMGUI_IMPL_OPENGL_ES3	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	85;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_CUSTOM	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	90;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_CUSTOM	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	97;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GL3W	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	86;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GL3W	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	93;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GL3W	lib/cimgui/imgui/examples/imgui_impl_opengl3.h	57;"	d
IMGUI_IMPL_OPENGL_LOADER_GL3W	lib/cimgui/imgui/examples/imgui_impl_opengl3.h	64;"	d
IMGUI_IMPL_OPENGL_LOADER_GLAD	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	88;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GLAD	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	95;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GLAD	lib/cimgui/imgui/examples/imgui_impl_opengl3.h	55;"	d
IMGUI_IMPL_OPENGL_LOADER_GLBINDING	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	89;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GLBINDING	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	96;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GLBINDING	lib/cimgui/imgui/examples/imgui_impl_opengl3.h	59;"	d
IMGUI_IMPL_OPENGL_LOADER_GLEW	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	87;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GLEW	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	94;"	d	file:
IMGUI_IMPL_OPENGL_LOADER_GLEW	lib/cimgui/imgui/examples/imgui_impl_opengl3.h	53;"	d
IMGUI_IMPL_OPENGL_MAY_HAVE_VTX_OFFSET	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	132;"	d	file:
IMGUI_IMPL_WIN32_DISABLE_LINKING_XINPUT	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	22;"	d	file:
IMGUI_PAYLOAD_TYPE_COLOR_3F	lib/cimgui/imgui/imgui.h	932;"	d
IMGUI_PAYLOAD_TYPE_COLOR_4F	lib/cimgui/imgui/imgui.h	933;"	d
IMGUI_STB_NAMESPACE	lib/cimgui/imgui/imgui_draw.cpp	/^namespace IMGUI_STB_NAMESPACE$/;"	n	file:
IMGUI_TEST_ENGINE_ITEM_ADD	lib/cimgui/imgui/imgui_internal.h	1898;"	d
IMGUI_TEST_ENGINE_ITEM_ADD	lib/cimgui/imgui/imgui_internal.h	1902;"	d
IMGUI_TEST_ENGINE_ITEM_INFO	lib/cimgui/imgui/imgui_internal.h	1899;"	d
IMGUI_TEST_ENGINE_ITEM_INFO	lib/cimgui/imgui/imgui_internal.h	1903;"	d
IMGUI_TEST_ENGINE_LOG	lib/cimgui/imgui/imgui_internal.h	1900;"	d
IMGUI_TEST_ENGINE_LOG	lib/cimgui/imgui/imgui_internal.h	1904;"	d
IMGUI_VERSION	lib/cimgui/imgui/imgui.h	62;"	d
IMGUI_VERSION_NUM	lib/cimgui/imgui/imgui.h	63;"	d
IMGUI_VULKAN_DEBUG_REPORT	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	30;"	d	file:
IMGUI_VULKAN_DEBUG_REPORT	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	22;"	d	file:
IM_ALLOC	lib/cimgui/imgui/imgui.h	1247;"	d
IM_ARRAYSIZE	lib/cimgui/imgui/imgui.h	88;"	d
IM_ASSERT	lib/cimgui/imgui/imgui.h	79;"	d
IM_ASSERT_PARANOID	lib/cimgui/imgui/imgui_internal.h	164;"	d
IM_ASSERT_PARANOID	lib/cimgui/imgui/imgui_internal.h	166;"	d
IM_ASSERT_USER_ERROR	lib/cimgui/imgui/imgui_internal.h	172;"	d
IM_COL32	lib/cimgui/imgui/imgui.h	1773;"	d
IM_COL32_A_MASK	lib/cimgui/imgui/imgui.h	1765;"	d
IM_COL32_A_MASK	lib/cimgui/imgui/imgui.h	1771;"	d
IM_COL32_A_SHIFT	lib/cimgui/imgui/imgui.h	1764;"	d
IM_COL32_A_SHIFT	lib/cimgui/imgui/imgui.h	1770;"	d
IM_COL32_BLACK	lib/cimgui/imgui/imgui.h	1775;"	d
IM_COL32_BLACK_TRANS	lib/cimgui/imgui/imgui.h	1776;"	d
IM_COL32_B_SHIFT	lib/cimgui/imgui/imgui.h	1763;"	d
IM_COL32_B_SHIFT	lib/cimgui/imgui/imgui.h	1769;"	d
IM_COL32_G_SHIFT	lib/cimgui/imgui/imgui.h	1762;"	d
IM_COL32_G_SHIFT	lib/cimgui/imgui/imgui.h	1768;"	d
IM_COL32_R_SHIFT	lib/cimgui/imgui/imgui.h	1761;"	d
IM_COL32_R_SHIFT	lib/cimgui/imgui/imgui.h	1767;"	d
IM_COL32_WHITE	lib/cimgui/imgui/imgui.h	1774;"	d
IM_DEBUG_BREAK	lib/cimgui/imgui/imgui_internal.h	1882;"	d
IM_DEBUG_BREAK	lib/cimgui/imgui/imgui_internal.h	1884;"	d
IM_DEBUG_BREAK	lib/cimgui/imgui/imgui_internal.h	1886;"	d
IM_DELETE	lib/cimgui/imgui/imgui.h	/^template<typename T> void IM_DELETE(T* p)   { if (p) { p->~T(); ImGui::MemFree(p); } }$/;"	f
IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_CALC	lib/cimgui/imgui/imgui_internal.h	869;"	d
IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MAX	lib/cimgui/imgui/imgui_internal.h	868;"	d
IM_DRAWLIST_CIRCLE_AUTO_SEGMENT_MIN	lib/cimgui/imgui/imgui_internal.h	867;"	d
IM_F32_TO_INT8_SAT	lib/cimgui/imgui/imgui_internal.h	184;"	d
IM_F32_TO_INT8_UNBOUND	lib/cimgui/imgui/imgui_internal.h	183;"	d
IM_FIXNORMAL2F	lib/cimgui/imgui/imgui_draw.cpp	621;"	d	file:
IM_FLOOR	lib/cimgui/imgui/imgui_internal.h	185;"	d
IM_FMTARGS	lib/cimgui/imgui/imgui.h	82;"	d
IM_FMTARGS	lib/cimgui/imgui/imgui.h	85;"	d
IM_FMTLIST	lib/cimgui/imgui/imgui.h	83;"	d
IM_FMTLIST	lib/cimgui/imgui/imgui.h	86;"	d
IM_FREE	lib/cimgui/imgui/imgui.h	1248;"	d
IM_NEW	lib/cimgui/imgui/imgui.h	1250;"	d
IM_NEWLINE	lib/cimgui/imgui/imgui_demo.cpp	111;"	d	file:
IM_NEWLINE	lib/cimgui/imgui/imgui_demo.cpp	113;"	d	file:
IM_NEWLINE	lib/cimgui/imgui/imgui_internal.h	178;"	d
IM_NEWLINE	lib/cimgui/imgui/imgui_internal.h	180;"	d
IM_NORMALIZE2F_OVER_ZERO	lib/cimgui/imgui/imgui_draw.cpp	620;"	d	file:
IM_OFFSETOF	lib/cimgui/imgui/imgui.h	91;"	d
IM_OFFSETOF	lib/cimgui/imgui/imgui.h	93;"	d
IM_PI	lib/cimgui/imgui/imgui_internal.h	176;"	d
IM_PLACEMENT_NEW	lib/cimgui/imgui/imgui.h	1249;"	d
IM_ROUND	lib/cimgui/imgui/imgui_internal.h	186;"	d
IM_S16_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const signed short   IM_S16_MAX = 32767;$/;"	v	file:
IM_S16_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const signed short   IM_S16_MIN = -32768;$/;"	v	file:
IM_S32_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImS32          IM_S32_MAX = INT_MAX;    \/\/ (2147483647), (0x7FFFFFFF)$/;"	v	file:
IM_S32_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImS32          IM_S32_MIN = INT_MIN;    \/\/ (-2147483647 - 1), (0x80000000);$/;"	v	file:
IM_S64_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImS64          IM_S64_MAX = 9223372036854775807LL;$/;"	v	file:
IM_S64_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImS64          IM_S64_MAX = LLONG_MAX;  \/\/ (9223372036854775807ll);$/;"	v	file:
IM_S64_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImS64          IM_S64_MIN = -9223372036854775807LL - 1;$/;"	v	file:
IM_S64_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImS64          IM_S64_MIN = LLONG_MIN;  \/\/ (-9223372036854775807ll - 1ll);$/;"	v	file:
IM_S8_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const signed char    IM_S8_MAX  = 127;$/;"	v	file:
IM_S8_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const signed char    IM_S8_MIN  = -128;$/;"	v	file:
IM_STATIC_ASSERT	lib/cimgui/imgui/imgui_internal.h	155;"	d
IM_STATIC_ASSERT	lib/cimgui/imgui/imgui_internal.h	157;"	d
IM_TABSIZE	lib/cimgui/imgui/imgui_internal.h	182;"	d
IM_U16_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const unsigned short IM_U16_MAX = 0xFFFF;$/;"	v	file:
IM_U16_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const unsigned short IM_U16_MIN = 0;$/;"	v	file:
IM_U32_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImU32          IM_U32_MAX = UINT_MAX;   \/\/ (0xFFFFFFFF)$/;"	v	file:
IM_U32_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImU32          IM_U32_MIN = 0;$/;"	v	file:
IM_U64_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImU64          IM_U64_MAX = (2ULL * 9223372036854775807LL + 1);$/;"	v	file:
IM_U64_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImU64          IM_U64_MAX = ULLONG_MAX; \/\/ (0xFFFFFFFFFFFFFFFFull);$/;"	v	file:
IM_U64_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const ImU64          IM_U64_MIN = 0;$/;"	v	file:
IM_U8_MAX	lib/cimgui/imgui/imgui_widgets.cpp	/^static const unsigned char  IM_U8_MAX  = 0xFF;$/;"	v	file:
IM_U8_MIN	lib/cimgui/imgui/imgui_widgets.cpp	/^static const unsigned char  IM_U8_MIN  = 0;$/;"	v	file:
IM_UNICODE_CODEPOINT_INVALID	lib/cimgui/imgui/imgui.h	96;"	d
IM_UNICODE_CODEPOINT_MAX	lib/cimgui/imgui/imgui.h	95;"	d
IM_UNUSED	lib/cimgui/imgui/imgui.h	89;"	d
INCLUDES	lib/cimgui/imgui/examples/example_sdl_directx11/build_win32.bat	/^set INCLUDES=\/I.. \/I..\\.. \/I%SDL2_DIR%\\include \/I "%WindowsSdkDir%Include\\um" \/I "%WindowsSdkDir%Include\\shared" \/I "%DXSDK_DIR%Include"$/;"	v
INCLUDES	lib/cimgui/imgui/examples/example_sdl_opengl2/build_win32.bat	/^set INCLUDES=\/I.. \/I..\\.. \/I%SDL2_DIR%\\include$/;"	v
INCLUDES	lib/cimgui/imgui/examples/example_sdl_opengl3/build_win32.bat	/^set INCLUDES=\/I.. \/I..\\.. \/I%SDL2_DIR%\\include \/I..\\libs\\gl3w$/;"	v
INCLUDE_CALCULATOR	lib/nuklear/demo/d3d11/main.c	44;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/d3d9/main.c	41;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/gdi/main.c	36;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/gdip/main.c	36;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/glfw_opengl2/main.c	46;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/glfw_opengl3/main.c	50;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/glfw_opengl4/main.c	50;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sdl_opengl2/main.c	46;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sdl_opengl3/main.c	50;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sfml_opengl2/main.cpp	46;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sfml_opengl3/main.cpp	48;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11/main.c	87;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11_opengl2/main.c	49;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11_opengl3/main.c	47;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11_rawfb/main.c	121;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11_xft/main.c	87;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/d3d11/main.c	46;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/d3d9/main.c	43;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/gdi/main.c	38;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/gdip/main.c	38;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/glfw_opengl2/main.c	48;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/glfw_opengl3/main.c	52;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/glfw_opengl4/main.c	52;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sdl_opengl2/main.c	48;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sdl_opengl3/main.c	52;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sfml_opengl2/main.cpp	48;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sfml_opengl3/main.cpp	50;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11/main.c	89;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11_opengl2/main.c	51;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11_opengl3/main.c	49;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11_rawfb/main.c	123;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11_xft/main.c	89;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/d3d11/main.c	45;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/d3d9/main.c	42;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/gdi/main.c	37;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/gdip/main.c	37;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl2/main.c	41;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl2/main.c	47;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl3/main.c	45;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl3/main.c	51;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl4/main.c	45;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl4/main.c	51;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sdl_opengl2/main.c	47;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sdl_opengl3/main.c	51;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sfml_opengl2/main.cpp	47;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sfml_opengl3/main.cpp	49;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11/main.c	88;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11_opengl2/main.c	50;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11_opengl3/main.c	48;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11_rawfb/main.c	122;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11_xft/main.c	88;"	d	file:
INCLUDE_STB_TEXTEDIT_H	lib/cimgui/imgui/imstb_textedit.h	277;"	d
INCLUDE_STYLE	lib/nuklear/demo/d3d11/main.c	43;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/d3d9/main.c	40;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/gdi/main.c	35;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/gdip/main.c	35;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/glfw_opengl2/main.c	45;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/glfw_opengl3/main.c	49;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/glfw_opengl4/main.c	49;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sdl_opengl2/main.c	45;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sdl_opengl3/main.c	49;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sfml_opengl2/main.cpp	45;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sfml_opengl3/main.cpp	47;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11/main.c	86;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11_opengl2/main.c	48;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11_opengl3/main.c	46;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11_rawfb/main.c	120;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11_xft/main.c	86;"	d	file:
IO	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiIO                 IO;$/;"	m	struct:ImGuiContext
IdxBuffer	lib/cimgui/cimgui.h	/^    ImVector_ImDrawIdx IdxBuffer;$/;"	m	struct:ImDrawList
IdxBuffer	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImDrawIdx IdxBuffer;$/;"	m	struct:ImDrawList
IdxBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawIdx>     IdxBuffer;          \/\/ Index buffer. Each command consume ImDrawCmd::ElemCount of those$/;"	m	struct:ImDrawList
IdxOffset	lib/cimgui/cimgui.h	/^    unsigned int IdxOffset;$/;"	m	struct:ImDrawCmd
IdxOffset	lib/cimgui/generator/output/cimgui.h	/^    unsigned int IdxOffset;$/;"	m	struct:ImDrawCmd
IdxOffset	lib/cimgui/imgui/imgui.h	/^    unsigned int    IdxOffset;              \/\/ Start offset in index buffer. Always equal to sum of ElemCount drawn so far.$/;"	m	struct:ImDrawCmd
ImAcos	lib/cimgui/imgui/imgui_internal.h	304;"	d
ImAcos01	lib/cimgui/imgui/imgui_draw.cpp	/^static inline float ImAcos01(float x)$/;"	f	file:
ImAddClampOverflow	lib/cimgui/imgui/imgui_internal.h	/^template<typename T> static inline T ImAddClampOverflow(T a, T b, T mn, T mx)   { if (b < 0 && (a < mn - b)) return mn; if (b > 0 && (a > mx - b)) return mx; return a + b; }$/;"	f
ImAlphaBlendColor	lib/cimgui/imgui/imgui_widgets.cpp	/^static inline ImU32 ImAlphaBlendColor(ImU32 col_a, ImU32 col_b)$/;"	f	file:
ImAtan2	lib/cimgui/imgui/imgui_internal.h	305;"	d
ImAtof	lib/cimgui/imgui/imgui_internal.h	306;"	d
ImAtoi	lib/cimgui/imgui/imgui_widgets.cpp	/^static const char* ImAtoi(const char* src, TYPE* output)$/;"	f	file:
ImBezierCalc	lib/cimgui/imgui/imgui_draw.cpp	/^ImVec2 ImBezierCalc(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, float t)$/;"	f
ImBezierClosestPoint	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImBezierClosestPoint(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, const ImVec2& p, int num_segments)$/;"	f
ImBezierClosestPointCasteljau	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImBezierClosestPointCasteljau(const ImVec2& p1, const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, const ImVec2& p, float tess_tol)$/;"	f
ImBoolVector	lib/cimgui/imgui/imgui_internal.h	/^    ImBoolVector()  { }$/;"	f	struct:ImBoolVector
ImBoolVector	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImBoolVector$/;"	s
ImCeil	lib/cimgui/imgui/imgui_internal.h	308;"	d
ImCharIsBlankA	lib/cimgui/imgui/imgui_internal.h	/^static inline bool      ImCharIsBlankA(char c)          { return c == ' ' || c == '\\t'; }$/;"	f
ImCharIsBlankW	lib/cimgui/imgui/imgui_internal.h	/^static inline bool      ImCharIsBlankW(unsigned int c)  { return c == ' ' || c == '\\t' || c == 0x3000; }$/;"	f
ImChunkStream	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImChunkStream$/;"	s
ImClamp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImClamp(const ImVec2& v, const ImVec2& mn, ImVec2 mx)      { return ImVec2((v.x < mn.x) ? mn.x : (v.x > mx.x) ? mx.x : v.x, (v.y < mn.y) ? mn.y : (v.y > mx.y) ? mx.y : v.y); }$/;"	f
ImClamp	lib/cimgui/imgui/imgui_internal.h	/^template<typename T> static inline T ImClamp(T v, T mn, T mx)                   { return (v < mn) ? mn : (v > mx) ? mx : v; }$/;"	f
ImColor	lib/cimgui/cimgui.h	/^struct ImColor$/;"	s
ImColor	lib/cimgui/cimgui.h	/^typedef struct ImColor ImColor;$/;"	t	typeref:struct:ImColor
ImColor	lib/cimgui/generator/output/cimgui.h	/^struct ImColor$/;"	s
ImColor	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImColor ImColor;$/;"	t	typeref:struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor()                                                       { Value.x = Value.y = Value.z = Value.w = 0.0f; }$/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(ImU32 rgba)                                             { float sc = 1.0f\/255.0f; Value.x = (float)((rgba>>IM_COL32_R_SHIFT)&0xFF) * sc; Value.y = (float)((rgba>>IM_COL32_G_SHIFT)&0xFF) * sc; Value.z = (float)((rgba>>IM_COL32_B_SHIFT)&0xFF) * sc; Value.w = (float)((rgba>>IM_COL32_A_SHIFT)&0xFF) * sc; }$/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(const ImVec4& col)                                      { Value = col; }$/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; Value.z = b; Value.w = a; }$/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(int r, int g, int b, int a = 255)                       { float sc = 1.0f\/255.0f; Value.x = (float)r * sc; Value.y = (float)g * sc; Value.z = (float)b * sc; Value.w = (float)a * sc; }$/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^struct ImColor$/;"	s
ImColorToSimple	lib/cimgui/cimgui.h	/^inline ImColor_Simple ImColorToSimple(ImColor col)$/;"	f
ImColorToSimple	lib/cimgui/generator/cimgui_template.h	/^inline ImColor_Simple ImColorToSimple(ImColor col)$/;"	f
ImColorToSimple	lib/cimgui/generator/output/cimgui.h	/^inline ImColor_Simple ImColorToSimple(ImColor col)$/;"	f
ImColor_HSV	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImColor ImColor_HSV(ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_HSV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImColor ImColor_HSV(ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_HSV_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImColor_HSV_nonUDT(ImColor *pOut,ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_HSV_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImColor_HSV_nonUDT(ImColor *pOut,ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_HSV_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImColor_Simple ImColor_HSV_nonUDT2(ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_HSV_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImColor_Simple ImColor_HSV_nonUDT2(ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_ImColor	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColor(void)$/;"	f
ImColor_ImColor	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColor(void)$/;"	f
ImColor_ImColorFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorFloat(float r,float g,float b,float a)$/;"	f
ImColor_ImColorFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorFloat(float r,float g,float b,float a)$/;"	f
ImColor_ImColorInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorInt(int r,int g,int b,int a)$/;"	f
ImColor_ImColorInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorInt(int r,int g,int b,int a)$/;"	f
ImColor_ImColorU32	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorU32(ImU32 rgba)$/;"	f
ImColor_ImColorU32	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorU32(ImU32 rgba)$/;"	f
ImColor_ImColorVec4	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorVec4(const ImVec4 col)$/;"	f
ImColor_ImColorVec4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImColor* ImColor_ImColorVec4(const ImVec4 col)$/;"	f
ImColor_SetHSV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImColor_SetHSV(ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_SetHSV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImColor_SetHSV(ImColor* self,float h,float s,float v,float a)$/;"	f
ImColor_Simple	lib/cimgui/cimgui.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	s
ImColor_Simple	lib/cimgui/cimgui.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	t	typeref:struct:ImColor_Simple
ImColor_Simple	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	s
ImColor_Simple	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	t	typeref:struct:ImColor_Simple
ImColor_Simple	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	s
ImColor_Simple	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	t	typeref:struct:ImColor_Simple
ImColor_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImColor_destroy(ImColor* self)$/;"	f
ImColor_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImColor_destroy(ImColor* self)$/;"	f
ImCos	lib/cimgui/imgui/imgui_internal.h	302;"	d
ImDot	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImDot(const ImVec2& a, const ImVec2& b)                    { return a.x * b.x + a.y * b.y; }$/;"	f
ImDrawCallback	lib/cimgui/cimgui.h	/^typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);$/;"	t
ImDrawCallback	lib/cimgui/generator/output/cimgui.h	/^typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);$/;"	t
ImDrawCallback	lib/cimgui/imgui/imgui.h	/^typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);$/;"	t
ImDrawCallback_ResetRenderState	lib/cimgui/imgui/imgui.h	1819;"	d
ImDrawChannel	lib/cimgui/cimgui.h	/^struct ImDrawChannel$/;"	s
ImDrawChannel	lib/cimgui/cimgui.h	/^typedef struct ImDrawChannel ImDrawChannel;$/;"	t	typeref:struct:ImDrawChannel
ImDrawChannel	lib/cimgui/generator/output/cimgui.h	/^struct ImDrawChannel$/;"	s
ImDrawChannel	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImDrawChannel ImDrawChannel;$/;"	t	typeref:struct:ImDrawChannel
ImDrawChannel	lib/cimgui/imgui/imgui.h	/^struct ImDrawChannel$/;"	s
ImDrawCmd	lib/cimgui/cimgui.h	/^struct ImDrawCmd$/;"	s
ImDrawCmd	lib/cimgui/cimgui.h	/^typedef struct ImDrawCmd ImDrawCmd;$/;"	t	typeref:struct:ImDrawCmd
ImDrawCmd	lib/cimgui/generator/output/cimgui.h	/^struct ImDrawCmd$/;"	s
ImDrawCmd	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImDrawCmd ImDrawCmd;$/;"	t	typeref:struct:ImDrawCmd
ImDrawCmd	lib/cimgui/imgui/imgui.h	/^    ImDrawCmd() { ElemCount = 0; TextureId = (ImTextureID)NULL; VtxOffset = IdxOffset = 0;  UserCallback = NULL; UserCallbackData = NULL; }$/;"	f	struct:ImDrawCmd
ImDrawCmd	lib/cimgui/imgui/imgui.h	/^struct ImDrawCmd$/;"	s
ImDrawCmd_ImDrawCmd	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawCmd* ImDrawCmd_ImDrawCmd(void)$/;"	f
ImDrawCmd_ImDrawCmd	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawCmd* ImDrawCmd_ImDrawCmd(void)$/;"	f
ImDrawCmd_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawCmd_destroy(ImDrawCmd* self)$/;"	f
ImDrawCmd_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawCmd_destroy(ImDrawCmd* self)$/;"	f
ImDrawCornerFlags	lib/cimgui/cimgui.h	/^typedef int ImDrawCornerFlags;$/;"	t
ImDrawCornerFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImDrawCornerFlags;$/;"	t
ImDrawCornerFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImDrawCornerFlags;      \/\/ -> enum ImDrawCornerFlags_    \/\/ Flags: for ImDrawList::AddRect(), AddRectFilled() etc.$/;"	t
ImDrawCornerFlags_	lib/cimgui/cimgui.h	/^}ImDrawCornerFlags_;$/;"	t	typeref:enum:__anon93
ImDrawCornerFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImDrawCornerFlags_;$/;"	t	typeref:enum:__anon67
ImDrawCornerFlags_	lib/cimgui/imgui/imgui.h	/^enum ImDrawCornerFlags_$/;"	g
ImDrawCornerFlags_All	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_All = 0xF$/;"	e	enum:__anon93
ImDrawCornerFlags_All	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_All = 0xF$/;"	e	enum:__anon67
ImDrawCornerFlags_All	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_All       = 0xF     \/\/ In your function calls you may use ~0 (= all bits sets) instead of ImDrawCornerFlags_All, as a convenience$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Bot	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_Bot = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,$/;"	e	enum:__anon93
ImDrawCornerFlags_Bot	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_Bot = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,$/;"	e	enum:__anon67
ImDrawCornerFlags_Bot	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Bot       = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,   \/\/ 0xC$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_BotLeft	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_BotLeft = 1 << 2,$/;"	e	enum:__anon93
ImDrawCornerFlags_BotLeft	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_BotLeft = 1 << 2,$/;"	e	enum:__anon67
ImDrawCornerFlags_BotLeft	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_BotLeft   = 1 << 2, \/\/ 0x4$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_BotRight	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_BotRight = 1 << 3,$/;"	e	enum:__anon93
ImDrawCornerFlags_BotRight	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_BotRight = 1 << 3,$/;"	e	enum:__anon67
ImDrawCornerFlags_BotRight	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_BotRight  = 1 << 3, \/\/ 0x8$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Left	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_Left = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,$/;"	e	enum:__anon93
ImDrawCornerFlags_Left	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_Left = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,$/;"	e	enum:__anon67
ImDrawCornerFlags_Left	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Left      = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,    \/\/ 0x5$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_None	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_None = 0,$/;"	e	enum:__anon93
ImDrawCornerFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_None = 0,$/;"	e	enum:__anon67
ImDrawCornerFlags_None	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_None      = 0,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Right	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_Right = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRight,$/;"	e	enum:__anon93
ImDrawCornerFlags_Right	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_Right = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRight,$/;"	e	enum:__anon67
ImDrawCornerFlags_Right	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Right     = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRight,  \/\/ 0xA$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Top	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_Top = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,$/;"	e	enum:__anon93
ImDrawCornerFlags_Top	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_Top = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,$/;"	e	enum:__anon67
ImDrawCornerFlags_Top	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Top       = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,   \/\/ 0x3$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_TopLeft	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_TopLeft = 1 << 0,$/;"	e	enum:__anon93
ImDrawCornerFlags_TopLeft	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_TopLeft = 1 << 0,$/;"	e	enum:__anon67
ImDrawCornerFlags_TopLeft	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_TopLeft   = 1 << 0, \/\/ 0x1$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_TopRight	lib/cimgui/cimgui.h	/^    ImDrawCornerFlags_TopRight = 1 << 1,$/;"	e	enum:__anon93
ImDrawCornerFlags_TopRight	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCornerFlags_TopRight = 1 << 1,$/;"	e	enum:__anon67
ImDrawCornerFlags_TopRight	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_TopRight  = 1 << 1, \/\/ 0x2$/;"	e	enum:ImDrawCornerFlags_
ImDrawData	lib/cimgui/cimgui.h	/^struct ImDrawData$/;"	s
ImDrawData	lib/cimgui/cimgui.h	/^typedef struct ImDrawData ImDrawData;$/;"	t	typeref:struct:ImDrawData
ImDrawData	lib/cimgui/generator/output/cimgui.h	/^struct ImDrawData$/;"	s
ImDrawData	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImDrawData ImDrawData;$/;"	t	typeref:struct:ImDrawData
ImDrawData	lib/cimgui/imgui/imgui.h	/^    ImDrawData()    { Valid = false; Clear(); }$/;"	f	struct:ImDrawData
ImDrawData	lib/cimgui/imgui/imgui.h	/^struct ImDrawData$/;"	s
ImDrawDataBuilder	lib/cimgui/imgui/imgui_internal.h	/^struct ImDrawDataBuilder$/;"	s
ImDrawData_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawData_Clear(ImDrawData* self)$/;"	f
ImDrawData_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawData_Clear(ImDrawData* self)$/;"	f
ImDrawData_DeIndexAllBuffers	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawData_DeIndexAllBuffers(ImDrawData* self)$/;"	f
ImDrawData_DeIndexAllBuffers	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawData_DeIndexAllBuffers(ImDrawData* self)$/;"	f
ImDrawData_ImDrawData	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawData* ImDrawData_ImDrawData(void)$/;"	f
ImDrawData_ImDrawData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawData* ImDrawData_ImDrawData(void)$/;"	f
ImDrawData_ScaleClipRects	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawData_ScaleClipRects(ImDrawData* self,const ImVec2 fb_scale)$/;"	f
ImDrawData_ScaleClipRects	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawData_ScaleClipRects(ImDrawData* self,const ImVec2 fb_scale)$/;"	f
ImDrawData_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawData_destroy(ImDrawData* self)$/;"	f
ImDrawData_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawData_destroy(ImDrawData* self)$/;"	f
ImDrawIdx	lib/cimgui/cimgui.h	/^typedef unsigned short ImDrawIdx;$/;"	t
ImDrawIdx	lib/cimgui/generator/output/cimgui.h	/^typedef unsigned short ImDrawIdx;$/;"	t
ImDrawIdx	lib/cimgui/imgui/examples/example_allegro5/imconfig_allegro5.h	11;"	d
ImDrawIdx	lib/cimgui/imgui/imgui.h	/^typedef unsigned short ImDrawIdx;$/;"	t
ImDrawList	lib/cimgui/cimgui.h	/^struct ImDrawList$/;"	s
ImDrawList	lib/cimgui/cimgui.h	/^typedef struct ImDrawList ImDrawList;$/;"	t	typeref:struct:ImDrawList
ImDrawList	lib/cimgui/generator/output/cimgui.h	/^struct ImDrawList$/;"	s
ImDrawList	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImDrawList ImDrawList;$/;"	t	typeref:struct:ImDrawList
ImDrawList	lib/cimgui/imgui/imgui.h	/^    ImDrawList(const ImDrawListSharedData* shared_data) { _Data = shared_data; _OwnerName = NULL; Clear(); }$/;"	f	struct:ImDrawList
ImDrawList	lib/cimgui/imgui/imgui.h	/^struct ImDrawList$/;"	s
ImDrawListFlags	lib/cimgui/cimgui.h	/^typedef int ImDrawListFlags;$/;"	t
ImDrawListFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImDrawListFlags;$/;"	t
ImDrawListFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImDrawListFlags;        \/\/ -> enum ImDrawListFlags_      \/\/ Flags: for ImDrawList$/;"	t
ImDrawListFlags_	lib/cimgui/cimgui.h	/^}ImDrawListFlags_;$/;"	t	typeref:enum:__anon94
ImDrawListFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImDrawListFlags_;$/;"	t	typeref:enum:__anon68
ImDrawListFlags_	lib/cimgui/imgui/imgui.h	/^enum ImDrawListFlags_$/;"	g
ImDrawListFlags_AllowVtxOffset	lib/cimgui/cimgui.h	/^    ImDrawListFlags_AllowVtxOffset = 1 << 2$/;"	e	enum:__anon94
ImDrawListFlags_AllowVtxOffset	lib/cimgui/generator/output/cimgui.h	/^    ImDrawListFlags_AllowVtxOffset = 1 << 2$/;"	e	enum:__anon68
ImDrawListFlags_AllowVtxOffset	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags_AllowVtxOffset   = 1 << 2   \/\/ Can emit 'VtxOffset > 0' to allow large meshes. Set when 'ImGuiBackendFlags_RendererHasVtxOffset' is enabled.$/;"	e	enum:ImDrawListFlags_
ImDrawListFlags_AntiAliasedFill	lib/cimgui/cimgui.h	/^    ImDrawListFlags_AntiAliasedFill = 1 << 1,$/;"	e	enum:__anon94
ImDrawListFlags_AntiAliasedFill	lib/cimgui/generator/output/cimgui.h	/^    ImDrawListFlags_AntiAliasedFill = 1 << 1,$/;"	e	enum:__anon68
ImDrawListFlags_AntiAliasedFill	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags_AntiAliasedFill  = 1 << 1,  \/\/ Filled shapes have anti-aliased edges (*2 the number of vertices)$/;"	e	enum:ImDrawListFlags_
ImDrawListFlags_AntiAliasedLines	lib/cimgui/cimgui.h	/^    ImDrawListFlags_AntiAliasedLines = 1 << 0,$/;"	e	enum:__anon94
ImDrawListFlags_AntiAliasedLines	lib/cimgui/generator/output/cimgui.h	/^    ImDrawListFlags_AntiAliasedLines = 1 << 0,$/;"	e	enum:__anon68
ImDrawListFlags_AntiAliasedLines	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags_AntiAliasedLines = 1 << 0,  \/\/ Lines are anti-aliased (*2 the number of triangles for 1.0f wide line, otherwise *3 the number of triangles)$/;"	e	enum:ImDrawListFlags_
ImDrawListFlags_None	lib/cimgui/cimgui.h	/^    ImDrawListFlags_None = 0,$/;"	e	enum:__anon94
ImDrawListFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImDrawListFlags_None = 0,$/;"	e	enum:__anon68
ImDrawListFlags_None	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags_None             = 0,$/;"	e	enum:ImDrawListFlags_
ImDrawListSharedData	lib/cimgui/cimgui.h	/^typedef struct ImDrawListSharedData ImDrawListSharedData;$/;"	t	typeref:struct:ImDrawListSharedData
ImDrawListSharedData	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImDrawListSharedData ImDrawListSharedData;$/;"	t	typeref:struct:ImDrawListSharedData
ImDrawListSharedData	lib/cimgui/imgui/imgui_draw.cpp	/^ImDrawListSharedData::ImDrawListSharedData()$/;"	f	class:ImDrawListSharedData
ImDrawListSharedData	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImDrawListSharedData$/;"	s
ImDrawListSplitter	lib/cimgui/cimgui.h	/^struct ImDrawListSplitter$/;"	s
ImDrawListSplitter	lib/cimgui/cimgui.h	/^typedef struct ImDrawListSplitter ImDrawListSplitter;$/;"	t	typeref:struct:ImDrawListSplitter
ImDrawListSplitter	lib/cimgui/generator/output/cimgui.h	/^struct ImDrawListSplitter$/;"	s
ImDrawListSplitter	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImDrawListSplitter ImDrawListSplitter;$/;"	t	typeref:struct:ImDrawListSplitter
ImDrawListSplitter	lib/cimgui/imgui/imgui.h	/^    inline ImDrawListSplitter()  { Clear(); }$/;"	f	struct:ImDrawListSplitter
ImDrawListSplitter	lib/cimgui/imgui/imgui.h	/^struct ImDrawListSplitter$/;"	s
ImDrawListSplitter_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_Clear(ImDrawListSplitter* self)$/;"	f
ImDrawListSplitter_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_Clear(ImDrawListSplitter* self)$/;"	f
ImDrawListSplitter_ClearFreeMemory	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_ClearFreeMemory(ImDrawListSplitter* self)$/;"	f
ImDrawListSplitter_ClearFreeMemory	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_ClearFreeMemory(ImDrawListSplitter* self)$/;"	f
ImDrawListSplitter_ImDrawListSplitter	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawListSplitter* ImDrawListSplitter_ImDrawListSplitter(void)$/;"	f
ImDrawListSplitter_ImDrawListSplitter	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawListSplitter* ImDrawListSplitter_ImDrawListSplitter(void)$/;"	f
ImDrawListSplitter_Merge	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_Merge(ImDrawListSplitter* self,ImDrawList* draw_list)$/;"	f
ImDrawListSplitter_Merge	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_Merge(ImDrawListSplitter* self,ImDrawList* draw_list)$/;"	f
ImDrawListSplitter_SetCurrentChannel	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_SetCurrentChannel(ImDrawListSplitter* self,ImDrawList* draw_list,int channel_idx)$/;"	f
ImDrawListSplitter_SetCurrentChannel	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_SetCurrentChannel(ImDrawListSplitter* self,ImDrawList* draw_list,int channel_idx)$/;"	f
ImDrawListSplitter_Split	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_Split(ImDrawListSplitter* self,ImDrawList* draw_list,int count)$/;"	f
ImDrawListSplitter_Split	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_Split(ImDrawListSplitter* self,ImDrawList* draw_list,int count)$/;"	f
ImDrawListSplitter_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_destroy(ImDrawListSplitter* self)$/;"	f
ImDrawListSplitter_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawListSplitter_destroy(ImDrawListSplitter* self)$/;"	f
ImDrawList_AddBezierCurve	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddBezierCurve(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness,int num_segments)$/;"	f
ImDrawList_AddBezierCurve	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddBezierCurve(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness,int num_segments)$/;"	f
ImDrawList_AddCallback	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddCallback(ImDrawList* self,ImDrawCallback callback,void* callback_data)$/;"	f
ImDrawList_AddCallback	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddCallback(ImDrawList* self,ImDrawCallback callback,void* callback_data)$/;"	f
ImDrawList_AddCircle	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddCircle(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness)$/;"	f
ImDrawList_AddCircle	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddCircle(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness)$/;"	f
ImDrawList_AddCircleFilled	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddCircleFilled(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments)$/;"	f
ImDrawList_AddCircleFilled	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddCircleFilled(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments)$/;"	f
ImDrawList_AddConvexPolyFilled	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddConvexPolyFilled(ImDrawList* self,const ImVec2* points,int num_points,ImU32 col)$/;"	f
ImDrawList_AddConvexPolyFilled	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddConvexPolyFilled(ImDrawList* self,const ImVec2* points,int num_points,ImU32 col)$/;"	f
ImDrawList_AddDrawCmd	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddDrawCmd(ImDrawList* self)$/;"	f
ImDrawList_AddDrawCmd	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddDrawCmd(ImDrawList* self)$/;"	f
ImDrawList_AddImage	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddImage(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col)$/;"	f
ImDrawList_AddImage	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddImage(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col)$/;"	f
ImDrawList_AddImageQuad	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddImageQuad(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 uv1,const ImVec2 uv2,const ImVec2 uv3,const ImVec2 uv4,ImU32 col)$/;"	f
ImDrawList_AddImageQuad	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddImageQuad(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,const ImVec2 uv1,const ImVec2 uv2,const ImVec2 uv3,const ImVec2 uv4,ImU32 col)$/;"	f
ImDrawList_AddImageRounded	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddImageRounded(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners)$/;"	f
ImDrawList_AddImageRounded	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddImageRounded(ImDrawList* self,ImTextureID user_texture_id,const ImVec2 p_min,const ImVec2 p_max,const ImVec2 uv_min,const ImVec2 uv_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners)$/;"	f
ImDrawList_AddLine	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddLine(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,ImU32 col,float thickness)$/;"	f
ImDrawList_AddLine	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddLine(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,ImU32 col,float thickness)$/;"	f
ImDrawList_AddNgon	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddNgon(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness)$/;"	f
ImDrawList_AddNgon	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddNgon(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments,float thickness)$/;"	f
ImDrawList_AddNgonFilled	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddNgonFilled(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments)$/;"	f
ImDrawList_AddNgonFilled	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddNgonFilled(ImDrawList* self,const ImVec2 center,float radius,ImU32 col,int num_segments)$/;"	f
ImDrawList_AddPolyline	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddPolyline(ImDrawList* self,const ImVec2* points,int num_points,ImU32 col,bool closed,float thickness)$/;"	f
ImDrawList_AddPolyline	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddPolyline(ImDrawList* self,const ImVec2* points,int num_points,ImU32 col,bool closed,float thickness)$/;"	f
ImDrawList_AddQuad	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddQuad(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness)$/;"	f
ImDrawList_AddQuad	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddQuad(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col,float thickness)$/;"	f
ImDrawList_AddQuadFilled	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddQuadFilled(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col)$/;"	f
ImDrawList_AddQuadFilled	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddQuadFilled(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,ImU32 col)$/;"	f
ImDrawList_AddRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddRect(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners,float thickness)$/;"	f
ImDrawList_AddRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddRect(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners,float thickness)$/;"	f
ImDrawList_AddRectFilled	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddRectFilled(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners)$/;"	f
ImDrawList_AddRectFilled	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddRectFilled(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col,float rounding,ImDrawCornerFlags rounding_corners)$/;"	f
ImDrawList_AddRectFilledMultiColor	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddRectFilledMultiColor(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col_upr_left,ImU32 col_upr_right,ImU32 col_bot_right,ImU32 col_bot_left)$/;"	f
ImDrawList_AddRectFilledMultiColor	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddRectFilledMultiColor(ImDrawList* self,const ImVec2 p_min,const ImVec2 p_max,ImU32 col_upr_left,ImU32 col_upr_right,ImU32 col_bot_right,ImU32 col_bot_left)$/;"	f
ImDrawList_AddText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddText(ImDrawList* self,const ImVec2 pos,ImU32 col,const char* text_begin,const char* text_end)$/;"	f
ImDrawList_AddText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddText(ImDrawList* self,const ImVec2 pos,ImU32 col,const char* text_begin,const char* text_end)$/;"	f
ImDrawList_AddTextFontPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddTextFontPtr(ImDrawList* self,const ImFont* font,float font_size,const ImVec2 pos,ImU32 col,const char* text_begin,const char* text_end,float wrap_width,const ImVec4* cpu_fine_clip_rect)$/;"	f
ImDrawList_AddTextFontPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddTextFontPtr(ImDrawList* self,const ImFont* font,float font_size,const ImVec2 pos,ImU32 col,const char* text_begin,const char* text_end,float wrap_width,const ImVec4* cpu_fine_clip_rect)$/;"	f
ImDrawList_AddTriangle	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddTriangle(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col,float thickness)$/;"	f
ImDrawList_AddTriangle	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddTriangle(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col,float thickness)$/;"	f
ImDrawList_AddTriangleFilled	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddTriangleFilled(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col)$/;"	f
ImDrawList_AddTriangleFilled	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_AddTriangleFilled(ImDrawList* self,const ImVec2 p1,const ImVec2 p2,const ImVec2 p3,ImU32 col)$/;"	f
ImDrawList_ChannelsMerge	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_ChannelsMerge(ImDrawList* self)$/;"	f
ImDrawList_ChannelsMerge	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_ChannelsMerge(ImDrawList* self)$/;"	f
ImDrawList_ChannelsSetCurrent	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_ChannelsSetCurrent(ImDrawList* self,int n)$/;"	f
ImDrawList_ChannelsSetCurrent	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_ChannelsSetCurrent(ImDrawList* self,int n)$/;"	f
ImDrawList_ChannelsSplit	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_ChannelsSplit(ImDrawList* self,int count)$/;"	f
ImDrawList_ChannelsSplit	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_ChannelsSplit(ImDrawList* self,int count)$/;"	f
ImDrawList_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_Clear(ImDrawList* self)$/;"	f
ImDrawList_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_Clear(ImDrawList* self)$/;"	f
ImDrawList_ClearFreeMemory	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_ClearFreeMemory(ImDrawList* self)$/;"	f
ImDrawList_ClearFreeMemory	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_ClearFreeMemory(ImDrawList* self)$/;"	f
ImDrawList_CloneOutput	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawList* ImDrawList_CloneOutput(ImDrawList* self)$/;"	f
ImDrawList_CloneOutput	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawList* ImDrawList_CloneOutput(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMax	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 ImDrawList_GetClipRectMax(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMax	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 ImDrawList_GetClipRectMax(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMax_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_GetClipRectMax_nonUDT(ImVec2 *pOut,ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMax_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_GetClipRectMax_nonUDT(ImVec2 *pOut,ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMax_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple ImDrawList_GetClipRectMax_nonUDT2(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMax_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple ImDrawList_GetClipRectMax_nonUDT2(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMin	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 ImDrawList_GetClipRectMin(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMin	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 ImDrawList_GetClipRectMin(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMin_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_GetClipRectMin_nonUDT(ImVec2 *pOut,ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMin_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_GetClipRectMin_nonUDT(ImVec2 *pOut,ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMin_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple ImDrawList_GetClipRectMin_nonUDT2(ImDrawList* self)$/;"	f
ImDrawList_GetClipRectMin_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple ImDrawList_GetClipRectMin_nonUDT2(ImDrawList* self)$/;"	f
ImDrawList_ImDrawList	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawList* ImDrawList_ImDrawList(const ImDrawListSharedData* shared_data)$/;"	f
ImDrawList_ImDrawList	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawList* ImDrawList_ImDrawList(const ImDrawListSharedData* shared_data)$/;"	f
ImDrawList_PathArcTo	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathArcTo(ImDrawList* self,const ImVec2 center,float radius,float a_min,float a_max,int num_segments)$/;"	f
ImDrawList_PathArcTo	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathArcTo(ImDrawList* self,const ImVec2 center,float radius,float a_min,float a_max,int num_segments)$/;"	f
ImDrawList_PathArcToFast	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathArcToFast(ImDrawList* self,const ImVec2 center,float radius,int a_min_of_12,int a_max_of_12)$/;"	f
ImDrawList_PathArcToFast	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathArcToFast(ImDrawList* self,const ImVec2 center,float radius,int a_min_of_12,int a_max_of_12)$/;"	f
ImDrawList_PathBezierCurveTo	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathBezierCurveTo(ImDrawList* self,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,int num_segments)$/;"	f
ImDrawList_PathBezierCurveTo	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathBezierCurveTo(ImDrawList* self,const ImVec2 p2,const ImVec2 p3,const ImVec2 p4,int num_segments)$/;"	f
ImDrawList_PathClear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathClear(ImDrawList* self)$/;"	f
ImDrawList_PathClear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathClear(ImDrawList* self)$/;"	f
ImDrawList_PathFillConvex	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathFillConvex(ImDrawList* self,ImU32 col)$/;"	f
ImDrawList_PathFillConvex	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathFillConvex(ImDrawList* self,ImU32 col)$/;"	f
ImDrawList_PathLineTo	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathLineTo(ImDrawList* self,const ImVec2 pos)$/;"	f
ImDrawList_PathLineTo	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathLineTo(ImDrawList* self,const ImVec2 pos)$/;"	f
ImDrawList_PathLineToMergeDuplicate	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathLineToMergeDuplicate(ImDrawList* self,const ImVec2 pos)$/;"	f
ImDrawList_PathLineToMergeDuplicate	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathLineToMergeDuplicate(ImDrawList* self,const ImVec2 pos)$/;"	f
ImDrawList_PathRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathRect(ImDrawList* self,const ImVec2 rect_min,const ImVec2 rect_max,float rounding,ImDrawCornerFlags rounding_corners)$/;"	f
ImDrawList_PathRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathRect(ImDrawList* self,const ImVec2 rect_min,const ImVec2 rect_max,float rounding,ImDrawCornerFlags rounding_corners)$/;"	f
ImDrawList_PathStroke	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathStroke(ImDrawList* self,ImU32 col,bool closed,float thickness)$/;"	f
ImDrawList_PathStroke	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PathStroke(ImDrawList* self,ImU32 col,bool closed,float thickness)$/;"	f
ImDrawList_PopClipRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PopClipRect(ImDrawList* self)$/;"	f
ImDrawList_PopClipRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PopClipRect(ImDrawList* self)$/;"	f
ImDrawList_PopTextureID	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PopTextureID(ImDrawList* self)$/;"	f
ImDrawList_PopTextureID	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PopTextureID(ImDrawList* self)$/;"	f
ImDrawList_PrimQuadUV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimQuadUV(ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,const ImVec2 uv_a,const ImVec2 uv_b,const ImVec2 uv_c,const ImVec2 uv_d,ImU32 col)$/;"	f
ImDrawList_PrimQuadUV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimQuadUV(ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 c,const ImVec2 d,const ImVec2 uv_a,const ImVec2 uv_b,const ImVec2 uv_c,const ImVec2 uv_d,ImU32 col)$/;"	f
ImDrawList_PrimRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimRect(ImDrawList* self,const ImVec2 a,const ImVec2 b,ImU32 col)$/;"	f
ImDrawList_PrimRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimRect(ImDrawList* self,const ImVec2 a,const ImVec2 b,ImU32 col)$/;"	f
ImDrawList_PrimRectUV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimRectUV(ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,ImU32 col)$/;"	f
ImDrawList_PrimRectUV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimRectUV(ImDrawList* self,const ImVec2 a,const ImVec2 b,const ImVec2 uv_a,const ImVec2 uv_b,ImU32 col)$/;"	f
ImDrawList_PrimReserve	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimReserve(ImDrawList* self,int idx_count,int vtx_count)$/;"	f
ImDrawList_PrimReserve	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimReserve(ImDrawList* self,int idx_count,int vtx_count)$/;"	f
ImDrawList_PrimUnreserve	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimUnreserve(ImDrawList* self,int idx_count,int vtx_count)$/;"	f
ImDrawList_PrimUnreserve	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimUnreserve(ImDrawList* self,int idx_count,int vtx_count)$/;"	f
ImDrawList_PrimVtx	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimVtx(ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col)$/;"	f
ImDrawList_PrimVtx	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimVtx(ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col)$/;"	f
ImDrawList_PrimWriteIdx	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimWriteIdx(ImDrawList* self,ImDrawIdx idx)$/;"	f
ImDrawList_PrimWriteIdx	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimWriteIdx(ImDrawList* self,ImDrawIdx idx)$/;"	f
ImDrawList_PrimWriteVtx	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimWriteVtx(ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col)$/;"	f
ImDrawList_PrimWriteVtx	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PrimWriteVtx(ImDrawList* self,const ImVec2 pos,const ImVec2 uv,ImU32 col)$/;"	f
ImDrawList_PushClipRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PushClipRect(ImDrawList* self,ImVec2 clip_rect_min,ImVec2 clip_rect_max,bool intersect_with_current_clip_rect)$/;"	f
ImDrawList_PushClipRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PushClipRect(ImDrawList* self,ImVec2 clip_rect_min,ImVec2 clip_rect_max,bool intersect_with_current_clip_rect)$/;"	f
ImDrawList_PushClipRectFullScreen	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PushClipRectFullScreen(ImDrawList* self)$/;"	f
ImDrawList_PushClipRectFullScreen	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PushClipRectFullScreen(ImDrawList* self)$/;"	f
ImDrawList_PushTextureID	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_PushTextureID(ImDrawList* self,ImTextureID texture_id)$/;"	f
ImDrawList_PushTextureID	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_PushTextureID(ImDrawList* self,ImTextureID texture_id)$/;"	f
ImDrawList_UpdateClipRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_UpdateClipRect(ImDrawList* self)$/;"	f
ImDrawList_UpdateClipRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_UpdateClipRect(ImDrawList* self)$/;"	f
ImDrawList_UpdateTextureID	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_UpdateTextureID(ImDrawList* self)$/;"	f
ImDrawList_UpdateTextureID	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_UpdateTextureID(ImDrawList* self)$/;"	f
ImDrawList_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImDrawList_destroy(ImDrawList* self)$/;"	f
ImDrawList_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImDrawList_destroy(ImDrawList* self)$/;"	f
ImDrawVert	lib/cimgui/cimgui.h	/^struct ImDrawVert$/;"	s
ImDrawVert	lib/cimgui/cimgui.h	/^typedef struct ImDrawVert ImDrawVert;$/;"	t	typeref:struct:ImDrawVert
ImDrawVert	lib/cimgui/generator/output/cimgui.h	/^struct ImDrawVert$/;"	s
ImDrawVert	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImDrawVert ImDrawVert;$/;"	t	typeref:struct:ImDrawVert
ImDrawVert	lib/cimgui/imgui/imgui.h	/^struct ImDrawVert$/;"	s
ImDrawVertAllegro	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^struct ImDrawVertAllegro$/;"	s	file:
ImFabs	lib/cimgui/imgui/imgui_internal.h	299;"	d
ImFileClose	lib/cimgui/imgui/imgui.cpp	/^bool    ImFileClose(ImFileHandle f)     { return fclose(f) == 0; }$/;"	f
ImFileClose	lib/cimgui/imgui/imgui_internal.h	/^static inline bool          ImFileClose(ImFileHandle)                               { return false; }$/;"	f
ImFileGetSize	lib/cimgui/imgui/imgui.cpp	/^ImU64   ImFileGetSize(ImFileHandle f)   { long off = 0, sz = 0; return ((off = ftell(f)) != -1 && !fseek(f, 0, SEEK_END) && (sz = ftell(f)) != -1 && !fseek(f, off, SEEK_SET)) ? (ImU64)sz : (ImU64)-1; }$/;"	f
ImFileGetSize	lib/cimgui/imgui/imgui_internal.h	/^static inline ImU64         ImFileGetSize(ImFileHandle)                             { return (ImU64)-1; }$/;"	f
ImFileHandle	lib/cimgui/imgui/imgui_internal.h	/^typedef FILE* ImFileHandle;$/;"	t
ImFileHandle	lib/cimgui/imgui/imgui_internal.h	/^typedef void* ImFileHandle;$/;"	t
ImFileLoadToMemory	lib/cimgui/imgui/imgui.cpp	/^void*   ImFileLoadToMemory(const char* filename, const char* mode, size_t* out_file_size, int padding_bytes)$/;"	f
ImFileOpen	lib/cimgui/imgui/imgui.cpp	/^ImFileHandle ImFileOpen(const char* filename, const char* mode)$/;"	f
ImFileOpen	lib/cimgui/imgui/imgui_internal.h	/^static inline ImFileHandle  ImFileOpen(const char*, const char*)                    { return NULL; }$/;"	f
ImFileRead	lib/cimgui/imgui/imgui.cpp	/^ImU64   ImFileRead(void* data, ImU64 sz, ImU64 count, ImFileHandle f)           { return fread(data, (size_t)sz, (size_t)count, f); }$/;"	f
ImFileRead	lib/cimgui/imgui/imgui_internal.h	/^static inline ImU64         ImFileRead(void*, ImU64, ImU64, ImFileHandle)           { return 0; }$/;"	f
ImFileWrite	lib/cimgui/imgui/imgui.cpp	/^ImU64   ImFileWrite(const void* data, ImU64 sz, ImU64 count, ImFileHandle f)    { return fwrite(data, (size_t)sz, (size_t)count, f); }$/;"	f
ImFileWrite	lib/cimgui/imgui/imgui_internal.h	/^static inline ImU64         ImFileWrite(const void*, ImU64, ImU64, ImFileHandle)    { return 0; }$/;"	f
ImFloor	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImFloor(const ImVec2& v)                                   { return ImVec2((float)(int)(v.x), (float)(int)(v.y)); }$/;"	f
ImFloor	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImFloor(float f)                                           { return (float)(int)(f); }$/;"	f
ImFloorStd	lib/cimgui/imgui/imgui_internal.h	307;"	d
ImFmod	lib/cimgui/imgui/imgui_internal.h	301;"	d
ImFont	lib/cimgui/cimgui.h	/^struct ImFont$/;"	s
ImFont	lib/cimgui/cimgui.h	/^typedef struct ImFont ImFont;$/;"	t	typeref:struct:ImFont
ImFont	lib/cimgui/generator/output/cimgui.h	/^struct ImFont$/;"	s
ImFont	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImFont ImFont;$/;"	t	typeref:struct:ImFont
ImFont	lib/cimgui/imgui/imgui.h	/^struct ImFont$/;"	s
ImFont	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont::ImFont()$/;"	f	class:ImFont
ImFontAtlas	lib/cimgui/cimgui.h	/^struct ImFontAtlas$/;"	s
ImFontAtlas	lib/cimgui/cimgui.h	/^typedef struct ImFontAtlas ImFontAtlas;$/;"	t	typeref:struct:ImFontAtlas
ImFontAtlas	lib/cimgui/generator/output/cimgui.h	/^struct ImFontAtlas$/;"	s
ImFontAtlas	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImFontAtlas ImFontAtlas;$/;"	t	typeref:struct:ImFontAtlas
ImFontAtlas	lib/cimgui/imgui/imgui.h	/^struct ImFontAtlas$/;"	s
ImFontAtlas	lib/cimgui/imgui/imgui_draw.cpp	/^ImFontAtlas::ImFontAtlas()$/;"	f	class:ImFontAtlas
ImFontAtlasBuildFinish	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildFinish(ImFontAtlas* atlas)$/;"	f
ImFontAtlasBuildInit	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildInit(ImFontAtlas* atlas)$/;"	f
ImFontAtlasBuildMultiplyCalcLookupTable	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char out_table[256], float in_brighten_factor)$/;"	f
ImFontAtlasBuildMultiplyRectAlpha8	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char table[256], unsigned char* pixels, int x, int y, int w, int h, int stride)$/;"	f
ImFontAtlasBuildPackCustomRects	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* stbrp_context_opaque)$/;"	f
ImFontAtlasBuildRenderDefaultTexData	lib/cimgui/imgui/imgui_draw.cpp	/^static void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas* atlas)$/;"	f	file:
ImFontAtlasBuildSetupFont	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, float ascent, float descent)$/;"	f
ImFontAtlasBuildWithFreeType	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^bool ImFontAtlasBuildWithFreeType(FT_Library ft_library, ImFontAtlas* atlas, unsigned int extra_flags)$/;"	f
ImFontAtlasBuildWithStbTruetype	lib/cimgui/imgui/imgui_draw.cpp	/^bool    ImFontAtlasBuildWithStbTruetype(ImFontAtlas* atlas)$/;"	f
ImFontAtlasCustomRect	lib/cimgui/cimgui.h	/^struct ImFontAtlasCustomRect$/;"	s
ImFontAtlasCustomRect	lib/cimgui/cimgui.h	/^typedef struct ImFontAtlasCustomRect ImFontAtlasCustomRect;$/;"	t	typeref:struct:ImFontAtlasCustomRect
ImFontAtlasCustomRect	lib/cimgui/generator/output/cimgui.h	/^struct ImFontAtlasCustomRect$/;"	s
ImFontAtlasCustomRect	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImFontAtlasCustomRect ImFontAtlasCustomRect;$/;"	t	typeref:struct:ImFontAtlasCustomRect
ImFontAtlasCustomRect	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasCustomRect()         { ID = 0xFFFFFFFF; Width = Height = 0; X = Y = 0xFFFF; GlyphAdvanceX = 0.0f; GlyphOffset = ImVec2(0,0); Font = NULL; }$/;"	f	struct:ImFontAtlasCustomRect
ImFontAtlasCustomRect	lib/cimgui/imgui/imgui.h	/^struct ImFontAtlasCustomRect$/;"	s
ImFontAtlasCustomRect_ImFontAtlasCustomRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFontAtlasCustomRect* ImFontAtlasCustomRect_ImFontAtlasCustomRect(void)$/;"	f
ImFontAtlasCustomRect_ImFontAtlasCustomRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFontAtlasCustomRect* ImFontAtlasCustomRect_ImFontAtlasCustomRect(void)$/;"	f
ImFontAtlasCustomRect_IsPacked	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImFontAtlasCustomRect_IsPacked(ImFontAtlasCustomRect* self)$/;"	f
ImFontAtlasCustomRect_IsPacked	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImFontAtlasCustomRect_IsPacked(ImFontAtlasCustomRect* self)$/;"	f
ImFontAtlasCustomRect_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlasCustomRect_destroy(ImFontAtlasCustomRect* self)$/;"	f
ImFontAtlasCustomRect_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlasCustomRect_destroy(ImFontAtlasCustomRect* self)$/;"	f
ImFontAtlasFlags	lib/cimgui/cimgui.h	/^typedef int ImFontAtlasFlags;$/;"	t
ImFontAtlasFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImFontAtlasFlags;$/;"	t
ImFontAtlasFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImFontAtlasFlags;       \/\/ -> enum ImFontAtlasFlags_     \/\/ Flags: for ImFontAtlas$/;"	t
ImFontAtlasFlags_	lib/cimgui/cimgui.h	/^}ImFontAtlasFlags_;$/;"	t	typeref:enum:__anon95
ImFontAtlasFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImFontAtlasFlags_;$/;"	t	typeref:enum:__anon69
ImFontAtlasFlags_	lib/cimgui/imgui/imgui.h	/^enum ImFontAtlasFlags_$/;"	g
ImFontAtlasFlags_NoMouseCursors	lib/cimgui/cimgui.h	/^    ImFontAtlasFlags_NoMouseCursors = 1 << 1$/;"	e	enum:__anon95
ImFontAtlasFlags_NoMouseCursors	lib/cimgui/generator/output/cimgui.h	/^    ImFontAtlasFlags_NoMouseCursors = 1 << 1$/;"	e	enum:__anon69
ImFontAtlasFlags_NoMouseCursors	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasFlags_NoMouseCursors     = 1 << 1    \/\/ Don't build software mouse cursors into the atlas$/;"	e	enum:ImFontAtlasFlags_
ImFontAtlasFlags_NoPowerOfTwoHeight	lib/cimgui/cimgui.h	/^    ImFontAtlasFlags_NoPowerOfTwoHeight = 1 << 0,$/;"	e	enum:__anon95
ImFontAtlasFlags_NoPowerOfTwoHeight	lib/cimgui/generator/output/cimgui.h	/^    ImFontAtlasFlags_NoPowerOfTwoHeight = 1 << 0,$/;"	e	enum:__anon69
ImFontAtlasFlags_NoPowerOfTwoHeight	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasFlags_NoPowerOfTwoHeight = 1 << 0,   \/\/ Don't round the height to next power of two$/;"	e	enum:ImFontAtlasFlags_
ImFontAtlasFlags_None	lib/cimgui/cimgui.h	/^    ImFontAtlasFlags_None = 0,$/;"	e	enum:__anon95
ImFontAtlasFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImFontAtlasFlags_None = 0,$/;"	e	enum:__anon69
ImFontAtlasFlags_None	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasFlags_None               = 0,$/;"	e	enum:ImFontAtlasFlags_
ImFontAtlas_AddCustomRectFontGlyph	lib/cimgui/cimgui.cpp	/^CIMGUI_API int ImFontAtlas_AddCustomRectFontGlyph(ImFontAtlas* self,ImFont* font,ImWchar id,int width,int height,float advance_x,const ImVec2 offset)$/;"	f
ImFontAtlas_AddCustomRectFontGlyph	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int ImFontAtlas_AddCustomRectFontGlyph(ImFontAtlas* self,ImFont* font,ImWchar id,int width,int height,float advance_x,const ImVec2 offset)$/;"	f
ImFontAtlas_AddCustomRectRegular	lib/cimgui/cimgui.cpp	/^CIMGUI_API int ImFontAtlas_AddCustomRectRegular(ImFontAtlas* self,unsigned int id,int width,int height)$/;"	f
ImFontAtlas_AddCustomRectRegular	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int ImFontAtlas_AddCustomRectRegular(ImFontAtlas* self,unsigned int id,int width,int height)$/;"	f
ImFontAtlas_AddFont	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFont(ImFontAtlas* self,const ImFontConfig* font_cfg)$/;"	f
ImFontAtlas_AddFont	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFont(ImFontAtlas* self,const ImFontConfig* font_cfg)$/;"	f
ImFontAtlas_AddFontDefault	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontDefault(ImFontAtlas* self,const ImFontConfig* font_cfg)$/;"	f
ImFontAtlas_AddFontDefault	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontDefault(ImFontAtlas* self,const ImFontConfig* font_cfg)$/;"	f
ImFontAtlas_AddFontFromFileTTF	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromFileTTF(ImFontAtlas* self,const char* filename,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_AddFontFromFileTTF	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromFileTTF(ImFontAtlas* self,const char* filename,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_AddFontFromMemoryCompressedBase85TTF	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(ImFontAtlas* self,const char* compressed_font_data_base85,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_AddFontFromMemoryCompressedBase85TTF	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(ImFontAtlas* self,const char* compressed_font_data_base85,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_AddFontFromMemoryCompressedTTF	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromMemoryCompressedTTF(ImFontAtlas* self,const void* compressed_font_data,int compressed_font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_AddFontFromMemoryCompressedTTF	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromMemoryCompressedTTF(ImFontAtlas* self,const void* compressed_font_data,int compressed_font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_AddFontFromMemoryTTF	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromMemoryTTF(ImFontAtlas* self,void* font_data,int font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_AddFontFromMemoryTTF	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* ImFontAtlas_AddFontFromMemoryTTF(ImFontAtlas* self,void* font_data,int font_size,float size_pixels,const ImFontConfig* font_cfg,const ImWchar* glyph_ranges)$/;"	f
ImFontAtlas_Build	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImFontAtlas_Build(ImFontAtlas* self)$/;"	f
ImFontAtlas_Build	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImFontAtlas_Build(ImFontAtlas* self)$/;"	f
ImFontAtlas_CalcCustomRectUV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_CalcCustomRectUV(ImFontAtlas* self,const ImFontAtlasCustomRect* rect,ImVec2* out_uv_min,ImVec2* out_uv_max)$/;"	f
ImFontAtlas_CalcCustomRectUV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_CalcCustomRectUV(ImFontAtlas* self,const ImFontAtlasCustomRect* rect,ImVec2* out_uv_min,ImVec2* out_uv_max)$/;"	f
ImFontAtlas_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_Clear(ImFontAtlas* self)$/;"	f
ImFontAtlas_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_Clear(ImFontAtlas* self)$/;"	f
ImFontAtlas_ClearFonts	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_ClearFonts(ImFontAtlas* self)$/;"	f
ImFontAtlas_ClearFonts	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_ClearFonts(ImFontAtlas* self)$/;"	f
ImFontAtlas_ClearInputData	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_ClearInputData(ImFontAtlas* self)$/;"	f
ImFontAtlas_ClearInputData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_ClearInputData(ImFontAtlas* self)$/;"	f
ImFontAtlas_ClearTexData	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_ClearTexData(ImFontAtlas* self)$/;"	f
ImFontAtlas_ClearTexData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_ClearTexData(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetCustomRectByIndex	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImFontAtlasCustomRect* ImFontAtlas_GetCustomRectByIndex(ImFontAtlas* self,int index)$/;"	f
ImFontAtlas_GetCustomRectByIndex	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImFontAtlasCustomRect* ImFontAtlas_GetCustomRectByIndex(ImFontAtlas* self,int index)$/;"	f
ImFontAtlas_GetGlyphRangesChineseFull	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesChineseFull(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesChineseFull	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesChineseFull(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesChineseSimplifiedCommon(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesCyrillic	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesCyrillic(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesCyrillic	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesCyrillic(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesDefault	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesDefault(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesDefault	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesDefault(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesJapanese	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesJapanese(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesJapanese	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesJapanese(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesKorean	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesKorean(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesKorean	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesKorean(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesThai	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesThai(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesThai	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesThai(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesVietnamese	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesVietnamese(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetGlyphRangesVietnamese	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImWchar* ImFontAtlas_GetGlyphRangesVietnamese(ImFontAtlas* self)$/;"	f
ImFontAtlas_GetMouseCursorTexData	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImFontAtlas_GetMouseCursorTexData(ImFontAtlas* self,ImGuiMouseCursor cursor,ImVec2* out_offset,ImVec2* out_size,ImVec2 out_uv_border[2],ImVec2 out_uv_fill[2])$/;"	f
ImFontAtlas_GetMouseCursorTexData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImFontAtlas_GetMouseCursorTexData(ImFontAtlas* self,ImGuiMouseCursor cursor,ImVec2* out_offset,ImVec2* out_size,ImVec2 out_uv_border[2],ImVec2 out_uv_fill[2])$/;"	f
ImFontAtlas_GetTexDataAsAlpha8	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_GetTexDataAsAlpha8(ImFontAtlas* self,unsigned char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel)$/;"	f
ImFontAtlas_GetTexDataAsAlpha8	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_GetTexDataAsAlpha8(ImFontAtlas* self,unsigned char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel)$/;"	f
ImFontAtlas_GetTexDataAsRGBA32	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_GetTexDataAsRGBA32(ImFontAtlas* self,unsigned char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel)$/;"	f
ImFontAtlas_GetTexDataAsRGBA32	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_GetTexDataAsRGBA32(ImFontAtlas* self,unsigned char** out_pixels,int* out_width,int* out_height,int* out_bytes_per_pixel)$/;"	f
ImFontAtlas_ImFontAtlas	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFontAtlas* ImFontAtlas_ImFontAtlas(void)$/;"	f
ImFontAtlas_ImFontAtlas	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFontAtlas* ImFontAtlas_ImFontAtlas(void)$/;"	f
ImFontAtlas_IsBuilt	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImFontAtlas_IsBuilt(ImFontAtlas* self)$/;"	f
ImFontAtlas_IsBuilt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImFontAtlas_IsBuilt(ImFontAtlas* self)$/;"	f
ImFontAtlas_SetTexID	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_SetTexID(ImFontAtlas* self,ImTextureID id)$/;"	f
ImFontAtlas_SetTexID	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_SetTexID(ImFontAtlas* self,ImTextureID id)$/;"	f
ImFontAtlas_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_destroy(ImFontAtlas* self)$/;"	f
ImFontAtlas_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontAtlas_destroy(ImFontAtlas* self)$/;"	f
ImFontBuildDstData	lib/cimgui/imgui/imgui_draw.cpp	/^struct ImFontBuildDstData$/;"	s	file:
ImFontBuildDstDataFT	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^struct ImFontBuildDstDataFT$/;"	s	file:
ImFontBuildSrcData	lib/cimgui/imgui/imgui_draw.cpp	/^struct ImFontBuildSrcData$/;"	s	file:
ImFontBuildSrcDataFT	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^struct ImFontBuildSrcDataFT$/;"	s	file:
ImFontBuildSrcGlyphFT	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^struct ImFontBuildSrcGlyphFT$/;"	s	file:
ImFontConfig	lib/cimgui/cimgui.h	/^struct ImFontConfig$/;"	s
ImFontConfig	lib/cimgui/cimgui.h	/^typedef struct ImFontConfig ImFontConfig;$/;"	t	typeref:struct:ImFontConfig
ImFontConfig	lib/cimgui/generator/output/cimgui.h	/^struct ImFontConfig$/;"	s
ImFontConfig	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImFontConfig ImFontConfig;$/;"	t	typeref:struct:ImFontConfig
ImFontConfig	lib/cimgui/imgui/imgui.h	/^struct ImFontConfig$/;"	s
ImFontConfig	lib/cimgui/imgui/imgui_draw.cpp	/^ImFontConfig::ImFontConfig()$/;"	f	class:ImFontConfig
ImFontConfig_ImFontConfig	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFontConfig* ImFontConfig_ImFontConfig(void)$/;"	f
ImFontConfig_ImFontConfig	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFontConfig* ImFontConfig_ImFontConfig(void)$/;"	f
ImFontConfig_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontConfig_destroy(ImFontConfig* self)$/;"	f
ImFontConfig_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontConfig_destroy(ImFontConfig* self)$/;"	f
ImFontGlyph	lib/cimgui/cimgui.h	/^struct ImFontGlyph$/;"	s
ImFontGlyph	lib/cimgui/cimgui.h	/^typedef struct ImFontGlyph ImFontGlyph;$/;"	t	typeref:struct:ImFontGlyph
ImFontGlyph	lib/cimgui/generator/output/cimgui.h	/^struct ImFontGlyph$/;"	s
ImFontGlyph	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImFontGlyph ImFontGlyph;$/;"	t	typeref:struct:ImFontGlyph
ImFontGlyph	lib/cimgui/imgui/imgui.h	/^struct ImFontGlyph$/;"	s
ImFontGlyphRangesBuilder	lib/cimgui/cimgui.h	/^struct ImFontGlyphRangesBuilder$/;"	s
ImFontGlyphRangesBuilder	lib/cimgui/cimgui.h	/^typedef struct ImFontGlyphRangesBuilder ImFontGlyphRangesBuilder;$/;"	t	typeref:struct:ImFontGlyphRangesBuilder
ImFontGlyphRangesBuilder	lib/cimgui/generator/output/cimgui.h	/^struct ImFontGlyphRangesBuilder$/;"	s
ImFontGlyphRangesBuilder	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImFontGlyphRangesBuilder ImFontGlyphRangesBuilder;$/;"	t	typeref:struct:ImFontGlyphRangesBuilder
ImFontGlyphRangesBuilder	lib/cimgui/imgui/imgui.h	/^    ImFontGlyphRangesBuilder()          { Clear(); }$/;"	f	struct:ImFontGlyphRangesBuilder
ImFontGlyphRangesBuilder	lib/cimgui/imgui/imgui.h	/^struct ImFontGlyphRangesBuilder$/;"	s
ImFontGlyphRangesBuilder_AddChar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_AddChar(ImFontGlyphRangesBuilder* self,ImWchar c)$/;"	f
ImFontGlyphRangesBuilder_AddChar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_AddChar(ImFontGlyphRangesBuilder* self,ImWchar c)$/;"	f
ImFontGlyphRangesBuilder_AddRanges	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_AddRanges(ImFontGlyphRangesBuilder* self,const ImWchar* ranges)$/;"	f
ImFontGlyphRangesBuilder_AddRanges	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_AddRanges(ImFontGlyphRangesBuilder* self,const ImWchar* ranges)$/;"	f
ImFontGlyphRangesBuilder_AddText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_AddText(ImFontGlyphRangesBuilder* self,const char* text,const char* text_end)$/;"	f
ImFontGlyphRangesBuilder_AddText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_AddText(ImFontGlyphRangesBuilder* self,const char* text,const char* text_end)$/;"	f
ImFontGlyphRangesBuilder_BuildRanges	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_BuildRanges(ImFontGlyphRangesBuilder* self,ImVector_ImWchar* out_ranges)$/;"	f
ImFontGlyphRangesBuilder_BuildRanges	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_BuildRanges(ImFontGlyphRangesBuilder* self,ImVector_ImWchar* out_ranges)$/;"	f
ImFontGlyphRangesBuilder_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_Clear(ImFontGlyphRangesBuilder* self)$/;"	f
ImFontGlyphRangesBuilder_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_Clear(ImFontGlyphRangesBuilder* self)$/;"	f
ImFontGlyphRangesBuilder_GetBit	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImFontGlyphRangesBuilder_GetBit(ImFontGlyphRangesBuilder* self,int n)$/;"	f
ImFontGlyphRangesBuilder_GetBit	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImFontGlyphRangesBuilder_GetBit(ImFontGlyphRangesBuilder* self,int n)$/;"	f
ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFontGlyphRangesBuilder* ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder(void)$/;"	f
ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFontGlyphRangesBuilder* ImFontGlyphRangesBuilder_ImFontGlyphRangesBuilder(void)$/;"	f
ImFontGlyphRangesBuilder_SetBit	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_SetBit(ImFontGlyphRangesBuilder* self,int n)$/;"	f
ImFontGlyphRangesBuilder_SetBit	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_SetBit(ImFontGlyphRangesBuilder* self,int n)$/;"	f
ImFontGlyphRangesBuilder_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_destroy(ImFontGlyphRangesBuilder* self)$/;"	f
ImFontGlyphRangesBuilder_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFontGlyphRangesBuilder_destroy(ImFontGlyphRangesBuilder* self)$/;"	f
ImFont_AddGlyph	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_AddGlyph(ImFont* self,ImWchar c,float x0,float y0,float x1,float y1,float u0,float v0,float u1,float v1,float advance_x)$/;"	f
ImFont_AddGlyph	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_AddGlyph(ImFont* self,ImWchar c,float x0,float y0,float x1,float y1,float u0,float v0,float u1,float v1,float advance_x)$/;"	f
ImFont_AddRemapChar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_AddRemapChar(ImFont* self,ImWchar dst,ImWchar src,bool overwrite_dst)$/;"	f
ImFont_AddRemapChar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_AddRemapChar(ImFont* self,ImWchar dst,ImWchar src,bool overwrite_dst)$/;"	f
ImFont_BuildLookupTable	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_BuildLookupTable(ImFont* self)$/;"	f
ImFont_BuildLookupTable	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_BuildLookupTable(ImFont* self)$/;"	f
ImFont_CalcTextSizeA	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 ImFont_CalcTextSizeA(ImFont* self,float size,float max_width,float wrap_width,const char* text_begin,const char* text_end,const char** remaining)$/;"	f
ImFont_CalcTextSizeA	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 ImFont_CalcTextSizeA(ImFont* self,float size,float max_width,float wrap_width,const char* text_begin,const char* text_end,const char** remaining)$/;"	f
ImFont_CalcTextSizeA_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_CalcTextSizeA_nonUDT(ImVec2 *pOut,ImFont* self,float size,float max_width,float wrap_width,const char* text_begin,const char* text_end,const char** remaining)$/;"	f
ImFont_CalcTextSizeA_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_CalcTextSizeA_nonUDT(ImVec2 *pOut,ImFont* self,float size,float max_width,float wrap_width,const char* text_begin,const char* text_end,const char** remaining)$/;"	f
ImFont_CalcTextSizeA_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple ImFont_CalcTextSizeA_nonUDT2(ImFont* self,float size,float max_width,float wrap_width,const char* text_begin,const char* text_end,const char** remaining)$/;"	f
ImFont_CalcTextSizeA_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple ImFont_CalcTextSizeA_nonUDT2(ImFont* self,float size,float max_width,float wrap_width,const char* text_begin,const char* text_end,const char** remaining)$/;"	f
ImFont_CalcWordWrapPositionA	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* ImFont_CalcWordWrapPositionA(ImFont* self,float scale,const char* text,const char* text_end,float wrap_width)$/;"	f
ImFont_CalcWordWrapPositionA	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* ImFont_CalcWordWrapPositionA(ImFont* self,float scale,const char* text,const char* text_end,float wrap_width)$/;"	f
ImFont_ClearOutputData	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_ClearOutputData(ImFont* self)$/;"	f
ImFont_ClearOutputData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_ClearOutputData(ImFont* self)$/;"	f
ImFont_FindGlyph	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImFontGlyph* ImFont_FindGlyph(ImFont* self,ImWchar c)$/;"	f
ImFont_FindGlyph	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImFontGlyph* ImFont_FindGlyph(ImFont* self,ImWchar c)$/;"	f
ImFont_FindGlyphNoFallback	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImFontGlyph* ImFont_FindGlyphNoFallback(ImFont* self,ImWchar c)$/;"	f
ImFont_FindGlyphNoFallback	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImFontGlyph* ImFont_FindGlyphNoFallback(ImFont* self,ImWchar c)$/;"	f
ImFont_GetCharAdvance	lib/cimgui/cimgui.cpp	/^CIMGUI_API float ImFont_GetCharAdvance(ImFont* self,ImWchar c)$/;"	f
ImFont_GetCharAdvance	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float ImFont_GetCharAdvance(ImFont* self,ImWchar c)$/;"	f
ImFont_GetDebugName	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* ImFont_GetDebugName(ImFont* self)$/;"	f
ImFont_GetDebugName	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* ImFont_GetDebugName(ImFont* self)$/;"	f
ImFont_GrowIndex	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_GrowIndex(ImFont* self,int new_size)$/;"	f
ImFont_GrowIndex	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_GrowIndex(ImFont* self,int new_size)$/;"	f
ImFont_ImFont	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* ImFont_ImFont(void)$/;"	f
ImFont_ImFont	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* ImFont_ImFont(void)$/;"	f
ImFont_IsLoaded	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImFont_IsLoaded(ImFont* self)$/;"	f
ImFont_IsLoaded	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImFont_IsLoaded(ImFont* self)$/;"	f
ImFont_RenderChar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_RenderChar(ImFont* self,ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,ImWchar c)$/;"	f
ImFont_RenderChar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_RenderChar(ImFont* self,ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,ImWchar c)$/;"	f
ImFont_RenderText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_RenderText(ImFont* self,ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,const ImVec4 clip_rect,const char* text_begin,const char* text_end,float wrap_width,bool cpu_fine_clip)$/;"	f
ImFont_RenderText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_RenderText(ImFont* self,ImDrawList* draw_list,float size,ImVec2 pos,ImU32 col,const ImVec4 clip_rect,const char* text_begin,const char* text_end,float wrap_width,bool cpu_fine_clip)$/;"	f
ImFont_SetFallbackChar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_SetFallbackChar(ImFont* self,ImWchar c)$/;"	f
ImFont_SetFallbackChar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_SetFallbackChar(ImFont* self,ImWchar c)$/;"	f
ImFont_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImFont_destroy(ImFont* self)$/;"	f
ImFont_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImFont_destroy(ImFont* self)$/;"	f
ImFormatString	lib/cimgui/imgui/imgui.cpp	/^int ImFormatString(char* buf, size_t buf_size, const char* fmt, ...)$/;"	f
ImFormatStringV	lib/cimgui/imgui/imgui.cpp	/^int ImFormatStringV(char* buf, size_t buf_size, const char* fmt, va_list args)$/;"	f
ImFreeTypeDefaultAllocFunc	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void* ImFreeTypeDefaultAllocFunc(size_t size, void* user_data)	{ IM_UNUSED(user_data); return IM_ALLOC(size); }$/;"	f	file:
ImFreeTypeDefaultFreeFunc	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^static void  ImFreeTypeDefaultFreeFunc(void* ptr, void* user_data)	    { IM_UNUSED(user_data); IM_FREE(ptr); }$/;"	f	file:
ImGetDirQuadrantFromDelta	lib/cimgui/imgui/imgui.cpp	/^ImGuiDir ImGetDirQuadrantFromDelta(float dx, float dy)$/;"	f
ImGui	lib/cimgui/imgui/imgui.cpp	/^namespace ImGui$/;"	n	file:
ImGui	lib/cimgui/imgui/imgui.h	/^namespace ImGui$/;"	n
ImGui	lib/cimgui/imgui/imgui_internal.h	/^namespace ImGui$/;"	n
ImGui	lib/cimgui/imgui/imgui_widgets.cpp	/^namespace ImGui$/;"	n	file:
ImGui	lib/cimgui/imgui/misc/cpp/imgui_stdlib.h	/^namespace ImGui$/;"	n
ImGuiAxis	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiAxis$/;"	g
ImGuiAxis_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiAxis_None = -1,$/;"	e	enum:ImGuiAxis
ImGuiAxis_X	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiAxis_X = 0,$/;"	e	enum:ImGuiAxis
ImGuiAxis_Y	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiAxis_Y = 1$/;"	e	enum:ImGuiAxis
ImGuiBackendFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiBackendFlags;$/;"	t
ImGuiBackendFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiBackendFlags;$/;"	t
ImGuiBackendFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiBackendFlags;      \/\/ -> enum ImGuiBackendFlags_    \/\/ Flags: for io.BackendFlags$/;"	t
ImGuiBackendFlags_	lib/cimgui/cimgui.h	/^}ImGuiBackendFlags_;$/;"	t	typeref:enum:__anon86
ImGuiBackendFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiBackendFlags_;$/;"	t	typeref:enum:__anon60
ImGuiBackendFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiBackendFlags_$/;"	g
ImGuiBackendFlags_HasGamepad	lib/cimgui/cimgui.h	/^    ImGuiBackendFlags_HasGamepad = 1 << 0,$/;"	e	enum:__anon86
ImGuiBackendFlags_HasGamepad	lib/cimgui/generator/output/cimgui.h	/^    ImGuiBackendFlags_HasGamepad = 1 << 0,$/;"	e	enum:__anon60
ImGuiBackendFlags_HasGamepad	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_HasGamepad            = 1 << 0,   \/\/ Back-end Platform supports gamepad and currently has one connected.$/;"	e	enum:ImGuiBackendFlags_
ImGuiBackendFlags_HasMouseCursors	lib/cimgui/cimgui.h	/^    ImGuiBackendFlags_HasMouseCursors = 1 << 1,$/;"	e	enum:__anon86
ImGuiBackendFlags_HasMouseCursors	lib/cimgui/generator/output/cimgui.h	/^    ImGuiBackendFlags_HasMouseCursors = 1 << 1,$/;"	e	enum:__anon60
ImGuiBackendFlags_HasMouseCursors	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_HasMouseCursors       = 1 << 1,   \/\/ Back-end Platform supports honoring GetMouseCursor() value to change the OS cursor shape.$/;"	e	enum:ImGuiBackendFlags_
ImGuiBackendFlags_HasSetMousePos	lib/cimgui/cimgui.h	/^    ImGuiBackendFlags_HasSetMousePos = 1 << 2,$/;"	e	enum:__anon86
ImGuiBackendFlags_HasSetMousePos	lib/cimgui/generator/output/cimgui.h	/^    ImGuiBackendFlags_HasSetMousePos = 1 << 2,$/;"	e	enum:__anon60
ImGuiBackendFlags_HasSetMousePos	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_HasSetMousePos        = 1 << 2,   \/\/ Back-end Platform supports io.WantSetMousePos requests to reposition the OS mouse position (only used if ImGuiConfigFlags_NavEnableSetMousePos is set).$/;"	e	enum:ImGuiBackendFlags_
ImGuiBackendFlags_None	lib/cimgui/cimgui.h	/^    ImGuiBackendFlags_None = 0,$/;"	e	enum:__anon86
ImGuiBackendFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiBackendFlags_None = 0,$/;"	e	enum:__anon60
ImGuiBackendFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_None                  = 0,$/;"	e	enum:ImGuiBackendFlags_
ImGuiBackendFlags_RendererHasVtxOffset	lib/cimgui/cimgui.h	/^    ImGuiBackendFlags_RendererHasVtxOffset = 1 << 3$/;"	e	enum:__anon86
ImGuiBackendFlags_RendererHasVtxOffset	lib/cimgui/generator/output/cimgui.h	/^    ImGuiBackendFlags_RendererHasVtxOffset = 1 << 3$/;"	e	enum:__anon60
ImGuiBackendFlags_RendererHasVtxOffset	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_RendererHasVtxOffset  = 1 << 3    \/\/ Back-end Renderer supports ImDrawCmd::VtxOffset. This enables output of large meshes (64K+ vertices) while still using 16-bit indices.$/;"	e	enum:ImGuiBackendFlags_
ImGuiButtonFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiButtonFlags;           \/\/ -> enum ImGuiButtonFlags_        \/\/ Flags: for ButtonEx(), ButtonBehavior()$/;"	t
ImGuiButtonFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiButtonFlags_$/;"	g
ImGuiButtonFlags_AlignTextBaseLine	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_AlignTextBaseLine      = 1 << 11,  \/\/ vertically align button to match text baseline - ButtonEx() only \/\/ FIXME: Should be removed and handled by SmallButton(), not possible currently because of DC.CursorPosPrevLine$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_AllowItemOverlap	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_AllowItemOverlap       = 1 << 8,   \/\/ require previous frame HoveredId to either match id or be null before being usable, use along with SetItemAllowOverlap()$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_Disabled	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_Disabled               = 1 << 10,  \/\/ disable interactions$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_DontClosePopups	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_DontClosePopups        = 1 << 9,   \/\/ disable automatically closing parent popup on press \/\/ [UNUSED]$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_FlattenChildren	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_FlattenChildren        = 1 << 7,   \/\/ allow interactions even if a child window is overlapping$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_MouseButtonDefault_	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_MouseButtonDefault_    = ImGuiButtonFlags_MouseButtonLeft,$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_MouseButtonLeft	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_MouseButtonLeft        = 1 << 16,  \/\/ [Default] react on left mouse button$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_MouseButtonMask_	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_MouseButtonMask_       = ImGuiButtonFlags_MouseButtonLeft | ImGuiButtonFlags_MouseButtonRight | ImGuiButtonFlags_MouseButtonMiddle,$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_MouseButtonMiddle	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_MouseButtonMiddle      = 1 << 18,  \/\/ react on center mouse button$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_MouseButtonRight	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_MouseButtonRight       = 1 << 17,  \/\/ react on right mouse button$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_MouseButtonShift_	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_MouseButtonShift_      = 16,$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoHoldingActiveId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoHoldingActiveId      = 1 << 13,  \/\/ don't set ActiveId while holding the mouse (ImGuiButtonFlags_PressedOnClick only)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoHoveredOnNav	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoHoveredOnNav         = 1 << 15,  \/\/ don't report as hovered when navigated on$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoKeyModifiers	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoKeyModifiers         = 1 << 12,  \/\/ disable mouse interaction if a key modifier is held$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoNavFocus	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoNavFocus             = 1 << 14,  \/\/ don't override navigation focus when activated$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_None                   = 0,$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnClick	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnClick         = 1 << 1,   \/\/ return true on click (mouse down event)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnClickRelease	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnClickRelease  = 1 << 2,   \/\/ [Default] return true on click + release on same item <-- this is what the majority of Button are using$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnClickReleaseAnywhere	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnClickReleaseAnywhere = 1 << 3, \/\/ return true on click + release even if the release event is not done while hovering the item$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnDefault_	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnDefault_      = ImGuiButtonFlags_PressedOnClickRelease$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnDoubleClick	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnDoubleClick   = 1 << 5,   \/\/ return true on double-click (default requires click+release)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnDragDropHold	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnDragDropHold  = 1 << 6,   \/\/ return true when held into while we are drag and dropping another item (used by e.g. tree nodes, collapsing headers)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnMask_	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnMask_         = ImGuiButtonFlags_PressedOnClick | ImGuiButtonFlags_PressedOnClickRelease | ImGuiButtonFlags_PressedOnClickReleaseAnywhere | ImGuiButtonFlags_PressedOnRelease | ImGuiButtonFlags_PressedOnDoubleClick | ImGuiButtonFlags_PressedOnDragDropHold,$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnRelease	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnRelease       = 1 << 4,   \/\/ return true on release (default requires click+release)$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_Repeat	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_Repeat                 = 1 << 0,   \/\/ hold to repeat$/;"	e	enum:ImGuiButtonFlags_
ImGuiCol	lib/cimgui/cimgui.h	/^typedef int ImGuiCol;$/;"	t
ImGuiCol	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiCol;$/;"	t
ImGuiCol	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiCol;               \/\/ -> enum ImGuiCol_             \/\/ Enum: A color identifier for styling$/;"	t
ImGuiCol_	lib/cimgui/cimgui.h	/^}ImGuiCol_;$/;"	t	typeref:enum:__anon87
ImGuiCol_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiCol_;$/;"	t	typeref:enum:__anon61
ImGuiCol_	lib/cimgui/imgui/imgui.h	/^enum ImGuiCol_$/;"	g
ImGuiCol_Border	lib/cimgui/cimgui.h	/^    ImGuiCol_Border,$/;"	e	enum:__anon87
ImGuiCol_Border	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_Border,$/;"	e	enum:__anon61
ImGuiCol_Border	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Border,$/;"	e	enum:ImGuiCol_
ImGuiCol_BorderShadow	lib/cimgui/cimgui.h	/^    ImGuiCol_BorderShadow,$/;"	e	enum:__anon87
ImGuiCol_BorderShadow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_BorderShadow,$/;"	e	enum:__anon61
ImGuiCol_BorderShadow	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_BorderShadow,$/;"	e	enum:ImGuiCol_
ImGuiCol_Button	lib/cimgui/cimgui.h	/^    ImGuiCol_Button,$/;"	e	enum:__anon87
ImGuiCol_Button	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_Button,$/;"	e	enum:__anon61
ImGuiCol_Button	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Button,$/;"	e	enum:ImGuiCol_
ImGuiCol_ButtonActive	lib/cimgui/cimgui.h	/^    ImGuiCol_ButtonActive,$/;"	e	enum:__anon87
ImGuiCol_ButtonActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ButtonActive,$/;"	e	enum:__anon61
ImGuiCol_ButtonActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ButtonActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ButtonHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_ButtonHovered,$/;"	e	enum:__anon87
ImGuiCol_ButtonHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ButtonHovered,$/;"	e	enum:__anon61
ImGuiCol_ButtonHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ButtonHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_COUNT	lib/cimgui/cimgui.h	/^    ImGuiCol_COUNT$/;"	e	enum:__anon87
ImGuiCol_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_COUNT$/;"	e	enum:__anon61
ImGuiCol_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_COUNT$/;"	e	enum:ImGuiCol_
ImGuiCol_CheckMark	lib/cimgui/cimgui.h	/^    ImGuiCol_CheckMark,$/;"	e	enum:__anon87
ImGuiCol_CheckMark	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_CheckMark,$/;"	e	enum:__anon61
ImGuiCol_CheckMark	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_CheckMark,$/;"	e	enum:ImGuiCol_
ImGuiCol_ChildBg	lib/cimgui/cimgui.h	/^    ImGuiCol_ChildBg,$/;"	e	enum:__anon87
ImGuiCol_ChildBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ChildBg,$/;"	e	enum:__anon61
ImGuiCol_ChildBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ChildBg,               \/\/ Background of child windows$/;"	e	enum:ImGuiCol_
ImGuiCol_DragDropTarget	lib/cimgui/cimgui.h	/^    ImGuiCol_DragDropTarget,$/;"	e	enum:__anon87
ImGuiCol_DragDropTarget	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_DragDropTarget,$/;"	e	enum:__anon61
ImGuiCol_DragDropTarget	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_DragDropTarget,$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBg	lib/cimgui/cimgui.h	/^    ImGuiCol_FrameBg,$/;"	e	enum:__anon87
ImGuiCol_FrameBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_FrameBg,$/;"	e	enum:__anon61
ImGuiCol_FrameBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_FrameBg,               \/\/ Background of checkbox, radio button, plot, slider, text input$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBgActive	lib/cimgui/cimgui.h	/^    ImGuiCol_FrameBgActive,$/;"	e	enum:__anon87
ImGuiCol_FrameBgActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_FrameBgActive,$/;"	e	enum:__anon61
ImGuiCol_FrameBgActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_FrameBgActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBgHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_FrameBgHovered,$/;"	e	enum:__anon87
ImGuiCol_FrameBgHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_FrameBgHovered,$/;"	e	enum:__anon61
ImGuiCol_FrameBgHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_FrameBgHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_Header	lib/cimgui/cimgui.h	/^    ImGuiCol_Header,$/;"	e	enum:__anon87
ImGuiCol_Header	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_Header,$/;"	e	enum:__anon61
ImGuiCol_Header	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Header,                \/\/ Header* colors are used for CollapsingHeader, TreeNode, Selectable, MenuItem$/;"	e	enum:ImGuiCol_
ImGuiCol_HeaderActive	lib/cimgui/cimgui.h	/^    ImGuiCol_HeaderActive,$/;"	e	enum:__anon87
ImGuiCol_HeaderActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_HeaderActive,$/;"	e	enum:__anon61
ImGuiCol_HeaderActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_HeaderActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_HeaderHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_HeaderHovered,$/;"	e	enum:__anon87
ImGuiCol_HeaderHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_HeaderHovered,$/;"	e	enum:__anon61
ImGuiCol_HeaderHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_HeaderHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_MenuBarBg	lib/cimgui/cimgui.h	/^    ImGuiCol_MenuBarBg,$/;"	e	enum:__anon87
ImGuiCol_MenuBarBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_MenuBarBg,$/;"	e	enum:__anon61
ImGuiCol_MenuBarBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_MenuBarBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_ModalWindowDarkening	lib/cimgui/imgui/imgui.h	/^    , ImGuiCol_ModalWindowDarkening = ImGuiCol_ModalWindowDimBg                      \/\/ [renamed in 1.63]$/;"	e	enum:ImGuiCol_
ImGuiCol_ModalWindowDimBg	lib/cimgui/cimgui.h	/^    ImGuiCol_ModalWindowDimBg,$/;"	e	enum:__anon87
ImGuiCol_ModalWindowDimBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ModalWindowDimBg,$/;"	e	enum:__anon61
ImGuiCol_ModalWindowDimBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ModalWindowDimBg,      \/\/ Darken\/colorize entire screen behind a modal window, when one is active$/;"	e	enum:ImGuiCol_
ImGuiCol_NavHighlight	lib/cimgui/cimgui.h	/^    ImGuiCol_NavHighlight,$/;"	e	enum:__anon87
ImGuiCol_NavHighlight	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_NavHighlight,$/;"	e	enum:__anon61
ImGuiCol_NavHighlight	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_NavHighlight,          \/\/ Gamepad\/keyboard: current highlighted item$/;"	e	enum:ImGuiCol_
ImGuiCol_NavWindowingDimBg	lib/cimgui/cimgui.h	/^    ImGuiCol_NavWindowingDimBg,$/;"	e	enum:__anon87
ImGuiCol_NavWindowingDimBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_NavWindowingDimBg,$/;"	e	enum:__anon61
ImGuiCol_NavWindowingDimBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_NavWindowingDimBg,     \/\/ Darken\/colorize entire screen behind the CTRL+TAB window list, when active$/;"	e	enum:ImGuiCol_
ImGuiCol_NavWindowingHighlight	lib/cimgui/cimgui.h	/^    ImGuiCol_NavWindowingHighlight,$/;"	e	enum:__anon87
ImGuiCol_NavWindowingHighlight	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_NavWindowingHighlight,$/;"	e	enum:__anon61
ImGuiCol_NavWindowingHighlight	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_NavWindowingHighlight, \/\/ Highlight window when using CTRL+TAB$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotHistogram	lib/cimgui/cimgui.h	/^    ImGuiCol_PlotHistogram,$/;"	e	enum:__anon87
ImGuiCol_PlotHistogram	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_PlotHistogram,$/;"	e	enum:__anon61
ImGuiCol_PlotHistogram	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotHistogram,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotHistogramHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_PlotHistogramHovered,$/;"	e	enum:__anon87
ImGuiCol_PlotHistogramHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_PlotHistogramHovered,$/;"	e	enum:__anon61
ImGuiCol_PlotHistogramHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotHistogramHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotLines	lib/cimgui/cimgui.h	/^    ImGuiCol_PlotLines,$/;"	e	enum:__anon87
ImGuiCol_PlotLines	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_PlotLines,$/;"	e	enum:__anon61
ImGuiCol_PlotLines	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotLines,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotLinesHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_PlotLinesHovered,$/;"	e	enum:__anon87
ImGuiCol_PlotLinesHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_PlotLinesHovered,$/;"	e	enum:__anon61
ImGuiCol_PlotLinesHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotLinesHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_PopupBg	lib/cimgui/cimgui.h	/^    ImGuiCol_PopupBg,$/;"	e	enum:__anon87
ImGuiCol_PopupBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_PopupBg,$/;"	e	enum:__anon61
ImGuiCol_PopupBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PopupBg,               \/\/ Background of popups, menus, tooltips windows$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGrip	lib/cimgui/cimgui.h	/^    ImGuiCol_ResizeGrip,$/;"	e	enum:__anon87
ImGuiCol_ResizeGrip	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ResizeGrip,$/;"	e	enum:__anon61
ImGuiCol_ResizeGrip	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ResizeGrip,$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGripActive	lib/cimgui/cimgui.h	/^    ImGuiCol_ResizeGripActive,$/;"	e	enum:__anon87
ImGuiCol_ResizeGripActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ResizeGripActive,$/;"	e	enum:__anon61
ImGuiCol_ResizeGripActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ResizeGripActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGripHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_ResizeGripHovered,$/;"	e	enum:__anon87
ImGuiCol_ResizeGripHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ResizeGripHovered,$/;"	e	enum:__anon61
ImGuiCol_ResizeGripHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ResizeGripHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarBg	lib/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarBg,$/;"	e	enum:__anon87
ImGuiCol_ScrollbarBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ScrollbarBg,$/;"	e	enum:__anon61
ImGuiCol_ScrollbarBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrab	lib/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarGrab,$/;"	e	enum:__anon87
ImGuiCol_ScrollbarGrab	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ScrollbarGrab,$/;"	e	enum:__anon61
ImGuiCol_ScrollbarGrab	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrab,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrabActive	lib/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarGrabActive,$/;"	e	enum:__anon87
ImGuiCol_ScrollbarGrabActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ScrollbarGrabActive,$/;"	e	enum:__anon61
ImGuiCol_ScrollbarGrabActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrabActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrabHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarGrabHovered,$/;"	e	enum:__anon87
ImGuiCol_ScrollbarGrabHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_ScrollbarGrabHovered,$/;"	e	enum:__anon61
ImGuiCol_ScrollbarGrabHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrabHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_Separator	lib/cimgui/cimgui.h	/^    ImGuiCol_Separator,$/;"	e	enum:__anon87
ImGuiCol_Separator	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_Separator,$/;"	e	enum:__anon61
ImGuiCol_Separator	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Separator,$/;"	e	enum:ImGuiCol_
ImGuiCol_SeparatorActive	lib/cimgui/cimgui.h	/^    ImGuiCol_SeparatorActive,$/;"	e	enum:__anon87
ImGuiCol_SeparatorActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_SeparatorActive,$/;"	e	enum:__anon61
ImGuiCol_SeparatorActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SeparatorActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_SeparatorHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_SeparatorHovered,$/;"	e	enum:__anon87
ImGuiCol_SeparatorHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_SeparatorHovered,$/;"	e	enum:__anon61
ImGuiCol_SeparatorHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SeparatorHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_SliderGrab	lib/cimgui/cimgui.h	/^    ImGuiCol_SliderGrab,$/;"	e	enum:__anon87
ImGuiCol_SliderGrab	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_SliderGrab,$/;"	e	enum:__anon61
ImGuiCol_SliderGrab	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SliderGrab,$/;"	e	enum:ImGuiCol_
ImGuiCol_SliderGrabActive	lib/cimgui/cimgui.h	/^    ImGuiCol_SliderGrabActive,$/;"	e	enum:__anon87
ImGuiCol_SliderGrabActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_SliderGrabActive,$/;"	e	enum:__anon61
ImGuiCol_SliderGrabActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SliderGrabActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_Tab	lib/cimgui/cimgui.h	/^    ImGuiCol_Tab,$/;"	e	enum:__anon87
ImGuiCol_Tab	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_Tab,$/;"	e	enum:__anon61
ImGuiCol_Tab	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Tab,$/;"	e	enum:ImGuiCol_
ImGuiCol_TabActive	lib/cimgui/cimgui.h	/^    ImGuiCol_TabActive,$/;"	e	enum:__anon87
ImGuiCol_TabActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TabActive,$/;"	e	enum:__anon61
ImGuiCol_TabActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TabActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_TabHovered	lib/cimgui/cimgui.h	/^    ImGuiCol_TabHovered,$/;"	e	enum:__anon87
ImGuiCol_TabHovered	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TabHovered,$/;"	e	enum:__anon61
ImGuiCol_TabHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TabHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_TabUnfocused	lib/cimgui/cimgui.h	/^    ImGuiCol_TabUnfocused,$/;"	e	enum:__anon87
ImGuiCol_TabUnfocused	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TabUnfocused,$/;"	e	enum:__anon61
ImGuiCol_TabUnfocused	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TabUnfocused,$/;"	e	enum:ImGuiCol_
ImGuiCol_TabUnfocusedActive	lib/cimgui/cimgui.h	/^    ImGuiCol_TabUnfocusedActive,$/;"	e	enum:__anon87
ImGuiCol_TabUnfocusedActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TabUnfocusedActive,$/;"	e	enum:__anon61
ImGuiCol_TabUnfocusedActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TabUnfocusedActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_Text	lib/cimgui/cimgui.h	/^    ImGuiCol_Text,$/;"	e	enum:__anon87
ImGuiCol_Text	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_Text,$/;"	e	enum:__anon61
ImGuiCol_Text	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Text,$/;"	e	enum:ImGuiCol_
ImGuiCol_TextDisabled	lib/cimgui/cimgui.h	/^    ImGuiCol_TextDisabled,$/;"	e	enum:__anon87
ImGuiCol_TextDisabled	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TextDisabled,$/;"	e	enum:__anon61
ImGuiCol_TextDisabled	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TextDisabled,$/;"	e	enum:ImGuiCol_
ImGuiCol_TextSelectedBg	lib/cimgui/cimgui.h	/^    ImGuiCol_TextSelectedBg,$/;"	e	enum:__anon87
ImGuiCol_TextSelectedBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TextSelectedBg,$/;"	e	enum:__anon61
ImGuiCol_TextSelectedBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TextSelectedBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBg	lib/cimgui/cimgui.h	/^    ImGuiCol_TitleBg,$/;"	e	enum:__anon87
ImGuiCol_TitleBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TitleBg,$/;"	e	enum:__anon61
ImGuiCol_TitleBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TitleBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBgActive	lib/cimgui/cimgui.h	/^    ImGuiCol_TitleBgActive,$/;"	e	enum:__anon87
ImGuiCol_TitleBgActive	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TitleBgActive,$/;"	e	enum:__anon61
ImGuiCol_TitleBgActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TitleBgActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBgCollapsed	lib/cimgui/cimgui.h	/^    ImGuiCol_TitleBgCollapsed,$/;"	e	enum:__anon87
ImGuiCol_TitleBgCollapsed	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_TitleBgCollapsed,$/;"	e	enum:__anon61
ImGuiCol_TitleBgCollapsed	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TitleBgCollapsed,$/;"	e	enum:ImGuiCol_
ImGuiCol_WindowBg	lib/cimgui/cimgui.h	/^    ImGuiCol_WindowBg,$/;"	e	enum:__anon87
ImGuiCol_WindowBg	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCol_WindowBg,$/;"	e	enum:__anon61
ImGuiCol_WindowBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_WindowBg,              \/\/ Background of normal windows$/;"	e	enum:ImGuiCol_
ImGuiColorEditFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiColorEditFlags;$/;"	t
ImGuiColorEditFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiColorEditFlags;$/;"	t
ImGuiColorEditFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiColorEditFlags;    \/\/ -> enum ImGuiColorEditFlags_  \/\/ Flags: for ColorEdit4(), ColorPicker4() etc.$/;"	t
ImGuiColorEditFlags_	lib/cimgui/cimgui.h	/^}ImGuiColorEditFlags_;$/;"	t	typeref:enum:__anon89
ImGuiColorEditFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiColorEditFlags_;$/;"	t	typeref:enum:__anon63
ImGuiColorEditFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiColorEditFlags_$/;"	g
ImGuiColorEditFlags_AlphaBar	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_AlphaBar = 1 << 16,$/;"	e	enum:__anon89
ImGuiColorEditFlags_AlphaBar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_AlphaBar = 1 << 16,$/;"	e	enum:__anon63
ImGuiColorEditFlags_AlphaBar	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_AlphaBar        = 1 << 16,  \/\/              \/\/ ColorEdit, ColorPicker: show vertical alpha bar\/gradient in picker.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_AlphaPreview	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_AlphaPreview = 1 << 17,$/;"	e	enum:__anon89
ImGuiColorEditFlags_AlphaPreview	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_AlphaPreview = 1 << 17,$/;"	e	enum:__anon63
ImGuiColorEditFlags_AlphaPreview	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_AlphaPreview    = 1 << 17,  \/\/              \/\/ ColorEdit, ColorPicker, ColorButton: display preview as a transparent color over a checkerboard, instead of opaque.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_AlphaPreviewHalf	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_AlphaPreviewHalf= 1 << 18,$/;"	e	enum:__anon89
ImGuiColorEditFlags_AlphaPreviewHalf	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_AlphaPreviewHalf= 1 << 18,$/;"	e	enum:__anon63
ImGuiColorEditFlags_AlphaPreviewHalf	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_AlphaPreviewHalf= 1 << 18,  \/\/              \/\/ ColorEdit, ColorPicker, ColorButton: display half opaque \/ half checkerboard, instead of opaque.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_DisplayHSV	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_DisplayHSV = 1 << 21,$/;"	e	enum:__anon89
ImGuiColorEditFlags_DisplayHSV	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_DisplayHSV = 1 << 21,$/;"	e	enum:__anon63
ImGuiColorEditFlags_DisplayHSV	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_DisplayHSV      = 1 << 21,  \/\/ [Display]    \/\/ "$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_DisplayHex	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_DisplayHex = 1 << 22,$/;"	e	enum:__anon89
ImGuiColorEditFlags_DisplayHex	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_DisplayHex = 1 << 22,$/;"	e	enum:__anon63
ImGuiColorEditFlags_DisplayHex	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_DisplayHex      = 1 << 22,  \/\/ [Display]    \/\/ "$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_DisplayRGB	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_DisplayRGB = 1 << 20,$/;"	e	enum:__anon89
ImGuiColorEditFlags_DisplayRGB	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_DisplayRGB = 1 << 20,$/;"	e	enum:__anon63
ImGuiColorEditFlags_DisplayRGB	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_DisplayRGB      = 1 << 20,  \/\/ [Display]    \/\/ ColorEdit: override _display_ type among RGB\/HSV\/Hex. ColorPicker: select any combination using one or more of RGB\/HSV\/Hex.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_Float	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_Float = 1 << 24,$/;"	e	enum:__anon89
ImGuiColorEditFlags_Float	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_Float = 1 << 24,$/;"	e	enum:__anon63
ImGuiColorEditFlags_Float	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_Float           = 1 << 24,  \/\/ [DataType]   \/\/ ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0.0f..1.0f floats instead of 0..255 integers. No round-trip of value via integers.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_HDR	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_HDR = 1 << 19,$/;"	e	enum:__anon89
ImGuiColorEditFlags_HDR	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_HDR = 1 << 19,$/;"	e	enum:__anon63
ImGuiColorEditFlags_HDR	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_HDR             = 1 << 19,  \/\/              \/\/ (WIP) ColorEdit: Currently only disable 0.0f..1.0f limits in RGBA edition (note: you probably want to use ImGuiColorEditFlags_Float flag as well).$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_HEX	lib/cimgui/imgui/imgui.h	/^    , ImGuiColorEditFlags_RGB = ImGuiColorEditFlags_DisplayRGB, ImGuiColorEditFlags_HSV = ImGuiColorEditFlags_DisplayHSV, ImGuiColorEditFlags_HEX = ImGuiColorEditFlags_DisplayHex  \/\/ [renamed in 1.69]$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_HSV	lib/cimgui/imgui/imgui.h	/^    , ImGuiColorEditFlags_RGB = ImGuiColorEditFlags_DisplayRGB, ImGuiColorEditFlags_HSV = ImGuiColorEditFlags_DisplayHSV, ImGuiColorEditFlags_HEX = ImGuiColorEditFlags_DisplayHex  \/\/ [renamed in 1.69]$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_InputHSV	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_InputHSV = 1 << 28,$/;"	e	enum:__anon89
ImGuiColorEditFlags_InputHSV	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_InputHSV = 1 << 28,$/;"	e	enum:__anon63
ImGuiColorEditFlags_InputHSV	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_InputHSV        = 1 << 28,  \/\/ [Input]      \/\/ ColorEdit, ColorPicker: input and output data in HSV format.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_InputRGB	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_InputRGB = 1 << 27,$/;"	e	enum:__anon89
ImGuiColorEditFlags_InputRGB	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_InputRGB = 1 << 27,$/;"	e	enum:__anon63
ImGuiColorEditFlags_InputRGB	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_InputRGB        = 1 << 27,  \/\/ [Input]      \/\/ ColorEdit, ColorPicker: input and output data in RGB format.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoAlpha	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoAlpha = 1 << 1,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoAlpha	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoAlpha = 1 << 1,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoAlpha	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoAlpha         = 1 << 1,   \/\/              \/\/ ColorEdit, ColorPicker, ColorButton: ignore Alpha component (will only read 3 components from the input pointer).$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoBorder	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoBorder        = 1 << 10,  \/\/              \/\/ ColorButton: disable border (which is enforced by default)$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoDragDrop	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoDragDrop = 1 << 9,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoDragDrop	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoDragDrop = 1 << 9,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoDragDrop	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoDragDrop      = 1 << 9,   \/\/              \/\/ ColorEdit: disable drag and drop target. ColorButton: disable drag and drop source.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoInputs	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoInputs = 1 << 5,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoInputs	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoInputs = 1 << 5,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoInputs	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoInputs        = 1 << 5,   \/\/              \/\/ ColorEdit, ColorPicker: disable inputs sliders\/text widgets (e.g. to show only the small preview colored square).$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoLabel	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoLabel = 1 << 7,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoLabel	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoLabel = 1 << 7,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoLabel	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoLabel         = 1 << 7,   \/\/              \/\/ ColorEdit, ColorPicker: disable display of inline text label (the label is still forwarded to the tooltip and picker).$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoOptions	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoOptions = 1 << 3,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoOptions	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoOptions = 1 << 3,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoOptions	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoOptions       = 1 << 3,   \/\/              \/\/ ColorEdit: disable toggling options menu when right-clicking on inputs\/small preview.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoPicker	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoPicker = 1 << 2,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoPicker	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoPicker = 1 << 2,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoPicker	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoPicker        = 1 << 2,   \/\/              \/\/ ColorEdit: disable picker when clicking on colored square.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoSidePreview	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoSidePreview = 1 << 8,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoSidePreview	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoSidePreview = 1 << 8,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoSidePreview	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoSidePreview   = 1 << 8,   \/\/              \/\/ ColorPicker: disable bigger color preview on right side of the picker, use small colored square preview instead.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoSmallPreview	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoSmallPreview = 1 << 4,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoSmallPreview	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoSmallPreview = 1 << 4,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoSmallPreview	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoSmallPreview  = 1 << 4,   \/\/              \/\/ ColorEdit, ColorPicker: disable colored square preview next to the inputs. (e.g. to show only the inputs)$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoTooltip	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoTooltip = 1 << 6,$/;"	e	enum:__anon89
ImGuiColorEditFlags_NoTooltip	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_NoTooltip = 1 << 6,$/;"	e	enum:__anon63
ImGuiColorEditFlags_NoTooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoTooltip       = 1 << 6,   \/\/              \/\/ ColorEdit, ColorPicker, ColorButton: disable tooltip when hovering the preview.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_None	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_None = 0,$/;"	e	enum:__anon89
ImGuiColorEditFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_None = 0,$/;"	e	enum:__anon63
ImGuiColorEditFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_None            = 0,$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_PickerHueBar	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_PickerHueBar = 1 << 25,$/;"	e	enum:__anon89
ImGuiColorEditFlags_PickerHueBar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_PickerHueBar = 1 << 25,$/;"	e	enum:__anon63
ImGuiColorEditFlags_PickerHueBar	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_PickerHueBar    = 1 << 25,  \/\/ [Picker]     \/\/ ColorPicker: bar for Hue, rectangle for Sat\/Value.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_PickerHueWheel	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_PickerHueWheel = 1 << 26,$/;"	e	enum:__anon89
ImGuiColorEditFlags_PickerHueWheel	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_PickerHueWheel = 1 << 26,$/;"	e	enum:__anon63
ImGuiColorEditFlags_PickerHueWheel	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_PickerHueWheel  = 1 << 26,  \/\/ [Picker]     \/\/ ColorPicker: wheel for Hue, triangle for Sat\/Value.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_RGB	lib/cimgui/imgui/imgui.h	/^    , ImGuiColorEditFlags_RGB = ImGuiColorEditFlags_DisplayRGB, ImGuiColorEditFlags_HSV = ImGuiColorEditFlags_DisplayHSV, ImGuiColorEditFlags_HEX = ImGuiColorEditFlags_DisplayHex  \/\/ [renamed in 1.69]$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_Uint8	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags_Uint8 = 1 << 23,$/;"	e	enum:__anon89
ImGuiColorEditFlags_Uint8	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags_Uint8 = 1 << 23,$/;"	e	enum:__anon63
ImGuiColorEditFlags_Uint8	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_Uint8           = 1 << 23,  \/\/ [DataType]   \/\/ ColorEdit, ColorPicker, ColorButton: _display_ values formatted as 0..255.$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__DataTypeMask	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags__DataTypeMask = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_Float,$/;"	e	enum:__anon89
ImGuiColorEditFlags__DataTypeMask	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags__DataTypeMask = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_Float,$/;"	e	enum:__anon63
ImGuiColorEditFlags__DataTypeMask	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__DataTypeMask   = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_Float,$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__DisplayMask	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags__DisplayMask = ImGuiColorEditFlags_DisplayRGB|ImGuiColorEditFlags_DisplayHSV|ImGuiColorEditFlags_DisplayHex,$/;"	e	enum:__anon89
ImGuiColorEditFlags__DisplayMask	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags__DisplayMask = ImGuiColorEditFlags_DisplayRGB|ImGuiColorEditFlags_DisplayHSV|ImGuiColorEditFlags_DisplayHex,$/;"	e	enum:__anon63
ImGuiColorEditFlags__DisplayMask	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__DisplayMask    = ImGuiColorEditFlags_DisplayRGB|ImGuiColorEditFlags_DisplayHSV|ImGuiColorEditFlags_DisplayHex,$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__InputMask	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags__InputMask = ImGuiColorEditFlags_InputRGB|ImGuiColorEditFlags_InputHSV$/;"	e	enum:__anon89
ImGuiColorEditFlags__InputMask	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags__InputMask = ImGuiColorEditFlags_InputRGB|ImGuiColorEditFlags_InputHSV$/;"	e	enum:__anon63
ImGuiColorEditFlags__InputMask	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__InputMask      = ImGuiColorEditFlags_InputRGB|ImGuiColorEditFlags_InputHSV$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__OptionsDefault	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags__OptionsDefault = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_DisplayRGB|ImGuiColorEditFlags_InputRGB|ImGuiColorEditFlags_PickerHueBar,$/;"	e	enum:__anon89
ImGuiColorEditFlags__OptionsDefault	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags__OptionsDefault = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_DisplayRGB|ImGuiColorEditFlags_InputRGB|ImGuiColorEditFlags_PickerHueBar,$/;"	e	enum:__anon63
ImGuiColorEditFlags__OptionsDefault	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__OptionsDefault = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_DisplayRGB|ImGuiColorEditFlags_InputRGB|ImGuiColorEditFlags_PickerHueBar,$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__PickerMask	lib/cimgui/cimgui.h	/^    ImGuiColorEditFlags__PickerMask = ImGuiColorEditFlags_PickerHueWheel|ImGuiColorEditFlags_PickerHueBar,$/;"	e	enum:__anon89
ImGuiColorEditFlags__PickerMask	lib/cimgui/generator/output/cimgui.h	/^    ImGuiColorEditFlags__PickerMask = ImGuiColorEditFlags_PickerHueWheel|ImGuiColorEditFlags_PickerHueBar,$/;"	e	enum:__anon63
ImGuiColorEditFlags__PickerMask	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__PickerMask     = ImGuiColorEditFlags_PickerHueWheel|ImGuiColorEditFlags_PickerHueBar,$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorMod	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiColorMod$/;"	s
ImGuiColumnData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnData()   { OffsetNorm = OffsetNormBeforeResize = 0.0f; Flags = ImGuiColumnsFlags_None; }$/;"	f	struct:ImGuiColumnData
ImGuiColumnData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiColumnData$/;"	s
ImGuiColumns	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumns()      { Clear(); }$/;"	f	struct:ImGuiColumns
ImGuiColumns	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiColumns$/;"	s
ImGuiColumnsFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiColumnsFlags;          \/\/ -> enum ImGuiColumnsFlags_       \/\/ Flags: BeginColumns()$/;"	t
ImGuiColumnsFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiColumnsFlags_$/;"	g
ImGuiColumnsFlags_GrowParentContentsSize	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_GrowParentContentsSize= 1 << 4    \/\/ (WIP) Restore pre-1.51 behavior of extending the parent window contents size but _without affecting the columns width at all_. Will eventually remove.$/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoBorder	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoBorder              = 1 << 0,   \/\/ Disable column dividers$/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoForceWithinWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoForceWithinWindow   = 1 << 3,   \/\/ Disable forcing columns to fit within window$/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoPreserveWidths	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoPreserveWidths      = 1 << 2,   \/\/ Disable column width preservation when adjusting columns$/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoResize	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoResize              = 1 << 1,   \/\/ Disable resizing columns when clicking on the dividers$/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_None                  = 0,$/;"	e	enum:ImGuiColumnsFlags_
ImGuiComboFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiComboFlags;$/;"	t
ImGuiComboFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiComboFlags;$/;"	t
ImGuiComboFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiComboFlags;        \/\/ -> enum ImGuiComboFlags_      \/\/ Flags: for BeginCombo()$/;"	t
ImGuiComboFlags_	lib/cimgui/cimgui.h	/^}ImGuiComboFlags_;$/;"	t	typeref:enum:__anon75
ImGuiComboFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiComboFlags_;$/;"	t	typeref:enum:__anon49
ImGuiComboFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiComboFlags_$/;"	g
ImGuiComboFlags_HeightLarge	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightLarge = 1 << 3,$/;"	e	enum:__anon75
ImGuiComboFlags_HeightLarge	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_HeightLarge = 1 << 3,$/;"	e	enum:__anon49
ImGuiComboFlags_HeightLarge	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightLarge             = 1 << 3,   \/\/ Max ~20 items visible$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightLargest	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightLargest = 1 << 4,$/;"	e	enum:__anon75
ImGuiComboFlags_HeightLargest	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_HeightLargest = 1 << 4,$/;"	e	enum:__anon49
ImGuiComboFlags_HeightLargest	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightLargest           = 1 << 4,   \/\/ As many fitting items as possible$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightMask_	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightMask_ = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeightRegular | ImGuiComboFlags_HeightLarge | ImGuiComboFlags_HeightLargest$/;"	e	enum:__anon75
ImGuiComboFlags_HeightMask_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_HeightMask_ = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeightRegular | ImGuiComboFlags_HeightLarge | ImGuiComboFlags_HeightLargest$/;"	e	enum:__anon49
ImGuiComboFlags_HeightMask_	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightMask_             = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeightRegular | ImGuiComboFlags_HeightLarge | ImGuiComboFlags_HeightLargest$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightRegular	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightRegular = 1 << 2,$/;"	e	enum:__anon75
ImGuiComboFlags_HeightRegular	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_HeightRegular = 1 << 2,$/;"	e	enum:__anon49
ImGuiComboFlags_HeightRegular	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightRegular           = 1 << 2,   \/\/ Max ~8 items visible (default)$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightSmall	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightSmall = 1 << 1,$/;"	e	enum:__anon75
ImGuiComboFlags_HeightSmall	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_HeightSmall = 1 << 1,$/;"	e	enum:__anon49
ImGuiComboFlags_HeightSmall	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightSmall             = 1 << 1,   \/\/ Max ~4 items visible. Tip: If you want your combo popup to be a specific size you can use SetNextWindowSizeConstraints() prior to calling BeginCombo()$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_NoArrowButton	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_NoArrowButton = 1 << 5,$/;"	e	enum:__anon75
ImGuiComboFlags_NoArrowButton	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_NoArrowButton = 1 << 5,$/;"	e	enum:__anon49
ImGuiComboFlags_NoArrowButton	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_NoArrowButton           = 1 << 5,   \/\/ Display on the preview box without the square arrow button$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_NoPreview	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_NoPreview = 1 << 6,$/;"	e	enum:__anon75
ImGuiComboFlags_NoPreview	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_NoPreview = 1 << 6,$/;"	e	enum:__anon49
ImGuiComboFlags_NoPreview	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_NoPreview               = 1 << 6,   \/\/ Display only a square arrow button$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_None	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_None = 0,$/;"	e	enum:__anon75
ImGuiComboFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_None = 0,$/;"	e	enum:__anon49
ImGuiComboFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_None                    = 0,$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_PopupAlignLeft	lib/cimgui/cimgui.h	/^    ImGuiComboFlags_PopupAlignLeft = 1 << 0,$/;"	e	enum:__anon75
ImGuiComboFlags_PopupAlignLeft	lib/cimgui/generator/output/cimgui.h	/^    ImGuiComboFlags_PopupAlignLeft = 1 << 0,$/;"	e	enum:__anon49
ImGuiComboFlags_PopupAlignLeft	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_PopupAlignLeft          = 1 << 0,   \/\/ Align the popup toward the left by default$/;"	e	enum:ImGuiComboFlags_
ImGuiCond	lib/cimgui/cimgui.h	/^typedef int ImGuiCond;$/;"	t
ImGuiCond	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiCond;$/;"	t
ImGuiCond	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiCond;              \/\/ -> enum ImGuiCond_            \/\/ Enum: A condition for many Set*() functions$/;"	t
ImGuiCond_	lib/cimgui/cimgui.h	/^}ImGuiCond_;$/;"	t	typeref:enum:__anon92
ImGuiCond_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiCond_;$/;"	t	typeref:enum:__anon66
ImGuiCond_	lib/cimgui/imgui/imgui.h	/^enum ImGuiCond_$/;"	g
ImGuiCond_Always	lib/cimgui/cimgui.h	/^    ImGuiCond_Always = 1 << 0,$/;"	e	enum:__anon92
ImGuiCond_Always	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCond_Always = 1 << 0,$/;"	e	enum:__anon66
ImGuiCond_Always	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_Always        = 1 << 0,   \/\/ Set the variable$/;"	e	enum:ImGuiCond_
ImGuiCond_Appearing	lib/cimgui/cimgui.h	/^    ImGuiCond_Appearing = 1 << 3$/;"	e	enum:__anon92
ImGuiCond_Appearing	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCond_Appearing = 1 << 3$/;"	e	enum:__anon66
ImGuiCond_Appearing	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_Appearing     = 1 << 3    \/\/ Set the variable if the object\/window is appearing after being hidden\/inactive (or the first time)$/;"	e	enum:ImGuiCond_
ImGuiCond_FirstUseEver	lib/cimgui/cimgui.h	/^    ImGuiCond_FirstUseEver = 1 << 2,$/;"	e	enum:__anon92
ImGuiCond_FirstUseEver	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCond_FirstUseEver = 1 << 2,$/;"	e	enum:__anon66
ImGuiCond_FirstUseEver	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_FirstUseEver  = 1 << 2,   \/\/ Set the variable if the object\/window has no persistently saved data (no entry in .ini file)$/;"	e	enum:ImGuiCond_
ImGuiCond_Once	lib/cimgui/cimgui.h	/^    ImGuiCond_Once = 1 << 1,$/;"	e	enum:__anon92
ImGuiCond_Once	lib/cimgui/generator/output/cimgui.h	/^    ImGuiCond_Once = 1 << 1,$/;"	e	enum:__anon66
ImGuiCond_Once	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_Once          = 1 << 1,   \/\/ Set the variable once per runtime session (only the first call with succeed)$/;"	e	enum:ImGuiCond_
ImGuiConfigFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiConfigFlags;$/;"	t
ImGuiConfigFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiConfigFlags;$/;"	t
ImGuiConfigFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiConfigFlags;       \/\/ -> enum ImGuiConfigFlags_     \/\/ Flags: for io.ConfigFlags$/;"	t
ImGuiConfigFlags_	lib/cimgui/cimgui.h	/^}ImGuiConfigFlags_;$/;"	t	typeref:enum:__anon85
ImGuiConfigFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiConfigFlags_;$/;"	t	typeref:enum:__anon59
ImGuiConfigFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiConfigFlags_$/;"	g
ImGuiConfigFlags_IsSRGB	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_IsSRGB = 1 << 20,$/;"	e	enum:__anon85
ImGuiConfigFlags_IsSRGB	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_IsSRGB = 1 << 20,$/;"	e	enum:__anon59
ImGuiConfigFlags_IsSRGB	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_IsSRGB                 = 1 << 20,  \/\/ Application is SRGB-aware.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_IsTouchScreen	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_IsTouchScreen = 1 << 21$/;"	e	enum:__anon85
ImGuiConfigFlags_IsTouchScreen	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_IsTouchScreen = 1 << 21$/;"	e	enum:__anon59
ImGuiConfigFlags_IsTouchScreen	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_IsTouchScreen          = 1 << 21   \/\/ Application is using a touch screen instead of a mouse.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavEnableGamepad	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_NavEnableGamepad = 1 << 1,$/;"	e	enum:__anon85
ImGuiConfigFlags_NavEnableGamepad	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_NavEnableGamepad = 1 << 1,$/;"	e	enum:__anon59
ImGuiConfigFlags_NavEnableGamepad	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavEnableGamepad       = 1 << 1,   \/\/ Master gamepad navigation enable flag. This is mostly to instruct your imgui back-end to fill io.NavInputs[]. Back-end also needs to set ImGuiBackendFlags_HasGamepad.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavEnableKeyboard	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_NavEnableKeyboard = 1 << 0,$/;"	e	enum:__anon85
ImGuiConfigFlags_NavEnableKeyboard	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_NavEnableKeyboard = 1 << 0,$/;"	e	enum:__anon59
ImGuiConfigFlags_NavEnableKeyboard	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavEnableKeyboard      = 1 << 0,   \/\/ Master keyboard navigation enable flag. NewFrame() will automatically fill io.NavInputs[] based on io.KeysDown[].$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavEnableSetMousePos	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_NavEnableSetMousePos = 1 << 2,$/;"	e	enum:__anon85
ImGuiConfigFlags_NavEnableSetMousePos	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_NavEnableSetMousePos = 1 << 2,$/;"	e	enum:__anon59
ImGuiConfigFlags_NavEnableSetMousePos	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavEnableSetMousePos   = 1 << 2,   \/\/ Instruct navigation to move the mouse cursor. May be useful on TV\/console systems where moving a virtual mouse is awkward. Will update io.MousePos and set io.WantSetMousePos=true. If enabled you MUST honor io.WantSetMousePos requests in your binding, otherwise ImGui will react as if the mouse is jumping around back and forth.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavNoCaptureKeyboard	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_NavNoCaptureKeyboard = 1 << 3,$/;"	e	enum:__anon85
ImGuiConfigFlags_NavNoCaptureKeyboard	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_NavNoCaptureKeyboard = 1 << 3,$/;"	e	enum:__anon59
ImGuiConfigFlags_NavNoCaptureKeyboard	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavNoCaptureKeyboard   = 1 << 3,   \/\/ Instruct navigation to not set the io.WantCaptureKeyboard flag when io.NavActive is set.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NoMouse	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_NoMouse = 1 << 4,$/;"	e	enum:__anon85
ImGuiConfigFlags_NoMouse	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_NoMouse = 1 << 4,$/;"	e	enum:__anon59
ImGuiConfigFlags_NoMouse	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NoMouse                = 1 << 4,   \/\/ Instruct imgui to clear mouse position\/buttons in NewFrame(). This allows ignoring the mouse information set by the back-end.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NoMouseCursorChange	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_NoMouseCursorChange = 1 << 5,$/;"	e	enum:__anon85
ImGuiConfigFlags_NoMouseCursorChange	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_NoMouseCursorChange = 1 << 5,$/;"	e	enum:__anon59
ImGuiConfigFlags_NoMouseCursorChange	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NoMouseCursorChange    = 1 << 5,   \/\/ Instruct back-end to not alter mouse cursor shape and visibility. Use if the back-end cursor changes are interfering with yours and you don't want to use SetMouseCursor() to change mouse cursor. You may want to honor requests from imgui by reading GetMouseCursor() yourself instead.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_None	lib/cimgui/cimgui.h	/^    ImGuiConfigFlags_None = 0,$/;"	e	enum:__anon85
ImGuiConfigFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiConfigFlags_None = 0,$/;"	e	enum:__anon59
ImGuiConfigFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_None                   = 0,$/;"	e	enum:ImGuiConfigFlags_
ImGuiContext	lib/cimgui/cimgui.h	/^typedef struct ImGuiContext ImGuiContext;$/;"	t	typeref:struct:ImGuiContext
ImGuiContext	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiContext ImGuiContext;$/;"	t	typeref:struct:ImGuiContext
ImGuiContext	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiContext(ImFontAtlas* shared_font_atlas) : BackgroundDrawList(&DrawListSharedData), ForegroundDrawList(&DrawListSharedData)$/;"	f	struct:ImGuiContext
ImGuiContext	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiContext$/;"	s
ImGuiDataType	lib/cimgui/cimgui.h	/^typedef int ImGuiDataType;$/;"	t
ImGuiDataType	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiDataType;$/;"	t
ImGuiDataType	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiDataType;          \/\/ -> enum ImGuiDataType_        \/\/ Enum: A primary data type$/;"	t
ImGuiDataTypeInfo	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiDataTypeInfo$/;"	s
ImGuiDataType_	lib/cimgui/cimgui.h	/^}ImGuiDataType_;$/;"	t	typeref:enum:__anon81
ImGuiDataType_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiDataType_;$/;"	t	typeref:enum:__anon55
ImGuiDataType_	lib/cimgui/imgui/imgui.h	/^enum ImGuiDataType_$/;"	g
ImGuiDataType_COUNT	lib/cimgui/cimgui.h	/^    ImGuiDataType_COUNT$/;"	e	enum:__anon81
ImGuiDataType_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_COUNT$/;"	e	enum:__anon55
ImGuiDataType_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_COUNT$/;"	e	enum:ImGuiDataType_
ImGuiDataType_COUNT	lib/cimgui/imgui/imgui_widgets.cpp	/^IM_STATIC_ASSERT(IM_ARRAYSIZE(GDataTypeInfo) == ImGuiDataType_COUNT);$/;"	v
ImGuiDataType_Double	lib/cimgui/cimgui.h	/^    ImGuiDataType_Double,$/;"	e	enum:__anon81
ImGuiDataType_Double	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_Double,$/;"	e	enum:__anon55
ImGuiDataType_Double	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_Double,   \/\/ double$/;"	e	enum:ImGuiDataType_
ImGuiDataType_Float	lib/cimgui/cimgui.h	/^    ImGuiDataType_Float,$/;"	e	enum:__anon81
ImGuiDataType_Float	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_Float,$/;"	e	enum:__anon55
ImGuiDataType_Float	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_Float,    \/\/ float$/;"	e	enum:ImGuiDataType_
ImGuiDataType_S16	lib/cimgui/cimgui.h	/^    ImGuiDataType_S16,$/;"	e	enum:__anon81
ImGuiDataType_S16	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_S16,$/;"	e	enum:__anon55
ImGuiDataType_S16	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_S16,      \/\/ short$/;"	e	enum:ImGuiDataType_
ImGuiDataType_S32	lib/cimgui/cimgui.h	/^    ImGuiDataType_S32,$/;"	e	enum:__anon81
ImGuiDataType_S32	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_S32,$/;"	e	enum:__anon55
ImGuiDataType_S32	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_S32,      \/\/ int$/;"	e	enum:ImGuiDataType_
ImGuiDataType_S64	lib/cimgui/cimgui.h	/^    ImGuiDataType_S64,$/;"	e	enum:__anon81
ImGuiDataType_S64	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_S64,$/;"	e	enum:__anon55
ImGuiDataType_S64	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_S64,      \/\/ long long \/ __int64$/;"	e	enum:ImGuiDataType_
ImGuiDataType_S8	lib/cimgui/cimgui.h	/^    ImGuiDataType_S8,$/;"	e	enum:__anon81
ImGuiDataType_S8	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_S8,$/;"	e	enum:__anon55
ImGuiDataType_S8	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_S8,       \/\/ signed char \/ char (with sensible compilers)$/;"	e	enum:ImGuiDataType_
ImGuiDataType_U16	lib/cimgui/cimgui.h	/^    ImGuiDataType_U16,$/;"	e	enum:__anon81
ImGuiDataType_U16	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_U16,$/;"	e	enum:__anon55
ImGuiDataType_U16	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_U16,      \/\/ unsigned short$/;"	e	enum:ImGuiDataType_
ImGuiDataType_U32	lib/cimgui/cimgui.h	/^    ImGuiDataType_U32,$/;"	e	enum:__anon81
ImGuiDataType_U32	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_U32,$/;"	e	enum:__anon55
ImGuiDataType_U32	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_U32,      \/\/ unsigned int$/;"	e	enum:ImGuiDataType_
ImGuiDataType_U64	lib/cimgui/cimgui.h	/^    ImGuiDataType_U64,$/;"	e	enum:__anon81
ImGuiDataType_U64	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_U64,$/;"	e	enum:__anon55
ImGuiDataType_U64	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_U64,      \/\/ unsigned long long \/ unsigned __int64$/;"	e	enum:ImGuiDataType_
ImGuiDataType_U8	lib/cimgui/cimgui.h	/^    ImGuiDataType_U8,$/;"	e	enum:__anon81
ImGuiDataType_U8	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDataType_U8,$/;"	e	enum:__anon55
ImGuiDataType_U8	lib/cimgui/imgui/imgui.h	/^    ImGuiDataType_U8,       \/\/ unsigned char$/;"	e	enum:ImGuiDataType_
ImGuiDir	lib/cimgui/cimgui.h	/^typedef int ImGuiDir;$/;"	t
ImGuiDir	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiDir;$/;"	t
ImGuiDir	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiDir;               \/\/ -> enum ImGuiDir_             \/\/ Enum: A cardinal direction$/;"	t
ImGuiDir_	lib/cimgui/cimgui.h	/^}ImGuiDir_;$/;"	t	typeref:enum:__anon82
ImGuiDir_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiDir_;$/;"	t	typeref:enum:__anon56
ImGuiDir_	lib/cimgui/imgui/imgui.h	/^enum ImGuiDir_$/;"	g
ImGuiDir_COUNT	lib/cimgui/cimgui.h	/^    ImGuiDir_COUNT$/;"	e	enum:__anon82
ImGuiDir_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir_COUNT$/;"	e	enum:__anon56
ImGuiDir_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_COUNT$/;"	e	enum:ImGuiDir_
ImGuiDir_Down	lib/cimgui/cimgui.h	/^    ImGuiDir_Down = 3,$/;"	e	enum:__anon82
ImGuiDir_Down	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir_Down = 3,$/;"	e	enum:__anon56
ImGuiDir_Down	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Down    = 3,$/;"	e	enum:ImGuiDir_
ImGuiDir_Left	lib/cimgui/cimgui.h	/^    ImGuiDir_Left = 0,$/;"	e	enum:__anon82
ImGuiDir_Left	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir_Left = 0,$/;"	e	enum:__anon56
ImGuiDir_Left	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Left    = 0,$/;"	e	enum:ImGuiDir_
ImGuiDir_None	lib/cimgui/cimgui.h	/^    ImGuiDir_None = -1,$/;"	e	enum:__anon82
ImGuiDir_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir_None = -1,$/;"	e	enum:__anon56
ImGuiDir_None	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_None    = -1,$/;"	e	enum:ImGuiDir_
ImGuiDir_Right	lib/cimgui/cimgui.h	/^    ImGuiDir_Right = 1,$/;"	e	enum:__anon82
ImGuiDir_Right	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir_Right = 1,$/;"	e	enum:__anon56
ImGuiDir_Right	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Right   = 1,$/;"	e	enum:ImGuiDir_
ImGuiDir_Up	lib/cimgui/cimgui.h	/^    ImGuiDir_Up = 2,$/;"	e	enum:__anon82
ImGuiDir_Up	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir_Up = 2,$/;"	e	enum:__anon56
ImGuiDir_Up	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Up      = 2,$/;"	e	enum:ImGuiDir_
ImGuiDragDropFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiDragDropFlags;$/;"	t
ImGuiDragDropFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiDragDropFlags;$/;"	t
ImGuiDragDropFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiDragDropFlags;     \/\/ -> enum ImGuiDragDropFlags_   \/\/ Flags: for BeginDragDropSource(), AcceptDragDropPayload()$/;"	t
ImGuiDragDropFlags_	lib/cimgui/cimgui.h	/^}ImGuiDragDropFlags_;$/;"	t	typeref:enum:__anon80
ImGuiDragDropFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiDragDropFlags_;$/;"	t	typeref:enum:__anon54
ImGuiDragDropFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiDragDropFlags_$/;"	g
ImGuiDragDropFlags_AcceptBeforeDelivery	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_AcceptBeforeDelivery = 1 << 10,$/;"	e	enum:__anon80
ImGuiDragDropFlags_AcceptBeforeDelivery	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_AcceptBeforeDelivery = 1 << 10,$/;"	e	enum:__anon54
ImGuiDragDropFlags_AcceptBeforeDelivery	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_AcceptBeforeDelivery         = 1 << 10,  \/\/ AcceptDragDropPayload() will returns true even before the mouse button is released. You can then call IsDelivery() to test if the payload needs to be delivered.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptNoDrawDefaultRect	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_AcceptNoDrawDefaultRect = 1 << 11,$/;"	e	enum:__anon80
ImGuiDragDropFlags_AcceptNoDrawDefaultRect	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_AcceptNoDrawDefaultRect = 1 << 11,$/;"	e	enum:__anon54
ImGuiDragDropFlags_AcceptNoDrawDefaultRect	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_AcceptNoDrawDefaultRect      = 1 << 11,  \/\/ Do not draw the default highlight rectangle when hovering over target.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptNoPreviewTooltip	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_AcceptNoPreviewTooltip = 1 << 12,$/;"	e	enum:__anon80
ImGuiDragDropFlags_AcceptNoPreviewTooltip	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_AcceptNoPreviewTooltip = 1 << 12,$/;"	e	enum:__anon54
ImGuiDragDropFlags_AcceptNoPreviewTooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_AcceptNoPreviewTooltip       = 1 << 12,  \/\/ Request hiding the BeginDragDropSource tooltip from the BeginDragDropTarget site.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptPeekOnly	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_AcceptPeekOnly = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptNoDrawDefaultRect$/;"	e	enum:__anon80
ImGuiDragDropFlags_AcceptPeekOnly	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_AcceptPeekOnly = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptNoDrawDefaultRect$/;"	e	enum:__anon54
ImGuiDragDropFlags_AcceptPeekOnly	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_AcceptPeekOnly               = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropFlags_AcceptNoDrawDefaultRect  \/\/ For peeking ahead and inspecting the payload before delivery.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_None	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_None = 0,$/;"	e	enum:__anon80
ImGuiDragDropFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_None = 0,$/;"	e	enum:__anon54
ImGuiDragDropFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_None                         = 0,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceAllowNullID	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceAllowNullID = 1 << 3,$/;"	e	enum:__anon80
ImGuiDragDropFlags_SourceAllowNullID	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_SourceAllowNullID = 1 << 3,$/;"	e	enum:__anon54
ImGuiDragDropFlags_SourceAllowNullID	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceAllowNullID            = 1 << 3,   \/\/ Allow items such as Text(), Image() that have no unique identifier to be used as drag source, by manufacturing a temporary identifier based on their window-relative position. This is extremely unusual within the dear imgui ecosystem and so we made it explicit.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceAutoExpirePayload	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceAutoExpirePayload = 1 << 5,$/;"	e	enum:__anon80
ImGuiDragDropFlags_SourceAutoExpirePayload	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_SourceAutoExpirePayload = 1 << 5,$/;"	e	enum:__anon54
ImGuiDragDropFlags_SourceAutoExpirePayload	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceAutoExpirePayload      = 1 << 5,   \/\/ Automatically expire the payload if the source cease to be submitted (otherwise payloads are persisting while being dragged)$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceExtern	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceExtern = 1 << 4,$/;"	e	enum:__anon80
ImGuiDragDropFlags_SourceExtern	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_SourceExtern = 1 << 4,$/;"	e	enum:__anon54
ImGuiDragDropFlags_SourceExtern	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceExtern                 = 1 << 4,   \/\/ External source (from outside of dear imgui), won't attempt to read current item\/window info. Will always return true. Only one Extern source can be active simultaneously.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoDisableHover	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceNoDisableHover = 1 << 1,$/;"	e	enum:__anon80
ImGuiDragDropFlags_SourceNoDisableHover	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_SourceNoDisableHover = 1 << 1,$/;"	e	enum:__anon54
ImGuiDragDropFlags_SourceNoDisableHover	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceNoDisableHover         = 1 << 1,   \/\/ By default, when dragging we clear data so that IsItemHovered() will return false, to avoid subsequent user code submitting tooltips. This flag disable this behavior so you can still call IsItemHovered() on the source item.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoHoldToOpenOthers	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceNoHoldToOpenOthers = 1 << 2,$/;"	e	enum:__anon80
ImGuiDragDropFlags_SourceNoHoldToOpenOthers	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_SourceNoHoldToOpenOthers = 1 << 2,$/;"	e	enum:__anon54
ImGuiDragDropFlags_SourceNoHoldToOpenOthers	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceNoHoldToOpenOthers     = 1 << 2,   \/\/ Disable the behavior that allows to open tree nodes and collapsing header by holding over them while dragging a source item.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoPreviewTooltip	lib/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceNoPreviewTooltip = 1 << 0,$/;"	e	enum:__anon80
ImGuiDragDropFlags_SourceNoPreviewTooltip	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDragDropFlags_SourceNoPreviewTooltip = 1 << 0,$/;"	e	enum:__anon54
ImGuiDragDropFlags_SourceNoPreviewTooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceNoPreviewTooltip       = 1 << 0,   \/\/ By default, a successful call to BeginDragDropSource opens a tooltip so you can display a preview or description of the source contents. This flag disable this behavior.$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiDragFlags;             \/\/ -> enum ImGuiDragFlags_          \/\/ Flags: for DragBehavior()$/;"	t
ImGuiDragFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiDragFlags_$/;"	g
ImGuiDragFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDragFlags_None                     = 0,$/;"	e	enum:ImGuiDragFlags_
ImGuiDragFlags_Vertical	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDragFlags_Vertical                 = 1 << 0$/;"	e	enum:ImGuiDragFlags_
ImGuiFocusedFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiFocusedFlags;$/;"	t
ImGuiFocusedFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiFocusedFlags;$/;"	t
ImGuiFocusedFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiFocusedFlags;      \/\/ -> enum ImGuiFocusedFlags_    \/\/ Flags: for IsWindowFocused()$/;"	t
ImGuiFocusedFlags_	lib/cimgui/cimgui.h	/^}ImGuiFocusedFlags_;$/;"	t	typeref:enum:__anon78
ImGuiFocusedFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiFocusedFlags_;$/;"	t	typeref:enum:__anon52
ImGuiFocusedFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiFocusedFlags_$/;"	g
ImGuiFocusedFlags_AnyWindow	lib/cimgui/cimgui.h	/^    ImGuiFocusedFlags_AnyWindow = 1 << 2,$/;"	e	enum:__anon78
ImGuiFocusedFlags_AnyWindow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiFocusedFlags_AnyWindow = 1 << 2,$/;"	e	enum:__anon52
ImGuiFocusedFlags_AnyWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_AnyWindow                     = 1 << 2,   \/\/ IsWindowFocused(): Return true if any window is focused. Important: If you are trying to tell how to dispatch your low-level inputs, do NOT use this. Use ImGui::GetIO().WantCaptureMouse instead.$/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_ChildWindows	lib/cimgui/cimgui.h	/^    ImGuiFocusedFlags_ChildWindows = 1 << 0,$/;"	e	enum:__anon78
ImGuiFocusedFlags_ChildWindows	lib/cimgui/generator/output/cimgui.h	/^    ImGuiFocusedFlags_ChildWindows = 1 << 0,$/;"	e	enum:__anon52
ImGuiFocusedFlags_ChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_ChildWindows                  = 1 << 0,   \/\/ IsWindowFocused(): Return true if any children of the window is focused$/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_None	lib/cimgui/cimgui.h	/^    ImGuiFocusedFlags_None = 0,$/;"	e	enum:__anon78
ImGuiFocusedFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiFocusedFlags_None = 0,$/;"	e	enum:__anon52
ImGuiFocusedFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_None                          = 0,$/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_RootAndChildWindows	lib/cimgui/cimgui.h	/^    ImGuiFocusedFlags_RootAndChildWindows = ImGuiFocusedFlags_RootWindow | ImGuiFocusedFlags_ChildWindows$/;"	e	enum:__anon78
ImGuiFocusedFlags_RootAndChildWindows	lib/cimgui/generator/output/cimgui.h	/^    ImGuiFocusedFlags_RootAndChildWindows = ImGuiFocusedFlags_RootWindow | ImGuiFocusedFlags_ChildWindows$/;"	e	enum:__anon52
ImGuiFocusedFlags_RootAndChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_RootAndChildWindows           = ImGuiFocusedFlags_RootWindow | ImGuiFocusedFlags_ChildWindows$/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_RootWindow	lib/cimgui/cimgui.h	/^    ImGuiFocusedFlags_RootWindow = 1 << 1,$/;"	e	enum:__anon78
ImGuiFocusedFlags_RootWindow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiFocusedFlags_RootWindow = 1 << 1,$/;"	e	enum:__anon52
ImGuiFocusedFlags_RootWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_RootWindow                    = 1 << 1,   \/\/ IsWindowFocused(): Test from root window (top most parent of the current hierarchy)$/;"	e	enum:ImGuiFocusedFlags_
ImGuiFreeType	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^namespace ImGuiFreeType$/;"	n
ImGuiGroupData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiGroupData$/;"	s
ImGuiHoveredFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiHoveredFlags;$/;"	t
ImGuiHoveredFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiHoveredFlags;$/;"	t
ImGuiHoveredFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiHoveredFlags;      \/\/ -> enum ImGuiHoveredFlags_    \/\/ Flags: for IsItemHovered(), IsWindowHovered() etc.$/;"	t
ImGuiHoveredFlags_	lib/cimgui/cimgui.h	/^}ImGuiHoveredFlags_;$/;"	t	typeref:enum:__anon79
ImGuiHoveredFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiHoveredFlags_;$/;"	t	typeref:enum:__anon53
ImGuiHoveredFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiHoveredFlags_$/;"	g
ImGuiHoveredFlags_AllowWhenBlockedByActiveItem	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem = 1 << 5,$/;"	e	enum:__anon79
ImGuiHoveredFlags_AllowWhenBlockedByActiveItem	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem = 1 << 5,$/;"	e	enum:__anon53
ImGuiHoveredFlags_AllowWhenBlockedByActiveItem	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem  = 1 << 5,   \/\/ Return true even if an active item is blocking access to this item\/window. Useful for Drag and Drop patterns.$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenBlockedByPopup	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByPopup = 1 << 3,$/;"	e	enum:__anon79
ImGuiHoveredFlags_AllowWhenBlockedByPopup	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByPopup = 1 << 3,$/;"	e	enum:__anon53
ImGuiHoveredFlags_AllowWhenBlockedByPopup	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByPopup       = 1 << 3,   \/\/ Return true even if a popup window is normally blocking access to this item\/window$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenDisabled	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenDisabled = 1 << 7,$/;"	e	enum:__anon79
ImGuiHoveredFlags_AllowWhenDisabled	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenDisabled = 1 << 7,$/;"	e	enum:__anon53
ImGuiHoveredFlags_AllowWhenDisabled	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AllowWhenDisabled             = 1 << 7,   \/\/ Return true even if the item is disabled$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenOverlapped	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenOverlapped = 1 << 6,$/;"	e	enum:__anon79
ImGuiHoveredFlags_AllowWhenOverlapped	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenOverlapped = 1 << 6,$/;"	e	enum:__anon53
ImGuiHoveredFlags_AllowWhenOverlapped	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AllowWhenOverlapped           = 1 << 6,   \/\/ Return true even if the position is obstructed or overlapped by another window$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AnyWindow	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AnyWindow = 1 << 2,$/;"	e	enum:__anon79
ImGuiHoveredFlags_AnyWindow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_AnyWindow = 1 << 2,$/;"	e	enum:__anon53
ImGuiHoveredFlags_AnyWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AnyWindow                     = 1 << 2,   \/\/ IsWindowHovered() only: Return true if any window is hovered$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_ChildWindows	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_ChildWindows = 1 << 0,$/;"	e	enum:__anon79
ImGuiHoveredFlags_ChildWindows	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_ChildWindows = 1 << 0,$/;"	e	enum:__anon53
ImGuiHoveredFlags_ChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_ChildWindows                  = 1 << 0,   \/\/ IsWindowHovered() only: Return true if any children of the window is hovered$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_None	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_None = 0,$/;"	e	enum:__anon79
ImGuiHoveredFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_None = 0,$/;"	e	enum:__anon53
ImGuiHoveredFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_None                          = 0,        \/\/ Return true if directly over the item\/window, not obstructed by another window, not obstructed by an active popup or modal blocking inputs under them.$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RectOnly	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_RectOnly = ImGuiHoveredFlags_AllowWhenBlockedByPopup | ImGuiHoveredFlags_AllowWhenBlockedByActiveItem | ImGuiHoveredFlags_AllowWhenOverlapped,$/;"	e	enum:__anon79
ImGuiHoveredFlags_RectOnly	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_RectOnly = ImGuiHoveredFlags_AllowWhenBlockedByPopup | ImGuiHoveredFlags_AllowWhenBlockedByActiveItem | ImGuiHoveredFlags_AllowWhenOverlapped,$/;"	e	enum:__anon53
ImGuiHoveredFlags_RectOnly	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_RectOnly                      = ImGuiHoveredFlags_AllowWhenBlockedByPopup | ImGuiHoveredFlags_AllowWhenBlockedByActiveItem | ImGuiHoveredFlags_AllowWhenOverlapped,$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RootAndChildWindows	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_RootAndChildWindows = ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows$/;"	e	enum:__anon79
ImGuiHoveredFlags_RootAndChildWindows	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_RootAndChildWindows = ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows$/;"	e	enum:__anon53
ImGuiHoveredFlags_RootAndChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_RootAndChildWindows           = ImGuiHoveredFlags_RootWindow | ImGuiHoveredFlags_ChildWindows$/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RootWindow	lib/cimgui/cimgui.h	/^    ImGuiHoveredFlags_RootWindow = 1 << 1,$/;"	e	enum:__anon79
ImGuiHoveredFlags_RootWindow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiHoveredFlags_RootWindow = 1 << 1,$/;"	e	enum:__anon53
ImGuiHoveredFlags_RootWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_RootWindow                    = 1 << 1,   \/\/ IsWindowHovered() only: Test from root window (top most parent of the current hierarchy)$/;"	e	enum:ImGuiHoveredFlags_
ImGuiID	lib/cimgui/cimgui.h	/^typedef unsigned int ImGuiID;$/;"	t
ImGuiID	lib/cimgui/generator/output/cimgui.h	/^typedef unsigned int ImGuiID;$/;"	t
ImGuiID	lib/cimgui/imgui/imgui.h	/^typedef unsigned int ImGuiID;       \/\/ Unique ID used by widgets (typically hashed from a stack of string)$/;"	t
ImGuiIO	lib/cimgui/cimgui.h	/^struct ImGuiIO$/;"	s
ImGuiIO	lib/cimgui/cimgui.h	/^typedef struct ImGuiIO ImGuiIO;$/;"	t	typeref:struct:ImGuiIO
ImGuiIO	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiIO$/;"	s
ImGuiIO	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiIO ImGuiIO;$/;"	t	typeref:struct:ImGuiIO
ImGuiIO	lib/cimgui/imgui/imgui.cpp	/^ImGuiIO::ImGuiIO()$/;"	f	class:ImGuiIO
ImGuiIO	lib/cimgui/imgui/imgui.h	/^struct ImGuiIO$/;"	s
ImGuiIO_AddInputCharacter	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiIO_AddInputCharacter(ImGuiIO* self,unsigned int c)$/;"	f
ImGuiIO_AddInputCharacter	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiIO_AddInputCharacter(ImGuiIO* self,unsigned int c)$/;"	f
ImGuiIO_AddInputCharactersUTF8	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiIO_AddInputCharactersUTF8(ImGuiIO* self,const char* str)$/;"	f
ImGuiIO_AddInputCharactersUTF8	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiIO_AddInputCharactersUTF8(ImGuiIO* self,const char* str)$/;"	f
ImGuiIO_ClearInputCharacters	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiIO_ClearInputCharacters(ImGuiIO* self)$/;"	f
ImGuiIO_ClearInputCharacters	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiIO_ClearInputCharacters(ImGuiIO* self)$/;"	f
ImGuiIO_ImGuiIO	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiIO* ImGuiIO_ImGuiIO(void)$/;"	f
ImGuiIO_ImGuiIO	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiIO* ImGuiIO_ImGuiIO(void)$/;"	f
ImGuiIO_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiIO_destroy(ImGuiIO* self)$/;"	f
ImGuiIO_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiIO_destroy(ImGuiIO* self)$/;"	f
ImGuiInputReadMode	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiInputReadMode$/;"	g
ImGuiInputReadMode_Down	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Down,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_Pressed	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Pressed,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_Released	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Released,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_Repeat	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Repeat,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_RepeatFast	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_RepeatFast$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_RepeatSlow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_RepeatSlow,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputSource	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiInputSource$/;"	g
ImGuiInputSource_COUNT	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_COUNT$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_Mouse	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_Mouse,$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_Nav	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_Nav,$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_NavGamepad	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_NavGamepad,    \/\/ "$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_NavKeyboard	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_NavKeyboard,   \/\/ Only used occasionally for storage, not tested\/handled by most code$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_None = 0,$/;"	e	enum:ImGuiInputSource
ImGuiInputTextCallback	lib/cimgui/cimgui.h	/^typedef int (*ImGuiInputTextCallback)(ImGuiInputTextCallbackData *data);$/;"	t
ImGuiInputTextCallback	lib/cimgui/generator/output/cimgui.h	/^typedef int (*ImGuiInputTextCallback)(ImGuiInputTextCallbackData *data);$/;"	t
ImGuiInputTextCallback	lib/cimgui/imgui/imgui.h	/^typedef int (*ImGuiInputTextCallback)(ImGuiInputTextCallbackData *data);$/;"	t
ImGuiInputTextCallbackData	lib/cimgui/cimgui.h	/^struct ImGuiInputTextCallbackData$/;"	s
ImGuiInputTextCallbackData	lib/cimgui/cimgui.h	/^typedef struct ImGuiInputTextCallbackData ImGuiInputTextCallbackData;$/;"	t	typeref:struct:ImGuiInputTextCallbackData
ImGuiInputTextCallbackData	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiInputTextCallbackData$/;"	s
ImGuiInputTextCallbackData	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiInputTextCallbackData ImGuiInputTextCallbackData;$/;"	t	typeref:struct:ImGuiInputTextCallbackData
ImGuiInputTextCallbackData	lib/cimgui/imgui/imgui.h	/^struct ImGuiInputTextCallbackData$/;"	s
ImGuiInputTextCallbackData	lib/cimgui/imgui/imgui_widgets.cpp	/^ImGuiInputTextCallbackData::ImGuiInputTextCallbackData()$/;"	f	class:ImGuiInputTextCallbackData
ImGuiInputTextCallbackData_DeleteChars	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiInputTextCallbackData_DeleteChars(ImGuiInputTextCallbackData* self,int pos,int bytes_count)$/;"	f
ImGuiInputTextCallbackData_DeleteChars	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiInputTextCallbackData_DeleteChars(ImGuiInputTextCallbackData* self,int pos,int bytes_count)$/;"	f
ImGuiInputTextCallbackData_HasSelection	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiInputTextCallbackData_HasSelection(ImGuiInputTextCallbackData* self)$/;"	f
ImGuiInputTextCallbackData_HasSelection	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiInputTextCallbackData_HasSelection(ImGuiInputTextCallbackData* self)$/;"	f
ImGuiInputTextCallbackData_ImGuiInputTextCallbackData	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiInputTextCallbackData* ImGuiInputTextCallbackData_ImGuiInputTextCallbackData(void)$/;"	f
ImGuiInputTextCallbackData_ImGuiInputTextCallbackData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiInputTextCallbackData* ImGuiInputTextCallbackData_ImGuiInputTextCallbackData(void)$/;"	f
ImGuiInputTextCallbackData_InsertChars	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiInputTextCallbackData_InsertChars(ImGuiInputTextCallbackData* self,int pos,const char* text,const char* text_end)$/;"	f
ImGuiInputTextCallbackData_InsertChars	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiInputTextCallbackData_InsertChars(ImGuiInputTextCallbackData* self,int pos,const char* text,const char* text_end)$/;"	f
ImGuiInputTextCallbackData_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiInputTextCallbackData_destroy(ImGuiInputTextCallbackData* self)$/;"	f
ImGuiInputTextCallbackData_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiInputTextCallbackData_destroy(ImGuiInputTextCallbackData* self)$/;"	f
ImGuiInputTextFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiInputTextFlags;$/;"	t
ImGuiInputTextFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiInputTextFlags;$/;"	t
ImGuiInputTextFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiInputTextFlags;    \/\/ -> enum ImGuiInputTextFlags_  \/\/ Flags: for InputText(), InputTextMultiline()$/;"	t
ImGuiInputTextFlags_	lib/cimgui/cimgui.h	/^}ImGuiInputTextFlags_;$/;"	t	typeref:enum:__anon72
ImGuiInputTextFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiInputTextFlags_;$/;"	t	typeref:enum:__anon46
ImGuiInputTextFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiInputTextFlags_$/;"	g
ImGuiInputTextFlags_AllowTabInput	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_AllowTabInput = 1 << 10,$/;"	e	enum:__anon72
ImGuiInputTextFlags_AllowTabInput	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_AllowTabInput = 1 << 10,$/;"	e	enum:__anon46
ImGuiInputTextFlags_AllowTabInput	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_AllowTabInput       = 1 << 10,  \/\/ Pressing TAB input a '\\t' character into the text field$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_AlwaysInsertMode	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_AlwaysInsertMode = 1 << 13,$/;"	e	enum:__anon72
ImGuiInputTextFlags_AlwaysInsertMode	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_AlwaysInsertMode = 1 << 13,$/;"	e	enum:__anon46
ImGuiInputTextFlags_AlwaysInsertMode	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_AlwaysInsertMode    = 1 << 13,  \/\/ Insert mode$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_AutoSelectAll	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_AutoSelectAll = 1 << 4,$/;"	e	enum:__anon72
ImGuiInputTextFlags_AutoSelectAll	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_AutoSelectAll = 1 << 4,$/;"	e	enum:__anon46
ImGuiInputTextFlags_AutoSelectAll	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_AutoSelectAll       = 1 << 4,   \/\/ Select entire text when first taking mouse focus$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackAlways	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackAlways = 1 << 8,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CallbackAlways	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CallbackAlways = 1 << 8,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CallbackAlways	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackAlways      = 1 << 8,   \/\/ Callback on each iteration. User code may query cursor position, modify text buffer.$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackCharFilter	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackCharFilter = 1 << 9,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CallbackCharFilter	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CallbackCharFilter = 1 << 9,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CallbackCharFilter	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackCharFilter  = 1 << 9,   \/\/ Callback on character inputs to replace or discard them. Modify 'EventChar' to replace or discard, or return 1 in callback to discard.$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackCompletion	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackCompletion = 1 << 6,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CallbackCompletion	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CallbackCompletion = 1 << 6,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CallbackCompletion	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackCompletion  = 1 << 6,   \/\/ Callback on pressing TAB (for completion handling)$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackHistory	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackHistory = 1 << 7,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CallbackHistory	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CallbackHistory = 1 << 7,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CallbackHistory	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackHistory     = 1 << 7,   \/\/ Callback on pressing Up\/Down arrows (for history handling)$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackResize	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackResize = 1 << 18,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CallbackResize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CallbackResize = 1 << 18,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CallbackResize	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackResize      = 1 << 18,  \/\/ Callback on buffer capacity changes request (beyond 'buf_size' parameter value), allowing the string to grow. Notify when the string wants to be resized (for string types which hold a cache of their Size). You will be provided a new BufSize in the callback and NEED to honor it. (see misc\/cpp\/imgui_stdlib.h for an example of using this)$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsDecimal	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsDecimal = 1 << 0,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CharsDecimal	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CharsDecimal = 1 << 0,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CharsDecimal	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsDecimal        = 1 << 0,   \/\/ Allow 0123456789.+-*\/$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsHexadecimal	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsHexadecimal = 1 << 1,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CharsHexadecimal	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CharsHexadecimal = 1 << 1,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CharsHexadecimal	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsHexadecimal    = 1 << 1,   \/\/ Allow 0123456789ABCDEFabcdef$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsNoBlank	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsNoBlank = 1 << 3,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CharsNoBlank	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CharsNoBlank = 1 << 3,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CharsNoBlank	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsNoBlank        = 1 << 3,   \/\/ Filter out spaces, tabs$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsScientific	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsScientific = 1 << 17,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CharsScientific	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CharsScientific = 1 << 17,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CharsScientific	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsScientific     = 1 << 17,  \/\/ Allow 0123456789.+-*\/eE (Scientific notation input)$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsUppercase	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsUppercase = 1 << 2,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CharsUppercase	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CharsUppercase = 1 << 2,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CharsUppercase	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsUppercase      = 1 << 2,   \/\/ Turn a..z into A..Z$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CtrlEnterForNewLine	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,$/;"	e	enum:__anon72
ImGuiInputTextFlags_CtrlEnterForNewLine	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,$/;"	e	enum:__anon46
ImGuiInputTextFlags_CtrlEnterForNewLine	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,  \/\/ In multi-line mode, unfocus with Enter, add new line with Ctrl+Enter (default is opposite: unfocus with Ctrl+Enter, add line with Enter).$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_EnterReturnsTrue	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_EnterReturnsTrue = 1 << 5,$/;"	e	enum:__anon72
ImGuiInputTextFlags_EnterReturnsTrue	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_EnterReturnsTrue = 1 << 5,$/;"	e	enum:__anon46
ImGuiInputTextFlags_EnterReturnsTrue	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_EnterReturnsTrue    = 1 << 5,   \/\/ Return 'true' when Enter is pressed (as opposed to every time the value was modified). Consider looking at the IsItemDeactivatedAfterEdit() function.$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_Multiline	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_Multiline = 1 << 20,$/;"	e	enum:__anon72
ImGuiInputTextFlags_Multiline	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_Multiline = 1 << 20,$/;"	e	enum:__anon46
ImGuiInputTextFlags_Multiline	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_Multiline           = 1 << 20,  \/\/ For internal use by InputTextMultiline()$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_NoHorizontalScroll	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_NoHorizontalScroll = 1 << 12,$/;"	e	enum:__anon72
ImGuiInputTextFlags_NoHorizontalScroll	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_NoHorizontalScroll = 1 << 12,$/;"	e	enum:__anon46
ImGuiInputTextFlags_NoHorizontalScroll	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_NoHorizontalScroll  = 1 << 12,  \/\/ Disable following the cursor horizontally$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_NoMarkEdited	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_NoMarkEdited = 1 << 21$/;"	e	enum:__anon72
ImGuiInputTextFlags_NoMarkEdited	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_NoMarkEdited = 1 << 21$/;"	e	enum:__anon46
ImGuiInputTextFlags_NoMarkEdited	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_NoMarkEdited        = 1 << 21   \/\/ For internal use by functions using InputText() before reformatting data$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_NoUndoRedo	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_NoUndoRedo = 1 << 16,$/;"	e	enum:__anon72
ImGuiInputTextFlags_NoUndoRedo	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_NoUndoRedo = 1 << 16,$/;"	e	enum:__anon46
ImGuiInputTextFlags_NoUndoRedo	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_NoUndoRedo          = 1 << 16,  \/\/ Disable undo\/redo. Note that input text owns the text data while active, if you want to provide your own undo\/redo stack you need e.g. to call ClearActiveID().$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_None	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_None = 0,$/;"	e	enum:__anon72
ImGuiInputTextFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_None = 0,$/;"	e	enum:__anon46
ImGuiInputTextFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_None                = 0,$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_Password	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_Password = 1 << 15,$/;"	e	enum:__anon72
ImGuiInputTextFlags_Password	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_Password = 1 << 15,$/;"	e	enum:__anon46
ImGuiInputTextFlags_Password	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_Password            = 1 << 15,  \/\/ Password mode, display all characters as '*'$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_ReadOnly	lib/cimgui/cimgui.h	/^    ImGuiInputTextFlags_ReadOnly = 1 << 14,$/;"	e	enum:__anon72
ImGuiInputTextFlags_ReadOnly	lib/cimgui/generator/output/cimgui.h	/^    ImGuiInputTextFlags_ReadOnly = 1 << 14,$/;"	e	enum:__anon46
ImGuiInputTextFlags_ReadOnly	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_ReadOnly            = 1 << 14,  \/\/ Read-only mode$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextState	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputTextState()                   { memset(this, 0, sizeof(*this)); }$/;"	f	struct:ImGuiInputTextState
ImGuiInputTextState	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiInputTextState$/;"	s
ImGuiItemFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiItemFlags;             \/\/ -> enum ImGuiItemFlags_          \/\/ Flags: for PushItemFlag()$/;"	t
ImGuiItemFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiItemFlags_$/;"	g
ImGuiItemFlags_ButtonRepeat	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_ButtonRepeat             = 1 << 1,  \/\/ false    \/\/ Button() will return true multiple times based on io.KeyRepeatDelay and io.KeyRepeatRate settings.$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_Default_	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_Default_                 = 0$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_Disabled	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_Disabled                 = 1 << 2,  \/\/ false    \/\/ [BETA] Disable interactions but doesn't affect visuals yet. See github.com\/ocornut\/imgui\/issues\/211$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_MixedValue	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_MixedValue               = 1 << 6,  \/\/ false    \/\/ [BETA] Represent a mixed\/indeterminate value, generally multi-selection where values differ. Currently only supported by Checkbox() (later should support all sorts of widgets)$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_NoNav	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_NoNav                    = 1 << 3,  \/\/ false$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_NoNavDefaultFocus	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_NoNavDefaultFocus        = 1 << 4,  \/\/ false$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_NoTabStop	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_NoTabStop                = 1 << 0,  \/\/ false$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_None                     = 0,$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_SelectableDontClosePopup	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_SelectableDontClosePopup = 1 << 5,  \/\/ false    \/\/ MenuItem\/Selectable() automatically closes current Popup window$/;"	e	enum:ImGuiItemFlags_
ImGuiItemHoveredDataBackup	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemHoveredDataBackup() { Backup(); }$/;"	f	struct:ImGuiItemHoveredDataBackup
ImGuiItemHoveredDataBackup	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiItemHoveredDataBackup$/;"	s
ImGuiItemStatusFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiItemStatusFlags;       \/\/ -> enum ImGuiItemStatusFlags_    \/\/ Flags: for DC.LastItemStatusFlags$/;"	t
ImGuiItemStatusFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiItemStatusFlags_$/;"	g
ImGuiItemStatusFlags_Checkable	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_Checkable          = 1 << 12,  \/\/$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_Checked	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_Checked            = 1 << 13   \/\/$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_Deactivated	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_Deactivated        = 1 << 6    \/\/ Only valid if ImGuiItemStatusFlags_HasDeactivated is set.$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_Edited	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_Edited             = 1 << 2,   \/\/ Value exposed by item was edited in the current frame (should match the bool return value of most widgets)$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_HasDeactivated	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_HasDeactivated     = 1 << 5,   \/\/ Set if the widget\/group is able to provide data for the ImGuiItemStatusFlags_Deactivated flag.$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_HasDisplayRect	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_HasDisplayRect     = 1 << 1,$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_HoveredRect	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_HoveredRect        = 1 << 0,$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_None               = 0,$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_Openable	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_Openable           = 1 << 10,  \/\/$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_Opened	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_Opened             = 1 << 11,  \/\/$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_ToggledOpen	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_ToggledOpen        = 1 << 4,   \/\/ Set when TreeNode() reports toggling their open state.$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_ToggledSelection	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_ToggledSelection   = 1 << 3,   \/\/ Set when Selectable(), TreeNode() reports toggling a selection. We can't report "Selected" because reporting the change allows us to handle clipping with less issues.$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiKey	lib/cimgui/cimgui.h	/^typedef int ImGuiKey;$/;"	t
ImGuiKey	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiKey;$/;"	t
ImGuiKey	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiKey;               \/\/ -> enum ImGuiKey_             \/\/ Enum: A key identifier (ImGui-side enum)$/;"	t
ImGuiKey_	lib/cimgui/cimgui.h	/^}ImGuiKey_;$/;"	t	typeref:enum:__anon83
ImGuiKey_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiKey_;$/;"	t	typeref:enum:__anon57
ImGuiKey_	lib/cimgui/imgui/imgui.h	/^enum ImGuiKey_$/;"	g
ImGuiKey_A	lib/cimgui/cimgui.h	/^    ImGuiKey_A,$/;"	e	enum:__anon83
ImGuiKey_A	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_A,$/;"	e	enum:__anon57
ImGuiKey_A	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_A,                 \/\/ for text edit CTRL+A: select all$/;"	e	enum:ImGuiKey_
ImGuiKey_Backspace	lib/cimgui/cimgui.h	/^    ImGuiKey_Backspace,$/;"	e	enum:__anon83
ImGuiKey_Backspace	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Backspace,$/;"	e	enum:__anon57
ImGuiKey_Backspace	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Backspace,$/;"	e	enum:ImGuiKey_
ImGuiKey_C	lib/cimgui/cimgui.h	/^    ImGuiKey_C,$/;"	e	enum:__anon83
ImGuiKey_C	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_C,$/;"	e	enum:__anon57
ImGuiKey_C	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_C,                 \/\/ for text edit CTRL+C: copy$/;"	e	enum:ImGuiKey_
ImGuiKey_COUNT	lib/cimgui/cimgui.h	/^    ImGuiKey_COUNT$/;"	e	enum:__anon83
ImGuiKey_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_COUNT$/;"	e	enum:__anon57
ImGuiKey_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_COUNT$/;"	e	enum:ImGuiKey_
ImGuiKey_Delete	lib/cimgui/cimgui.h	/^    ImGuiKey_Delete,$/;"	e	enum:__anon83
ImGuiKey_Delete	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Delete,$/;"	e	enum:__anon57
ImGuiKey_Delete	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Delete,$/;"	e	enum:ImGuiKey_
ImGuiKey_DownArrow	lib/cimgui/cimgui.h	/^    ImGuiKey_DownArrow,$/;"	e	enum:__anon83
ImGuiKey_DownArrow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_DownArrow,$/;"	e	enum:__anon57
ImGuiKey_DownArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_DownArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_End	lib/cimgui/cimgui.h	/^    ImGuiKey_End,$/;"	e	enum:__anon83
ImGuiKey_End	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_End,$/;"	e	enum:__anon57
ImGuiKey_End	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_End,$/;"	e	enum:ImGuiKey_
ImGuiKey_Enter	lib/cimgui/cimgui.h	/^    ImGuiKey_Enter,$/;"	e	enum:__anon83
ImGuiKey_Enter	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Enter,$/;"	e	enum:__anon57
ImGuiKey_Enter	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Enter,$/;"	e	enum:ImGuiKey_
ImGuiKey_Escape	lib/cimgui/cimgui.h	/^    ImGuiKey_Escape,$/;"	e	enum:__anon83
ImGuiKey_Escape	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Escape,$/;"	e	enum:__anon57
ImGuiKey_Escape	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Escape,$/;"	e	enum:ImGuiKey_
ImGuiKey_Home	lib/cimgui/cimgui.h	/^    ImGuiKey_Home,$/;"	e	enum:__anon83
ImGuiKey_Home	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Home,$/;"	e	enum:__anon57
ImGuiKey_Home	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Home,$/;"	e	enum:ImGuiKey_
ImGuiKey_Insert	lib/cimgui/cimgui.h	/^    ImGuiKey_Insert,$/;"	e	enum:__anon83
ImGuiKey_Insert	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Insert,$/;"	e	enum:__anon57
ImGuiKey_Insert	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Insert,$/;"	e	enum:ImGuiKey_
ImGuiKey_KeyPadEnter	lib/cimgui/cimgui.h	/^    ImGuiKey_KeyPadEnter,$/;"	e	enum:__anon83
ImGuiKey_KeyPadEnter	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_KeyPadEnter,$/;"	e	enum:__anon57
ImGuiKey_KeyPadEnter	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_KeyPadEnter,$/;"	e	enum:ImGuiKey_
ImGuiKey_LeftArrow	lib/cimgui/cimgui.h	/^    ImGuiKey_LeftArrow,$/;"	e	enum:__anon83
ImGuiKey_LeftArrow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_LeftArrow,$/;"	e	enum:__anon57
ImGuiKey_LeftArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_LeftArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_PageDown	lib/cimgui/cimgui.h	/^    ImGuiKey_PageDown,$/;"	e	enum:__anon83
ImGuiKey_PageDown	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_PageDown,$/;"	e	enum:__anon57
ImGuiKey_PageDown	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_PageDown,$/;"	e	enum:ImGuiKey_
ImGuiKey_PageUp	lib/cimgui/cimgui.h	/^    ImGuiKey_PageUp,$/;"	e	enum:__anon83
ImGuiKey_PageUp	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_PageUp,$/;"	e	enum:__anon57
ImGuiKey_PageUp	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_PageUp,$/;"	e	enum:ImGuiKey_
ImGuiKey_RightArrow	lib/cimgui/cimgui.h	/^    ImGuiKey_RightArrow,$/;"	e	enum:__anon83
ImGuiKey_RightArrow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_RightArrow,$/;"	e	enum:__anon57
ImGuiKey_RightArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_RightArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_Space	lib/cimgui/cimgui.h	/^    ImGuiKey_Space,$/;"	e	enum:__anon83
ImGuiKey_Space	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Space,$/;"	e	enum:__anon57
ImGuiKey_Space	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Space,$/;"	e	enum:ImGuiKey_
ImGuiKey_Tab	lib/cimgui/cimgui.h	/^    ImGuiKey_Tab,$/;"	e	enum:__anon83
ImGuiKey_Tab	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Tab,$/;"	e	enum:__anon57
ImGuiKey_Tab	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Tab,$/;"	e	enum:ImGuiKey_
ImGuiKey_UpArrow	lib/cimgui/cimgui.h	/^    ImGuiKey_UpArrow,$/;"	e	enum:__anon83
ImGuiKey_UpArrow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_UpArrow,$/;"	e	enum:__anon57
ImGuiKey_UpArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_UpArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_V	lib/cimgui/cimgui.h	/^    ImGuiKey_V,$/;"	e	enum:__anon83
ImGuiKey_V	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_V,$/;"	e	enum:__anon57
ImGuiKey_V	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_V,                 \/\/ for text edit CTRL+V: paste$/;"	e	enum:ImGuiKey_
ImGuiKey_X	lib/cimgui/cimgui.h	/^    ImGuiKey_X,$/;"	e	enum:__anon83
ImGuiKey_X	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_X,$/;"	e	enum:__anon57
ImGuiKey_X	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_X,                 \/\/ for text edit CTRL+X: cut$/;"	e	enum:ImGuiKey_
ImGuiKey_Y	lib/cimgui/cimgui.h	/^    ImGuiKey_Y,$/;"	e	enum:__anon83
ImGuiKey_Y	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Y,$/;"	e	enum:__anon57
ImGuiKey_Y	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Y,                 \/\/ for text edit CTRL+Y: redo$/;"	e	enum:ImGuiKey_
ImGuiKey_Z	lib/cimgui/cimgui.h	/^    ImGuiKey_Z,$/;"	e	enum:__anon83
ImGuiKey_Z	lib/cimgui/generator/output/cimgui.h	/^    ImGuiKey_Z,$/;"	e	enum:__anon57
ImGuiKey_Z	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Z,                 \/\/ for text edit CTRL+Z: undo$/;"	e	enum:ImGuiKey_
ImGuiLayoutType	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiLayoutType;            \/\/ -> enum ImGuiLayoutType_         \/\/ Enum: Horizontal or vertical$/;"	t
ImGuiLayoutType_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiLayoutType_$/;"	g
ImGuiLayoutType_Horizontal	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType_Horizontal = 0,$/;"	e	enum:ImGuiLayoutType_
ImGuiLayoutType_Vertical	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType_Vertical = 1$/;"	e	enum:ImGuiLayoutType_
ImGuiListClipper	lib/cimgui/cimgui.h	/^struct ImGuiListClipper$/;"	s
ImGuiListClipper	lib/cimgui/cimgui.h	/^typedef struct ImGuiListClipper ImGuiListClipper;$/;"	t	typeref:struct:ImGuiListClipper
ImGuiListClipper	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiListClipper$/;"	s
ImGuiListClipper	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiListClipper ImGuiListClipper;$/;"	t	typeref:struct:ImGuiListClipper
ImGuiListClipper	lib/cimgui/imgui/imgui.h	/^    ImGuiListClipper(int items_count = -1, float items_height = -1.0f)  { Begin(items_count, items_height); } \/\/ NB: Begin() initialize every fields (as we allow user to call Begin\/End multiple times on a same instance if they want).$/;"	f	struct:ImGuiListClipper
ImGuiListClipper	lib/cimgui/imgui/imgui.h	/^struct ImGuiListClipper$/;"	s
ImGuiListClipper_Begin	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiListClipper_Begin(ImGuiListClipper* self,int items_count,float items_height)$/;"	f
ImGuiListClipper_Begin	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiListClipper_Begin(ImGuiListClipper* self,int items_count,float items_height)$/;"	f
ImGuiListClipper_End	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiListClipper_End(ImGuiListClipper* self)$/;"	f
ImGuiListClipper_End	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiListClipper_End(ImGuiListClipper* self)$/;"	f
ImGuiListClipper_ImGuiListClipper	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiListClipper* ImGuiListClipper_ImGuiListClipper(int items_count,float items_height)$/;"	f
ImGuiListClipper_ImGuiListClipper	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiListClipper* ImGuiListClipper_ImGuiListClipper(int items_count,float items_height)$/;"	f
ImGuiListClipper_Step	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiListClipper_Step(ImGuiListClipper* self)$/;"	f
ImGuiListClipper_Step	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiListClipper_Step(ImGuiListClipper* self)$/;"	f
ImGuiListClipper_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiListClipper_destroy(ImGuiListClipper* self)$/;"	f
ImGuiListClipper_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiListClipper_destroy(ImGuiListClipper* self)$/;"	f
ImGuiLogType	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiLogType$/;"	g
ImGuiLogType_Buffer	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLogType_Buffer,$/;"	e	enum:ImGuiLogType
ImGuiLogType_Clipboard	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLogType_Clipboard$/;"	e	enum:ImGuiLogType
ImGuiLogType_File	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLogType_File,$/;"	e	enum:ImGuiLogType
ImGuiLogType_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLogType_None = 0,$/;"	e	enum:ImGuiLogType
ImGuiLogType_TTY	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLogType_TTY,$/;"	e	enum:ImGuiLogType
ImGuiMenuColumns	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiMenuColumns$/;"	s
ImGuiMenuColumns	lib/cimgui/imgui/imgui_widgets.cpp	/^ImGuiMenuColumns::ImGuiMenuColumns()$/;"	f	class:ImGuiMenuColumns
ImGuiMouseButton	lib/cimgui/cimgui.h	/^typedef int ImGuiMouseButton;$/;"	t
ImGuiMouseButton	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiMouseButton;$/;"	t
ImGuiMouseButton	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiMouseButton;       \/\/ -> enum ImGuiMouseButton_     \/\/ Enum: A mouse button identifier (0=left, 1=right, 2=middle)$/;"	t
ImGuiMouseButton_	lib/cimgui/cimgui.h	/^}ImGuiMouseButton_;$/;"	t	typeref:enum:__anon90
ImGuiMouseButton_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiMouseButton_;$/;"	t	typeref:enum:__anon64
ImGuiMouseButton_	lib/cimgui/imgui/imgui.h	/^enum ImGuiMouseButton_$/;"	g
ImGuiMouseButton_COUNT	lib/cimgui/cimgui.h	/^    ImGuiMouseButton_COUNT = 5$/;"	e	enum:__anon90
ImGuiMouseButton_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseButton_COUNT = 5$/;"	e	enum:__anon64
ImGuiMouseButton_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseButton_COUNT = 5$/;"	e	enum:ImGuiMouseButton_
ImGuiMouseButton_Left	lib/cimgui/cimgui.h	/^    ImGuiMouseButton_Left = 0,$/;"	e	enum:__anon90
ImGuiMouseButton_Left	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseButton_Left = 0,$/;"	e	enum:__anon64
ImGuiMouseButton_Left	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseButton_Left = 0,$/;"	e	enum:ImGuiMouseButton_
ImGuiMouseButton_Middle	lib/cimgui/cimgui.h	/^    ImGuiMouseButton_Middle = 2,$/;"	e	enum:__anon90
ImGuiMouseButton_Middle	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseButton_Middle = 2,$/;"	e	enum:__anon64
ImGuiMouseButton_Middle	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseButton_Middle = 2,$/;"	e	enum:ImGuiMouseButton_
ImGuiMouseButton_Right	lib/cimgui/cimgui.h	/^    ImGuiMouseButton_Right = 1,$/;"	e	enum:__anon90
ImGuiMouseButton_Right	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseButton_Right = 1,$/;"	e	enum:__anon64
ImGuiMouseButton_Right	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseButton_Right = 1,$/;"	e	enum:ImGuiMouseButton_
ImGuiMouseCursor	lib/cimgui/cimgui.h	/^typedef int ImGuiMouseCursor;$/;"	t
ImGuiMouseCursor	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiMouseCursor;$/;"	t
ImGuiMouseCursor	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiMouseCursor;       \/\/ -> enum ImGuiMouseCursor_     \/\/ Enum: A mouse cursor identifier$/;"	t
ImGuiMouseCursor_	lib/cimgui/cimgui.h	/^}ImGuiMouseCursor_;$/;"	t	typeref:enum:__anon91
ImGuiMouseCursor_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiMouseCursor_;$/;"	t	typeref:enum:__anon65
ImGuiMouseCursor_	lib/cimgui/imgui/imgui.h	/^enum ImGuiMouseCursor_$/;"	g
ImGuiMouseCursor_Arrow	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_Arrow = 0,$/;"	e	enum:__anon91
ImGuiMouseCursor_Arrow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_Arrow = 0,$/;"	e	enum:__anon65
ImGuiMouseCursor_Arrow	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_Arrow = 0,$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_COUNT	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_COUNT$/;"	e	enum:__anon91
ImGuiMouseCursor_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_COUNT$/;"	e	enum:__anon65
ImGuiMouseCursor_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_COUNT$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_Count_	lib/cimgui/imgui/imgui.h	/^    , ImGuiMouseCursor_Count_ = ImGuiMouseCursor_COUNT      \/\/ [renamed in 1.60]$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_Hand	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_Hand,$/;"	e	enum:__anon91
ImGuiMouseCursor_Hand	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_Hand,$/;"	e	enum:__anon65
ImGuiMouseCursor_Hand	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_Hand,              \/\/ (Unused by Dear ImGui functions. Use for e.g. hyperlinks)$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_None	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_None = -1,$/;"	e	enum:__anon91
ImGuiMouseCursor_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_None = -1,$/;"	e	enum:__anon65
ImGuiMouseCursor_None	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_None = -1,$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_NotAllowed	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_NotAllowed,$/;"	e	enum:__anon91
ImGuiMouseCursor_NotAllowed	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_NotAllowed,$/;"	e	enum:__anon65
ImGuiMouseCursor_NotAllowed	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_NotAllowed,        \/\/ When hovering something with disallowed interaction. Usually a crossed circle.$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeAll	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeAll,$/;"	e	enum:__anon91
ImGuiMouseCursor_ResizeAll	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_ResizeAll,$/;"	e	enum:__anon65
ImGuiMouseCursor_ResizeAll	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeAll,         \/\/ (Unused by Dear ImGui functions)$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeEW	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeEW,$/;"	e	enum:__anon91
ImGuiMouseCursor_ResizeEW	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_ResizeEW,$/;"	e	enum:__anon65
ImGuiMouseCursor_ResizeEW	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeEW,          \/\/ When hovering over a vertical border or a column$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNESW	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeNESW,$/;"	e	enum:__anon91
ImGuiMouseCursor_ResizeNESW	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_ResizeNESW,$/;"	e	enum:__anon65
ImGuiMouseCursor_ResizeNESW	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNESW,        \/\/ When hovering over the bottom-left corner of a window$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNS	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeNS,$/;"	e	enum:__anon91
ImGuiMouseCursor_ResizeNS	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_ResizeNS,$/;"	e	enum:__anon65
ImGuiMouseCursor_ResizeNS	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNS,          \/\/ When hovering over an horizontal border$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNWSE	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeNWSE,$/;"	e	enum:__anon91
ImGuiMouseCursor_ResizeNWSE	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_ResizeNWSE,$/;"	e	enum:__anon65
ImGuiMouseCursor_ResizeNWSE	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNWSE,        \/\/ When hovering over the bottom-right corner of a window$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_TextInput	lib/cimgui/cimgui.h	/^    ImGuiMouseCursor_TextInput,$/;"	e	enum:__anon91
ImGuiMouseCursor_TextInput	lib/cimgui/generator/output/cimgui.h	/^    ImGuiMouseCursor_TextInput,$/;"	e	enum:__anon65
ImGuiMouseCursor_TextInput	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_TextInput,         \/\/ When hovering over InputText, etc.$/;"	e	enum:ImGuiMouseCursor_
ImGuiNavDirSourceFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiNavDirSourceFlags;     \/\/ -> enum ImGuiNavDirSourceFlags_  \/\/ Flags: for GetNavInputAmount2d()$/;"	t
ImGuiNavDirSourceFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavDirSourceFlags_$/;"	g
ImGuiNavDirSourceFlags_Keyboard	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavDirSourceFlags_Keyboard     = 1 << 0,$/;"	e	enum:ImGuiNavDirSourceFlags_
ImGuiNavDirSourceFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavDirSourceFlags_None         = 0,$/;"	e	enum:ImGuiNavDirSourceFlags_
ImGuiNavDirSourceFlags_PadDPad	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavDirSourceFlags_PadDPad      = 1 << 1,$/;"	e	enum:ImGuiNavDirSourceFlags_
ImGuiNavDirSourceFlags_PadLStick	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavDirSourceFlags_PadLStick    = 1 << 2$/;"	e	enum:ImGuiNavDirSourceFlags_
ImGuiNavForward	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavForward$/;"	g
ImGuiNavForward_ForwardActive	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward_ForwardActive$/;"	e	enum:ImGuiNavForward
ImGuiNavForward_ForwardQueued	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward_ForwardQueued,$/;"	e	enum:ImGuiNavForward
ImGuiNavForward_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward_None,$/;"	e	enum:ImGuiNavForward
ImGuiNavHighlightFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiNavHighlightFlags;     \/\/ -> enum ImGuiNavHighlightFlags_  \/\/ Flags: for RenderNavHighlight()$/;"	t
ImGuiNavHighlightFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavHighlightFlags_$/;"	g
ImGuiNavHighlightFlags_AlwaysDraw	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_AlwaysDraw   = 1 << 2,       \/\/ Draw rectangular highlight if (g.NavId == id) _even_ when using the mouse.$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavHighlightFlags_NoRounding	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_NoRounding   = 1 << 3$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavHighlightFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_None         = 0,$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavHighlightFlags_TypeDefault	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_TypeDefault  = 1 << 0,$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavHighlightFlags_TypeThin	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_TypeThin     = 1 << 1,$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavInput	lib/cimgui/cimgui.h	/^typedef int ImGuiNavInput;$/;"	t
ImGuiNavInput	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiNavInput;$/;"	t
ImGuiNavInput	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiNavInput;          \/\/ -> enum ImGuiNavInput_        \/\/ Enum: An input identifier for navigation$/;"	t
ImGuiNavInput_	lib/cimgui/cimgui.h	/^}ImGuiNavInput_;$/;"	t	typeref:enum:__anon84
ImGuiNavInput_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiNavInput_;$/;"	t	typeref:enum:__anon58
ImGuiNavInput_	lib/cimgui/imgui/imgui.h	/^enum ImGuiNavInput_$/;"	g
ImGuiNavInput_Activate	lib/cimgui/cimgui.h	/^    ImGuiNavInput_Activate,$/;"	e	enum:__anon84
ImGuiNavInput_Activate	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_Activate,$/;"	e	enum:__anon58
ImGuiNavInput_Activate	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Activate,      \/\/ activate \/ open \/ toggle \/ tweak value       \/\/ e.g. Cross  (PS4), A (Xbox), A (Switch), Space (Keyboard)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_COUNT	lib/cimgui/cimgui.h	/^    ImGuiNavInput_COUNT,$/;"	e	enum:__anon84
ImGuiNavInput_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_COUNT,$/;"	e	enum:__anon58
ImGuiNavInput_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_COUNT,$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Cancel	lib/cimgui/cimgui.h	/^    ImGuiNavInput_Cancel,$/;"	e	enum:__anon84
ImGuiNavInput_Cancel	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_Cancel,$/;"	e	enum:__anon58
ImGuiNavInput_Cancel	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Cancel,        \/\/ cancel \/ close \/ exit                        \/\/ e.g. Circle (PS4), B (Xbox), B (Switch), Escape (Keyboard)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadDown	lib/cimgui/cimgui.h	/^    ImGuiNavInput_DpadDown,$/;"	e	enum:__anon84
ImGuiNavInput_DpadDown	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_DpadDown,$/;"	e	enum:__anon58
ImGuiNavInput_DpadDown	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadDown,      \/\/$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadLeft	lib/cimgui/cimgui.h	/^    ImGuiNavInput_DpadLeft,$/;"	e	enum:__anon84
ImGuiNavInput_DpadLeft	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_DpadLeft,$/;"	e	enum:__anon58
ImGuiNavInput_DpadLeft	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadLeft,      \/\/ move \/ tweak \/ resize window (w\/ PadMenu)    \/\/ e.g. D-pad Left\/Right\/Up\/Down (Gamepads), Arrow keys (Keyboard)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadRight	lib/cimgui/cimgui.h	/^    ImGuiNavInput_DpadRight,$/;"	e	enum:__anon84
ImGuiNavInput_DpadRight	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_DpadRight,$/;"	e	enum:__anon58
ImGuiNavInput_DpadRight	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadRight,     \/\/$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadUp	lib/cimgui/cimgui.h	/^    ImGuiNavInput_DpadUp,$/;"	e	enum:__anon84
ImGuiNavInput_DpadUp	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_DpadUp,$/;"	e	enum:__anon58
ImGuiNavInput_DpadUp	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadUp,        \/\/$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_FocusNext	lib/cimgui/cimgui.h	/^    ImGuiNavInput_FocusNext,$/;"	e	enum:__anon84
ImGuiNavInput_FocusNext	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_FocusNext,$/;"	e	enum:__anon58
ImGuiNavInput_FocusNext	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_FocusNext,     \/\/ prev window (w\/ PadMenu)                     \/\/ e.g. R1 or R2 (PS4), RB or RT (Xbox), R or ZL (Switch)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_FocusPrev	lib/cimgui/cimgui.h	/^    ImGuiNavInput_FocusPrev,$/;"	e	enum:__anon84
ImGuiNavInput_FocusPrev	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_FocusPrev,$/;"	e	enum:__anon58
ImGuiNavInput_FocusPrev	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_FocusPrev,     \/\/ next window (w\/ PadMenu)                     \/\/ e.g. L1 or L2 (PS4), LB or LT (Xbox), L or ZL (Switch)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Input	lib/cimgui/cimgui.h	/^    ImGuiNavInput_Input,$/;"	e	enum:__anon84
ImGuiNavInput_Input	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_Input,$/;"	e	enum:__anon58
ImGuiNavInput_Input	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Input,         \/\/ text input \/ on-screen keyboard              \/\/ e.g. Triang.(PS4), Y (Xbox), X (Switch), Return (Keyboard)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_InternalStart_	lib/cimgui/cimgui.h	/^    ImGuiNavInput_InternalStart_ = ImGuiNavInput_KeyMenu_$/;"	e	enum:__anon84
ImGuiNavInput_InternalStart_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_InternalStart_ = ImGuiNavInput_KeyMenu_$/;"	e	enum:__anon58
ImGuiNavInput_InternalStart_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_InternalStart_ = ImGuiNavInput_KeyMenu_$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyDown_	lib/cimgui/cimgui.h	/^    ImGuiNavInput_KeyDown_,$/;"	e	enum:__anon84
ImGuiNavInput_KeyDown_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_KeyDown_,$/;"	e	enum:__anon58
ImGuiNavInput_KeyDown_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyDown_,      \/\/ move down$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyLeft_	lib/cimgui/cimgui.h	/^    ImGuiNavInput_KeyLeft_,$/;"	e	enum:__anon84
ImGuiNavInput_KeyLeft_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_KeyLeft_,$/;"	e	enum:__anon58
ImGuiNavInput_KeyLeft_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyLeft_,      \/\/ move left                                    \/\/ = Arrow keys$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyMenu_	lib/cimgui/cimgui.h	/^    ImGuiNavInput_KeyMenu_,$/;"	e	enum:__anon84
ImGuiNavInput_KeyMenu_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_KeyMenu_,$/;"	e	enum:__anon58
ImGuiNavInput_KeyMenu_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyMenu_,      \/\/ toggle menu                                  \/\/ = io.KeyAlt$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyRight_	lib/cimgui/cimgui.h	/^    ImGuiNavInput_KeyRight_,$/;"	e	enum:__anon84
ImGuiNavInput_KeyRight_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_KeyRight_,$/;"	e	enum:__anon58
ImGuiNavInput_KeyRight_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyRight_,     \/\/ move right$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyUp_	lib/cimgui/cimgui.h	/^    ImGuiNavInput_KeyUp_,$/;"	e	enum:__anon84
ImGuiNavInput_KeyUp_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_KeyUp_,$/;"	e	enum:__anon58
ImGuiNavInput_KeyUp_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyUp_,        \/\/ move up$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickDown	lib/cimgui/cimgui.h	/^    ImGuiNavInput_LStickDown,$/;"	e	enum:__anon84
ImGuiNavInput_LStickDown	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_LStickDown,$/;"	e	enum:__anon58
ImGuiNavInput_LStickDown	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickDown,    \/\/$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickLeft	lib/cimgui/cimgui.h	/^    ImGuiNavInput_LStickLeft,$/;"	e	enum:__anon84
ImGuiNavInput_LStickLeft	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_LStickLeft,$/;"	e	enum:__anon58
ImGuiNavInput_LStickLeft	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickLeft,    \/\/ scroll \/ move window (w\/ PadMenu)            \/\/ e.g. Left Analog Stick Left\/Right\/Up\/Down$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickRight	lib/cimgui/cimgui.h	/^    ImGuiNavInput_LStickRight,$/;"	e	enum:__anon84
ImGuiNavInput_LStickRight	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_LStickRight,$/;"	e	enum:__anon58
ImGuiNavInput_LStickRight	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickRight,   \/\/$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickUp	lib/cimgui/cimgui.h	/^    ImGuiNavInput_LStickUp,$/;"	e	enum:__anon84
ImGuiNavInput_LStickUp	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_LStickUp,$/;"	e	enum:__anon58
ImGuiNavInput_LStickUp	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickUp,      \/\/$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Menu	lib/cimgui/cimgui.h	/^    ImGuiNavInput_Menu,$/;"	e	enum:__anon84
ImGuiNavInput_Menu	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_Menu,$/;"	e	enum:__anon58
ImGuiNavInput_Menu	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Menu,          \/\/ tap: toggle menu \/ hold: focus, move, resize \/\/ e.g. Square (PS4), X (Xbox), Y (Switch), Alt (Keyboard)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_TweakFast	lib/cimgui/cimgui.h	/^    ImGuiNavInput_TweakFast,$/;"	e	enum:__anon84
ImGuiNavInput_TweakFast	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_TweakFast,$/;"	e	enum:__anon58
ImGuiNavInput_TweakFast	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_TweakFast,     \/\/ faster tweaks                                \/\/ e.g. R1 or R2 (PS4), RB or RT (Xbox), R or ZL (Switch)$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_TweakSlow	lib/cimgui/cimgui.h	/^    ImGuiNavInput_TweakSlow,$/;"	e	enum:__anon84
ImGuiNavInput_TweakSlow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiNavInput_TweakSlow,$/;"	e	enum:__anon58
ImGuiNavInput_TweakSlow	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_TweakSlow,     \/\/ slower tweaks                                \/\/ e.g. L1 or L2 (PS4), LB or LT (Xbox), L or ZL (Switch)$/;"	e	enum:ImGuiNavInput_
ImGuiNavLayer	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavLayer$/;"	g
ImGuiNavLayer_COUNT	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavLayer_COUNT$/;"	e	enum:ImGuiNavLayer
ImGuiNavLayer_Main	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavLayer_Main  = 0,    \/\/ Main scrolling layer$/;"	e	enum:ImGuiNavLayer
ImGuiNavLayer_Menu	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavLayer_Menu  = 1,    \/\/ Menu layer (access with Alt\/ImGuiNavInput_Menu)$/;"	e	enum:ImGuiNavLayer
ImGuiNavMoveFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiNavMoveFlags;          \/\/ -> enum ImGuiNavMoveFlags_       \/\/ Flags: for navigation requests$/;"	t
ImGuiNavMoveFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavMoveFlags_$/;"	g
ImGuiNavMoveFlags_AllowCurrentNavId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_AllowCurrentNavId     = 1 << 4,   \/\/ Allow scoring and considering the current NavId as a move target candidate. This is used when the move source is offset (e.g. pressing PageDown actually needs to send a Up move request, if we are pressing PageDown from the bottom-most item we need to stay in place)$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveFlags_AlsoScoreVisibleSet	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_AlsoScoreVisibleSet   = 1 << 5,   \/\/ Store alternate result in NavMoveResultLocalVisibleSet that only comprise elements that are already fully visible.$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveFlags_LoopX	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_LoopX                 = 1 << 0,   \/\/ On failed request, restart from opposite side$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveFlags_LoopY	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_LoopY                 = 1 << 1,$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_None                  = 0,$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveFlags_ScrollToEdge	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_ScrollToEdge          = 1 << 6$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveFlags_WrapX	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_WrapX                 = 1 << 2,   \/\/ On failed request, request from opposite side one line down (when NavDir==right) or one line up (when NavDir==left)$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveFlags_WrapY	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags_WrapY                 = 1 << 3,   \/\/ This is not super useful for provided for completeness$/;"	e	enum:ImGuiNavMoveFlags_
ImGuiNavMoveResult	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveResult() { Clear(); }$/;"	f	struct:ImGuiNavMoveResult
ImGuiNavMoveResult	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiNavMoveResult$/;"	s
ImGuiNextItemData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextItemData()         { memset(this, 0, sizeof(*this)); }$/;"	f	struct:ImGuiNextItemData
ImGuiNextItemData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiNextItemData$/;"	s
ImGuiNextItemDataFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiNextItemDataFlags;     \/\/ -> enum ImGuiNextItemDataFlags_  \/\/ Flags: for SetNextItemXXX() functions$/;"	t
ImGuiNextItemDataFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNextItemDataFlags_$/;"	g
ImGuiNextItemDataFlags_HasOpen	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextItemDataFlags_HasOpen  = 1 << 1$/;"	e	enum:ImGuiNextItemDataFlags_
ImGuiNextItemDataFlags_HasWidth	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextItemDataFlags_HasWidth = 1 << 0,$/;"	e	enum:ImGuiNextItemDataFlags_
ImGuiNextItemDataFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextItemDataFlags_None     = 0,$/;"	e	enum:ImGuiNextItemDataFlags_
ImGuiNextWindowData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowData()       { memset(this, 0, sizeof(*this)); }$/;"	f	struct:ImGuiNextWindowData
ImGuiNextWindowData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiNextWindowData$/;"	s
ImGuiNextWindowDataFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiNextWindowDataFlags;   \/\/ -> enum ImGuiNextWindowDataFlags_\/\/ Flags: for SetNextWindowXXX() functions$/;"	t
ImGuiNextWindowDataFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNextWindowDataFlags_$/;"	g
ImGuiNextWindowDataFlags_HasBgAlpha	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_HasBgAlpha         = 1 << 6$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiNextWindowDataFlags_HasCollapsed	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_HasCollapsed       = 1 << 3,$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiNextWindowDataFlags_HasContentSize	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_HasContentSize     = 1 << 2,$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiNextWindowDataFlags_HasFocus	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_HasFocus           = 1 << 5,$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiNextWindowDataFlags_HasPos	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_HasPos             = 1 << 0,$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiNextWindowDataFlags_HasSize	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_HasSize            = 1 << 1,$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiNextWindowDataFlags_HasSizeConstraint	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_HasSizeConstraint  = 1 << 4,$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiNextWindowDataFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowDataFlags_None               = 0,$/;"	e	enum:ImGuiNextWindowDataFlags_
ImGuiOnceUponAFrame	lib/cimgui/cimgui.h	/^struct ImGuiOnceUponAFrame$/;"	s
ImGuiOnceUponAFrame	lib/cimgui/cimgui.h	/^typedef struct ImGuiOnceUponAFrame ImGuiOnceUponAFrame;$/;"	t	typeref:struct:ImGuiOnceUponAFrame
ImGuiOnceUponAFrame	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiOnceUponAFrame$/;"	s
ImGuiOnceUponAFrame	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiOnceUponAFrame ImGuiOnceUponAFrame;$/;"	t	typeref:struct:ImGuiOnceUponAFrame
ImGuiOnceUponAFrame	lib/cimgui/imgui/imgui.h	/^    ImGuiOnceUponAFrame() { RefFrame = -1; }$/;"	f	struct:ImGuiOnceUponAFrame
ImGuiOnceUponAFrame	lib/cimgui/imgui/imgui.h	/^struct ImGuiOnceUponAFrame$/;"	s
ImGuiOnceUponAFrame_ImGuiOnceUponAFrame	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiOnceUponAFrame* ImGuiOnceUponAFrame_ImGuiOnceUponAFrame(void)$/;"	f
ImGuiOnceUponAFrame_ImGuiOnceUponAFrame	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiOnceUponAFrame* ImGuiOnceUponAFrame_ImGuiOnceUponAFrame(void)$/;"	f
ImGuiOnceUponAFrame_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiOnceUponAFrame_destroy(ImGuiOnceUponAFrame* self)$/;"	f
ImGuiOnceUponAFrame_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiOnceUponAFrame_destroy(ImGuiOnceUponAFrame* self)$/;"	f
ImGuiPayload	lib/cimgui/cimgui.h	/^struct ImGuiPayload$/;"	s
ImGuiPayload	lib/cimgui/cimgui.h	/^typedef struct ImGuiPayload ImGuiPayload;$/;"	t	typeref:struct:ImGuiPayload
ImGuiPayload	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiPayload$/;"	s
ImGuiPayload	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiPayload ImGuiPayload;$/;"	t	typeref:struct:ImGuiPayload
ImGuiPayload	lib/cimgui/imgui/imgui.h	/^    ImGuiPayload()  { Clear(); }$/;"	f	struct:ImGuiPayload
ImGuiPayload	lib/cimgui/imgui/imgui.h	/^struct ImGuiPayload$/;"	s
ImGuiPayload_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiPayload_Clear(ImGuiPayload* self)$/;"	f
ImGuiPayload_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiPayload_Clear(ImGuiPayload* self)$/;"	f
ImGuiPayload_ImGuiPayload	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiPayload* ImGuiPayload_ImGuiPayload(void)$/;"	f
ImGuiPayload_ImGuiPayload	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiPayload* ImGuiPayload_ImGuiPayload(void)$/;"	f
ImGuiPayload_IsDataType	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiPayload_IsDataType(ImGuiPayload* self,const char* type)$/;"	f
ImGuiPayload_IsDataType	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiPayload_IsDataType(ImGuiPayload* self,const char* type)$/;"	f
ImGuiPayload_IsDelivery	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiPayload_IsDelivery(ImGuiPayload* self)$/;"	f
ImGuiPayload_IsDelivery	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiPayload_IsDelivery(ImGuiPayload* self)$/;"	f
ImGuiPayload_IsPreview	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiPayload_IsPreview(ImGuiPayload* self)$/;"	f
ImGuiPayload_IsPreview	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiPayload_IsPreview(ImGuiPayload* self)$/;"	f
ImGuiPayload_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiPayload_destroy(ImGuiPayload* self)$/;"	f
ImGuiPayload_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiPayload_destroy(ImGuiPayload* self)$/;"	f
ImGuiPlatformIO_Set_Platform_GetWindowPos	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void ImGuiPlatformIO_Set_Platform_GetWindowPos(ImGuiPlatformIO* platform_io, void(*user_callback)(ImGuiViewport* vp, ImVec2* out_pos))$/;"	f
ImGuiPlatformIO_Set_Platform_GetWindowSize	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void ImGuiPlatformIO_Set_Platform_GetWindowSize(ImGuiPlatformIO* platform_io, void(*user_callback)(ImGuiViewport* vp, ImVec2* out_size))$/;"	f
ImGuiPlotArrayGetterData	lib/cimgui/imgui/imgui_widgets.cpp	/^    ImGuiPlotArrayGetterData(const float* values, int stride) { Values = values; Stride = stride; }$/;"	f	struct:ImGuiPlotArrayGetterData
ImGuiPlotArrayGetterData	lib/cimgui/imgui/imgui_widgets.cpp	/^struct ImGuiPlotArrayGetterData$/;"	s	file:
ImGuiPlotType	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiPlotType$/;"	g
ImGuiPlotType_Histogram	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPlotType_Histogram$/;"	e	enum:ImGuiPlotType
ImGuiPlotType_Lines	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPlotType_Lines,$/;"	e	enum:ImGuiPlotType
ImGuiPopupData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPopupData() { PopupId = 0; Window = SourceWindow = NULL; OpenFrameCount = -1; OpenParentId = 0; }$/;"	f	struct:ImGuiPopupData
ImGuiPopupData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiPopupData$/;"	s
ImGuiPopupPositionPolicy	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiPopupPositionPolicy$/;"	g
ImGuiPopupPositionPolicy_ComboBox	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPopupPositionPolicy_ComboBox$/;"	e	enum:ImGuiPopupPositionPolicy
ImGuiPopupPositionPolicy_Default	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPopupPositionPolicy_Default,$/;"	e	enum:ImGuiPopupPositionPolicy
ImGuiPtrOrIndex	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPtrOrIndex(int index)          { Ptr = NULL; Index = index; }$/;"	f	struct:ImGuiPtrOrIndex
ImGuiPtrOrIndex	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPtrOrIndex(void* ptr)          { Ptr = ptr; Index = -1; }$/;"	f	struct:ImGuiPtrOrIndex
ImGuiPtrOrIndex	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiPtrOrIndex$/;"	s
ImGuiResizeGripDef	lib/cimgui/imgui/imgui.cpp	/^struct ImGuiResizeGripDef$/;"	s	file:
ImGuiSelectableFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiSelectableFlags;$/;"	t
ImGuiSelectableFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiSelectableFlags;$/;"	t
ImGuiSelectableFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiSelectableFlags;   \/\/ -> enum ImGuiSelectableFlags_ \/\/ Flags: for Selectable()$/;"	t
ImGuiSelectableFlagsPrivate_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiSelectableFlagsPrivate_$/;"	g
ImGuiSelectableFlags_	lib/cimgui/cimgui.h	/^}ImGuiSelectableFlags_;$/;"	t	typeref:enum:__anon74
ImGuiSelectableFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiSelectableFlags_;$/;"	t	typeref:enum:__anon48
ImGuiSelectableFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiSelectableFlags_$/;"	g
ImGuiSelectableFlags_AllowDoubleClick	lib/cimgui/cimgui.h	/^    ImGuiSelectableFlags_AllowDoubleClick = 1 << 2,$/;"	e	enum:__anon74
ImGuiSelectableFlags_AllowDoubleClick	lib/cimgui/generator/output/cimgui.h	/^    ImGuiSelectableFlags_AllowDoubleClick = 1 << 2,$/;"	e	enum:__anon48
ImGuiSelectableFlags_AllowDoubleClick	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_AllowDoubleClick   = 1 << 2,   \/\/ Generate press events on double clicks too$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_AllowItemOverlap	lib/cimgui/cimgui.h	/^    ImGuiSelectableFlags_AllowItemOverlap = 1 << 4$/;"	e	enum:__anon74
ImGuiSelectableFlags_AllowItemOverlap	lib/cimgui/generator/output/cimgui.h	/^    ImGuiSelectableFlags_AllowItemOverlap = 1 << 4$/;"	e	enum:__anon48
ImGuiSelectableFlags_AllowItemOverlap	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_AllowItemOverlap   = 1 << 4    \/\/ (WIP) Hit testing to allow subsequent widgets to overlap this one$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_Disabled	lib/cimgui/cimgui.h	/^    ImGuiSelectableFlags_Disabled = 1 << 3,$/;"	e	enum:__anon74
ImGuiSelectableFlags_Disabled	lib/cimgui/generator/output/cimgui.h	/^    ImGuiSelectableFlags_Disabled = 1 << 3,$/;"	e	enum:__anon48
ImGuiSelectableFlags_Disabled	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_Disabled           = 1 << 3,   \/\/ Cannot be selected, display grayed out text$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_DontClosePopups	lib/cimgui/cimgui.h	/^    ImGuiSelectableFlags_DontClosePopups = 1 << 0,$/;"	e	enum:__anon74
ImGuiSelectableFlags_DontClosePopups	lib/cimgui/generator/output/cimgui.h	/^    ImGuiSelectableFlags_DontClosePopups = 1 << 0,$/;"	e	enum:__anon48
ImGuiSelectableFlags_DontClosePopups	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_DontClosePopups    = 1 << 0,   \/\/ Clicking this don't close parent popup window$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_DrawFillAvailWidth	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_DrawFillAvailWidth = 1 << 23,  \/\/ FIXME: We may be able to remove this (added in 6251d379 for menus)$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_DrawHoveredWhenHeld	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_DrawHoveredWhenHeld= 1 << 24,  \/\/ Always show active when held, even is not hovered. This concept could probably be renamed\/formalized somehow.$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_NoHoldingActiveID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_NoHoldingActiveID  = 1 << 20,$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_None	lib/cimgui/cimgui.h	/^    ImGuiSelectableFlags_None = 0,$/;"	e	enum:__anon74
ImGuiSelectableFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiSelectableFlags_None = 0,$/;"	e	enum:__anon48
ImGuiSelectableFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_None               = 0,$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_PressedOnClick	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_PressedOnClick     = 1 << 21,$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_PressedOnRelease	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_PressedOnRelease   = 1 << 22,$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_SetNavIdOnHover	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_SetNavIdOnHover    = 1 << 25$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_SpanAllColumns	lib/cimgui/cimgui.h	/^    ImGuiSelectableFlags_SpanAllColumns = 1 << 1,$/;"	e	enum:__anon74
ImGuiSelectableFlags_SpanAllColumns	lib/cimgui/generator/output/cimgui.h	/^    ImGuiSelectableFlags_SpanAllColumns = 1 << 1,$/;"	e	enum:__anon48
ImGuiSelectableFlags_SpanAllColumns	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_SpanAllColumns     = 1 << 1,   \/\/ Selectable frame can span all columns (text will still fit in current column)$/;"	e	enum:ImGuiSelectableFlags_
ImGuiSeparatorFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiSeparatorFlags;        \/\/ -> enum ImGuiSeparatorFlags_     \/\/ Flags: for SeparatorEx()$/;"	t
ImGuiSeparatorFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiSeparatorFlags_$/;"	g
ImGuiSeparatorFlags_Horizontal	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSeparatorFlags_Horizontal          = 1 << 0,   \/\/ Axis default to current layout type, so generally Horizontal unless e.g. in a menu bar$/;"	e	enum:ImGuiSeparatorFlags_
ImGuiSeparatorFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSeparatorFlags_None                = 0,$/;"	e	enum:ImGuiSeparatorFlags_
ImGuiSeparatorFlags_SpanAllColumns	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSeparatorFlags_SpanAllColumns      = 1 << 2$/;"	e	enum:ImGuiSeparatorFlags_
ImGuiSeparatorFlags_Vertical	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSeparatorFlags_Vertical            = 1 << 1,$/;"	e	enum:ImGuiSeparatorFlags_
ImGuiSettingsHandler	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSettingsHandler() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:ImGuiSettingsHandler
ImGuiSettingsHandler	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiSettingsHandler$/;"	s
ImGuiShrinkWidthItem	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiShrinkWidthItem$/;"	s
ImGuiSizeCallback	lib/cimgui/cimgui.h	/^typedef void (*ImGuiSizeCallback)(ImGuiSizeCallbackData* data);$/;"	t
ImGuiSizeCallback	lib/cimgui/generator/output/cimgui.h	/^typedef void (*ImGuiSizeCallback)(ImGuiSizeCallbackData* data);$/;"	t
ImGuiSizeCallback	lib/cimgui/imgui/imgui.h	/^typedef void (*ImGuiSizeCallback)(ImGuiSizeCallbackData* data);$/;"	t
ImGuiSizeCallbackData	lib/cimgui/cimgui.h	/^struct ImGuiSizeCallbackData$/;"	s
ImGuiSizeCallbackData	lib/cimgui/cimgui.h	/^typedef struct ImGuiSizeCallbackData ImGuiSizeCallbackData;$/;"	t	typeref:struct:ImGuiSizeCallbackData
ImGuiSizeCallbackData	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiSizeCallbackData$/;"	s
ImGuiSizeCallbackData	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiSizeCallbackData ImGuiSizeCallbackData;$/;"	t	typeref:struct:ImGuiSizeCallbackData
ImGuiSizeCallbackData	lib/cimgui/imgui/imgui.h	/^struct ImGuiSizeCallbackData$/;"	s
ImGuiSliderFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiSliderFlags;           \/\/ -> enum ImGuiSliderFlags_        \/\/ Flags: for SliderBehavior()$/;"	t
ImGuiSliderFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiSliderFlags_$/;"	g
ImGuiSliderFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSliderFlags_None                   = 0,$/;"	e	enum:ImGuiSliderFlags_
ImGuiSliderFlags_Vertical	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSliderFlags_Vertical               = 1 << 0$/;"	e	enum:ImGuiSliderFlags_
ImGuiStorage	lib/cimgui/cimgui.h	/^struct ImGuiStorage$/;"	s
ImGuiStorage	lib/cimgui/cimgui.h	/^typedef struct ImGuiStorage ImGuiStorage;$/;"	t	typeref:struct:ImGuiStorage
ImGuiStorage	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiStorage$/;"	s
ImGuiStorage	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiStorage ImGuiStorage;$/;"	t	typeref:struct:ImGuiStorage
ImGuiStorage	lib/cimgui/imgui/imgui.h	/^struct ImGuiStorage$/;"	s
ImGuiStoragePair	lib/cimgui/cimgui.h	/^    struct ImGuiStoragePair$/;"	s
ImGuiStoragePair	lib/cimgui/cimgui.h	/^typedef ImGuiStorage::ImGuiStoragePair ImGuiStoragePair;$/;"	t
ImGuiStoragePair	lib/cimgui/cimgui.h	/^typedef struct ImGuiStoragePair ImGuiStoragePair;$/;"	t	typeref:struct:ImGuiStoragePair
ImGuiStoragePair	lib/cimgui/generator/output/cimgui.h	/^    struct ImGuiStoragePair$/;"	s
ImGuiStoragePair	lib/cimgui/generator/output/cimgui.h	/^typedef ImGuiStorage::ImGuiStoragePair ImGuiStoragePair;$/;"	t
ImGuiStoragePair	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiStoragePair ImGuiStoragePair;$/;"	t	typeref:struct:ImGuiStoragePair
ImGuiStoragePair	lib/cimgui/imgui/imgui.h	/^        ImGuiStoragePair(ImGuiID _key, float _val_f)    { key = _key; val_f = _val_f; }$/;"	f	struct:ImGuiStorage::ImGuiStoragePair
ImGuiStoragePair	lib/cimgui/imgui/imgui.h	/^        ImGuiStoragePair(ImGuiID _key, int _val_i)      { key = _key; val_i = _val_i; }$/;"	f	struct:ImGuiStorage::ImGuiStoragePair
ImGuiStoragePair	lib/cimgui/imgui/imgui.h	/^        ImGuiStoragePair(ImGuiID _key, void* _val_p)    { key = _key; val_p = _val_p; }$/;"	f	struct:ImGuiStorage::ImGuiStoragePair
ImGuiStoragePair	lib/cimgui/imgui/imgui.h	/^    struct ImGuiStoragePair$/;"	s	struct:ImGuiStorage
ImGuiStoragePair_ImGuiStoragePairFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairFloat(ImGuiID _key,float _val_f)$/;"	f
ImGuiStoragePair_ImGuiStoragePairFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairFloat(ImGuiID _key,float _val_f)$/;"	f
ImGuiStoragePair_ImGuiStoragePairInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairInt(ImGuiID _key,int _val_i)$/;"	f
ImGuiStoragePair_ImGuiStoragePairInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairInt(ImGuiID _key,int _val_i)$/;"	f
ImGuiStoragePair_ImGuiStoragePairPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairPtr(ImGuiID _key,void* _val_p)$/;"	f
ImGuiStoragePair_ImGuiStoragePairPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiStoragePair* ImGuiStoragePair_ImGuiStoragePairPtr(ImGuiID _key,void* _val_p)$/;"	f
ImGuiStoragePair_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStoragePair_destroy(ImGuiStoragePair* self)$/;"	f
ImGuiStoragePair_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStoragePair_destroy(ImGuiStoragePair* self)$/;"	f
ImGuiStorage_BuildSortByKey	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_BuildSortByKey(ImGuiStorage* self)$/;"	f
ImGuiStorage_BuildSortByKey	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_BuildSortByKey(ImGuiStorage* self)$/;"	f
ImGuiStorage_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_Clear(ImGuiStorage* self)$/;"	f
ImGuiStorage_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_Clear(ImGuiStorage* self)$/;"	f
ImGuiStorage_GetBool	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiStorage_GetBool(ImGuiStorage* self,ImGuiID key,bool default_val)$/;"	f
ImGuiStorage_GetBool	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiStorage_GetBool(ImGuiStorage* self,ImGuiID key,bool default_val)$/;"	f
ImGuiStorage_GetBoolRef	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool* ImGuiStorage_GetBoolRef(ImGuiStorage* self,ImGuiID key,bool default_val)$/;"	f
ImGuiStorage_GetBoolRef	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool* ImGuiStorage_GetBoolRef(ImGuiStorage* self,ImGuiID key,bool default_val)$/;"	f
ImGuiStorage_GetFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API float ImGuiStorage_GetFloat(ImGuiStorage* self,ImGuiID key,float default_val)$/;"	f
ImGuiStorage_GetFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float ImGuiStorage_GetFloat(ImGuiStorage* self,ImGuiID key,float default_val)$/;"	f
ImGuiStorage_GetFloatRef	lib/cimgui/cimgui.cpp	/^CIMGUI_API float* ImGuiStorage_GetFloatRef(ImGuiStorage* self,ImGuiID key,float default_val)$/;"	f
ImGuiStorage_GetFloatRef	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float* ImGuiStorage_GetFloatRef(ImGuiStorage* self,ImGuiID key,float default_val)$/;"	f
ImGuiStorage_GetInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API int ImGuiStorage_GetInt(ImGuiStorage* self,ImGuiID key,int default_val)$/;"	f
ImGuiStorage_GetInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int ImGuiStorage_GetInt(ImGuiStorage* self,ImGuiID key,int default_val)$/;"	f
ImGuiStorage_GetIntRef	lib/cimgui/cimgui.cpp	/^CIMGUI_API int* ImGuiStorage_GetIntRef(ImGuiStorage* self,ImGuiID key,int default_val)$/;"	f
ImGuiStorage_GetIntRef	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int* ImGuiStorage_GetIntRef(ImGuiStorage* self,ImGuiID key,int default_val)$/;"	f
ImGuiStorage_GetVoidPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void* ImGuiStorage_GetVoidPtr(ImGuiStorage* self,ImGuiID key)$/;"	f
ImGuiStorage_GetVoidPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void* ImGuiStorage_GetVoidPtr(ImGuiStorage* self,ImGuiID key)$/;"	f
ImGuiStorage_GetVoidPtrRef	lib/cimgui/cimgui.cpp	/^CIMGUI_API void** ImGuiStorage_GetVoidPtrRef(ImGuiStorage* self,ImGuiID key,void* default_val)$/;"	f
ImGuiStorage_GetVoidPtrRef	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void** ImGuiStorage_GetVoidPtrRef(ImGuiStorage* self,ImGuiID key,void* default_val)$/;"	f
ImGuiStorage_SetAllInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetAllInt(ImGuiStorage* self,int val)$/;"	f
ImGuiStorage_SetAllInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetAllInt(ImGuiStorage* self,int val)$/;"	f
ImGuiStorage_SetBool	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetBool(ImGuiStorage* self,ImGuiID key,bool val)$/;"	f
ImGuiStorage_SetBool	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetBool(ImGuiStorage* self,ImGuiID key,bool val)$/;"	f
ImGuiStorage_SetFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetFloat(ImGuiStorage* self,ImGuiID key,float val)$/;"	f
ImGuiStorage_SetFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetFloat(ImGuiStorage* self,ImGuiID key,float val)$/;"	f
ImGuiStorage_SetInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetInt(ImGuiStorage* self,ImGuiID key,int val)$/;"	f
ImGuiStorage_SetInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetInt(ImGuiStorage* self,ImGuiID key,int val)$/;"	f
ImGuiStorage_SetVoidPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetVoidPtr(ImGuiStorage* self,ImGuiID key,void* val)$/;"	f
ImGuiStorage_SetVoidPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetVoidPtr(ImGuiStorage* self,ImGuiID key,void* val)$/;"	f
ImGuiStyle	lib/cimgui/cimgui.h	/^struct ImGuiStyle$/;"	s
ImGuiStyle	lib/cimgui/cimgui.h	/^typedef struct ImGuiStyle ImGuiStyle;$/;"	t	typeref:struct:ImGuiStyle
ImGuiStyle	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiStyle$/;"	s
ImGuiStyle	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiStyle ImGuiStyle;$/;"	t	typeref:struct:ImGuiStyle
ImGuiStyle	lib/cimgui/imgui/imgui.cpp	/^ImGuiStyle::ImGuiStyle()$/;"	f	class:ImGuiStyle
ImGuiStyle	lib/cimgui/imgui/imgui.h	/^struct ImGuiStyle$/;"	s
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, ImVec2 v)  { VarIdx = idx; BackupFloat[0] = v.x; BackupFloat[1] = v.y; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, float v)   { VarIdx = idx; BackupFloat[0] = v; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, int v)     { VarIdx = idx; BackupInt[0] = v; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiStyleMod$/;"	s
ImGuiStyleVar	lib/cimgui/cimgui.h	/^typedef int ImGuiStyleVar;$/;"	t
ImGuiStyleVar	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiStyleVar;$/;"	t
ImGuiStyleVar	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiStyleVar;          \/\/ -> enum ImGuiStyleVar_        \/\/ Enum: A variable identifier for styling$/;"	t
ImGuiStyleVarInfo	lib/cimgui/imgui/imgui.cpp	/^struct ImGuiStyleVarInfo$/;"	s	file:
ImGuiStyleVar_	lib/cimgui/cimgui.h	/^}ImGuiStyleVar_;$/;"	t	typeref:enum:__anon88
ImGuiStyleVar_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiStyleVar_;$/;"	t	typeref:enum:__anon62
ImGuiStyleVar_	lib/cimgui/imgui/imgui.h	/^enum ImGuiStyleVar_$/;"	g
ImGuiStyleVar_Alpha	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_Alpha,$/;"	e	enum:__anon88
ImGuiStyleVar_Alpha	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_Alpha,$/;"	e	enum:__anon62
ImGuiStyleVar_Alpha	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_Alpha,               \/\/ float     Alpha$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ButtonTextAlign	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_ButtonTextAlign,$/;"	e	enum:__anon88
ImGuiStyleVar_ButtonTextAlign	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_ButtonTextAlign,$/;"	e	enum:__anon62
ImGuiStyleVar_ButtonTextAlign	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ButtonTextAlign,     \/\/ ImVec2    ButtonTextAlign$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_COUNT	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_COUNT$/;"	e	enum:__anon88
ImGuiStyleVar_COUNT	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_COUNT$/;"	e	enum:__anon62
ImGuiStyleVar_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_COUNT$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ChildBorderSize	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_ChildBorderSize,$/;"	e	enum:__anon88
ImGuiStyleVar_ChildBorderSize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_ChildBorderSize,$/;"	e	enum:__anon62
ImGuiStyleVar_ChildBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ChildBorderSize,     \/\/ float     ChildBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ChildRounding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_ChildRounding,$/;"	e	enum:__anon88
ImGuiStyleVar_ChildRounding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_ChildRounding,$/;"	e	enum:__anon62
ImGuiStyleVar_ChildRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ChildRounding,       \/\/ float     ChildRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_Count_	lib/cimgui/imgui/imgui.h	/^    , ImGuiStyleVar_Count_ = ImGuiStyleVar_COUNT                    \/\/ [renamed in 1.60]$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FrameBorderSize	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_FrameBorderSize,$/;"	e	enum:__anon88
ImGuiStyleVar_FrameBorderSize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_FrameBorderSize,$/;"	e	enum:__anon62
ImGuiStyleVar_FrameBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_FrameBorderSize,     \/\/ float     FrameBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FramePadding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_FramePadding,$/;"	e	enum:__anon88
ImGuiStyleVar_FramePadding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_FramePadding,$/;"	e	enum:__anon62
ImGuiStyleVar_FramePadding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_FramePadding,        \/\/ ImVec2    FramePadding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FrameRounding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_FrameRounding,$/;"	e	enum:__anon88
ImGuiStyleVar_FrameRounding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_FrameRounding,$/;"	e	enum:__anon62
ImGuiStyleVar_FrameRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_FrameRounding,       \/\/ float     FrameRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_GrabMinSize	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_GrabMinSize,$/;"	e	enum:__anon88
ImGuiStyleVar_GrabMinSize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_GrabMinSize,$/;"	e	enum:__anon62
ImGuiStyleVar_GrabMinSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_GrabMinSize,         \/\/ float     GrabMinSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_GrabRounding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_GrabRounding,$/;"	e	enum:__anon88
ImGuiStyleVar_GrabRounding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_GrabRounding,$/;"	e	enum:__anon62
ImGuiStyleVar_GrabRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_GrabRounding,        \/\/ float     GrabRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_IndentSpacing	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_IndentSpacing,$/;"	e	enum:__anon88
ImGuiStyleVar_IndentSpacing	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_IndentSpacing,$/;"	e	enum:__anon62
ImGuiStyleVar_IndentSpacing	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_IndentSpacing,       \/\/ float     IndentSpacing$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ItemInnerSpacing	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_ItemInnerSpacing,$/;"	e	enum:__anon88
ImGuiStyleVar_ItemInnerSpacing	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_ItemInnerSpacing,$/;"	e	enum:__anon62
ImGuiStyleVar_ItemInnerSpacing	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ItemInnerSpacing,    \/\/ ImVec2    ItemInnerSpacing$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ItemSpacing	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_ItemSpacing,$/;"	e	enum:__anon88
ImGuiStyleVar_ItemSpacing	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_ItemSpacing,$/;"	e	enum:__anon62
ImGuiStyleVar_ItemSpacing	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ItemSpacing,         \/\/ ImVec2    ItemSpacing$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_PopupBorderSize	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_PopupBorderSize,$/;"	e	enum:__anon88
ImGuiStyleVar_PopupBorderSize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_PopupBorderSize,$/;"	e	enum:__anon62
ImGuiStyleVar_PopupBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_PopupBorderSize,     \/\/ float     PopupBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_PopupRounding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_PopupRounding,$/;"	e	enum:__anon88
ImGuiStyleVar_PopupRounding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_PopupRounding,$/;"	e	enum:__anon62
ImGuiStyleVar_PopupRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_PopupRounding,       \/\/ float     PopupRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ScrollbarRounding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_ScrollbarRounding,$/;"	e	enum:__anon88
ImGuiStyleVar_ScrollbarRounding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_ScrollbarRounding,$/;"	e	enum:__anon62
ImGuiStyleVar_ScrollbarRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ScrollbarRounding,   \/\/ float     ScrollbarRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ScrollbarSize	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_ScrollbarSize,$/;"	e	enum:__anon88
ImGuiStyleVar_ScrollbarSize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_ScrollbarSize,$/;"	e	enum:__anon62
ImGuiStyleVar_ScrollbarSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ScrollbarSize,       \/\/ float     ScrollbarSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_SelectableTextAlign	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_SelectableTextAlign,$/;"	e	enum:__anon88
ImGuiStyleVar_SelectableTextAlign	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_SelectableTextAlign,$/;"	e	enum:__anon62
ImGuiStyleVar_SelectableTextAlign	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_SelectableTextAlign, \/\/ ImVec2    SelectableTextAlign$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_TabRounding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_TabRounding,$/;"	e	enum:__anon88
ImGuiStyleVar_TabRounding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_TabRounding,$/;"	e	enum:__anon62
ImGuiStyleVar_TabRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_TabRounding,         \/\/ float     TabRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowBorderSize	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowBorderSize,$/;"	e	enum:__anon88
ImGuiStyleVar_WindowBorderSize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_WindowBorderSize,$/;"	e	enum:__anon62
ImGuiStyleVar_WindowBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowBorderSize,    \/\/ float     WindowBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowMinSize	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowMinSize,$/;"	e	enum:__anon88
ImGuiStyleVar_WindowMinSize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_WindowMinSize,$/;"	e	enum:__anon62
ImGuiStyleVar_WindowMinSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowMinSize,       \/\/ ImVec2    WindowMinSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowPadding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowPadding,$/;"	e	enum:__anon88
ImGuiStyleVar_WindowPadding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_WindowPadding,$/;"	e	enum:__anon62
ImGuiStyleVar_WindowPadding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowPadding,       \/\/ ImVec2    WindowPadding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowRounding	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowRounding,$/;"	e	enum:__anon88
ImGuiStyleVar_WindowRounding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_WindowRounding,$/;"	e	enum:__anon62
ImGuiStyleVar_WindowRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowRounding,      \/\/ float     WindowRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowTitleAlign	lib/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowTitleAlign,$/;"	e	enum:__anon88
ImGuiStyleVar_WindowTitleAlign	lib/cimgui/generator/output/cimgui.h	/^    ImGuiStyleVar_WindowTitleAlign,$/;"	e	enum:__anon62
ImGuiStyleVar_WindowTitleAlign	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowTitleAlign,    \/\/ ImVec2    WindowTitleAlign$/;"	e	enum:ImGuiStyleVar_
ImGuiStyle_ImGuiStyle	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStyle* ImGuiStyle_ImGuiStyle(void)$/;"	f
ImGuiStyle_ImGuiStyle	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiStyle* ImGuiStyle_ImGuiStyle(void)$/;"	f
ImGuiStyle_ScaleAllSizes	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStyle_ScaleAllSizes(ImGuiStyle* self,float scale_factor)$/;"	f
ImGuiStyle_ScaleAllSizes	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStyle_ScaleAllSizes(ImGuiStyle* self,float scale_factor)$/;"	f
ImGuiStyle_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStyle_destroy(ImGuiStyle* self)$/;"	f
ImGuiStyle_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiStyle_destroy(ImGuiStyle* self)$/;"	f
ImGuiTabBar	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiTabBar$/;"	s
ImGuiTabBar	lib/cimgui/imgui/imgui_widgets.cpp	/^ImGuiTabBar::ImGuiTabBar()$/;"	f	class:ImGuiTabBar
ImGuiTabBarFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiTabBarFlags;$/;"	t
ImGuiTabBarFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiTabBarFlags;$/;"	t
ImGuiTabBarFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiTabBarFlags;       \/\/ -> enum ImGuiTabBarFlags_     \/\/ Flags: for BeginTabBar()$/;"	t
ImGuiTabBarFlagsPrivate_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiTabBarFlagsPrivate_$/;"	g
ImGuiTabBarFlags_	lib/cimgui/cimgui.h	/^}ImGuiTabBarFlags_;$/;"	t	typeref:enum:__anon76
ImGuiTabBarFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiTabBarFlags_;$/;"	t	typeref:enum:__anon50
ImGuiTabBarFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiTabBarFlags_$/;"	g
ImGuiTabBarFlags_AutoSelectNewTabs	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_AutoSelectNewTabs = 1 << 1,$/;"	e	enum:__anon76
ImGuiTabBarFlags_AutoSelectNewTabs	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_AutoSelectNewTabs = 1 << 1,$/;"	e	enum:__anon50
ImGuiTabBarFlags_AutoSelectNewTabs	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_AutoSelectNewTabs              = 1 << 1,   \/\/ Automatically select new tabs when they appear$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_DockNode	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabBarFlags_DockNode                   = 1 << 20,  \/\/ Part of a dock node [we don't use this in the master branch but it facilitate branch syncing to keep this around]$/;"	e	enum:ImGuiTabBarFlagsPrivate_
ImGuiTabBarFlags_FittingPolicyDefault_	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyDefault_ = ImGuiTabBarFlags_FittingPolicyResizeDown$/;"	e	enum:__anon76
ImGuiTabBarFlags_FittingPolicyDefault_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyDefault_ = ImGuiTabBarFlags_FittingPolicyResizeDown$/;"	e	enum:__anon50
ImGuiTabBarFlags_FittingPolicyDefault_	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_FittingPolicyDefault_          = ImGuiTabBarFlags_FittingPolicyResizeDown$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_FittingPolicyMask_	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyMask_ = ImGuiTabBarFlags_FittingPolicyResizeDown | ImGuiTabBarFlags_FittingPolicyScroll,$/;"	e	enum:__anon76
ImGuiTabBarFlags_FittingPolicyMask_	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyMask_ = ImGuiTabBarFlags_FittingPolicyResizeDown | ImGuiTabBarFlags_FittingPolicyScroll,$/;"	e	enum:__anon50
ImGuiTabBarFlags_FittingPolicyMask_	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_FittingPolicyMask_             = ImGuiTabBarFlags_FittingPolicyResizeDown | ImGuiTabBarFlags_FittingPolicyScroll,$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_FittingPolicyResizeDown	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyResizeDown = 1 << 6,$/;"	e	enum:__anon76
ImGuiTabBarFlags_FittingPolicyResizeDown	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyResizeDown = 1 << 6,$/;"	e	enum:__anon50
ImGuiTabBarFlags_FittingPolicyResizeDown	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_FittingPolicyResizeDown        = 1 << 6,   \/\/ Resize tabs when they don't fit$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_FittingPolicyScroll	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyScroll = 1 << 7,$/;"	e	enum:__anon76
ImGuiTabBarFlags_FittingPolicyScroll	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_FittingPolicyScroll = 1 << 7,$/;"	e	enum:__anon50
ImGuiTabBarFlags_FittingPolicyScroll	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_FittingPolicyScroll            = 1 << 7,   \/\/ Add scroll buttons when tabs don't fit$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_IsFocused	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabBarFlags_IsFocused                  = 1 << 21,$/;"	e	enum:ImGuiTabBarFlagsPrivate_
ImGuiTabBarFlags_NoCloseWithMiddleMouseButton	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_NoCloseWithMiddleMouseButton = 1 << 3,$/;"	e	enum:__anon76
ImGuiTabBarFlags_NoCloseWithMiddleMouseButton	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_NoCloseWithMiddleMouseButton = 1 << 3,$/;"	e	enum:__anon50
ImGuiTabBarFlags_NoCloseWithMiddleMouseButton	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_NoCloseWithMiddleMouseButton   = 1 << 3,   \/\/ Disable behavior of closing tabs (that are submitted with p_open != NULL) with middle mouse button. You can still repro this behavior on user's side with if (IsItemHovered() && IsMouseClicked(2)) *p_open = false.$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_NoTabListScrollingButtons	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_NoTabListScrollingButtons = 1 << 4,$/;"	e	enum:__anon76
ImGuiTabBarFlags_NoTabListScrollingButtons	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_NoTabListScrollingButtons = 1 << 4,$/;"	e	enum:__anon50
ImGuiTabBarFlags_NoTabListScrollingButtons	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_NoTabListScrollingButtons      = 1 << 4,   \/\/ Disable scrolling buttons (apply when fitting policy is ImGuiTabBarFlags_FittingPolicyScroll)$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_NoTooltip	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_NoTooltip = 1 << 5,$/;"	e	enum:__anon76
ImGuiTabBarFlags_NoTooltip	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_NoTooltip = 1 << 5,$/;"	e	enum:__anon50
ImGuiTabBarFlags_NoTooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_NoTooltip                      = 1 << 5,   \/\/ Disable tooltips when hovering a tab$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_None	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_None = 0,$/;"	e	enum:__anon76
ImGuiTabBarFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_None = 0,$/;"	e	enum:__anon50
ImGuiTabBarFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_None                           = 0,$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_Reorderable	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_Reorderable = 1 << 0,$/;"	e	enum:__anon76
ImGuiTabBarFlags_Reorderable	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_Reorderable = 1 << 0,$/;"	e	enum:__anon50
ImGuiTabBarFlags_Reorderable	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_Reorderable                    = 1 << 0,   \/\/ Allow manually dragging tabs to re-order them + New tabs are appended at the end of list$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabBarFlags_SaveSettings	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabBarFlags_SaveSettings               = 1 << 22   \/\/ FIXME: Settings are handled by the docking system, this only request the tab bar to mark settings dirty when reordering tabs$/;"	e	enum:ImGuiTabBarFlagsPrivate_
ImGuiTabBarFlags_TabListPopupButton	lib/cimgui/cimgui.h	/^    ImGuiTabBarFlags_TabListPopupButton = 1 << 2,$/;"	e	enum:__anon76
ImGuiTabBarFlags_TabListPopupButton	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabBarFlags_TabListPopupButton = 1 << 2,$/;"	e	enum:__anon50
ImGuiTabBarFlags_TabListPopupButton	lib/cimgui/imgui/imgui.h	/^    ImGuiTabBarFlags_TabListPopupButton             = 1 << 2,   \/\/ Disable buttons to open the tab list popup$/;"	e	enum:ImGuiTabBarFlags_
ImGuiTabItem	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabItem()      { ID = 0; Flags = ImGuiTabItemFlags_None; LastFrameVisible = LastFrameSelected = -1; NameOffset = -1; Offset = Width = ContentWidth = 0.0f; }$/;"	f	struct:ImGuiTabItem
ImGuiTabItem	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiTabItem$/;"	s
ImGuiTabItemFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiTabItemFlags;$/;"	t
ImGuiTabItemFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiTabItemFlags;$/;"	t
ImGuiTabItemFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiTabItemFlags;      \/\/ -> enum ImGuiTabItemFlags_    \/\/ Flags: for BeginTabItem()$/;"	t
ImGuiTabItemFlagsPrivate_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiTabItemFlagsPrivate_$/;"	g
ImGuiTabItemFlags_	lib/cimgui/cimgui.h	/^}ImGuiTabItemFlags_;$/;"	t	typeref:enum:__anon77
ImGuiTabItemFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiTabItemFlags_;$/;"	t	typeref:enum:__anon51
ImGuiTabItemFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiTabItemFlags_$/;"	g
ImGuiTabItemFlags_NoCloseButton	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTabItemFlags_NoCloseButton             = 1 << 20   \/\/ Track whether p_open was set or not (we'll need this info on the next frame to recompute ContentWidth during layout)$/;"	e	enum:ImGuiTabItemFlagsPrivate_
ImGuiTabItemFlags_NoCloseWithMiddleMouseButton	lib/cimgui/cimgui.h	/^    ImGuiTabItemFlags_NoCloseWithMiddleMouseButton = 1 << 2,$/;"	e	enum:__anon77
ImGuiTabItemFlags_NoCloseWithMiddleMouseButton	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabItemFlags_NoCloseWithMiddleMouseButton = 1 << 2,$/;"	e	enum:__anon51
ImGuiTabItemFlags_NoCloseWithMiddleMouseButton	lib/cimgui/imgui/imgui.h	/^    ImGuiTabItemFlags_NoCloseWithMiddleMouseButton  = 1 << 2,   \/\/ Disable behavior of closing tabs (that are submitted with p_open != NULL) with middle mouse button. You can still repro this behavior on user's side with if (IsItemHovered() && IsMouseClicked(2)) *p_open = false.$/;"	e	enum:ImGuiTabItemFlags_
ImGuiTabItemFlags_NoPushId	lib/cimgui/cimgui.h	/^    ImGuiTabItemFlags_NoPushId = 1 << 3$/;"	e	enum:__anon77
ImGuiTabItemFlags_NoPushId	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabItemFlags_NoPushId = 1 << 3$/;"	e	enum:__anon51
ImGuiTabItemFlags_NoPushId	lib/cimgui/imgui/imgui.h	/^    ImGuiTabItemFlags_NoPushId                      = 1 << 3    \/\/ Don't call PushID(tab->ID)\/PopID() on BeginTabItem()\/EndTabItem()$/;"	e	enum:ImGuiTabItemFlags_
ImGuiTabItemFlags_None	lib/cimgui/cimgui.h	/^    ImGuiTabItemFlags_None = 0,$/;"	e	enum:__anon77
ImGuiTabItemFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabItemFlags_None = 0,$/;"	e	enum:__anon51
ImGuiTabItemFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiTabItemFlags_None                          = 0,$/;"	e	enum:ImGuiTabItemFlags_
ImGuiTabItemFlags_SetSelected	lib/cimgui/cimgui.h	/^    ImGuiTabItemFlags_SetSelected = 1 << 1,$/;"	e	enum:__anon77
ImGuiTabItemFlags_SetSelected	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabItemFlags_SetSelected = 1 << 1,$/;"	e	enum:__anon51
ImGuiTabItemFlags_SetSelected	lib/cimgui/imgui/imgui.h	/^    ImGuiTabItemFlags_SetSelected                   = 1 << 1,   \/\/ Trigger flag to programmatically make the tab selected when calling BeginTabItem()$/;"	e	enum:ImGuiTabItemFlags_
ImGuiTabItemFlags_UnsavedDocument	lib/cimgui/cimgui.h	/^    ImGuiTabItemFlags_UnsavedDocument = 1 << 0,$/;"	e	enum:__anon77
ImGuiTabItemFlags_UnsavedDocument	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTabItemFlags_UnsavedDocument = 1 << 0,$/;"	e	enum:__anon51
ImGuiTabItemFlags_UnsavedDocument	lib/cimgui/imgui/imgui.h	/^    ImGuiTabItemFlags_UnsavedDocument               = 1 << 0,   \/\/ Append '*' to title without affecting the ID, as a convenience to avoid using the ### operator. Also: tab is selected on closure and closure is deferred by one frame to allow code to undo it without flicker.$/;"	e	enum:ImGuiTabItemFlags_
ImGuiTextBuffer	lib/cimgui/cimgui.h	/^struct ImGuiTextBuffer$/;"	s
ImGuiTextBuffer	lib/cimgui/cimgui.h	/^typedef struct ImGuiTextBuffer ImGuiTextBuffer;$/;"	t	typeref:struct:ImGuiTextBuffer
ImGuiTextBuffer	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiTextBuffer$/;"	s
ImGuiTextBuffer	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiTextBuffer ImGuiTextBuffer;$/;"	t	typeref:struct:ImGuiTextBuffer
ImGuiTextBuffer	lib/cimgui/imgui/imgui.h	/^    ImGuiTextBuffer()   { }$/;"	f	struct:ImGuiTextBuffer
ImGuiTextBuffer	lib/cimgui/imgui/imgui.h	/^struct ImGuiTextBuffer$/;"	s
ImGuiTextBuffer_ImGuiTextBuffer	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiTextBuffer* ImGuiTextBuffer_ImGuiTextBuffer(void)$/;"	f
ImGuiTextBuffer_ImGuiTextBuffer	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiTextBuffer* ImGuiTextBuffer_ImGuiTextBuffer(void)$/;"	f
ImGuiTextBuffer_append	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_append(ImGuiTextBuffer* self,const char* str,const char* str_end)$/;"	f
ImGuiTextBuffer_append	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_append(ImGuiTextBuffer* self,const char* str,const char* str_end)$/;"	f
ImGuiTextBuffer_appendf	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_appendf(struct ImGuiTextBuffer *buffer, const char *fmt, ...)$/;"	f
ImGuiTextBuffer_appendf	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void ImGuiTextBuffer_appendf(struct ImGuiTextBuffer *buffer, const char *fmt, ...)$/;"	f
ImGuiTextBuffer_appendf	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_appendf(struct ImGuiTextBuffer *buffer, const char *fmt, ...)$/;"	f
ImGuiTextBuffer_appendfv	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_appendfv(ImGuiTextBuffer* self,const char* fmt,va_list args)$/;"	f
ImGuiTextBuffer_appendfv	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_appendfv(ImGuiTextBuffer* self,const char* fmt,va_list args)$/;"	f
ImGuiTextBuffer_begin	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* ImGuiTextBuffer_begin(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_begin	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* ImGuiTextBuffer_begin(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_c_str	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* ImGuiTextBuffer_c_str(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_c_str	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* ImGuiTextBuffer_c_str(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_clear(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_clear(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_destroy(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_destroy(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_empty	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextBuffer_empty(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_empty	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiTextBuffer_empty(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_end	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* ImGuiTextBuffer_end(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_end	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* ImGuiTextBuffer_end(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_reserve	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_reserve(ImGuiTextBuffer* self,int capacity)$/;"	f
ImGuiTextBuffer_reserve	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_reserve(ImGuiTextBuffer* self,int capacity)$/;"	f
ImGuiTextBuffer_size	lib/cimgui/cimgui.cpp	/^CIMGUI_API int ImGuiTextBuffer_size(ImGuiTextBuffer* self)$/;"	f
ImGuiTextBuffer_size	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int ImGuiTextBuffer_size(ImGuiTextBuffer* self)$/;"	f
ImGuiTextEditCallback	lib/cimgui/imgui/imgui.h	/^typedef ImGuiInputTextCallback      ImGuiTextEditCallback;    \/\/ OBSOLETED in 1.63 (from Aug 2018): made the names consistent$/;"	t
ImGuiTextEditCallbackData	lib/cimgui/imgui/imgui.h	/^typedef ImGuiInputTextCallbackData  ImGuiTextEditCallbackData;$/;"	t
ImGuiTextFilter	lib/cimgui/cimgui.h	/^struct ImGuiTextFilter$/;"	s
ImGuiTextFilter	lib/cimgui/cimgui.h	/^typedef struct ImGuiTextFilter ImGuiTextFilter;$/;"	t	typeref:struct:ImGuiTextFilter
ImGuiTextFilter	lib/cimgui/generator/output/cimgui.h	/^struct ImGuiTextFilter$/;"	s
ImGuiTextFilter	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiTextFilter ImGuiTextFilter;$/;"	t	typeref:struct:ImGuiTextFilter
ImGuiTextFilter	lib/cimgui/imgui/imgui.cpp	/^ImGuiTextFilter::ImGuiTextFilter(const char* default_filter)$/;"	f	class:ImGuiTextFilter
ImGuiTextFilter	lib/cimgui/imgui/imgui.h	/^struct ImGuiTextFilter$/;"	s
ImGuiTextFilter_Build	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_Build(ImGuiTextFilter* self)$/;"	f
ImGuiTextFilter_Build	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_Build(ImGuiTextFilter* self)$/;"	f
ImGuiTextFilter_Clear	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_Clear(ImGuiTextFilter* self)$/;"	f
ImGuiTextFilter_Clear	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_Clear(ImGuiTextFilter* self)$/;"	f
ImGuiTextFilter_Draw	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_Draw(ImGuiTextFilter* self,const char* label,float width)$/;"	f
ImGuiTextFilter_Draw	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_Draw(ImGuiTextFilter* self,const char* label,float width)$/;"	f
ImGuiTextFilter_ImGuiTextFilter	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiTextFilter* ImGuiTextFilter_ImGuiTextFilter(const char* default_filter)$/;"	f
ImGuiTextFilter_ImGuiTextFilter	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiTextFilter* ImGuiTextFilter_ImGuiTextFilter(const char* default_filter)$/;"	f
ImGuiTextFilter_IsActive	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_IsActive(ImGuiTextFilter* self)$/;"	f
ImGuiTextFilter_IsActive	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_IsActive(ImGuiTextFilter* self)$/;"	f
ImGuiTextFilter_PassFilter	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_PassFilter(ImGuiTextFilter* self,const char* text,const char* text_end)$/;"	f
ImGuiTextFilter_PassFilter	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_PassFilter(ImGuiTextFilter* self,const char* text,const char* text_end)$/;"	f
ImGuiTextFilter_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_destroy(ImGuiTextFilter* self)$/;"	f
ImGuiTextFilter_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_destroy(ImGuiTextFilter* self)$/;"	f
ImGuiTextFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiTextFlags;             \/\/ -> enum ImGuiTextFlags_          \/\/ Flags: for TextEx()$/;"	t
ImGuiTextFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiTextFlags_$/;"	g
ImGuiTextFlags_NoWidthForLargeClippedText	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextFlags_NoWidthForLargeClippedText = 1 << 0$/;"	e	enum:ImGuiTextFlags_
ImGuiTextFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextFlags_None = 0,$/;"	e	enum:ImGuiTextFlags_
ImGuiTextRange	lib/cimgui/cimgui.h	/^    struct ImGuiTextRange$/;"	s
ImGuiTextRange	lib/cimgui/cimgui.h	/^typedef ImGuiTextFilter::ImGuiTextRange ImGuiTextRange;$/;"	t
ImGuiTextRange	lib/cimgui/cimgui.h	/^typedef struct ImGuiTextRange ImGuiTextRange;$/;"	t	typeref:struct:ImGuiTextRange
ImGuiTextRange	lib/cimgui/generator/output/cimgui.h	/^    struct ImGuiTextRange$/;"	s
ImGuiTextRange	lib/cimgui/generator/output/cimgui.h	/^typedef ImGuiTextFilter::ImGuiTextRange ImGuiTextRange;$/;"	t
ImGuiTextRange	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImGuiTextRange ImGuiTextRange;$/;"	t	typeref:struct:ImGuiTextRange
ImGuiTextRange	lib/cimgui/imgui/imgui.h	/^        ImGuiTextRange()                                { b = e = NULL; }$/;"	f	struct:ImGuiTextFilter::ImGuiTextRange
ImGuiTextRange	lib/cimgui/imgui/imgui.h	/^        ImGuiTextRange(const char* _b, const char* _e)  { b = _b; e = _e; }$/;"	f	struct:ImGuiTextFilter::ImGuiTextRange
ImGuiTextRange	lib/cimgui/imgui/imgui.h	/^    struct ImGuiTextRange$/;"	s	struct:ImGuiTextFilter
ImGuiTextRange_ImGuiTextRange	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiTextRange* ImGuiTextRange_ImGuiTextRange(void)$/;"	f
ImGuiTextRange_ImGuiTextRange	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiTextRange* ImGuiTextRange_ImGuiTextRange(void)$/;"	f
ImGuiTextRange_ImGuiTextRangeStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiTextRange* ImGuiTextRange_ImGuiTextRangeStr(const char* _b,const char* _e)$/;"	f
ImGuiTextRange_ImGuiTextRangeStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiTextRange* ImGuiTextRange_ImGuiTextRangeStr(const char* _b,const char* _e)$/;"	f
ImGuiTextRange_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextRange_destroy(ImGuiTextRange* self)$/;"	f
ImGuiTextRange_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextRange_destroy(ImGuiTextRange* self)$/;"	f
ImGuiTextRange_empty	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextRange_empty(ImGuiTextRange* self)$/;"	f
ImGuiTextRange_empty	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool ImGuiTextRange_empty(ImGuiTextRange* self)$/;"	f
ImGuiTextRange_split	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextRange_split(ImGuiTextRange* self,char separator,ImVector_ImGuiTextRange* out)$/;"	f
ImGuiTextRange_split	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImGuiTextRange_split(ImGuiTextRange* self,char separator,ImVector_ImGuiTextRange* out)$/;"	f
ImGuiTooltipFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiTooltipFlags;          \/\/ -> enum ImGuiTooltipFlags_       \/\/ Flags: for BeginTooltipEx()$/;"	t
ImGuiTooltipFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiTooltipFlags_$/;"	g
ImGuiTooltipFlags_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTooltipFlags_None = 0,$/;"	e	enum:ImGuiTooltipFlags_
ImGuiTooltipFlags_OverridePreviousTooltip	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTooltipFlags_OverridePreviousTooltip = 1 << 0      \/\/ Override will clear\/ignore previously submitted tooltip (defaults to append)$/;"	e	enum:ImGuiTooltipFlags_
ImGuiTreeNodeFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiTreeNodeFlags;$/;"	t
ImGuiTreeNodeFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiTreeNodeFlags;$/;"	t
ImGuiTreeNodeFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiTreeNodeFlags;     \/\/ -> enum ImGuiTreeNodeFlags_   \/\/ Flags: for TreeNode(), TreeNodeEx(), CollapsingHeader()$/;"	t
ImGuiTreeNodeFlagsPrivate_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiTreeNodeFlagsPrivate_$/;"	g
ImGuiTreeNodeFlags_	lib/cimgui/cimgui.h	/^}ImGuiTreeNodeFlags_;$/;"	t	typeref:enum:__anon73
ImGuiTreeNodeFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiTreeNodeFlags_;$/;"	t	typeref:enum:__anon47
ImGuiTreeNodeFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiTreeNodeFlags_$/;"	g
ImGuiTreeNodeFlags_AllowItemOverlap	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_AllowItemOverlap = 1 << 2,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_AllowItemOverlap	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_AllowItemOverlap = 1 << 2,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_AllowItemOverlap	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_AllowItemOverlap     = 1 << 2,   \/\/ Hit testing to allow subsequent widgets to overlap this one$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Bullet	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Bullet = 1 << 9,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_Bullet	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_Bullet = 1 << 9,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_Bullet	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Bullet               = 1 << 9,   \/\/ Display a bullet instead of arrow$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_ClipLabelForTrailingButton	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTreeNodeFlags_ClipLabelForTrailingButton = 1 << 20$/;"	e	enum:ImGuiTreeNodeFlagsPrivate_
ImGuiTreeNodeFlags_CollapsingHeader	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_CollapsingHeader = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoTreePushOnOpen | ImGuiTreeNodeFlags_NoAutoOpenOnLog$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_CollapsingHeader	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_CollapsingHeader = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoTreePushOnOpen | ImGuiTreeNodeFlags_NoAutoOpenOnLog$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_CollapsingHeader	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_CollapsingHeader     = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoTreePushOnOpen | ImGuiTreeNodeFlags_NoAutoOpenOnLog$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_DefaultOpen	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_DefaultOpen = 1 << 5,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_DefaultOpen	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_DefaultOpen = 1 << 5,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_DefaultOpen	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_DefaultOpen          = 1 << 5,   \/\/ Default node to be open$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_FramePadding	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_FramePadding = 1 << 10,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_FramePadding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_FramePadding = 1 << 10,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_FramePadding	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_FramePadding         = 1 << 10,  \/\/ Use FramePadding (even for an unframed text node) to vertically align text baseline to regular widget height. Equivalent to calling AlignTextToFramePadding().$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Framed	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Framed = 1 << 1,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_Framed	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_Framed = 1 << 1,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_Framed	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Framed               = 1 << 1,   \/\/ Full colored frame (e.g. for CollapsingHeader)$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Leaf	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Leaf = 1 << 8,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_Leaf	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_Leaf = 1 << 8,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_Leaf	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Leaf                 = 1 << 8,   \/\/ No collapsing, no arrow (use as a convenience for leaf nodes).$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NavLeftJumpsBackHere	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_NavLeftJumpsBackHere = 1 << 13,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_NavLeftJumpsBackHere	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_NavLeftJumpsBackHere = 1 << 13,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_NavLeftJumpsBackHere	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NavLeftJumpsBackHere = 1 << 13,  \/\/ (WIP) Nav: left direction may move to this TreeNode() from any of its child (items submitted between TreeNode and TreePop)$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NoAutoOpenOnLog	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_NoAutoOpenOnLog = 1 << 4,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_NoAutoOpenOnLog	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_NoAutoOpenOnLog = 1 << 4,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_NoAutoOpenOnLog	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NoAutoOpenOnLog      = 1 << 4,   \/\/ Don't automatically and temporarily open node when Logging is active (by default logging will automatically open tree nodes)$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NoTreePushOnOpen	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_NoTreePushOnOpen = 1 << 3,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_NoTreePushOnOpen	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_NoTreePushOnOpen = 1 << 3,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_NoTreePushOnOpen	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NoTreePushOnOpen     = 1 << 3,   \/\/ Don't do a TreePush() when open (e.g. for CollapsingHeader) = no extra indent nor pushing on ID stack$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_None	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_None = 0,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_None = 0,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_None                 = 0,$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_OpenOnArrow	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_OpenOnArrow = 1 << 7,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_OpenOnArrow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_OpenOnArrow = 1 << 7,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_OpenOnArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_OpenOnArrow          = 1 << 7,   \/\/ Only open when clicking on the arrow part. If ImGuiTreeNodeFlags_OpenOnDoubleClick is also set, single-click arrow or double-click all box to open.$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_OpenOnDoubleClick	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_OpenOnDoubleClick = 1 << 6,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_OpenOnDoubleClick	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_OpenOnDoubleClick = 1 << 6,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_OpenOnDoubleClick	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_OpenOnDoubleClick    = 1 << 6,   \/\/ Need double-click to open node$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Selected	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Selected = 1 << 0,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_Selected	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_Selected = 1 << 0,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_Selected	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Selected             = 1 << 0,   \/\/ Draw as selected$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_SpanAvailWidth	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_SpanAvailWidth = 1 << 11,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_SpanAvailWidth	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_SpanAvailWidth = 1 << 11,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_SpanAvailWidth	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_SpanAvailWidth       = 1 << 11,  \/\/ Extend hit box to the right-most edge, even if not framed. This is not the default in order to allow adding other items on the same line. In the future we may refactor the hit system to be front-to-back, allowing natural overlaps and then this can become the default.$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_SpanFullWidth	lib/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_SpanFullWidth = 1 << 12,$/;"	e	enum:__anon73
ImGuiTreeNodeFlags_SpanFullWidth	lib/cimgui/generator/output/cimgui.h	/^    ImGuiTreeNodeFlags_SpanFullWidth = 1 << 12,$/;"	e	enum:__anon47
ImGuiTreeNodeFlags_SpanFullWidth	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_SpanFullWidth        = 1 << 12,  \/\/ Extend hit box to the left-most and right-most edges (bypass the indented area).$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiWindow	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow::ImGuiWindow(ImGuiContext* context, const char* name)$/;"	f	class:ImGuiWindow
ImGuiWindow	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiWindow$/;"	s
ImGuiWindowFlags	lib/cimgui/cimgui.h	/^typedef int ImGuiWindowFlags;$/;"	t
ImGuiWindowFlags	lib/cimgui/generator/output/cimgui.h	/^typedef int ImGuiWindowFlags;$/;"	t
ImGuiWindowFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiWindowFlags;       \/\/ -> enum ImGuiWindowFlags_     \/\/ Flags: for Begin(), BeginChild()$/;"	t
ImGuiWindowFlags_	lib/cimgui/cimgui.h	/^}ImGuiWindowFlags_;$/;"	t	typeref:enum:__anon71
ImGuiWindowFlags_	lib/cimgui/generator/output/cimgui.h	/^}ImGuiWindowFlags_;$/;"	t	typeref:enum:__anon45
ImGuiWindowFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiWindowFlags_$/;"	g
ImGuiWindowFlags_AlwaysAutoResize	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysAutoResize = 1 << 6,$/;"	e	enum:__anon71
ImGuiWindowFlags_AlwaysAutoResize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_AlwaysAutoResize = 1 << 6,$/;"	e	enum:__anon45
ImGuiWindowFlags_AlwaysAutoResize	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysAutoResize       = 1 << 6,   \/\/ Resize every window to its content every frame$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysHorizontalScrollbar	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,$/;"	e	enum:__anon71
ImGuiWindowFlags_AlwaysHorizontalScrollbar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,$/;"	e	enum:__anon45
ImGuiWindowFlags_AlwaysHorizontalScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,  \/\/ Always show horizontal scrollbar (even if ContentSize.x < Size.x)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysUseWindowPadding	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,$/;"	e	enum:__anon71
ImGuiWindowFlags_AlwaysUseWindowPadding	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,$/;"	e	enum:__anon45
ImGuiWindowFlags_AlwaysUseWindowPadding	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,  \/\/ Ensure child windows without border uses style.WindowPadding (ignored by default for non-bordered child windows, because more convenient)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysVerticalScrollbar	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,$/;"	e	enum:__anon71
ImGuiWindowFlags_AlwaysVerticalScrollbar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,$/;"	e	enum:__anon45
ImGuiWindowFlags_AlwaysVerticalScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,  \/\/ Always show vertical scrollbar (even if ContentSize.y < Size.y)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildMenu	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_ChildMenu = 1 << 28$/;"	e	enum:__anon71
ImGuiWindowFlags_ChildMenu	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_ChildMenu = 1 << 28$/;"	e	enum:__anon45
ImGuiWindowFlags_ChildMenu	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_ChildMenu              = 1 << 28   \/\/ Don't use! For internal use by BeginMenu()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildWindow	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_ChildWindow = 1 << 24,$/;"	e	enum:__anon71
ImGuiWindowFlags_ChildWindow	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_ChildWindow = 1 << 24,$/;"	e	enum:__anon45
ImGuiWindowFlags_ChildWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_ChildWindow            = 1 << 24,  \/\/ Don't use! For internal use by BeginChild()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_HorizontalScrollbar	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_HorizontalScrollbar = 1 << 11,$/;"	e	enum:__anon71
ImGuiWindowFlags_HorizontalScrollbar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_HorizontalScrollbar = 1 << 11,$/;"	e	enum:__anon45
ImGuiWindowFlags_HorizontalScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_HorizontalScrollbar    = 1 << 11,  \/\/ Allow horizontal scrollbar to appear (off by default). You may use SetNextWindowContentSize(ImVec2(width,0.0f)); prior to calling Begin() to specify width. Read code in imgui_demo in the "Horizontal Scrolling" section.$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_MenuBar	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_MenuBar = 1 << 10,$/;"	e	enum:__anon71
ImGuiWindowFlags_MenuBar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_MenuBar = 1 << 10,$/;"	e	enum:__anon45
ImGuiWindowFlags_MenuBar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_MenuBar                = 1 << 10,  \/\/ Has a menu-bar$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Modal	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_Modal = 1 << 27,$/;"	e	enum:__anon71
ImGuiWindowFlags_Modal	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_Modal = 1 << 27,$/;"	e	enum:__anon45
ImGuiWindowFlags_Modal	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_Modal                  = 1 << 27,  \/\/ Don't use! For internal use by BeginPopupModal()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NavFlattened	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NavFlattened = 1 << 23,$/;"	e	enum:__anon71
ImGuiWindowFlags_NavFlattened	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NavFlattened = 1 << 23,$/;"	e	enum:__anon45
ImGuiWindowFlags_NavFlattened	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NavFlattened           = 1 << 23,  \/\/ [BETA] Allow gamepad\/keyboard navigation to cross over parent border to this child (only use on child that have no scrolling!)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoBackground	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoBackground = 1 << 7,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoBackground	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoBackground = 1 << 7,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoBackground	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoBackground           = 1 << 7,   \/\/ Disable drawing background color (WindowBg, etc.) and outside border. Similar as using SetNextWindowBgAlpha(0.0f).$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoBringToFrontOnFocus	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoBringToFrontOnFocus = 1 << 13,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoBringToFrontOnFocus	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoBringToFrontOnFocus = 1 << 13,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoBringToFrontOnFocus	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoBringToFrontOnFocus  = 1 << 13,  \/\/ Disable bringing window to front when taking focus (e.g. clicking on it or programmatically giving it focus)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoCollapse	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoCollapse = 1 << 5,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoCollapse	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoCollapse = 1 << 5,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoCollapse	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoCollapse             = 1 << 5,   \/\/ Disable user collapsing window by double-clicking on it$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoDecoration	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoDecoration = ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_NoScrollbar | ImGuiWindowFlags_NoCollapse,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoDecoration	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoDecoration = ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_NoScrollbar | ImGuiWindowFlags_NoCollapse,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoDecoration	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoDecoration           = ImGuiWindowFlags_NoTitleBar | ImGuiWindowFlags_NoResize | ImGuiWindowFlags_NoScrollbar | ImGuiWindowFlags_NoCollapse,$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoFocusOnAppearing	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoFocusOnAppearing = 1 << 12,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoFocusOnAppearing	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoFocusOnAppearing = 1 << 12,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoFocusOnAppearing	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoFocusOnAppearing     = 1 << 12,  \/\/ Disable taking focus when transitioning from hidden to visible state$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoInputs	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoInputs = ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoInputs	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoInputs = ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoInputs	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoInputs               = ImGuiWindowFlags_NoMouseInputs | ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoMouseInputs	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoMouseInputs = 1 << 9,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoMouseInputs	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoMouseInputs = 1 << 9,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoMouseInputs	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoMouseInputs          = 1 << 9,   \/\/ Disable catching mouse, hovering test with pass through.$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoMove	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoMove = 1 << 2,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoMove	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoMove = 1 << 2,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoMove	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoMove                 = 1 << 2,   \/\/ Disable user moving the window$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoNav	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoNav = ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoNav	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoNav = ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoNav	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoNav                  = ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_NoNavFocus,$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoNavFocus	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoNavFocus = 1 << 19,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoNavFocus	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoNavFocus = 1 << 19,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoNavFocus	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoNavFocus             = 1 << 19,  \/\/ No focusing toward this window with gamepad\/keyboard navigation (e.g. skipped by CTRL+TAB)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoNavInputs	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoNavInputs = 1 << 18,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoNavInputs	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoNavInputs = 1 << 18,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoNavInputs	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoNavInputs            = 1 << 18,  \/\/ No gamepad\/keyboard navigation within the window$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoResize	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoResize = 1 << 1,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoResize	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoResize = 1 << 1,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoResize	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoResize               = 1 << 1,   \/\/ Disable user resizing with the lower-right grip$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoSavedSettings	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoSavedSettings = 1 << 8,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoSavedSettings	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoSavedSettings = 1 << 8,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoSavedSettings	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoSavedSettings        = 1 << 8,   \/\/ Never load\/save settings in .ini file$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoScrollWithMouse	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoScrollWithMouse = 1 << 4,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoScrollWithMouse	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoScrollWithMouse = 1 << 4,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoScrollWithMouse	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoScrollWithMouse      = 1 << 4,   \/\/ Disable user vertically scrolling with mouse wheel. On child window, mouse wheel will be forwarded to the parent unless NoScrollbar is also set.$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoScrollbar	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoScrollbar = 1 << 3,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoScrollbar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoScrollbar = 1 << 3,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoScrollbar            = 1 << 3,   \/\/ Disable scrollbars (window can still scroll with mouse or programmatically)$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoTitleBar	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoTitleBar = 1 << 0,$/;"	e	enum:__anon71
ImGuiWindowFlags_NoTitleBar	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_NoTitleBar = 1 << 0,$/;"	e	enum:__anon45
ImGuiWindowFlags_NoTitleBar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoTitleBar             = 1 << 0,   \/\/ Disable title-bar$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_None	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_None = 0,$/;"	e	enum:__anon71
ImGuiWindowFlags_None	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_None = 0,$/;"	e	enum:__anon45
ImGuiWindowFlags_None	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_None                   = 0,$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Popup	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_Popup = 1 << 26,$/;"	e	enum:__anon71
ImGuiWindowFlags_Popup	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_Popup = 1 << 26,$/;"	e	enum:__anon45
ImGuiWindowFlags_Popup	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_Popup                  = 1 << 26,  \/\/ Don't use! For internal use by BeginPopup()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Tooltip	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_Tooltip = 1 << 25,$/;"	e	enum:__anon71
ImGuiWindowFlags_Tooltip	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_Tooltip = 1 << 25,$/;"	e	enum:__anon45
ImGuiWindowFlags_Tooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_Tooltip                = 1 << 25,  \/\/ Don't use! For internal use by BeginTooltip()$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_UnsavedDocument	lib/cimgui/cimgui.h	/^    ImGuiWindowFlags_UnsavedDocument = 1 << 20,$/;"	e	enum:__anon71
ImGuiWindowFlags_UnsavedDocument	lib/cimgui/generator/output/cimgui.h	/^    ImGuiWindowFlags_UnsavedDocument = 1 << 20,$/;"	e	enum:__anon45
ImGuiWindowFlags_UnsavedDocument	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_UnsavedDocument        = 1 << 20,  \/\/ Append '*' to title without affecting the ID, as a convenience to avoid using the ### operator. When used in a tab\/docking context, tab is selected on closure and closure is deferred by one frame to allow code to cancel the closure (with a confirmation popup, etc.) without flicker.$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowSettings	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindowSettings()       { ID = 0; Pos = Size = ImVec2ih(0, 0); Collapsed = false; }$/;"	f	struct:ImGuiWindowSettings
ImGuiWindowSettings	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiWindowSettings$/;"	s
ImGuiWindowTempData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindowTempData()$/;"	f	struct:ImGuiWindowTempData
ImGuiWindowTempData	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiWindowTempData$/;"	s
ImGui_ImplAllegro5_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^bool ImGui_ImplAllegro5_CreateDeviceObjects()$/;"	f
ImGui_ImplAllegro5_GetClipboardText	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static const char* ImGui_ImplAllegro5_GetClipboardText(void*)$/;"	f	file:
ImGui_ImplAllegro5_Init	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^bool ImGui_ImplAllegro5_Init(ALLEGRO_DISPLAY* display)$/;"	f
ImGui_ImplAllegro5_InvalidateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^void ImGui_ImplAllegro5_InvalidateDeviceObjects()$/;"	f
ImGui_ImplAllegro5_NewFrame	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^void ImGui_ImplAllegro5_NewFrame()$/;"	f
ImGui_ImplAllegro5_ProcessEvent	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^bool ImGui_ImplAllegro5_ProcessEvent(ALLEGRO_EVENT *ev)$/;"	f
ImGui_ImplAllegro5_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^void ImGui_ImplAllegro5_RenderDrawData(ImDrawData* draw_data)$/;"	f
ImGui_ImplAllegro5_SetClipboardText	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static void ImGui_ImplAllegro5_SetClipboardText(void*, const char* text)$/;"	f	file:
ImGui_ImplAllegro5_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static void ImGui_ImplAllegro5_SetupRenderState(ImDrawData* draw_data)$/;"	f	file:
ImGui_ImplAllegro5_Shutdown	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^void ImGui_ImplAllegro5_Shutdown()$/;"	f
ImGui_ImplAllegro5_UpdateMouseCursor	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static void ImGui_ImplAllegro5_UpdateMouseCursor()$/;"	f	file:
ImGui_ImplDX10_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^bool    ImGui_ImplDX10_CreateDeviceObjects()$/;"	f
ImGui_ImplDX10_CreateFontsTexture	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static void ImGui_ImplDX10_CreateFontsTexture()$/;"	f	file:
ImGui_ImplDX10_Init	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^bool    ImGui_ImplDX10_Init(ID3D10Device* device)$/;"	f
ImGui_ImplDX10_InvalidateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^void    ImGui_ImplDX10_InvalidateDeviceObjects()$/;"	f
ImGui_ImplDX10_NewFrame	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^void ImGui_ImplDX10_NewFrame()$/;"	f
ImGui_ImplDX10_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^void ImGui_ImplDX10_RenderDrawData(ImDrawData* draw_data)$/;"	f
ImGui_ImplDX10_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static void ImGui_ImplDX10_SetupRenderState(ImDrawData* draw_data, ID3D10Device* ctx)$/;"	f	file:
ImGui_ImplDX10_Shutdown	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^void ImGui_ImplDX10_Shutdown()$/;"	f
ImGui_ImplDX11_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^bool    ImGui_ImplDX11_CreateDeviceObjects()$/;"	f
ImGui_ImplDX11_CreateFontsTexture	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static void ImGui_ImplDX11_CreateFontsTexture()$/;"	f	file:
ImGui_ImplDX11_Init	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^bool    ImGui_ImplDX11_Init(ID3D11Device* device, ID3D11DeviceContext* device_context)$/;"	f
ImGui_ImplDX11_InvalidateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^void    ImGui_ImplDX11_InvalidateDeviceObjects()$/;"	f
ImGui_ImplDX11_NewFrame	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^void ImGui_ImplDX11_NewFrame()$/;"	f
ImGui_ImplDX11_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^void ImGui_ImplDX11_RenderDrawData(ImDrawData* draw_data)$/;"	f
ImGui_ImplDX11_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static void ImGui_ImplDX11_SetupRenderState(ImDrawData* draw_data, ID3D11DeviceContext* ctx)$/;"	f	file:
ImGui_ImplDX11_Shutdown	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^void ImGui_ImplDX11_Shutdown()$/;"	f
ImGui_ImplDX12_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^bool    ImGui_ImplDX12_CreateDeviceObjects()$/;"	f
ImGui_ImplDX12_CreateFontsTexture	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static void ImGui_ImplDX12_CreateFontsTexture()$/;"	f	file:
ImGui_ImplDX12_Init	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^bool ImGui_ImplDX12_Init(ID3D12Device* device, int num_frames_in_flight, DXGI_FORMAT rtv_format, ID3D12DescriptorHeap* cbv_srv_heap,$/;"	f
ImGui_ImplDX12_InvalidateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^void    ImGui_ImplDX12_InvalidateDeviceObjects()$/;"	f
ImGui_ImplDX12_NewFrame	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^void ImGui_ImplDX12_NewFrame()$/;"	f
ImGui_ImplDX12_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^void ImGui_ImplDX12_RenderDrawData(ImDrawData* draw_data, ID3D12GraphicsCommandList* ctx)$/;"	f
ImGui_ImplDX12_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static void ImGui_ImplDX12_SetupRenderState(ImDrawData* draw_data, ID3D12GraphicsCommandList* ctx, FrameResources* fr)$/;"	f	file:
ImGui_ImplDX12_Shutdown	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^void ImGui_ImplDX12_Shutdown()$/;"	f
ImGui_ImplDX9_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^bool ImGui_ImplDX9_CreateDeviceObjects()$/;"	f
ImGui_ImplDX9_CreateFontsTexture	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static bool ImGui_ImplDX9_CreateFontsTexture()$/;"	f	file:
ImGui_ImplDX9_Init	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^bool ImGui_ImplDX9_Init(IDirect3DDevice9* device)$/;"	f
ImGui_ImplDX9_InvalidateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_InvalidateDeviceObjects()$/;"	f
ImGui_ImplDX9_NewFrame	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_NewFrame()$/;"	f
ImGui_ImplDX9_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_RenderDrawData(ImDrawData* draw_data)$/;"	f
ImGui_ImplDX9_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static void ImGui_ImplDX9_SetupRenderState(ImDrawData* draw_data)$/;"	f	file:
ImGui_ImplDX9_Shutdown	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_Shutdown()$/;"	f
ImGui_ImplGLUT_Init	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^bool ImGui_ImplGLUT_Init()$/;"	f
ImGui_ImplGLUT_InstallFuncs	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_InstallFuncs()$/;"	f
ImGui_ImplGLUT_KeyboardFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_KeyboardFunc(unsigned char c, int x, int y)$/;"	f
ImGui_ImplGLUT_KeyboardUpFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_KeyboardUpFunc(unsigned char c, int x, int y)$/;"	f
ImGui_ImplGLUT_MotionFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_MotionFunc(int x, int y)$/;"	f
ImGui_ImplGLUT_MouseFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_MouseFunc(int glut_button, int state, int x, int y)$/;"	f
ImGui_ImplGLUT_MouseWheelFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_MouseWheelFunc(int button, int dir, int x, int y)$/;"	f
ImGui_ImplGLUT_NewFrame	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_NewFrame()$/;"	f
ImGui_ImplGLUT_ReshapeFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_ReshapeFunc(int w, int h)$/;"	f
ImGui_ImplGLUT_Shutdown	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_Shutdown()$/;"	f
ImGui_ImplGLUT_SpecialFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_SpecialFunc(int key, int x, int y)$/;"	f
ImGui_ImplGLUT_SpecialUpFunc	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^void ImGui_ImplGLUT_SpecialUpFunc(int key, int x, int y)$/;"	f
ImGui_ImplGLUT_UpdateKeyboardMods	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^static void ImGui_ImplGLUT_UpdateKeyboardMods()$/;"	f	file:
ImGui_ImplGlfw_CharCallback	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^void ImGui_ImplGlfw_CharCallback(GLFWwindow* window, unsigned int c)$/;"	f
ImGui_ImplGlfw_GetClipboardText	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static const char* ImGui_ImplGlfw_GetClipboardText(void* user_data)$/;"	f	file:
ImGui_ImplGlfw_Init	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static bool ImGui_ImplGlfw_Init(GLFWwindow* window, bool install_callbacks, GlfwClientApi client_api)$/;"	f	file:
ImGui_ImplGlfw_InitForOpenGL	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^bool ImGui_ImplGlfw_InitForOpenGL(GLFWwindow* window, bool install_callbacks)$/;"	f
ImGui_ImplGlfw_InitForVulkan	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^bool ImGui_ImplGlfw_InitForVulkan(GLFWwindow* window, bool install_callbacks)$/;"	f
ImGui_ImplGlfw_KeyCallback	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^void ImGui_ImplGlfw_KeyCallback(GLFWwindow* window, int key, int scancode, int action, int mods)$/;"	f
ImGui_ImplGlfw_MouseButtonCallback	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^void ImGui_ImplGlfw_MouseButtonCallback(GLFWwindow* window, int button, int action, int mods)$/;"	f
ImGui_ImplGlfw_NewFrame	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^void ImGui_ImplGlfw_NewFrame()$/;"	f
ImGui_ImplGlfw_ScrollCallback	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^void ImGui_ImplGlfw_ScrollCallback(GLFWwindow* window, double xoffset, double yoffset)$/;"	f
ImGui_ImplGlfw_SetClipboardText	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static void ImGui_ImplGlfw_SetClipboardText(void* user_data, const char* text)$/;"	f	file:
ImGui_ImplGlfw_Shutdown	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^void ImGui_ImplGlfw_Shutdown()$/;"	f
ImGui_ImplGlfw_UpdateGamepads	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static void ImGui_ImplGlfw_UpdateGamepads()$/;"	f	file:
ImGui_ImplGlfw_UpdateMouseCursor	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static void ImGui_ImplGlfw_UpdateMouseCursor()$/;"	f	file:
ImGui_ImplGlfw_UpdateMousePosAndButtons	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static void ImGui_ImplGlfw_UpdateMousePosAndButtons()$/;"	f	file:
ImGui_ImplOpenGL2_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^bool    ImGui_ImplOpenGL2_CreateDeviceObjects()$/;"	f
ImGui_ImplOpenGL2_CreateFontsTexture	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^bool ImGui_ImplOpenGL2_CreateFontsTexture()$/;"	f
ImGui_ImplOpenGL2_DestroyDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^void    ImGui_ImplOpenGL2_DestroyDeviceObjects()$/;"	f
ImGui_ImplOpenGL2_DestroyFontsTexture	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^void ImGui_ImplOpenGL2_DestroyFontsTexture()$/;"	f
ImGui_ImplOpenGL2_Init	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^bool    ImGui_ImplOpenGL2_Init()$/;"	f
ImGui_ImplOpenGL2_NewFrame	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^void    ImGui_ImplOpenGL2_NewFrame()$/;"	f
ImGui_ImplOpenGL2_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^void ImGui_ImplOpenGL2_RenderDrawData(ImDrawData* draw_data)$/;"	f
ImGui_ImplOpenGL2_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^static void ImGui_ImplOpenGL2_SetupRenderState(ImDrawData* draw_data, int fb_width, int fb_height)$/;"	f	file:
ImGui_ImplOpenGL2_Shutdown	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^void    ImGui_ImplOpenGL2_Shutdown()$/;"	f
ImGui_ImplOpenGL3_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^bool    ImGui_ImplOpenGL3_CreateDeviceObjects()$/;"	f
ImGui_ImplOpenGL3_CreateFontsTexture	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^bool ImGui_ImplOpenGL3_CreateFontsTexture()$/;"	f
ImGui_ImplOpenGL3_DestroyDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^void    ImGui_ImplOpenGL3_DestroyDeviceObjects()$/;"	f
ImGui_ImplOpenGL3_DestroyFontsTexture	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^void ImGui_ImplOpenGL3_DestroyFontsTexture()$/;"	f
ImGui_ImplOpenGL3_Init	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^bool    ImGui_ImplOpenGL3_Init(const char* glsl_version)$/;"	f
ImGui_ImplOpenGL3_NewFrame	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^void    ImGui_ImplOpenGL3_NewFrame()$/;"	f
ImGui_ImplOpenGL3_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^void    ImGui_ImplOpenGL3_RenderDrawData(ImDrawData* draw_data)$/;"	f
ImGui_ImplOpenGL3_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static void ImGui_ImplOpenGL3_SetupRenderState(ImDrawData* draw_data, int fb_width, int fb_height, GLuint vertex_array_object)$/;"	f	file:
ImGui_ImplOpenGL3_Shutdown	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^void    ImGui_ImplOpenGL3_Shutdown()$/;"	f
ImGui_ImplSDL2_GetClipboardText	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static const char* ImGui_ImplSDL2_GetClipboardText(void*)$/;"	f	file:
ImGui_ImplSDL2_Init	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static bool ImGui_ImplSDL2_Init(SDL_Window* window)$/;"	f	file:
ImGui_ImplSDL2_InitForD3D	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^bool ImGui_ImplSDL2_InitForD3D(SDL_Window* window)$/;"	f
ImGui_ImplSDL2_InitForMetal	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^bool ImGui_ImplSDL2_InitForMetal(SDL_Window* window)$/;"	f
ImGui_ImplSDL2_InitForOpenGL	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^bool ImGui_ImplSDL2_InitForOpenGL(SDL_Window* window, void* sdl_gl_context)$/;"	f
ImGui_ImplSDL2_InitForVulkan	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^bool ImGui_ImplSDL2_InitForVulkan(SDL_Window* window)$/;"	f
ImGui_ImplSDL2_NewFrame	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^void ImGui_ImplSDL2_NewFrame(SDL_Window* window)$/;"	f
ImGui_ImplSDL2_ProcessEvent	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^bool ImGui_ImplSDL2_ProcessEvent(const SDL_Event* event)$/;"	f
ImGui_ImplSDL2_SetClipboardText	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static void ImGui_ImplSDL2_SetClipboardText(void*, const char* text)$/;"	f	file:
ImGui_ImplSDL2_Shutdown	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^void ImGui_ImplSDL2_Shutdown()$/;"	f
ImGui_ImplSDL2_UpdateGamepads	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static void ImGui_ImplSDL2_UpdateGamepads()$/;"	f	file:
ImGui_ImplSDL2_UpdateMouseCursor	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static void ImGui_ImplSDL2_UpdateMouseCursor()$/;"	f	file:
ImGui_ImplSDL2_UpdateMousePosAndButtons	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static void ImGui_ImplSDL2_UpdateMousePosAndButtons()$/;"	f	file:
ImGui_ImplVulkanH_CreateWindow	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_CreateWindow(VkInstance instance, VkPhysicalDevice physical_device, VkDevice device, ImGui_ImplVulkanH_Window* wd, uint32_t queue_family, const VkAllocationCallbacks* allocator, int width, int height, uint32_t min_image_count)$/;"	f
ImGui_ImplVulkanH_CreateWindowCommandBuffers	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_CreateWindowCommandBuffers(VkPhysicalDevice physical_device, VkDevice device, ImGui_ImplVulkanH_Window* wd, uint32_t queue_family, const VkAllocationCallbacks* allocator)$/;"	f
ImGui_ImplVulkanH_CreateWindowSwapChain	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_CreateWindowSwapChain(VkPhysicalDevice physical_device, VkDevice device, ImGui_ImplVulkanH_Window* wd, const VkAllocationCallbacks* allocator, int w, int h, uint32_t min_image_count)$/;"	f
ImGui_ImplVulkanH_DestroyFrame	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_DestroyFrame(VkDevice device, ImGui_ImplVulkanH_Frame* fd, const VkAllocationCallbacks* allocator)$/;"	f
ImGui_ImplVulkanH_DestroyFrameRenderBuffers	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_DestroyFrameRenderBuffers(VkDevice device, ImGui_ImplVulkanH_FrameRenderBuffers* buffers, const VkAllocationCallbacks* allocator)$/;"	f
ImGui_ImplVulkanH_DestroyFrameSemaphores	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_DestroyFrameSemaphores(VkDevice device, ImGui_ImplVulkanH_FrameSemaphores* fsd, const VkAllocationCallbacks* allocator)$/;"	f
ImGui_ImplVulkanH_DestroyWindow	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_DestroyWindow(VkInstance instance, VkDevice device, ImGui_ImplVulkanH_Window* wd, const VkAllocationCallbacks* allocator)$/;"	f
ImGui_ImplVulkanH_DestroyWindowRenderBuffers	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkanH_DestroyWindowRenderBuffers(VkDevice device, ImGui_ImplVulkanH_WindowRenderBuffers* buffers, const VkAllocationCallbacks* allocator)$/;"	f
ImGui_ImplVulkanH_Frame	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^struct ImGui_ImplVulkanH_Frame$/;"	s
ImGui_ImplVulkanH_FrameRenderBuffers	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^struct ImGui_ImplVulkanH_FrameRenderBuffers$/;"	s	file:
ImGui_ImplVulkanH_FrameSemaphores	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^struct ImGui_ImplVulkanH_FrameSemaphores$/;"	s
ImGui_ImplVulkanH_GetMinImageCountFromPresentMode	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^int ImGui_ImplVulkanH_GetMinImageCountFromPresentMode(VkPresentModeKHR present_mode)$/;"	f
ImGui_ImplVulkanH_SelectPresentMode	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^VkPresentModeKHR ImGui_ImplVulkanH_SelectPresentMode(VkPhysicalDevice physical_device, VkSurfaceKHR surface, const VkPresentModeKHR* request_modes, int request_modes_count)$/;"	f
ImGui_ImplVulkanH_SelectSurfaceFormat	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^VkSurfaceFormatKHR ImGui_ImplVulkanH_SelectSurfaceFormat(VkPhysicalDevice physical_device, VkSurfaceKHR surface, const VkFormat* request_formats, int request_formats_count, VkColorSpaceKHR request_color_space)$/;"	f
ImGui_ImplVulkanH_Window	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    ImGui_ImplVulkanH_Window()$/;"	f	struct:ImGui_ImplVulkanH_Window
ImGui_ImplVulkanH_Window	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^struct ImGui_ImplVulkanH_Window$/;"	s
ImGui_ImplVulkanH_WindowRenderBuffers	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^struct ImGui_ImplVulkanH_WindowRenderBuffers$/;"	s	file:
ImGui_ImplVulkan_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^bool ImGui_ImplVulkan_CreateDeviceObjects()$/;"	f
ImGui_ImplVulkan_CreateFontsTexture	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^bool ImGui_ImplVulkan_CreateFontsTexture(VkCommandBuffer command_buffer)$/;"	f
ImGui_ImplVulkan_DestroyDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void    ImGui_ImplVulkan_DestroyDeviceObjects()$/;"	f
ImGui_ImplVulkan_DestroyFontUploadObjects	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void    ImGui_ImplVulkan_DestroyFontUploadObjects()$/;"	f
ImGui_ImplVulkan_Init	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^bool    ImGui_ImplVulkan_Init(ImGui_ImplVulkan_InitInfo* info, VkRenderPass render_pass)$/;"	f
ImGui_ImplVulkan_InitInfo	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^struct ImGui_ImplVulkan_InitInfo$/;"	s
ImGui_ImplVulkan_MemoryType	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static uint32_t ImGui_ImplVulkan_MemoryType(VkMemoryPropertyFlags properties, uint32_t type_bits)$/;"	f	file:
ImGui_ImplVulkan_NewFrame	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkan_NewFrame()$/;"	f
ImGui_ImplVulkan_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkan_RenderDrawData(ImDrawData* draw_data, VkCommandBuffer command_buffer)$/;"	f
ImGui_ImplVulkan_SetMinImageCount	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkan_SetMinImageCount(uint32_t min_image_count)$/;"	f
ImGui_ImplVulkan_SetupRenderState	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static void ImGui_ImplVulkan_SetupRenderState(ImDrawData* draw_data, VkCommandBuffer command_buffer, ImGui_ImplVulkanH_FrameRenderBuffers* rb, int fb_width, int fb_height)$/;"	f	file:
ImGui_ImplVulkan_Shutdown	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^void ImGui_ImplVulkan_Shutdown()$/;"	f
ImGui_ImplWin32_EnableDpiAwareness	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^void ImGui_ImplWin32_EnableDpiAwareness()$/;"	f
ImGui_ImplWin32_GetDpiScaleForHwnd	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^float ImGui_ImplWin32_GetDpiScaleForHwnd(void* hwnd)$/;"	f
ImGui_ImplWin32_GetDpiScaleForMonitor	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^float ImGui_ImplWin32_GetDpiScaleForMonitor(void* monitor)$/;"	f
ImGui_ImplWin32_Init	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^bool    ImGui_ImplWin32_Init(void* hwnd)$/;"	f
ImGui_ImplWin32_NewFrame	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^void    ImGui_ImplWin32_NewFrame()$/;"	f
ImGui_ImplWin32_Shutdown	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^void    ImGui_ImplWin32_Shutdown()$/;"	f
ImGui_ImplWin32_UpdateGamepads	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static void ImGui_ImplWin32_UpdateGamepads()$/;"	f	file:
ImGui_ImplWin32_UpdateMouseCursor	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static bool ImGui_ImplWin32_UpdateMouseCursor()$/;"	f	file:
ImGui_ImplWin32_UpdateMousePos	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static void ImGui_ImplWin32_UpdateMousePos()$/;"	f	file:
ImGui_ImplWin32_WndProcHandler	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^IMGUI_IMPL_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
ImGui_Marmalade_CharCallback	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^int32 ImGui_Marmalade_CharCallback(void* system_data, void* user_data)$/;"	f
ImGui_Marmalade_CreateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^bool ImGui_Marmalade_CreateDeviceObjects()$/;"	f
ImGui_Marmalade_GetClipboardText	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static const char* ImGui_Marmalade_GetClipboardText(void* \/*user_data*\/)$/;"	f	file:
ImGui_Marmalade_Init	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^bool    ImGui_Marmalade_Init(bool install_callbacks)$/;"	f
ImGui_Marmalade_InvalidateDeviceObjects	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^void    ImGui_Marmalade_InvalidateDeviceObjects()$/;"	f
ImGui_Marmalade_KeyCallback	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^int32 ImGui_Marmalade_KeyCallback(void* system_data, void* user_data)$/;"	f
ImGui_Marmalade_NewFrame	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^void ImGui_Marmalade_NewFrame()$/;"	f
ImGui_Marmalade_PointerButtonEventCallback	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^int32 ImGui_Marmalade_PointerButtonEventCallback(void* system_data, void* user_data)$/;"	f
ImGui_Marmalade_RenderDrawData	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^void ImGui_Marmalade_RenderDrawData(ImDrawData* draw_data)$/;"	f
ImGui_Marmalade_SetClipboardText	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static void ImGui_Marmalade_SetClipboardText(void* \/*user_data*\/, const char* text)$/;"	f	file:
ImGui_Marmalade_Shutdown	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^void ImGui_Marmalade_Shutdown()$/;"	f
ImGui_f_implementation	lib/cimgui/generator/generator.lua	/^local function ImGui_f_implementation(outtab,def)$/;"	f
ImGui_f_implementation	lib/cimgui/generator/generator_old.lua	/^local function ImGui_f_implementation(outtab,def)$/;"	f
ImHash	lib/cimgui/imgui/imgui_internal.h	/^static inline ImU32     ImHash(const void* data, int size, ImU32 seed = 0) { return size ? ImHashData(data, (size_t)size, seed) : ImHashStr((const char*)data, 0, seed); } \/\/ [moved to ImHashStr\/ImHashData in 1.68]$/;"	f
ImHashData	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImHashData(const void* data_p, size_t data_size, ImU32 seed)$/;"	f
ImHashStr	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImHashStr(const char* data_p, size_t data_size, ImU32 seed)$/;"	f
ImInvLength	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImInvLength(const ImVec2& lhs, float fail_value)           { float d = lhs.x*lhs.x + lhs.y*lhs.y; if (d > 0.0f) return 1.0f \/ ImSqrt(d); return fail_value; }$/;"	f
ImIsPowerOfTwo	lib/cimgui/imgui/imgui_internal.h	/^static inline bool      ImIsPowerOfTwo(int v)           { return v != 0 && (v & (v - 1)) == 0; }$/;"	f
ImLengthSqr	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImLengthSqr(const ImVec2& lhs)                             { return lhs.x*lhs.x + lhs.y*lhs.y; }$/;"	f
ImLengthSqr	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImLengthSqr(const ImVec4& lhs)                             { return lhs.x*lhs.x + lhs.y*lhs.y + lhs.z*lhs.z + lhs.w*lhs.w; }$/;"	f
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, const ImVec2& t)  { return ImVec2(a.x + (b.x - a.x) * t.x, a.y + (b.y - a.y) * t.y); }$/;"	f
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, float t)          { return ImVec2(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t); }$/;"	f
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 ImLerp(const ImVec4& a, const ImVec4& b, float t)          { return ImVec4(a.x + (b.x - a.x) * t, a.y + (b.y - a.y) * t, a.z + (b.z - a.z) * t, a.w + (b.w - a.w) * t); }$/;"	f
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^template<typename T> static inline T ImLerp(T a, T b, float t)                  { return (T)(a + (b - a) * t); }$/;"	f
ImLineClosestPoint	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImLineClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& p)$/;"	f
ImLinearSweep	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImLinearSweep(float current, float target, float speed)    { if (current < target) return ImMin(current + speed, target); if (current > target) return ImMax(current - speed, target); return current; }$/;"	f
ImMax	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImMax(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(lhs.x >= rhs.x ? lhs.x : rhs.x, lhs.y >= rhs.y ? lhs.y : rhs.y); }$/;"	f
ImMax	lib/cimgui/imgui/imgui_internal.h	/^template<typename T> static inline T ImMax(T lhs, T rhs)                        { return lhs >= rhs ? lhs : rhs; }$/;"	f
ImMin	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImMin(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(lhs.x < rhs.x ? lhs.x : rhs.x, lhs.y < rhs.y ? lhs.y : rhs.y); }$/;"	f
ImMin	lib/cimgui/imgui/imgui_internal.h	/^template<typename T> static inline T ImMin(T lhs, T rhs)                        { return lhs < rhs ? lhs : rhs; }$/;"	f
ImModPositive	lib/cimgui/imgui/imgui_internal.h	/^static inline int    ImModPositive(int a, int b)                                { return (a + b) % b; }$/;"	f
ImMul	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImMul(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(lhs.x * rhs.x, lhs.y * rhs.y); }$/;"	f
ImNewDummy	lib/cimgui/imgui/imgui.h	/^struct ImNewDummy {};$/;"	s
ImParseFormatFindEnd	lib/cimgui/imgui/imgui_widgets.cpp	/^const char* ImParseFormatFindEnd(const char* fmt)$/;"	f
ImParseFormatFindStart	lib/cimgui/imgui/imgui_widgets.cpp	/^const char* ImParseFormatFindStart(const char* fmt)$/;"	f
ImParseFormatPrecision	lib/cimgui/imgui/imgui_widgets.cpp	/^int ImParseFormatPrecision(const char* fmt, int default_precision)$/;"	f
ImParseFormatTrimDecorations	lib/cimgui/imgui/imgui_widgets.cpp	/^const char* ImParseFormatTrimDecorations(const char* fmt, char* buf, size_t buf_size)$/;"	f
ImPool	lib/cimgui/imgui/imgui_internal.h	/^    ImPool()    { FreeIdx = 0; }$/;"	f	struct:ImPool
ImPool	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImPool$/;"	s
ImPoolIdx	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImPoolIdx;$/;"	t
ImPow	lib/cimgui/imgui/imgui_internal.h	/^static inline double ImPow(double x, double y)  { return pow(x, y); }$/;"	f
ImPow	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImPow(float x, float y)    { return powf(x, y); }          \/\/ DragBehaviorT\/SliderBehaviorT uses ImPow with either float\/double and need the precision$/;"	f
ImQsort	lib/cimgui/imgui/imgui_internal.h	213;"	d
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect()                                        : Min(0.0f, 0.0f), Max(0.0f, 0.0f)              {}$/;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                            {}$/;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)                  {}$/;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)                      {}$/;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImRect$/;"	s
ImRotate	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImRotate(const ImVec2& v, float cos_a, float sin_a)        { return ImVec2(v.x * cos_a - v.y * sin_a, v.x * sin_a + v.y * cos_a); }$/;"	f
ImS16	lib/cimgui/cimgui.h	/^typedef signed short ImS16;$/;"	t
ImS16	lib/cimgui/generator/output/cimgui.h	/^typedef signed short ImS16;$/;"	t
ImS16	lib/cimgui/imgui/imgui.h	/^typedef signed short        ImS16;  \/\/ 16-bit signed integer$/;"	t
ImS32	lib/cimgui/cimgui.h	/^typedef signed int ImS32;$/;"	t
ImS32	lib/cimgui/generator/output/cimgui.h	/^typedef signed int ImS32;$/;"	t
ImS32	lib/cimgui/imgui/imgui.h	/^typedef signed int          ImS32;  \/\/ 32-bit signed integer == int$/;"	t
ImS64	lib/cimgui/cimgui.h	/^typedef int64_t ImS64;$/;"	t
ImS64	lib/cimgui/generator/output/cimgui.h	/^typedef int64_t ImS64;$/;"	t
ImS64	lib/cimgui/imgui/imgui.h	/^typedef int64_t             ImS64;  \/\/ 64-bit signed integer (pre C++11)$/;"	t
ImS64	lib/cimgui/imgui/imgui.h	/^typedef signed   __int64    ImS64;  \/\/ 64-bit signed integer (pre and post C++11 with Visual Studio)$/;"	t
ImS64	lib/cimgui/imgui/imgui.h	/^typedef signed   long long  ImS64;  \/\/ 64-bit signed integer (post C++11)$/;"	t
ImS8	lib/cimgui/cimgui.h	/^typedef signed char ImS8;$/;"	t
ImS8	lib/cimgui/generator/output/cimgui.h	/^typedef signed char ImS8;$/;"	t
ImS8	lib/cimgui/imgui/imgui.h	/^typedef signed char         ImS8;   \/\/ 8-bit signed integer$/;"	t
ImSaturate	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImSaturate(float f)                                        { return (f < 0.0f) ? 0.0f : (f > 1.0f) ? 1.0f : f; }$/;"	f
ImSin	lib/cimgui/imgui/imgui_internal.h	303;"	d
ImSqrt	lib/cimgui/imgui/imgui_internal.h	300;"	d
ImStb	lib/cimgui/imgui/imgui_internal.h	/^namespace ImStb$/;"	n
ImStb	lib/cimgui/imgui/imgui_widgets.cpp	/^namespace ImStb$/;"	n	file:
ImStrSkipBlank	lib/cimgui/imgui/imgui.cpp	/^const char* ImStrSkipBlank(const char* str)$/;"	f
ImStrTrimBlanks	lib/cimgui/imgui/imgui.cpp	/^void ImStrTrimBlanks(char* buf)$/;"	f
ImStrbolW	lib/cimgui/imgui/imgui.cpp	/^const ImWchar* ImStrbolW(const ImWchar* buf_mid_line, const ImWchar* buf_begin) \/\/ find beginning-of-line$/;"	f
ImStrchrRange	lib/cimgui/imgui/imgui.cpp	/^const char* ImStrchrRange(const char* str, const char* str_end, char c)$/;"	f
ImStrdup	lib/cimgui/imgui/imgui.cpp	/^char* ImStrdup(const char* str)$/;"	f
ImStrdupcpy	lib/cimgui/imgui/imgui.cpp	/^char* ImStrdupcpy(char* dst, size_t* p_dst_size, const char* src)$/;"	f
ImStreolRange	lib/cimgui/imgui/imgui.cpp	/^const char* ImStreolRange(const char* str, const char* str_end)$/;"	f
ImStricmp	lib/cimgui/imgui/imgui.cpp	/^int ImStricmp(const char* str1, const char* str2)$/;"	f
ImStristr	lib/cimgui/imgui/imgui.cpp	/^const char* ImStristr(const char* haystack, const char* haystack_end, const char* needle, const char* needle_end)$/;"	f
ImStrlenW	lib/cimgui/imgui/imgui.cpp	/^int ImStrlenW(const ImWchar* str)$/;"	f
ImStrncpy	lib/cimgui/imgui/imgui.cpp	/^void ImStrncpy(char* dst, const char* src, size_t count)$/;"	f
ImStrnicmp	lib/cimgui/imgui/imgui.cpp	/^int ImStrnicmp(const char* str1, const char* str2, size_t count)$/;"	f
ImSubClampOverflow	lib/cimgui/imgui/imgui_internal.h	/^template<typename T> static inline T ImSubClampOverflow(T a, T b, T mn, T mx)   { if (b > 0 && (a < mn + b)) return mn; if (b < 0 && (a > mx + b)) return mx; return a - b; }$/;"	f
ImSwap	lib/cimgui/imgui/imgui_internal.h	/^template<typename T> static inline void ImSwap(T& a, T& b)                      { T tmp = a; a = b; b = tmp; }$/;"	f
ImTextCharFromUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextCharFromUtf8(unsigned int* out_char, const char* in_text, const char* in_text_end)$/;"	f
ImTextCharToUtf8	lib/cimgui/imgui/imgui.cpp	/^static inline int ImTextCharToUtf8(char* buf, int buf_size, unsigned int c)$/;"	f	file:
ImTextCountCharsFromUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextCountCharsFromUtf8(const char* in_text, const char* in_text_end)$/;"	f
ImTextCountUtf8BytesFromChar	lib/cimgui/imgui/imgui.cpp	/^int ImTextCountUtf8BytesFromChar(const char* in_text, const char* in_text_end)$/;"	f
ImTextCountUtf8BytesFromChar	lib/cimgui/imgui/imgui.cpp	/^static inline int ImTextCountUtf8BytesFromChar(unsigned int c)$/;"	f	file:
ImTextCountUtf8BytesFromStr	lib/cimgui/imgui/imgui.cpp	/^int ImTextCountUtf8BytesFromStr(const ImWchar* in_text, const ImWchar* in_text_end)$/;"	f
ImTextStrFromUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextStrFromUtf8(ImWchar* buf, int buf_size, const char* in_text, const char* in_text_end, const char** in_text_remaining)$/;"	f
ImTextStrToUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextStrToUtf8(char* buf, int buf_size, const ImWchar* in_text, const ImWchar* in_text_end)$/;"	f
ImTextureID	lib/cimgui/cimgui.h	/^typedef void* ImTextureID;$/;"	t
ImTextureID	lib/cimgui/generator/output/cimgui.h	/^typedef void* ImTextureID;$/;"	t
ImTextureID	lib/cimgui/imgui/imgui.h	/^typedef void* ImTextureID;          \/\/ User data to identify a texture (this is whatever to you want it to be! read the FAQ about ImTextureID in imgui.cpp)$/;"	t
ImTriangleArea	lib/cimgui/imgui/imgui_internal.h	/^inline float         ImTriangleArea(const ImVec2& a, const ImVec2& b, const ImVec2& c) { return ImFabs((a.x * (b.y - c.y)) + (b.x * (c.y - a.y)) + (c.x * (a.y - b.y))) * 0.5f; }$/;"	f
ImTriangleBarycentricCoords	lib/cimgui/imgui/imgui.cpp	/^void ImTriangleBarycentricCoords(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p, float& out_u, float& out_v, float& out_w)$/;"	f
ImTriangleClosestPoint	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImTriangleClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p)$/;"	f
ImTriangleContainsPoint	lib/cimgui/imgui/imgui.cpp	/^bool ImTriangleContainsPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p)$/;"	f
ImU16	lib/cimgui/cimgui.h	/^typedef unsigned short ImU16;$/;"	t
ImU16	lib/cimgui/generator/output/cimgui.h	/^typedef unsigned short ImU16;$/;"	t
ImU16	lib/cimgui/imgui/imgui.h	/^typedef unsigned short      ImU16;  \/\/ 16-bit unsigned integer$/;"	t
ImU32	lib/cimgui/cimgui.h	/^typedef unsigned int ImU32;$/;"	t
ImU32	lib/cimgui/generator/output/cimgui.h	/^typedef unsigned int ImU32;$/;"	t
ImU32	lib/cimgui/imgui/imgui.h	/^typedef unsigned int        ImU32;  \/\/ 32-bit unsigned integer (often used to store packed colors)$/;"	t
ImU64	lib/cimgui/cimgui.h	/^typedef uint64_t ImU64;$/;"	t
ImU64	lib/cimgui/cimgui.h	/^typedef unsigned __int64 ImU64;$/;"	t
ImU64	lib/cimgui/generator/cimgui_template.h	/^typedef unsigned __int64 ImU64;$/;"	t
ImU64	lib/cimgui/generator/output/cimgui.h	/^typedef uint64_t ImU64;$/;"	t
ImU64	lib/cimgui/generator/output/cimgui.h	/^typedef unsigned __int64 ImU64;$/;"	t
ImU64	lib/cimgui/imgui/imgui.h	/^typedef uint64_t            ImU64;  \/\/ 64-bit unsigned integer (pre C++11)$/;"	t
ImU64	lib/cimgui/imgui/imgui.h	/^typedef unsigned __int64    ImU64;  \/\/ 64-bit unsigned integer (pre and post C++11 with Visual Studio)$/;"	t
ImU64	lib/cimgui/imgui/imgui.h	/^typedef unsigned long long  ImU64;  \/\/ 64-bit unsigned integer (post C++11)$/;"	t
ImU8	lib/cimgui/cimgui.h	/^typedef unsigned char ImU8;$/;"	t
ImU8	lib/cimgui/generator/output/cimgui.h	/^typedef unsigned char ImU8;$/;"	t
ImU8	lib/cimgui/imgui/imgui.h	/^typedef unsigned char       ImU8;   \/\/ 8-bit unsigned integer$/;"	t
ImUpperPowerOfTwo	lib/cimgui/imgui/imgui_internal.h	/^static inline int       ImUpperPowerOfTwo(int v)        { v--; v |= v >> 1; v |= v >> 2; v |= v >> 4; v |= v >> 8; v |= v >> 16; v++; return v; }$/;"	f
ImVec1	lib/cimgui/imgui/imgui_internal.h	/^    ImVec1()         { x = 0.0f; }$/;"	f	struct:ImVec1
ImVec1	lib/cimgui/imgui/imgui_internal.h	/^    ImVec1(float _x) { x = _x; }$/;"	f	struct:ImVec1
ImVec1	lib/cimgui/imgui/imgui_internal.h	/^struct ImVec1$/;"	s
ImVec2	lib/cimgui/cimgui.h	/^struct ImVec2$/;"	s
ImVec2	lib/cimgui/cimgui.h	/^typedef struct ImVec2 ImVec2;$/;"	t	typeref:struct:ImVec2
ImVec2	lib/cimgui/generator/output/cimgui.h	/^struct ImVec2$/;"	s
ImVec2	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec2 ImVec2;$/;"	t	typeref:struct:ImVec2
ImVec2	lib/cimgui/imgui/imgui.h	/^    ImVec2()  { x = y = 0.0f; }$/;"	f	struct:ImVec2
ImVec2	lib/cimgui/imgui/imgui.h	/^    ImVec2(float _x, float _y) { x = _x; y = _y; }$/;"	f	struct:ImVec2
ImVec2	lib/cimgui/imgui/imgui.h	/^struct ImVec2$/;"	s
ImVec2ToSimple	lib/cimgui/cimgui.h	/^inline ImVec2_Simple ImVec2ToSimple(ImVec2 vec)$/;"	f
ImVec2ToSimple	lib/cimgui/generator/cimgui_template.h	/^inline ImVec2_Simple ImVec2ToSimple(ImVec2 vec)$/;"	f
ImVec2ToSimple	lib/cimgui/generator/output/cimgui.h	/^inline ImVec2_Simple ImVec2ToSimple(ImVec2 vec)$/;"	f
ImVec2_ImVec2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2* ImVec2_ImVec2(void)$/;"	f
ImVec2_ImVec2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2* ImVec2_ImVec2(void)$/;"	f
ImVec2_ImVec2Float	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2* ImVec2_ImVec2Float(float _x,float _y)$/;"	f
ImVec2_ImVec2Float	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2* ImVec2_ImVec2Float(float _x,float _y)$/;"	f
ImVec2_Simple	lib/cimgui/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	s
ImVec2_Simple	lib/cimgui/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	t	typeref:struct:ImVec2_Simple
ImVec2_Simple	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	s
ImVec2_Simple	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	t	typeref:struct:ImVec2_Simple
ImVec2_Simple	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	s
ImVec2_Simple	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	t	typeref:struct:ImVec2_Simple
ImVec2_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImVec2_destroy(ImVec2* self)$/;"	f
ImVec2_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImVec2_destroy(ImVec2* self)$/;"	f
ImVec2ih	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2ih()                           { x = y = 0; }$/;"	f	struct:ImVec2ih
ImVec2ih	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2ih(short _x, short _y)         { x = _x; y = _y; }$/;"	f	struct:ImVec2ih
ImVec2ih	lib/cimgui/imgui/imgui_internal.h	/^    explicit ImVec2ih(const ImVec2& rhs) { x = (short)rhs.x; y = (short)rhs.y; }$/;"	f	struct:ImVec2ih
ImVec2ih	lib/cimgui/imgui/imgui_internal.h	/^struct ImVec2ih$/;"	s
ImVec4	lib/cimgui/cimgui.h	/^struct ImVec4$/;"	s
ImVec4	lib/cimgui/cimgui.h	/^typedef struct ImVec4 ImVec4;$/;"	t	typeref:struct:ImVec4
ImVec4	lib/cimgui/generator/output/cimgui.h	/^struct ImVec4$/;"	s
ImVec4	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec4 ImVec4;$/;"	t	typeref:struct:ImVec4
ImVec4	lib/cimgui/imgui/imgui.h	/^    ImVec4()  { x = y = z = w = 0.0f; }$/;"	f	struct:ImVec4
ImVec4	lib/cimgui/imgui/imgui.h	/^    ImVec4(float _x, float _y, float _z, float _w) { x = _x; y = _y; z = _z; w = _w; }$/;"	f	struct:ImVec4
ImVec4	lib/cimgui/imgui/imgui.h	/^struct ImVec4$/;"	s
ImVec4ToSimple	lib/cimgui/cimgui.h	/^inline ImVec4_Simple ImVec4ToSimple(ImVec4 vec)$/;"	f
ImVec4ToSimple	lib/cimgui/generator/cimgui_template.h	/^inline ImVec4_Simple ImVec4ToSimple(ImVec4 vec)$/;"	f
ImVec4ToSimple	lib/cimgui/generator/output/cimgui.h	/^inline ImVec4_Simple ImVec4ToSimple(ImVec4 vec)$/;"	f
ImVec4_ImVec4	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec4* ImVec4_ImVec4(void)$/;"	f
ImVec4_ImVec4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec4* ImVec4_ImVec4(void)$/;"	f
ImVec4_ImVec4Float	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec4* ImVec4_ImVec4Float(float _x,float _y,float _z,float _w)$/;"	f
ImVec4_ImVec4Float	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec4* ImVec4_ImVec4Float(float _x,float _y,float _z,float _w)$/;"	f
ImVec4_Simple	lib/cimgui/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	s
ImVec4_Simple	lib/cimgui/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	t	typeref:struct:ImVec4_Simple
ImVec4_Simple	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	s
ImVec4_Simple	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	t	typeref:struct:ImVec4_Simple
ImVec4_Simple	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	s
ImVec4_Simple	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	t	typeref:struct:ImVec4_Simple
ImVec4_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImVec4_destroy(ImVec4* self)$/;"	f
ImVec4_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImVec4_destroy(ImVec4* self)$/;"	f
ImVector	lib/cimgui/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	s
ImVector	lib/cimgui/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	t	typeref:struct:ImVector
ImVector	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	s
ImVector	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	t	typeref:struct:ImVector
ImVector	lib/cimgui/imgui/imgui.h	/^    inline ImVector()                                       { Size = Capacity = 0; Data = NULL; }$/;"	f	struct:ImVector
ImVector	lib/cimgui/imgui/imgui.h	/^    inline ImVector(const ImVector<T>& src)                 { Size = Capacity = 0; Data = NULL; operator=(src); }$/;"	f	struct:ImVector
ImVector	lib/cimgui/imgui/imgui.h	/^struct ImVector$/;"	s
ImVector_ImDrawChannel	lib/cimgui/cimgui.h	/^typedef ImVector<ImDrawChannel> ImVector_ImDrawChannel;$/;"	t
ImVector_ImDrawChannel	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	s
ImVector_ImDrawChannel	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	t	typeref:struct:ImVector_ImDrawChannel
ImVector_ImDrawChannel	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImDrawChannel> ImVector_ImDrawChannel;$/;"	t
ImVector_ImDrawChannel	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	s
ImVector_ImDrawChannel	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	t	typeref:struct:ImVector_ImDrawChannel
ImVector_ImDrawCmd	lib/cimgui/cimgui.h	/^typedef ImVector<ImDrawCmd> ImVector_ImDrawCmd;$/;"	t
ImVector_ImDrawCmd	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	s
ImVector_ImDrawCmd	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	t	typeref:struct:ImVector_ImDrawCmd
ImVector_ImDrawCmd	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImDrawCmd> ImVector_ImDrawCmd;$/;"	t
ImVector_ImDrawCmd	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	s
ImVector_ImDrawCmd	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	t	typeref:struct:ImVector_ImDrawCmd
ImVector_ImDrawIdx	lib/cimgui/cimgui.h	/^typedef ImVector<ImDrawIdx> ImVector_ImDrawIdx;$/;"	t
ImVector_ImDrawIdx	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	s
ImVector_ImDrawIdx	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	t	typeref:struct:ImVector_ImDrawIdx
ImVector_ImDrawIdx	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImDrawIdx> ImVector_ImDrawIdx;$/;"	t
ImVector_ImDrawIdx	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	s
ImVector_ImDrawIdx	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	t	typeref:struct:ImVector_ImDrawIdx
ImVector_ImDrawVert	lib/cimgui/cimgui.h	/^typedef ImVector<ImDrawVert> ImVector_ImDrawVert;$/;"	t
ImVector_ImDrawVert	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	s
ImVector_ImDrawVert	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	t	typeref:struct:ImVector_ImDrawVert
ImVector_ImDrawVert	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImDrawVert> ImVector_ImDrawVert;$/;"	t
ImVector_ImDrawVert	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	s
ImVector_ImDrawVert	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	t	typeref:struct:ImVector_ImDrawVert
ImVector_ImFontAtlasCustomRect	lib/cimgui/cimgui.h	/^typedef ImVector<ImFontAtlasCustomRect> ImVector_ImFontAtlasCustomRect;$/;"	t
ImVector_ImFontAtlasCustomRect	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	s
ImVector_ImFontAtlasCustomRect	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	t	typeref:struct:ImVector_ImFontAtlasCustomRect
ImVector_ImFontAtlasCustomRect	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImFontAtlasCustomRect> ImVector_ImFontAtlasCustomRect;$/;"	t
ImVector_ImFontAtlasCustomRect	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	s
ImVector_ImFontAtlasCustomRect	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	t	typeref:struct:ImVector_ImFontAtlasCustomRect
ImVector_ImFontConfig	lib/cimgui/cimgui.h	/^typedef ImVector<ImFontConfig> ImVector_ImFontConfig;$/;"	t
ImVector_ImFontConfig	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	s
ImVector_ImFontConfig	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	t	typeref:struct:ImVector_ImFontConfig
ImVector_ImFontConfig	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImFontConfig> ImVector_ImFontConfig;$/;"	t
ImVector_ImFontConfig	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	s
ImVector_ImFontConfig	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	t	typeref:struct:ImVector_ImFontConfig
ImVector_ImFontGlyph	lib/cimgui/cimgui.h	/^typedef ImVector<ImFontGlyph> ImVector_ImFontGlyph;$/;"	t
ImVector_ImFontGlyph	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	s
ImVector_ImFontGlyph	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	t	typeref:struct:ImVector_ImFontGlyph
ImVector_ImFontGlyph	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImFontGlyph> ImVector_ImFontGlyph;$/;"	t
ImVector_ImFontGlyph	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	s
ImVector_ImFontGlyph	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	t	typeref:struct:ImVector_ImFontGlyph
ImVector_ImFontPtr	lib/cimgui/cimgui.h	/^typedef ImVector<ImFont*> ImVector_ImFontPtr;$/;"	t
ImVector_ImFontPtr	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	s
ImVector_ImFontPtr	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	t	typeref:struct:ImVector_ImFontPtr
ImVector_ImFontPtr	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImFont*> ImVector_ImFontPtr;$/;"	t
ImVector_ImFontPtr	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	s
ImVector_ImFontPtr	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	t	typeref:struct:ImVector_ImFontPtr
ImVector_ImGuiStoragePair	lib/cimgui/cimgui.h	/^typedef ImVector<ImGuiStoragePair> ImVector_ImGuiStoragePair;$/;"	t
ImVector_ImGuiStoragePair	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	s
ImVector_ImGuiStoragePair	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	t	typeref:struct:ImVector_ImGuiStoragePair
ImVector_ImGuiStoragePair	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImGuiStoragePair> ImVector_ImGuiStoragePair;$/;"	t
ImVector_ImGuiStoragePair	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	s
ImVector_ImGuiStoragePair	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	t	typeref:struct:ImVector_ImGuiStoragePair
ImVector_ImGuiTextRange	lib/cimgui/cimgui.h	/^typedef ImVector<ImGuiTextRange> ImVector_ImGuiTextRange;$/;"	t
ImVector_ImGuiTextRange	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	s
ImVector_ImGuiTextRange	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	t	typeref:struct:ImVector_ImGuiTextRange
ImVector_ImGuiTextRange	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImGuiTextRange> ImVector_ImGuiTextRange;$/;"	t
ImVector_ImGuiTextRange	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	s
ImVector_ImGuiTextRange	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	t	typeref:struct:ImVector_ImGuiTextRange
ImVector_ImTextureID	lib/cimgui/cimgui.h	/^typedef ImVector<ImTextureID> ImVector_ImTextureID;$/;"	t
ImVector_ImTextureID	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	s
ImVector_ImTextureID	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	t	typeref:struct:ImVector_ImTextureID
ImVector_ImTextureID	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImTextureID> ImVector_ImTextureID;$/;"	t
ImVector_ImTextureID	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	s
ImVector_ImTextureID	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	t	typeref:struct:ImVector_ImTextureID
ImVector_ImU32	lib/cimgui/cimgui.h	/^typedef ImVector<ImU32> ImVector_ImU32;$/;"	t
ImVector_ImU32	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	s
ImVector_ImU32	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	t	typeref:struct:ImVector_ImU32
ImVector_ImU32	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImU32> ImVector_ImU32;$/;"	t
ImVector_ImU32	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	s
ImVector_ImU32	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	t	typeref:struct:ImVector_ImU32
ImVector_ImVec2	lib/cimgui/cimgui.h	/^typedef ImVector<ImVec2> ImVector_ImVec2;$/;"	t
ImVector_ImVec2	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	s
ImVector_ImVec2	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	t	typeref:struct:ImVector_ImVec2
ImVector_ImVec2	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImVec2> ImVector_ImVec2;$/;"	t
ImVector_ImVec2	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	s
ImVector_ImVec2	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	t	typeref:struct:ImVector_ImVec2
ImVector_ImVec4	lib/cimgui/cimgui.h	/^typedef ImVector<ImVec4> ImVector_ImVec4;$/;"	t
ImVector_ImVec4	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	s
ImVector_ImVec4	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	t	typeref:struct:ImVector_ImVec4
ImVector_ImVec4	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImVec4> ImVector_ImVec4;$/;"	t
ImVector_ImVec4	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	s
ImVector_ImVec4	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	t	typeref:struct:ImVector_ImVec4
ImVector_ImWchar	lib/cimgui/cimgui.h	/^typedef ImVector<ImWchar> ImVector_ImWchar;$/;"	t
ImVector_ImWchar	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	s
ImVector_ImWchar	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	t	typeref:struct:ImVector_ImWchar
ImVector_ImWchar	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<ImWchar> ImVector_ImWchar;$/;"	t
ImVector_ImWchar	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	s
ImVector_ImWchar	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	t	typeref:struct:ImVector_ImWchar
ImVector_ImWchar_Init	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImVector_ImWchar_Init(ImVector_ImWchar* p)$/;"	f
ImVector_ImWchar_Init	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void ImVector_ImWchar_Init(ImVector_ImWchar* p)$/;"	f
ImVector_ImWchar_Init	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImVector_ImWchar_Init(ImVector_ImWchar* p)$/;"	f
ImVector_ImWchar_UnInit	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImVector_ImWchar_UnInit(ImVector_ImWchar* p)$/;"	f
ImVector_ImWchar_UnInit	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void ImVector_ImWchar_UnInit(ImVector_ImWchar* p)$/;"	f
ImVector_ImWchar_UnInit	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImVector_ImWchar_UnInit(ImVector_ImWchar* p)$/;"	f
ImVector_ImWchar_create	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVector_ImWchar* ImVector_ImWchar_create()$/;"	f
ImVector_ImWchar_create	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API ImVector_ImWchar* ImVector_ImWchar_create()$/;"	f
ImVector_ImWchar_create	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVector_ImWchar* ImVector_ImWchar_create()$/;"	f
ImVector_ImWchar_destroy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void ImVector_ImWchar_destroy(ImVector_ImWchar* self)$/;"	f
ImVector_ImWchar_destroy	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void ImVector_ImWchar_destroy(ImVector_ImWchar* self)$/;"	f
ImVector_ImWchar_destroy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void ImVector_ImWchar_destroy(ImVector_ImWchar* self)$/;"	f
ImVector_char	lib/cimgui/cimgui.h	/^typedef ImVector<char> ImVector_char;$/;"	t
ImVector_char	lib/cimgui/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	s
ImVector_char	lib/cimgui/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	t	typeref:struct:ImVector_char
ImVector_char	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<char> ImVector_char;$/;"	t
ImVector_char	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	s
ImVector_char	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	t	typeref:struct:ImVector_char
ImVector_float	lib/cimgui/cimgui.h	/^typedef ImVector<float> ImVector_float;$/;"	t
ImVector_float	lib/cimgui/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	s
ImVector_float	lib/cimgui/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	t	typeref:struct:ImVector_float
ImVector_float	lib/cimgui/generator/output/cimgui.h	/^typedef ImVector<float> ImVector_float;$/;"	t
ImVector_float	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	s
ImVector_float	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	t	typeref:struct:ImVector_float
ImWchar	lib/cimgui/cimgui.h	/^typedef unsigned short ImWchar;$/;"	t
ImWchar	lib/cimgui/generator/output/cimgui.h	/^typedef unsigned short ImWchar;$/;"	t
ImWchar	lib/cimgui/imgui/imgui.h	/^typedef unsigned short ImWchar;     \/\/ A single U16 character for keyboard input\/display. We encode them as multi bytes UTF-8 when used in strings.$/;"	t
Image	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Image(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, const ImVec2& uv1, const ImVec4& tint_col, const ImVec4& border_col)$/;"	f	class:ImGui
ImageAcquiredSemaphore	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkSemaphore         ImageAcquiredSemaphore;$/;"	m	struct:ImGui_ImplVulkanH_FrameSemaphores
ImageButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ImageButton(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, const ImVec2& uv1, int frame_padding, const ImVec4& bg_col, const ImVec4& tint_col)$/;"	f	class:ImGui
ImageCount	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    uint32_t            ImageCount;             \/\/ >= MinImageCount$/;"	m	struct:ImGui_ImplVulkan_InitInfo
ImageCount	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    uint32_t            ImageCount;             \/\/ Number of simultaneous in-flight frames (returned by vkGetSwapchainImagesKHR, usually derived from min_image_count)$/;"	m	struct:ImGui_ImplVulkanH_Window
ImeSetInputScreenPosFn	lib/cimgui/cimgui.h	/^    void (*ImeSetInputScreenPosFn)(int x, int y);$/;"	m	struct:ImGuiIO
ImeSetInputScreenPosFn	lib/cimgui/generator/output/cimgui.h	/^    void (*ImeSetInputScreenPosFn)(int x, int y);$/;"	m	struct:ImGuiIO
ImeSetInputScreenPosFn	lib/cimgui/imgui/imgui.h	/^    void        (*ImeSetInputScreenPosFn)(int x, int y);$/;"	m	struct:ImGuiIO
ImeSetInputScreenPosFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static void ImeSetInputScreenPosFn_DefaultImpl(int x, int y)$/;"	f	file:
ImeSetInputScreenPosFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static void ImeSetInputScreenPosFn_DefaultImpl(int, int) {}$/;"	f	file:
ImeWindowHandle	lib/cimgui/cimgui.h	/^    void* ImeWindowHandle;$/;"	m	struct:ImGuiIO
ImeWindowHandle	lib/cimgui/generator/output/cimgui.h	/^    void* ImeWindowHandle;$/;"	m	struct:ImGuiIO
ImeWindowHandle	lib/cimgui/imgui/imgui.h	/^    void*       ImeWindowHandle;                \/\/ = NULL           \/\/ (Windows) Set this to your HWND to get automatic IME cursor positioning.$/;"	m	struct:ImGuiIO
Indent	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Indent(float indent_w)$/;"	f	class:ImGui
Indent	lib/cimgui/imgui/imgui_internal.h	/^    ImVec1                  Indent;                 \/\/ Indentation \/ start position from left of window (increased by TreePush\/TreePop, etc.)$/;"	m	struct:ImGuiWindowTempData
IndentSpacing	lib/cimgui/cimgui.h	/^    float IndentSpacing;$/;"	m	struct:ImGuiStyle
IndentSpacing	lib/cimgui/generator/output/cimgui.h	/^    float IndentSpacing;$/;"	m	struct:ImGuiStyle
IndentSpacing	lib/cimgui/imgui/imgui.h	/^    float       IndentSpacing;              \/\/ Horizontal indentation when e.g. entering a tree node. Generally == (FontSize + FramePadding.x*2).$/;"	m	struct:ImGuiStyle
Index	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    uint32_t            Index;$/;"	m	struct:ImGui_ImplVulkanH_WindowRenderBuffers	file:
Index	lib/cimgui/imgui/imgui_internal.h	/^    int             Index;              \/\/ Usually index in a main pool.$/;"	m	struct:ImGuiPtrOrIndex
Index	lib/cimgui/imgui/imgui_internal.h	/^    int             Index;$/;"	m	struct:ImGuiShrinkWidthItem
IndexAdvanceX	lib/cimgui/cimgui.h	/^    ImVector_float IndexAdvanceX;$/;"	m	struct:ImFont
IndexAdvanceX	lib/cimgui/generator/output/cimgui.h	/^    ImVector_float IndexAdvanceX;$/;"	m	struct:ImFont
IndexAdvanceX	lib/cimgui/imgui/imgui.h	/^    ImVector<float>             IndexAdvanceX;      \/\/ 12-16 \/\/ out \/\/            \/\/ Sparse. Glyphs->AdvanceX in a directly indexable way (cache-friendly for CalcTextSize functions which only this this info, and are often bottleneck in large UI).$/;"	m	struct:ImFont
IndexBuffer	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^    ID3D12Resource*     IndexBuffer;$/;"	m	struct:FrameResources	file:
IndexBuffer	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    VkBuffer            IndexBuffer;$/;"	m	struct:ImGui_ImplVulkanH_FrameRenderBuffers	file:
IndexBufferMemory	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    VkDeviceMemory      IndexBufferMemory;$/;"	m	struct:ImGui_ImplVulkanH_FrameRenderBuffers	file:
IndexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^    int                 IndexBufferSize;$/;"	m	struct:FrameResources	file:
IndexBufferSize	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    VkDeviceSize        IndexBufferSize;$/;"	m	struct:ImGui_ImplVulkanH_FrameRenderBuffers	file:
IndexLookup	lib/cimgui/cimgui.h	/^    ImVector_ImWchar IndexLookup;$/;"	m	struct:ImFont
IndexLookup	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImWchar IndexLookup;$/;"	m	struct:ImFont
IndexLookup	lib/cimgui/imgui/imgui.h	/^    ImVector<ImWchar>           IndexLookup;        \/\/ 12-16 \/\/ out \/\/            \/\/ Sparse. Index glyphs by Unicode code-point.$/;"	m	struct:ImFont
Info	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FontInfo        Info;               \/\/ Font descriptor of the current font.$/;"	m	struct:__anon112::FreeTypeFont	file:
Info	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    GlyphInfo           Info;$/;"	m	struct:ImFontBuildSrcGlyphFT	file:
IniFilename	lib/cimgui/cimgui.h	/^    const char* IniFilename;$/;"	m	struct:ImGuiIO
IniFilename	lib/cimgui/generator/output/cimgui.h	/^    const char* IniFilename;$/;"	m	struct:ImGuiIO
IniFilename	lib/cimgui/imgui/imgui.h	/^    const char* IniFilename;                    \/\/ = "imgui.ini"    \/\/ Path to .ini file. Set NULL to disable automatic .ini loading\/saving, if e.g. you want to manually load\/save from memory.$/;"	m	struct:ImGuiIO
IniSavingRate	lib/cimgui/cimgui.h	/^    float IniSavingRate;$/;"	m	struct:ImGuiIO
IniSavingRate	lib/cimgui/generator/output/cimgui.h	/^    float IniSavingRate;$/;"	m	struct:ImGuiIO
IniSavingRate	lib/cimgui/imgui/imgui.h	/^    float       IniSavingRate;                  \/\/ = 5.0f           \/\/ Minimum time between saving positions\/sizes to .ini file, in seconds.$/;"	m	struct:ImGuiIO
InitFont	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    bool FreeTypeFont::InitFont(FT_Library ft_library, const ImFontConfig& cfg, unsigned int extra_user_flags)$/;"	f	class:__anon112::FreeTypeFont
InitialFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawListFlags InitialFlags;               \/\/ Initial flags at the beginning of the frame (it is possible to alter flags on a per-drawlist basis afterwards)$/;"	m	struct:ImDrawListSharedData
InitialTextA	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<char>          InitialTextA;           \/\/ backup of end-user buffer at the time of focus (in UTF-8, unaltered)$/;"	m	struct:ImGuiInputTextState
Initialize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Initialize(ImGuiContext* context)$/;"	f	class:ImGui
Initialized	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Initialized;$/;"	m	struct:ImGuiContext
InnerClipRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  InnerClipRect;                      \/\/ == InnerRect shrunk by WindowPadding*0.5f on each side, clipped within viewport or parent clip rect.$/;"	m	struct:ImGuiWindow
InnerDir	lib/cimgui/imgui/imgui.cpp	/^    ImVec2  InnerDir;$/;"	m	struct:ImGuiResizeGripDef	file:
InnerRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  InnerRect;                          \/\/ Inner rectangle (omit title bar, menu bar, scroll bar)$/;"	m	struct:ImGuiWindow
InputBuf	lib/cimgui/cimgui.h	/^    char InputBuf[256];$/;"	m	struct:ImGuiTextFilter
InputBuf	lib/cimgui/generator/output/cimgui.h	/^    char InputBuf[256];$/;"	m	struct:ImGuiTextFilter
InputBuf	lib/cimgui/imgui/imgui.h	/^    char                    InputBuf[256];$/;"	m	struct:ImGuiTextFilter
InputBuf	lib/cimgui/imgui/imgui_demo.cpp	/^    char                  InputBuf[256];$/;"	m	struct:ExampleAppConsole	file:
InputDouble	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputDouble(const char* label, double* v, double step, double step_fast, const char* format, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat(const char* label, float* v, float step, float step_fast, const char* format, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat(const char* label, float* v, float step, float step_fast, int decimal_precision, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat2(const char* label, float v[2], const char* format, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat2(const char* label, float v[2], int decimal_precision, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat3(const char* label, float v[3], const char* format, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat3(const char* label, float v[3], int decimal_precision, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat4(const char* label, float v[4], const char* format, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputFloat4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputFloat4(const char* label, float v[4], int decimal_precision, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputInt	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputInt(const char* label, int* v, int step, int step_fast, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputInt2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputInt2(const char* label, int v[2], ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputInt3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputInt3(const char* label, int v[3], ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputInt4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputInt4(const char* label, int v[4], ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputQueueCharacters	lib/cimgui/cimgui.h	/^    ImVector_ImWchar InputQueueCharacters;$/;"	m	struct:ImGuiIO
InputQueueCharacters	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImWchar InputQueueCharacters;$/;"	m	struct:ImGuiIO
InputQueueCharacters	lib/cimgui/imgui/imgui.h	/^    ImVector<ImWchar> InputQueueCharacters;     \/\/ Queue of _characters_ input (obtained by platform back-end). Fill using AddInputCharacter() helper.$/;"	m	struct:ImGuiIO
InputScalar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputScalar(const char* label, ImGuiDataType data_type, void* p_data, const void* p_step, const void* p_step_fast, const char* format, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputScalarN	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputScalarN(const char* label, ImGuiDataType data_type, void* p_data, int components, const void* p_step, const void* p_step_fast, const char* format, ImGuiInputTextFlags flags)$/;"	f	class:ImGui
InputText	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputText(const char* label, char* buf, size_t buf_size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data)$/;"	f	class:ImGui
InputText	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^bool ImGui::InputText(const char* label, std::string* str, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data)$/;"	f	class:ImGui
InputTextCalcTextLenAndLineCount	lib/cimgui/imgui/imgui_widgets.cpp	/^static int InputTextCalcTextLenAndLineCount(const char* text_begin, const char** out_text_end)$/;"	f	file:
InputTextCalcTextSizeW	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImVec2 InputTextCalcTextSizeW(const ImWchar* text_begin, const ImWchar* text_end, const ImWchar** remaining, ImVec2* out_offset, bool stop_on_new_line)$/;"	f	file:
InputTextCallback	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^static int InputTextCallback(ImGuiInputTextCallbackData* data)$/;"	f	file:
InputTextCallback_UserData	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^struct InputTextCallback_UserData$/;"	s	file:
InputTextEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputTextEx(const char* label, const char* hint, char* buf, int buf_size, const ImVec2& size_arg, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* callback_user_data)$/;"	f	class:ImGui
InputTextFilterCharacter	lib/cimgui/imgui/imgui_widgets.cpp	/^static bool InputTextFilterCharacter(unsigned int* p_char, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data)$/;"	f	file:
InputTextMultiline	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputTextMultiline(const char* label, char* buf, size_t buf_size, const ImVec2& size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data)$/;"	f	class:ImGui
InputTextMultiline	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^bool ImGui::InputTextMultiline(const char* label, std::string* str, const ImVec2& size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data)$/;"	f	class:ImGui
InputTextPasswordFont	lib/cimgui/imgui/imgui_internal.h	/^    ImFont                  InputTextPasswordFont;$/;"	m	struct:ImGuiContext
InputTextState	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputTextState     InputTextState;$/;"	m	struct:ImGuiContext
InputTextWithHint	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InputTextWithHint(const char* label, const char* hint, char* buf, size_t buf_size, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data)$/;"	f	class:ImGui
InputTextWithHint	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^bool ImGui::InputTextWithHint(const char* label, const char* hint, std::string* str, ImGuiInputTextFlags flags, ImGuiInputTextCallback callback, void* user_data)$/;"	f	class:ImGui
InsertChars	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGuiInputTextCallbackData::InsertChars(int pos, const char* new_text, const char* new_text_end)$/;"	f	class:ImGuiInputTextCallbackData
Instance	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkInstance          Instance;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
InvisibleButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::InvisibleButton(const char* str_id, const ImVec2& size_arg)$/;"	f	class:ImGui
IsActive	lib/cimgui/imgui/imgui.h	/^    bool                IsActive() const { return !Filters.empty(); }$/;"	f	struct:ImGuiTextFilter
IsActiveIdUsingKey	lib/cimgui/imgui/imgui_internal.h	/^    inline bool             IsActiveIdUsingKey(ImGuiKey key)                            { ImGuiContext& g = *GImGui; IM_ASSERT(key < 64); return (g.ActiveIdUsingKeyInputMask & ((ImU64)1 << key)) != 0; }$/;"	f	namespace:ImGui
IsActiveIdUsingNavDir	lib/cimgui/imgui/imgui_internal.h	/^    inline bool             IsActiveIdUsingNavDir(ImGuiDir dir)                         { ImGuiContext& g = *GImGui; return (g.ActiveIdUsingNavDirMask & (1 << dir)) != 0; }$/;"	f	namespace:ImGui
IsActiveIdUsingNavInput	lib/cimgui/imgui/imgui_internal.h	/^    inline bool             IsActiveIdUsingNavInput(ImGuiNavInput input)                { ImGuiContext& g = *GImGui; return (g.ActiveIdUsingNavInputMask & (1 << input)) != 0; }$/;"	f	namespace:ImGui
IsAnyItemActive	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyItemActive()$/;"	f	class:ImGui
IsAnyItemFocused	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyItemFocused()$/;"	f	class:ImGui
IsAnyItemHovered	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyItemHovered()$/;"	f	class:ImGui
IsAnyMouseDown	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyMouseDown()$/;"	f	class:ImGui
IsAnyWindowFocused	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsAnyWindowFocused()                  { return IsWindowFocused(ImGuiFocusedFlags_AnyWindow); }$/;"	f	namespace:ImGui
IsAnyWindowHovered	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsAnyWindowHovered()                  { return IsWindowHovered(ImGuiHoveredFlags_AnyWindow); }$/;"	f	namespace:ImGui
IsBeingResized	lib/cimgui/imgui/imgui_internal.h	/^    bool                IsBeingResized;$/;"	m	struct:ImGuiColumns
IsBuilt	lib/cimgui/imgui/imgui.h	/^    bool                        IsBuilt() const             { return Fonts.Size > 0 && (TexPixelsAlpha8 != NULL || TexPixelsRGBA32 != NULL); }$/;"	f	struct:ImFontAtlas
IsClippedEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsClippedEx(const ImRect& bb, ImGuiID id, bool clip_even_when_logged)$/;"	f	class:ImGui
IsDataType	lib/cimgui/imgui/imgui.h	/^    bool IsDataType(const char* type) const { return DataFrameCount != -1 && strcmp(type, DataType) == 0; }$/;"	f	struct:ImGuiPayload
IsDelivery	lib/cimgui/imgui/imgui.h	/^    bool IsDelivery() const                 { return Delivery; }$/;"	f	struct:ImGuiPayload
IsDragDropPayloadBeingAccepted	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsDragDropPayloadBeingAccepted()$/;"	f	class:ImGui
IsFallbackWindow	lib/cimgui/imgui/imgui_internal.h	/^    bool                    IsFallbackWindow;                   \/\/ Set on the "Debug##Default" window.$/;"	m	struct:ImGuiWindow
IsFirstFrame	lib/cimgui/imgui/imgui_internal.h	/^    bool                IsFirstFrame;$/;"	m	struct:ImGuiColumns
IsInverted	lib/cimgui/imgui/imgui_internal.h	/^    bool        IsInverted() const                  { return Min.x > Max.x || Min.y > Max.y; }$/;"	f	struct:ImRect
IsItemActivated	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemActivated()$/;"	f	class:ImGui
IsItemActive	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemActive()$/;"	f	class:ImGui
IsItemClicked	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemClicked(ImGuiMouseButton mouse_button)$/;"	f	class:ImGui
IsItemDeactivated	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemDeactivated()$/;"	f	class:ImGui
IsItemDeactivatedAfterChange	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsItemDeactivatedAfterChange()        { return IsItemDeactivatedAfterEdit(); }$/;"	f	namespace:ImGui
IsItemDeactivatedAfterEdit	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemDeactivatedAfterEdit()$/;"	f	class:ImGui
IsItemEdited	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemEdited()$/;"	f	class:ImGui
IsItemFocused	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemFocused()$/;"	f	class:ImGui
IsItemHovered	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemHovered(ImGuiHoveredFlags flags)$/;"	f	class:ImGui
IsItemToggledOpen	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemToggledOpen()$/;"	f	class:ImGui
IsItemToggledSelection	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemToggledSelection()$/;"	f	class:ImGui
IsItemVisible	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemVisible()$/;"	f	class:ImGui
IsKeyDown	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsKeyDown(int user_key_index)$/;"	f	class:ImGui
IsKeyPressed	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsKeyPressed(int user_key_index, bool repeat)$/;"	f	class:ImGui
IsKeyPressedMap	lib/cimgui/imgui/imgui_internal.h	/^    inline bool             IsKeyPressedMap(ImGuiKey key, bool repeat = true)           { ImGuiContext& g = *GImGui; const int key_index = g.IO.KeyMap[key]; return (key_index >= 0) ? IsKeyPressed(key_index, repeat) : false; }$/;"	f	namespace:ImGui
IsKeyReleased	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsKeyReleased(int user_key_index)$/;"	f	class:ImGui
IsLoaded	lib/cimgui/imgui/imgui.h	/^    bool                        IsLoaded() const                    { return ContainerAtlas != NULL; }$/;"	f	struct:ImFont
IsMouseClicked	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseClicked(ImGuiMouseButton button, bool repeat)$/;"	f	class:ImGui
IsMouseDoubleClicked	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseDoubleClicked(ImGuiMouseButton button)$/;"	f	class:ImGui
IsMouseDown	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseDown(ImGuiMouseButton button)$/;"	f	class:ImGui
IsMouseDragPastThreshold	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseDragPastThreshold(ImGuiMouseButton button, float lock_threshold)$/;"	f	class:ImGui
IsMouseDragging	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseDragging(ImGuiMouseButton button, float lock_threshold)$/;"	f	class:ImGui
IsMouseHoveringRect	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseHoveringRect(const ImVec2& r_min, const ImVec2& r_max, bool clip)$/;"	f	class:ImGui
IsMousePosValid	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMousePosValid(const ImVec2* mouse_pos)$/;"	f	class:ImGui
IsMouseReleased	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseReleased(ImGuiMouseButton button)$/;"	f	class:ImGui
IsNavInputDown	lib/cimgui/imgui/imgui_internal.h	/^    inline bool             IsNavInputDown(ImGuiNavInput n)                             { ImGuiContext& g = *GImGui; return g.IO.NavInputs[n] > 0.0f; }$/;"	f	namespace:ImGui
IsNavInputTest	lib/cimgui/imgui/imgui_internal.h	/^    inline bool             IsNavInputTest(ImGuiNavInput n, ImGuiInputReadMode rm)      { return (GetNavInputAmount(n, rm) > 0.0f); }$/;"	f	namespace:ImGui
IsPacked	lib/cimgui/imgui/imgui.h	/^    bool IsPacked() const           { return X != 0xFFFF; }$/;"	f	struct:ImFontAtlasCustomRect
IsPopupOpen	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsPopupOpen(ImGuiID id)$/;"	f	class:ImGui
IsPopupOpen	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsPopupOpen(const char* str_id)$/;"	f	class:ImGui
IsPreview	lib/cimgui/imgui/imgui.h	/^    bool IsPreview() const                  { return Preview; }$/;"	f	struct:ImGuiPayload
IsRectVisible	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsRectVisible(const ImVec2& rect_min, const ImVec2& rect_max)$/;"	f	class:ImGui
IsRectVisible	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsRectVisible(const ImVec2& size)$/;"	f	class:ImGui
IsWindowActiveAndVisible	lib/cimgui/imgui/imgui.cpp	/^static bool IsWindowActiveAndVisible(ImGuiWindow* window)$/;"	f	file:
IsWindowAppearing	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowAppearing()$/;"	f	class:ImGui
IsWindowChildOf	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potential_parent)$/;"	f	class:ImGui
IsWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowCollapsed()$/;"	f	class:ImGui
IsWindowContentHoverable	lib/cimgui/imgui/imgui.cpp	/^static inline bool IsWindowContentHoverable(ImGuiWindow* window, ImGuiHoveredFlags flags)$/;"	f	file:
IsWindowFocused	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowFocused(ImGuiFocusedFlags flags)$/;"	f	class:ImGui
IsWindowHovered	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowHovered(ImGuiHoveredFlags flags)$/;"	f	class:ImGui
IsWindowNavFocusable	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowNavFocusable(ImGuiWindow* window)$/;"	f	class:ImGui
IsWindows8Point1OrGreater	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	367;"	d	file:
IsWindowsVersionOrGreater	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static BOOL IsWindowsVersionOrGreater(WORD major, WORD minor, WORD sp)$/;"	f	file:
ItemAdd	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ItemAdd(const ImRect& bb, ImGuiID id, const ImRect* nav_bb_arg)$/;"	f	class:ImGui
ItemFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags          ItemFlags;              \/\/ == ItemFlagsStack.back() [empty == ImGuiItemFlags_Default]$/;"	m	struct:ImGuiWindowTempData
ItemFlagsStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiItemFlags>ItemFlagsStack;$/;"	m	struct:ImGuiWindowTempData
ItemHoverable	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ItemHoverable(const ImRect& bb, ImGuiID id)$/;"	f	class:ImGui
ItemInnerSpacing	lib/cimgui/cimgui.h	/^    ImVec2 ItemInnerSpacing;$/;"	m	struct:ImGuiStyle
ItemInnerSpacing	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 ItemInnerSpacing;$/;"	m	struct:ImGuiStyle
ItemInnerSpacing	lib/cimgui/imgui/imgui.h	/^    ImVec2      ItemInnerSpacing;           \/\/ Horizontal and vertical spacing between within elements of a composed widget (e.g. a slider and its label).$/;"	m	struct:ImGuiStyle
ItemSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ItemSize(const ImRect& bb, float text_baseline_y)$/;"	f	class:ImGui
ItemSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ItemSize(const ImVec2& size, float text_baseline_y)$/;"	f	class:ImGui
ItemSpacing	lib/cimgui/cimgui.h	/^    ImVec2 ItemSpacing;$/;"	m	struct:ImGuiStyle
ItemSpacing	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 ItemSpacing;$/;"	m	struct:ImGuiStyle
ItemSpacing	lib/cimgui/imgui/imgui.h	/^    ImVec2      ItemSpacing;                \/\/ Horizontal and vertical spacing between widgets\/lines.$/;"	m	struct:ImGuiStyle
ItemWidth	lib/cimgui/imgui/imgui_internal.h	/^    float                   ItemWidth;              \/\/ == ItemWidthStack.back(). 0.0: default, >0.0: width in pixels, <0.0: align xx pixels to the right of window$/;"	m	struct:ImGuiWindowTempData
ItemWidthDefault	lib/cimgui/imgui/imgui_internal.h	/^    float                   ItemWidthDefault;$/;"	m	struct:ImGuiWindow
ItemWidthStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<float>         ItemWidthStack;$/;"	m	struct:ImGuiWindowTempData
Items	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<char*>       Items;$/;"	m	struct:ExampleAppConsole	file:
ItemsCount	lib/cimgui/cimgui.h	/^    int ItemsCount;$/;"	m	struct:ImGuiListClipper
ItemsCount	lib/cimgui/generator/output/cimgui.h	/^    int ItemsCount;$/;"	m	struct:ImGuiListClipper
ItemsCount	lib/cimgui/imgui/imgui.h	/^    int     ItemsCount;$/;"	m	struct:ImGuiListClipper
ItemsHeight	lib/cimgui/cimgui.h	/^    float ItemsHeight;$/;"	m	struct:ImGuiListClipper
ItemsHeight	lib/cimgui/generator/output/cimgui.h	/^    float ItemsHeight;$/;"	m	struct:ImGuiListClipper
ItemsHeight	lib/cimgui/imgui/imgui.h	/^    float   ItemsHeight;$/;"	m	struct:ImGuiListClipper
Items_ArrayGetter	lib/cimgui/imgui/imgui_widgets.cpp	/^static bool Items_ArrayGetter(void* data, int idx, const char** out_text)$/;"	f	file:
Items_SingleStringGetter	lib/cimgui/imgui/imgui_widgets.cpp	/^static bool Items_SingleStringGetter(void* data, int idx, const char** out_text)$/;"	f	file:
KAVL_H	lib/klib/kavl.h	63;"	d
KAVL_HEAD	lib/klib/kavl.h	74;"	d
KAVL_HPP	lib/klib/cpp/kavl.hpp	2;"	d
KAVL_INIT	lib/klib/kavl.h	397;"	d
KAVL_INIT2	lib/klib/kavl.h	390;"	d
KAVL_MAX_DEPTH	lib/klib/kavl.h	69;"	d
KBIT_H	lib/klib/kbit.h	2;"	d
KBTREE_INIT	lib/klib/kbtree.h	364;"	d
KB_DEFAULT_SIZE	lib/klib/kbtree.h	374;"	d
KB_MAX_DEPTH	lib/klib/kbtree.h	35;"	d
KDQ_DECLARE	lib/klib/kdq.h	106;"	d
KDQ_INIT	lib/klib/kdq.h	104;"	d
KDQ_INIT2	lib/klib/kdq.h	92;"	d
KEE_ARG	lib/klib/kexpr.h	15;"	d
KEE_FUNC	lib/klib/kexpr.h	14;"	d
KEE_NUM	lib/klib/kexpr.h	16;"	d
KEE_UNFUNC	lib/klib/kexpr.h	19;"	d
KEE_UNLP	lib/klib/kexpr.h	11;"	d
KEE_UNOP	lib/klib/kexpr.h	13;"	d
KEE_UNQU	lib/klib/kexpr.h	10;"	d
KEE_UNRP	lib/klib/kexpr.h	12;"	d
KEE_UNVAR	lib/klib/kexpr.h	20;"	d
KEF_NULL	lib/klib/kexpr.c	45;"	d	file:
KEF_REAL	lib/klib/kexpr.c	46;"	d	file:
KEIGEN_H	lib/klib/keigen.h	2;"	d
KEO_ADD	lib/klib/kexpr.c	24;"	d	file:
KEO_BAND	lib/klib/kexpr.c	34;"	d	file:
KEO_BNOT	lib/klib/kexpr.c	17;"	d	file:
KEO_BOR	lib/klib/kexpr.c	36;"	d	file:
KEO_BXOR	lib/klib/kexpr.c	35;"	d	file:
KEO_DIV	lib/klib/kexpr.c	21;"	d	file:
KEO_EQ	lib/klib/kexpr.c	32;"	d	file:
KEO_GE	lib/klib/kexpr.c	31;"	d	file:
KEO_GT	lib/klib/kexpr.c	30;"	d	file:
KEO_IDIV	lib/klib/kexpr.c	22;"	d	file:
KEO_LAND	lib/klib/kexpr.c	37;"	d	file:
KEO_LE	lib/klib/kexpr.c	29;"	d	file:
KEO_LNOT	lib/klib/kexpr.c	18;"	d	file:
KEO_LOR	lib/klib/kexpr.c	38;"	d	file:
KEO_LSH	lib/klib/kexpr.c	26;"	d	file:
KEO_LT	lib/klib/kexpr.c	28;"	d	file:
KEO_MOD	lib/klib/kexpr.c	23;"	d	file:
KEO_MUL	lib/klib/kexpr.c	20;"	d	file:
KEO_NE	lib/klib/kexpr.c	33;"	d	file:
KEO_NEG	lib/klib/kexpr.c	16;"	d	file:
KEO_NULL	lib/klib/kexpr.c	14;"	d	file:
KEO_POS	lib/klib/kexpr.c	15;"	d	file:
KEO_POW	lib/klib/kexpr.c	19;"	d	file:
KEO_RSH	lib/klib/kexpr.c	27;"	d	file:
KEO_SUB	lib/klib/kexpr.c	25;"	d	file:
KETOPT_H	lib/klib/ketopt.h	2;"	d
KETOPT_INIT	lib/klib/ketopt.h	/^static ketopt_t KETOPT_INIT = { 1, 0, 0, -1, 1, 0, 0 };$/;"	v
KET_FUNC	lib/klib/kexpr.c	43;"	d	file:
KET_NULL	lib/klib/kexpr.c	40;"	d	file:
KET_OP	lib/klib/kexpr.c	42;"	d	file:
KET_VAL	lib/klib/kexpr.c	41;"	d	file:
KEV_INT	lib/klib/kexpr.h	24;"	d
KEV_REAL	lib/klib/kexpr.h	23;"	d
KEV_STR	lib/klib/kexpr.h	25;"	d
KEXPR_H	lib/klib/kexpr.h	2;"	d
KE_EXCESS_ITER	lib/klib/keigen.h	4;"	d
KE_GEN_BIN_BOTH	lib/klib/kexpr.c	134;"	d	file:
KE_GEN_BIN_INT	lib/klib/kexpr.c	120;"	d	file:
KE_GEN_CMP	lib/klib/kexpr.c	105;"	d	file:
KF_GAMMA_EPS	lib/klib/kmath.c	328;"	d	file:
KF_TINY	lib/klib/kmath.c	329;"	d	file:
KGRAPH_INIT	lib/klib/kgraph.h	75;"	d
KGRAPH_PRINT	lib/klib/kgraph.h	62;"	d
KHASHL_CMAP_INIT	lib/klib/khashl.h	292;"	d
KHASHL_CSET_INIT	lib/klib/khashl.h	282;"	d
KHASHL_DECLARE	lib/klib/khashl.h	241;"	d
KHASHL_INIT	lib/klib/khashl.h	245;"	d
KHASHL_MAP_INIT	lib/klib/khashl.h	271;"	d
KHASHL_SET_INIT	lib/klib/khashl.h	260;"	d
KHASH_DECLARE	lib/klib/khash.h	357;"	d
KHASH_HPP	lib/klib/cpp/khash.hpp	2;"	d
KHASH_INIT	lib/klib/khash.h	365;"	d
KHASH_INIT2	lib/klib/khash.h	361;"	d
KHASH_MAP_INIT_INT	lib/klib/khash.h	593;"	d
KHASH_MAP_INIT_INT64	lib/klib/khash.h	608;"	d
KHASH_MAP_INIT_STR	lib/klib/khash.h	624;"	d
KHASH_SET_INIT_INT	lib/klib/khash.h	585;"	d
KHASH_SET_INIT_INT64	lib/klib/khash.h	600;"	d
KHASH_SET_INIT_STR	lib/klib/khash.h	616;"	d
KH_LOCAL	lib/klib/khashl.h	67;"	d
KHash	lib/klib/cpp/khash.hpp	/^	KHash() : n_buckets(0), count(0), n_occupied(0), upper_bound(0), flags(NULL), keys(NULL) {};$/;"	f	class:klib::KHash
KHash	lib/klib/cpp/khash.hpp	/^class KHash {$/;"	c	namespace:klib
KHashCachedEq	lib/klib/cpp/khashl.hpp	/^struct KHashCachedEq { bool operator() (const T &a, const T &b) const { return a.hash == b.hash && Eq()(a.key, b.key); } };$/;"	s	namespace:klib
KHashCachedHash	lib/klib/cpp/khashl.hpp	/^struct KHashCachedHash { khint_t operator() (const T &a) const { return a.hash; } };$/;"	s	namespace:klib
KHashMap	lib/klib/cpp/khashl.hpp	/^class KHashMap : public KHashSet<KHashMapBucket<KType, VType>,$/;"	c	namespace:klib
KHashMapBucket	lib/klib/cpp/khashl.hpp	/^struct KHashMapBucket { KType key; VType val; };$/;"	s	namespace:klib
KHashMapCached	lib/klib/cpp/khashl.hpp	/^class KHashMapCached : public KHashSet<KHashMapCachedBucket<KType, VType, khint_t>,$/;"	c	namespace:klib
KHashMapCachedBucket	lib/klib/cpp/khashl.hpp	/^struct KHashMapCachedBucket { KType key; VType val; khint_t hash; };$/;"	s	namespace:klib
KHashMapEq	lib/klib/cpp/khashl.hpp	/^struct KHashMapEq { bool operator() (const T &a, const T &b) const { return Eq()(a.key, b.key); } };$/;"	s	namespace:klib
KHashMapHash	lib/klib/cpp/khashl.hpp	/^struct KHashMapHash { khint_t operator() (const T &a) const { return Hash()(a.key); } };$/;"	s	namespace:klib
KHashSet	lib/klib/cpp/khashl.hpp	/^	KHashSet() : bits(0), count(0), used(0), keys(0) {};$/;"	f	class:klib::KHashSet
KHashSet	lib/klib/cpp/khashl.hpp	/^class KHashSet {$/;"	c	namespace:klib
KHashSetCached	lib/klib/cpp/khashl.hpp	/^class KHashSetCached : public KHashSet<KHashSetCachedBucket<KType, khint_t>,$/;"	c	namespace:klib
KHashSetCachedBucket	lib/klib/cpp/khashl.hpp	/^struct KHashSetCachedBucket { KType key; khint_t hash; };$/;"	s	namespace:klib
KLIST_INIT	lib/klib/klist.h	120;"	d
KLIST_INIT2	lib/klib/klist.h	77;"	d
KMEMPOOL_INIT	lib/klib/klist.h	68;"	d
KMEMPOOL_INIT2	lib/klib/klist.h	39;"	d
KMIN_EPS	lib/klib/kmath.h	15;"	d
KMIN_MAXCALL	lib/klib/kmath.h	16;"	d
KMIN_RADIUS	lib/klib/kmath.h	14;"	d
KNERR_BRACKET	lib/klib/knhx.h	6;"	d
KNERR_COLON	lib/klib/knhx.h	7;"	d
KNERR_MISSING_LEFT	lib/klib/knhx.h	4;"	d
KNERR_MISSING_RGHT	lib/klib/knhx.h	5;"	d
KNETFILE_H	lib/klib/knetfile.h	2;"	d
KNETFILE_H	lib/klib/kurl.h	44;"	d
KNF_TYPE_FTP	lib/klib/knetfile.h	21;"	d
KNF_TYPE_HTTP	lib/klib/knetfile.h	22;"	d
KNF_TYPE_LOCAL	lib/klib/knetfile.h	20;"	d
KNHX_H_	lib/klib/knhx.h	2;"	d
KO_FILE	lib/klib/kopen.c	226;"	d	file:
KO_FTP	lib/klib/kopen.c	229;"	d	file:
KO_HTTP	lib/klib/kopen.c	228;"	d	file:
KO_PIPE	lib/klib/kopen.c	227;"	d	file:
KO_STDIN	lib/klib/kopen.c	225;"	d	file:
KRMQ_H	lib/klib/krmq.h	63;"	d
KRMQ_HEAD	lib/klib/krmq.h	74;"	d
KRMQ_INIT	lib/klib/krmq.h	471;"	d
KRMQ_INIT2	lib/klib/krmq.h	463;"	d
KRMQ_MAX_DEPTH	lib/klib/krmq.h	69;"	d
KRNG_H	lib/klib/krng.h	2;"	d
KSEQ_DECLARE	lib/klib/kseq.h	235;"	d
KSEQ_INIT	lib/klib/kseq.h	233;"	d
KSEQ_INIT	lib/klib/test/kseq_test.c	/^KSEQ_INIT(gzFile, gzread)$/;"	f
KSEQ_INIT2	lib/klib/kseq.h	227;"	d
KSON_ERR_EXTRA_LEFT	lib/klib/kson.h	13;"	d
KSON_ERR_EXTRA_RIGHT	lib/klib/kson.h	14;"	d
KSON_ERR_NO_KEY	lib/klib/kson.h	15;"	d
KSON_H	lib/klib/kson.h	2;"	d
KSON_OK	lib/klib/kson.h	12;"	d
KSON_TYPE_BRACE	lib/klib/kson.h	10;"	d
KSON_TYPE_BRACKET	lib/klib/kson.h	9;"	d
KSON_TYPE_DBL_QUOTE	lib/klib/kson.h	8;"	d
KSON_TYPE_NO_QUOTE	lib/klib/kson.h	6;"	d
KSON_TYPE_SGL_QUOTE	lib/klib/kson.h	7;"	d
KSORT_INIT	lib/klib/ksort.h	76;"	d
KSORT_INIT_GENERIC	lib/klib/ksort.h	295;"	d
KSORT_INIT_STR	lib/klib/ksort.h	296;"	d
KSORT_SWAP	lib/klib/ksort.h	74;"	d
KSTREAM_INIT	lib/klib/kseq.h	148;"	d
KSTREAM_INIT	lib/klib/test/kseq_bench.c	/^KSTREAM_INIT(gzFile, gzread, BUF_SIZE)$/;"	f
KSTRING_H	lib/klib/kstring.h	27;"	d
KSTRING_T	lib/klib/bgzf.h	54;"	d
KSTRING_T	lib/klib/knhx.h	17;"	d
KSTRING_T	lib/klib/kseq.h	82;"	d
KSTRING_T	lib/klib/kstring.h	55;"	d
KSW_XBYTE	lib/klib/ksw.h	6;"	d
KSW_XSTART	lib/klib/ksw.h	9;"	d
KSW_XSTOP	lib/klib/ksw.h	7;"	d
KSW_XSUBO	lib/klib/ksw.h	8;"	d
KS_ATTR_PRINTF	lib/klib/kstring.h	40;"	d
KS_ATTR_PRINTF	lib/klib/kstring.h	42;"	d
KS_SEP_LINE	lib/klib/kseq.h	37;"	d
KS_SEP_MAX	lib/klib/kseq.h	38;"	d
KS_SEP_SPACE	lib/klib/kseq.h	35;"	d
KS_SEP_TAB	lib/klib/kseq.h	36;"	d
KTHREAD_H	lib/klib/kthread.h	2;"	d
KURL_H	lib/klib/kurl.h	2;"	d
KURL_INV_WHENCE	lib/klib/kurl.h	7;"	d
KURL_NO_AUTH	lib/klib/kurl.h	9;"	d
KURL_NULL	lib/klib/kurl.h	6;"	d
KURL_SEEK_OUT	lib/klib/kurl.h	8;"	d
KU_DEF_BUFLEN	lib/klib/kurl.c	16;"	d	file:
KU_MAX_SKIP	lib/klib/kurl.c	17;"	d	file:
KeepAliveID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::KeepAliveID(ImGuiID id)$/;"	f	class:ImGui
KeyAlt	lib/cimgui/cimgui.h	/^    bool KeyAlt;$/;"	m	struct:ImGuiIO
KeyAlt	lib/cimgui/generator/output/cimgui.h	/^    bool KeyAlt;$/;"	m	struct:ImGuiIO
KeyAlt	lib/cimgui/imgui/imgui.h	/^    bool        KeyAlt;                         \/\/ Keyboard modifier pressed: Alt$/;"	m	struct:ImGuiIO
KeyCtrl	lib/cimgui/cimgui.h	/^    bool KeyCtrl;$/;"	m	struct:ImGuiIO
KeyCtrl	lib/cimgui/generator/output/cimgui.h	/^    bool KeyCtrl;$/;"	m	struct:ImGuiIO
KeyCtrl	lib/cimgui/imgui/imgui.h	/^    bool        KeyCtrl;                        \/\/ Keyboard modifier pressed: Control$/;"	m	struct:ImGuiIO
KeyMap	lib/cimgui/cimgui.h	/^    int KeyMap[ImGuiKey_COUNT];$/;"	m	struct:ImGuiIO
KeyMap	lib/cimgui/generator/output/cimgui.h	/^    int KeyMap[ImGuiKey_COUNT];$/;"	m	struct:ImGuiIO
KeyMap	lib/cimgui/imgui/imgui.h	/^    int         KeyMap[ImGuiKey_COUNT];         \/\/ <unset>          \/\/ Map of indices into the KeysDown[512] entries array which represent your "native" keyboard state.$/;"	m	struct:ImGuiIO
KeyRepeatDelay	lib/cimgui/cimgui.h	/^    float KeyRepeatDelay;$/;"	m	struct:ImGuiIO
KeyRepeatDelay	lib/cimgui/generator/output/cimgui.h	/^    float KeyRepeatDelay;$/;"	m	struct:ImGuiIO
KeyRepeatDelay	lib/cimgui/imgui/imgui.h	/^    float       KeyRepeatDelay;                 \/\/ = 0.250f         \/\/ When holding a key\/button, time before it starts repeating, in seconds (for buttons in Repeat mode, etc.).$/;"	m	struct:ImGuiIO
KeyRepeatRate	lib/cimgui/cimgui.h	/^    float KeyRepeatRate;$/;"	m	struct:ImGuiIO
KeyRepeatRate	lib/cimgui/generator/output/cimgui.h	/^    float KeyRepeatRate;$/;"	m	struct:ImGuiIO
KeyRepeatRate	lib/cimgui/imgui/imgui.h	/^    float       KeyRepeatRate;                  \/\/ = 0.050f         \/\/ When holding a key\/button, rate at which it repeats, in seconds.$/;"	m	struct:ImGuiIO
KeyShift	lib/cimgui/cimgui.h	/^    bool KeyShift;$/;"	m	struct:ImGuiIO
KeyShift	lib/cimgui/generator/output/cimgui.h	/^    bool KeyShift;$/;"	m	struct:ImGuiIO
KeyShift	lib/cimgui/imgui/imgui.h	/^    bool        KeyShift;                       \/\/ Keyboard modifier pressed: Shift$/;"	m	struct:ImGuiIO
KeySuper	lib/cimgui/cimgui.h	/^    bool KeySuper;$/;"	m	struct:ImGuiIO
KeySuper	lib/cimgui/generator/output/cimgui.h	/^    bool KeySuper;$/;"	m	struct:ImGuiIO
KeySuper	lib/cimgui/imgui/imgui.h	/^    bool        KeySuper;                       \/\/ Keyboard modifier pressed: Cmd\/Super\/Windows$/;"	m	struct:ImGuiIO
KeysDown	lib/cimgui/cimgui.h	/^    bool KeysDown[512];$/;"	m	struct:ImGuiIO
KeysDown	lib/cimgui/generator/output/cimgui.h	/^    bool KeysDown[512];$/;"	m	struct:ImGuiIO
KeysDown	lib/cimgui/imgui/imgui.h	/^    bool        KeysDown[512];                  \/\/ Keyboard keys that are pressed (ideally left in the "native" order your engine has access to keyboard keys, so you can use your own defines\/enums for keys).$/;"	m	struct:ImGuiIO
KeysDownDuration	lib/cimgui/cimgui.h	/^    float KeysDownDuration[512];$/;"	m	struct:ImGuiIO
KeysDownDuration	lib/cimgui/generator/output/cimgui.h	/^    float KeysDownDuration[512];$/;"	m	struct:ImGuiIO
KeysDownDuration	lib/cimgui/imgui/imgui.h	/^    float       KeysDownDuration[512];          \/\/ Duration the keyboard key has been down (0.0f == just pressed)$/;"	m	struct:ImGuiIO
KeysDownDurationPrev	lib/cimgui/cimgui.h	/^    float KeysDownDurationPrev[512];$/;"	m	struct:ImGuiIO
KeysDownDurationPrev	lib/cimgui/generator/output/cimgui.h	/^    float KeysDownDurationPrev[512];$/;"	m	struct:ImGuiIO
KeysDownDurationPrev	lib/cimgui/imgui/imgui.h	/^    float       KeysDownDurationPrev[512];      \/\/ Previous duration the key has been down$/;"	m	struct:ImGuiIO
L	lib/klib/khmm.h	/^	int L;$/;"	m	struct:__anon21
LEN	lib/nuklear/demo/allegro5/main.c	30;"	d	file:
LEN	lib/nuklear/demo/sdl_opengles2/main.c	34;"	d	file:
LEN	lib/nuklear/demo/x11_rawfb/main.c	60;"	d	file:
LEN	lib/nuklear/example/canvas.c	39;"	d	file:
LEN	lib/nuklear/example/extended.c	38;"	d	file:
LEN	lib/nuklear/example/file_browser.c	40;"	d	file:
LEN	lib/nuklear/example/skinning.c	38;"	d	file:
LIBS	lib/cimgui/imgui/examples/example_glfw_metal/Makefile	/^LIBS = -framework Metal -framework MetalKit -framework Cocoa -framework IOKit -framework CoreVideo -framework QuartzCore$/;"	m
LIBS	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^LIBS =$/;"	m
LIBS	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^LIBS =$/;"	m
LIBS	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^LIBS =$/;"	m
LIBS	lib/cimgui/imgui/examples/example_null/Makefile	/^LIBS =$/;"	m
LIBS	lib/cimgui/imgui/examples/example_sdl_directx11/build_win32.bat	/^set LIBS=\/libpath:%SDL2_DIR%\\lib\\x86 SDL2.lib SDL2main.lib \/LIBPATH:"%DXSDK_DIR%\/Lib\/x86" d3d11.lib d3dcompiler.lib$/;"	v
LIBS	lib/cimgui/imgui/examples/example_sdl_metal/Makefile	/^LIBS = -framework Metal -framework MetalKit -framework Cocoa -framework IOKit -framework CoreVideo -framework QuartzCore$/;"	m
LIBS	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^LIBS =$/;"	m
LIBS	lib/cimgui/imgui/examples/example_sdl_opengl2/build_win32.bat	/^set LIBS=\/libpath:%SDL2_DIR%\\lib\\x86 SDL2.lib SDL2main.lib opengl32.lib$/;"	v
LIBS	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^LIBS =$/;"	m
LIBS	lib/cimgui/imgui/examples/example_sdl_opengl3/build_win32.bat	/^set LIBS=\/libpath:%SDL2_DIR%\\lib\\x86 SDL2.lib SDL2main.lib opengl32.lib$/;"	v
LIBS	lib/nuklear/demo/allegro5/Makefile	/^LIBS = -lallegro -lallegro_main -lallegro_image -lallegro_font \\$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl2/Makefile	/^		LIBS := -lglfw3 -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm -lGLEW -L\/usr\/local\/lib$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl2/Makefile	/^		LIBS = -lglfw -lGL -lm -lGLU$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl2/Makefile	/^LIBS = -lglfw3 -lopengl32 -lm -lGLU32$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl3/Makefile	/^		LIBS := $(GLFW3) -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm -lGLEW -L\/usr\/local\/lib$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl3/Makefile	/^		LIBS = $(GLFW3) -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl3/Makefile	/^LIBS = -lglfw3 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl4/Makefile	/^		LIBS := $(GLFW3) -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm -lGLEW -L\/usr\/local\/lib$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl4/Makefile	/^		LIBS = $(GLFW3) -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl4/Makefile	/^LIBS = -lglfw3 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl2/Makefile	/^		LIBS = -lSDL2 -framework OpenGL -lm$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl2/Makefile	/^		LIBS = -lSDL2 -lGL -lm -lGLU$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl2/Makefile	/^LIBS = -lmingw32 -lSDL2main -lSDL2 -lopengl32 -lm -lGLU32$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl3/Makefile	/^		LIBS = -lSDL2 -framework OpenGL -lm -lGLEW$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl3/Makefile	/^		LIBS = -lSDL2 -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl3/Makefile	/^LIBS = -lmingw32 -lSDL2main -lSDL2 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/demo/sdl_opengles2/Makefile	/^	LIBS = -lSDL2 -framework OpenGLES -lm$/;"	m
LIBS	lib/nuklear/demo/sdl_opengles2/Makefile	/^	LIBS = -lSDL2 -lGLESv2 -lm$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl2/Makefile	/^		LIBS = -DSFML_STATIC -lsfml-window-s -lsfml-system-s -pthread -ludev -lGL -lX11 -lXrandr$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl2/Makefile	/^		LIBS = -lsfml-window -lsfml-system -pthread -framework OpenGL$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl2/Makefile	/^	LIBS = -lmingw32 -DSFML_STATIC -lsfml-window-s -lsfml-system-s -lopengl32 -lwinmm -lgdi32$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl3/Makefile	/^		LIBS = -DSFML_STATIC -lsfml-window-s -lsfml-system-s -pthread -ludev -lGL -lX11 -lXrandr$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl3/Makefile	/^		LIBS = -lsfml-window -lsfml-system -pthread -framework OpenGL$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl3/Makefile	/^	LIBS = -lmingw32 -DSFML_STATIC -lsfml-window-s -lsfml-system-s -lopengl32 -lwinmm -lgdi32$/;"	m
LIBS	lib/nuklear/doc/Makefile	/^		LIBS = $/;"	m
LIBS	lib/nuklear/doc/Makefile	/^		LIBS =$/;"	m
LIBS	lib/nuklear/doc/Makefile	/^LIBS =$/;"	m
LIBS	lib/nuklear/example/Makefile	/^		LIBS := $(GLFW3) -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm -lGLEW -L\/usr\/local\/lib$/;"	m
LIBS	lib/nuklear/example/Makefile	/^		LIBS := $(GLFW3) -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/example/Makefile	/^	LIBS := -lglfw3 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/example/Makefile	/^LIBS :=$/;"	m
LIKELY	lib/klib/ksw.c	32;"	d	file:
LIKELY	lib/klib/ksw.c	35;"	d	file:
LINE_SIZE	src/data.c	9;"	d	file:
LINKFLAGS	lib/cimgui/Makefile	/^	LINKFLAGS = -dynamiclib$/;"	m
LINKFLAGS	lib/cimgui/Makefile	/^	LINKFLAGS = -limm32$/;"	m
LINMATH_H	lib/linmath/linmath.h	/^#define LINMATH_H$/;"	d
LINMATH_H_DEFINE_VEC	lib/linmath/linmath.h	/^#define LINMATH_H_DEFINE_VEC(/;"	d	signature:(n)
LINMATH_H_FUNC	lib/linmath/linmath.h	/^#define LINMATH_H_FUNC /;"	d
LabelText	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::LabelText(const char* label, const char* fmt, ...)$/;"	f	class:ImGui
LabelTextV	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::LabelTextV(const char* label, const char* fmt, va_list args)$/;"	f	class:ImGui
LastActiveId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 LastActiveId;                       \/\/ Store the last non-zero ActiveId, useful for animation.$/;"	m	struct:ImGuiContext
LastActiveIdTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   LastActiveIdTimer;                  \/\/ Store the last non-zero ActiveId timer since the beginning of activation, useful for animation.$/;"	m	struct:ImGuiContext
LastFrameActive	lib/cimgui/imgui/imgui_internal.h	/^    int                     LastFrameActive;                    \/\/ Last frame number the window was Active.$/;"	m	struct:ImGuiWindow
LastFrameSelected	lib/cimgui/imgui/imgui_internal.h	/^    int                 LastFrameSelected;      \/\/ This allows us to infer an ordered list of the last activated tabs with little maintenance$/;"	m	struct:ImGuiTabItem
LastFrameVisible	lib/cimgui/imgui/imgui_internal.h	/^    int                 LastFrameVisible;$/;"	m	struct:ImGuiTabItem
LastItemDisplayRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemDisplayRect;    \/\/ End-user display rect for last item (only valid if LastItemStatusFlags & ImGuiItemStatusFlags_HasDisplayRect)$/;"	m	struct:ImGuiWindowTempData
LastItemDisplayRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemDisplayRect;$/;"	m	struct:ImGuiItemHoveredDataBackup
LastItemId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 LastItemId;             \/\/ ID for last item$/;"	m	struct:ImGuiWindowTempData
LastItemId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 LastItemId;$/;"	m	struct:ImGuiItemHoveredDataBackup
LastItemRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemRect;           \/\/ Interaction rect for last item$/;"	m	struct:ImGuiWindowTempData
LastItemRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemRect;$/;"	m	struct:ImGuiItemHoveredDataBackup
LastItemStatusFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags    LastItemStatusFlags;    \/\/ Status flags for last item (see ImGuiItemStatusFlags_)$/;"	m	struct:ImGuiWindowTempData
LastItemStatusFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags    LastItemStatusFlags;$/;"	m	struct:ImGuiItemHoveredDataBackup
LastTabContentHeight	lib/cimgui/imgui/imgui_internal.h	/^    float               LastTabContentHeight;   \/\/ Record the height of contents submitted below the tab bar$/;"	m	struct:ImGuiTabBar
LastTabItemIdx	lib/cimgui/imgui/imgui_internal.h	/^    short               LastTabItemIdx;         \/\/ For BeginTabItem()\/EndTabItem()$/;"	m	struct:ImGuiTabBar
LastTimeActive	lib/cimgui/imgui/imgui_internal.h	/^    float                   LastTimeActive;                     \/\/ Last timestamp the window was Active (using float as we don't need high precision there)$/;"	m	struct:ImGuiWindow
LastValidMousePos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  LastValidMousePos;$/;"	m	struct:ImGuiContext
Layers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImDrawList*>   Layers[2];           \/\/ Global layers for: regular, tooltip$/;"	m	struct:ImDrawDataBuilder
LayoutType	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType         LayoutType;$/;"	m	struct:ImGuiWindowTempData
LightHinting	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        LightHinting    = 1 << 3,   \/\/ A lighter hinting algorithm for gray-level modes. Many generated glyphs are fuzzier but better resemble their original shape. This is achieved by snapping glyphs to the pixel grid only vertically (Y-axis), as is done by Microsoft's ClearType and Adobe's proprietary font renderer. This preserves inter-glyph spacing in horizontal text.$/;"	e	enum:ImGuiFreeType::RasterizerFlags
LineGap	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       LineGap;            \/\/ The spacing in pixels between one row's descent and the next row's ascent.$/;"	m	struct:__anon112::FontInfo	file:
LineMaxY	lib/cimgui/imgui/imgui_internal.h	/^    float               LineMinY, LineMaxY;$/;"	m	struct:ImGuiColumns
LineMinY	lib/cimgui/imgui/imgui_internal.h	/^    float               LineMinY, LineMaxY;$/;"	m	struct:ImGuiColumns
LineOffsets	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<int>       LineOffsets;        \/\/ Index to lines offset. We maintain this with AddLog() calls, allowing us to have a random access on lines$/;"	m	struct:ExampleAppLog	file:
LineSpacing	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       LineSpacing;        \/\/ The baseline-to-baseline distance. Note that it usually is larger than the sum of the ascender and descender taken as absolute values. There is also no guarantee that no glyphs extend above or below subsequent baselines when using this distance. Think of it as a value the designer of the font finds appropriate.$/;"	m	struct:__anon112::FontInfo	file:
ListBox	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ListBox(const char* label, int* current_item, bool (*items_getter)(void*, int, const char**), void* data, int items_count, int height_in_items)$/;"	f	class:ImGui
ListBox	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ListBox(const char* label, int* current_item, const char* const items[], int items_count, int height_items)$/;"	f	class:ImGui
ListBoxFooter	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::ListBoxFooter()$/;"	f	class:ImGui
ListBoxHeader	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ListBoxHeader(const char* label, const ImVec2& size_arg)$/;"	f	class:ImGui
ListBoxHeader	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ListBoxHeader(const char* label, int items_count, int height_in_items)$/;"	f	class:ImGui
LoadFlags	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Int32        LoadFlags;$/;"	m	struct:__anon112::FreeTypeFont	file:
LoadGlyph	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    const FT_Glyph_Metrics* FreeTypeFont::LoadGlyph(uint32_t codepoint)$/;"	f	class:__anon112::FreeTypeFont
LoadIniSettingsFromDisk	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LoadIniSettingsFromDisk(const char* ini_filename)$/;"	f	class:ImGui
LoadIniSettingsFromMemory	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LoadIniSettingsFromMemory(const char* ini_data, size_t ini_size)$/;"	f	class:ImGui
Locked	lib/cimgui/cimgui.h	/^    bool Locked;$/;"	m	struct:ImFontAtlas
Locked	lib/cimgui/generator/output/cimgui.h	/^    bool Locked;$/;"	m	struct:ImFontAtlas
Locked	lib/cimgui/imgui/imgui.h	/^    bool                        Locked;             \/\/ Marked as Locked by ImGui::NewFrame() so attempt to modify the atlas will assert.$/;"	m	struct:ImFontAtlas
LogBegin	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogBegin(ImGuiLogType type, int auto_open_depth)$/;"	f	class:ImGui
LogBuffer	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextBuffer         LogBuffer;                          \/\/ Accumulation buffer when log to clipboard. This is pointer so our GImGui static constructor doesn't call heap allocators.$/;"	m	struct:ImGuiContext
LogButtons	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogButtons()$/;"	f	class:ImGui
LogDepthRef	lib/cimgui/imgui/imgui_internal.h	/^    int                     LogDepthRef;$/;"	m	struct:ImGuiContext
LogDepthToExpand	lib/cimgui/imgui/imgui_internal.h	/^    int                     LogDepthToExpand;$/;"	m	struct:ImGuiContext
LogDepthToExpandDefault	lib/cimgui/imgui/imgui_internal.h	/^    int                     LogDepthToExpandDefault;            \/\/ Default\/stored value for LogDepthMaxExpand if not specified in the LogXXX function call.$/;"	m	struct:ImGuiContext
LogEnabled	lib/cimgui/imgui/imgui_internal.h	/^    bool                    LogEnabled;$/;"	m	struct:ImGuiContext
LogFile	lib/cimgui/imgui/imgui_internal.h	/^    ImFileHandle            LogFile;                            \/\/ If != NULL log to stdout\/ file$/;"	m	struct:ImGuiContext
LogFilename	lib/cimgui/cimgui.h	/^    const char* LogFilename;$/;"	m	struct:ImGuiIO
LogFilename	lib/cimgui/generator/output/cimgui.h	/^    const char* LogFilename;$/;"	m	struct:ImGuiIO
LogFilename	lib/cimgui/imgui/imgui.h	/^    const char* LogFilename;                    \/\/ = "imgui_log.txt"\/\/ Path to .log file (default parameter to ImGui::LogToFile when no file is specified).$/;"	m	struct:ImGuiIO
LogFinish	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogFinish()$/;"	f	class:ImGui
LogLineFirstItem	lib/cimgui/imgui/imgui_internal.h	/^    bool                    LogLineFirstItem;$/;"	m	struct:ImGuiContext
LogLinePosY	lib/cimgui/imgui/imgui_internal.h	/^    float                   LogLinePosY;$/;"	m	struct:ImGuiContext
LogRenderedText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogRenderedText(const ImVec2* ref_pos, const char* text, const char* text_end)$/;"	f	class:ImGui
LogText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogText(const char* fmt, ...)$/;"	f	class:ImGui
LogToBuffer	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogToBuffer(int auto_open_depth)$/;"	f	class:ImGui
LogToClipboard	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogToClipboard(int auto_open_depth)$/;"	f	class:ImGui
LogToFile	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogToFile(int auto_open_depth, const char* filename)$/;"	f	class:ImGui
LogToTTY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogToTTY(int auto_open_depth)$/;"	f	class:ImGui
LogType	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLogType            LogType;$/;"	m	struct:ImGuiContext
LowerBound	lib/cimgui/imgui/imgui.cpp	/^static ImGuiStorage::ImGuiStoragePair* LowerBound(ImVector<ImGuiStorage::ImGuiStoragePair>& data, ImGuiID key)$/;"	f	file:
M.Parser	lib/cimgui/generator/cpp2ffi.lua	/^function M.Parser()$/;"	f
M.prtable	lib/cimgui/generator/cpp2ffi.lua	/^function M.prtable(...)$/;"	f
M.serializeTableF 	lib/cimgui/generator/cpp2ffi.lua	/^M.serializeTableF = function(t)$/;"	f
MALLOC	lib/klib/keigen.c	173;"	d	file:
MAP_ANALOG	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	317;"	d	file:
MAP_ANALOG	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	338;"	d	file:
MAP_ANALOG	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	318;"	d	file:
MAP_ANALOG	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	339;"	d	file:
MAP_ANALOG	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	190;"	d	file:
MAP_ANALOG	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	208;"	d	file:
MAP_BUTTON	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	316;"	d	file:
MAP_BUTTON	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	337;"	d	file:
MAP_BUTTON	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	317;"	d	file:
MAP_BUTTON	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	338;"	d	file:
MAP_BUTTON	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	189;"	d	file:
MAP_BUTTON	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	207;"	d	file:
MAX	lib/nuklear/demo/allegro5/main.c	29;"	d	file:
MAX	lib/nuklear/demo/sdl_opengles2/main.c	33;"	d	file:
MAX	lib/nuklear/demo/x11_rawfb/main.c	59;"	d	file:
MAX	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	76;"	d
MAX	lib/nuklear/example/canvas.c	38;"	d	file:
MAX	lib/nuklear/example/extended.c	37;"	d	file:
MAX	lib/nuklear/example/file_browser.c	39;"	d	file:
MAX	lib/nuklear/example/skinning.c	37;"	d	file:
MAX_COLS	src/data.c	8;"	d	file:
MAX_DEPTH	lib/klib/cpp/kavl.hpp	/^	static const int MAX_DEPTH = 64;$/;"	m	class:klib::Avl
MAX_ELEMENT_BUFFER	lib/nuklear/demo/glfw_opengl3/main.c	33;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/glfw_opengl4/main.c	33;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/sfml_opengl3/main.cpp	31;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/x11_opengl2/main.c	32;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/x11_opengl3/main.c	30;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/demo/sdl_opengl3/main.c	33;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/demo/sdl_opengles2/main.c	29;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/canvas.c	34;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/extended.c	33;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/file_browser.c	35;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/skinning.c	33;"	d	file:
MAX_INDEX_BUFFER	lib/nuklear/demo/d3d11/main.c	15;"	d	file:
MAX_PATH_LEN	lib/nuklear/example/file_browser.c	117;"	d	file:
MAX_POINTS	lib/nuklear/demo/gdi/nuklear_gdi.h	313;"	d
MAX_POINTS	lib/nuklear/demo/gdi/nuklear_gdi.h	323;"	d
MAX_POINTS	lib/nuklear/demo/gdip/nuklear_gdip.h	507;"	d
MAX_POINTS	lib/nuklear/demo/gdip/nuklear_gdip.h	515;"	d
MAX_POINTS	lib/nuklear/demo/x11/nuklear_xlib.h	299;"	d
MAX_POINTS	lib/nuklear/demo/x11/nuklear_xlib.h	308;"	d
MAX_POINTS	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	315;"	d
MAX_POINTS	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	370;"	d
MAX_POINTS	lib/nuklear/demo/x11_xft/nuklear_xlib.h	331;"	d
MAX_POINTS	lib/nuklear/demo/x11_xft/nuklear_xlib.h	340;"	d
MAX_VERTEX_BUFFER	lib/nuklear/demo/d3d11/main.c	14;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/glfw_opengl3/main.c	32;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/glfw_opengl4/main.c	32;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/sfml_opengl3/main.cpp	30;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/x11_opengl2/main.c	31;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/x11_opengl3/main.c	29;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/demo/sdl_opengl3/main.c	32;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/demo/sdl_opengles2/main.c	28;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/canvas.c	33;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/extended.c	32;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/file_browser.c	34;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/skinning.c	32;"	d	file:
MDT_ANGULAR_DPI	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFFECTIVE_DPI } MONITOR_DPI_TYPE;$/;"	e	enum:__anon101	file:
MDT_DEFAULT	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFFECTIVE_DPI } MONITOR_DPI_TYPE;$/;"	e	enum:__anon101	file:
MDT_EFFECTIVE_DPI	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFFECTIVE_DPI } MONITOR_DPI_TYPE;$/;"	e	enum:__anon101	file:
MDT_RAW_DPI	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFFECTIVE_DPI } MONITOR_DPI_TYPE;$/;"	e	enum:__anon101	file:
MIN	lib/nuklear/demo/allegro5/main.c	28;"	d	file:
MIN	lib/nuklear/demo/sdl_opengles2/main.c	32;"	d	file:
MIN	lib/nuklear/demo/x11_rawfb/main.c	58;"	d	file:
MIN	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	73;"	d
MIN	lib/nuklear/example/canvas.c	37;"	d	file:
MIN	lib/nuklear/example/extended.c	36;"	d	file:
MIN	lib/nuklear/example/file_browser.c	38;"	d	file:
MIN	lib/nuklear/example/skinning.c	36;"	d	file:
MINUS_INF	lib/klib/ksw.c	443;"	d	file:
MIN_CORE_SIZE	lib/klib/kalloc.c	22;"	d	file:
MONITOR_DPI_TYPE	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { MDT_EFFECTIVE_DPI = 0, MDT_ANGULAR_DPI = 1, MDT_RAW_DPI = 2, MDT_DEFAULT = MDT_EFFECTIVE_DPI } MONITOR_DPI_TYPE;$/;"	t	typeref:enum:__anon101	file:
MSAASamples	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkSampleCountFlagBits        MSAASamples;   \/\/ >= VK_SAMPLE_COUNT_1_BIT$/;"	m	struct:ImGui_ImplVulkan_InitInfo
MTLCommandBuffer	lib/cimgui/imgui/examples/imgui_impl_metal.h	/^@protocol MTLDevice, MTLCommandBuffer, MTLRenderCommandEncoder;$/;"	v
MTLDevice	lib/cimgui/imgui/examples/imgui_impl_metal.h	/^@protocol MTLDevice, MTLCommandBuffer, MTLRenderCommandEncoder;$/;"	v
MTLRenderCommandEncoder	lib/cimgui/imgui/examples/imgui_impl_metal.h	/^@protocol MTLDevice, MTLCommandBuffer, MTLRenderCommandEncoder;$/;"	v
MainLoop	lib/nuklear/demo/sdl_opengles2/main.c	/^MainLoop(void* loopArg){$/;"	f	file:
MallocWrapper	lib/cimgui/imgui/imgui.cpp	/^static void*   MallocWrapper(size_t size, void* user_data)    { IM_UNUSED(user_data); IM_UNUSED(size); IM_ASSERT(0); return NULL; }$/;"	f	file:
MallocWrapper	lib/cimgui/imgui/imgui.cpp	/^static void*   MallocWrapper(size_t size, void* user_data)    { IM_UNUSED(user_data); return malloc(size); }$/;"	f	file:
Map	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStorage    Map;        \/\/ ID->Index$/;"	m	struct:ImPool
MarkIniSettingsDirty	lib/cimgui/imgui/imgui.cpp	/^void ImGui::MarkIniSettingsDirty()$/;"	f	class:ImGui
MarkIniSettingsDirty	lib/cimgui/imgui/imgui.cpp	/^void ImGui::MarkIniSettingsDirty(ImGuiWindow* window)$/;"	f	class:ImGui
MarkItemEdited	lib/cimgui/imgui/imgui.cpp	/^void ImGui::MarkItemEdited(ImGuiID id)$/;"	f	class:ImGui
Max	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      Max;    \/\/ Lower-right$/;"	m	struct:ImRect
MaxAdvanceWidth	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       MaxAdvanceWidth;    \/\/ This field gives the maximum horizontal cursor advance for all glyphs in the font.$/;"	m	struct:__anon112::FontInfo	file:
MemAlloc	lib/cimgui/imgui/imgui.cpp	/^void* ImGui::MemAlloc(size_t size)$/;"	f	class:ImGui
MemFree	lib/cimgui/imgui/imgui.cpp	/^void ImGui::MemFree(void* ptr)$/;"	f	class:ImGui
MemoryCompacted	lib/cimgui/imgui/imgui_internal.h	/^    bool                    MemoryCompacted;$/;"	m	struct:ImGuiWindow
MemoryDrawListIdxCapacity	lib/cimgui/imgui/imgui_internal.h	/^    int                     MemoryDrawListIdxCapacity;$/;"	m	struct:ImGuiWindow
MemoryDrawListVtxCapacity	lib/cimgui/imgui/imgui_internal.h	/^    int                     MemoryDrawListVtxCapacity;$/;"	m	struct:ImGuiWindow
MenuBarAppending	lib/cimgui/imgui/imgui_internal.h	/^    bool                    MenuBarAppending;       \/\/ FIXME: Remove this$/;"	m	struct:ImGuiWindowTempData
MenuBarHeight	lib/cimgui/imgui/imgui_internal.h	/^    float       MenuBarHeight() const       { ImGuiContext& g = *GImGui; return (Flags & ImGuiWindowFlags_MenuBar) ? DC.MenuBarOffset.y + CalcFontSize() + g.Style.FramePadding.y * 2.0f : 0.0f; }$/;"	f	struct:ImGuiWindow
MenuBarOffset	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  MenuBarOffset;          \/\/ MenuBarOffset.x is sort of equivalent of a per-layer CursorPos.x, saved\/restored as we switch to the menu bar. The only situation when MenuBarOffset.y is > 0 if when (SafeAreaPadding.y > FramePadding.y), often used on TVs.$/;"	m	struct:ImGuiWindowTempData
MenuBarOffsetMinVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                      MenuBarOffsetMinVal;    \/\/ *Always on* This is not exposed publicly, so we don't clear it.$/;"	m	struct:ImGuiNextWindowData
MenuBarRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect      MenuBarRect() const         { float y1 = Pos.y + TitleBarHeight(); return ImRect(Pos.x, y1, Pos.x + SizeFull.x, y1 + MenuBarHeight()); }$/;"	f	struct:ImGuiWindow
MenuColumns	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiMenuColumns        MenuColumns;            \/\/ Simplified columns storage for menu items measurement$/;"	m	struct:ImGuiWindowTempData
MenuItem	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::MenuItem(const char* label, const char* shortcut, bool selected, bool enabled)$/;"	f	class:ImGui
MenuItem	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::MenuItem(const char* label, const char* shortcut, bool* p_selected, bool enabled)$/;"	f	class:ImGui
Merge	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawListSplitter::Merge(ImDrawList* draw_list)$/;"	f	class:ImDrawListSplitter
MergeMode	lib/cimgui/cimgui.h	/^    bool MergeMode;$/;"	m	struct:ImFontConfig
MergeMode	lib/cimgui/generator/output/cimgui.h	/^    bool MergeMode;$/;"	m	struct:ImFontConfig
MergeMode	lib/cimgui/imgui/imgui.h	/^    bool            MergeMode;              \/\/ false    \/\/ Merge into previous ImFont, so you can combine multiple inputs font into one ImFont (e.g. ASCII font + icons + Japanese glyphs). You may want to use GlyphOffset.y when merge font of different heights.$/;"	m	struct:ImFontConfig
MetricsActiveAllocations	lib/cimgui/cimgui.h	/^    int MetricsActiveAllocations;$/;"	m	struct:ImGuiIO
MetricsActiveAllocations	lib/cimgui/generator/output/cimgui.h	/^    int MetricsActiveAllocations;$/;"	m	struct:ImGuiIO
MetricsActiveAllocations	lib/cimgui/imgui/imgui.h	/^    int         MetricsActiveAllocations;       \/\/ Number of active allocations, updated by MemAlloc\/MemFree based on current context. May be off if you have multiple imgui contexts.$/;"	m	struct:ImGuiIO
MetricsActiveWindows	lib/cimgui/cimgui.h	/^    int MetricsActiveWindows;$/;"	m	struct:ImGuiIO
MetricsActiveWindows	lib/cimgui/generator/output/cimgui.h	/^    int MetricsActiveWindows;$/;"	m	struct:ImGuiIO
MetricsActiveWindows	lib/cimgui/imgui/imgui.h	/^    int         MetricsActiveWindows;           \/\/ Number of active windows$/;"	m	struct:ImGuiIO
MetricsHelpMarker	lib/cimgui/imgui/imgui.cpp	/^static void MetricsHelpMarker(const char* desc)$/;"	f	file:
MetricsRenderIndices	lib/cimgui/cimgui.h	/^    int MetricsRenderIndices;$/;"	m	struct:ImGuiIO
MetricsRenderIndices	lib/cimgui/generator/output/cimgui.h	/^    int MetricsRenderIndices;$/;"	m	struct:ImGuiIO
MetricsRenderIndices	lib/cimgui/imgui/imgui.h	/^    int         MetricsRenderIndices;           \/\/ Indices output during last call to Render() = number of triangles * 3$/;"	m	struct:ImGuiIO
MetricsRenderVertices	lib/cimgui/cimgui.h	/^    int MetricsRenderVertices;$/;"	m	struct:ImGuiIO
MetricsRenderVertices	lib/cimgui/generator/output/cimgui.h	/^    int MetricsRenderVertices;$/;"	m	struct:ImGuiIO
MetricsRenderVertices	lib/cimgui/imgui/imgui.h	/^    int         MetricsRenderVertices;          \/\/ Vertices output during last call to Render()$/;"	m	struct:ImGuiIO
MetricsRenderWindows	lib/cimgui/cimgui.h	/^    int MetricsRenderWindows;$/;"	m	struct:ImGuiIO
MetricsRenderWindows	lib/cimgui/generator/output/cimgui.h	/^    int MetricsRenderWindows;$/;"	m	struct:ImGuiIO
MetricsRenderWindows	lib/cimgui/imgui/imgui.h	/^    int         MetricsRenderWindows;           \/\/ Number of visible windows$/;"	m	struct:ImGuiIO
MetricsTotalSurface	lib/cimgui/cimgui.h	/^    int MetricsTotalSurface;$/;"	m	struct:ImFont
MetricsTotalSurface	lib/cimgui/generator/output/cimgui.h	/^    int MetricsTotalSurface;$/;"	m	struct:ImFont
MetricsTotalSurface	lib/cimgui/imgui/imgui.h	/^    int                         MetricsTotalSurface;\/\/ 4     \/\/ out \/\/            \/\/ Total surface in pixels to get an idea of the font rasterization\/texture cost (not exact, we approximate the cost of padding between glyphs)$/;"	m	struct:ImFont
Min	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      Min;    \/\/ Upper-left$/;"	m	struct:ImRect
MinImageCount	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    uint32_t            MinImageCount;          \/\/ >= 2$/;"	m	struct:ImGui_ImplVulkan_InitInfo
MonoHinting	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        MonoHinting     = 1 << 4,   \/\/ Strong hinting algorithm that should only be used for monochrome output.$/;"	e	enum:ImGuiFreeType::RasterizerFlags
Monochrome	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        Monochrome      = 1 << 7    \/\/ Disable anti-aliasing. Combine this with MonoHinting for best results!$/;"	e	enum:ImGuiFreeType::RasterizerFlags
MouseClicked	lib/cimgui/cimgui.h	/^    bool MouseClicked[5];$/;"	m	struct:ImGuiIO
MouseClicked	lib/cimgui/generator/output/cimgui.h	/^    bool MouseClicked[5];$/;"	m	struct:ImGuiIO
MouseClicked	lib/cimgui/imgui/imgui.h	/^    bool        MouseClicked[5];                \/\/ Mouse button went from !Down to Down$/;"	m	struct:ImGuiIO
MouseClickedPos	lib/cimgui/cimgui.h	/^    ImVec2 MouseClickedPos[5];$/;"	m	struct:ImGuiIO
MouseClickedPos	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 MouseClickedPos[5];$/;"	m	struct:ImGuiIO
MouseClickedPos	lib/cimgui/imgui/imgui.h	/^    ImVec2      MouseClickedPos[5];             \/\/ Position at time of clicking$/;"	m	struct:ImGuiIO
MouseClickedTime	lib/cimgui/cimgui.h	/^    double MouseClickedTime[5];$/;"	m	struct:ImGuiIO
MouseClickedTime	lib/cimgui/generator/output/cimgui.h	/^    double MouseClickedTime[5];$/;"	m	struct:ImGuiIO
MouseClickedTime	lib/cimgui/imgui/imgui.h	/^    double      MouseClickedTime[5];            \/\/ Time of last click (used to figure out double-click)$/;"	m	struct:ImGuiIO
MouseCursor	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiMouseCursor        MouseCursor;$/;"	m	struct:ImGuiContext
MouseCursorScale	lib/cimgui/cimgui.h	/^    float MouseCursorScale;$/;"	m	struct:ImGuiStyle
MouseCursorScale	lib/cimgui/generator/output/cimgui.h	/^    float MouseCursorScale;$/;"	m	struct:ImGuiStyle
MouseCursorScale	lib/cimgui/imgui/imgui.h	/^    float       MouseCursorScale;           \/\/ Scale software rendered mouse cursor (when io.MouseDrawCursor is enabled). May be removed later.$/;"	m	struct:ImGuiStyle
MouseDelta	lib/cimgui/cimgui.h	/^    ImVec2 MouseDelta;$/;"	m	struct:ImGuiIO
MouseDelta	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 MouseDelta;$/;"	m	struct:ImGuiIO
MouseDelta	lib/cimgui/imgui/imgui.h	/^    ImVec2      MouseDelta;                     \/\/ Mouse delta. Note that this is zero if either current or previous position are invalid (-FLT_MAX,-FLT_MAX), so a disappearing\/reappearing mouse won't have a huge delta.$/;"	m	struct:ImGuiIO
MouseDoubleClickMaxDist	lib/cimgui/cimgui.h	/^    float MouseDoubleClickMaxDist;$/;"	m	struct:ImGuiIO
MouseDoubleClickMaxDist	lib/cimgui/generator/output/cimgui.h	/^    float MouseDoubleClickMaxDist;$/;"	m	struct:ImGuiIO
MouseDoubleClickMaxDist	lib/cimgui/imgui/imgui.h	/^    float       MouseDoubleClickMaxDist;        \/\/ = 6.0f           \/\/ Distance threshold to stay in to validate a double-click, in pixels.$/;"	m	struct:ImGuiIO
MouseDoubleClickTime	lib/cimgui/cimgui.h	/^    float MouseDoubleClickTime;$/;"	m	struct:ImGuiIO
MouseDoubleClickTime	lib/cimgui/generator/output/cimgui.h	/^    float MouseDoubleClickTime;$/;"	m	struct:ImGuiIO
MouseDoubleClickTime	lib/cimgui/imgui/imgui.h	/^    float       MouseDoubleClickTime;           \/\/ = 0.30f          \/\/ Time for a double-click, in seconds.$/;"	m	struct:ImGuiIO
MouseDoubleClicked	lib/cimgui/cimgui.h	/^    bool MouseDoubleClicked[5];$/;"	m	struct:ImGuiIO
MouseDoubleClicked	lib/cimgui/generator/output/cimgui.h	/^    bool MouseDoubleClicked[5];$/;"	m	struct:ImGuiIO
MouseDoubleClicked	lib/cimgui/imgui/imgui.h	/^    bool        MouseDoubleClicked[5];          \/\/ Has mouse button been double-clicked?$/;"	m	struct:ImGuiIO
MouseDown	lib/cimgui/cimgui.h	/^    bool MouseDown[5];$/;"	m	struct:ImGuiIO
MouseDown	lib/cimgui/generator/output/cimgui.h	/^    bool MouseDown[5];$/;"	m	struct:ImGuiIO
MouseDown	lib/cimgui/imgui/imgui.h	/^    bool        MouseDown[5];                   \/\/ Mouse buttons: 0=left, 1=right, 2=middle + extras. ImGui itself mostly only uses left button (BeginPopupContext** are using right button). Others buttons allows us to track if the mouse is being used by your application + available to user as a convenience via IsMouse** API.$/;"	m	struct:ImGuiIO
MouseDownDuration	lib/cimgui/cimgui.h	/^    float MouseDownDuration[5];$/;"	m	struct:ImGuiIO
MouseDownDuration	lib/cimgui/generator/output/cimgui.h	/^    float MouseDownDuration[5];$/;"	m	struct:ImGuiIO
MouseDownDuration	lib/cimgui/imgui/imgui.h	/^    float       MouseDownDuration[5];           \/\/ Duration the mouse button has been down (0.0f == just clicked)$/;"	m	struct:ImGuiIO
MouseDownDurationPrev	lib/cimgui/cimgui.h	/^    float MouseDownDurationPrev[5];$/;"	m	struct:ImGuiIO
MouseDownDurationPrev	lib/cimgui/generator/output/cimgui.h	/^    float MouseDownDurationPrev[5];$/;"	m	struct:ImGuiIO
MouseDownDurationPrev	lib/cimgui/imgui/imgui.h	/^    float       MouseDownDurationPrev[5];       \/\/ Previous time the mouse button has been down$/;"	m	struct:ImGuiIO
MouseDownOwned	lib/cimgui/cimgui.h	/^    bool MouseDownOwned[5];$/;"	m	struct:ImGuiIO
MouseDownOwned	lib/cimgui/generator/output/cimgui.h	/^    bool MouseDownOwned[5];$/;"	m	struct:ImGuiIO
MouseDownOwned	lib/cimgui/imgui/imgui.h	/^    bool        MouseDownOwned[5];              \/\/ Track if button was clicked inside a dear imgui window. We don't request mouse capture from the application if click started outside ImGui bounds.$/;"	m	struct:ImGuiIO
MouseDownWasDoubleClick	lib/cimgui/cimgui.h	/^    bool MouseDownWasDoubleClick[5];$/;"	m	struct:ImGuiIO
MouseDownWasDoubleClick	lib/cimgui/generator/output/cimgui.h	/^    bool MouseDownWasDoubleClick[5];$/;"	m	struct:ImGuiIO
MouseDownWasDoubleClick	lib/cimgui/imgui/imgui.h	/^    bool        MouseDownWasDoubleClick[5];     \/\/ Track if button down was a double-click$/;"	m	struct:ImGuiIO
MouseDragMaxDistanceAbs	lib/cimgui/cimgui.h	/^    ImVec2 MouseDragMaxDistanceAbs[5];$/;"	m	struct:ImGuiIO
MouseDragMaxDistanceAbs	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 MouseDragMaxDistanceAbs[5];$/;"	m	struct:ImGuiIO
MouseDragMaxDistanceAbs	lib/cimgui/imgui/imgui.h	/^    ImVec2      MouseDragMaxDistanceAbs[5];     \/\/ Maximum distance, absolute, on each axis, of how much mouse has traveled from the clicking point$/;"	m	struct:ImGuiIO
MouseDragMaxDistanceSqr	lib/cimgui/cimgui.h	/^    float MouseDragMaxDistanceSqr[5];$/;"	m	struct:ImGuiIO
MouseDragMaxDistanceSqr	lib/cimgui/generator/output/cimgui.h	/^    float MouseDragMaxDistanceSqr[5];$/;"	m	struct:ImGuiIO
MouseDragMaxDistanceSqr	lib/cimgui/imgui/imgui.h	/^    float       MouseDragMaxDistanceSqr[5];     \/\/ Squared maximum distance of how much mouse has traveled from the clicking point$/;"	m	struct:ImGuiIO
MouseDragThreshold	lib/cimgui/cimgui.h	/^    float MouseDragThreshold;$/;"	m	struct:ImGuiIO
MouseDragThreshold	lib/cimgui/generator/output/cimgui.h	/^    float MouseDragThreshold;$/;"	m	struct:ImGuiIO
MouseDragThreshold	lib/cimgui/imgui/imgui.h	/^    float       MouseDragThreshold;             \/\/ = 6.0f           \/\/ Distance threshold before considering we are dragging.$/;"	m	struct:ImGuiIO
MouseDrawCursor	lib/cimgui/cimgui.h	/^    bool MouseDrawCursor;$/;"	m	struct:ImGuiIO
MouseDrawCursor	lib/cimgui/generator/output/cimgui.h	/^    bool MouseDrawCursor;$/;"	m	struct:ImGuiIO
MouseDrawCursor	lib/cimgui/imgui/imgui.h	/^    bool        MouseDrawCursor;                \/\/ = false          \/\/ Request ImGui to draw a mouse cursor for you (if you are on a platform without a mouse cursor). Cannot be easily renamed to 'io.ConfigXXX' because this is frequently used by back-end implementations.$/;"	m	struct:ImGuiIO
MousePos	lib/cimgui/cimgui.h	/^    ImVec2 MousePos;$/;"	m	struct:ImGuiIO
MousePos	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 MousePos;$/;"	m	struct:ImGuiIO
MousePos	lib/cimgui/imgui/imgui.h	/^    ImVec2      MousePos;                       \/\/ Mouse position, in pixels. Set to ImVec2(-FLT_MAX,-FLT_MAX) if mouse is unavailable (on another screen, etc.)$/;"	m	struct:ImGuiIO
MousePosPrev	lib/cimgui/cimgui.h	/^    ImVec2 MousePosPrev;$/;"	m	struct:ImGuiIO
MousePosPrev	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 MousePosPrev;$/;"	m	struct:ImGuiIO
MousePosPrev	lib/cimgui/imgui/imgui.h	/^    ImVec2      MousePosPrev;                   \/\/ Previous mouse position (note that MouseDelta is not necessary == MousePos-MousePosPrev, in case either position is invalid)$/;"	m	struct:ImGuiIO
MouseReleased	lib/cimgui/cimgui.h	/^    bool MouseReleased[5];$/;"	m	struct:ImGuiIO
MouseReleased	lib/cimgui/generator/output/cimgui.h	/^    bool MouseReleased[5];$/;"	m	struct:ImGuiIO
MouseReleased	lib/cimgui/imgui/imgui.h	/^    bool        MouseReleased[5];               \/\/ Mouse button went from Down to !Down$/;"	m	struct:ImGuiIO
MouseWheel	lib/cimgui/cimgui.h	/^    float MouseWheel;$/;"	m	struct:ImGuiIO
MouseWheel	lib/cimgui/generator/output/cimgui.h	/^    float MouseWheel;$/;"	m	struct:ImGuiIO
MouseWheel	lib/cimgui/imgui/imgui.h	/^    float       MouseWheel;                     \/\/ Mouse wheel Vertical: 1 unit scrolls about 5 lines text.$/;"	m	struct:ImGuiIO
MouseWheelH	lib/cimgui/cimgui.h	/^    float MouseWheelH;$/;"	m	struct:ImGuiIO
MouseWheelH	lib/cimgui/generator/output/cimgui.h	/^    float MouseWheelH;$/;"	m	struct:ImGuiIO
MouseWheelH	lib/cimgui/imgui/imgui.h	/^    float       MouseWheelH;                    \/\/ Mouse wheel Horizontal. Most users don't have a mouse with an horizontal wheel, may not be filled by all back-ends.$/;"	m	struct:ImGuiIO
MoveId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 MoveId;                             \/\/ == window->GetID("#MOVE")$/;"	m	struct:ImGuiWindow
MovingWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            MovingWindow;                       \/\/ Track the window we clicked on (in order to preserve focus). The actually window that is moved is generally MovingWindow->RootWindow.$/;"	m	struct:ImGuiContext
MyDocument	lib/cimgui/imgui/imgui_demo.cpp	/^    MyDocument(const char* name, bool open = true, const ImVec4& color = ImVec4(1.0f,1.0f,1.0f,1.0f))$/;"	f	struct:MyDocument
MyDocument	lib/cimgui/imgui/imgui_demo.cpp	/^struct MyDocument$/;"	s	file:
N	lib/klib/test/kstring_bench.c	6;"	d	file:
NAV_MAP_KEY	lib/cimgui/imgui/imgui.cpp	8313;"	d	file:
NAV_MAP_KEY	lib/cimgui/imgui/imgui.cpp	8327;"	d	file:
NAV_WINDOWING_HIGHLIGHT_DELAY	lib/cimgui/imgui/imgui.cpp	/^static const float NAV_WINDOWING_HIGHLIGHT_DELAY            = 0.20f;    \/\/ Time before the highlight and screen dimming starts fading in$/;"	v	file:
NAV_WINDOWING_LIST_APPEAR_DELAY	lib/cimgui/imgui/imgui.cpp	/^static const float NAV_WINDOWING_LIST_APPEAR_DELAY          = 0.15f;    \/\/ Time before the window list starts to appear$/;"	v	file:
NK_ABS	lib/nuklear/nuklear.h	5620;"	d
NK_ABS	lib/nuklear/src/nuklear.h	5401;"	d
NK_ADJACENCY_BONUS	lib/nuklear/nuklear.h	6642;"	d
NK_ADJACENCY_BONUS	lib/nuklear/src/nuklear_util.c	322;"	d	file:
NK_ALIGNOF	lib/nuklear/nuklear.h	5675;"	d
NK_ALIGNOF	lib/nuklear/nuklear.h	5677;"	d
NK_ALIGNOF	lib/nuklear/nuklear.h	5679;"	d
NK_ALIGNOF	lib/nuklear/src/nuklear.h	5456;"	d
NK_ALIGNOF	lib/nuklear/src/nuklear.h	5458;"	d
NK_ALIGNOF	lib/nuklear/src/nuklear.h	5460;"	d
NK_ALIGN_PTR	lib/nuklear/nuklear.h	5656;"	d
NK_ALIGN_PTR	lib/nuklear/src/nuklear.h	5437;"	d
NK_ALIGN_PTR_BACK	lib/nuklear/nuklear.h	5658;"	d
NK_ALIGN_PTR_BACK	lib/nuklear/src/nuklear.h	5439;"	d
NK_ALLEGRO5_H_	lib/nuklear/demo/allegro5/nuklear_allegro5.h	14;"	d
NK_ALLEGRO5_IMPLEMENTATION	lib/nuklear/demo/allegro5/main.c	22;"	d	file:
NK_ALLEGRO5_TEXT_MAX	lib/nuklear/demo/allegro5/nuklear_allegro5.h	46;"	d
NK_ANTI_ALIASING_OFF	lib/nuklear/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_OFF	lib/nuklear/src/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_ON	lib/nuklear/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_ON	lib/nuklear/src/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_API	lib/nuklear/nuklear.h	255;"	d
NK_API	lib/nuklear/nuklear.h	257;"	d
NK_API	lib/nuklear/nuklear.h	259;"	d
NK_API	lib/nuklear/nuklear.h	262;"	d
NK_API	lib/nuklear/src/nuklear.h	36;"	d
NK_API	lib/nuklear/src/nuklear.h	38;"	d
NK_API	lib/nuklear/src/nuklear.h	40;"	d
NK_API	lib/nuklear/src/nuklear.h	43;"	d
NK_ASSERT	lib/nuklear/nuklear.h	5713;"	d
NK_ASSERT	lib/nuklear/src/nuklear_internal.h	28;"	d
NK_BETWEEN	lib/nuklear/nuklear.h	5621;"	d
NK_BETWEEN	lib/nuklear/src/nuklear.h	5402;"	d
NK_BUFFER_BACK	lib/nuklear/nuklear.h	/^    NK_BUFFER_BACK,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_BACK	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_BACK,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_DEFAULT_INITIAL_SIZE	lib/nuklear/nuklear.h	5698;"	d
NK_BUFFER_DEFAULT_INITIAL_SIZE	lib/nuklear/src/nuklear_internal.h	13;"	d
NK_BUFFER_DYNAMIC	lib/nuklear/nuklear.h	/^    NK_BUFFER_DYNAMIC$/;"	e	enum:nk_allocation_type
NK_BUFFER_DYNAMIC	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_DYNAMIC$/;"	e	enum:nk_allocation_type
NK_BUFFER_FIXED	lib/nuklear/nuklear.h	/^    NK_BUFFER_FIXED,$/;"	e	enum:nk_allocation_type
NK_BUFFER_FIXED	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_FIXED,$/;"	e	enum:nk_allocation_type
NK_BUFFER_FRONT	lib/nuklear/nuklear.h	/^    NK_BUFFER_FRONT,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_FRONT	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_FRONT,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_MAX	lib/nuklear/nuklear.h	/^    NK_BUFFER_MAX$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_MAX	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_MAX$/;"	e	enum:nk_buffer_allocation_type
NK_BUTTON_BEHAVIOR_STACK_SIZE	lib/nuklear/nuklear.h	5461;"	d
NK_BUTTON_BEHAVIOR_STACK_SIZE	lib/nuklear/src/nuklear.h	5242;"	d
NK_BUTTON_DEFAULT	lib/nuklear/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_DEFAULT	lib/nuklear/src/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_DOUBLE	lib/nuklear/nuklear.h	/^    NK_BUTTON_DOUBLE,$/;"	e	enum:nk_buttons
NK_BUTTON_DOUBLE	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_DOUBLE,$/;"	e	enum:nk_buttons
NK_BUTTON_LEFT	lib/nuklear/nuklear.h	/^    NK_BUTTON_LEFT,$/;"	e	enum:nk_buttons
NK_BUTTON_LEFT	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_LEFT,$/;"	e	enum:nk_buttons
NK_BUTTON_MAX	lib/nuklear/nuklear.h	/^    NK_BUTTON_MAX$/;"	e	enum:nk_buttons
NK_BUTTON_MAX	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_MAX$/;"	e	enum:nk_buttons
NK_BUTTON_MIDDLE	lib/nuklear/nuklear.h	/^    NK_BUTTON_MIDDLE,$/;"	e	enum:nk_buttons
NK_BUTTON_MIDDLE	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_MIDDLE,$/;"	e	enum:nk_buttons
NK_BUTTON_REPEATER	lib/nuklear/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_REPEATER	lib/nuklear/src/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_RIGHT	lib/nuklear/nuklear.h	/^    NK_BUTTON_RIGHT,$/;"	e	enum:nk_buttons
NK_BUTTON_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_RIGHT,$/;"	e	enum:nk_buttons
NK_CAMEL_BONUS	lib/nuklear/nuklear.h	6646;"	d
NK_CAMEL_BONUS	lib/nuklear/src/nuklear_util.c	326;"	d	file:
NK_CHART_CLICKED	lib/nuklear/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_CLICKED	lib/nuklear/src/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_COLUMN	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_COLUMN	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_HOVERING	lib/nuklear/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_HOVERING	lib/nuklear/src/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_LINES	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_LINES	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX_SLOT	lib/nuklear/nuklear.h	5249;"	d
NK_CHART_MAX_SLOT	lib/nuklear/src/nuklear.h	5030;"	d
NK_CLAMP	lib/nuklear/nuklear.h	304;"	d
NK_CLAMP	lib/nuklear/src/nuklear.h	85;"	d
NK_CLIPPING_OFF	lib/nuklear/nuklear.h	/^    NK_CLIPPING_OFF = nk_false,$/;"	e	enum:nk_command_clipping
NK_CLIPPING_OFF	lib/nuklear/src/nuklear.h	/^    NK_CLIPPING_OFF = nk_false,$/;"	e	enum:nk_command_clipping
NK_CLIPPING_ON	lib/nuklear/nuklear.h	/^    NK_CLIPPING_ON = nk_true$/;"	e	enum:nk_command_clipping
NK_CLIPPING_ON	lib/nuklear/src/nuklear.h	/^    NK_CLIPPING_ON = nk_true$/;"	e	enum:nk_command_clipping
NK_COLOR	lib/nuklear/nuklear.h	14235;"	d
NK_COLOR	lib/nuklear/nuklear.h	14237;"	d
NK_COLOR	lib/nuklear/nuklear.h	14240;"	d
NK_COLOR	lib/nuklear/nuklear.h	14242;"	d
NK_COLOR	lib/nuklear/src/nuklear_style.c	42;"	d	file:
NK_COLOR	lib/nuklear/src/nuklear_style.c	44;"	d	file:
NK_COLOR	lib/nuklear/src/nuklear_style.c	47;"	d	file:
NK_COLOR	lib/nuklear/src/nuklear_style.c	49;"	d	file:
NK_COLOR_BORDER	lib/nuklear/nuklear.h	/^    NK_COLOR_BORDER,$/;"	e	enum:nk_style_colors
NK_COLOR_BORDER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BORDER,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON	lib/nuklear/nuklear.h	/^    NK_COLOR_BUTTON,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BUTTON,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_BUTTON_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BUTTON_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_BUTTON_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BUTTON_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART	lib/nuklear/nuklear.h	/^    NK_COLOR_CHART,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART	lib/nuklear/src/nuklear.h	/^    NK_COLOR_CHART,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR	lib/nuklear/nuklear.h	/^    NK_COLOR_CHART_COLOR,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_CHART_COLOR,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR_HIGHLIGHT	lib/nuklear/nuklear.h	/^    NK_COLOR_CHART_COLOR_HIGHLIGHT,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR_HIGHLIGHT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_CHART_COLOR_HIGHLIGHT,$/;"	e	enum:nk_style_colors
NK_COLOR_COMBO	lib/nuklear/nuklear.h	/^    NK_COLOR_COMBO,$/;"	e	enum:nk_style_colors
NK_COLOR_COMBO	lib/nuklear/src/nuklear.h	/^    NK_COLOR_COMBO,$/;"	e	enum:nk_style_colors
NK_COLOR_COUNT	lib/nuklear/nuklear.h	/^    NK_COLOR_COUNT$/;"	e	enum:nk_style_colors
NK_COLOR_COUNT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_COUNT$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT	lib/nuklear/nuklear.h	/^    NK_COLOR_EDIT,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_EDIT,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_EDIT_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_EDIT_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_HEADER	lib/nuklear/nuklear.h	/^    NK_COLOR_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_HEADER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_MAP	lib/nuklear/nuklear.h	14203;"	d
NK_COLOR_MAP	lib/nuklear/src/nuklear_style.c	10;"	d	file:
NK_COLOR_PROPERTY	lib/nuklear/nuklear.h	/^    NK_COLOR_PROPERTY,$/;"	e	enum:nk_style_colors
NK_COLOR_PROPERTY	lib/nuklear/src/nuklear.h	/^    NK_COLOR_PROPERTY,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT	lib/nuklear/nuklear.h	/^    NK_COLOR_SELECT,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SELECT,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_SELECT_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SELECT_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_STACK_SIZE	lib/nuklear/nuklear.h	5485;"	d
NK_COLOR_STACK_SIZE	lib/nuklear/src/nuklear.h	5266;"	d
NK_COLOR_TAB_HEADER	lib/nuklear/nuklear.h	/^    NK_COLOR_TAB_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_TAB_HEADER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TAB_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_TEXT	lib/nuklear/nuklear.h	/^    NK_COLOR_TEXT,$/;"	e	enum:nk_style_colors
NK_COLOR_TEXT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TEXT,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE	lib/nuklear/nuklear.h	/^    NK_COLOR_TOGGLE,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TOGGLE,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_TOGGLE_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TOGGLE_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_TOGGLE_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TOGGLE_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_WINDOW	lib/nuklear/nuklear.h	/^    NK_COLOR_WINDOW,$/;"	e	enum:nk_style_colors
NK_COLOR_WINDOW	lib/nuklear/src/nuklear.h	/^    NK_COLOR_WINDOW,$/;"	e	enum:nk_style_colors
NK_COMMAND_ARC	lib/nuklear/nuklear.h	/^    NK_COMMAND_ARC,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_ARC,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_ARC_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_ARC_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE	lib/nuklear/nuklear.h	/^    NK_COMMAND_CIRCLE,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CIRCLE,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_CIRCLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CIRCLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CURVE	lib/nuklear/nuklear.h	/^    NK_COMMAND_CURVE,$/;"	e	enum:nk_command_type
NK_COMMAND_CURVE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CURVE,$/;"	e	enum:nk_command_type
NK_COMMAND_CUSTOM	lib/nuklear/nuklear.h	/^    NK_COMMAND_CUSTOM$/;"	e	enum:nk_command_type
NK_COMMAND_CUSTOM	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CUSTOM$/;"	e	enum:nk_command_type
NK_COMMAND_IMAGE	lib/nuklear/nuklear.h	/^    NK_COMMAND_IMAGE,$/;"	e	enum:nk_command_type
NK_COMMAND_IMAGE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_IMAGE,$/;"	e	enum:nk_command_type
NK_COMMAND_LINE	lib/nuklear/nuklear.h	/^    NK_COMMAND_LINE,$/;"	e	enum:nk_command_type
NK_COMMAND_LINE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_LINE,$/;"	e	enum:nk_command_type
NK_COMMAND_NOP	lib/nuklear/nuklear.h	/^    NK_COMMAND_NOP,$/;"	e	enum:nk_command_type
NK_COMMAND_NOP	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_NOP,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON	lib/nuklear/nuklear.h	/^    NK_COMMAND_POLYGON,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_POLYGON,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_POLYGON_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_POLYGON_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYLINE	lib/nuklear/nuklear.h	/^    NK_COMMAND_POLYLINE,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYLINE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_POLYLINE,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT	lib/nuklear/nuklear.h	/^    NK_COMMAND_RECT,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_RECT,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_RECT_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_RECT_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_MULTI_COLOR	lib/nuklear/nuklear.h	/^    NK_COMMAND_RECT_MULTI_COLOR,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_MULTI_COLOR	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_RECT_MULTI_COLOR,$/;"	e	enum:nk_command_type
NK_COMMAND_SCISSOR	lib/nuklear/nuklear.h	/^    NK_COMMAND_SCISSOR,$/;"	e	enum:nk_command_type
NK_COMMAND_SCISSOR	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_SCISSOR,$/;"	e	enum:nk_command_type
NK_COMMAND_TEXT	lib/nuklear/nuklear.h	/^    NK_COMMAND_TEXT,$/;"	e	enum:nk_command_type
NK_COMMAND_TEXT	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_TEXT,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE	lib/nuklear/nuklear.h	/^    NK_COMMAND_TRIANGLE,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_TRIANGLE,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_TRIANGLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_TRIANGLE_FILLED,$/;"	e	enum:nk_command_type
NK_CONFIGURATION_STACK_TYPE	lib/nuklear/nuklear.h	5488;"	d
NK_CONFIGURATION_STACK_TYPE	lib/nuklear/src/nuklear.h	5269;"	d
NK_CONFIG_STACK	lib/nuklear/nuklear.h	5493;"	d
NK_CONFIG_STACK	lib/nuklear/src/nuklear.h	5274;"	d
NK_CONTAINER_OF	lib/nuklear/nuklear.h	5662;"	d
NK_CONTAINER_OF	lib/nuklear/src/nuklear.h	5443;"	d
NK_CONTAINS	lib/nuklear/nuklear.h	5626;"	d
NK_CONTAINS	lib/nuklear/src/nuklear.h	5407;"	d
NK_CONVERT_COMMAND_BUFFER_FULL	lib/nuklear/nuklear.h	/^    NK_CONVERT_COMMAND_BUFFER_FULL = NK_FLAG(1),$/;"	e	enum:nk_convert_result
NK_CONVERT_COMMAND_BUFFER_FULL	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_COMMAND_BUFFER_FULL = NK_FLAG(1),$/;"	e	enum:nk_convert_result
NK_CONVERT_ELEMENT_BUFFER_FULL	lib/nuklear/nuklear.h	/^    NK_CONVERT_ELEMENT_BUFFER_FULL = NK_FLAG(3)$/;"	e	enum:nk_convert_result
NK_CONVERT_ELEMENT_BUFFER_FULL	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_ELEMENT_BUFFER_FULL = NK_FLAG(3)$/;"	e	enum:nk_convert_result
NK_CONVERT_INVALID_PARAM	lib/nuklear/nuklear.h	/^    NK_CONVERT_INVALID_PARAM = 1,$/;"	e	enum:nk_convert_result
NK_CONVERT_INVALID_PARAM	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_INVALID_PARAM = 1,$/;"	e	enum:nk_convert_result
NK_CONVERT_SUCCESS	lib/nuklear/nuklear.h	/^    NK_CONVERT_SUCCESS = 0,$/;"	e	enum:nk_convert_result
NK_CONVERT_SUCCESS	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_SUCCESS = 0,$/;"	e	enum:nk_convert_result
NK_CONVERT_VERTEX_BUFFER_FULL	lib/nuklear/nuklear.h	/^    NK_CONVERT_VERTEX_BUFFER_FULL = NK_FLAG(2),$/;"	e	enum:nk_convert_result
NK_CONVERT_VERTEX_BUFFER_FULL	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_VERTEX_BUFFER_FULL = NK_FLAG(2),$/;"	e	enum:nk_convert_result
NK_COORD_PIXEL	lib/nuklear/nuklear.h	/^    NK_COORD_PIXEL \/* texture coordinates inside font glyphs are in absolute pixel *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_PIXEL	lib/nuklear/src/nuklear.h	/^    NK_COORD_PIXEL \/* texture coordinates inside font glyphs are in absolute pixel *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_UV	lib/nuklear/nuklear.h	/^    NK_COORD_UV, \/* texture coordinates inside font glyphs are clamped between 0-1 *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_UV	lib/nuklear/src/nuklear.h	/^    NK_COORD_UV, \/* texture coordinates inside font glyphs are clamped between 0-1 *\/$/;"	e	enum:nk_font_coord_type
NK_COS	lib/nuklear/nuklear.h	5729;"	d
NK_COS	lib/nuklear/src/nuklear_internal.h	44;"	d
NK_CURSOR_ARROW	lib/nuklear/nuklear.h	/^    NK_CURSOR_ARROW,$/;"	e	enum:nk_style_cursor
NK_CURSOR_ARROW	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_ARROW,$/;"	e	enum:nk_style_cursor
NK_CURSOR_COUNT	lib/nuklear/nuklear.h	/^    NK_CURSOR_COUNT$/;"	e	enum:nk_style_cursor
NK_CURSOR_COUNT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_COUNT$/;"	e	enum:nk_style_cursor
NK_CURSOR_DATA_H	lib/nuklear/nuklear.h	13236;"	d
NK_CURSOR_DATA_H	lib/nuklear/src/nuklear_font.c	2685;"	d	file:
NK_CURSOR_DATA_W	lib/nuklear/nuklear.h	13235;"	d
NK_CURSOR_DATA_W	lib/nuklear/src/nuklear_font.c	2684;"	d	file:
NK_CURSOR_MOVE	lib/nuklear/nuklear.h	/^    NK_CURSOR_MOVE,$/;"	e	enum:nk_style_cursor
NK_CURSOR_MOVE	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_MOVE,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_HORIZONTAL	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_HORIZONTAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_HORIZONTAL	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_HORIZONTAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_VERTICAL	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_VERTICAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_VERTICAL	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_VERTICAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_TEXT	lib/nuklear/nuklear.h	/^    NK_CURSOR_TEXT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_TEXT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_TEXT,$/;"	e	enum:nk_style_cursor
NK_D3D11_H_	lib/nuklear/demo/d3d11/nuklear_d3d11.h	14;"	d
NK_D3D11_IMPLEMENTATION	lib/nuklear/demo/d3d11/main.c	25;"	d	file:
NK_D3D9_H_	lib/nuklear/demo/d3d9/nuklear_d3d9.h	14;"	d
NK_D3D9_IMPLEMENTATION	lib/nuklear/demo/d3d9/main.c	22;"	d	file:
NK_DEFAULT	lib/nuklear/nuklear.h	5738;"	d
NK_DEFAULT	lib/nuklear/src/nuklear_internal.h	53;"	d
NK_DEFAULT_COMMAND_BUFFER_SIZE	lib/nuklear/nuklear.h	5694;"	d
NK_DEFAULT_COMMAND_BUFFER_SIZE	lib/nuklear/src/nuklear_internal.h	9;"	d
NK_DOWN	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_DOWN	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_DO_NOT_STOP_ON_NEW_LINE	lib/nuklear/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anon136
NK_DO_NOT_STOP_ON_NEW_LINE	lib/nuklear/src/nuklear_internal.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anon165
NK_DTOA	lib/nuklear/nuklear.h	5735;"	d
NK_DTOA	lib/nuklear/src/nuklear_internal.h	50;"	d
NK_DYNAMIC	lib/nuklear/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_DYNAMIC	lib/nuklear/src/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_EDIT_ACTIVATED	lib/nuklear/nuklear.h	/^    NK_EDIT_ACTIVATED   = NK_FLAG(2), \/* edit widget went from state inactive to state active *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ACTIVATED	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ACTIVATED   = NK_FLAG(2), \/* edit widget went from state inactive to state active *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ACTIVE	lib/nuklear/nuklear.h	/^    NK_EDIT_ACTIVE      = NK_FLAG(0), \/* edit widget is currently being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ACTIVE      = NK_FLAG(0), \/* edit widget is currently being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ALLOW_TAB	lib/nuklear/nuklear.h	/^    NK_EDIT_ALLOW_TAB               = NK_FLAG(3),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALLOW_TAB	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ALLOW_TAB               = NK_FLAG(3),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALWAYS_INSERT_MODE	lib/nuklear/nuklear.h	/^    NK_EDIT_ALWAYS_INSERT_MODE      = NK_FLAG(9),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALWAYS_INSERT_MODE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ALWAYS_INSERT_MODE      = NK_FLAG(9),$/;"	e	enum:nk_edit_flags
NK_EDIT_AUTO_SELECT	lib/nuklear/nuklear.h	/^    NK_EDIT_AUTO_SELECT             = NK_FLAG(1),$/;"	e	enum:nk_edit_flags
NK_EDIT_AUTO_SELECT	lib/nuklear/src/nuklear.h	/^    NK_EDIT_AUTO_SELECT             = NK_FLAG(1),$/;"	e	enum:nk_edit_flags
NK_EDIT_BOX	lib/nuklear/nuklear.h	/^    NK_EDIT_BOX     = NK_EDIT_ALWAYS_INSERT_MODE| NK_EDIT_SELECTABLE| NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_BOX	lib/nuklear/src/nuklear.h	/^    NK_EDIT_BOX     = NK_EDIT_ALWAYS_INSERT_MODE| NK_EDIT_SELECTABLE| NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_CLIPBOARD	lib/nuklear/nuklear.h	/^    NK_EDIT_CLIPBOARD               = NK_FLAG(6),$/;"	e	enum:nk_edit_flags
NK_EDIT_CLIPBOARD	lib/nuklear/src/nuklear.h	/^    NK_EDIT_CLIPBOARD               = NK_FLAG(6),$/;"	e	enum:nk_edit_flags
NK_EDIT_COMMITED	lib/nuklear/nuklear.h	/^    NK_EDIT_COMMITED    = NK_FLAG(4) \/* edit widget has received an enter and lost focus *\/$/;"	e	enum:nk_edit_events
NK_EDIT_COMMITED	lib/nuklear/src/nuklear.h	/^    NK_EDIT_COMMITED    = NK_FLAG(4) \/* edit widget has received an enter and lost focus *\/$/;"	e	enum:nk_edit_events
NK_EDIT_CTRL_ENTER_NEWLINE	lib/nuklear/nuklear.h	/^    NK_EDIT_CTRL_ENTER_NEWLINE      = NK_FLAG(7),$/;"	e	enum:nk_edit_flags
NK_EDIT_CTRL_ENTER_NEWLINE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_CTRL_ENTER_NEWLINE      = NK_FLAG(7),$/;"	e	enum:nk_edit_flags
NK_EDIT_DEACTIVATED	lib/nuklear/nuklear.h	/^    NK_EDIT_DEACTIVATED = NK_FLAG(3), \/* edit widget went from state active to state inactive *\/$/;"	e	enum:nk_edit_events
NK_EDIT_DEACTIVATED	lib/nuklear/src/nuklear.h	/^    NK_EDIT_DEACTIVATED = NK_FLAG(3), \/* edit widget went from state active to state inactive *\/$/;"	e	enum:nk_edit_events
NK_EDIT_DEFAULT	lib/nuklear/nuklear.h	/^    NK_EDIT_DEFAULT                 = 0,$/;"	e	enum:nk_edit_flags
NK_EDIT_DEFAULT	lib/nuklear/src/nuklear.h	/^    NK_EDIT_DEFAULT                 = 0,$/;"	e	enum:nk_edit_flags
NK_EDIT_EDITOR	lib/nuklear/nuklear.h	/^    NK_EDIT_EDITOR  = NK_EDIT_SELECTABLE|NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB| NK_EDIT_CLIPBOARD$/;"	e	enum:nk_edit_types
NK_EDIT_EDITOR	lib/nuklear/src/nuklear.h	/^    NK_EDIT_EDITOR  = NK_EDIT_SELECTABLE|NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB| NK_EDIT_CLIPBOARD$/;"	e	enum:nk_edit_types
NK_EDIT_FIELD	lib/nuklear/nuklear.h	/^    NK_EDIT_FIELD   = NK_EDIT_SIMPLE|NK_EDIT_SELECTABLE|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_FIELD	lib/nuklear/src/nuklear.h	/^    NK_EDIT_FIELD   = NK_EDIT_SIMPLE|NK_EDIT_SELECTABLE|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_GOTO_END_ON_ACTIVATE	lib/nuklear/nuklear.h	/^    NK_EDIT_GOTO_END_ON_ACTIVATE    = NK_FLAG(11)$/;"	e	enum:nk_edit_flags
NK_EDIT_GOTO_END_ON_ACTIVATE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_GOTO_END_ON_ACTIVATE    = NK_FLAG(11)$/;"	e	enum:nk_edit_flags
NK_EDIT_INACTIVE	lib/nuklear/nuklear.h	/^    NK_EDIT_INACTIVE    = NK_FLAG(1), \/* edit widget is not active and is not being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_INACTIVE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_INACTIVE    = NK_FLAG(1), \/* edit widget is not active and is not being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_MULTILINE	lib/nuklear/nuklear.h	/^    NK_EDIT_MULTILINE               = NK_FLAG(10),$/;"	e	enum:nk_edit_flags
NK_EDIT_MULTILINE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_MULTILINE               = NK_FLAG(10),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_CURSOR	lib/nuklear/nuklear.h	/^    NK_EDIT_NO_CURSOR               = NK_FLAG(4),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_EDIT_NO_CURSOR               = NK_FLAG(4),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_HORIZONTAL_SCROLL	lib/nuklear/nuklear.h	/^    NK_EDIT_NO_HORIZONTAL_SCROLL    = NK_FLAG(8),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_HORIZONTAL_SCROLL	lib/nuklear/src/nuklear.h	/^    NK_EDIT_NO_HORIZONTAL_SCROLL    = NK_FLAG(8),$/;"	e	enum:nk_edit_flags
NK_EDIT_READ_ONLY	lib/nuklear/nuklear.h	/^    NK_EDIT_READ_ONLY               = NK_FLAG(0),$/;"	e	enum:nk_edit_flags
NK_EDIT_READ_ONLY	lib/nuklear/src/nuklear.h	/^    NK_EDIT_READ_ONLY               = NK_FLAG(0),$/;"	e	enum:nk_edit_flags
NK_EDIT_SELECTABLE	lib/nuklear/nuklear.h	/^    NK_EDIT_SELECTABLE              = NK_FLAG(5),$/;"	e	enum:nk_edit_flags
NK_EDIT_SELECTABLE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_SELECTABLE              = NK_FLAG(5),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIG_ENTER	lib/nuklear/nuklear.h	/^    NK_EDIT_SIG_ENTER               = NK_FLAG(2),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIG_ENTER	lib/nuklear/src/nuklear.h	/^    NK_EDIT_SIG_ENTER               = NK_FLAG(2),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIMPLE	lib/nuklear/nuklear.h	/^    NK_EDIT_SIMPLE  = NK_EDIT_ALWAYS_INSERT_MODE,$/;"	e	enum:nk_edit_types
NK_EDIT_SIMPLE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_SIMPLE  = NK_EDIT_ALWAYS_INSERT_MODE,$/;"	e	enum:nk_edit_types
NK_FILE_LINE	lib/nuklear/nuklear.h	296;"	d
NK_FILE_LINE	lib/nuklear/nuklear.h	298;"	d
NK_FILE_LINE	lib/nuklear/src/nuklear.h	77;"	d
NK_FILE_LINE	lib/nuklear/src/nuklear.h	79;"	d
NK_FILTER_FLOAT	lib/nuklear/nuklear.h	/^    NK_FILTER_FLOAT$/;"	e	enum:nk_property_filter
NK_FILTER_FLOAT	lib/nuklear/src/nuklear_internal.h	/^    NK_FILTER_FLOAT$/;"	e	enum:nk_property_filter
NK_FILTER_INT	lib/nuklear/nuklear.h	/^    NK_FILTER_INT,$/;"	e	enum:nk_property_filter
NK_FILTER_INT	lib/nuklear/src/nuklear_internal.h	/^    NK_FILTER_INT,$/;"	e	enum:nk_property_filter
NK_FIXED	lib/nuklear/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_FIXED	lib/nuklear/src/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_FLAG	lib/nuklear/nuklear.h	277;"	d
NK_FLAG	lib/nuklear/src/nuklear.h	58;"	d
NK_FLAGS_STACK_SIZE	lib/nuklear/nuklear.h	5481;"	d
NK_FLAGS_STACK_SIZE	lib/nuklear/src/nuklear.h	5262;"	d
NK_FLOAT_PRECISION	lib/nuklear/nuklear.h	5783;"	d
NK_FLOAT_PRECISION	lib/nuklear/src/nuklear_internal.h	98;"	d
NK_FLOAT_STACK_SIZE	lib/nuklear/nuklear.h	5473;"	d
NK_FLOAT_STACK_SIZE	lib/nuklear/src/nuklear.h	5254;"	d
NK_FONT_ATLAS_ALPHA8	lib/nuklear/nuklear.h	/^    NK_FONT_ATLAS_ALPHA8,$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_ALPHA8	lib/nuklear/src/nuklear.h	/^    NK_FONT_ATLAS_ALPHA8,$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_RGBA32	lib/nuklear/nuklear.h	/^    NK_FONT_ATLAS_RGBA32$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_RGBA32	lib/nuklear/src/nuklear.h	/^    NK_FONT_ATLAS_RGBA32$/;"	e	enum:nk_font_atlas_format
NK_FONT_STACK_SIZE	lib/nuklear/nuklear.h	5465;"	d
NK_FONT_STACK_SIZE	lib/nuklear/src/nuklear.h	5246;"	d
NK_FORMAT_B8G8R8A8	lib/nuklear/nuklear.h	/^    NK_FORMAT_B8G8R8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_B8G8R8A8	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_B8G8R8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_BEGIN	lib/nuklear/nuklear.h	/^NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_BEGIN	lib/nuklear/src/nuklear.h	/^NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_END	lib/nuklear/nuklear.h	/^NK_FORMAT_COLOR_END = NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_END	lib/nuklear/src/nuklear.h	/^NK_FORMAT_COLOR_END = NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COUNT	lib/nuklear/nuklear.h	/^    NK_FORMAT_COUNT$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COUNT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_COUNT$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_DOUBLE	lib/nuklear/nuklear.h	/^    NK_FORMAT_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_DOUBLE	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_FLOAT	lib/nuklear/nuklear.h	/^    NK_FORMAT_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_FLOAT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16	lib/nuklear/nuklear.h	/^    NK_FORMAT_R16G15B16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R16G15B16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16A16	lib/nuklear/nuklear.h	/^    NK_FORMAT_R16G15B16A16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16A16	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R16G15B16A16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32A32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32A32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_DOUBLE	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32A32_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_DOUBLE	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32A32_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_FLOAT	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32A32_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_FLOAT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32A32_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8	lib/nuklear/nuklear.h	/^    NK_FORMAT_R8G8B8 = NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R8G8B8 = NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8A8	lib/nuklear/nuklear.h	/^    NK_FORMAT_R8G8B8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8A8	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R8G8B8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGB32	lib/nuklear/nuklear.h	/^    NK_FORMAT_RGB32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGB32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_RGB32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGBA32	lib/nuklear/nuklear.h	/^    NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGBA32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SCHAR	lib/nuklear/nuklear.h	/^    NK_FORMAT_SCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SCHAR	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_SCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SINT	lib/nuklear/nuklear.h	/^    NK_FORMAT_SINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SINT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_SINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SSHORT	lib/nuklear/nuklear.h	/^    NK_FORMAT_SSHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SSHORT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_SSHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UCHAR	lib/nuklear/nuklear.h	/^    NK_FORMAT_UCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UCHAR	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_UCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UINT	lib/nuklear/nuklear.h	/^    NK_FORMAT_UINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UINT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_UINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_USHORT	lib/nuklear/nuklear.h	/^    NK_FORMAT_USHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_USHORT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_USHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FRAC	lib/nuklear/nuklear.h	18184;"	d
NK_FRAC	lib/nuklear/nuklear.h	18277;"	d
NK_FRAC	lib/nuklear/src/nuklear_layout.c	608;"	d	file:
NK_FRAC	lib/nuklear/src/nuklear_layout.c	701;"	d	file:
NK_GDIP_H_	lib/nuklear/demo/gdip/nuklear_gdip.h	14;"	d
NK_GDIP_IMPLEMENTATION	lib/nuklear/demo/gdip/main.c	17;"	d	file:
NK_GDI_H_	lib/nuklear/demo/gdi/nuklear_gdi.h	14;"	d
NK_GDI_IMPLEMENTATION	lib/nuklear/demo/gdi/main.c	17;"	d	file:
NK_GLFW3_DEFAULT	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    NK_GLFW3_DEFAULT = 0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_DEFAULT	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    NK_GLFW3_DEFAULT=0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_DEFAULT	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    NK_GLFW3_DEFAULT = 0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW_DOUBLE_CLICK_HI	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	51;"	d
NK_GLFW_DOUBLE_CLICK_HI	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	54;"	d
NK_GLFW_DOUBLE_CLICK_HI	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	61;"	d
NK_GLFW_DOUBLE_CLICK_LO	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	48;"	d
NK_GLFW_DOUBLE_CLICK_LO	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	51;"	d
NK_GLFW_DOUBLE_CLICK_LO	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	58;"	d
NK_GLFW_GL2_H_	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	14;"	d
NK_GLFW_GL2_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl2/main.c	23;"	d	file:
NK_GLFW_GL3_H_	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	14;"	d
NK_GLFW_GL3_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl3/main.c	24;"	d	file:
NK_GLFW_GL4_H_	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	14;"	d
NK_GLFW_GL4_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl4/main.c	24;"	d	file:
NK_GLFW_GL4_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	52;"	d
NK_GLFW_MAX_TEXTURES	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	64;"	d
NK_GLFW_TEXT_MAX	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	45;"	d
NK_GLFW_TEXT_MAX	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	48;"	d
NK_GLFW_TEXT_MAX	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	55;"	d
NK_GLOBAL	lib/nuklear/nuklear.h	275;"	d
NK_GLOBAL	lib/nuklear/src/nuklear.h	56;"	d
NK_HEADER_LEFT	lib/nuklear/nuklear.h	/^    NK_HEADER_LEFT,$/;"	e	enum:nk_style_header_align
NK_HEADER_LEFT	lib/nuklear/src/nuklear.h	/^    NK_HEADER_LEFT,$/;"	e	enum:nk_style_header_align
NK_HEADER_RIGHT	lib/nuklear/nuklear.h	/^    NK_HEADER_RIGHT$/;"	e	enum:nk_style_header_align
NK_HEADER_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_HEADER_RIGHT$/;"	e	enum:nk_style_header_align
NK_HIDDEN	lib/nuklear/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_HIDDEN	lib/nuklear/src/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_HORIZONTAL	lib/nuklear/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_HORIZONTAL	lib/nuklear/src/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_IMPLEMENTATION	lib/nuklear/demo/allegro5/main.c	21;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/d3d11/main.c	24;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/d3d9/main.c	21;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/gdi/main.c	16;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/gdip/main.c	16;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl2/main.c	22;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl3/main.c	23;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl4/main.c	23;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl2/main.c	23;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl3/main.c	24;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sdl_opengles2/main.c	20;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl2/main.cpp	23;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl3/main.cpp	22;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11/main.c	17;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11_opengl2/main.c	23;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11_opengl3/main.c	20;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11_rawfb/main.c	42;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11_xft/main.c	17;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/canvas.c	23;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/extended.c	22;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/file_browser.c	24;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/skinning.c	22;"	d	file:
NK_INBOX	lib/nuklear/nuklear.h	5622;"	d
NK_INBOX	lib/nuklear/src/nuklear.h	5403;"	d
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/allegro5/main.c	20;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/d3d11/main.c	20;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/d3d9/main.c	17;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/gdi/main.c	15;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/gdip/main.c	15;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/glfw_opengl2/main.c	18;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/glfw_opengl3/main.c	19;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/glfw_opengl4/main.c	19;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sdl_opengl2/main.c	19;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sdl_opengl3/main.c	20;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sdl_opengles2/main.c	16;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sfml_opengl2/main.cpp	19;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sfml_opengl3/main.cpp	18;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11/main.c	16;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11_opengl2/main.c	19;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11_opengl3/main.c	16;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11_rawfb/main.c	41;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11_xft/main.c	16;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/canvas.c	19;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/extended.c	18;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/file_browser.c	20;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/skinning.c	18;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/d3d11/main.c	23;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/d3d9/main.c	20;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/glfw_opengl2/main.c	21;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/glfw_opengl3/main.c	22;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/glfw_opengl4/main.c	22;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sdl_opengl2/main.c	22;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sdl_opengl3/main.c	23;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sdl_opengles2/main.c	19;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sfml_opengl2/main.cpp	22;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sfml_opengl3/main.cpp	21;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/x11_opengl2/main.c	22;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/x11_opengl3/main.c	19;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/x11_rawfb/main.c	46;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/canvas.c	22;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/extended.c	21;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/file_browser.c	23;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/skinning.c	21;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/allegro5/main.c	17;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/d3d11/main.c	17;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/d3d9/main.c	14;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/gdi/main.c	12;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/gdip/main.c	12;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/glfw_opengl2/main.c	15;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/glfw_opengl3/main.c	16;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/glfw_opengl4/main.c	16;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sdl_opengl2/main.c	16;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sdl_opengl3/main.c	17;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sdl_opengles2/main.c	13;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sfml_opengl2/main.cpp	16;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sfml_opengl3/main.cpp	15;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11/main.c	13;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11_opengl2/main.c	16;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11_opengl3/main.c	13;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11_rawfb/main.c	38;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11_xft/main.c	13;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/canvas.c	17;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/extended.c	16;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/file_browser.c	18;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/skinning.c	16;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/d3d11/main.c	22;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/d3d9/main.c	19;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/glfw_opengl2/main.c	20;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/glfw_opengl3/main.c	21;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/glfw_opengl4/main.c	21;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sdl_opengl2/main.c	21;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sdl_opengl3/main.c	22;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sdl_opengles2/main.c	18;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sfml_opengl2/main.cpp	21;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sfml_opengl3/main.cpp	20;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/x11_opengl2/main.c	21;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/x11_opengl3/main.c	18;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/x11_rawfb/main.c	45;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/canvas.c	21;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/extended.c	20;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/file_browser.c	22;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/skinning.c	20;"	d	file:
NK_INCLUDE_SOFTWARE_FONT	lib/nuklear/demo/x11_rawfb/main.c	47;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/allegro5/main.c	18;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/d3d11/main.c	18;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/d3d9/main.c	15;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/gdi/main.c	13;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/gdip/main.c	13;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/glfw_opengl2/main.c	16;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/glfw_opengl3/main.c	17;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/glfw_opengl4/main.c	17;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sdl_opengl2/main.c	17;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sdl_opengl3/main.c	18;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sdl_opengles2/main.c	14;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sfml_opengl2/main.cpp	17;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sfml_opengl3/main.cpp	16;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11/main.c	14;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11_opengl2/main.c	17;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11_opengl3/main.c	14;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11_rawfb/main.c	39;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11_xft/main.c	14;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/canvas.c	18;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/extended.c	17;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/file_browser.c	19;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/skinning.c	17;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/allegro5/main.c	19;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/d3d11/main.c	19;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/d3d9/main.c	16;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/gdi/main.c	14;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/gdip/main.c	14;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/glfw_opengl2/main.c	17;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/glfw_opengl3/main.c	18;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/glfw_opengl4/main.c	18;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sdl_opengl2/main.c	18;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sdl_opengl3/main.c	19;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sdl_opengles2/main.c	15;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sfml_opengl2/main.cpp	18;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sfml_opengl3/main.cpp	17;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11/main.c	15;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11_opengl2/main.c	18;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11_opengl3/main.c	15;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11_rawfb/main.c	40;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11_xft/main.c	15;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/d3d11/main.c	21;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/d3d9/main.c	18;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/glfw_opengl2/main.c	19;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/glfw_opengl3/main.c	20;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/glfw_opengl4/main.c	20;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sdl_opengl2/main.c	20;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sdl_opengl3/main.c	21;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sdl_opengles2/main.c	17;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sfml_opengl2/main.cpp	20;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sfml_opengl3/main.cpp	19;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/x11_opengl2/main.c	20;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/x11_opengl3/main.c	17;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/canvas.c	20;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/extended.c	19;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/file_browser.c	21;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/skinning.c	19;"	d	file:
NK_INPUT_MAX	lib/nuklear/nuklear.h	237;"	d
NK_INPUT_MAX	lib/nuklear/src/nuklear.h	18;"	d
NK_INSERT_BACK	lib/nuklear/nuklear.h	/^    NK_INSERT_BACK, \/* inserts window into the back of list (front of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_BACK	lib/nuklear/src/nuklear_internal.h	/^    NK_INSERT_BACK, \/* inserts window into the back of list (front of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_FRONT	lib/nuklear/nuklear.h	/^    NK_INSERT_FRONT \/* inserts window into the front of list (back of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_FRONT	lib/nuklear/src/nuklear_internal.h	/^    NK_INSERT_FRONT \/* inserts window into the front of list (back of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INT16	lib/nuklear/nuklear.h	333;"	d
NK_INT16	lib/nuklear/nuklear.h	347;"	d
NK_INT16	lib/nuklear/src/nuklear.h	114;"	d
NK_INT16	lib/nuklear/src/nuklear.h	128;"	d
NK_INT32	lib/nuklear/nuklear.h	335;"	d
NK_INT32	lib/nuklear/nuklear.h	354;"	d
NK_INT32	lib/nuklear/nuklear.h	356;"	d
NK_INT32	lib/nuklear/src/nuklear.h	116;"	d
NK_INT32	lib/nuklear/src/nuklear.h	135;"	d
NK_INT32	lib/nuklear/src/nuklear.h	137;"	d
NK_INT8	lib/nuklear/nuklear.h	331;"	d
NK_INT8	lib/nuklear/nuklear.h	341;"	d
NK_INT8	lib/nuklear/src/nuklear.h	112;"	d
NK_INT8	lib/nuklear/src/nuklear.h	122;"	d
NK_INTERN	lib/nuklear/nuklear.h	273;"	d
NK_INTERN	lib/nuklear/src/nuklear.h	54;"	d
NK_INTERNAL_H	lib/nuklear/nuklear.h	5687;"	d
NK_INTERNAL_H	lib/nuklear/src/nuklear_internal.h	2;"	d
NK_INTERSECT	lib/nuklear/nuklear.h	5624;"	d
NK_INTERSECT	lib/nuklear/src/nuklear.h	5405;"	d
NK_KEYSTATE_BASED_INPUT	lib/nuklear/demo/glfw_opengl2/main.c	24;"	d	file:
NK_KEYSTATE_BASED_INPUT	lib/nuklear/demo/glfw_opengl3/main.c	25;"	d	file:
NK_KEYSTATE_BASED_INPUT	lib/nuklear/demo/glfw_opengl4/main.c	25;"	d	file:
NK_KEY_BACKSPACE	lib/nuklear/nuklear.h	/^    NK_KEY_BACKSPACE,$/;"	e	enum:nk_keys
NK_KEY_BACKSPACE	lib/nuklear/src/nuklear.h	/^    NK_KEY_BACKSPACE,$/;"	e	enum:nk_keys
NK_KEY_COPY	lib/nuklear/nuklear.h	/^    NK_KEY_COPY,$/;"	e	enum:nk_keys
NK_KEY_COPY	lib/nuklear/src/nuklear.h	/^    NK_KEY_COPY,$/;"	e	enum:nk_keys
NK_KEY_CTRL	lib/nuklear/nuklear.h	/^    NK_KEY_CTRL,$/;"	e	enum:nk_keys
NK_KEY_CTRL	lib/nuklear/src/nuklear.h	/^    NK_KEY_CTRL,$/;"	e	enum:nk_keys
NK_KEY_CUT	lib/nuklear/nuklear.h	/^    NK_KEY_CUT,$/;"	e	enum:nk_keys
NK_KEY_CUT	lib/nuklear/src/nuklear.h	/^    NK_KEY_CUT,$/;"	e	enum:nk_keys
NK_KEY_DEL	lib/nuklear/nuklear.h	/^    NK_KEY_DEL,$/;"	e	enum:nk_keys
NK_KEY_DEL	lib/nuklear/src/nuklear.h	/^    NK_KEY_DEL,$/;"	e	enum:nk_keys
NK_KEY_DOWN	lib/nuklear/nuklear.h	/^    NK_KEY_DOWN,$/;"	e	enum:nk_keys
NK_KEY_DOWN	lib/nuklear/src/nuklear.h	/^    NK_KEY_DOWN,$/;"	e	enum:nk_keys
NK_KEY_ENTER	lib/nuklear/nuklear.h	/^    NK_KEY_ENTER,$/;"	e	enum:nk_keys
NK_KEY_ENTER	lib/nuklear/src/nuklear.h	/^    NK_KEY_ENTER,$/;"	e	enum:nk_keys
NK_KEY_LEFT	lib/nuklear/nuklear.h	/^    NK_KEY_LEFT,$/;"	e	enum:nk_keys
NK_KEY_LEFT	lib/nuklear/src/nuklear.h	/^    NK_KEY_LEFT,$/;"	e	enum:nk_keys
NK_KEY_MAX	lib/nuklear/nuklear.h	/^    NK_KEY_MAX$/;"	e	enum:nk_keys
NK_KEY_MAX	lib/nuklear/src/nuklear.h	/^    NK_KEY_MAX$/;"	e	enum:nk_keys
NK_KEY_NONE	lib/nuklear/nuklear.h	/^    NK_KEY_NONE,$/;"	e	enum:nk_keys
NK_KEY_NONE	lib/nuklear/src/nuklear.h	/^    NK_KEY_NONE,$/;"	e	enum:nk_keys
NK_KEY_PASTE	lib/nuklear/nuklear.h	/^    NK_KEY_PASTE,$/;"	e	enum:nk_keys
NK_KEY_PASTE	lib/nuklear/src/nuklear.h	/^    NK_KEY_PASTE,$/;"	e	enum:nk_keys
NK_KEY_RIGHT	lib/nuklear/nuklear.h	/^    NK_KEY_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_KEY_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_DOWN	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_DOWN,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_DOWN	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_DOWN,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_END	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_END,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_END	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_END,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_START	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_START,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_START	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_START,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_UP	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_UP,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_UP	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_UP,$/;"	e	enum:nk_keys
NK_KEY_SHIFT	lib/nuklear/nuklear.h	/^    NK_KEY_SHIFT,$/;"	e	enum:nk_keys
NK_KEY_SHIFT	lib/nuklear/src/nuklear.h	/^    NK_KEY_SHIFT,$/;"	e	enum:nk_keys
NK_KEY_TAB	lib/nuklear/nuklear.h	/^    NK_KEY_TAB,$/;"	e	enum:nk_keys
NK_KEY_TAB	lib/nuklear/src/nuklear.h	/^    NK_KEY_TAB,$/;"	e	enum:nk_keys
NK_KEY_TEXT_END	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_END	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_INSERT_MODE	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_INSERT_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_INSERT_MODE	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_INSERT_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_END	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_LINE_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_END	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_LINE_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_START	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_LINE_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_START	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_LINE_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REDO	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_REDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REDO	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_REDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REPLACE_MODE	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_REPLACE_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REPLACE_MODE	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_REPLACE_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_RESET_MODE	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_RESET_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_RESET_MODE	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_RESET_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_SELECT_ALL	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_SELECT_ALL,$/;"	e	enum:nk_keys
NK_KEY_TEXT_SELECT_ALL	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_SELECT_ALL,$/;"	e	enum:nk_keys
NK_KEY_TEXT_START	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_START	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_UNDO	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_UNDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_UNDO	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_UNDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_LEFT	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_WORD_LEFT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_LEFT	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_WORD_LEFT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_RIGHT	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_WORD_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_WORD_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_UP	lib/nuklear/nuklear.h	/^    NK_KEY_UP,$/;"	e	enum:nk_keys
NK_KEY_UP	lib/nuklear/src/nuklear.h	/^    NK_KEY_UP,$/;"	e	enum:nk_keys
NK_LAYOUT_COUNT	lib/nuklear/nuklear.h	/^    NK_LAYOUT_COUNT$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_COUNT	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_COUNT$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FIXED	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FIXED = 0,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FIXED	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FIXED = 0,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FREE	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FREE	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_ROW	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_ROW	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FIXED	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC_FIXED,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FIXED	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC_FIXED,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FREE	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FREE	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_ROW	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_ROW	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_TEMPLATE	lib/nuklear/nuklear.h	/^    NK_LAYOUT_TEMPLATE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_TEMPLATE	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_TEMPLATE,$/;"	e	enum:nk_panel_row_layout_type
NK_LEADING_LETTER_PENALTY	lib/nuklear/nuklear.h	6648;"	d
NK_LEADING_LETTER_PENALTY	lib/nuklear/src/nuklear_util.c	328;"	d	file:
NK_LEFT	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_LEFT	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_LEN	lib/nuklear/nuklear.h	5619;"	d
NK_LEN	lib/nuklear/src/nuklear.h	5400;"	d
NK_LIB	lib/nuklear/nuklear.h	267;"	d
NK_LIB	lib/nuklear/nuklear.h	269;"	d
NK_LIB	lib/nuklear/src/nuklear.h	48;"	d
NK_LIB	lib/nuklear/src/nuklear.h	50;"	d
NK_MACRO_STRINGIFY	lib/nuklear/nuklear.h	279;"	d
NK_MACRO_STRINGIFY	lib/nuklear/src/nuklear.h	60;"	d
NK_MAX	lib/nuklear/nuklear.h	303;"	d
NK_MAX	lib/nuklear/src/nuklear.h	84;"	d
NK_MAXIMIZED	lib/nuklear/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MAXIMIZED	lib/nuklear/src/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MAX_FLOAT_PRECISION	lib/nuklear/nuklear.h	5615;"	d
NK_MAX_FLOAT_PRECISION	lib/nuklear/src/nuklear.h	5396;"	d
NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS	lib/nuklear/nuklear.h	5246;"	d
NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS	lib/nuklear/src/nuklear.h	5027;"	d
NK_MAX_LEADING_LETTER_PENALTY	lib/nuklear/nuklear.h	6650;"	d
NK_MAX_LEADING_LETTER_PENALTY	lib/nuklear/src/nuklear_util.c	330;"	d	file:
NK_MAX_NUMBER_BUFFER	lib/nuklear/nuklear.h	240;"	d
NK_MAX_NUMBER_BUFFER	lib/nuklear/src/nuklear.h	21;"	d
NK_MAX_SORT_STACK	lib/nuklear/nuklear.h	10868;"	d
NK_MAX_SORT_STACK	lib/nuklear/nuklear.h	10891;"	d
NK_MAX_SORT_STACK	lib/nuklear/src/nuklear_font.c	317;"	d	file:
NK_MAX_SORT_STACK	lib/nuklear/src/nuklear_font.c	340;"	d	file:
NK_MEMCPY	lib/nuklear/nuklear.h	5720;"	d
NK_MEMCPY	lib/nuklear/src/nuklear_internal.h	35;"	d
NK_MEMSET	lib/nuklear/nuklear.h	5717;"	d
NK_MEMSET	lib/nuklear/src/nuklear_internal.h	32;"	d
NK_MIN	lib/nuklear/nuklear.h	302;"	d
NK_MIN	lib/nuklear/src/nuklear.h	83;"	d
NK_MINIMIZED	lib/nuklear/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MINIMIZED	lib/nuklear/src/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MODIFIABLE	lib/nuklear/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_MODIFIABLE	lib/nuklear/src/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_NUKLEAR_H_	lib/nuklear/nuklear.h	221;"	d
NK_NUKLEAR_H_	lib/nuklear/src/nuklear.h	2;"	d
NK_OFFSETOF	lib/nuklear/nuklear.h	5661;"	d
NK_OFFSETOF	lib/nuklear/src/nuklear.h	5442;"	d
NK_PANEL_COMBO	lib/nuklear/nuklear.h	/^    NK_PANEL_COMBO      = NK_FLAG(5),$/;"	e	enum:nk_panel_type
NK_PANEL_COMBO	lib/nuklear/src/nuklear.h	/^    NK_PANEL_COMBO      = NK_FLAG(5),$/;"	e	enum:nk_panel_type
NK_PANEL_CONTEXTUAL	lib/nuklear/nuklear.h	/^    NK_PANEL_CONTEXTUAL = NK_FLAG(4),$/;"	e	enum:nk_panel_type
NK_PANEL_CONTEXTUAL	lib/nuklear/src/nuklear.h	/^    NK_PANEL_CONTEXTUAL = NK_FLAG(4),$/;"	e	enum:nk_panel_type
NK_PANEL_GROUP	lib/nuklear/nuklear.h	/^    NK_PANEL_GROUP      = NK_FLAG(1),$/;"	e	enum:nk_panel_type
NK_PANEL_GROUP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_GROUP      = NK_FLAG(1),$/;"	e	enum:nk_panel_type
NK_PANEL_MENU	lib/nuklear/nuklear.h	/^    NK_PANEL_MENU       = NK_FLAG(6),$/;"	e	enum:nk_panel_type
NK_PANEL_MENU	lib/nuklear/src/nuklear.h	/^    NK_PANEL_MENU       = NK_FLAG(6),$/;"	e	enum:nk_panel_type
NK_PANEL_NONE	lib/nuklear/nuklear.h	/^    NK_PANEL_NONE       = 0,$/;"	e	enum:nk_panel_type
NK_PANEL_NONE	lib/nuklear/src/nuklear.h	/^    NK_PANEL_NONE       = 0,$/;"	e	enum:nk_panel_type
NK_PANEL_POPUP	lib/nuklear/nuklear.h	/^    NK_PANEL_POPUP      = NK_FLAG(2),$/;"	e	enum:nk_panel_type
NK_PANEL_POPUP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_POPUP      = NK_FLAG(2),$/;"	e	enum:nk_panel_type
NK_PANEL_SET_NONBLOCK	lib/nuklear/nuklear.h	/^    NK_PANEL_SET_NONBLOCK = NK_PANEL_CONTEXTUAL|NK_PANEL_COMBO|NK_PANEL_MENU|NK_PANEL_TOOLTIP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_NONBLOCK	lib/nuklear/src/nuklear.h	/^    NK_PANEL_SET_NONBLOCK = NK_PANEL_CONTEXTUAL|NK_PANEL_COMBO|NK_PANEL_MENU|NK_PANEL_TOOLTIP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_POPUP	lib/nuklear/nuklear.h	/^    NK_PANEL_SET_POPUP = NK_PANEL_SET_NONBLOCK|NK_PANEL_POPUP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_POPUP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_SET_POPUP = NK_PANEL_SET_NONBLOCK|NK_PANEL_POPUP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_SUB	lib/nuklear/nuklear.h	/^    NK_PANEL_SET_SUB = NK_PANEL_SET_POPUP|NK_PANEL_GROUP$/;"	e	enum:nk_panel_set
NK_PANEL_SET_SUB	lib/nuklear/src/nuklear.h	/^    NK_PANEL_SET_SUB = NK_PANEL_SET_POPUP|NK_PANEL_GROUP$/;"	e	enum:nk_panel_set
NK_PANEL_TOOLTIP	lib/nuklear/nuklear.h	/^    NK_PANEL_TOOLTIP    = NK_FLAG(7)$/;"	e	enum:nk_panel_type
NK_PANEL_TOOLTIP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_TOOLTIP    = NK_FLAG(7)$/;"	e	enum:nk_panel_type
NK_PANEL_WINDOW	lib/nuklear/nuklear.h	/^    NK_PANEL_WINDOW     = NK_FLAG(0),$/;"	e	enum:nk_panel_type
NK_PANEL_WINDOW	lib/nuklear/src/nuklear.h	/^    NK_PANEL_WINDOW     = NK_FLAG(0),$/;"	e	enum:nk_panel_type
NK_PI	lib/nuklear/nuklear.h	5613;"	d
NK_PI	lib/nuklear/src/nuklear.h	5394;"	d
NK_POINTER_TYPE	lib/nuklear/nuklear.h	338;"	d
NK_POINTER_TYPE	lib/nuklear/nuklear.h	383;"	d
NK_POINTER_TYPE	lib/nuklear/nuklear.h	385;"	d
NK_POINTER_TYPE	lib/nuklear/nuklear.h	388;"	d
NK_POINTER_TYPE	lib/nuklear/nuklear.h	390;"	d
NK_POINTER_TYPE	lib/nuklear/nuklear.h	393;"	d
NK_POINTER_TYPE	lib/nuklear/src/nuklear.h	119;"	d
NK_POINTER_TYPE	lib/nuklear/src/nuklear.h	164;"	d
NK_POINTER_TYPE	lib/nuklear/src/nuklear.h	166;"	d
NK_POINTER_TYPE	lib/nuklear/src/nuklear.h	169;"	d
NK_POINTER_TYPE	lib/nuklear/src/nuklear.h	171;"	d
NK_POINTER_TYPE	lib/nuklear/src/nuklear.h	174;"	d
NK_POOL_DEFAULT_CAPACITY	lib/nuklear/nuklear.h	5690;"	d
NK_POOL_DEFAULT_CAPACITY	lib/nuklear/src/nuklear_internal.h	5;"	d
NK_POPUP_DYNAMIC	lib/nuklear/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_DYNAMIC	lib/nuklear/src/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_STATIC	lib/nuklear/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_STATIC	lib/nuklear/src/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_PRINTF_FORMAT_STRING	lib/nuklear/nuklear.h	309;"	d
NK_PRINTF_FORMAT_STRING	lib/nuklear/nuklear.h	311;"	d
NK_PRINTF_FORMAT_STRING	lib/nuklear/src/nuklear.h	90;"	d
NK_PRINTF_FORMAT_STRING	lib/nuklear/src/nuklear.h	92;"	d
NK_PRINTF_VALIST_FUNC	lib/nuklear/nuklear.h	315;"	d
NK_PRINTF_VALIST_FUNC	lib/nuklear/nuklear.h	318;"	d
NK_PRINTF_VALIST_FUNC	lib/nuklear/src/nuklear.h	96;"	d
NK_PRINTF_VALIST_FUNC	lib/nuklear/src/nuklear.h	99;"	d
NK_PRINTF_VARARG_FUNC	lib/nuklear/nuklear.h	314;"	d
NK_PRINTF_VARARG_FUNC	lib/nuklear/nuklear.h	317;"	d
NK_PRINTF_VARARG_FUNC	lib/nuklear/src/nuklear.h	95;"	d
NK_PRINTF_VARARG_FUNC	lib/nuklear/src/nuklear.h	98;"	d
NK_PRIVATE	lib/nuklear/example/canvas.c	16;"	d	file:
NK_PROPERTY_DEFAULT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_DEFAULT,$/;"	e	enum:nk_property_status
NK_PROPERTY_DEFAULT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_DEFAULT,$/;"	e	enum:nk_property_status
NK_PROPERTY_DOUBLE	lib/nuklear/nuklear.h	/^    NK_PROPERTY_DOUBLE$/;"	e	enum:nk_property_kind
NK_PROPERTY_DOUBLE	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_DOUBLE$/;"	e	enum:nk_property_kind
NK_PROPERTY_DRAG	lib/nuklear/nuklear.h	/^    NK_PROPERTY_DRAG$/;"	e	enum:nk_property_status
NK_PROPERTY_DRAG	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_DRAG$/;"	e	enum:nk_property_status
NK_PROPERTY_EDIT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_EDIT,$/;"	e	enum:nk_property_status
NK_PROPERTY_EDIT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_EDIT,$/;"	e	enum:nk_property_status
NK_PROPERTY_FLOAT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_FLOAT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_FLOAT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_FLOAT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_INT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_INT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_INT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_INT,$/;"	e	enum:nk_property_kind
NK_PTR_TO_UINT	lib/nuklear/nuklear.h	5644;"	d
NK_PTR_TO_UINT	lib/nuklear/nuklear.h	5647;"	d
NK_PTR_TO_UINT	lib/nuklear/nuklear.h	5650;"	d
NK_PTR_TO_UINT	lib/nuklear/nuklear.h	5653;"	d
NK_PTR_TO_UINT	lib/nuklear/src/nuklear.h	5425;"	d
NK_PTR_TO_UINT	lib/nuklear/src/nuklear.h	5428;"	d
NK_PTR_TO_UINT	lib/nuklear/src/nuklear.h	5431;"	d
NK_PTR_TO_UINT	lib/nuklear/src/nuklear.h	5434;"	d
NK_RAWFB_H_	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	32;"	d
NK_RAWFB_IMPLEMENTATION	lib/nuklear/demo/x11_rawfb/main.c	44;"	d	file:
NK_RGB	lib/nuklear/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGB	lib/nuklear/src/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGBA	lib/nuklear/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGBA	lib/nuklear/src/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RIGHT	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_RIGHT	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_ROTL	lib/nuklear/nuklear.h	7236;"	d
NK_ROTL	lib/nuklear/nuklear.h	7293;"	d
NK_ROTL	lib/nuklear/src/nuklear_util.c	916;"	d	file:
NK_ROTL	lib/nuklear/src/nuklear_util.c	973;"	d	file:
NK_RP_HEURISTIC	lib/nuklear/nuklear.h	/^enum NK_RP_HEURISTIC {$/;"	g
NK_RP_HEURISTIC	lib/nuklear/src/nuklear_font.c	/^enum NK_RP_HEURISTIC {$/;"	g	file:
NK_RP_HEURISTIC_Skyline_BF_sortHeight	lib/nuklear/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_BF_sortHeight	lib/nuklear/src/nuklear_font.c	/^    NK_RP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:NK_RP_HEURISTIC	file:
NK_RP_HEURISTIC_Skyline_BL_sortHeight	lib/nuklear/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BL_sortHeight = NK_RP_HEURISTIC_Skyline_default,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_BL_sortHeight	lib/nuklear/src/nuklear_font.c	/^    NK_RP_HEURISTIC_Skyline_BL_sortHeight = NK_RP_HEURISTIC_Skyline_default,$/;"	e	enum:NK_RP_HEURISTIC	file:
NK_RP_HEURISTIC_Skyline_default	lib/nuklear/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_default=0,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_default	lib/nuklear/src/nuklear_font.c	/^    NK_RP_HEURISTIC_Skyline_default=0,$/;"	e	enum:NK_RP_HEURISTIC	file:
NK_RP_INIT_STATE	lib/nuklear/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	g
NK_RP_INIT_STATE	lib/nuklear/src/nuklear_font.c	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	g	file:
NK_RP__INIT_skyline	lib/nuklear/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	e	enum:NK_RP_INIT_STATE
NK_RP__INIT_skyline	lib/nuklear/src/nuklear_font.c	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	e	enum:NK_RP_INIT_STATE	file:
NK_RP__MAXVAL	lib/nuklear/nuklear.h	10563;"	d
NK_RP__MAXVAL	lib/nuklear/src/nuklear_font.c	12;"	d	file:
NK_SATURATE	lib/nuklear/nuklear.h	5618;"	d
NK_SATURATE	lib/nuklear/src/nuklear.h	5399;"	d
NK_SCHAR_MAX	lib/nuklear/nuklear.h	5757;"	d
NK_SCHAR_MAX	lib/nuklear/src/nuklear_internal.h	72;"	d
NK_SCHAR_MIN	lib/nuklear/nuklear.h	5756;"	d
NK_SCHAR_MIN	lib/nuklear/src/nuklear_internal.h	71;"	d
NK_SCROLLBAR_HIDING_TIMEOUT	lib/nuklear/nuklear.h	243;"	d
NK_SCROLLBAR_HIDING_TIMEOUT	lib/nuklear/src/nuklear.h	24;"	d
NK_SDL_GL2_H_	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	14;"	d
NK_SDL_GL2_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl2/main.c	24;"	d	file:
NK_SDL_GL3_H_	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	14;"	d
NK_SDL_GL3_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl3/main.c	25;"	d	file:
NK_SDL_GLES2_H_	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	16;"	d
NK_SDL_GLES2_IMPLEMENTATION	lib/nuklear/demo/sdl_opengles2/main.c	21;"	d	file:
NK_SEPARATOR_BONUS	lib/nuklear/nuklear.h	6644;"	d
NK_SEPARATOR_BONUS	lib/nuklear/src/nuklear_util.c	324;"	d	file:
NK_SFML_GL2_H_	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	14;"	d
NK_SFML_GL2_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl2/main.cpp	24;"	d	file:
NK_SFML_GL3_H_	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	14;"	d
NK_SFML_GL3_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl3/main.cpp	23;"	d	file:
NK_SHADER_64BIT	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	113;"	d
NK_SHADER_BINDLESS	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	112;"	d
NK_SHADER_VERSION	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	95;"	d
NK_SHADER_VERSION	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	97;"	d
NK_SHADER_VERSION	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	111;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	70;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	72;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	75;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	71;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	73;"	d
NK_SHADER_VERSION	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	200;"	d
NK_SHADER_VERSION	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	202;"	d
NK_SHADER_VERSION	lib/nuklear/example/canvas.c	41;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/extended.c	41;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/extended.c	43;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/file_browser.c	43;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/file_browser.c	45;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/skinning.c	41;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/skinning.c	43;"	d	file:
NK_SHOWN	lib/nuklear/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_SHOWN	lib/nuklear/src/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_SIN	lib/nuklear/nuklear.h	5726;"	d
NK_SIN	lib/nuklear/src/nuklear_internal.h	41;"	d
NK_SINGLE_FILE	lib/nuklear/nuklear.h	217;"	d
NK_SINT_MAX	lib/nuklear/nuklear.h	5765;"	d
NK_SINT_MAX	lib/nuklear/src/nuklear_internal.h	80;"	d
NK_SINT_MIN	lib/nuklear/nuklear.h	5764;"	d
NK_SINT_MIN	lib/nuklear/src/nuklear_internal.h	79;"	d
NK_SIZE_TYPE	lib/nuklear/nuklear.h	337;"	d
NK_SIZE_TYPE	lib/nuklear/nuklear.h	368;"	d
NK_SIZE_TYPE	lib/nuklear/nuklear.h	370;"	d
NK_SIZE_TYPE	lib/nuklear/nuklear.h	373;"	d
NK_SIZE_TYPE	lib/nuklear/nuklear.h	375;"	d
NK_SIZE_TYPE	lib/nuklear/nuklear.h	378;"	d
NK_SIZE_TYPE	lib/nuklear/src/nuklear.h	118;"	d
NK_SIZE_TYPE	lib/nuklear/src/nuklear.h	149;"	d
NK_SIZE_TYPE	lib/nuklear/src/nuklear.h	151;"	d
NK_SIZE_TYPE	lib/nuklear/src/nuklear.h	154;"	d
NK_SIZE_TYPE	lib/nuklear/src/nuklear.h	156;"	d
NK_SIZE_TYPE	lib/nuklear/src/nuklear.h	159;"	d
NK_SQRT	lib/nuklear/nuklear.h	5723;"	d
NK_SQRT	lib/nuklear/src/nuklear_internal.h	38;"	d
NK_SSHORT_MAX	lib/nuklear/nuklear.h	5761;"	d
NK_SSHORT_MAX	lib/nuklear/src/nuklear_internal.h	76;"	d
NK_SSHORT_MIN	lib/nuklear/nuklear.h	5760;"	d
NK_SSHORT_MIN	lib/nuklear/src/nuklear_internal.h	75;"	d
NK_STATIC	lib/nuklear/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_STATIC	lib/nuklear/src/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_STATIC_ASSERT	lib/nuklear/nuklear.h	291;"	d
NK_STATIC_ASSERT	lib/nuklear/src/nuklear.h	72;"	d
NK_STOP_ON_NEW_LINE	lib/nuklear/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anon136
NK_STOP_ON_NEW_LINE	lib/nuklear/src/nuklear_internal.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anon165
NK_STORAGE	lib/nuklear/nuklear.h	274;"	d
NK_STORAGE	lib/nuklear/src/nuklear.h	55;"	d
NK_STRINGIFY	lib/nuklear/nuklear.h	278;"	d
NK_STRINGIFY	lib/nuklear/src/nuklear.h	59;"	d
NK_STRING_JOIN	lib/nuklear/nuklear.h	282;"	d
NK_STRING_JOIN	lib/nuklear/src/nuklear.h	63;"	d
NK_STRING_JOIN_DELAY	lib/nuklear/nuklear.h	281;"	d
NK_STRING_JOIN_DELAY	lib/nuklear/src/nuklear.h	62;"	d
NK_STRING_JOIN_IMMEDIATE	lib/nuklear/nuklear.h	280;"	d
NK_STRING_JOIN_IMMEDIATE	lib/nuklear/src/nuklear.h	61;"	d
NK_STROKE_CLOSED	lib/nuklear/nuklear.h	/^    NK_STROKE_CLOSED = nk_true$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_CLOSED	lib/nuklear/src/nuklear.h	/^    NK_STROKE_CLOSED = nk_true$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_OPEN	lib/nuklear/nuklear.h	/^    NK_STROKE_OPEN = nk_false,$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_OPEN	lib/nuklear/src/nuklear.h	/^    NK_STROKE_OPEN = nk_false,$/;"	e	enum:nk_draw_list_stroke
NK_STRTOD	lib/nuklear/nuklear.h	5732;"	d
NK_STRTOD	lib/nuklear/src/nuklear_internal.h	47;"	d
NK_STYLE_ITEM_COLOR	lib/nuklear/nuklear.h	/^    NK_STYLE_ITEM_COLOR,$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_COLOR	lib/nuklear/src/nuklear.h	/^    NK_STYLE_ITEM_COLOR,$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_IMAGE	lib/nuklear/nuklear.h	/^    NK_STYLE_ITEM_IMAGE$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_IMAGE	lib/nuklear/src/nuklear.h	/^    NK_STYLE_ITEM_IMAGE$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_STACK_SIZE	lib/nuklear/nuklear.h	5469;"	d
NK_STYLE_ITEM_STACK_SIZE	lib/nuklear/src/nuklear.h	5250;"	d
NK_STYLE_POP_IMPLEMENATION	lib/nuklear/nuklear.h	14886;"	d
NK_STYLE_POP_IMPLEMENATION	lib/nuklear/src/nuklear_style.c	693;"	d	file:
NK_STYLE_PUSH_IMPLEMENATION	lib/nuklear/nuklear.h	14869;"	d
NK_STYLE_PUSH_IMPLEMENATION	lib/nuklear/src/nuklear_style.c	/^NK_API int NK_STYLE_PUSH_IMPLEMENATION(nk,flags, flags)$/;"	f
NK_STYLE_PUSH_IMPLEMENATION	lib/nuklear/src/nuklear_style.c	676;"	d	file:
NK_SYMBOL_CIRCLE_OUTLINE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_CIRCLE_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_OUTLINE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_CIRCLE_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_SOLID	lib/nuklear/nuklear.h	/^    NK_SYMBOL_CIRCLE_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_SOLID	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_CIRCLE_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MAX	lib/nuklear/nuklear.h	/^    NK_SYMBOL_MAX$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MAX	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_MAX$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MINUS	lib/nuklear/nuklear.h	/^    NK_SYMBOL_MINUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MINUS	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_MINUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_NONE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_NONE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_NONE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_NONE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_PLUS	lib/nuklear/nuklear.h	/^    NK_SYMBOL_PLUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_PLUS	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_PLUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_OUTLINE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_RECT_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_OUTLINE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_RECT_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_SOLID	lib/nuklear/nuklear.h	/^    NK_SYMBOL_RECT_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_SOLID	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_RECT_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_DOWN	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_DOWN,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_DOWN	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_DOWN,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_LEFT	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_LEFT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_LEFT	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_LEFT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_RIGHT	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_RIGHT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_RIGHT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_UP	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_UP,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_UP	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_UP,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_UNDERSCORE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_UNDERSCORE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_UNDERSCORE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_UNDERSCORE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_X	lib/nuklear/nuklear.h	/^    NK_SYMBOL_X,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_X	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_X,$/;"	e	enum:nk_symbol_type
NK_TEXTEDIT_UNDOCHARCOUNT	lib/nuklear/nuklear.h	4243;"	d
NK_TEXTEDIT_UNDOCHARCOUNT	lib/nuklear/src/nuklear.h	4024;"	d
NK_TEXTEDIT_UNDOSTATECOUNT	lib/nuklear/nuklear.h	4239;"	d
NK_TEXTEDIT_UNDOSTATECOUNT	lib/nuklear/src/nuklear.h	4020;"	d
NK_TEXT_ALIGN_BOTTOM	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_BOTTOM      = 0x20$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_BOTTOM	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_BOTTOM      = 0x20$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_CENTERED	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_CENTERED    = 0x02,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_CENTERED	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_CENTERED    = 0x02,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_LEFT	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_LEFT        = 0x01,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_LEFT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_LEFT        = 0x01,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_MIDDLE	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_MIDDLE      = 0x10,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_MIDDLE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_MIDDLE      = 0x10,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_RIGHT	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_RIGHT       = 0x04,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_RIGHT       = 0x04,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_TOP	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_TOP         = 0x08,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_TOP	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_TOP         = 0x08,$/;"	e	enum:nk_text_align
NK_TEXT_CENTERED	lib/nuklear/nuklear.h	/^    NK_TEXT_CENTERED    = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_CENTERED,$/;"	e	enum:nk_text_alignment
NK_TEXT_CENTERED	lib/nuklear/src/nuklear.h	/^    NK_TEXT_CENTERED    = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_CENTERED,$/;"	e	enum:nk_text_alignment
NK_TEXT_EDIT_MODE_INSERT	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MODE_INSERT,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_INSERT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MODE_INSERT,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_REPLACE	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MODE_REPLACE$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_REPLACE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MODE_REPLACE$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_VIEW	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MODE_VIEW,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_VIEW	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MODE_VIEW,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MULTI_LINE	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MULTI_LINE$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_MULTI_LINE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MULTI_LINE$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_SINGLE_LINE	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_SINGLE_LINE,$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_SINGLE_LINE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_SINGLE_LINE,$/;"	e	enum:nk_text_edit_type
NK_TEXT_HAS_SELECTION	lib/nuklear/nuklear.h	21722;"	d
NK_TEXT_HAS_SELECTION	lib/nuklear/src/nuklear_text_editor.c	31;"	d	file:
NK_TEXT_LEFT	lib/nuklear/nuklear.h	/^    NK_TEXT_LEFT        = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_LEFT,$/;"	e	enum:nk_text_alignment
NK_TEXT_LEFT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_LEFT        = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_LEFT,$/;"	e	enum:nk_text_alignment
NK_TEXT_RIGHT	lib/nuklear/nuklear.h	/^    NK_TEXT_RIGHT       = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_RIGHT$/;"	e	enum:nk_text_alignment
NK_TEXT_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_RIGHT       = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_RIGHT$/;"	e	enum:nk_text_alignment
NK_TLOOP	lib/nuklear/nuklear.h	6348;"	d
NK_TLOOP	lib/nuklear/nuklear.h	6387;"	d
NK_TLOOP	lib/nuklear/src/nuklear_util.c	28;"	d	file:
NK_TLOOP	lib/nuklear/src/nuklear_util.c	67;"	d	file:
NK_TLOOP1	lib/nuklear/nuklear.h	6349;"	d
NK_TLOOP1	lib/nuklear/nuklear.h	6388;"	d
NK_TLOOP1	lib/nuklear/src/nuklear_util.c	29;"	d	file:
NK_TLOOP1	lib/nuklear/src/nuklear_util.c	68;"	d	file:
NK_TOGGLE_CHECK	lib/nuklear/nuklear.h	/^    NK_TOGGLE_CHECK,$/;"	e	enum:nk_toggle_type
NK_TOGGLE_CHECK	lib/nuklear/src/nuklear_internal.h	/^    NK_TOGGLE_CHECK,$/;"	e	enum:nk_toggle_type
NK_TOGGLE_OPTION	lib/nuklear/nuklear.h	/^    NK_TOGGLE_OPTION$/;"	e	enum:nk_toggle_type
NK_TOGGLE_OPTION	lib/nuklear/src/nuklear_internal.h	/^    NK_TOGGLE_OPTION$/;"	e	enum:nk_toggle_type
NK_TO_HEX	lib/nuklear/nuklear.h	7502;"	d
NK_TO_HEX	lib/nuklear/nuklear.h	7512;"	d
NK_TO_HEX	lib/nuklear/nuklear.h	7517;"	d
NK_TO_HEX	lib/nuklear/nuklear.h	7525;"	d
NK_TO_HEX	lib/nuklear/src/nuklear_color.c	62;"	d	file:
NK_TO_HEX	lib/nuklear/src/nuklear_color.c	72;"	d	file:
NK_TO_HEX	lib/nuklear/src/nuklear_color.c	77;"	d	file:
NK_TO_HEX	lib/nuklear/src/nuklear_color.c	85;"	d	file:
NK_TREE_NODE	lib/nuklear/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_NODE	lib/nuklear/src/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_TAB	lib/nuklear/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_TAB	lib/nuklear/src/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TT_MACSTYLE_BOLD	lib/nuklear/nuklear.h	11025;"	d
NK_TT_MACSTYLE_BOLD	lib/nuklear/src/nuklear_font.c	474;"	d	file:
NK_TT_MACSTYLE_DONTCARE	lib/nuklear/nuklear.h	11024;"	d
NK_TT_MACSTYLE_DONTCARE	lib/nuklear/src/nuklear_font.c	473;"	d	file:
NK_TT_MACSTYLE_ITALIC	lib/nuklear/nuklear.h	11026;"	d
NK_TT_MACSTYLE_ITALIC	lib/nuklear/src/nuklear_font.c	475;"	d	file:
NK_TT_MACSTYLE_NONE	lib/nuklear/nuklear.h	11028;"	d
NK_TT_MACSTYLE_NONE	lib/nuklear/src/nuklear_font.c	477;"	d	file:
NK_TT_MACSTYLE_UNDERSCORE	lib/nuklear/nuklear.h	11027;"	d
NK_TT_MACSTYLE_UNDERSCORE	lib/nuklear/src/nuklear_font.c	476;"	d	file:
NK_TT_MAC_EID_ARABIC	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon141
NK_TT_MAC_EID_ARABIC	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon170	file:
NK_TT_MAC_EID_CHINESE_TRAD	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon141
NK_TT_MAC_EID_CHINESE_TRAD	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon170	file:
NK_TT_MAC_EID_GREEK	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon141
NK_TT_MAC_EID_GREEK	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon170	file:
NK_TT_MAC_EID_HEBREW	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon141
NK_TT_MAC_EID_HEBREW	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon170	file:
NK_TT_MAC_EID_JAPANESE	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon141
NK_TT_MAC_EID_JAPANESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon170	file:
NK_TT_MAC_EID_KOREAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon141
NK_TT_MAC_EID_KOREAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon170	file:
NK_TT_MAC_EID_ROMAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon141
NK_TT_MAC_EID_ROMAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon170	file:
NK_TT_MAC_EID_RUSSIAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon141
NK_TT_MAC_EID_RUSSIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon170	file:
NK_TT_MAC_LANG_ARABIC	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_ARABIC	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_CHINESE_SIMPLIFIED	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_CHINESE_SIMPLIFIED	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_CHINESE_TRAD	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon143
NK_TT_MAC_LANG_CHINESE_TRAD	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_DUTCH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_DUTCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_ENGLISH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_ENGLISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_FRENCH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_FRENCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_GERMAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_GERMAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_HEBREW	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_HEBREW	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_ITALIAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon143
NK_TT_MAC_LANG_ITALIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_JAPANESE	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_JAPANESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_KOREAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_KOREAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_RUSSIAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_RUSSIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_SPANISH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_SPANISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon172	file:
NK_TT_MAC_LANG_SWEDISH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon143
NK_TT_MAC_LANG_SWEDISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon172	file:
NK_TT_MAX_OVERSAMPLE	lib/nuklear/nuklear.h	10931;"	d
NK_TT_MAX_OVERSAMPLE	lib/nuklear/src/nuklear_font.c	380;"	d	file:
NK_TT_MS_EID_SHIFTJIS	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon140
NK_TT_MS_EID_SHIFTJIS	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon169	file:
NK_TT_MS_EID_SYMBOL	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon140
NK_TT_MS_EID_SYMBOL	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon169	file:
NK_TT_MS_EID_UNICODE_BMP	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon140
NK_TT_MS_EID_UNICODE_BMP	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon169	file:
NK_TT_MS_EID_UNICODE_FULL	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon140
NK_TT_MS_EID_UNICODE_FULL	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon169	file:
NK_TT_MS_LANG_CHINESE	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon142
NK_TT_MS_LANG_CHINESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_DUTCH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon142
NK_TT_MS_LANG_DUTCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_ENGLISH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon142
NK_TT_MS_LANG_ENGLISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_FRENCH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon142
NK_TT_MS_LANG_FRENCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_GERMAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon142
NK_TT_MS_LANG_GERMAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_HEBREW	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon142
NK_TT_MS_LANG_HEBREW	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_ITALIAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon142
NK_TT_MS_LANG_ITALIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_JAPANESE	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon142
NK_TT_MS_LANG_JAPANESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_KOREAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon142
NK_TT_MS_LANG_KOREAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_RUSSIAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon142
NK_TT_MS_LANG_RUSSIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_SPANISH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon142
NK_TT_MS_LANG_SPANISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon171	file:
NK_TT_MS_LANG_SWEDISH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon142
NK_TT_MS_LANG_SWEDISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon171	file:
NK_TT_PLATFORM_ID_ISO	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon138
NK_TT_PLATFORM_ID_ISO	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon167	file:
NK_TT_PLATFORM_ID_MAC	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon138
NK_TT_PLATFORM_ID_MAC	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon167	file:
NK_TT_PLATFORM_ID_MICROSOFT	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon138
NK_TT_PLATFORM_ID_MICROSOFT	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon167	file:
NK_TT_PLATFORM_ID_UNICODE	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon138
NK_TT_PLATFORM_ID_UNICODE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon167	file:
NK_TT_UNICODE_EID_ISO_10646	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon139
NK_TT_UNICODE_EID_ISO_10646	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon168	file:
NK_TT_UNICODE_EID_UNICODE_1_0	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon139
NK_TT_UNICODE_EID_UNICODE_1_0	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon168	file:
NK_TT_UNICODE_EID_UNICODE_1_1	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon139
NK_TT_UNICODE_EID_UNICODE_1_1	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon168	file:
NK_TT_UNICODE_EID_UNICODE_2_0_BMP	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon139
NK_TT_UNICODE_EID_UNICODE_2_0_BMP	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon168	file:
NK_TT_UNICODE_EID_UNICODE_2_0_FULL	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon139
NK_TT_UNICODE_EID_UNICODE_2_0_FULL	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon168	file:
NK_TT__COMPARE	lib/nuklear/nuklear.h	11957;"	d
NK_TT__COMPARE	lib/nuklear/src/nuklear_font.c	1406;"	d	file:
NK_TT__OVER_MASK	lib/nuklear/nuklear.h	10932;"	d
NK_TT__OVER_MASK	lib/nuklear/src/nuklear_font.c	381;"	d	file:
NK_TT_vcurve	lib/nuklear/nuklear.h	/^  NK_TT_vcurve$/;"	e	enum:__anon137
NK_TT_vcurve	lib/nuklear/src/nuklear_font.c	/^  NK_TT_vcurve$/;"	e	enum:__anon166	file:
NK_TT_vline	lib/nuklear/nuklear.h	/^  NK_TT_vline,$/;"	e	enum:__anon137
NK_TT_vline	lib/nuklear/src/nuklear_font.c	/^  NK_TT_vline,$/;"	e	enum:__anon166	file:
NK_TT_vmove	lib/nuklear/nuklear.h	/^  NK_TT_vmove=1,$/;"	e	enum:__anon137
NK_TT_vmove	lib/nuklear/src/nuklear_font.c	/^  NK_TT_vmove=1,$/;"	e	enum:__anon166	file:
NK_UCHAR_MAX	lib/nuklear/nuklear.h	5759;"	d
NK_UCHAR_MAX	lib/nuklear/src/nuklear_internal.h	74;"	d
NK_UCHAR_MIN	lib/nuklear/nuklear.h	5758;"	d
NK_UCHAR_MIN	lib/nuklear/src/nuklear_internal.h	73;"	d
NK_UINT16	lib/nuklear/nuklear.h	334;"	d
NK_UINT16	lib/nuklear/nuklear.h	350;"	d
NK_UINT16	lib/nuklear/src/nuklear.h	115;"	d
NK_UINT16	lib/nuklear/src/nuklear.h	131;"	d
NK_UINT32	lib/nuklear/nuklear.h	336;"	d
NK_UINT32	lib/nuklear/nuklear.h	361;"	d
NK_UINT32	lib/nuklear/nuklear.h	363;"	d
NK_UINT32	lib/nuklear/src/nuklear.h	117;"	d
NK_UINT32	lib/nuklear/src/nuklear.h	142;"	d
NK_UINT32	lib/nuklear/src/nuklear.h	144;"	d
NK_UINT8	lib/nuklear/nuklear.h	332;"	d
NK_UINT8	lib/nuklear/nuklear.h	344;"	d
NK_UINT8	lib/nuklear/src/nuklear.h	113;"	d
NK_UINT8	lib/nuklear/src/nuklear.h	125;"	d
NK_UINT_MAX	lib/nuklear/nuklear.h	5767;"	d
NK_UINT_MAX	lib/nuklear/src/nuklear_internal.h	82;"	d
NK_UINT_MIN	lib/nuklear/nuklear.h	5766;"	d
NK_UINT_MIN	lib/nuklear/src/nuklear_internal.h	81;"	d
NK_UINT_TO_PTR	lib/nuklear/nuklear.h	5643;"	d
NK_UINT_TO_PTR	lib/nuklear/nuklear.h	5646;"	d
NK_UINT_TO_PTR	lib/nuklear/nuklear.h	5649;"	d
NK_UINT_TO_PTR	lib/nuklear/nuklear.h	5652;"	d
NK_UINT_TO_PTR	lib/nuklear/src/nuklear.h	5424;"	d
NK_UINT_TO_PTR	lib/nuklear/src/nuklear.h	5427;"	d
NK_UINT_TO_PTR	lib/nuklear/src/nuklear.h	5430;"	d
NK_UINT_TO_PTR	lib/nuklear/src/nuklear.h	5433;"	d
NK_UNDEFINED	lib/nuklear/nuklear.h	233;"	d
NK_UNDEFINED	lib/nuklear/src/nuklear.h	14;"	d
NK_UNIQUE_NAME	lib/nuklear/nuklear.h	285;"	d
NK_UNIQUE_NAME	lib/nuklear/nuklear.h	287;"	d
NK_UNIQUE_NAME	lib/nuklear/src/nuklear.h	66;"	d
NK_UNIQUE_NAME	lib/nuklear/src/nuklear.h	68;"	d
NK_UNMATCHED_LETTER_PENALTY	lib/nuklear/nuklear.h	6652;"	d
NK_UNMATCHED_LETTER_PENALTY	lib/nuklear/src/nuklear_util.c	332;"	d	file:
NK_UNUSED	lib/nuklear/nuklear.h	5617;"	d
NK_UNUSED	lib/nuklear/src/nuklear.h	5398;"	d
NK_UP	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_UP	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_USHORT_MAX	lib/nuklear/nuklear.h	5763;"	d
NK_USHORT_MAX	lib/nuklear/src/nuklear_internal.h	78;"	d
NK_USHORT_MIN	lib/nuklear/nuklear.h	5762;"	d
NK_USHORT_MIN	lib/nuklear/src/nuklear_internal.h	77;"	d
NK_UTF_INVALID	lib/nuklear/nuklear.h	234;"	d
NK_UTF_INVALID	lib/nuklear/nuklear.h	5614;"	d
NK_UTF_INVALID	lib/nuklear/src/nuklear.h	15;"	d
NK_UTF_INVALID	lib/nuklear/src/nuklear.h	5395;"	d
NK_UTF_SIZE	lib/nuklear/nuklear.h	235;"	d
NK_UTF_SIZE	lib/nuklear/src/nuklear.h	16;"	d
NK_VALUE_PAGE_CAPACITY	lib/nuklear/nuklear.h	5529;"	d
NK_VALUE_PAGE_CAPACITY	lib/nuklear/src/nuklear.h	5310;"	d
NK_VECTOR_STACK_SIZE	lib/nuklear/nuklear.h	5477;"	d
NK_VECTOR_STACK_SIZE	lib/nuklear/src/nuklear.h	5258;"	d
NK_VERTEX_ATTRIBUTE_COUNT	lib/nuklear/nuklear.h	/^    NK_VERTEX_ATTRIBUTE_COUNT$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_ATTRIBUTE_COUNT	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_ATTRIBUTE_COUNT$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_COLOR	lib/nuklear/nuklear.h	/^    NK_VERTEX_COLOR,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_COLOR	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_COLOR,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_LAYOUT_END	lib/nuklear/nuklear.h	4712;"	d
NK_VERTEX_LAYOUT_END	lib/nuklear/src/nuklear.h	4493;"	d
NK_VERTEX_POSITION	lib/nuklear/nuklear.h	/^    NK_VERTEX_POSITION,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_POSITION	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_POSITION,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_TEXCOORD	lib/nuklear/nuklear.h	/^    NK_VERTEX_TEXCOORD,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_TEXCOORD	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_TEXCOORD,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTICAL	lib/nuklear/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_VERTICAL	lib/nuklear/src/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_VSNPRINTF	lib/nuklear/nuklear.h	5750;"	d
NK_VSNPRINTF	lib/nuklear/nuklear.h	5752;"	d
NK_VSNPRINTF	lib/nuklear/src/nuklear_internal.h	65;"	d
NK_VSNPRINTF	lib/nuklear/src/nuklear_internal.h	67;"	d
NK_WIDGET_INVALID	lib/nuklear/nuklear.h	/^    NK_WIDGET_INVALID, \/* The widget cannot be seen and is completely out of view *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_INVALID	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_INVALID, \/* The widget cannot be seen and is completely out of view *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_ROM	lib/nuklear/nuklear.h	/^    NK_WIDGET_ROM \/* The widget is partially visible and cannot be updated *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_ROM	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_ROM \/* The widget is partially visible and cannot be updated *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_STATE_ACTIVE	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_ACTIVE      = NK_WIDGET_STATE_ACTIVED|NK_WIDGET_STATE_MODIFIED \/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_ACTIVE      = NK_WIDGET_STATE_ACTIVED|NK_WIDGET_STATE_MODIFIED \/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_ACTIVED     = NK_FLAG(5),\/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_ACTIVED     = NK_FLAG(5),\/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ENTERED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_ENTERED     = NK_FLAG(3), \/* widget has been hovered on the current frame *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ENTERED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_ENTERED     = NK_FLAG(3), \/* widget has been hovered on the current frame *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVER	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_HOVER       = NK_FLAG(4), \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVER	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_HOVER       = NK_FLAG(4), \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVERED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_HOVERED     = NK_WIDGET_STATE_HOVER|NK_WIDGET_STATE_MODIFIED, \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVERED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_HOVERED     = NK_WIDGET_STATE_HOVER|NK_WIDGET_STATE_MODIFIED, \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_INACTIVE	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_INACTIVE    = NK_FLAG(2), \/* widget is neither active nor hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_INACTIVE	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_INACTIVE    = NK_FLAG(2), \/* widget is neither active nor hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_LEFT	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_LEFT        = NK_FLAG(6), \/* widget is from this frame on not hovered anymore *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_LEFT	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_LEFT        = NK_FLAG(6), \/* widget is from this frame on not hovered anymore *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_MODIFIED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_MODIFIED    = NK_FLAG(1),$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_MODIFIED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_MODIFIED    = NK_FLAG(1),$/;"	e	enum:nk_widget_states
NK_WIDGET_VALID	lib/nuklear/nuklear.h	/^    NK_WIDGET_VALID, \/* The widget is completely inside the window and can be updated and drawn *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_VALID	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_VALID, \/* The widget is completely inside the window and can be updated and drawn *\/$/;"	e	enum:nk_widget_layout_states
NK_WINDOW_BACKGROUND	lib/nuklear/nuklear.h	/^    NK_WINDOW_BACKGROUND        = NK_FLAG(8),$/;"	e	enum:nk_panel_flags
NK_WINDOW_BACKGROUND	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_BACKGROUND        = NK_FLAG(8),$/;"	e	enum:nk_panel_flags
NK_WINDOW_BORDER	lib/nuklear/nuklear.h	/^    NK_WINDOW_BORDER            = NK_FLAG(0),$/;"	e	enum:nk_panel_flags
NK_WINDOW_BORDER	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_BORDER            = NK_FLAG(0),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_CLOSABLE          = NK_FLAG(3),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_CLOSABLE          = NK_FLAG(3),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSED	lib/nuklear/nuklear.h	/^    NK_WINDOW_CLOSED        = NK_FLAG(14),$/;"	e	enum:nk_window_flags
NK_WINDOW_CLOSED	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_CLOSED        = NK_FLAG(14),$/;"	e	enum:nk_window_flags
NK_WINDOW_DYNAMIC	lib/nuklear/nuklear.h	/^    NK_WINDOW_DYNAMIC       = NK_WINDOW_PRIVATE,$/;"	e	enum:nk_window_flags
NK_WINDOW_DYNAMIC	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_DYNAMIC       = NK_WINDOW_PRIVATE,$/;"	e	enum:nk_window_flags
NK_WINDOW_HIDDEN	lib/nuklear/nuklear.h	/^    NK_WINDOW_HIDDEN        = NK_FLAG(13),$/;"	e	enum:nk_window_flags
NK_WINDOW_HIDDEN	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_HIDDEN        = NK_FLAG(13),$/;"	e	enum:nk_window_flags
NK_WINDOW_MAX_NAME	lib/nuklear/nuklear.h	5348;"	d
NK_WINDOW_MAX_NAME	lib/nuklear/src/nuklear.h	5129;"	d
NK_WINDOW_MINIMIZABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_MINIMIZABLE       = NK_FLAG(4),$/;"	e	enum:nk_panel_flags
NK_WINDOW_MINIMIZABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_MINIMIZABLE       = NK_FLAG(4),$/;"	e	enum:nk_panel_flags
NK_WINDOW_MINIMIZED	lib/nuklear/nuklear.h	/^    NK_WINDOW_MINIMIZED     = NK_FLAG(15),$/;"	e	enum:nk_window_flags
NK_WINDOW_MINIMIZED	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_MINIMIZED     = NK_FLAG(15),$/;"	e	enum:nk_window_flags
NK_WINDOW_MOVABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_MOVABLE           = NK_FLAG(1),$/;"	e	enum:nk_panel_flags
NK_WINDOW_MOVABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_MOVABLE           = NK_FLAG(1),$/;"	e	enum:nk_panel_flags
NK_WINDOW_NOT_INTERACTIVE	lib/nuklear/nuklear.h	/^    NK_WINDOW_NOT_INTERACTIVE = NK_WINDOW_ROM|NK_WINDOW_NO_INPUT,$/;"	e	enum:nk_window_flags
NK_WINDOW_NOT_INTERACTIVE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_NOT_INTERACTIVE = NK_WINDOW_ROM|NK_WINDOW_NO_INPUT,$/;"	e	enum:nk_window_flags
NK_WINDOW_NO_INPUT	lib/nuklear/nuklear.h	/^    NK_WINDOW_NO_INPUT          = NK_FLAG(10)$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_INPUT	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_NO_INPUT          = NK_FLAG(10)$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_SCROLLBAR	lib/nuklear/nuklear.h	/^    NK_WINDOW_NO_SCROLLBAR      = NK_FLAG(5),$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_SCROLLBAR	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_NO_SCROLLBAR      = NK_FLAG(5),$/;"	e	enum:nk_panel_flags
NK_WINDOW_PRIVATE	lib/nuklear/nuklear.h	/^    NK_WINDOW_PRIVATE       = NK_FLAG(11),$/;"	e	enum:nk_window_flags
NK_WINDOW_PRIVATE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_PRIVATE       = NK_FLAG(11),$/;"	e	enum:nk_window_flags
NK_WINDOW_REMOVE_ROM	lib/nuklear/nuklear.h	/^    NK_WINDOW_REMOVE_ROM    = NK_FLAG(16)$/;"	e	enum:nk_window_flags
NK_WINDOW_REMOVE_ROM	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_REMOVE_ROM    = NK_FLAG(16)$/;"	e	enum:nk_window_flags
NK_WINDOW_ROM	lib/nuklear/nuklear.h	/^    NK_WINDOW_ROM           = NK_FLAG(12),$/;"	e	enum:nk_window_flags
NK_WINDOW_ROM	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_ROM           = NK_FLAG(12),$/;"	e	enum:nk_window_flags
NK_WINDOW_SCALABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_SCALABLE          = NK_FLAG(2),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_SCALABLE          = NK_FLAG(2),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALE_LEFT	lib/nuklear/nuklear.h	/^    NK_WINDOW_SCALE_LEFT        = NK_FLAG(9),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALE_LEFT	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_SCALE_LEFT        = NK_FLAG(9),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCROLL_AUTO_HIDE	lib/nuklear/nuklear.h	/^    NK_WINDOW_SCROLL_AUTO_HIDE  = NK_FLAG(7),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCROLL_AUTO_HIDE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_SCROLL_AUTO_HIDE  = NK_FLAG(7),$/;"	e	enum:nk_panel_flags
NK_WINDOW_TITLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_TITLE             = NK_FLAG(6),$/;"	e	enum:nk_panel_flags
NK_WINDOW_TITLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_TITLE             = NK_FLAG(6),$/;"	e	enum:nk_panel_flags
NK_X11_DOUBLE_CLICK_HI	lib/nuklear/demo/x11/nuklear_xlib.h	71;"	d
NK_X11_DOUBLE_CLICK_HI	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	52;"	d
NK_X11_DOUBLE_CLICK_HI	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	55;"	d
NK_X11_DOUBLE_CLICK_HI	lib/nuklear/demo/x11_xft/nuklear_xlib.h	79;"	d
NK_X11_DOUBLE_CLICK_LO	lib/nuklear/demo/x11/nuklear_xlib.h	68;"	d
NK_X11_DOUBLE_CLICK_LO	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	49;"	d
NK_X11_DOUBLE_CLICK_LO	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	52;"	d
NK_X11_DOUBLE_CLICK_LO	lib/nuklear/demo/x11_xft/nuklear_xlib.h	76;"	d
NK_XLIBSHM_H_	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	34;"	d
NK_XLIBSHM_IMPLEMENTATION	lib/nuklear/demo/x11_rawfb/main.c	43;"	d	file:
NK_XLIB_GL2_H_	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	14;"	d
NK_XLIB_GL2_IMPLEMENTATION	lib/nuklear/demo/x11_opengl2/main.c	24;"	d	file:
NK_XLIB_GL3_H_	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	14;"	d
NK_XLIB_GL3_IMPLEMENTATION	lib/nuklear/demo/x11_opengl3/main.c	21;"	d	file:
NK_XLIB_H_	lib/nuklear/demo/x11/nuklear_xlib.h	14;"	d
NK_XLIB_H_	lib/nuklear/demo/x11_xft/nuklear_xlib.h	14;"	d
NK_XLIB_IMPLEMENTATION	lib/nuklear/demo/x11/main.c	18;"	d	file:
NK_XLIB_IMPLEMENTATION	lib/nuklear/demo/x11_xft/main.c	18;"	d	file:
NK_XLIB_LOAD_OPENGL_EXTENSIONS	lib/nuklear/demo/x11_opengl3/main.c	22;"	d	file:
NUM_BACK_BUFFERS	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static int const                    NUM_BACK_BUFFERS = 3;$/;"	v	file:
NUM_FRAMES_IN_FLIGHT	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static int const                    NUM_FRAMES_IN_FLIGHT = 3;$/;"	v	file:
Name	lib/cimgui/cimgui.h	/^    char Name[40];$/;"	m	struct:ImFontConfig
Name	lib/cimgui/generator/output/cimgui.h	/^    char Name[40];$/;"	m	struct:ImFontConfig
Name	lib/cimgui/imgui/imgui.h	/^    char            Name[40];               \/\/ Name (strictly to ease debugging)$/;"	m	struct:ImFontConfig
Name	lib/cimgui/imgui/imgui_demo.cpp	/^    const char* Name;           \/\/ Document title$/;"	m	struct:MyDocument	file:
Name	lib/cimgui/imgui/imgui_internal.h	/^    char*                   Name;                               \/\/ Window name, owned by the window.$/;"	m	struct:ImGuiWindow
NameBufLen	lib/cimgui/imgui/imgui_internal.h	/^    int                     NameBufLen;                         \/\/ Size of buffer storing Name. May be larger than strlen(Name)!$/;"	m	struct:ImGuiWindow
NameOffset	lib/cimgui/imgui/imgui_internal.h	/^    int                 NameOffset;             \/\/ When Window==NULL, offset to name within parent ImGuiTabBar::TabsNames$/;"	m	struct:ImGuiTabItem
NavActivateDownId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavActivateDownId;                  \/\/ ~~ IsNavInputDown(ImGuiNavInput_Activate) ? NavId : 0$/;"	m	struct:ImGuiContext
NavActivateId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavActivateId;                      \/\/ ~~ (g.ActiveId == 0) && IsNavInputPressed(ImGuiNavInput_Activate) ? NavId : 0, also set when calling ActivateItem()$/;"	m	struct:ImGuiContext
NavActivatePressedId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavActivatePressedId;               \/\/ ~~ IsNavInputPressed(ImGuiNavInput_Activate) ? NavId : 0$/;"	m	struct:ImGuiContext
NavActive	lib/cimgui/cimgui.h	/^    bool NavActive;$/;"	m	struct:ImGuiIO
NavActive	lib/cimgui/generator/output/cimgui.h	/^    bool NavActive;$/;"	m	struct:ImGuiIO
NavActive	lib/cimgui/imgui/imgui.h	/^    bool        NavActive;                      \/\/ Directional navigation is currently allowed (will handle ImGuiKey_NavXXX events) = a window is focused and it doesn't use the ImGuiWindowFlags_NoNavInputs flag.$/;"	m	struct:ImGuiIO
NavAnyRequest	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavAnyRequest;                      \/\/ ~~ NavMoveRequest || NavInitRequest$/;"	m	struct:ImGuiContext
NavCalcPreferredRefPos	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 ImGui::NavCalcPreferredRefPos()$/;"	f	class:ImGui
NavClampRectToVisibleAreaForMoveDir	lib/cimgui/imgui/imgui.cpp	/^static void inline NavClampRectToVisibleAreaForMoveDir(ImGuiDir move_dir, ImRect& r, const ImRect& clip_rect)$/;"	f	file:
NavDisableHighlight	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavDisableHighlight;                \/\/ When user starts using mouse, we hide gamepad\/keyboard highlight (NB: but they are still available, which is why NavDisableHighlight isn't always != NavDisableMouseHover)$/;"	m	struct:ImGuiContext
NavDisableMouseHover	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavDisableMouseHover;               \/\/ When user starts using gamepad\/keyboard, we hide mouse hovering highlight until mouse is touched again.$/;"	m	struct:ImGuiContext
NavFocusScopeId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavFocusScopeId;$/;"	m	struct:ImGuiContext
NavFocusScopeIdCurrent	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavFocusScopeIdCurrent; \/\/ Current focus scope ID while appending$/;"	m	struct:ImGuiWindowTempData
NavHasScroll	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavHasScroll;           \/\/ Set when scrolling can be used (ScrollMax > 0.0f)$/;"	m	struct:ImGuiWindowTempData
NavHideHighlightOneFrame	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavHideHighlightOneFrame;$/;"	m	struct:ImGuiWindowTempData
NavId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavId;                              \/\/ Focused item for navigation$/;"	m	struct:ImGuiContext
NavIdIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavIdIsAlive;                       \/\/ Nav widget has been seen this frame ~~ NavRefRectRel is valid$/;"	m	struct:ImGuiContext
NavIdTabCounter	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavIdTabCounter;                    \/\/ == NavWindow->DC.FocusIdxTabCounter at time of NavId processing$/;"	m	struct:ImGuiContext
NavInitRequest	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavInitRequest;                     \/\/ Init request for appearing window to select first item$/;"	m	struct:ImGuiContext
NavInitRequestFromMove	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavInitRequestFromMove;$/;"	m	struct:ImGuiContext
NavInitResultId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavInitResultId;$/;"	m	struct:ImGuiContext
NavInitResultRectRel	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  NavInitResultRectRel;$/;"	m	struct:ImGuiContext
NavInitWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NavInitWindow(ImGuiWindow* window, bool force_reinit)$/;"	f	class:ImGui
NavInputId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavInputId;                         \/\/ ~~ IsNavInputPressed(ImGuiNavInput_Input) ? NavId : 0$/;"	m	struct:ImGuiContext
NavInputSource	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource        NavInputSource;                     \/\/ Keyboard or Gamepad mode? THIS WILL ONLY BE None or NavGamepad or NavKeyboard.$/;"	m	struct:ImGuiContext
NavInputs	lib/cimgui/cimgui.h	/^    float NavInputs[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavInputs	lib/cimgui/generator/output/cimgui.h	/^    float NavInputs[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavInputs	lib/cimgui/imgui/imgui.h	/^    float       NavInputs[ImGuiNavInput_COUNT]; \/\/ Gamepad inputs. Cleared back to zero by EndFrame(). Keyboard keys will be auto-mapped and be written here by NewFrame().$/;"	m	struct:ImGuiIO
NavInputsDownDuration	lib/cimgui/cimgui.h	/^    float NavInputsDownDuration[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavInputsDownDuration	lib/cimgui/generator/output/cimgui.h	/^    float NavInputsDownDuration[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavInputsDownDuration	lib/cimgui/imgui/imgui.h	/^    float       NavInputsDownDuration[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavInputsDownDurationPrev	lib/cimgui/cimgui.h	/^    float NavInputsDownDurationPrev[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavInputsDownDurationPrev	lib/cimgui/generator/output/cimgui.h	/^    float NavInputsDownDurationPrev[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavInputsDownDurationPrev	lib/cimgui/imgui/imgui.h	/^    float       NavInputsDownDurationPrev[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO
NavJustMovedToFocusScopeId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavJustMovedToFocusScopeId;         \/\/ Just navigated to this focus scope id (result of a successfully MoveRequest).$/;"	m	struct:ImGuiContext
NavJustMovedToId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavJustMovedToId;                   \/\/ Just navigated to this id (result of a successfully MoveRequest).$/;"	m	struct:ImGuiContext
NavJustTabbedId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavJustTabbedId;                    \/\/ Just tabbed to this id.$/;"	m	struct:ImGuiContext
NavLastChildNavWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavLastChildNavWindow;              \/\/ When going to the menu bar, we remember the child window we came from. (This could probably be made implicit if we kept g.Windows sorted by last focused including child window.)$/;"	m	struct:ImGuiWindow
NavLastIds	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavLastIds[ImGuiNavLayer_COUNT];    \/\/ Last known NavId for this window, per layer (0\/1)$/;"	m	struct:ImGuiWindow
NavLayer	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavLayer           NavLayer;                           \/\/ Layer we are navigating on. For now the system is hard-coded for 0=main contents and 1=menu\/title bar, may expose layers later.$/;"	m	struct:ImGuiContext
NavLayerActiveMask	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayerActiveMask;     \/\/ Which layer have been written to (result from previous frame)$/;"	m	struct:ImGuiWindowTempData
NavLayerActiveMaskNext	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayerActiveMaskNext; \/\/ Which layer have been written to (buffer for current frame)$/;"	m	struct:ImGuiWindowTempData
NavLayerCurrent	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavLayer           NavLayerCurrent;        \/\/ Current layer, 0..31 (we currently only use 0..1)$/;"	m	struct:ImGuiWindowTempData
NavLayerCurrentMask	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayerCurrentMask;    \/\/ = (1 << NavLayerCurrent) used by ItemAdd prior to clipping.$/;"	m	struct:ImGuiWindowTempData
NavMousePosDirty	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavMousePosDirty;                   \/\/ When set we will update mouse position if (io.ConfigFlags & ImGuiConfigFlags_NavEnableSetMousePos) if set (NB: this not enabled by default)$/;"	m	struct:ImGuiContext
NavMoveClipDir	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDir                NavMoveClipDir;                     \/\/ FIXME-NAV: Describe the purpose of this better. Might want to rename?$/;"	m	struct:ImGuiContext
NavMoveDir	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDir                NavMoveDir, NavMoveDirLast;         \/\/ Direction of the move request (left\/right\/up\/down), direction of the previous move request$/;"	m	struct:ImGuiContext
NavMoveDirLast	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDir                NavMoveDir, NavMoveDirLast;         \/\/ Direction of the move request (left\/right\/up\/down), direction of the previous move request$/;"	m	struct:ImGuiContext
NavMoveFromClampedRefRect	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavMoveFromClampedRefRect;          \/\/ Set by manual scrolling, if we scroll to a point where NavId isn't visible we reset navigation from visible items$/;"	m	struct:ImGuiContext
NavMoveRequest	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavMoveRequest;                     \/\/ Move request for this frame$/;"	m	struct:ImGuiContext
NavMoveRequestButNoResultYet	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::NavMoveRequestButNoResultYet()$/;"	f	class:ImGui
NavMoveRequestCancel	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NavMoveRequestCancel()$/;"	f	class:ImGui
NavMoveRequestFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveFlags       NavMoveRequestFlags;$/;"	m	struct:ImGuiContext
NavMoveRequestForward	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NavMoveRequestForward(ImGuiDir move_dir, ImGuiDir clip_dir, const ImRect& bb_rel, ImGuiNavMoveFlags move_flags)$/;"	f	class:ImGui
NavMoveRequestForward	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward         NavMoveRequestForward;              \/\/ None \/ ForwardQueued \/ ForwardActive (this is used to navigate sibling parent menus from a child menu)$/;"	m	struct:ImGuiContext
NavMoveRequestTryWrapping	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NavMoveRequestTryWrapping(ImGuiWindow* window, ImGuiNavMoveFlags move_flags)$/;"	f	class:ImGui
NavMoveResultLocal	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveResult      NavMoveResultLocal;                 \/\/ Best move request candidate within NavWindow$/;"	m	struct:ImGuiContext
NavMoveResultLocalVisibleSet	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveResult      NavMoveResultLocalVisibleSet;       \/\/ Best move request candidate within NavWindow that are mostly visible (when using ImGuiNavMoveFlags_AlsoScoreVisibleSet flag)$/;"	m	struct:ImGuiContext
NavMoveResultOther	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveResult      NavMoveResultOther;                 \/\/ Best move request candidate within NavWindow's flattened hierarchy (when using ImGuiWindowFlags_NavFlattened flag)$/;"	m	struct:ImGuiContext
NavNextActivateId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavNextActivateId;                  \/\/ Set by ActivateItem(), queued until next frame.$/;"	m	struct:ImGuiContext
NavProcessItem	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavProcessItem(ImGuiWindow* window, const ImRect& nav_bb, const ImGuiID id)$/;"	f	class:ImGui
NavRectRel	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  NavRectRel[ImGuiNavLayer_COUNT];    \/\/ Reference rectangle, in window relative space$/;"	m	struct:ImGuiWindow
NavRestoreLastChildNavWindow	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* ImGui::NavRestoreLastChildNavWindow(ImGuiWindow* window)$/;"	f	class:ImGui
NavRestoreLayer	lib/cimgui/imgui/imgui.cpp	/^static void NavRestoreLayer(ImGuiNavLayer layer)$/;"	f	file:
NavSaveLastChildNavWindowIntoParent	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavSaveLastChildNavWindowIntoParent(ImGuiWindow* nav_window)$/;"	f	class:ImGui
NavScoreItem	lib/cimgui/imgui/imgui.cpp	/^static bool ImGui::NavScoreItem(ImGuiNavMoveResult* result, ImRect cand)$/;"	f	class:ImGui
NavScoreItemDistInterval	lib/cimgui/imgui/imgui.cpp	/^static float inline NavScoreItemDistInterval(float a0, float a1, float b0, float b1)$/;"	f	file:
NavScoringCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavScoringCount;                    \/\/ Metrics for debugging$/;"	m	struct:ImGuiContext
NavScoringRectScreen	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  NavScoringRectScreen;               \/\/ Rectangle used for scoring, in screen space. Based of window->DC.NavRefRectRel[], modified for directional navigation scoring.$/;"	m	struct:ImGuiContext
NavUpdate	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavUpdate()$/;"	f	class:ImGui
NavUpdateAnyRequestFlag	lib/cimgui/imgui/imgui.cpp	/^static inline void ImGui::NavUpdateAnyRequestFlag()$/;"	f	class:ImGui
NavUpdateMoveResult	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavUpdateMoveResult()$/;"	f	class:ImGui
NavUpdatePageUpPageDown	lib/cimgui/imgui/imgui.cpp	/^static float ImGui::NavUpdatePageUpPageDown()$/;"	f	class:ImGui
NavUpdateWindowing	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavUpdateWindowing()$/;"	f	class:ImGui
NavUpdateWindowingHighlightWindow	lib/cimgui/imgui/imgui.cpp	/^static void NavUpdateWindowingHighlightWindow(int focus_change_dir)$/;"	f	file:
NavUpdateWindowingOverlay	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NavUpdateWindowingOverlay()$/;"	f	class:ImGui
NavVisible	lib/cimgui/cimgui.h	/^    bool NavVisible;$/;"	m	struct:ImGuiIO
NavVisible	lib/cimgui/generator/output/cimgui.h	/^    bool NavVisible;$/;"	m	struct:ImGuiIO
NavVisible	lib/cimgui/imgui/imgui.h	/^    bool        NavVisible;                     \/\/ Directional navigation is visible and allowed (will handle ImGuiKey_NavXXX events).$/;"	m	struct:ImGuiIO
NavWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavWindow;                          \/\/ Focused window for navigation. Could be called 'FocusWindow'$/;"	m	struct:ImGuiContext
NavWindowingHighlightAlpha	lib/cimgui/imgui/imgui_internal.h	/^    float                   NavWindowingHighlightAlpha;$/;"	m	struct:ImGuiContext
NavWindowingList	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavWindowingList;$/;"	m	struct:ImGuiContext
NavWindowingTarget	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavWindowingTarget;                 \/\/ When selecting a window (holding Menu+FocusPrev\/Next, or equivalent of CTRL-TAB) this window is temporarily displayed top-most.$/;"	m	struct:ImGuiContext
NavWindowingTargetAnim	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavWindowingTargetAnim;             \/\/ Record of last valid NavWindowingTarget until DimBgRatio and NavWindowingHighlightAlpha becomes 0.0f$/;"	m	struct:ImGuiContext
NavWindowingTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   NavWindowingTimer;$/;"	m	struct:ImGuiContext
NavWindowingToggleLayer	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavWindowingToggleLayer;$/;"	m	struct:ImGuiContext
NewFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NewFrame()$/;"	f	class:ImGui
NewFrameSanityChecks	lib/cimgui/imgui/imgui.cpp	/^static void NewFrameSanityChecks()$/;"	f	file:
NewLine	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::NewLine()$/;"	f	class:ImGui
NextColumn	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::NextColumn()$/;"	f	class:ImGui
NextItemData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextItemData       NextItemData;                       \/\/ Storage for SetNextItem** functions$/;"	m	struct:ImGuiContext
NextSelectedTabId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             NextSelectedTabId;$/;"	m	struct:ImGuiTabBar
NextWidth	lib/cimgui/imgui/imgui_internal.h	/^    float       Width, NextWidth;$/;"	m	struct:ImGuiMenuColumns
NextWidths	lib/cimgui/imgui/imgui_internal.h	/^    float       Pos[3], NextWidths[3];$/;"	m	struct:ImGuiMenuColumns
NextWindowData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowData     NextWindowData;                     \/\/ Storage for SetNextWindow** functions$/;"	m	struct:ImGuiContext
NkAllegro5Font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^struct NkAllegro5Font {$/;"	s
NkAllegro5Font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^typedef struct NkAllegro5Font NkAllegro5Font;$/;"	t	typeref:struct:NkAllegro5Font
NoAutoHint	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        NoAutoHint      = 1 << 1,   \/\/ Disable auto-hinter.$/;"	e	enum:ImGuiFreeType::RasterizerFlags
NoHinting	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        NoHinting       = 1 << 0,   \/\/ Disable hinting. This generally generates 'blurrier' bitmap glyphs when the glyph are rendered in any of the anti-aliased modes.$/;"	e	enum:ImGuiFreeType::RasterizerFlags
Node	lib/klib/cpp/kavl.hpp	/^	struct Node {$/;"	s	class:klib::Avl
NotificationHook	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    NotificationHookProc NotificationHook;$/;"	m	struct:__anon188
NotificationHookProc	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef Status (WINAPI *NotificationHookProc)(OUT ULONG_PTR *token);$/;"	t
NotificationUnhook	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    NotificationUnhookProc NotificationUnhook;$/;"	m	struct:__anon188
NotificationUnhookProc	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef VOID (WINAPI *NotificationUnhookProc)(ULONG_PTR token);$/;"	t
NotifyOfDocumentsClosedElsewhere	lib/cimgui/imgui/imgui_demo.cpp	/^static void NotifyOfDocumentsClosedElsewhere(ExampleAppDocuments& app)$/;"	f	file:
OBJ	lib/nuklear/demo/allegro5/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/glfw_opengl2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/glfw_opengl3/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/glfw_opengl4/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sdl_opengl2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sdl_opengl3/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sdl_opengles2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sfml_opengl2/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	lib/nuklear/demo/sfml_opengl3/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	lib/nuklear/demo/x11/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/x11_opengl2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/x11_opengl3/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/x11_rawfb/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/x11_xft/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/doc/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJS	lib/cimgui/Makefile	/^OBJS = cimgui.o$/;"	m
OBJS	lib/cimgui/imgui/examples/example_emscripten/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_glfw_metal/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_null/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_sdl_metal/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OUTPUTNAME	lib/cimgui/Makefile	/^	OUTPUTNAME = cimgui.dll$/;"	m
OUTPUTNAME	lib/cimgui/Makefile	/^	OUTPUTNAME = cimgui.dylib$/;"	m
OUTPUTNAME	lib/cimgui/Makefile	/^	OUTPUTNAME = cimgui.so$/;"	m
OUT_DIR	lib/cimgui/imgui/examples/example_sdl_directx11/build_win32.bat	/^set OUT_DIR=Debug$/;"	v
OUT_DIR	lib/cimgui/imgui/examples/example_sdl_opengl2/build_win32.bat	/^set OUT_DIR=Debug$/;"	v
OUT_DIR	lib/cimgui/imgui/examples/example_sdl_opengl3/build_win32.bat	/^set OUT_DIR=Debug$/;"	v
OUT_EXE	lib/cimgui/imgui/examples/example_sdl_directx11/build_win32.bat	/^set OUT_EXE=example_sdl_directx11$/;"	v
OUT_EXE	lib/cimgui/imgui/examples/example_sdl_opengl2/build_win32.bat	/^set OUT_EXE=example_sdl_opengl2$/;"	v
OUT_EXE	lib/cimgui/imgui/examples/example_sdl_opengl3/build_win32.bat	/^set OUT_EXE=example_sdl_opengl3$/;"	v
Oblique	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        Oblique         = 1 << 6,   \/\/ Styling: Should we slant the font, emulating italic style?$/;"	e	enum:ImGuiFreeType::RasterizerFlags
OffMaxX	lib/cimgui/imgui/imgui_internal.h	/^    float               OffMinX, OffMaxX;       \/\/ Offsets from HostWorkRect.Min.x$/;"	m	struct:ImGuiColumns
OffMinX	lib/cimgui/imgui/imgui_internal.h	/^    float               OffMinX, OffMaxX;       \/\/ Offsets from HostWorkRect.Min.x$/;"	m	struct:ImGuiColumns
Offset	lib/cimgui/imgui/imgui.cpp	/^    ImU32           Offset;$/;"	m	struct:ImGuiStyleVarInfo	file:
Offset	lib/cimgui/imgui/imgui_internal.h	/^    float               Offset;                 \/\/ Position relative to beginning of tab$/;"	m	struct:ImGuiTabItem
OffsetMax	lib/cimgui/imgui/imgui_internal.h	/^    float               OffsetMax;              \/\/ Distance from BarRect.Min.x, locked during layout$/;"	m	struct:ImGuiTabBar
OffsetMaxIdeal	lib/cimgui/imgui/imgui_internal.h	/^    float               OffsetMaxIdeal;         \/\/ Ideal offset if all tabs were visible and not clipped$/;"	m	struct:ImGuiTabBar
OffsetNextTab	lib/cimgui/imgui/imgui_internal.h	/^    float               OffsetNextTab;          \/\/ Distance from BarRect.Min.x, incremented with each BeginTabItem() call, not used if ImGuiTabBarFlags_Reorderable if set.$/;"	m	struct:ImGuiTabBar
OffsetNorm	lib/cimgui/imgui/imgui_internal.h	/^    float               OffsetNorm;         \/\/ Column start offset, normalized 0.0 (far left) -> 1.0 (far right)$/;"	m	struct:ImGuiColumnData
OffsetNormBeforeResize	lib/cimgui/imgui/imgui_internal.h	/^    float               OffsetNormBeforeResize;$/;"	m	struct:ImGuiColumnData
OffsetX	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Int      OffsetX;            \/\/ The distance from the origin ("pen position") to the left of the glyph.$/;"	m	struct:__anon112::GlyphInfo	file:
OffsetY	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Int      OffsetY;            \/\/ The distance from the origin to the top of the glyph. This is usually a value < 0.$/;"	m	struct:__anon112::GlyphInfo	file:
OnKeyPressed	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGuiInputTextState::OnKeyPressed(int key)$/;"	f	class:ImGuiInputTextState
Open	lib/cimgui/imgui/imgui_demo.cpp	/^    bool        Open;           \/\/ Set when the document is open (in this demo, we keep an array of all available documents to simplify the demo)$/;"	m	struct:MyDocument	file:
OpenCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond                   OpenCond;$/;"	m	struct:ImGuiNextItemData
OpenFrameCount	lib/cimgui/imgui/imgui_internal.h	/^    int                 OpenFrameCount; \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupData
OpenMousePos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2              OpenMousePos;   \/\/ Set on OpenPopup(), copy of mouse position at the time of opening popup$/;"	m	struct:ImGuiPopupData
OpenParentId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             OpenParentId;   \/\/ Set on OpenPopup(), we need this to differentiate multiple menu sets from each others (e.g. inside menu bar vs loose menu items)$/;"	m	struct:ImGuiPopupData
OpenPopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::OpenPopup(const char* str_id)$/;"	f	class:ImGui
OpenPopupEx	lib/cimgui/imgui/imgui.cpp	/^void ImGui::OpenPopupEx(ImGuiID id)$/;"	f	class:ImGui
OpenPopupOnItemClick	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::OpenPopupOnItemClick(const char* str_id, ImGuiMouseButton mouse_button)$/;"	f	class:ImGui
OpenPopupPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2              OpenPopupPos;   \/\/ Set on OpenPopup(), preferred popup position (typically == OpenMousePos when using mouse)$/;"	m	struct:ImGuiPopupData
OpenPopupStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiPopupData>OpenPopupStack;                     \/\/ Which popups are open (persistent)$/;"	m	struct:ImGuiContext
OpenPrev	lib/cimgui/imgui/imgui_demo.cpp	/^    bool        OpenPrev;       \/\/ Copy of Open from last update.$/;"	m	struct:MyDocument	file:
OpenVal	lib/cimgui/imgui/imgui_internal.h	/^    bool                        OpenVal;        \/\/ Set by SetNextItemOpen()$/;"	m	struct:ImGuiNextItemData
OuterRectClipped	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  OuterRectClipped;                   \/\/ == Window->Rect() just after setup in Begin(). == window->Rect() for root window.$/;"	m	struct:ImGuiWindow
Overlaps	lib/cimgui/imgui/imgui_internal.h	/^    bool        Overlaps(const ImRect& r) const     { return r.Min.y <  Max.y && r.Max.y >  Min.y && r.Min.x <  Max.x && r.Max.x >  Min.x; }$/;"	f	struct:ImRect
OversampleH	lib/cimgui/cimgui.h	/^    int OversampleH;$/;"	m	struct:ImFontConfig
OversampleH	lib/cimgui/generator/output/cimgui.h	/^    int OversampleH;$/;"	m	struct:ImFontConfig
OversampleH	lib/cimgui/imgui/imgui.h	/^    int             OversampleH;            \/\/ 3        \/\/ Rasterize at higher quality for sub-pixel positioning. Read https:\/\/github.com\/nothings\/stb\/blob\/master\/tests\/oversample\/README.md for details.$/;"	m	struct:ImFontConfig
OversampleV	lib/cimgui/cimgui.h	/^    int OversampleV;$/;"	m	struct:ImFontConfig
OversampleV	lib/cimgui/generator/output/cimgui.h	/^    int OversampleV;$/;"	m	struct:ImFontConfig
OversampleV	lib/cimgui/imgui/imgui.h	/^    int             OversampleV;            \/\/ 1        \/\/ Rasterize at higher quality for sub-pixel positioning. We don't use sub-pixel positions on the Y axis.$/;"	m	struct:ImFontConfig
PATH	lib/cimgui/generator/generator.bat	/^:: set PATH=%PATH%;C:\\luaGL;C:\\i686-7.2.0-release-posix-dwarf-rt_v5-rev1\\mingw32\\bin;$/;"	v
PATH	lib/cimgui/generator/generator.bat	/^:: set PATH=%PATH%;C:\\luaGL\\sources\\luajit-master\\luajit-master\\bin\\mingw32;C:\\mingw32\\bin;$/;"	v
PATH	lib/cimgui/generator/generator.bat	/^set PATH=%PATH%;C:\\anima;C:\\i686-7.2.0-release-posix-dwarf-rt_v5-rev1\\mingw32\\bin;$/;"	v
PATH	lib/cimgui/generator/generator_old.bat	/^:: set PATH=%PATH%;C:\\luaGL;C:\\i686-7.2.0-release-posix-dwarf-rt_v5-rev1\\mingw32\\bin;$/;"	v
PATH	lib/cimgui/generator/generator_old.bat	/^:: set PATH=%PATH%;C:\\luaGL\\sources\\luajit-master\\luajit-master\\bin\\mingw32;C:\\mingw32\\bin;$/;"	v
PATH	lib/cimgui/generator/generator_old.bat	/^set PATH=%PATH%;C:\\luaGL;C:\\mingw32\\bin;$/;"	v
PFNGLACTIVESHADERPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVESHADERPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t
PFNGLACTIVETEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLACTIVETEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t
PFNGLATTACHSHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLATTACHSHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINCONDITIONALRENDERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINQUERYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBEGINTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDATTRIBLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDBUFFERBASEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERBASEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t
PFNGLBINDBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumber, GLuint index, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAGDATALOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLchar *name);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t
PFNGLBINDIMAGETEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
PFNGLBINDIMAGETEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLenum format);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDPROGRAMPIPELINEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLBINDRENDERBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDRENDERBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t
PFNGLBINDSAMPLERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDSAMPLERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t
PFNGLBINDTEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t
PFNGLBINDVERTEXARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLBINDVERTEXBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLBINDVERTEXBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLBLENDCOLORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDCOLORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDEQUATIONSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t
PFNGLBLENDFUNCIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t
PFNGLBLENDFUNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t
PFNGLBLENDFUNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLENDFUNCSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBLITFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);$/;"	t
PFNGLBUFFERDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage);$/;"	t
PFNGLBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCHECKFRAMEBUFFERSTATUSPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t
PFNGLCLAMPCOLORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLAMPCOLORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t
PFNGLCLEARBUFFERDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERFIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil);$/;"	t
PFNGLCLEARBUFFERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *value);$/;"	t
PFNGLCLEARBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLintptr offset, GLsizeiptr size, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARBUFFERUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARBUFFERUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint *value);$/;"	t
PFNGLCLEARCOLORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCLEARCOLORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);$/;"	t
PFNGLCLEARDEPTHFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
PFNGLCLEARDEPTHFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t
PFNGLCLEARDEPTHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t
PFNGLCLEARDEPTHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, GLsizeiptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalformat, GLenum format, GLenum type, GLsizeiptr offset, GLsizeiptr size, const void *data);$/;"	t
PFNGLCLEARPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t
PFNGLCLEARPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t
PFNGLCLEARSTENCILPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t
PFNGLCLEARSTENCILPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t
PFNGLCLIENTWAITSYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCLIENTWAITSYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLCOLORMASKIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a);$/;"	t
PFNGLCOLORMASKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLCOLORMASKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);$/;"	t
PFNGLCOLORP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLCOLORP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOLORP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERINCLUDEARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const GLchar* *path, const GLint *length);$/;"	t
PFNGLCOMPILESHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPILESHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size);$/;"	t
PFNGLCOPYIMAGESUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYIMAGESUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei srcWidth, GLsizei srcHeight, GLsizei srcDepth);$/;"	t
PFNGLCOPYTEXIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCOPYTEXSUBIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLCREATEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t
PFNGLCREATESHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar* const *strings);$/;"	t
PFNGLCREATESHADERPROGRAMVPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLchar* const *strings);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);$/;"	t
PFNGLCREATESYNCFROMCLEVENTARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, struct _cl_event * event, GLbitfield flags);$/;"	t
PFNGLCULLFACEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t
PFNGLCULLFACEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoid *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoid *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECALLBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userParam);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGECONTROLPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDEBUGMESSAGEINSERTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf);$/;"	t
PFNGLDELETEBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETEFRAMEBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETENAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPIPELINESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t
PFNGLDELETEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLDELETEQUERIESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEQUERIESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETERENDERBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t
PFNGLDELETESAMPLERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESAMPLERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t
PFNGLDELETESHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t
PFNGLDELETESYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETESYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t
PFNGLDELETETEXTURESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETEXTURESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETETRANSFORMFEEDBACKSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDELETEVERTEXARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t
PFNGLDEPTHFUNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t
PFNGLDEPTHFUNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t
PFNGLDEPTHMASKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t
PFNGLDEPTHMASKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEARRAYVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble *v);$/;"	t
PFNGLDEPTHRANGEFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
PFNGLDEPTHRANGEFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDEPTHRANGEINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t
PFNGLDEPTHRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);$/;"	t
PFNGLDEPTHRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);$/;"	t
PFNGLDETACHSHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDETACHSHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t
PFNGLDISABLEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLDISABLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t
PFNGLDISABLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISABLEVERTEXATTRIBARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLDISPATCHCOMPUTEINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
PFNGLDISPATCHCOMPUTEINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t
PFNGLDISPATCHCOMPUTEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
PFNGLDISPATCHCOMPUTEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLuint num_groups_z);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);$/;"	t
PFNGLDRAWARRAYSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);$/;"	t
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWARRAYSINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, GLsizei instancecount);$/;"	t
PFNGLDRAWARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t
PFNGLDRAWBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum mode);$/;"	t
PFNGLDRAWBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum mode);$/;"	t
PFNGLDRAWBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid *indirect);$/;"	t
PFNGLDRAWELEMENTSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid *indirect);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsizei count, GLenum type, const void *indices, GLsizei instancecount, GLint basevertex, GLuint baseinstance);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount, GLint basevertex);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWELEMENTSINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei instancecount);$/;"	t
PFNGLDRAWELEMENTSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWELEMENTSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices, GLint basevertex);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWRANGEELEMENTSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, GLuint stream, GLsizei instancecount);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint stream);$/;"	t
PFNGLENABLEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENABLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t
PFNGLENABLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENABLEVERTEXATTRIBARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDCONDITIONALRENDERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t
PFNGLENDQUERYINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t
PFNGLENDQUERYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDQUERYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLENDTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLFENCESYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFENCESYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t
PFNGLFINISHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t
PFNGLFINISHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLFLUSHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t
PFNGLFLUSHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERRENDERBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTURELAYERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRAMEBUFFERTEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint texture, GLint level);$/;"	t
PFNGLFRONTFACEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t
PFNGLFRONTFACEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t
PFNGLGENBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t
PFNGLGENERATEMIPMAPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENERATEMIPMAPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENFRAMEBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENPROGRAMPIPELINESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t
PFNGLGENQUERIESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENQUERIESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENRENDERBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENRENDERBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t
PFNGLGENSAMPLERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENSAMPLERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t
PFNGLGENTEXTURESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTEXTURESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENTRANSFORMFEEDBACKSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t
PFNGLGENVERTEXARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGENVERTEXARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEATTRIBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEATTRIBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINENAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertype, GLuint index, GLenum pname, GLint *values);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadertype, GLuint index, GLsizei bufsize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMNAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETACTIVEUNIFORMSIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTACHEDSHADERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei *count, GLuint *obj);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETATTRIBLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETBOOLEANI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t
PFNGLGETBOOLEANVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *params);$/;"	t
PFNGLGETBOOLEANVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *params);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERPOINTERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETCOMPRESSEDTEXIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDEBUGMESSAGELOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog);$/;"	t
PFNGLGETDOUBLEI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t
PFNGLGETDOUBLEVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLGETDOUBLEVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *params);$/;"	t
PFNGLGETERRORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t
PFNGLGETERRORPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t
PFNGLGETFLOATI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t
PFNGLGETFLOATVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFLOATVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *params);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATAINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAGDATALOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum attachment, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETGRAPHICSRESETSTATUSARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t
PFNGLGETINTEGER64I_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64I_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t
PFNGLGETINTEGER64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGER64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t
PFNGLGETINTEGERI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t
PFNGLGETINTEGERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETINTEGERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *params);$/;"	t
PFNGLGETINTERNALFORMATI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETINTERNALFORMATI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint64 *params);$/;"	t
PFNGLGETINTERNALFORMATIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETINTERNALFORMATIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETMULTISAMPLEFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNAMEDSTRINGIVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum pname, GLint *params);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNTEXIMAGEARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMDVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLdouble *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMFVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLfloat *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMIVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLint *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETNUNIFORMUIVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei bufSize, GLuint *params);$/;"	t
PFNGLGETOBJECTLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETOBJECTPTRLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei *length, GLchar *label);$/;"	t
PFNGLGETPOINTERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPOINTERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, GLvoid* *params);$/;"	t
PFNGLGETPROGRAMBINARYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	t
PFNGLGETPROGRAMBINARYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINFOLOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMINTERFACEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMINTERFACEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMPIPELINEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCEINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCEINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei propCount, const GLenum *props, GLsizei bufSize, GLsizei *length, GLint *params);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCELOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInterface, const GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCENAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETPROGRAMRESOURCENAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterface, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETPROGRAMSTAGEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum pname, GLint *values);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYINDEXEDIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETQUERYOBJECTUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETRENDERBUFFERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSAMPLERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERINFOLOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERINFOLOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog);$/;"	t
PFNGLGETSHADERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERPRECISIONFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision);$/;"	t
PFNGLGETSHADERSOURCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSHADERSOURCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source);$/;"	t
PFNGLGETSTRINGIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSTRINGIPROC	lib/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t
PFNGLGETSTRINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t
PFNGLGETSTRINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shadertype, const GLchar *name);$/;"	t
PFNGLGETSYNCIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETSYNCIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values);$/;"	t
PFNGLGETTEXIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETTEXIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLGETTEXLEVELPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXLEVELPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *params);$/;"	t
PFNGLGETTEXPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTEXPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMBLOCKINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformBlockName);$/;"	t
PFNGLGETUNIFORMDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params);$/;"	t
PFNGLGETUNIFORMFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params);$/;"	t
PFNGLGETUNIFORMINDICESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar* const *uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMINDICESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const GLchar* const *uniformNames, GLuint *uniformIndices);$/;"	t
PFNGLGETUNIFORMIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMSUBROUTINEUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETUNIFORMUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBLDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *params);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLGETVERTEXATTRIBPOINTERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* *pointer);$/;"	t
PFNGLHINTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLHINTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t
PFNGLINVALIDATEBUFFERDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
PFNGLINVALIDATEBUFFERDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t
PFNGLINVALIDATEBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLINVALIDATEBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsizeiptr length);$/;"	t
PFNGLINVALIDATEFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATEFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments);$/;"	t
PFNGLINVALIDATESUBFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATESUBFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, const GLenum *attachments, GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLINVALIDATETEXIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
PFNGLINVALIDATETEXIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t
PFNGLINVALIDATETEXSUBIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLINVALIDATETEXSUBIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLISBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t
PFNGLISENABLEDIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDIPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t
PFNGLISENABLEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t
PFNGLISENABLEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t
PFNGLISFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISNAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPIPELINEPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLISPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t
PFNGLISQUERYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISQUERYPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t
PFNGLISRENDERBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISRENDERBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t
PFNGLISSAMPLERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSAMPLERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t
PFNGLISSHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t
PFNGLISSYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISSYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t
PFNGLISTEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t
PFNGLISTEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t
PFNGLISVERTEXARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLISVERTEXARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t
PFNGLLINEWIDTHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t
PFNGLLINEWIDTHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t
PFNGLLINKPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLINKPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t
PFNGLLOGICOPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t
PFNGLLOGICOPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t
PFNGLMAPBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMAPBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access);$/;"	t
PFNGLMEMORYBARRIERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
PFNGLMEMORYBARRIERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
PFNGLMINSAMPLESHADINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsizei *count, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount, const GLint *basevertex);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const void *indirect, GLsizei drawcount, GLsizei stride);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);$/;"	t
PFNGLMULTIDRAWELEMENTSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum type, const GLvoid* const *indices, GLsizei drawcount);$/;"	t
PFNGLMULTITEXCOORDP1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords);$/;"	t
PFNGLMULTITEXCOORDP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLMULTITEXCOORDP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint *coords);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pname, GLint param);$/;"	t
PFNGLNAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string);$/;"	t
PFNGLNORMALP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLNORMALP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLNORMALP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLNORMALP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLOBJECTLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLOBJECTPTRLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar *label);$/;"	t
PFNGLPATCHPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t
PFNGLPATCHPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPATCHPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPAUSETRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLPIXELSTOREFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELSTOREFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPIXELSTOREIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPIXELSTOREIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t
PFNGLPOINTPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t
PFNGLPOINTPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t
PFNGLPOINTPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t
PFNGLPOINTSIZEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t
PFNGLPOINTSIZEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t
PFNGLPOLYGONMODEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLPOLYGONMODEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t
PFNGLPOLYGONOFFSETPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPOLYGONOFFSETPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t
PFNGLPOPDEBUGGROUPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPOPDEBUGGROUPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPRIMITIVERESTARTINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t
PFNGLPROGRAMBINARYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLPROGRAMBINARYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GLint v1);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0, GLdouble v1, GLdouble v2, GLdouble v3);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORM4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLPROVOKINGVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPROVOKINGVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLPUSHDEBUGGROUPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, const GLchar *message);$/;"	t
PFNGLQUERYCOUNTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLQUERYCOUNTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t
PFNGLREADBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum mode);$/;"	t
PFNGLREADBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum mode);$/;"	t
PFNGLREADNPIXELSARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);$/;"	t
PFNGLREADNPIXELSARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data);$/;"	t
PFNGLREADPIXELSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLREADPIXELSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRELEASESHADERCOMPILERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRENDERBUFFERSTORAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLRESUMETRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t
PFNGLSAMPLECOVERAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLECOVERAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t
PFNGLSAMPLEMASKIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLEMASKIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloat *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLuint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSAMPLERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint *param);$/;"	t
PFNGLSCISSORARRAYVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSORARRAYVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t
PFNGLSCISSORINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORINDEXEDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSCISSORINDEXEDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLSCISSORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSCISSORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLSECONDARYCOLORP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLSECONDARYCOLORP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t
PFNGLSECONDARYCOLORP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLSECONDARYCOLORP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t
PFNGLSHADERBINARYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLSHADERBINARYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length);$/;"	t
PFNGLSHADERSOURCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);$/;"	t
PFNGLSHADERSOURCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* const *string, const GLint *length);$/;"	t
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlockIndex, GLuint storageBlockBinding);$/;"	t
PFNGLSTENCILFUNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILFUNCSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLuint mask);$/;"	t
PFNGLSTENCILMASKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t
PFNGLSTENCILMASKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILMASKSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t
PFNGLSTENCILOPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t
PFNGLSTENCILOPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLSTENCILOPSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);$/;"	t
PFNGLTEXBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer);$/;"	t
PFNGLTEXBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXCOORDP1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t
PFNGLTEXCOORDP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXCOORDP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t
PFNGLTEXIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE2DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXPARAMETERFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXPARAMETERFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t
PFNGLTEXPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *params);$/;"	t
PFNGLTEXPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *params);$/;"	t
PFNGLTEXSTORAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXSTORAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSTORAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXSUBIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXSUBIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels);$/;"	t
PFNGLTEXTUREBUFFERRANGEEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTUREBUFFERRANGEEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum internalformat, GLuint buffer, GLintptr offset, GLsizeiptr size);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE1DEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations);$/;"	t
PFNGLTEXTUREVIEWPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTEXTUREVIEWPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture, GLenum internalformat, GLuint minlevel, GLuint numlevels, GLuint minlayer, GLuint numlayers);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode);$/;"	t
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, const GLchar* const *varyings, GLenum bufferMode);$/;"	t
PFNGLUNIFORM1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t
PFNGLUNIFORM1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM1FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t
PFNGLUNIFORM1FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM1IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t
PFNGLUNIFORM1IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t
PFNGLUNIFORM1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t
PFNGLUNIFORM2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM2FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t
PFNGLUNIFORM2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM2IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t
PFNGLUNIFORM2IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t
PFNGLUNIFORM2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLUNIFORM3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM3FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2);$/;"	t
PFNGLUNIFORM3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM3IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t
PFNGLUNIFORM3IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t
PFNGLUNIFORM3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLUNIFORM4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *value);$/;"	t
PFNGLUNIFORM4FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);$/;"	t
PFNGLUNIFORM4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *value);$/;"	t
PFNGLUNIFORM4IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint v3);$/;"	t
PFNGLUNIFORM4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value);$/;"	t
PFNGLUNIFORM4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3);$/;"	t
PFNGLUNIFORM4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORM4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *value);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMBLOCKBINDINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX2X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX3X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLdouble *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMMATRIX4X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean transpose, const GLfloat *value);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNIFORMSUBROUTINESUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const GLuint *indices);$/;"	t
PFNGLUNMAPBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUNMAPBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t
PFNGLUSEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLUSEPROGRAMSTAGESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPIPELINEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t
PFNGLVALIDATEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVALIDATEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint buffer, GLintptr offset, GLsizei stride);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIB1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB1FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB1SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB1SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB2FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB2SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB2SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB3FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB3SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB3SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4BVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIB4FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NSVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4NUSVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIB4USVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBBINDINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXATTRIBBINDINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBDIVISORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t
PFNGLVERTEXATTRIBFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLboolean normalized, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4BVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLint w);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, GLuint w);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBI4USVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t
PFNGLVERTEXATTRIBIFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBIFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBIPOINTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBL4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t
PFNGLVERTEXATTRIBLFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBLFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum type, GLuint relativeoffset);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBLPOINTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normalized, GLuint value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normalized, const GLuint *value);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXATTRIBPOINTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer);$/;"	t
PFNGLVERTEXBINDINGDIVISORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXBINDINGDIVISORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t
PFNGLVERTEXP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t
PFNGLVERTEXP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVERTEXP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t
PFNGLVIEWPORTARRAYVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTARRAYVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVIEWPORTINDEXEDFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t
PFNGLVIEWPORTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLVIEWPORTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t
PFNGLWAITSYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFNGLWAITSYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t
PFN_GetDpiForMonitor	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef HRESULT(WINAPI* PFN_GetDpiForMonitor)(HMONITOR, MONITOR_DPI_TYPE, UINT*, UINT*);        \/\/ Shcore.lib + dll, Windows 8.1+$/;"	t	file:
PFN_SetProcessDpiAwareness	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef HRESULT(WINAPI* PFN_SetProcessDpiAwareness)(PROCESS_DPI_AWARENESS);                     \/\/ Shcore.lib + dll, Windows 8.1+$/;"	t	file:
PFN_SetThreadDpiAwarenessContext	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef DPI_AWARENESS_CONTEXT(WINAPI* PFN_SetThreadDpiAwarenessContext)(DPI_AWARENESS_CONTEXT); \/\/ User32.lib + dll, Windows 10 v1607+ (Creators Update)$/;"	t	file:
PIXEL_LAYOUT_RGBX_8888	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    PIXEL_LAYOUT_RGBX_8888,$/;"	e	enum:rawfb_pixel_layout
PIXEL_LAYOUT_XRGB_8888	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    PIXEL_LAYOUT_XRGB_8888,$/;"	e	enum:rawfb_pixel_layout
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	388;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	391;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	394;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	397;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	400;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	403;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	406;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	409;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	419;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	425;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	429;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	382;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	385;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	388;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	391;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	394;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	398;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	404;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	410;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	414;"	d	file:
PROCESS_DPI_AWARENESS	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWARE = 2 } PROCESS_DPI_AWARENESS;$/;"	t	typeref:enum:__anon100	file:
PROCESS_DPI_UNAWARE	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWARE = 2 } PROCESS_DPI_AWARENESS;$/;"	e	enum:__anon100	file:
PROCESS_PER_MONITOR_DPI_AWARE	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWARE = 2 } PROCESS_DPI_AWARENESS;$/;"	e	enum:__anon100	file:
PROCESS_SYSTEM_DPI_AWARE	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^typedef enum { PROCESS_DPI_UNAWARE = 0, PROCESS_SYSTEM_DPI_AWARE = 1, PROCESS_PER_MONITOR_DPI_AWARE = 2 } PROCESS_DPI_AWARENESS;$/;"	e	enum:__anon100	file:
PROGS	lib/klib/test/Makefile	/^PROGS=kbtree_test khash_keith khash_keith2 khash_test klist_test kseq_test kseq_bench \\$/;"	m
PackRange	lib/cimgui/imgui/imgui_draw.cpp	/^    stbtt_pack_range    PackRange;          \/\/ Hold the list of codepoints to pack (essentially points to Codepoints.Data)$/;"	m	struct:ImFontBuildSrcData	file:
PackedChars	lib/cimgui/imgui/imgui_draw.cpp	/^    stbtt_packedchar*   PackedChars;        \/\/ Output glyphs$/;"	m	struct:ImFontBuildSrcData	file:
ParentLayoutType	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType         ParentLayoutType;       \/\/ Layout type of parent window at the time of Begin()$/;"	m	struct:ImGuiWindowTempData
ParentWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            ParentWindow;                       \/\/ If we are a child _or_ popup window, this is pointing to our parent. Otherwise NULL.$/;"	m	struct:ImGuiWindow
PassFilter	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiTextFilter::PassFilter(const char* text, const char* text_end) const$/;"	f	class:ImGuiTextFilter
PatchFormatStringFloatToInt	lib/cimgui/imgui/imgui_widgets.cpp	/^static const char* PatchFormatStringFloatToInt(const char* fmt)$/;"	f	file:
PathArcTo	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathArcTo(const ImVec2& center, float radius, float a_min, float a_max, int num_segments)$/;"	f	class:ImDrawList
PathArcToFast	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathArcToFast(const ImVec2& center, float radius, int a_min_of_12, int a_max_of_12)$/;"	f	class:ImDrawList
PathBezierCurveTo	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathBezierCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int num_segments)$/;"	f	class:ImDrawList
PathBezierToCasteljau	lib/cimgui/imgui/imgui_draw.cpp	/^static void PathBezierToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2, float x3, float y3, float x4, float y4, float tess_tol, int level)$/;"	f	file:
PathClear	lib/cimgui/imgui/imgui.h	/^    inline    void  PathClear()                                                 { _Path.Size = 0; }$/;"	f	struct:ImDrawList
PathFillConvex	lib/cimgui/imgui/imgui.h	/^    inline    void  PathFillConvex(ImU32 col)                                   { AddConvexPolyFilled(_Path.Data, _Path.Size, col); _Path.Size = 0; }  \/\/ Note: Anti-aliased filling requires points to be in clockwise order.$/;"	f	struct:ImDrawList
PathLineTo	lib/cimgui/imgui/imgui.h	/^    inline    void  PathLineTo(const ImVec2& pos)                               { _Path.push_back(pos); }$/;"	f	struct:ImDrawList
PathLineToMergeDuplicate	lib/cimgui/imgui/imgui.h	/^    inline    void  PathLineToMergeDuplicate(const ImVec2& pos)                 { if (_Path.Size == 0 || memcmp(&_Path.Data[_Path.Size-1], &pos, 8) != 0) _Path.push_back(pos); }$/;"	f	struct:ImDrawList
PathRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, ImDrawCornerFlags rounding_corners)$/;"	f	class:ImDrawList
PathStroke	lib/cimgui/imgui/imgui.h	/^    inline    void  PathStroke(ImU32 col, bool closed, float thickness = 1.0f)  { AddPolyline(_Path.Data, _Path.Size, col, closed, thickness); _Path.Size = 0; }$/;"	f	struct:ImDrawList
PhysicalDevice	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkPhysicalDevice    PhysicalDevice;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
PipelineCache	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkPipelineCache     PipelineCache;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
PixelHeight	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        uint32_t    PixelHeight;        \/\/ Size this font was generated with.$/;"	m	struct:__anon112::FontInfo	file:
PixelSnapH	lib/cimgui/cimgui.h	/^    bool PixelSnapH;$/;"	m	struct:ImFontConfig
PixelSnapH	lib/cimgui/generator/output/cimgui.h	/^    bool PixelSnapH;$/;"	m	struct:ImFontConfig
PixelSnapH	lib/cimgui/imgui/imgui.h	/^    bool            PixelSnapH;             \/\/ false    \/\/ Align every glyph to pixel boundary. Useful e.g. if you are merging a non-pixel aligned font with the default font. If enabled, you can set OversampleH\/V to 1.$/;"	m	struct:ImFontConfig
PlatformImeLastPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  PlatformImeLastPos;$/;"	m	struct:ImGuiContext
PlatformImePos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  PlatformImePos;                     \/\/ Cursor position request & last passed to the OS Input Method Editor$/;"	m	struct:ImGuiContext
Platform_GetWindowPos	lib/cimgui/generator/cimgui_template.cpp	/^    void(*Platform_GetWindowPos)(ImGuiViewport* vp, ImVec2* out_pos);$/;"	m	struct:CimguiStorage	file:
Platform_GetWindowPos_hook	lib/cimgui/generator/cimgui_template.cpp	/^ImVec2 Platform_GetWindowPos_hook(ImGuiViewport* vp)$/;"	f
Platform_GetWindowSize	lib/cimgui/generator/cimgui_template.cpp	/^    void(*Platform_GetWindowSize)(ImGuiViewport* vp, ImVec2* out_pos);$/;"	m	struct:CimguiStorage	file:
Platform_GetWindowSize_hook	lib/cimgui/generator/cimgui_template.cpp	/^ImVec2 Platform_GetWindowSize_hook(ImGuiViewport* vp)$/;"	f
PlotEx	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PlotEx(ImGuiPlotType plot_type, const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 frame_size)$/;"	f	class:ImGui
PlotHistogram	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PlotHistogram(const char* label, const float* values, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride)$/;"	f	class:ImGui
PlotHistogram	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PlotHistogram(const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size)$/;"	f	class:ImGui
PlotLines	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PlotLines(const char* label, const float* values, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size, int stride)$/;"	f	class:ImGui
PlotLines	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PlotLines(const char* label, float (*values_getter)(void* data, int idx), void* data, int values_count, int values_offset, const char* overlay_text, float scale_min, float scale_max, ImVec2 graph_size)$/;"	f	class:ImGui
Plot_ArrayGetter	lib/cimgui/imgui/imgui_widgets.cpp	/^static float Plot_ArrayGetter(void* data, int idx)$/;"	f	file:
PopAllowKeyboardFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopAllowKeyboardFocus()$/;"	f	class:ImGui
PopButtonRepeat	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopButtonRepeat()$/;"	f	class:ImGui
PopClipRect	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopClipRect()$/;"	f	class:ImGui
PopClipRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PopClipRect()$/;"	f	class:ImDrawList
PopColumnsBackground	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PopColumnsBackground()$/;"	f	class:ImGui
PopFocusScope	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopFocusScope()$/;"	f	class:ImGui
PopFont	lib/cimgui/imgui/imgui.cpp	/^void  ImGui::PopFont()$/;"	f	class:ImGui
PopID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopID()$/;"	f	class:ImGui
PopItemFlag	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopItemFlag()$/;"	f	class:ImGui
PopItemWidth	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopItemWidth()$/;"	f	class:ImGui
PopStyleColor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopStyleColor(int count)$/;"	f	class:ImGui
PopStyleVar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopStyleVar(int count)$/;"	f	class:ImGui
PopTextWrapPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopTextWrapPos()$/;"	f	class:ImGui
PopTextureID	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PopTextureID()$/;"	f	class:ImDrawList
PopupBorderSize	lib/cimgui/cimgui.h	/^    float PopupBorderSize;$/;"	m	struct:ImGuiStyle
PopupBorderSize	lib/cimgui/generator/output/cimgui.h	/^    float PopupBorderSize;$/;"	m	struct:ImGuiStyle
PopupBorderSize	lib/cimgui/imgui/imgui.h	/^    float       PopupBorderSize;            \/\/ Thickness of border around popup\/tooltip windows. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU\/GPU costly).$/;"	m	struct:ImGuiStyle
PopupId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 PopupId;                            \/\/ ID in the popup stack when this window is used as a popup\/menu (because we use generic Name\/ID for recycling)$/;"	m	struct:ImGuiWindow
PopupId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             PopupId;        \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupData
PopupRounding	lib/cimgui/cimgui.h	/^    float PopupRounding;$/;"	m	struct:ImGuiStyle
PopupRounding	lib/cimgui/generator/output/cimgui.h	/^    float PopupRounding;$/;"	m	struct:ImGuiStyle
PopupRounding	lib/cimgui/imgui/imgui.h	/^    float       PopupRounding;              \/\/ Radius of popup window corners rounding. (Note that tooltip windows use WindowRounding)$/;"	m	struct:ImGuiStyle
Pos	lib/cimgui/cimgui.h	/^    ImVec2 Pos;$/;"	m	struct:ImGuiSizeCallbackData
Pos	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 Pos;$/;"	m	struct:ImGuiSizeCallbackData
Pos	lib/cimgui/imgui/imgui.h	/^    ImVec2  Pos;            \/\/ Read-only.   Window position, for reference.$/;"	m	struct:ImGuiSizeCallbackData
Pos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  Pos;                                \/\/ Position (always rounded-up to nearest pixel)$/;"	m	struct:ImGuiWindow
Pos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2ih    Pos;$/;"	m	struct:ImGuiWindowSettings
Pos	lib/cimgui/imgui/imgui_internal.h	/^    float       Pos[3], NextWidths[3];$/;"	m	struct:ImGuiMenuColumns
PosCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond                   PosCond;$/;"	m	struct:ImGuiNextWindowData
PosPivotVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                      PosPivotVal;$/;"	m	struct:ImGuiNextWindowData
PosVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                      PosVal;$/;"	m	struct:ImGuiNextWindowData
PresentMode	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkPresentModeKHR    PresentMode;$/;"	m	struct:ImGui_ImplVulkanH_Window
PrevFrameVisible	lib/cimgui/imgui/imgui_internal.h	/^    int                 PrevFrameVisible;$/;"	m	struct:ImGuiTabBar
PrevLineSize	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  PrevLineSize;$/;"	m	struct:ImGuiWindowTempData
PrevLineTextBaseOffset	lib/cimgui/imgui/imgui_internal.h	/^    float                   PrevLineTextBaseOffset;$/;"	m	struct:ImGuiWindowTempData
Preview	lib/cimgui/cimgui.h	/^    bool Preview;$/;"	m	struct:ImGuiPayload
Preview	lib/cimgui/generator/output/cimgui.h	/^    bool Preview;$/;"	m	struct:ImGuiPayload
Preview	lib/cimgui/imgui/imgui.h	/^    bool            Preview;            \/\/ Set when AcceptDragDropPayload() was called and mouse has been hovering the target item (nb: handle overlapping drag targets)$/;"	m	struct:ImGuiPayload
PrimQuadUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, const ImVec2& uv_a, const ImVec2& uv_b, const ImVec2& uv_c, const ImVec2& uv_d, ImU32 col)$/;"	f	class:ImDrawList
PrimRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)$/;"	f	class:ImDrawList
PrimRectUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& uv_c, ImU32 col)$/;"	f	class:ImDrawList
PrimReserve	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimReserve(int idx_count, int vtx_count)$/;"	f	class:ImDrawList
PrimUnreserve	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimUnreserve(int idx_count, int vtx_count)$/;"	f	class:ImDrawList
PrimVtx	lib/cimgui/imgui/imgui.h	/^    inline    void  PrimVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col)     { PrimWriteIdx((ImDrawIdx)_VtxCurrentIdx); PrimWriteVtx(pos, uv, col); }$/;"	f	struct:ImDrawList
PrimWriteIdx	lib/cimgui/imgui/imgui.h	/^    inline    void  PrimWriteIdx(ImDrawIdx idx)                                 { *_IdxWritePtr = idx; _IdxWritePtr++; }$/;"	f	struct:ImDrawList
PrimWriteVtx	lib/cimgui/imgui/imgui.h	/^    inline    void  PrimWriteVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col){ _VtxWritePtr->pos = pos; _VtxWritePtr->uv = uv; _VtxWritePtr->col = col; _VtxWritePtr++; _VtxCurrentIdx++; }$/;"	f	struct:ImDrawList
PrintFmt	lib/cimgui/imgui/imgui_internal.h	/^    const char* PrintFmt;       \/\/ Default printf format for the type$/;"	m	struct:ImGuiDataTypeInfo
PrivateClipboard	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<char>          PrivateClipboard;                   \/\/ If no custom clipboard handler is defined$/;"	m	struct:ImGuiContext
ProgressBar	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::ProgressBar(float fraction, const ImVec2& size_arg, const char* overlay)$/;"	f	class:ImGui
Ptr	lib/cimgui/imgui/imgui_internal.h	/^    void*           Ptr;                \/\/ Either field can be set, not both. e.g. Dock node tab bars are loose while BeginTabBar() ones are in a pool.$/;"	m	struct:ImGuiPtrOrIndex
PushAllowKeyboardFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushAllowKeyboardFocus(bool allow_keyboard_focus)$/;"	f	class:ImGui
PushButtonRepeat	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushButtonRepeat(bool repeat)$/;"	f	class:ImGui
PushClipRect	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushClipRect(const ImVec2& clip_rect_min, const ImVec2& clip_rect_max, bool intersect_with_current_clip_rect)$/;"	f	class:ImGui
PushClipRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_rect)$/;"	f	class:ImDrawList
PushClipRectFullScreen	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PushClipRectFullScreen()$/;"	f	class:ImDrawList
PushColumnClipRect	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PushColumnClipRect(int column_index)$/;"	f	class:ImGui
PushColumnsBackground	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::PushColumnsBackground()$/;"	f	class:ImGui
PushFocusScope	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushFocusScope(ImGuiID id)$/;"	f	class:ImGui
PushFont	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushFont(ImFont* font)$/;"	f	class:ImGui
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(const char* str_id)$/;"	f	class:ImGui
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(const char* str_id_begin, const char* str_id_end)$/;"	f	class:ImGui
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(const void* ptr_id)$/;"	f	class:ImGui
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(int int_id)$/;"	f	class:ImGui
PushItemFlag	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushItemFlag(ImGuiItemFlags option, bool enabled)$/;"	f	class:ImGui
PushItemWidth	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushItemWidth(float item_width)$/;"	f	class:ImGui
PushMultiItemsWidths	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushMultiItemsWidths(int components, float w_full)$/;"	f	class:ImGui
PushOverrideID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushOverrideID(ImGuiID id)$/;"	f	class:ImGui
PushStyleColor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleColor(ImGuiCol idx, ImU32 col)$/;"	f	class:ImGui
PushStyleColor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleColor(ImGuiCol idx, const ImVec4& col)$/;"	f	class:ImGui
PushStyleVar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleVar(ImGuiStyleVar idx, const ImVec2& val)$/;"	f	class:ImGui
PushStyleVar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleVar(ImGuiStyleVar idx, float val)$/;"	f	class:ImGui
PushTextWrapPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushTextWrapPos(float wrap_pos_x)$/;"	f	class:ImGui
PushTextureID	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PushTextureID(ImTextureID texture_id)$/;"	f	class:ImDrawList
Q0	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anon22
QualityMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} QualityMode;$/;"	t	typeref:enum:__anon179
QualityModeDefault	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeDefault   = 0,$/;"	e	enum:__anon179
QualityModeHigh	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeHigh      = 2$/;"	e	enum:__anon179
QualityModeInvalid	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeInvalid   = -1,$/;"	e	enum:__anon179
QualityModeLow	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeLow       = 1,$/;"	e	enum:__anon179
Queue	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkQueue             Queue;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
QueueFamily	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    uint32_t            QueueFamily;$/;"	m	struct:ImGui_ImplVulkan_InitInfo
REAL	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef float REAL;$/;"	t
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RS_MIN_SIZE	lib/klib/test/ksort_test.cc	578;"	d	file:
RadioButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::RadioButton(const char* label, bool active)$/;"	f	class:ImGui
RadioButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::RadioButton(const char* label, int* v, int v_button)$/;"	f	class:ImGui
RadixSortInPlace_HybridUnsigned_Radix256	lib/klib/test/ksort_test.cc	/^inline void RadixSortInPlace_HybridUnsigned_Radix256( unsigned* a, unsigned long a_size )$/;"	f
RasterizerFlags	lib/cimgui/cimgui.h	/^    unsigned int RasterizerFlags;$/;"	m	struct:ImFontConfig
RasterizerFlags	lib/cimgui/generator/output/cimgui.h	/^    unsigned int RasterizerFlags;$/;"	m	struct:ImFontConfig
RasterizerFlags	lib/cimgui/imgui/imgui.h	/^    unsigned int    RasterizerFlags;        \/\/ 0x00     \/\/ Settings for custom font rasterizer (e.g. ImGuiFreeType). Leave as zero if you aren't using one.$/;"	m	struct:ImFontConfig
RasterizerFlags	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^    enum RasterizerFlags$/;"	g	namespace:ImGuiFreeType
RasterizerMultiply	lib/cimgui/cimgui.h	/^    float RasterizerMultiply;$/;"	m	struct:ImFontConfig
RasterizerMultiply	lib/cimgui/generator/output/cimgui.h	/^    float RasterizerMultiply;$/;"	m	struct:ImFontConfig
RasterizerMultiply	lib/cimgui/imgui/imgui.h	/^    float           RasterizerMultiply;     \/\/ 1.0f     \/\/ Brighten (>1.0f) or darken (<1.0f) font output. Brightening small fonts may be a good workaround to make them more readable.$/;"	m	struct:ImFontConfig
ReadLineFn	lib/cimgui/imgui/imgui_internal.h	/^    void        (*ReadLineFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, void* entry, const char* line); \/\/ Read: Called for every line of text within an ini entry$/;"	m	struct:ImGuiSettingsHandler
ReadOpenFn	lib/cimgui/imgui/imgui_internal.h	/^    void*       (*ReadOpenFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, const char* name);              \/\/ Read: Called when entering into a new ini entry e.g. "[Window][Name]"$/;"	m	struct:ImGuiSettingsHandler
Rect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect      Rect() const                { return ImRect(Pos.x, Pos.y, Pos.x+Size.x, Pos.y+Size.y); }$/;"	f	struct:ImGuiWindow
RectF	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} RectF;$/;"	t	typeref:struct:__anon185
RectRel	lib/cimgui/imgui/imgui_internal.h	/^    ImRect          RectRel;            \/\/ Best candidate bounding box in window relative space$/;"	m	struct:ImGuiNavMoveResult
Rects	lib/cimgui/imgui/imgui_draw.cpp	/^    stbrp_rect*         Rects;              \/\/ Rectangle to pack. We first fill in their size and the packer will give us their position.$/;"	m	struct:ImFontBuildSrcData	file:
Rects	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    stbrp_rect*         Rects;              \/\/ Rectangle to pack. We first fill in their size and the packer will give us their position.$/;"	m	struct:ImFontBuildSrcDataFT	file:
RecurseNeeded	lib/cimgui/generator/generator.lua	/^local function RecurseNeeded(Ini,IniKind,level)$/;"	f
RefFrame	lib/cimgui/cimgui.h	/^     int RefFrame;$/;"	m	struct:ImGuiOnceUponAFrame
RefFrame	lib/cimgui/generator/output/cimgui.h	/^     int RefFrame;$/;"	m	struct:ImGuiOnceUponAFrame
RefFrame	lib/cimgui/imgui/imgui.h	/^    mutable int RefFrame;$/;"	m	struct:ImGuiOnceUponAFrame
Remove	lib/cimgui/imgui/imgui_internal.h	/^    void        Remove(ImGuiID key, ImPoolIdx idx)  { Buf[idx].~T(); *(int*)&Buf[idx] = FreeIdx; FreeIdx = idx; Map.SetInt(key, -1); }$/;"	f	struct:ImPool
Remove	lib/cimgui/imgui/imgui_internal.h	/^    void        Remove(ImGuiID key, const T* p)     { Remove(key, GetIndex(p)); }$/;"	f	struct:ImPool
Render	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Render()$/;"	f	class:ImGui
RenderArrow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderArrow(ImDrawList* draw_list, ImVec2 pos, ImU32 col, ImGuiDir dir, float scale)$/;"	f	class:ImGui
RenderArrow	lib/cimgui/imgui/imgui_internal.h	/^    inline void RenderArrow(ImVec2 pos, ImGuiDir dir, float scale=1.0f) { ImGuiWindow* window = GetCurrentWindow(); RenderArrow(window->DrawList, pos, GetColorU32(ImGuiCol_Text), dir, scale); }$/;"	f	namespace:ImGui
RenderArrowPointingAt	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::RenderArrowPointingAt(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, ImGuiDir direction, ImU32 col)$/;"	f	class:ImGui
RenderArrowsForVerticalBar	lib/cimgui/imgui/imgui_widgets.cpp	/^static void RenderArrowsForVerticalBar(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, float bar_w, float alpha)$/;"	f	file:
RenderBullet	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderBullet(ImDrawList* draw_list, ImVec2 pos, ImU32 col)$/;"	f	class:ImGui
RenderBullet	lib/cimgui/imgui/imgui_internal.h	/^    inline void RenderBullet(ImVec2 pos)                                { ImGuiWindow* window = GetCurrentWindow(); RenderBullet(window->DrawList, pos, GetColorU32(ImGuiCol_Text)); }$/;"	f	namespace:ImGui
RenderChar	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, ImWchar c) const$/;"	f	class:ImFont
RenderCheckMark	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderCheckMark(ImVec2 pos, ImU32 col, float sz)$/;"	f	class:ImGui
RenderColorRectWithAlphaCheckerboard	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::RenderColorRectWithAlphaCheckerboard(ImVec2 p_min, ImVec2 p_max, ImU32 col, float grid_step, ImVec2 grid_off, float rounding, int rounding_corners_flags)$/;"	f	class:ImGui
RenderCompleteSemaphore	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkSemaphore         RenderCompleteSemaphore;$/;"	m	struct:ImGui_ImplVulkanH_FrameSemaphores
RenderDrawListsFn	lib/cimgui/imgui/imgui.h	/^    void        (*RenderDrawListsFn)(ImDrawData* data);$/;"	m	struct:ImGuiIO
RenderDrawListsFnUnused	lib/cimgui/cimgui.h	/^    void* RenderDrawListsFnUnused;$/;"	m	struct:ImGuiIO
RenderDrawListsFnUnused	lib/cimgui/generator/output/cimgui.h	/^    void* RenderDrawListsFnUnused;$/;"	m	struct:ImGuiIO
RenderDrawListsFnUnused	lib/cimgui/imgui/imgui.h	/^    void*       RenderDrawListsFnUnused;$/;"	m	struct:ImGuiIO
RenderFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderFrame(ImVec2 p_min, ImVec2 p_max, ImU32 fill_col, bool border, float rounding)$/;"	f	class:ImGui
RenderFrameBorder	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderFrameBorder(ImVec2 p_min, ImVec2 p_max, float rounding)$/;"	f	class:ImGui
RenderGlyphAndGetInfo	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    const FT_Bitmap* FreeTypeFont::RenderGlyphAndGetInfo(GlyphInfo* out_glyph_info)$/;"	f	class:__anon112::FreeTypeFont
RenderMode	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Render_Mode  RenderMode;$/;"	m	struct:__anon112::FreeTypeFont	file:
RenderMouseCursor	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::RenderMouseCursor(ImDrawList* draw_list, ImVec2 pos, float scale, ImGuiMouseCursor mouse_cursor, ImU32 col_fill, ImU32 col_border, ImU32 col_shadow)$/;"	f	class:ImGui
RenderNavHighlight	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderNavHighlight(const ImRect& bb, ImGuiID id, ImGuiNavHighlightFlags flags)$/;"	f	class:ImGui
RenderPass	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkRenderPass        RenderPass;$/;"	m	struct:ImGui_ImplVulkanH_Window
RenderRectFilledRangeH	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::RenderRectFilledRangeH(ImDrawList* draw_list, const ImRect& rect, ImU32 col, float x_start_norm, float x_end_norm, float rounding)$/;"	f	class:ImGui
RenderText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderText(ImVec2 pos, const char* text, const char* text_end, bool hide_text_after_hash)$/;"	f	class:ImGui
RenderText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& clip_rect, const char* text_begin, const char* text_end, float wrap_width, bool cpu_fine_clip) const$/;"	f	class:ImFont
RenderTextClipped	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderTextClipped(const ImVec2& pos_min, const ImVec2& pos_max, const char* text, const char* text_end, const ImVec2* text_size_if_known, const ImVec2& align, const ImRect* clip_rect)$/;"	f	class:ImGui
RenderTextClippedEx	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderTextClippedEx(ImDrawList* draw_list, const ImVec2& pos_min, const ImVec2& pos_max, const char* text, const char* text_display_end, const ImVec2* text_size_if_known, const ImVec2& align, const ImRect* clip_rect)$/;"	f	class:ImGui
RenderTextEllipsis	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderTextEllipsis(ImDrawList* draw_list, const ImVec2& pos_min, const ImVec2& pos_max, float clip_max_x, float ellipsis_max_x, const char* text, const char* text_end_full, const ImVec2* text_size_if_known)$/;"	f	class:ImGui
RenderTextWrapped	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderTextWrapped(ImVec2 pos, const char* text, const char* text_end, float wrap_width)$/;"	f	class:ImGui
RenderWindowDecorations	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderWindowDecorations(ImGuiWindow* window, const ImRect& title_bar_rect, bool title_bar_is_highlight, int resize_grip_count, const ImU32 resize_grip_col[4], float resize_grip_draw_size)$/;"	f	class:ImGui
RenderWindowOuterBorders	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::RenderWindowOuterBorders(ImGuiWindow* window)$/;"	f	class:ImGui
RenderWindowTitleBarContents	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderWindowTitleBarContents(ImGuiWindow* window, const ImRect& title_bar_rect, const char* name, bool* p_open)$/;"	f	class:ImGui
ReorderRequestDir	lib/cimgui/imgui/imgui_internal.h	/^    ImS8                ReorderRequestDir;$/;"	m	struct:ImGuiTabBar
ReorderRequestTabId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             ReorderRequestTabId;$/;"	m	struct:ImGuiTabBar
Reserve	lib/cimgui/imgui/imgui_internal.h	/^    void        Reserve(int capacity)               { Buf.reserve(capacity); Map.Data.reserve(capacity); }$/;"	f	struct:ImPool
ResetDevice	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^void ResetDevice()$/;"	f
ResetMouseDragDelta	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ResetMouseDragDelta(ImGuiMouseButton button)$/;"	f	class:ImGui
Resize	lib/cimgui/imgui/imgui_internal.h	/^    void            Resize(int sz)          { Storage.resize((sz + 31) >> 5); memset(Storage.Data, 0, (size_t)Storage.Size * sizeof(Storage.Data[0])); }$/;"	f	struct:ImBoolVector
ResizeBorderHeld	lib/cimgui/imgui/imgui_internal.h	/^    signed char             ResizeBorderHeld;                   \/\/ Current border being held for resize (-1: none, otherwise 0-3)$/;"	m	struct:ImGuiWindow
ResizeSwapChain	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^void ResizeSwapChain(HWND hWnd, int width, int height)$/;"	f
Restore	lib/cimgui/imgui/imgui_internal.h	/^    void Restore() const    { ImGuiWindow* window = GImGui->CurrentWindow; window->DC.LastItemId = LastItemId; window->DC.LastItemStatusFlags = LastItemStatusFlags; window->DC.LastItemRect = LastItemRect; window->DC.LastItemDisplayRect = LastItemDisplayRect; }$/;"	f	struct:ImGuiItemHoveredDataBackup
RootWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindow;                         \/\/ Point to ourself or first ancestor that is not a child window.$/;"	m	struct:ImGuiWindow
RootWindowForNav	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindowForNav;                   \/\/ Point to ourself or first ancestor which doesn't have the NavFlattened flag.$/;"	m	struct:ImGuiWindow
RootWindowForTitleBarHighlight	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindowForTitleBarHighlight;     \/\/ Point to ourself or first ancestor which will display TitleBgActive color when this window is active.$/;"	m	struct:ImGuiWindow
RoundScalarWithFormatT	lib/cimgui/imgui/imgui_widgets.cpp	/^TYPE ImGui::RoundScalarWithFormatT(const char* format, ImGuiDataType data_type, TYPE v)$/;"	f	class:ImGui
SAINT_MAX	lib/klib/ksa.c	40;"	d	file:
SAINT_MAX	lib/klib/ksa.c	47;"	d	file:
SAIS_BWT	lib/klib/ksa.c	/^int SAIS_BWT(unsigned char *T, saint_t n, int k)$/;"	f
SAIS_BWT	lib/klib/ksa.c	42;"	d	file:
SAIS_BWT	lib/klib/ksa.c	49;"	d	file:
SAIS_CORE	lib/klib/ksa.c	/^int SAIS_CORE(const unsigned char *T, saint_t *SA, saint_t fs, saint_t n, saint_t k, int cs)$/;"	f
SAIS_CORE	lib/klib/ksa.c	41;"	d	file:
SAIS_CORE	lib/klib/ksa.c	48;"	d	file:
SAIS_MAIN	lib/klib/ksa.c	/^int SAIS_MAIN(const unsigned char *T, saint_t *SA, saint_t n, int k)$/;"	f
SAIS_MAIN	lib/klib/ksa.c	43;"	d	file:
SAIS_MAIN	lib/klib/ksa.c	50;"	d	file:
SDL_Event	lib/cimgui/cimgui.h	/^typedef union SDL_Event SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_Event	lib/cimgui/generator/cimgui_template.h	/^typedef union SDL_Event SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_Event	lib/cimgui/generator/output/cimgui.h	/^typedef union SDL_Event SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_Event	lib/cimgui/generator/output/cimgui_impl.h	/^typedef union SDL_Event SDL_Event;CIMGUI_API bool ImGui_ImplGlfw_InitForOpenGL(GLFWwindow* window,bool install_callbacks);$/;"	t	typeref:union:SDL_Event
SDL_Event	lib/cimgui/imgui/examples/imgui_impl_sdl.h	/^typedef union SDL_Event SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_HAS_CAPTURE_AND_GLOBAL_MOUSE	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	56;"	d	file:
SDL_HAS_VULKAN	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	57;"	d	file:
SDL_Window	lib/cimgui/generator/output/cimgui_impl.h	/^typedef struct SDL_Window SDL_Window;$/;"	t	typeref:struct:SDL_Window
SE_SDL	lib/nuklear/demo/sdl_opengles2/Makefile	/^	emcc $(SRC) -Os -s USE_SDL=2 -o bin\/index.html$/;"	m
SFML_DIR	lib/nuklear/demo/sfml_opengl2/Makefile	/^	SFML_DIR = C:\/Users\/Ricky\/MinGW-Libs\/SFML$/;"	m
SFML_DIR	lib/nuklear/demo/sfml_opengl2/Makefile	/^	SFML_DIR = \/home\/ricky\/Libraries\/SFML$/;"	m
SFML_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	SFML_DIR = C:\/Users\/Ricky\/MinGW-Libs\/SFML$/;"	m
SFML_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	SFML_DIR = \/home\/ricky\/Libraries\/SFML$/;"	m
SFML_INC	lib/nuklear/demo/sfml_opengl2/Makefile	/^SFML_INC = -I $(SFML_DIR)\/include$/;"	m
SFML_INC	lib/nuklear/demo/sfml_opengl3/Makefile	/^SFML_INC = -I $(SFML_DIR)\/include$/;"	m
SFML_LIB	lib/nuklear/demo/sfml_opengl2/Makefile	/^SFML_LIB = -L $(SFML_DIR)\/lib$/;"	m
SFML_LIB	lib/nuklear/demo/sfml_opengl3/Makefile	/^SFML_LIB = -L $(SFML_DIR)\/lib$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGN	lib/klib/kmath.c	/^static inline float SIGN(float a, float b)$/;"	f	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	187;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	181;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	196;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	194;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	209;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	203;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	195;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	189;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	204;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SOURCES	lib/cimgui/imgui/examples/example_emscripten/Makefile	/^SOURCES = main.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_glfw_metal/Makefile	/^SOURCES = main.mm$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^SOURCES = main.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^SOURCES = main.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^SOURCES = main.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_null/Makefile	/^SOURCES = main.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_sdl_directx11/build_win32.bat	/^set SOURCES=main.cpp ..\\imgui_impl_sdl.cpp ..\\imgui_impl_dx11.cpp ..\\..\\imgui*.cpp$/;"	v
SOURCES	lib/cimgui/imgui/examples/example_sdl_metal/Makefile	/^SOURCES = main.mm$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^SOURCES = main.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_sdl_opengl2/build_win32.bat	/^set SOURCES=main.cpp ..\\imgui_impl_sdl.cpp ..\\imgui_impl_opengl2.cpp ..\\..\\imgui*.cpp$/;"	v
SOURCES	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^SOURCES = main.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/example_sdl_opengl3/build_win32.bat	/^set SOURCES=main.cpp ..\\imgui_impl_sdl.cpp ..\\imgui_impl_opengl3.cpp ..\\..\\imgui*.cpp ..\\libs\\gl3w\\GL\\gl3w.c$/;"	v
SRC	lib/nuklear/demo/allegro5/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/glfw_opengl2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/glfw_opengl3/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/glfw_opengl4/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sdl_opengl2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sdl_opengl3/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sdl_opengles2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sfml_opengl2/Makefile	/^SRC = main.cpp$/;"	m
SRC	lib/nuklear/demo/sfml_opengl3/Makefile	/^SRC = main.cpp$/;"	m
SRC	lib/nuklear/demo/x11/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/x11_opengl2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/x11_opengl3/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/x11_rawfb/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/x11_xft/Makefile	/^SRC = ${wildcard *.c}$/;"	m
SRC	lib/nuklear/demo/x11_xft/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/doc/Makefile	/^SRC = stddoc.c$/;"	m
STBIDEF	lib/nuklear/example/stb_image.h	421;"	d
STBIDEF	lib/nuklear/example/stb_image.h	423;"	d
STBI_ASSERT	lib/nuklear/example/stb_image.h	586;"	d
STBI_FREE	lib/nuklear/example/stb_image.h	644;"	d
STBI_HAS_LROTL	lib/nuklear/example/stb_image.h	624;"	d
STBI_INCLUDE_STB_IMAGE_H	lib/nuklear/example/stb_image.h	226;"	d
STBI_MALLOC	lib/nuklear/example/stb_image.h	642;"	d
STBI_NEON	lib/nuklear/example/stb_image.h	731;"	d
STBI_NOTUSED	lib/nuklear/example/stb_image.h	618;"	d
STBI_NOTUSED	lib/nuklear/example/stb_image.h	620;"	d
STBI_NO_BMP	lib/nuklear/example/stb_image.h	544;"	d
STBI_NO_GIF	lib/nuklear/example/stb_image.h	553;"	d
STBI_NO_HDR	lib/nuklear/example/stb_image.h	556;"	d
STBI_NO_JPEG	lib/nuklear/example/stb_image.h	538;"	d
STBI_NO_PIC	lib/nuklear/example/stb_image.h	559;"	d
STBI_NO_PNG	lib/nuklear/example/stb_image.h	541;"	d
STBI_NO_PNM	lib/nuklear/example/stb_image.h	562;"	d
STBI_NO_PSD	lib/nuklear/example/stb_image.h	547;"	d
STBI_NO_SIMD	lib/nuklear/example/stb_image.h	660;"	d
STBI_NO_SIMD	lib/nuklear/example/stb_image.h	675;"	d
STBI_NO_TGA	lib/nuklear/example/stb_image.h	550;"	d
STBI_NO_ZLIB	lib/nuklear/example/stb_image.h	567;"	d
STBI_REALLOC	lib/nuklear/example/stb_image.h	643;"	d
STBI_SIMD_ALIGN	lib/nuklear/example/stb_image.h	705;"	d
STBI_SIMD_ALIGN	lib/nuklear/example/stb_image.h	713;"	d
STBI_SIMD_ALIGN	lib/nuklear/example/stb_image.h	737;"	d
STBI_SIMD_ALIGN	lib/nuklear/example/stb_image.h	741;"	d
STBI_SSE2	lib/nuklear/example/stb_image.h	679;"	d
STBI_VERSION	lib/nuklear/example/stb_image.h	402;"	d
STBI__BYTECAST	lib/nuklear/example/stb_image.h	1323;"	d
STBI__F_avg	lib/nuklear/example/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anon156
STBI__F_avg_first	lib/nuklear/example/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anon156
STBI__F_none	lib/nuklear/example/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anon156
STBI__F_paeth	lib/nuklear/example/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anon156
STBI__F_paeth_first	lib/nuklear/example/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anon156
STBI__F_sub	lib/nuklear/example/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anon156
STBI__F_up	lib/nuklear/example/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anon156
STBI__HDR_BUFLEN	lib/nuklear/example/stb_image.h	5853;"	d
STBI__IDCT_1D	lib/nuklear/example/stb_image.h	1932;"	d
STBI__MARKER_none	lib/nuklear/example/stb_image.h	2417;"	d
STBI__PNG_TYPE	lib/nuklear/example/stb_image.h	4318;"	d
STBI__RESTART	lib/nuklear/example/stb_image.h	2434;"	d
STBI__SCAN_header	lib/nuklear/example/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anon147
STBI__SCAN_load	lib/nuklear/example/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anon147
STBI__SCAN_type	lib/nuklear/example/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anon147
STBI__X64_TARGET	lib/nuklear/example/stb_image.h	649;"	d
STBI__X86_TARGET	lib/nuklear/example/stb_image.h	651;"	d
STBI__ZFAST_BITS	lib/nuklear/example/stb_image.h	3460;"	d
STBI__ZFAST_MASK	lib/nuklear/example/stb_image.h	3461;"	d
STBI_default	lib/nuklear/example/stb_image.h	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anon144
STBI_grey	lib/nuklear/example/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anon144
STBI_grey_alpha	lib/nuklear/example/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anon144
STBI_rgb	lib/nuklear/example/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anon144
STBI_rgb_alpha	lib/nuklear/example/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anon144
STBRP_ASSERT	lib/cimgui/imgui/imgui_draw.cpp	123;"	d	file:
STBRP_ASSERT	lib/cimgui/imgui/imstb_rectpack.h	213;"	d
STBRP_ASSERT	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	282;"	d	file:
STBRP_DEF	lib/cimgui/imgui/imstb_rectpack.h	71;"	d
STBRP_DEF	lib/cimgui/imgui/imstb_rectpack.h	73;"	d
STBRP_HEURISTIC_Skyline_BF_sortHeight	lib/cimgui/imgui/imstb_rectpack.h	/^   STBRP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:__anon97
STBRP_HEURISTIC_Skyline_BL_sortHeight	lib/cimgui/imgui/imstb_rectpack.h	/^   STBRP_HEURISTIC_Skyline_BL_sortHeight = STBRP_HEURISTIC_Skyline_default,$/;"	e	enum:__anon97
STBRP_HEURISTIC_Skyline_default	lib/cimgui/imgui/imstb_rectpack.h	/^   STBRP_HEURISTIC_Skyline_default=0,$/;"	e	enum:__anon97
STBRP_SORT	lib/cimgui/imgui/imgui_draw.cpp	124;"	d	file:
STBRP_SORT	lib/cimgui/imgui/imstb_rectpack.h	208;"	d
STBRP_STATIC	lib/cimgui/imgui/imgui_draw.cpp	122;"	d	file:
STBRP_STATIC	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	283;"	d	file:
STBRP__CDECL	lib/cimgui/imgui/imstb_rectpack.h	219;"	d
STBRP__CDECL	lib/cimgui/imgui/imstb_rectpack.h	222;"	d
STBRP__INIT_skyline	lib/cimgui/imgui/imstb_rectpack.h	/^   STBRP__INIT_skyline = 1$/;"	e	enum:__anon98
STBRP__MAXVAL	lib/cimgui/imgui/imstb_rectpack.h	553;"	d
STBRP__MAXVAL	lib/cimgui/imgui/imstb_rectpack.h	555;"	d
STBRP__NOTUSED	lib/cimgui/imgui/imstb_rectpack.h	218;"	d
STBRP__NOTUSED	lib/cimgui/imgui/imstb_rectpack.h	221;"	d
STBTT_DEF	lib/cimgui/imgui/imstb_truetype.h	504;"	d
STBTT_DEF	lib/cimgui/imgui/imstb_truetype.h	506;"	d
STBTT_FIX	lib/cimgui/imgui/imstb_truetype.h	2740;"	d
STBTT_FIXMASK	lib/cimgui/imgui/imstb_truetype.h	2741;"	d
STBTT_FIXSHIFT	lib/cimgui/imgui/imstb_truetype.h	2739;"	d
STBTT_GPOS_TODO_assert	lib/cimgui/imgui/imstb_truetype.h	2426;"	d
STBTT_MACSTYLE_BOLD	lib/cimgui/imgui/imstb_truetype.h	1010;"	d
STBTT_MACSTYLE_DONTCARE	lib/cimgui/imgui/imstb_truetype.h	1009;"	d
STBTT_MACSTYLE_ITALIC	lib/cimgui/imgui/imstb_truetype.h	1011;"	d
STBTT_MACSTYLE_NONE	lib/cimgui/imgui/imstb_truetype.h	1013;"	d
STBTT_MACSTYLE_UNDERSCORE	lib/cimgui/imgui/imstb_truetype.h	1012;"	d
STBTT_MAC_EID_ARABIC	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon124
STBTT_MAC_EID_CHINESE_TRAD	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon124
STBTT_MAC_EID_GREEK	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon124
STBTT_MAC_EID_HEBREW	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon124
STBTT_MAC_EID_JAPANESE	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon124
STBTT_MAC_EID_KOREAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon124
STBTT_MAC_EID_ROMAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon124
STBTT_MAC_EID_RUSSIAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon124
STBTT_MAC_LANG_ARABIC	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon126
STBTT_MAC_LANG_CHINESE_SIMPLIFIED	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon126
STBTT_MAC_LANG_CHINESE_TRAD	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon126
STBTT_MAC_LANG_DUTCH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon126
STBTT_MAC_LANG_ENGLISH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon126
STBTT_MAC_LANG_FRENCH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon126
STBTT_MAC_LANG_GERMAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon126
STBTT_MAC_LANG_HEBREW	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon126
STBTT_MAC_LANG_ITALIAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon126
STBTT_MAC_LANG_JAPANESE	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon126
STBTT_MAC_LANG_KOREAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon126
STBTT_MAC_LANG_RUSSIAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon126
STBTT_MAC_LANG_SPANISH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon126
STBTT_MAC_LANG_SWEDISH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon126
STBTT_MAX_OVERSAMPLE	lib/cimgui/imgui/imstb_truetype.h	1092;"	d
STBTT_MS_EID_SHIFTJIS	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon123
STBTT_MS_EID_SYMBOL	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon123
STBTT_MS_EID_UNICODE_BMP	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon123
STBTT_MS_EID_UNICODE_FULL	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon123
STBTT_MS_LANG_CHINESE	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon125
STBTT_MS_LANG_DUTCH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon125
STBTT_MS_LANG_ENGLISH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon125
STBTT_MS_LANG_FRENCH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon125
STBTT_MS_LANG_GERMAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon125
STBTT_MS_LANG_HEBREW	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon125
STBTT_MS_LANG_ITALIAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon125
STBTT_MS_LANG_JAPANESE	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon125
STBTT_MS_LANG_KOREAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon125
STBTT_MS_LANG_RUSSIAN	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon125
STBTT_MS_LANG_SPANISH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon125
STBTT_MS_LANG_SWEDISH	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon125
STBTT_PLATFORM_ID_ISO	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon121
STBTT_PLATFORM_ID_MAC	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon121
STBTT_PLATFORM_ID_MICROSOFT	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon121
STBTT_PLATFORM_ID_UNICODE	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon121
STBTT_POINT_SIZE	lib/cimgui/imgui/imstb_truetype.h	603;"	d
STBTT_RASTERIZER_VERSION	lib/cimgui/imgui/imstb_truetype.h	1102;"	d
STBTT_STATIC	lib/cimgui/imgui/imgui_draw.cpp	145;"	d	file:
STBTT_UNICODE_EID_ISO_10646	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon122
STBTT_UNICODE_EID_UNICODE_1_0	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon122
STBTT_UNICODE_EID_UNICODE_1_1	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon122
STBTT_UNICODE_EID_UNICODE_2_0_BMP	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon122
STBTT_UNICODE_EID_UNICODE_2_0_FULL	lib/cimgui/imgui/imstb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon122
STBTT__COMPARE	lib/cimgui/imgui/imstb_truetype.h	3237;"	d
STBTT__CSCTX_INIT	lib/cimgui/imgui/imstb_truetype.h	1877;"	d
STBTT__CSERR	lib/cimgui/imgui/imstb_truetype.h	1986;"	d
STBTT__CSERR	lib/cimgui/imgui/imstb_truetype.h	2234;"	d
STBTT__NOTUSED	lib/cimgui/imgui/imstb_truetype.h	1106;"	d
STBTT__NOTUSED	lib/cimgui/imgui/imstb_truetype.h	1108;"	d
STBTT__OVER_MASK	lib/cimgui/imgui/imstb_truetype.h	3850;"	d
STBTT_acos	lib/cimgui/imgui/imstb_truetype.h	461;"	d
STBTT_assert	lib/cimgui/imgui/imgui_draw.cpp	138;"	d	file:
STBTT_assert	lib/cimgui/imgui/imstb_truetype.h	478;"	d
STBTT_cos	lib/cimgui/imgui/imstb_truetype.h	460;"	d
STBTT_fabs	lib/cimgui/imgui/imgui_draw.cpp	142;"	d	file:
STBTT_fabs	lib/cimgui/imgui/imstb_truetype.h	466;"	d
STBTT_fmod	lib/cimgui/imgui/imgui_draw.cpp	139;"	d	file:
STBTT_fmod	lib/cimgui/imgui/imstb_truetype.h	455;"	d
STBTT_free	lib/cimgui/imgui/imgui_draw.cpp	137;"	d	file:
STBTT_free	lib/cimgui/imgui/imstb_truetype.h	473;"	d
STBTT_iceil	lib/cimgui/imgui/imgui_draw.cpp	144;"	d	file:
STBTT_iceil	lib/cimgui/imgui/imstb_truetype.h	444;"	d
STBTT_ifloor	lib/cimgui/imgui/imgui_draw.cpp	143;"	d	file:
STBTT_ifloor	lib/cimgui/imgui/imstb_truetype.h	443;"	d
STBTT_malloc	lib/cimgui/imgui/imgui_draw.cpp	136;"	d	file:
STBTT_malloc	lib/cimgui/imgui/imstb_truetype.h	472;"	d
STBTT_max	lib/cimgui/imgui/imstb_truetype.h	4226;"	d
STBTT_memcpy	lib/cimgui/imgui/imstb_truetype.h	488;"	d
STBTT_memset	lib/cimgui/imgui/imstb_truetype.h	489;"	d
STBTT_min	lib/cimgui/imgui/imstb_truetype.h	4225;"	d
STBTT_pow	lib/cimgui/imgui/imgui_draw.cpp	141;"	d	file:
STBTT_pow	lib/cimgui/imgui/imstb_truetype.h	450;"	d
STBTT_sqrt	lib/cimgui/imgui/imgui_draw.cpp	140;"	d	file:
STBTT_sqrt	lib/cimgui/imgui/imstb_truetype.h	449;"	d
STBTT_strlen	lib/cimgui/imgui/imstb_truetype.h	483;"	d
STBTT_vcubic	lib/cimgui/imgui/imstb_truetype.h	/^      STBTT_vcubic$/;"	e	enum:__anon118
STBTT_vcurve	lib/cimgui/imgui/imstb_truetype.h	/^      STBTT_vcurve,$/;"	e	enum:__anon118
STBTT_vline	lib/cimgui/imgui/imstb_truetype.h	/^      STBTT_vline,$/;"	e	enum:__anon118
STBTT_vmove	lib/cimgui/imgui/imstb_truetype.h	/^      STBTT_vmove=1,$/;"	e	enum:__anon118
STB_IMAGE_IMPLEMENTATION	lib/nuklear/demo/x11/nuklear_xlib.h	59;"	d
STB_IMAGE_IMPLEMENTATION	lib/nuklear/demo/x11_xft/nuklear_xlib.h	67;"	d
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/canvas.c	26;"	d	file:
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/extended.c	25;"	d	file:
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/file_browser.c	27;"	d	file:
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/skinning.c	25;"	d	file:
STB_INCLUDE_STB_RECT_PACK_H	lib/cimgui/imgui/imstb_rectpack.h	66;"	d
STB_RECT_PACK_IMPLEMENTATION	lib/cimgui/imgui/imgui_draw.cpp	125;"	d	file:
STB_RECT_PACK_IMPLEMENTATION	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	284;"	d	file:
STB_RECT_PACK_VERSION	lib/cimgui/imgui/imstb_rectpack.h	68;"	d
STB_SPRINTF_IMPLEMENTATION	lib/cimgui/imgui/imgui.cpp	1365;"	d	file:
STB_TEXTEDIT_CHARTYPE	lib/cimgui/imgui/imgui_internal.h	126;"	d
STB_TEXTEDIT_CHARTYPE	lib/cimgui/imgui/imgui_internal.h	128;"	d
STB_TEXTEDIT_CHARTYPE	lib/cimgui/imgui/imstb_textedit.h	295;"	d
STB_TEXTEDIT_DELETECHARS	lib/cimgui/imgui/imgui_widgets.cpp	/^static void STB_TEXTEDIT_DELETECHARS(STB_TEXTEDIT_STRING* obj, int pos, int n)$/;"	f	namespace:ImStb
STB_TEXTEDIT_GETCHAR	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImWchar STB_TEXTEDIT_GETCHAR(const STB_TEXTEDIT_STRING* obj, int idx)                      { return obj->TextW[idx]; }$/;"	f	namespace:ImStb
STB_TEXTEDIT_GETWIDTH	lib/cimgui/imgui/imgui_widgets.cpp	/^static float   STB_TEXTEDIT_GETWIDTH(STB_TEXTEDIT_STRING* obj, int line_start_idx, int char_idx)  { ImWchar c = obj->TextW[line_start_idx + char_idx]; if (c == '\\n') return STB_TEXTEDIT_GETWIDTH_NEWLINE; ImGuiContext& g = *GImGui; return g.Font->GetCharAdvance(c) * (g.FontSize \/ g.Font->FontSize); }$/;"	f	namespace:ImStb
STB_TEXTEDIT_GETWIDTH_NEWLINE	lib/cimgui/imgui/imgui_internal.h	129;"	d
STB_TEXTEDIT_IMPLEMENTATION	lib/cimgui/imgui/imgui_widgets.cpp	3273;"	d	file:
STB_TEXTEDIT_INSERTCHARS	lib/cimgui/imgui/imgui_widgets.cpp	/^static bool STB_TEXTEDIT_INSERTCHARS(STB_TEXTEDIT_STRING* obj, int pos, const ImWchar* new_text, int new_text_len)$/;"	f	namespace:ImStb
STB_TEXTEDIT_KEYTOTEXT	lib/cimgui/imgui/imgui_widgets.cpp	/^static int     STB_TEXTEDIT_KEYTOTEXT(int key)                                                    { return key >= 0x200000 ? 0 : key; }$/;"	f	namespace:ImStb
STB_TEXTEDIT_KEYTYPE	lib/cimgui/imgui/imstb_textedit.h	724;"	d
STB_TEXTEDIT_K_BACKSPACE	lib/cimgui/imgui/imgui_widgets.cpp	3266;"	d	file:
STB_TEXTEDIT_K_DELETE	lib/cimgui/imgui/imgui_widgets.cpp	3265;"	d	file:
STB_TEXTEDIT_K_DOWN	lib/cimgui/imgui/imgui_widgets.cpp	3260;"	d	file:
STB_TEXTEDIT_K_LEFT	lib/cimgui/imgui/imgui_widgets.cpp	3257;"	d	file:
STB_TEXTEDIT_K_LINEEND	lib/cimgui/imgui/imgui_widgets.cpp	3262;"	d	file:
STB_TEXTEDIT_K_LINESTART	lib/cimgui/imgui/imgui_widgets.cpp	3261;"	d	file:
STB_TEXTEDIT_K_REDO	lib/cimgui/imgui/imgui_widgets.cpp	3268;"	d	file:
STB_TEXTEDIT_K_RIGHT	lib/cimgui/imgui/imgui_widgets.cpp	3258;"	d	file:
STB_TEXTEDIT_K_SHIFT	lib/cimgui/imgui/imgui_widgets.cpp	3271;"	d	file:
STB_TEXTEDIT_K_TEXTEND	lib/cimgui/imgui/imgui_widgets.cpp	3264;"	d	file:
STB_TEXTEDIT_K_TEXTSTART	lib/cimgui/imgui/imgui_widgets.cpp	3263;"	d	file:
STB_TEXTEDIT_K_UNDO	lib/cimgui/imgui/imgui_widgets.cpp	3267;"	d	file:
STB_TEXTEDIT_K_UP	lib/cimgui/imgui/imgui_widgets.cpp	3259;"	d	file:
STB_TEXTEDIT_K_WORDLEFT	lib/cimgui/imgui/imgui_widgets.cpp	3269;"	d	file:
STB_TEXTEDIT_K_WORDRIGHT	lib/cimgui/imgui/imgui_widgets.cpp	3270;"	d	file:
STB_TEXTEDIT_LAYOUTROW	lib/cimgui/imgui/imgui_widgets.cpp	/^static void    STB_TEXTEDIT_LAYOUTROW(StbTexteditRow* r, STB_TEXTEDIT_STRING* obj, int line_start_idx)$/;"	f	namespace:ImStb
STB_TEXTEDIT_MOVEWORDLEFT	lib/cimgui/imgui/imgui_widgets.cpp	3207;"	d	file:
STB_TEXTEDIT_MOVEWORDLEFT	lib/cimgui/imgui/imstb_textedit.h	663;"	d
STB_TEXTEDIT_MOVEWORDLEFT_IMPL	lib/cimgui/imgui/imgui_widgets.cpp	/^static int  STB_TEXTEDIT_MOVEWORDLEFT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)   { idx--; while (idx >= 0 && !is_word_boundary_from_right(obj, idx)) idx--; return idx < 0 ? 0 : idx; }$/;"	f	namespace:ImStb
STB_TEXTEDIT_MOVEWORDRIGHT	lib/cimgui/imgui/imgui_widgets.cpp	3208;"	d	file:
STB_TEXTEDIT_MOVEWORDRIGHT	lib/cimgui/imgui/imstb_textedit.h	679;"	d
STB_TEXTEDIT_MOVEWORDRIGHT_IMPL	lib/cimgui/imgui/imgui_widgets.cpp	/^static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)  { idx++; int len = obj->CurLenW; while (idx < len && !is_word_boundary_from_left(obj, idx)) idx++; return idx > len ? len : idx; }$/;"	f	namespace:ImStb
STB_TEXTEDIT_MOVEWORDRIGHT_IMPL	lib/cimgui/imgui/imgui_widgets.cpp	/^static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)  { idx++; int len = obj->CurLenW; while (idx < len && !is_word_boundary_from_right(obj, idx)) idx++; return idx > len ? len : idx; }$/;"	f	namespace:ImStb
STB_TEXTEDIT_NEWLINE	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImWchar STB_TEXTEDIT_NEWLINE = '\\n';$/;"	m	namespace:ImStb	file:
STB_TEXTEDIT_POSITIONTYPE	lib/cimgui/imgui/imstb_textedit.h	298;"	d
STB_TEXTEDIT_STRING	lib/cimgui/imgui/imgui_internal.h	125;"	d
STB_TEXTEDIT_STRING	lib/cimgui/imgui/imgui_internal.h	127;"	d
STB_TEXTEDIT_STRINGLEN	lib/cimgui/imgui/imgui_widgets.cpp	/^static int     STB_TEXTEDIT_STRINGLEN(const STB_TEXTEDIT_STRING* obj)                             { return obj->CurLenW; }$/;"	f	namespace:ImStb
STB_TEXTEDIT_UNDOCHARCOUNT	lib/cimgui/imgui/imgui_internal.h	131;"	d
STB_TEXTEDIT_UNDOCHARCOUNT	lib/cimgui/imgui/imstb_textedit.h	292;"	d
STB_TEXTEDIT_UNDOSTATECOUNT	lib/cimgui/imgui/imgui_internal.h	130;"	d
STB_TEXTEDIT_UNDOSTATECOUNT	lib/cimgui/imgui/imstb_textedit.h	289;"	d
STB_TEXTEDIT_memmove	lib/cimgui/imgui/imstb_textedit.h	386;"	d
STB_TEXT_HAS_SELECTION	lib/cimgui/imgui/imstb_textedit.h	572;"	d
STB_TRUETYPE_IMPLEMENTATION	lib/cimgui/imgui/imgui_draw.cpp	146;"	d	file:
STB_TexteditState	lib/cimgui/imgui/imstb_textedit.h	/^} STB_TexteditState;$/;"	t	typeref:struct:__anon109
STB__SCRAMBLE	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	250;"	d	file:
STB__TRY	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	268;"	d	file:
STP.insert	lib/cimgui/generator/generator_old.lua	/^    function STP.insert(line,comment)$/;"	f
STRINGIFY	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	333;"	d	file:
STRINGIFY	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	318;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	332;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	317;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SafeRelease	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static void SafeRelease(T*& res)$/;"	f	file:
SameLine	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SameLine(float offset_from_start_x, float spacing_w)$/;"	f	class:ImGui
SaveIniSettingsToDisk	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SaveIniSettingsToDisk(const char* ini_filename)$/;"	f	class:ImGui
SaveIniSettingsToMemory	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::SaveIniSettingsToMemory(size_t* out_size)$/;"	f	class:ImGui
Scale	lib/cimgui/cimgui.h	/^    float Scale;$/;"	m	struct:ImFont
Scale	lib/cimgui/generator/output/cimgui.h	/^    float Scale;$/;"	m	struct:ImFont
Scale	lib/cimgui/imgui/imgui.h	/^    float                       Scale;              \/\/ 4     \/\/ in  \/\/ = 1.f      \/\/ Base font scale, multiplied by the per-window font scale which you can adjust with SetWindowFontScale()$/;"	m	struct:ImFont
ScaleAllSizes	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStyle::ScaleAllSizes(float scale_factor)$/;"	f	class:ImGuiStyle
ScaleClipRects	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawData::ScaleClipRects(const ImVec2& fb_scale)$/;"	f	class:ImDrawData
ScanFmt	lib/cimgui/imgui/imgui_internal.h	/^    const char* ScanFmt;        \/\/ Default scanf format for the type$/;"	m	struct:ImGuiDataTypeInfo
Scroll	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  Scroll;$/;"	m	struct:ImGuiWindow
ScrollMax	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollMax;$/;"	m	struct:ImGuiWindow
ScrollTarget	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollTarget;                       \/\/ target scroll position. stored as cursor position with scrolling canceled out, so the highest point is always 0.0f. (FLT_MAX for no change)$/;"	m	struct:ImGuiWindow
ScrollTargetCenterRatio	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollTargetCenterRatio;            \/\/ 0.0f = scroll so that target position is at top, 0.5f = scroll so that target position is centered$/;"	m	struct:ImGuiWindow
ScrollToBottom	lib/cimgui/imgui/imgui_demo.cpp	/^    bool                  ScrollToBottom;$/;"	m	struct:ExampleAppConsole	file:
ScrollToBringRectIntoView	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::ScrollToBringRectIntoView(ImGuiWindow* window, const ImRect& item_rect)$/;"	f	class:ImGui
ScrollX	lib/cimgui/imgui/imgui_internal.h	/^    float                   ScrollX;                \/\/ horizontal scrolling\/offset$/;"	m	struct:ImGuiInputTextState
Scrollbar	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Scrollbar(ImGuiAxis axis)$/;"	f	class:ImGui
ScrollbarClickDeltaToGrabCenter	lib/cimgui/imgui/imgui_internal.h	/^    float                   ScrollbarClickDeltaToGrabCenter;    \/\/ Distance between mouse and center of grab box, normalized in parent space. Use storage?$/;"	m	struct:ImGuiContext
ScrollbarEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::ScrollbarEx(const ImRect& bb_frame, ImGuiID id, ImGuiAxis axis, float* p_scroll_v, float size_avail_v, float size_contents_v, ImDrawCornerFlags rounding_corners)$/;"	f	class:ImGui
ScrollbarRounding	lib/cimgui/cimgui.h	/^    float ScrollbarRounding;$/;"	m	struct:ImGuiStyle
ScrollbarRounding	lib/cimgui/generator/output/cimgui.h	/^    float ScrollbarRounding;$/;"	m	struct:ImGuiStyle
ScrollbarRounding	lib/cimgui/imgui/imgui.h	/^    float       ScrollbarRounding;          \/\/ Radius of grab corners for scrollbar.$/;"	m	struct:ImGuiStyle
ScrollbarSize	lib/cimgui/cimgui.h	/^    float ScrollbarSize;$/;"	m	struct:ImGuiStyle
ScrollbarSize	lib/cimgui/generator/output/cimgui.h	/^    float ScrollbarSize;$/;"	m	struct:ImGuiStyle
ScrollbarSize	lib/cimgui/imgui/imgui.h	/^    float       ScrollbarSize;              \/\/ Width of the vertical scrollbar, Height of the horizontal scrollbar.$/;"	m	struct:ImGuiStyle
ScrollbarSizes	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollbarSizes;                     \/\/ Size taken by scrollbars on each axis$/;"	m	struct:ImGuiWindow
ScrollbarX	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ScrollbarX, ScrollbarY;             \/\/ Are scrollbars visible?$/;"	m	struct:ImGuiWindow
ScrollbarY	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ScrollbarX, ScrollbarY;             \/\/ Are scrollbars visible?$/;"	m	struct:ImGuiWindow
ScrollingAnim	lib/cimgui/imgui/imgui_internal.h	/^    float               ScrollingAnim;$/;"	m	struct:ImGuiTabBar
ScrollingSpeed	lib/cimgui/imgui/imgui_internal.h	/^    float               ScrollingSpeed;$/;"	m	struct:ImGuiTabBar
ScrollingTarget	lib/cimgui/imgui/imgui_internal.h	/^    float               ScrollingTarget;$/;"	m	struct:ImGuiTabBar
ScrollingTargetDistToVisibility	lib/cimgui/imgui/imgui_internal.h	/^    float               ScrollingTargetDistToVisibility;$/;"	m	struct:ImGuiTabBar
SelectAll	lib/cimgui/imgui/imgui_internal.h	/^    void        SelectAll()                 { Stb.select_start = 0; Stb.cursor = Stb.select_end = CurLenW; Stb.has_preferred_x = 0; }$/;"	f	struct:ImGuiInputTextState
Selectable	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::Selectable(const char* label, bool selected, ImGuiSelectableFlags flags, const ImVec2& size_arg)$/;"	f	class:ImGui
Selectable	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::Selectable(const char* label, bool* p_selected, ImGuiSelectableFlags flags, const ImVec2& size_arg)$/;"	f	class:ImGui
SelectableTextAlign	lib/cimgui/cimgui.h	/^    ImVec2 SelectableTextAlign;$/;"	m	struct:ImGuiStyle
SelectableTextAlign	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 SelectableTextAlign;$/;"	m	struct:ImGuiStyle
SelectableTextAlign	lib/cimgui/imgui/imgui.h	/^    ImVec2      SelectableTextAlign;        \/\/ Alignment of selectable text when selectable is larger than text. Defaults to (0.0f, 0.0f) (top-left aligned).$/;"	m	struct:ImGuiStyle
SelectedAllMouseLock	lib/cimgui/imgui/imgui_internal.h	/^    bool                    SelectedAllMouseLock;   \/\/ after a double-click to select all, we ignore further mouse drags to update selection$/;"	m	struct:ImGuiInputTextState
SelectedTabId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             SelectedTabId;          \/\/ Selected tab\/window$/;"	m	struct:ImGuiTabBar
SelectionEnd	lib/cimgui/cimgui.h	/^    int SelectionEnd;$/;"	m	struct:ImGuiInputTextCallbackData
SelectionEnd	lib/cimgui/generator/output/cimgui.h	/^    int SelectionEnd;$/;"	m	struct:ImGuiInputTextCallbackData
SelectionEnd	lib/cimgui/imgui/imgui.h	/^    int                 SelectionEnd;   \/\/                                      \/\/ Read-write   \/\/ [Completion,History,Always]$/;"	m	struct:ImGuiInputTextCallbackData
SelectionStart	lib/cimgui/cimgui.h	/^    int SelectionStart;$/;"	m	struct:ImGuiInputTextCallbackData
SelectionStart	lib/cimgui/generator/output/cimgui.h	/^    int SelectionStart;$/;"	m	struct:ImGuiInputTextCallbackData
SelectionStart	lib/cimgui/imgui/imgui.h	/^    int                 SelectionStart; \/\/                                      \/\/ Read-write   \/\/ [Completion,History,Always] == to SelectionEnd when no selection)$/;"	m	struct:ImGuiInputTextCallbackData
SemaphoreIndex	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    uint32_t            SemaphoreIndex;         \/\/ Current set of swapchain wait semaphores we're using (needs to be distinct from per frame data)$/;"	m	struct:ImGui_ImplVulkanH_Window
Separator	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Separator()$/;"	f	class:ImGui
SeparatorEx	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::SeparatorEx(ImGuiSeparatorFlags flags)$/;"	f	class:ImGui
SetActiveID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetActiveID(ImGuiID id, ImGuiWindow* window)$/;"	f	class:ImGui
SetAllInt	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetAllInt(int v)$/;"	f	class:ImGuiStorage
SetAllocatorFunctions	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetAllocatorFunctions(void* (*alloc_func)(size_t sz, void* user_data), void (*free_func)(void* ptr, void* user_data), void* user_data)$/;"	f	class:ImGui
SetAllocatorFunctions	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^void ImGuiFreeType::SetAllocatorFunctions(void* (*alloc_func)(size_t sz, void* user_data), void (*free_func)(void* ptr, void* user_data), void* user_data)$/;"	f	class:ImGuiFreeType
SetBit	lib/cimgui/imgui/imgui.h	/^    inline void     SetBit(int n)       { int off = (n >> 5); ImU32 mask = 1u << (n & 31); UsedChars[off] |= mask; }               \/\/ Set bit n in the array$/;"	f	struct:ImFontGlyphRangesBuilder
SetBit	lib/cimgui/imgui/imgui_internal.h	/^    void            SetBit(int n, bool v)   { int off = (n >> 5); int mask = 1 << (n & 31); if (v) Storage[off] |= mask; else Storage[off] &= ~mask; }$/;"	f	struct:ImBoolVector
SetBool	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetBool(ImGuiID key, bool val)$/;"	f	class:ImGuiStorage
SetCircleSegmentMaxError	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawListSharedData::SetCircleSegmentMaxError(float max_error)$/;"	f	class:ImDrawListSharedData
SetClipboardText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetClipboardText(const char* text)$/;"	f	class:ImGui
SetClipboardTextFn	lib/cimgui/cimgui.h	/^    void (*SetClipboardTextFn)(void* user_data, const char* text);$/;"	m	struct:ImGuiIO
SetClipboardTextFn	lib/cimgui/generator/output/cimgui.h	/^    void (*SetClipboardTextFn)(void* user_data, const char* text);$/;"	m	struct:ImGuiIO
SetClipboardTextFn	lib/cimgui/imgui/imgui.h	/^    void        (*SetClipboardTextFn)(void* user_data, const char* text);$/;"	m	struct:ImGuiIO
SetClipboardTextFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static void SetClipboardTextFn_DefaultImpl(void*, const char* text)$/;"	f	file:
SetColorEditOptions	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::SetColorEditOptions(ImGuiColorEditFlags flags)$/;"	f	class:ImGui
SetColumnOffset	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::SetColumnOffset(int column_index, float offset)$/;"	f	class:ImGui
SetColumnWidth	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::SetColumnWidth(int column_index, float width)$/;"	f	class:ImGui
SetCurrentChannel	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawListSplitter::SetCurrentChannel(ImDrawList* draw_list, int idx)$/;"	f	class:ImDrawListSplitter
SetCurrentContext	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCurrentContext(ImGuiContext* ctx)$/;"	f	class:ImGui
SetCurrentFont	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCurrentFont(ImFont* font)$/;"	f	class:ImGui
SetCurrentWindow	lib/cimgui/imgui/imgui.cpp	/^static void SetCurrentWindow(ImGuiWindow* window)$/;"	f	file:
SetCursorPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorPos(const ImVec2& local_pos)$/;"	f	class:ImGui
SetCursorPosX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorPosX(float x)$/;"	f	class:ImGui
SetCursorPosY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorPosY(float y)$/;"	f	class:ImGui
SetCursorPosYAndSetupDummyPrevLine	lib/cimgui/imgui/imgui.cpp	/^static void SetCursorPosYAndSetupDummyPrevLine(float pos_y, float line_height)$/;"	f	file:
SetCursorScreenPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorScreenPos(const ImVec2& pos)$/;"	f	class:ImGui
SetDragDropPayload	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SetDragDropPayload(const char* type, const void* data, size_t data_size, ImGuiCond cond)$/;"	f	class:ImGui
SetFallbackChar	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::SetFallbackChar(ImWchar c)$/;"	f	class:ImFont
SetFloat	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetFloat(ImGuiID key, float val)$/;"	f	class:ImGuiStorage
SetFocusID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetFocusID(ImGuiID id, ImGuiWindow* window)$/;"	f	class:ImGui
SetGlyphVisible	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::SetGlyphVisible(ImWchar c, bool visible)$/;"	f	class:ImFont
SetHSV	lib/cimgui/imgui/imgui.h	/^    inline void    SetHSV(float h, float s, float v, float a = 1.0f){ ImGui::ColorConvertHSVtoRGB(h, s, v, Value.x, Value.y, Value.z); Value.w = a; }$/;"	f	struct:ImColor
SetHoveredID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetHoveredID(ImGuiID id)$/;"	f	class:ImGui
SetInt	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetInt(ImGuiID key, int val)$/;"	f	class:ImGuiStorage
SetItemAllowOverlap	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetItemAllowOverlap()$/;"	f	class:ImGui
SetItemDefaultFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetItemDefaultFocus()$/;"	f	class:ImGui
SetKeyboardFocusHere	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetKeyboardFocusHere(int offset)$/;"	f	class:ImGui
SetMouseCursor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetMouseCursor(ImGuiMouseCursor cursor_type)$/;"	f	class:ImGui
SetNavID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNavID(ImGuiID id, int nav_layer, ImGuiID focus_scope_id)$/;"	f	class:ImGui
SetNavIDWithRectRel	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNavIDWithRectRel(ImGuiID id, int nav_layer, ImGuiID focus_scope_id, const ImRect& rect_rel)$/;"	f	class:ImGui
SetNextItemOpen	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::SetNextItemOpen(bool is_open, ImGuiCond cond)$/;"	f	class:ImGui
SetNextItemWidth	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextItemWidth(float item_width)$/;"	f	class:ImGui
SetNextTreeNodeOpen	lib/cimgui/imgui/imgui.h	/^    static inline void  SetNextTreeNodeOpen(bool open, ImGuiCond cond = 0) { SetNextItemOpen(open, cond); }$/;"	f	namespace:ImGui
SetNextWindowBgAlpha	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowBgAlpha(float alpha)$/;"	f	class:ImGui
SetNextWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowCollapsed(bool collapsed, ImGuiCond cond)$/;"	f	class:ImGui
SetNextWindowContentSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowContentSize(const ImVec2& size)$/;"	f	class:ImGui
SetNextWindowFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowFocus()$/;"	f	class:ImGui
SetNextWindowPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowPos(const ImVec2& pos, ImGuiCond cond, const ImVec2& pivot)$/;"	f	class:ImGui
SetNextWindowSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowSize(const ImVec2& size, ImGuiCond cond)$/;"	f	class:ImGui
SetNextWindowSizeConstraints	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowSizeConstraints(const ImVec2& size_min, const ImVec2& size_max, ImGuiSizeCallback custom_callback, void* custom_callback_user_data)$/;"	f	class:ImGui
SetPixelHeight	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    void FreeTypeFont::SetPixelHeight(int pixel_height)$/;"	f	class:__anon112::FreeTypeFont
SetScrollFromPosX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollFromPosX(ImGuiWindow* window, float local_x, float center_x_ratio)$/;"	f	class:ImGui
SetScrollFromPosX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollFromPosX(float local_x, float center_x_ratio)$/;"	f	class:ImGui
SetScrollFromPosY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollFromPosY(ImGuiWindow* window, float local_y, float center_y_ratio)$/;"	f	class:ImGui
SetScrollFromPosY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollFromPosY(float local_y, float center_y_ratio)$/;"	f	class:ImGui
SetScrollHere	lib/cimgui/imgui/imgui.h	/^    static inline void  SetScrollHere(float center_ratio=0.5f){ SetScrollHereY(center_ratio); }$/;"	f	namespace:ImGui
SetScrollHereX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollHereX(float center_x_ratio)$/;"	f	class:ImGui
SetScrollHereY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollHereY(float center_y_ratio)$/;"	f	class:ImGui
SetScrollX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollX(ImGuiWindow* window, float new_scroll_x)$/;"	f	class:ImGui
SetScrollX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollX(float scroll_x)$/;"	f	class:ImGui
SetScrollY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollY(ImGuiWindow* window, float new_scroll_y)$/;"	f	class:ImGui
SetScrollY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollY(float scroll_y)$/;"	f	class:ImGui
SetStateStorage	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetStateStorage(ImGuiStorage* tree)$/;"	f	class:ImGui
SetTabItemClosed	lib/cimgui/imgui/imgui_widgets.cpp	/^void    ImGui::SetTabItemClosed(const char* label)$/;"	f	class:ImGui
SetTexID	lib/cimgui/imgui/imgui.h	/^    void                        SetTexID(ImTextureID id)    { TexID = id; }$/;"	f	struct:ImFontAtlas
SetTooltip	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetTooltip(const char* fmt, ...)$/;"	f	class:ImGui
SetTooltipV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetTooltipV(const char* fmt, va_list args)$/;"	f	class:ImGui
SetVoidPtr	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetVoidPtr(ImGuiID key, void* val)$/;"	f	class:ImGuiStorage
SetWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowCollapsed(ImGuiWindow* window, bool collapsed, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowCollapsed(bool collapsed, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowCollapsed(const char* name, bool collapsed, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowCollapsedAllowFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SetWindowCollapsedAllowFlags;       \/\/ store acceptable condition flags for SetNextWindowCollapsed() use.$/;"	m	struct:ImGuiWindow
SetWindowConditionAllowFlags	lib/cimgui/imgui/imgui.cpp	/^static void SetWindowConditionAllowFlags(ImGuiWindow* window, ImGuiCond flags, bool enabled)$/;"	f	file:
SetWindowFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowFocus()$/;"	f	class:ImGui
SetWindowFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowFocus(const char* name)$/;"	f	class:ImGui
SetWindowFontScale	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowFontScale(float scale)$/;"	f	class:ImGui
SetWindowPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowPos(ImGuiWindow* window, const ImVec2& pos, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowPos(const ImVec2& pos, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowPos(const char* name, const ImVec2& pos, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowPosAllowFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SetWindowPosAllowFlags;             \/\/ store acceptable condition flags for SetNextWindowPos() use.$/;"	m	struct:ImGuiWindow
SetWindowPosPivot	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SetWindowPosPivot;                  \/\/ store window pivot for positioning. ImVec2(0,0) when positioning from top-left corner; ImVec2(0.5f,0.5f) for centering; ImVec2(1,1) for bottom right.$/;"	m	struct:ImGuiWindow
SetWindowPosVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SetWindowPosVal;                    \/\/ store window position when using a non-zero Pivot (position set needs to be processed when we know the window size)$/;"	m	struct:ImGuiWindow
SetWindowSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowSize(ImGuiWindow* window, const ImVec2& size, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowSize(const ImVec2& size, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowSize(const char* name, const ImVec2& size, ImGuiCond cond)$/;"	f	class:ImGui
SetWindowSizeAllowFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SetWindowSizeAllowFlags;            \/\/ store acceptable condition flags for SetNextWindowSize() use.$/;"	m	struct:ImGuiWindow
SettingsDirtyTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   SettingsDirtyTimer;                 \/\/ Save .ini Settings to memory when time reaches zero$/;"	m	struct:ImGuiContext
SettingsHandlers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiSettingsHandler>      SettingsHandlers;       \/\/ List of .ini settings handlers$/;"	m	struct:ImGuiContext
SettingsIniData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextBuffer         SettingsIniData;                    \/\/ In memory .ini settings$/;"	m	struct:ImGuiContext
SettingsLoaded	lib/cimgui/imgui/imgui_internal.h	/^    bool                    SettingsLoaded;$/;"	m	struct:ImGuiContext
SettingsOffset	lib/cimgui/imgui/imgui_internal.h	/^    int                     SettingsOffset;                     \/\/ Offset into SettingsWindows[] (offsets are always valid as we only grow the array from the back)$/;"	m	struct:ImGuiWindow
SettingsWindows	lib/cimgui/imgui/imgui_internal.h	/^    ImChunkStream<ImGuiWindowSettings>  SettingsWindows;        \/\/ ImGuiWindow .ini settings entries$/;"	m	struct:ImGuiContext
SetupDrawData	lib/cimgui/imgui/imgui.cpp	/^static void SetupDrawData(ImVector<ImDrawList*>* draw_lists, ImDrawData* draw_data)$/;"	f	file:
SetupVulkan	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void SetupVulkan(const char** extensions, uint32_t extensions_count)$/;"	f	file:
SetupVulkan	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static void SetupVulkan(const char** extensions, uint32_t extensions_count)$/;"	f	file:
SetupVulkanWindow	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void SetupVulkanWindow(ImGui_ImplVulkanH_Window* wd, VkSurfaceKHR surface, int width, int height)$/;"	f	file:
SetupVulkanWindow	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static void SetupVulkanWindow(ImGui_ImplVulkanH_Window* wd, VkSurfaceKHR surface, int width, int height)$/;"	f	file:
ShadeVertsLinearColorGradientKeepAlpha	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, ImVec2 gradient_p0, ImVec2 gradient_p1, ImU32 col0, ImU32 col1)$/;"	f	class:ImGui
ShadeVertsLinearUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::ShadeVertsLinearUV(ImDrawList* draw_list, int vert_start_idx, int vert_end_idx, const ImVec2& a, const ImVec2& b, const ImVec2& uv_a, const ImVec2& uv_b, bool clamp)$/;"	f	class:ImGui
ShowAboutWindow	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowAboutWindow(bool* p_open)$/;"	f	class:ImGui
ShowAboutWindow	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowAboutWindow(bool*) {}$/;"	f	class:ImGui
ShowDemoWindow	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowDemoWindow(bool* p_open)$/;"	f	class:ImGui
ShowDemoWindow	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowDemoWindow(bool*) {}$/;"	f	class:ImGui
ShowDemoWindowColumns	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowDemoWindowColumns()$/;"	f	file:
ShowDemoWindowLayout	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowDemoWindowLayout()$/;"	f	file:
ShowDemoWindowMisc	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowDemoWindowMisc()$/;"	f	file:
ShowDemoWindowPopups	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowDemoWindowPopups()$/;"	f	file:
ShowDemoWindowWidgets	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowDemoWindowWidgets()$/;"	f	file:
ShowExampleAppAutoResize	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppAutoResize(bool* p_open)$/;"	f	file:
ShowExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppConsole(bool* p_open)$/;"	f	file:
ShowExampleAppConstrainedResize	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppConstrainedResize(bool* p_open)$/;"	f	file:
ShowExampleAppCustomRendering	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppCustomRendering(bool* p_open)$/;"	f	file:
ShowExampleAppDocuments	lib/cimgui/imgui/imgui_demo.cpp	/^void ShowExampleAppDocuments(bool* p_open)$/;"	f
ShowExampleAppLayout	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppLayout(bool* p_open)$/;"	f	file:
ShowExampleAppLog	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppLog(bool* p_open)$/;"	f	file:
ShowExampleAppLongText	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppLongText(bool* p_open)$/;"	f	file:
ShowExampleAppMainMenuBar	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppMainMenuBar()$/;"	f	file:
ShowExampleAppPropertyEditor	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppPropertyEditor(bool* p_open)$/;"	f	file:
ShowExampleAppSimpleOverlay	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppSimpleOverlay(bool* p_open)$/;"	f	file:
ShowExampleAppWindowTitles	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppWindowTitles(bool*)$/;"	f	file:
ShowExampleMenuFile	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleMenuFile()$/;"	f	file:
ShowFontSelector	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowFontSelector(const char* label)$/;"	f	class:ImGui
ShowMetricsWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ShowMetricsWindow(bool* p_open)$/;"	f	class:ImGui
ShowMetricsWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ShowMetricsWindow(bool*) { }$/;"	f	class:ImGui
ShowStyleEditor	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowStyleEditor(ImGuiStyle* ref)$/;"	f	class:ImGui
ShowStyleEditor	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowStyleEditor(ImGuiStyle*) {}$/;"	f	class:ImGui
ShowStyleSelector	lib/cimgui/imgui/imgui_demo.cpp	/^bool ImGui::ShowStyleSelector(const char* label)$/;"	f	class:ImGui
ShowUserGuide	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowUserGuide() {}$/;"	f	class:ImGui
ShowUserGuide	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowUserGuide()$/;"	f	class:ImGui
ShrinkWidthBuffer	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiShrinkWidthItem>  ShrinkWidthBuffer;$/;"	m	struct:ImGuiContext
ShrinkWidthItemComparer	lib/cimgui/imgui/imgui_widgets.cpp	/^static int IMGUI_CDECL ShrinkWidthItemComparer(const void* lhs, const void* rhs)$/;"	f	file:
ShrinkWidths	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::ShrinkWidths(ImGuiShrinkWidthItem* items, int count, float width_excess)$/;"	f	class:ImGui
Shutdown	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Shutdown(ImGuiContext* context)$/;"	f	class:ImGui
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	m	struct:ImVector_ImDrawChannel
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	m	struct:ImVector_ImDrawCmd
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	m	struct:ImVector_ImDrawIdx
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	m	struct:ImVector_ImDrawVert
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	m	struct:ImVector_ImFontAtlasCustomRect
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	m	struct:ImVector_ImFontConfig
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	m	struct:ImVector_ImFontGlyph
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	m	struct:ImVector_ImFontPtr
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	m	struct:ImVector_ImGuiStoragePair
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	m	struct:ImVector_ImGuiTextRange
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	m	struct:ImVector_ImTextureID
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	m	struct:ImVector_ImU32
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	m	struct:ImVector_ImVec2
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	m	struct:ImVector_ImVec4
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	m	struct:ImVector_ImWchar
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	m	struct:ImVector_char
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	m	struct:ImVector_float
Size	lib/cimgui/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	m	struct:ImVector
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawChannel {int Size;int Capacity;ImDrawChannel* Data;} ImVector_ImDrawChannel;$/;"	m	struct:ImVector_ImDrawChannel
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawCmd {int Size;int Capacity;ImDrawCmd* Data;} ImVector_ImDrawCmd;$/;"	m	struct:ImVector_ImDrawCmd
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawIdx {int Size;int Capacity;ImDrawIdx* Data;} ImVector_ImDrawIdx;$/;"	m	struct:ImVector_ImDrawIdx
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImDrawVert {int Size;int Capacity;ImDrawVert* Data;} ImVector_ImDrawVert;$/;"	m	struct:ImVector_ImDrawVert
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontAtlasCustomRect {int Size;int Capacity;ImFontAtlasCustomRect* Data;} ImVector_ImFontAtlasCustomRect;$/;"	m	struct:ImVector_ImFontAtlasCustomRect
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontConfig {int Size;int Capacity;ImFontConfig* Data;} ImVector_ImFontConfig;$/;"	m	struct:ImVector_ImFontConfig
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontGlyph {int Size;int Capacity;ImFontGlyph* Data;} ImVector_ImFontGlyph;$/;"	m	struct:ImVector_ImFontGlyph
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImFontPtr {int Size;int Capacity;ImFont** Data;} ImVector_ImFontPtr;$/;"	m	struct:ImVector_ImFontPtr
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiStoragePair {int Size;int Capacity;ImGuiStoragePair* Data;} ImVector_ImGuiStoragePair;$/;"	m	struct:ImVector_ImGuiStoragePair
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImGuiTextRange {int Size;int Capacity;ImGuiTextRange* Data;} ImVector_ImGuiTextRange;$/;"	m	struct:ImVector_ImGuiTextRange
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImTextureID {int Size;int Capacity;ImTextureID* Data;} ImVector_ImTextureID;$/;"	m	struct:ImVector_ImTextureID
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImU32 {int Size;int Capacity;ImU32* Data;} ImVector_ImU32;$/;"	m	struct:ImVector_ImU32
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec2 {int Size;int Capacity;ImVec2* Data;} ImVector_ImVec2;$/;"	m	struct:ImVector_ImVec2
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImVec4 {int Size;int Capacity;ImVec4* Data;} ImVector_ImVec4;$/;"	m	struct:ImVector_ImVec4
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_ImWchar {int Size;int Capacity;ImWchar* Data;} ImVector_ImWchar;$/;"	m	struct:ImVector_ImWchar
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_char {int Size;int Capacity;char* Data;} ImVector_char;$/;"	m	struct:ImVector_char
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector_float {int Size;int Capacity;float* Data;} ImVector_float;$/;"	m	struct:ImVector_float
Size	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVector{int Size;int Capacity;void* Data;} ImVector;$/;"	m	struct:ImVector
Size	lib/cimgui/imgui/imgui.h	/^    int                 Size;$/;"	m	struct:ImVector
Size	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  Size;                               \/\/ Current size (==SizeFull or collapsed title bar size)$/;"	m	struct:ImGuiWindow
Size	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2ih    Size;$/;"	m	struct:ImGuiWindowSettings
Size	lib/cimgui/imgui/imgui_internal.h	/^    size_t      Size;           \/\/ Size in byte$/;"	m	struct:ImGuiDataTypeInfo
SizeCallback	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSizeCallback           SizeCallback;$/;"	m	struct:ImGuiNextWindowData
SizeCallbackUserData	lib/cimgui/imgui/imgui_internal.h	/^    void*                       SizeCallbackUserData;$/;"	m	struct:ImGuiNextWindowData
SizeCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond                   SizeCond;$/;"	m	struct:ImGuiNextWindowData
SizeConstraintRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                      SizeConstraintRect;$/;"	m	struct:ImGuiNextWindowData
SizeFull	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SizeFull;                           \/\/ Size when non collapsed$/;"	m	struct:ImGuiWindow
SizePixels	lib/cimgui/cimgui.h	/^    float SizePixels;$/;"	m	struct:ImFontConfig
SizePixels	lib/cimgui/generator/output/cimgui.h	/^    float SizePixels;$/;"	m	struct:ImFontConfig
SizePixels	lib/cimgui/imgui/imgui.h	/^    float           SizePixels;             \/\/          \/\/ Size in pixels for rasterizer (more or less maps to the resulting font height).$/;"	m	struct:ImFontConfig
SizeVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                      SizeVal;$/;"	m	struct:ImGuiNextWindowData
SkipItems	lib/cimgui/imgui/imgui_internal.h	/^    bool                    SkipItems;                          \/\/ Set when items can safely be all clipped (e.g. window not visible or collapsed)$/;"	m	struct:ImGuiWindow
SliderAngle	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderAngle(const char* label, float* v_rad, float v_degrees_min, float v_degrees_max, const char* format)$/;"	f	class:ImGui
SliderBehavior	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderBehavior(const ImRect& bb, ImGuiID id, ImGuiDataType data_type, void* p_v, const void* p_min, const void* p_max, const char* format, float power, ImGuiSliderFlags flags, ImRect* out_grab_bb)$/;"	f	class:ImGui
SliderBehaviorT	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderBehaviorT(const ImRect& bb, ImGuiID id, ImGuiDataType data_type, TYPE* v, const TYPE v_min, const TYPE v_max, const char* format, float power, ImGuiSliderFlags flags, ImRect* out_grab_bb)$/;"	f	class:ImGui
SliderCalcRatioFromValueT	lib/cimgui/imgui/imgui_widgets.cpp	/^float ImGui::SliderCalcRatioFromValueT(ImGuiDataType data_type, TYPE v, TYPE v_min, TYPE v_max, float power, float linear_zero_pos)$/;"	f	class:ImGui
SliderFloat	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderFloat(const char* label, float* v, float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
SliderFloat2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderFloat2(const char* label, float v[2], float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
SliderFloat3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderFloat3(const char* label, float v[3], float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
SliderFloat4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderFloat4(const char* label, float v[4], float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
SliderInt	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderInt(const char* label, int* v, int v_min, int v_max, const char* format)$/;"	f	class:ImGui
SliderInt2	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderInt2(const char* label, int v[2], int v_min, int v_max, const char* format)$/;"	f	class:ImGui
SliderInt3	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderInt3(const char* label, int v[3], int v_min, int v_max, const char* format)$/;"	f	class:ImGui
SliderInt4	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderInt4(const char* label, int v[4], int v_min, int v_max, const char* format)$/;"	f	class:ImGui
SliderScalar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderScalar(const char* label, ImGuiDataType data_type, void* p_data, const void* p_min, const void* p_max, const char* format, float power)$/;"	f	class:ImGui
SliderScalarN	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SliderScalarN(const char* label, ImGuiDataType data_type, void* v, int components, const void* v_min, const void* v_max, const char* format, float power)$/;"	f	class:ImGui
SmallButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SmallButton(const char* label)$/;"	f	class:ImGui
SmoothingMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} SmoothingMode;$/;"	t	typeref:enum:__anon180
SmoothingModeAntiAlias	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeAntiAlias,$/;"	e	enum:__anon180
SmoothingModeAntiAlias8x4	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeAntiAlias8x4 = SmoothingModeAntiAlias,$/;"	e	enum:__anon180
SmoothingModeAntiAlias8x8	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeAntiAlias8x8$/;"	e	enum:__anon180
SmoothingModeDefault	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeDefault     = QualityModeDefault,$/;"	e	enum:__anon180
SmoothingModeHighQuality	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeHighQuality = QualityModeHigh,$/;"	e	enum:__anon180
SmoothingModeHighSpeed	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeHighSpeed   = QualityModeLow,$/;"	e	enum:__anon180
SmoothingModeInvalid	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeInvalid     = QualityModeInvalid,$/;"	e	enum:__anon180
SmoothingModeNone	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeNone,$/;"	e	enum:__anon180
SourceId	lib/cimgui/cimgui.h	/^    ImGuiID SourceId;$/;"	m	struct:ImGuiPayload
SourceId	lib/cimgui/generator/output/cimgui.h	/^    ImGuiID SourceId;$/;"	m	struct:ImGuiPayload
SourceId	lib/cimgui/imgui/imgui.h	/^    ImGuiID         SourceId;           \/\/ Source item id$/;"	m	struct:ImGuiPayload
SourceParentId	lib/cimgui/cimgui.h	/^    ImGuiID SourceParentId;$/;"	m	struct:ImGuiPayload
SourceParentId	lib/cimgui/generator/output/cimgui.h	/^    ImGuiID SourceParentId;$/;"	m	struct:ImGuiPayload
SourceParentId	lib/cimgui/imgui/imgui.h	/^    ImGuiID         SourceParentId;     \/\/ Source parent id (if available)$/;"	m	struct:ImGuiPayload
SourceWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*        SourceWindow;   \/\/ Set on OpenPopup() copy of NavWindow at the time of opening the popup$/;"	m	struct:ImGuiPopupData
Spacing	lib/cimgui/imgui/imgui_internal.h	/^    float       Spacing;$/;"	m	struct:ImGuiMenuColumns
Spacing	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Spacing()$/;"	f	class:ImGui
Split	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawListSplitter::Split(ImDrawList* draw_list, int channels_count)$/;"	f	class:ImDrawListSplitter
Splitter	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawListSplitter  Splitter;$/;"	m	struct:ImGuiColumns
SplitterBehavior	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::SplitterBehavior(const ImRect& bb, ImGuiID id, ImGuiAxis axis, float* size1, float* size2, float min_size1, float min_size2, float hover_extend, float hover_visibility_delay)$/;"	f	class:ImGui
SrcCount	lib/cimgui/imgui/imgui_draw.cpp	/^    int                 SrcCount;           \/\/ Number of source fonts targeting this destination font.$/;"	m	struct:ImFontBuildDstData	file:
SrcCount	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    int                 SrcCount;           \/\/ Number of source fonts targeting this destination font.$/;"	m	struct:ImFontBuildDstDataFT	file:
SrcRanges	lib/cimgui/imgui/imgui_draw.cpp	/^    const ImWchar*      SrcRanges;          \/\/ Ranges as requested by user (user is allowed to request too much, e.g. 0x0020..0xFFFF)$/;"	m	struct:ImFontBuildSrcData	file:
SrcRanges	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    const ImWchar*      SrcRanges;          \/\/ Ranges as requested by user (user is allowed to request too much, e.g. 0x0020..0xFFFF)$/;"	m	struct:ImFontBuildSrcDataFT	file:
StackSizesBackup	lib/cimgui/imgui/imgui_internal.h	/^    short                   StackSizesBackup[6];    \/\/ Store size of various stacks for asserting$/;"	m	struct:ImGuiWindowTempData
StartLockWheelingWindow	lib/cimgui/imgui/imgui.cpp	/^static void StartLockWheelingWindow(ImGuiWindow* window)$/;"	f	file:
StartMouseMovingWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::StartMouseMovingWindow(ImGuiWindow* window)$/;"	f	class:ImGui
StartPosY	lib/cimgui/cimgui.h	/^    float StartPosY;$/;"	m	struct:ImGuiListClipper
StartPosY	lib/cimgui/generator/output/cimgui.h	/^    float StartPosY;$/;"	m	struct:ImGuiListClipper
StartPosY	lib/cimgui/imgui/imgui.h	/^    float   StartPosY;$/;"	m	struct:ImGuiListClipper
StateStorage	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStorage            StateStorage;$/;"	m	struct:ImGuiWindow
StateStorage	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStorage*           StateStorage;           \/\/ Current persistent per-window storage (store e.g. tree node open\/close state)$/;"	m	struct:ImGuiWindowTempData
Status	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef int Status;$/;"	t
Stb	lib/cimgui/imgui/imgui_internal.h	/^    ImStb::STB_TexteditState Stb;                   \/\/ state for stb_textedit.h$/;"	m	struct:ImGuiInputTextState
StbFindState	lib/cimgui/imgui/imstb_textedit.h	/^} StbFindState;$/;"	t	typeref:struct:__anon111
StbTexteditRow	lib/cimgui/imgui/imstb_textedit.h	/^} StbTexteditRow;$/;"	t	typeref:struct:__anon110
StbUndoRecord	lib/cimgui/imgui/imstb_textedit.h	/^} StbUndoRecord;$/;"	t	typeref:struct:__anon107
StbUndoState	lib/cimgui/imgui/imstb_textedit.h	/^} StbUndoState;$/;"	t	typeref:struct:__anon108
Step	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiListClipper::Step()$/;"	f	class:ImGuiListClipper
StepNo	lib/cimgui/cimgui.h	/^    int StepNo;$/;"	m	struct:ImGuiListClipper
StepNo	lib/cimgui/generator/output/cimgui.h	/^    int StepNo;$/;"	m	struct:ImGuiListClipper
StepNo	lib/cimgui/imgui/imgui.h	/^    int     StepNo;$/;"	m	struct:ImGuiListClipper
Storage	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<int>   Storage;$/;"	m	struct:ImBoolVector
Str	lib/cimgui/imgui/misc/cpp/imgui_stdlib.cpp	/^    std::string*            Str;$/;"	m	struct:InputTextCallback_UserData	file:
Strdup	lib/cimgui/imgui/imgui_demo.cpp	/^    static char* Strdup(const char *str)                             { size_t len = strlen(str) + 1; void* buf = malloc(len); IM_ASSERT(buf); return (char*)memcpy(buf, (const void*)str, len); }$/;"	f	struct:ExampleAppConsole
Stricmp	lib/cimgui/imgui/imgui_demo.cpp	/^    static int   Stricmp(const char* str1, const char* str2)         { int d; while ((d = toupper(*str2) - toupper(*str1)) == 0 && *str1) { str1++; str2++; } return d; }$/;"	f	struct:ExampleAppConsole
Stride	lib/cimgui/imgui/imgui_widgets.cpp	/^    int Stride;$/;"	m	struct:ImGuiPlotArrayGetterData	file:
StringFormatFlags	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} StringFormatFlags;$/;"	t	typeref:enum:__anon178
StringFormatFlagsDirectionRightToLeft	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsDirectionRightToLeft    = 0x00000001,$/;"	e	enum:__anon178
StringFormatFlagsDirectionVertical	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsDirectionVertical       = 0x00000002,$/;"	e	enum:__anon178
StringFormatFlagsDisplayFormatControl	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsDisplayFormatControl    = 0x00000020,$/;"	e	enum:__anon178
StringFormatFlagsLineLimit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsLineLimit               = 0x00002000,$/;"	e	enum:__anon178
StringFormatFlagsMeasureTrailingSpaces	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsMeasureTrailingSpaces   = 0x00000800,$/;"	e	enum:__anon178
StringFormatFlagsNoClip	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoClip                  = 0x00004000 $/;"	e	enum:__anon178
StringFormatFlagsNoFitBlackBox	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoFitBlackBox           = 0x00000004,$/;"	e	enum:__anon178
StringFormatFlagsNoFontFallback	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoFontFallback          = 0x00000400,$/;"	e	enum:__anon178
StringFormatFlagsNoWrap	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoWrap                  = 0x00001000,$/;"	e	enum:__anon178
Strnicmp	lib/cimgui/imgui/imgui_demo.cpp	/^    static int   Strnicmp(const char* str1, const char* str2, int n) { int d = 0; while (n > 0 && (d = toupper(*str2) - toupper(*str1)) == 0 && *str1) { str1++; str2++; n--; } return d; }$/;"	f	struct:ExampleAppConsole
Strtrim	lib/cimgui/imgui/imgui_demo.cpp	/^    static void  Strtrim(char* str)                                  { char* str_end = str + strlen(str); while (str_end > str && str_end[-1] == ' ') str_end--; *str_end = 0; }$/;"	f	struct:ExampleAppConsole
Style	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyle              Style;$/;"	m	struct:ImGuiContext
StyleColorsClassic	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::StyleColorsClassic(ImGuiStyle* dst)$/;"	f	class:ImGui
StyleColorsDark	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::StyleColorsDark(ImGuiStyle* dst)$/;"	f	class:ImGui
StyleColorsLight	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::StyleColorsLight(ImGuiStyle* dst)$/;"	f	class:ImGui
StyleModifiers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiStyleMod> StyleModifiers;                     \/\/ Stack for PushStyleVar()\/PopStyleVar()$/;"	m	struct:ImGuiContext
SuppressBackgroundThread	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    BOOL SuppressBackgroundThread;$/;"	m	struct:__anon187
SuppressExternalCodecs	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    BOOL SuppressExternalCodecs;$/;"	m	struct:__anon187
Surface	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkSurfaceKHR        Surface;$/;"	m	struct:ImGui_ImplVulkanH_Window
SurfaceFormat	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkSurfaceFormatKHR  SurfaceFormat;$/;"	m	struct:ImGui_ImplVulkanH_Window
Swapchain	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    VkSwapchainKHR      Swapchain;$/;"	m	struct:ImGui_ImplVulkanH_Window
THEME_BLACK	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_BLUE	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_DARK	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_RED	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_WHITE	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
TabBarCalcMaxTabWidth	lib/cimgui/imgui/imgui_widgets.cpp	/^static float ImGui::TabBarCalcMaxTabWidth()$/;"	f	class:ImGui
TabBarCalcTabID	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImU32   ImGui::TabBarCalcTabID(ImGuiTabBar* tab_bar, const char* label)$/;"	f	class:ImGui
TabBarCloseTab	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TabBarCloseTab(ImGuiTabBar* tab_bar, ImGuiTabItem* tab)$/;"	f	class:ImGui
TabBarFindTabByID	lib/cimgui/imgui/imgui_widgets.cpp	/^ImGuiTabItem* ImGui::TabBarFindTabByID(ImGuiTabBar* tab_bar, ImGuiID tab_id)$/;"	f	class:ImGui
TabBarLayout	lib/cimgui/imgui/imgui_widgets.cpp	/^static void ImGui::TabBarLayout(ImGuiTabBar* tab_bar)$/;"	f	class:ImGui
TabBarQueueChangeTabOrder	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TabBarQueueChangeTabOrder(ImGuiTabBar* tab_bar, const ImGuiTabItem* tab, int dir)$/;"	f	class:ImGui
TabBarRemoveTab	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TabBarRemoveTab(ImGuiTabBar* tab_bar, ImGuiID tab_id)$/;"	f	class:ImGui
TabBarScrollClamp	lib/cimgui/imgui/imgui_widgets.cpp	/^static float ImGui::TabBarScrollClamp(ImGuiTabBar* tab_bar, float scrolling)$/;"	f	class:ImGui
TabBarScrollToTab	lib/cimgui/imgui/imgui_widgets.cpp	/^static void ImGui::TabBarScrollToTab(ImGuiTabBar* tab_bar, ImGuiTabItem* tab)$/;"	f	class:ImGui
TabBarScrollingButtons	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImGuiTabItem* ImGui::TabBarScrollingButtons(ImGuiTabBar* tab_bar)$/;"	f	class:ImGui
TabBarTabListPopupButton	lib/cimgui/imgui/imgui_widgets.cpp	/^static ImGuiTabItem* ImGui::TabBarTabListPopupButton(ImGuiTabBar* tab_bar)$/;"	f	class:ImGui
TabBars	lib/cimgui/imgui/imgui_internal.h	/^    ImPool<ImGuiTabBar>             TabBars;$/;"	m	struct:ImGuiContext
TabBorderSize	lib/cimgui/cimgui.h	/^    float TabBorderSize;$/;"	m	struct:ImGuiStyle
TabBorderSize	lib/cimgui/generator/output/cimgui.h	/^    float TabBorderSize;$/;"	m	struct:ImGuiStyle
TabBorderSize	lib/cimgui/imgui/imgui.h	/^    float       TabBorderSize;              \/\/ Thickness of border around tabs.$/;"	m	struct:ImGuiStyle
TabItemBackground	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TabItemBackground(ImDrawList* draw_list, const ImRect& bb, ImGuiTabItemFlags flags, ImU32 col)$/;"	f	class:ImGui
TabItemCalcSize	lib/cimgui/imgui/imgui_widgets.cpp	/^ImVec2 ImGui::TabItemCalcSize(const char* label, bool has_close_button)$/;"	f	class:ImGui
TabItemComparerByVisibleOffset	lib/cimgui/imgui/imgui_widgets.cpp	/^static int IMGUI_CDECL TabItemComparerByVisibleOffset(const void* lhs, const void* rhs)$/;"	f	file:
TabItemEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool    ImGui::TabItemEx(ImGuiTabBar* tab_bar, const char* label, bool* p_open, ImGuiTabItemFlags flags)$/;"	f	class:ImGui
TabItemLabelAndCloseButton	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TabItemLabelAndCloseButton(ImDrawList* draw_list, const ImRect& bb, ImGuiTabItemFlags flags, ImVec2 frame_padding, const char* label, ImGuiID tab_id, ImGuiID close_button_id)$/;"	f	class:ImGui
TabRounding	lib/cimgui/cimgui.h	/^    float TabRounding;$/;"	m	struct:ImGuiStyle
TabRounding	lib/cimgui/generator/output/cimgui.h	/^    float TabRounding;$/;"	m	struct:ImGuiStyle
TabRounding	lib/cimgui/imgui/imgui.h	/^    float       TabRounding;                \/\/ Radius of upper corners of a tab. Set to 0.0f to have rectangular tabs.$/;"	m	struct:ImGuiStyle
Tabs	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiTabItem> Tabs;$/;"	m	struct:ImGuiTabBar
TabsNames	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextBuffer     TabsNames;              \/\/ For non-docking tab bar we re-append names in a contiguous buffer.$/;"	m	struct:ImGuiTabBar
TempBuffer	lib/cimgui/imgui/imgui_internal.h	/^    char                    TempBuffer[1024*3+1];               \/\/ Temporary text buffer$/;"	m	struct:ImGuiContext
TempInputTextId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 TempInputTextId;                    \/\/ Temporary text input when CTRL+clicking on a slider, etc.$/;"	m	struct:ImGuiContext
TempInputTextIsActive	lib/cimgui/imgui/imgui_internal.h	/^    inline bool             TempInputTextIsActive(ImGuiID id) { ImGuiContext& g = *GImGui; return (g.ActiveId == id && g.TempInputTextId == id); }$/;"	f	namespace:ImGui
TempInputTextScalar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TempInputTextScalar(const ImRect& bb, ImGuiID id, const char* label, ImGuiDataType data_type, void* p_data, const char* format)$/;"	f	class:ImGui
TexDesiredWidth	lib/cimgui/cimgui.h	/^    int TexDesiredWidth;$/;"	m	struct:ImFontAtlas
TexDesiredWidth	lib/cimgui/generator/output/cimgui.h	/^    int TexDesiredWidth;$/;"	m	struct:ImFontAtlas
TexDesiredWidth	lib/cimgui/imgui/imgui.h	/^    int                         TexDesiredWidth;    \/\/ Texture width desired by user before Build(). Must be a power-of-two. If have many glyphs your graphics API have texture size restrictions you may want to increase texture width to decrease height.$/;"	m	struct:ImFontAtlas
TexGlyphPadding	lib/cimgui/cimgui.h	/^    int TexGlyphPadding;$/;"	m	struct:ImFontAtlas
TexGlyphPadding	lib/cimgui/generator/output/cimgui.h	/^    int TexGlyphPadding;$/;"	m	struct:ImFontAtlas
TexGlyphPadding	lib/cimgui/imgui/imgui.h	/^    int                         TexGlyphPadding;    \/\/ Padding between glyphs within texture in pixels. Defaults to 1. If your rendering method doesn't rely on bilinear filtering you may set this to 0.$/;"	m	struct:ImFontAtlas
TexHeight	lib/cimgui/cimgui.h	/^    int TexHeight;$/;"	m	struct:ImFontAtlas
TexHeight	lib/cimgui/generator/output/cimgui.h	/^    int TexHeight;$/;"	m	struct:ImFontAtlas
TexHeight	lib/cimgui/imgui/imgui.h	/^    int                         TexHeight;          \/\/ Texture height calculated during Build().$/;"	m	struct:ImFontAtlas
TexID	lib/cimgui/cimgui.h	/^    ImTextureID TexID;$/;"	m	struct:ImFontAtlas
TexID	lib/cimgui/generator/output/cimgui.h	/^    ImTextureID TexID;$/;"	m	struct:ImFontAtlas
TexID	lib/cimgui/imgui/imgui.h	/^    ImTextureID                 TexID;              \/\/ User data to refer to the texture once it has been uploaded to user's graphic systems. It is passed back to you during rendering via the ImDrawCmd structure.$/;"	m	struct:ImFontAtlas
TexPixelsAlpha8	lib/cimgui/cimgui.h	/^    unsigned char* TexPixelsAlpha8;$/;"	m	struct:ImFontAtlas
TexPixelsAlpha8	lib/cimgui/generator/output/cimgui.h	/^    unsigned char* TexPixelsAlpha8;$/;"	m	struct:ImFontAtlas
TexPixelsAlpha8	lib/cimgui/imgui/imgui.h	/^    unsigned char*              TexPixelsAlpha8;    \/\/ 1 component per pixel, each component is unsigned 8-bit. Total size = TexWidth * TexHeight$/;"	m	struct:ImFontAtlas
TexPixelsRGBA32	lib/cimgui/cimgui.h	/^    unsigned int* TexPixelsRGBA32;$/;"	m	struct:ImFontAtlas
TexPixelsRGBA32	lib/cimgui/generator/output/cimgui.h	/^    unsigned int* TexPixelsRGBA32;$/;"	m	struct:ImFontAtlas
TexPixelsRGBA32	lib/cimgui/imgui/imgui.h	/^    unsigned int*               TexPixelsRGBA32;    \/\/ 4 component per pixel, each component is unsigned 8-bit. Total size = TexWidth * TexHeight * 4$/;"	m	struct:ImFontAtlas
TexUvScale	lib/cimgui/cimgui.h	/^    ImVec2 TexUvScale;$/;"	m	struct:ImFontAtlas
TexUvScale	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 TexUvScale;$/;"	m	struct:ImFontAtlas
TexUvScale	lib/cimgui/imgui/imgui.h	/^    ImVec2                      TexUvScale;         \/\/ = (1.0f\/TexWidth, 1.0f\/TexHeight)$/;"	m	struct:ImFontAtlas
TexUvWhitePixel	lib/cimgui/cimgui.h	/^    ImVec2 TexUvWhitePixel;$/;"	m	struct:ImFontAtlas
TexUvWhitePixel	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 TexUvWhitePixel;$/;"	m	struct:ImFontAtlas
TexUvWhitePixel	lib/cimgui/imgui/imgui.h	/^    ImVec2                      TexUvWhitePixel;    \/\/ Texture coordinates to a white pixel$/;"	m	struct:ImFontAtlas
TexUvWhitePixel	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2          TexUvWhitePixel;            \/\/ UV of white pixel in the atlas$/;"	m	struct:ImDrawListSharedData
TexWidth	lib/cimgui/cimgui.h	/^    int TexWidth;$/;"	m	struct:ImFontAtlas
TexWidth	lib/cimgui/generator/output/cimgui.h	/^    int TexWidth;$/;"	m	struct:ImFontAtlas
TexWidth	lib/cimgui/imgui/imgui.h	/^    int                         TexWidth;           \/\/ Texture width calculated during Build().$/;"	m	struct:ImFontAtlas
Text	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Text(const char* fmt, ...)$/;"	f	class:ImGui
TextA	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<char>          TextA;                  \/\/ temporary UTF8 buffer for callbacks and other operations. this is not updated in every code-path! size=capacity.$/;"	m	struct:ImGuiInputTextState
TextAIsValid	lib/cimgui/imgui/imgui_internal.h	/^    bool                    TextAIsValid;           \/\/ temporary UTF8 buffer is not initially valid before we make the widget active (until then we pull the data from user argument)$/;"	m	struct:ImGuiInputTextState
TextColored	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextColored(const ImVec4& col, const char* fmt, ...)$/;"	f	class:ImGui
TextColoredV	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextColoredV(const ImVec4& col, const char* fmt, va_list args)$/;"	f	class:ImGui
TextDisabled	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextDisabled(const char* fmt, ...)$/;"	f	class:ImGui
TextDisabledV	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextDisabledV(const char* fmt, va_list args)$/;"	f	class:ImGui
TextEditCallback	lib/cimgui/imgui/imgui_demo.cpp	/^    int     TextEditCallback(ImGuiInputTextCallbackData* data)$/;"	f	struct:ExampleAppConsole
TextEditCallbackStub	lib/cimgui/imgui/imgui_demo.cpp	/^    static int TextEditCallbackStub(ImGuiInputTextCallbackData* data) \/\/ In C++11 you are better off using lambdas for this sort of forwarding callbacks$/;"	f	struct:ExampleAppConsole
TextEx	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextEx(const char* text, const char* text_end, ImGuiTextFlags flags)$/;"	f	class:ImGui
TextRenderingHint	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} TextRenderingHint;$/;"	t	typeref:enum:__anon177
TextRenderingHintAntiAlias	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintAntiAlias = 4,$/;"	e	enum:__anon177
TextRenderingHintAntiAliasGridFit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintAntiAliasGridFit = 3,$/;"	e	enum:__anon177
TextRenderingHintClearTypeGridFit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintClearTypeGridFit = 5$/;"	e	enum:__anon177
TextRenderingHintSingleBitPerPixel	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintSingleBitPerPixel = 2,$/;"	e	enum:__anon177
TextRenderingHintSingleBitPerPixelGridFit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintSingleBitPerPixelGridFit = 1,$/;"	e	enum:__anon177
TextRenderingHintSystemDefault	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintSystemDefault = 0,$/;"	e	enum:__anon177
TextUnformatted	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextUnformatted(const char* text, const char* text_end)$/;"	f	class:ImGui
TextV	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextV(const char* fmt, va_list args)$/;"	f	class:ImGui
TextW	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImWchar>       TextW;                  \/\/ edit buffer, we need to persist but can't guarantee the persistence of the user-provided buffer. so we copy into own buffer.$/;"	m	struct:ImGuiInputTextState
TextWrapPos	lib/cimgui/imgui/imgui_internal.h	/^    float                   TextWrapPos;            \/\/ == TextWrapPosStack.back() [empty == -1.0f]$/;"	m	struct:ImGuiWindowTempData
TextWrapPosStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<float>         TextWrapPosStack;$/;"	m	struct:ImGuiWindowTempData
TextWrapped	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextWrapped(const char* fmt, ...)$/;"	f	class:ImGui
TextWrappedV	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TextWrappedV(const char* fmt, va_list args)$/;"	f	class:ImGui
TextureId	lib/cimgui/cimgui.h	/^    ImTextureID TextureId;$/;"	m	struct:ImDrawCmd
TextureId	lib/cimgui/generator/output/cimgui.h	/^    ImTextureID TextureId;$/;"	m	struct:ImDrawCmd
TextureId	lib/cimgui/imgui/imgui.h	/^    ImTextureID     TextureId;              \/\/ User-provided texture ID. Set by user in ImfontAtlas::SetTexID() for fonts or passed to Image*() functions. Ignore if never using images or multiple fonts atlas.$/;"	m	struct:ImDrawCmd
Time	lib/cimgui/imgui/imgui_internal.h	/^    double                  Time;$/;"	m	struct:ImGuiContext
TitleBarHeight	lib/cimgui/imgui/imgui_internal.h	/^    float       TitleBarHeight() const      { ImGuiContext& g = *GImGui; return (Flags & ImGuiWindowFlags_NoTitleBar) ? 0.0f : CalcFontSize() + g.Style.FramePadding.y * 2.0f; }$/;"	f	struct:ImGuiWindow
TitleBarRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect      TitleBarRect() const        { return ImRect(Pos, ImVec2(Pos.x + SizeFull.x, Pos.y + TitleBarHeight())); }$/;"	f	struct:ImGuiWindow
ToStr	lib/cimgui/generator/cpp2ffi.lua	/^local function ToStr(t,dometatables)$/;"	f
TooltipOverrideCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     TooltipOverrideCount;$/;"	m	struct:ImGuiContext
TotalIdxCount	lib/cimgui/cimgui.h	/^    int TotalIdxCount;$/;"	m	struct:ImDrawData
TotalIdxCount	lib/cimgui/generator/output/cimgui.h	/^    int TotalIdxCount;$/;"	m	struct:ImDrawData
TotalIdxCount	lib/cimgui/imgui/imgui.h	/^    int             TotalIdxCount;          \/\/ For convenience, sum of all ImDrawList's IdxBuffer.Size$/;"	m	struct:ImDrawData
TotalVtxCount	lib/cimgui/cimgui.h	/^    int TotalVtxCount;$/;"	m	struct:ImDrawData
TotalVtxCount	lib/cimgui/generator/output/cimgui.h	/^    int TotalVtxCount;$/;"	m	struct:ImDrawData
TotalVtxCount	lib/cimgui/imgui/imgui.h	/^    int             TotalVtxCount;          \/\/ For convenience, sum of all ImDrawList's VtxBuffer.Size$/;"	m	struct:ImDrawData
TouchExtraPadding	lib/cimgui/cimgui.h	/^    ImVec2 TouchExtraPadding;$/;"	m	struct:ImGuiStyle
TouchExtraPadding	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 TouchExtraPadding;$/;"	m	struct:ImGuiStyle
TouchExtraPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      TouchExtraPadding;          \/\/ Expand reactive bounding box for touch-based system where touch position is not accurate enough. Unfortunately we don't sort widgets so priority on overlap will always be given to the first widget. So don't grow this too much!$/;"	m	struct:ImGuiStyle
Translate	lib/cimgui/imgui/imgui_internal.h	/^    void        Translate(const ImVec2& d)          { Min.x += d.x; Min.y += d.y; Max.x += d.x; Max.y += d.y; }$/;"	f	struct:ImRect
TranslateX	lib/cimgui/imgui/imgui_internal.h	/^    void        TranslateX(float dx)                { Min.x += dx; Max.x += dx; }$/;"	f	struct:ImRect
TranslateY	lib/cimgui/imgui/imgui_internal.h	/^    void        TranslateY(float dy)                { Min.y += dy; Max.y += dy; }$/;"	f	struct:ImRect
TreeAdvanceToLabelPos	lib/cimgui/imgui/imgui.h	/^    static inline void  TreeAdvanceToLabelPos()               { SetCursorPosX(GetCursorPosX() + GetTreeNodeToLabelSpacing()); }$/;"	f	namespace:ImGui
TreeDepth	lib/cimgui/imgui/imgui_internal.h	/^    int                     TreeDepth;              \/\/ Current tree depth.$/;"	m	struct:ImGuiWindowTempData
TreeJumpToParentOnPopMask	lib/cimgui/imgui/imgui_internal.h	/^    ImU32                   TreeJumpToParentOnPopMask; \/\/ Store a copy of !g.NavIdIsAlive for TreeDepth 0..31.. Could be turned into a ImU64 if necessary.$/;"	m	struct:ImGuiWindowTempData
TreeNode	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNode(const char* label)$/;"	f	class:ImGui
TreeNode	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNode(const char* str_id, const char* fmt, ...)$/;"	f	class:ImGui
TreeNode	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNode(const void* ptr_id, const char* fmt, ...)$/;"	f	class:ImGui
TreeNodeBehavior	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeBehavior(ImGuiID id, ImGuiTreeNodeFlags flags, const char* label, const char* label_end)$/;"	f	class:ImGui
TreeNodeBehaviorIsOpen	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeBehaviorIsOpen(ImGuiID id, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
TreeNodeEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeEx(const char* label, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui
TreeNodeEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeEx(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)$/;"	f	class:ImGui
TreeNodeEx	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeEx(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)$/;"	f	class:ImGui
TreeNodeExV	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeExV(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list args)$/;"	f	class:ImGui
TreeNodeExV	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeExV(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list args)$/;"	f	class:ImGui
TreeNodeV	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeV(const char* str_id, const char* fmt, va_list args)$/;"	f	class:ImGui
TreeNodeV	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::TreeNodeV(const void* ptr_id, const char* fmt, va_list args)$/;"	f	class:ImGui
TreePop	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TreePop()$/;"	f	class:ImGui
TreePush	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TreePush(const char* str_id)$/;"	f	class:ImGui
TreePush	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TreePush(const void* ptr_id)$/;"	f	class:ImGui
TreePushOverrideID	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::TreePushOverrideID(ImGuiID id)$/;"	f	class:ImGui
Type	lib/cimgui/imgui/imgui.cpp	/^    ImGuiDataType   Type;$/;"	m	struct:ImGuiStyleVarInfo	file:
TypeHash	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID     TypeHash;       \/\/ == ImHashStr(TypeName)$/;"	m	struct:ImGuiSettingsHandler
TypeName	lib/cimgui/imgui/imgui_internal.h	/^    const char* TypeName;       \/\/ Short description stored in .ini file. Disallowed characters: '[' ']'$/;"	m	struct:ImGuiSettingsHandler
U0	lib/cimgui/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
U0	lib/cimgui/generator/output/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
U0	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph
U1	lib/cimgui/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
U1	lib/cimgui/generator/output/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
U1	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph
UNAME_S	lib/cimgui/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/example_emscripten/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/example_glfw_opengl2/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/example_glfw_opengl3/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/example_glut_opengl2/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/example_null/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/example_sdl_opengl2/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/example_sdl_opengl3/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/glfw_opengl2/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/glfw_opengl3/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/glfw_opengl4/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sdl_opengl2/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sdl_opengl3/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sdl_opengles2/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sfml_opengl2/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sfml_opengl3/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/doc/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/example/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNLIKELY	lib/klib/ksw.c	33;"	d	file:
UNLIKELY	lib/klib/ksw.c	36;"	d	file:
UNUSED	lib/nuklear/demo/allegro5/main.c	27;"	d	file:
UNUSED	lib/nuklear/demo/sdl_opengles2/main.c	31;"	d	file:
UNUSED	lib/nuklear/demo/x11_rawfb/main.c	57;"	d	file:
UNUSED	lib/nuklear/example/canvas.c	36;"	d	file:
UNUSED	lib/nuklear/example/extended.c	35;"	d	file:
UNUSED	lib/nuklear/example/file_browser.c	37;"	d	file:
UNUSED	lib/nuklear/example/skinning.c	35;"	d	file:
USE_FILE_SYSTEM	lib/cimgui/imgui/examples/example_emscripten/Makefile	/^USE_FILE_SYSTEM ?= 0$/;"	m
USYNERGY_BIG_ENDIAN	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	52;"	d
USYNERGY_CLIPBOARD_FORMAT_BITMAP	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	USYNERGY_CLIPBOARD_FORMAT_BITMAP				= 1,			\/* Bitmap format, BMP 24\/32bpp, BI_RGB *\/$/;"	e	enum:uSynergyClipboardFormat
USYNERGY_CLIPBOARD_FORMAT_HTML	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	USYNERGY_CLIPBOARD_FORMAT_HTML					= 2,			\/* HTML format, HTML fragment, UTF-8, newline is LF *\/$/;"	e	enum:uSynergyClipboardFormat
USYNERGY_CLIPBOARD_FORMAT_TEXT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	USYNERGY_CLIPBOARD_FORMAT_TEXT					= 0,			\/* Text format, UTF-8, newline is LF *\/$/;"	e	enum:uSynergyClipboardFormat
USYNERGY_FALSE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	72;"	d
USYNERGY_IDLE_TIMEOUT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	106;"	d
USYNERGY_IS_PACKET	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	205;"	d	file:
USYNERGY_IS_PACKET	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	455;"	d	file:
USYNERGY_LITTLE_ENDIAN	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	50;"	d
USYNERGY_MODIFIER_ALT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	119;"	d
USYNERGY_MODIFIER_ALT_GR	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	122;"	d
USYNERGY_MODIFIER_CAPSLOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	124;"	d
USYNERGY_MODIFIER_CTRL	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	118;"	d
USYNERGY_MODIFIER_LEVEL5LOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	123;"	d
USYNERGY_MODIFIER_META	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	120;"	d
USYNERGY_MODIFIER_NUMLOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	125;"	d
USYNERGY_MODIFIER_SCROLLOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	126;"	d
USYNERGY_MODIFIER_SHIFT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	117;"	d
USYNERGY_MODIFIER_WIN	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	121;"	d
USYNERGY_NUM_JOYSTICKS	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	101;"	d
USYNERGY_PROTOCOL_MAJOR	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	103;"	d
USYNERGY_PROTOCOL_MINOR	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	104;"	d
USYNERGY_RECEIVE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	110;"	d
USYNERGY_REPLY_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	109;"	d
USYNERGY_TRACE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	108;"	d
USYNERGY_TRUE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	73;"	d
Unindent	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Unindent(float indent_w)$/;"	f	class:ImGui
Unit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} Unit;$/;"	t	typeref:enum:__anon184
UnitDisplay	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitDisplay,$/;"	e	enum:__anon184
UnitDocument	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitDocument,$/;"	e	enum:__anon184
UnitInch	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitInch,$/;"	e	enum:__anon184
UnitMillimeter	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitMillimeter$/;"	e	enum:__anon184
UnitPixel	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitPixel,$/;"	e	enum:__anon184
UnitPoint	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitPoint,$/;"	e	enum:__anon184
UnitWorld	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitWorld,$/;"	e	enum:__anon184
UnpackAccumulativeOffsetsIntoRanges	lib/cimgui/imgui/imgui_draw.cpp	/^static void UnpackAccumulativeOffsetsIntoRanges(int base_codepoint, const short* accumulative_offsets, int accumulative_offsets_count, ImWchar* out_ranges)$/;"	f	file:
UnpackBoolVectorToFlatIndexList	lib/cimgui/imgui/imgui_draw.cpp	/^static void UnpackBoolVectorToFlatIndexList(const ImBoolVector* in, ImVector<int>* out)$/;"	f	file:
Update	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGuiMenuColumns::Update(int count, float spacing, bool clear)$/;"	f	class:ImGuiMenuColumns
UpdateClipRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::UpdateClipRect()$/;"	f	class:ImDrawList
UpdateDebugToolItemPicker	lib/cimgui/imgui/imgui.cpp	/^void ImGui::UpdateDebugToolItemPicker()$/;"	f	class:ImGui
UpdateHoveredWindowAndCaptureFlags	lib/cimgui/imgui/imgui.cpp	/^void ImGui::UpdateHoveredWindowAndCaptureFlags()$/;"	f	class:ImGui
UpdateManualResize	lib/cimgui/imgui/imgui.cpp	/^static bool ImGui::UpdateManualResize(ImGuiWindow* window, const ImVec2& size_auto_fit, int* border_held, int resize_grip_count, ImU32 resize_grip_col[4])$/;"	f	class:ImGui
UpdateMouseInputs	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::UpdateMouseInputs()$/;"	f	class:ImGui
UpdateMouseMovingWindowEndFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::UpdateMouseMovingWindowEndFrame()$/;"	f	class:ImGui
UpdateMouseMovingWindowNewFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::UpdateMouseMovingWindowNewFrame()$/;"	f	class:ImGui
UpdateMouseWheel	lib/cimgui/imgui/imgui.cpp	/^void ImGui::UpdateMouseWheel()$/;"	f	class:ImGui
UpdateTextureID	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::UpdateTextureID()$/;"	f	class:ImDrawList
UpdateWindowParentAndRootLinks	lib/cimgui/imgui/imgui.cpp	/^void ImGui::UpdateWindowParentAndRootLinks(ImGuiWindow* window, ImGuiWindowFlags flags, ImGuiWindow* parent_window)$/;"	f	class:ImGui
UsedChars	lib/cimgui/cimgui.h	/^    ImVector_ImU32 UsedChars;$/;"	m	struct:ImFontGlyphRangesBuilder
UsedChars	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImU32 UsedChars;$/;"	m	struct:ImFontGlyphRangesBuilder
UsedChars	lib/cimgui/imgui/imgui.h	/^    ImVector<ImU32> UsedChars;            \/\/ Store 1-bit per Unicode code point (0=unused, 1=used)$/;"	m	struct:ImFontGlyphRangesBuilder
UserCallback	lib/cimgui/cimgui.h	/^    ImDrawCallback UserCallback;$/;"	m	struct:ImDrawCmd
UserCallback	lib/cimgui/generator/output/cimgui.h	/^    ImDrawCallback UserCallback;$/;"	m	struct:ImDrawCmd
UserCallback	lib/cimgui/imgui/imgui.h	/^    ImDrawCallback  UserCallback;           \/\/ If != NULL, call the function instead of rendering the vertices. clip_rect and texture_id will be set normally.$/;"	m	struct:ImDrawCmd
UserCallback	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputTextCallback  UserCallback;           \/\/ "$/;"	m	struct:ImGuiInputTextState
UserCallbackData	lib/cimgui/cimgui.h	/^    void* UserCallbackData;$/;"	m	struct:ImDrawCmd
UserCallbackData	lib/cimgui/generator/output/cimgui.h	/^    void* UserCallbackData;$/;"	m	struct:ImDrawCmd
UserCallbackData	lib/cimgui/imgui/imgui.h	/^    void*           UserCallbackData;       \/\/ The draw callback code can access this.$/;"	m	struct:ImDrawCmd
UserCallbackData	lib/cimgui/imgui/imgui_internal.h	/^    void*                   UserCallbackData;       \/\/ "$/;"	m	struct:ImGuiInputTextState
UserData	lib/cimgui/cimgui.h	/^    void* UserData;$/;"	m	struct:ImGuiIO
UserData	lib/cimgui/cimgui.h	/^    void* UserData;$/;"	m	struct:ImGuiInputTextCallbackData
UserData	lib/cimgui/cimgui.h	/^    void* UserData;$/;"	m	struct:ImGuiSizeCallbackData
UserData	lib/cimgui/generator/output/cimgui.h	/^    void* UserData;$/;"	m	struct:ImGuiIO
UserData	lib/cimgui/generator/output/cimgui.h	/^    void* UserData;$/;"	m	struct:ImGuiInputTextCallbackData
UserData	lib/cimgui/generator/output/cimgui.h	/^    void* UserData;$/;"	m	struct:ImGuiSizeCallbackData
UserData	lib/cimgui/imgui/imgui.h	/^    void*               UserData;       \/\/ What user passed to InputText()      \/\/ Read-only$/;"	m	struct:ImGuiInputTextCallbackData
UserData	lib/cimgui/imgui/imgui.h	/^    void*       UserData;                       \/\/ = NULL           \/\/ Store your own data for retrieval by callbacks.$/;"	m	struct:ImGuiIO
UserData	lib/cimgui/imgui/imgui.h	/^    void*   UserData;       \/\/ Read-only.   What user passed to SetNextWindowSizeConstraints()$/;"	m	struct:ImGuiSizeCallbackData
UserData	lib/cimgui/imgui/imgui_internal.h	/^    void*       UserData;$/;"	m	struct:ImGuiSettingsHandler
UserFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputTextFlags     UserFlags;              \/\/ Temporarily set while we call user's callback$/;"	m	struct:ImGuiInputTextState
UserFlags	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        unsigned int    UserFlags;          \/\/ = ImFontConfig::RasterizerFlags$/;"	m	struct:__anon112::FreeTypeFont	file:
V0	lib/cimgui/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
V0	lib/cimgui/generator/output/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
V0	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph
V1	lib/cimgui/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
V1	lib/cimgui/generator/output/cimgui.h	/^    float U0, V0, U1, V1;$/;"	m	struct:ImFontGlyph
V1	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph
VENDOR_AMD	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_AMD,$/;"	e	enum:graphics_card_vendors
VENDOR_INTEL	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_INTEL$/;"	e	enum:graphics_card_vendors
VENDOR_NVIDIA	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_NVIDIA,$/;"	e	enum:graphics_card_vendors
VENDOR_UNKNOWN	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_UNKNOWN,$/;"	e	enum:graphics_card_vendors
VERTEX_CONSTANT_BUFFER	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^struct VERTEX_CONSTANT_BUFFER$/;"	s	file:
VERTEX_CONSTANT_BUFFER	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^struct VERTEX_CONSTANT_BUFFER$/;"	s	file:
VERTEX_CONSTANT_BUFFER	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^struct VERTEX_CONSTANT_BUFFER$/;"	s	file:
VSliderFloat	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::VSliderFloat(const char* label, const ImVec2& size, float* v, float v_min, float v_max, const char* format, float power)$/;"	f	class:ImGui
VSliderInt	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::VSliderInt(const char* label, const ImVec2& size, int* v, int v_min, int v_max, const char* format)$/;"	f	class:ImGui
VSliderScalar	lib/cimgui/imgui/imgui_widgets.cpp	/^bool ImGui::VSliderScalar(const char* label, const ImVec2& size, ImGuiDataType data_type, void* p_data, const void* p_min, const void* p_max, const char* format, float power)$/;"	f	class:ImGui
Valid	lib/cimgui/cimgui.h	/^    bool Valid;$/;"	m	struct:ImDrawData
Valid	lib/cimgui/generator/output/cimgui.h	/^    bool Valid;$/;"	m	struct:ImDrawData
Valid	lib/cimgui/imgui/imgui.h	/^    bool            Valid;                  \/\/ Only valid after Render() is called and before the next NewFrame() is called.$/;"	m	struct:ImDrawData
Value	lib/cimgui/cimgui.h	/^    ImVec4 Value;$/;"	m	struct:ImColor
Value	lib/cimgui/cimgui.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	m	struct:ImColor_Simple
Value	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	m	struct:ImColor_Simple
Value	lib/cimgui/generator/output/cimgui.h	/^    ImVec4 Value;$/;"	m	struct:ImColor
Value	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImColor_Simple { ImVec4_Simple Value;} ImColor_Simple;$/;"	m	struct:ImColor_Simple
Value	lib/cimgui/imgui/imgui.h	/^    ImVec4              Value;$/;"	m	struct:ImColor
Value	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Value(const char* prefix, bool b)$/;"	f	class:ImGui
Value	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Value(const char* prefix, float v, const char* float_format)$/;"	f	class:ImGui
Value	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Value(const char* prefix, int v)$/;"	f	class:ImGui
Value	lib/cimgui/imgui/imgui_widgets.cpp	/^void ImGui::Value(const char* prefix, unsigned int v)$/;"	f	class:ImGui
Values	lib/cimgui/imgui/imgui_widgets.cpp	/^    const float* Values;$/;"	m	struct:ImGuiPlotArrayGetterData	file:
VarIdx	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleVar   VarIdx;$/;"	m	struct:ImGuiStyleMod
VertexBuffer	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^    ID3D12Resource*     VertexBuffer;$/;"	m	struct:FrameResources	file:
VertexBuffer	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    VkBuffer            VertexBuffer;$/;"	m	struct:ImGui_ImplVulkanH_FrameRenderBuffers	file:
VertexBufferMemory	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    VkDeviceMemory      VertexBufferMemory;$/;"	m	struct:ImGui_ImplVulkanH_FrameRenderBuffers	file:
VertexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^    int                 VertexBufferSize;$/;"	m	struct:FrameResources	file:
VertexBufferSize	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^    VkDeviceSize        VertexBufferSize;$/;"	m	struct:ImGui_ImplVulkanH_FrameRenderBuffers	file:
Visible	lib/cimgui/imgui/imgui.h	/^    unsigned int    Visible : 1;        \/\/ Flag to allow early out when rendering$/;"	m	struct:ImFontGlyph
VisibleTabId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             VisibleTabId;           \/\/ Can occasionally be != SelectedTabId (e.g. when previewing contents for CTRL+TAB preview)$/;"	m	struct:ImGuiTabBar
VisibleTabWasSubmitted	lib/cimgui/imgui/imgui_internal.h	/^    bool                VisibleTabWasSubmitted;$/;"	m	struct:ImGuiTabBar
VtxBuffer	lib/cimgui/cimgui.h	/^    ImVector_ImDrawVert VtxBuffer;$/;"	m	struct:ImDrawList
VtxBuffer	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImDrawVert VtxBuffer;$/;"	m	struct:ImDrawList
VtxBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawVert>    VtxBuffer;          \/\/ Vertex buffer.$/;"	m	struct:ImDrawList
VtxOffset	lib/cimgui/cimgui.h	/^    unsigned int VtxOffset;$/;"	m	struct:ImDrawCmd
VtxOffset	lib/cimgui/generator/output/cimgui.h	/^    unsigned int VtxOffset;$/;"	m	struct:ImDrawCmd
VtxOffset	lib/cimgui/imgui/imgui.h	/^    unsigned int    VtxOffset;              \/\/ Start offset in vertex buffer. Pre-1.71 or without ImGuiBackendFlags_RendererHasVtxOffset: always 0. With ImGuiBackendFlags_RendererHasVtxOffset: may be >0 to support meshes larger than 64K vertices with 16-bit indices.$/;"	m	struct:ImDrawCmd
WIN32_LEAN_AND_MEAN	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	13;"	d	file:
WIN32_LEAN_AND_MEAN	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	9;"	d	file:
WIN32_LEAN_AND_MEAN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	59;"	d
WIN32_LEAN_AND_MEAN	lib/cimgui/imgui/imgui.cpp	9682;"	d	file:
WIN32_LEAN_AND_MEAN	lib/gl3w/GL/gl3w.c	9;"	d	file:
WIN32_LEAN_AND_MEAN	lib/gl3w/GL/glcorearb.h	59;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d11/main.c	3;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d11/nuklear_d3d11.h	16;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d11/nuklear_d3d11.h	40;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d9/main.c	3;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d9/nuklear_d3d9.h	16;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d9/nuklear_d3d9.h	40;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdi/main.c	2;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdi/nuklear_gdi.h	16;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdip/main.c	2;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdip/nuklear_gdip.h	16;"	d
WINDOWS_MOUSE_WHEEL_SCROLL_LOCK_TIMER	lib/cimgui/imgui/imgui.cpp	/^static const float WINDOWS_MOUSE_WHEEL_SCROLL_LOCK_TIMER    = 2.00f;    \/\/ Lock scrolled window (so it doesn't pick child windows that are scrolling through) for a certaint time, unless mouse moved.$/;"	v	file:
WINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER	lib/cimgui/imgui/imgui.cpp	/^static const float WINDOWS_RESIZE_FROM_EDGES_FEEDBACK_TIMER = 0.04f;    \/\/ Reduce visual noise by only highlighting the border after a certain time.$/;"	v	file:
WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS	lib/cimgui/imgui/imgui.cpp	/^static const float WINDOWS_RESIZE_FROM_EDGES_HALF_THICKNESS = 4.0f;     \/\/ Extend outside and inside windows. Affect FindHoveredWindow().$/;"	v	file:
WINDOW_HEIGHT	lib/nuklear/demo/allegro5/main.c	15;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/d3d11/main.c	12;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/d3d9/main.c	12;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/gdi/main.c	10;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/gdip/main.c	10;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/glfw_opengl2/main.c	29;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/glfw_opengl3/main.c	30;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/glfw_opengl4/main.c	30;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sdl_opengl2/main.c	29;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sdl_opengl3/main.c	30;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sdl_opengles2/main.c	26;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sfml_opengl2/main.cpp	29;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sfml_opengl3/main.cpp	28;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11/main.c	24;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11_opengl2/main.c	29;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11_opengl3/main.c	27;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11_rawfb/main.c	55;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11_xft/main.c	24;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/canvas.c	31;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/extended.c	30;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/file_browser.c	32;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/skinning.c	30;"	d	file:
WINDOW_HEIGHT	src/bbgl.c	20;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/allegro5/main.c	14;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/d3d11/main.c	11;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/d3d9/main.c	11;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/gdi/main.c	9;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/gdip/main.c	9;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/glfw_opengl2/main.c	28;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/glfw_opengl3/main.c	29;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/glfw_opengl4/main.c	29;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sdl_opengl2/main.c	28;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sdl_opengl3/main.c	29;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sdl_opengles2/main.c	25;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sfml_opengl2/main.cpp	28;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sfml_opengl3/main.cpp	27;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11/main.c	23;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11_opengl2/main.c	28;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11_opengl3/main.c	26;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11_rawfb/main.c	54;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11_xft/main.c	23;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/canvas.c	30;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/extended.c	29;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/file_browser.c	31;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/skinning.c	29;"	d	file:
WINDOW_WIDTH	src/bbgl.c	19;"	d	file:
WINGDIAPI	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	46;"	d	file:
WINGDIAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	107;"	d
WINGDIAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	4210;"	d
WINGDIPAPI	lib/nuklear/demo/gdip/nuklear_gdip.h	53;"	d
WM_MOUSEHWHEEL	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	253;"	d	file:
WaitForLastSubmittedFrame	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^void WaitForLastSubmittedFrame()$/;"	f
WaitForNextFrameResources	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^FrameContext* WaitForNextFrameResources()$/;"	f
WantCaptureKeyboard	lib/cimgui/cimgui.h	/^    bool WantCaptureKeyboard;$/;"	m	struct:ImGuiIO
WantCaptureKeyboard	lib/cimgui/generator/output/cimgui.h	/^    bool WantCaptureKeyboard;$/;"	m	struct:ImGuiIO
WantCaptureKeyboard	lib/cimgui/imgui/imgui.h	/^    bool        WantCaptureKeyboard;            \/\/ When io.WantCaptureKeyboard is true, imgui will use the keyboard inputs, do not dispatch them to your main game\/application (in both cases, always pass keyboard inputs to imgui). (e.g. InputText active, or an imgui window is focused and navigation is enabled, etc.).$/;"	m	struct:ImGuiIO
WantCaptureKeyboardNextFrame	lib/cimgui/imgui/imgui_internal.h	/^    int                     WantCaptureKeyboardNextFrame;$/;"	m	struct:ImGuiContext
WantCaptureMouse	lib/cimgui/cimgui.h	/^    bool WantCaptureMouse;$/;"	m	struct:ImGuiIO
WantCaptureMouse	lib/cimgui/generator/output/cimgui.h	/^    bool WantCaptureMouse;$/;"	m	struct:ImGuiIO
WantCaptureMouse	lib/cimgui/imgui/imgui.h	/^    bool        WantCaptureMouse;               \/\/ When io.WantCaptureMouse is true, imgui will use the mouse inputs, do not dispatch them to your main game\/application (in both cases, always pass on mouse inputs to imgui). (e.g. unclicked mouse is hovering over an imgui window, widget is active, mouse was clicked over an imgui window, etc.).$/;"	m	struct:ImGuiIO
WantCaptureMouseNextFrame	lib/cimgui/imgui/imgui_internal.h	/^    int                     WantCaptureMouseNextFrame;          \/\/ Explicit capture via CaptureKeyboardFromApp()\/CaptureMouseFromApp() sets those flags$/;"	m	struct:ImGuiContext
WantClose	lib/cimgui/imgui/imgui_demo.cpp	/^    bool        WantClose;      \/\/ Set when the document$/;"	m	struct:MyDocument	file:
WantCollapseToggle	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WantCollapseToggle;$/;"	m	struct:ImGuiWindow
WantLayout	lib/cimgui/imgui/imgui_internal.h	/^    bool                WantLayout;$/;"	m	struct:ImGuiTabBar
WantSaveIniSettings	lib/cimgui/cimgui.h	/^    bool WantSaveIniSettings;$/;"	m	struct:ImGuiIO
WantSaveIniSettings	lib/cimgui/generator/output/cimgui.h	/^    bool WantSaveIniSettings;$/;"	m	struct:ImGuiIO
WantSaveIniSettings	lib/cimgui/imgui/imgui.h	/^    bool        WantSaveIniSettings;            \/\/ When manual .ini load\/save is active (io.IniFilename == NULL), this will be set to notify your application that you can call SaveIniSettingsToMemory() and save yourself. IMPORTANT: You need to clear io.WantSaveIniSettings yourself.$/;"	m	struct:ImGuiIO
WantSetMousePos	lib/cimgui/cimgui.h	/^    bool WantSetMousePos;$/;"	m	struct:ImGuiIO
WantSetMousePos	lib/cimgui/generator/output/cimgui.h	/^    bool WantSetMousePos;$/;"	m	struct:ImGuiIO
WantSetMousePos	lib/cimgui/imgui/imgui.h	/^    bool        WantSetMousePos;                \/\/ MousePos has been altered, back-end should reposition mouse on next frame. Set only when ImGuiConfigFlags_NavEnableSetMousePos flag is enabled.$/;"	m	struct:ImGuiIO
WantTextInput	lib/cimgui/cimgui.h	/^    bool WantTextInput;$/;"	m	struct:ImGuiIO
WantTextInput	lib/cimgui/generator/output/cimgui.h	/^    bool WantTextInput;$/;"	m	struct:ImGuiIO
WantTextInput	lib/cimgui/imgui/imgui.h	/^    bool        WantTextInput;                  \/\/ Mobile\/console: when io.WantTextInput is true, you may display an on-screen keyboard. This is set by ImGui when it wants textual keyboard input to happen (e.g. when a InputText widget is active).$/;"	m	struct:ImGuiIO
WantTextInputNextFrame	lib/cimgui/imgui/imgui_internal.h	/^    int                     WantTextInputNextFrame;$/;"	m	struct:ImGuiContext
WasActive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WasActive;$/;"	m	struct:ImGuiWindow
WheelingWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            WheelingWindow;                     \/\/ Track the window we started mouse-wheeling on. Until a timer elapse or mouse has moved, generally keep scrolling the same window even if during the course of scrolling the mouse ends up hovering a child window.$/;"	m	struct:ImGuiContext
WheelingWindowRefMousePos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  WheelingWindowRefMousePos;$/;"	m	struct:ImGuiContext
WheelingWindowTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   WheelingWindowTimer;$/;"	m	struct:ImGuiContext
Width	lib/cimgui/cimgui.h	/^    unsigned short Width, Height;$/;"	m	struct:ImFontAtlasCustomRect
Width	lib/cimgui/generator/output/cimgui.h	/^    unsigned short Width, Height;$/;"	m	struct:ImFontAtlasCustomRect
Width	lib/cimgui/imgui/examples/imgui_impl_vulkan.h	/^    int                 Width;$/;"	m	struct:ImGui_ImplVulkanH_Window
Width	lib/cimgui/imgui/imgui.h	/^    unsigned short  Width, Height;  \/\/ Input    \/\/ Desired rectangle dimension$/;"	m	struct:ImFontAtlasCustomRect
Width	lib/cimgui/imgui/imgui_internal.h	/^    float                       Width;          \/\/ Set by SetNextItemWidth()$/;"	m	struct:ImGuiNextItemData
Width	lib/cimgui/imgui/imgui_internal.h	/^    float               Width;                  \/\/ Width currently displayed$/;"	m	struct:ImGuiTabItem
Width	lib/cimgui/imgui/imgui_internal.h	/^    float           Width;$/;"	m	struct:ImGuiShrinkWidthItem
Width	lib/cimgui/imgui/imgui_internal.h	/^    float       Width, NextWidth;$/;"	m	struct:ImGuiMenuColumns
Width	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        int         Width;              \/\/ Glyph's width in pixels.$/;"	m	struct:__anon112::GlyphInfo	file:
Width	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT Width;$/;"	m	struct:__anon185
Window	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*        Window;         \/\/ Resolved on BeginPopup() - may stay unresolved if user never calls OpenPopup()$/;"	m	struct:ImGuiPopupData
Window	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*    Window;             \/\/ Best candidate window$/;"	m	struct:ImGuiNavMoveResult
WindowBorderSize	lib/cimgui/cimgui.h	/^    float WindowBorderSize;$/;"	m	struct:ImGuiStyle
WindowBorderSize	lib/cimgui/generator/output/cimgui.h	/^    float WindowBorderSize;$/;"	m	struct:ImGuiStyle
WindowBorderSize	lib/cimgui/imgui/imgui.h	/^    float       WindowBorderSize;           \/\/ Thickness of border around windows. Generally set to 0.0f or 1.0f. (Other values are not well tested and more CPU\/GPU costly).$/;"	m	struct:ImGuiStyle
WindowBorderSize	lib/cimgui/imgui/imgui_internal.h	/^    float                   WindowBorderSize;                   \/\/ Window border size at the time of Begin().$/;"	m	struct:ImGuiWindow
WindowMenuButtonPosition	lib/cimgui/cimgui.h	/^    ImGuiDir WindowMenuButtonPosition;$/;"	m	struct:ImGuiStyle
WindowMenuButtonPosition	lib/cimgui/generator/output/cimgui.h	/^    ImGuiDir WindowMenuButtonPosition;$/;"	m	struct:ImGuiStyle
WindowMenuButtonPosition	lib/cimgui/imgui/imgui.h	/^    ImGuiDir    WindowMenuButtonPosition;   \/\/ Side of the collapsing\/docking button in the title bar (None\/Left\/Right). Defaults to ImGuiDir_Left.$/;"	m	struct:ImGuiStyle
WindowMinSize	lib/cimgui/cimgui.h	/^    ImVec2 WindowMinSize;$/;"	m	struct:ImGuiStyle
WindowMinSize	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 WindowMinSize;$/;"	m	struct:ImGuiStyle
WindowMinSize	lib/cimgui/imgui/imgui.h	/^    ImVec2      WindowMinSize;              \/\/ Minimum window size. This is a global setting. If you want to constraint individual windows, use SetNextWindowSizeConstraints().$/;"	m	struct:ImGuiStyle
WindowPadding	lib/cimgui/cimgui.h	/^    ImVec2 WindowPadding;$/;"	m	struct:ImGuiStyle
WindowPadding	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 WindowPadding;$/;"	m	struct:ImGuiStyle
WindowPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      WindowPadding;              \/\/ Padding within a window.$/;"	m	struct:ImGuiStyle
WindowPadding	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  WindowPadding;                      \/\/ Window padding at the time of Begin().$/;"	m	struct:ImGuiWindow
WindowProc	lib/nuklear/demo/d3d11/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	file:
WindowProc	lib/nuklear/demo/d3d9/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	file:
WindowProc	lib/nuklear/demo/gdi/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	file:
WindowProc	lib/nuklear/demo/gdip/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	file:
WindowRounding	lib/cimgui/cimgui.h	/^    float WindowRounding;$/;"	m	struct:ImGuiStyle
WindowRounding	lib/cimgui/generator/output/cimgui.h	/^    float WindowRounding;$/;"	m	struct:ImGuiStyle
WindowRounding	lib/cimgui/imgui/imgui.h	/^    float       WindowRounding;             \/\/ Radius of window corners rounding. Set to 0.0f to have rectangular windows.$/;"	m	struct:ImGuiStyle
WindowRounding	lib/cimgui/imgui/imgui_internal.h	/^    float                   WindowRounding;                     \/\/ Window rounding at the time of Begin().$/;"	m	struct:ImGuiWindow
WindowSettingsHandler_ReadLine	lib/cimgui/imgui/imgui.cpp	/^static void WindowSettingsHandler_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void* entry, const char* line)$/;"	f	file:
WindowSettingsHandler_ReadOpen	lib/cimgui/imgui/imgui.cpp	/^static void* WindowSettingsHandler_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, const char* name)$/;"	f	file:
WindowSettingsHandler_WriteAll	lib/cimgui/imgui/imgui.cpp	/^static void WindowSettingsHandler_WriteAll(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer* buf)$/;"	f	file:
WindowTitleAlign	lib/cimgui/cimgui.h	/^    ImVec2 WindowTitleAlign;$/;"	m	struct:ImGuiStyle
WindowTitleAlign	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 WindowTitleAlign;$/;"	m	struct:ImGuiStyle
WindowTitleAlign	lib/cimgui/imgui/imgui.h	/^    ImVec2      WindowTitleAlign;           \/\/ Alignment for title bar text. Defaults to (0.0f,0.5f) for left-aligned,vertically centered.$/;"	m	struct:ImGuiStyle
Windows	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  Windows;                            \/\/ Windows, sorted in display order, back to front$/;"	m	struct:ImGuiContext
WindowsActiveCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     WindowsActiveCount;                 \/\/ Number of unique windows submitted by frame$/;"	m	struct:ImGuiContext
WindowsById	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStorage            WindowsById;                        \/\/ Map window's ImGuiID to ImGuiWindow*$/;"	m	struct:ImGuiContext
WindowsFocusOrder	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  WindowsFocusOrder;                  \/\/ Windows, sorted in focus order, back to front. (FIXME: We could only store root windows here! Need to sort out the Docking equivalent which is RootWindowDockStop and is unfortunately a little more dynamic)$/;"	m	struct:ImGuiContext
WindowsTempSortBuffer	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  WindowsTempSortBuffer;              \/\/ Temporary buffer used in EndFrame() to reorder windows so parents are kept before their child$/;"	m	struct:ImGuiContext
WithinEndChild	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WithinEndChild;                     \/\/ Set within EndChild()$/;"	m	struct:ImGuiContext
WithinFrameScope	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WithinFrameScope;                   \/\/ Set by NewFrame(), cleared by EndFrame()$/;"	m	struct:ImGuiContext
WithinFrameScopeWithImplicitWindow	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WithinFrameScopeWithImplicitWindow; \/\/ Set by NewFrame(), cleared by EndFrame() when the implicit debug window has been pushed$/;"	m	struct:ImGuiContext
WndProc	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
WndProc	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
WndProc	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
WndProc	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f
WorkRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  WorkRect;                           \/\/ Cover the whole scrolling region, shrunk by WindowPadding*1.0f on each side. This is meant to replace ContentRegionRect over time (from 1.71+ onward).$/;"	m	struct:ImGuiWindow
WriteAccessed	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WriteAccessed;                      \/\/ Set to true when any widget access the current window$/;"	m	struct:ImGuiWindow
WriteAllFn	lib/cimgui/imgui/imgui_internal.h	/^    void        (*WriteAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer* out_buf);      \/\/ Write: Output every entries into 'out_buf'$/;"	m	struct:ImGuiSettingsHandler
X	lib/cimgui/cimgui.h	/^    unsigned short X, Y;$/;"	m	struct:ImFontAtlasCustomRect
X	lib/cimgui/generator/output/cimgui.h	/^    unsigned short X, Y;$/;"	m	struct:ImFontAtlasCustomRect
X	lib/cimgui/imgui/imgui.h	/^    unsigned short  X, Y;           \/\/ Output   \/\/ Packed position in Atlas$/;"	m	struct:ImFontAtlasCustomRect
X	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT X;$/;"	m	struct:__anon185
X0	lib/cimgui/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
X0	lib/cimgui/generator/output/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
X0	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph
X1	lib/cimgui/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
X1	lib/cimgui/generator/output/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
X1	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph
XFont	lib/nuklear/demo/x11/nuklear_xlib.h	/^struct XFont {$/;"	s
XFont	lib/nuklear/demo/x11/nuklear_xlib.h	/^typedef struct XFont XFont;$/;"	t	typeref:struct:XFont
XFont	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^struct XFont {$/;"	s
XFont	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^typedef struct XFont XFont;$/;"	t	typeref:struct:XFont
XImageWithAlpha	lib/nuklear/demo/x11/nuklear_xlib.h	/^struct XImageWithAlpha {$/;"	s
XImageWithAlpha	lib/nuklear/demo/x11/nuklear_xlib.h	/^typedef struct XImageWithAlpha XImageWithAlpha;$/;"	t	typeref:struct:XImageWithAlpha
XImageWithAlpha	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^struct XImageWithAlpha {$/;"	s
XImageWithAlpha	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^typedef struct XImageWithAlpha XImageWithAlpha;$/;"	t	typeref:struct:XImageWithAlpha
XSurface	lib/nuklear/demo/x11/nuklear_xlib.h	/^struct XSurface {$/;"	s
XSurface	lib/nuklear/demo/x11/nuklear_xlib.h	/^typedef struct XSurface XSurface;$/;"	t	typeref:struct:XSurface
XSurface	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^struct XSurface {$/;"	s
XSurface	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^typedef struct XSurface XSurface;$/;"	t	typeref:struct:XSurface
XWindow	lib/nuklear/demo/x11/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11/main.c	/^typedef struct XWindow XWindow;$/;"	t	typeref:struct:XWindow	file:
XWindow	lib/nuklear/demo/x11_opengl2/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11_opengl3/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11_rawfb/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11_rawfb/main.c	/^typedef struct XWindow XWindow;$/;"	t	typeref:struct:XWindow	file:
XWindow	lib/nuklear/demo/x11_xft/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11_xft/main.c	/^typedef struct XWindow XWindow;$/;"	t	typeref:struct:XWindow	file:
Y	lib/cimgui/cimgui.h	/^    unsigned short X, Y;$/;"	m	struct:ImFontAtlasCustomRect
Y	lib/cimgui/generator/output/cimgui.h	/^    unsigned short X, Y;$/;"	m	struct:ImFontAtlasCustomRect
Y	lib/cimgui/imgui/imgui.h	/^    unsigned short  X, Y;           \/\/ Output   \/\/ Packed position in Atlas$/;"	m	struct:ImFontAtlasCustomRect
Y	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT Y;$/;"	m	struct:__anon185
Y0	lib/cimgui/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
Y0	lib/cimgui/generator/output/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
Y0	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph
Y1	lib/cimgui/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
Y1	lib/cimgui/generator/output/cimgui.h	/^    float X0, Y0, X1, Y1;$/;"	m	struct:ImFontGlyph
Y1	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph
YCbCr_to_RGB_kernel	lib/nuklear/example/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step);$/;"	m	struct:__anon149
_AC_KLIST_H	lib/klib/klist.h	27;"	d
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	67;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/imgui.cpp	790;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/imgui_demo.cpp	64;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/imgui_draw.cpp	26;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/imgui_widgets.cpp	32;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	22;"	d	file:
_Channels	lib/cimgui/cimgui.h	/^    ImVector_ImDrawChannel _Channels;$/;"	m	struct:ImDrawListSplitter
_Channels	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImDrawChannel _Channels;$/;"	m	struct:ImDrawListSplitter
_Channels	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawChannel>     _Channels;   \/\/ Draw channels (not resized down so _Count might be < Channels.Size)$/;"	m	struct:ImDrawListSplitter
_ClipRectStack	lib/cimgui/cimgui.h	/^    ImVector_ImVec4 _ClipRectStack;$/;"	m	struct:ImDrawList
_ClipRectStack	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImVec4 _ClipRectStack;$/;"	m	struct:ImDrawList
_ClipRectStack	lib/cimgui/imgui/imgui.h	/^    ImVector<ImVec4>        _ClipRectStack;     \/\/ [Internal]$/;"	m	struct:ImDrawList
_CmdBuffer	lib/cimgui/cimgui.h	/^    ImVector_ImDrawCmd _CmdBuffer;$/;"	m	struct:ImDrawChannel
_CmdBuffer	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImDrawCmd _CmdBuffer;$/;"	m	struct:ImDrawChannel
_CmdBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawCmd>         _CmdBuffer;$/;"	m	struct:ImDrawChannel
_Count	lib/cimgui/cimgui.h	/^    int _Count;$/;"	m	struct:ImDrawListSplitter
_Count	lib/cimgui/generator/output/cimgui.h	/^    int _Count;$/;"	m	struct:ImDrawListSplitter
_Count	lib/cimgui/imgui/imgui.h	/^    int                         _Count;      \/\/ Number of active channels (1+)$/;"	m	struct:ImDrawListSplitter
_Current	lib/cimgui/cimgui.h	/^    int _Current;$/;"	m	struct:ImDrawListSplitter
_Current	lib/cimgui/generator/output/cimgui.h	/^    int _Current;$/;"	m	struct:ImDrawListSplitter
_Current	lib/cimgui/imgui/imgui.h	/^    int                         _Current;    \/\/ Current channel number (0)$/;"	m	struct:ImDrawListSplitter
_Data	lib/cimgui/cimgui.h	/^    const ImDrawListSharedData* _Data;$/;"	m	struct:ImDrawList
_Data	lib/cimgui/generator/output/cimgui.h	/^    const ImDrawListSharedData* _Data;$/;"	m	struct:ImDrawList
_Data	lib/cimgui/imgui/imgui.h	/^    const ImDrawListSharedData* _Data;          \/\/ Pointer to shared draw data (you can use ImGui::GetDrawListSharedData() to get the one from current ImGui context)$/;"	m	struct:ImDrawList
_IdxBuffer	lib/cimgui/cimgui.h	/^    ImVector_ImDrawIdx _IdxBuffer;$/;"	m	struct:ImDrawChannel
_IdxBuffer	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImDrawIdx _IdxBuffer;$/;"	m	struct:ImDrawChannel
_IdxBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawIdx>         _IdxBuffer;$/;"	m	struct:ImDrawChannel
_IdxWritePtr	lib/cimgui/cimgui.h	/^    ImDrawIdx* _IdxWritePtr;$/;"	m	struct:ImDrawList
_IdxWritePtr	lib/cimgui/generator/output/cimgui.h	/^    ImDrawIdx* _IdxWritePtr;$/;"	m	struct:ImDrawList
_IdxWritePtr	lib/cimgui/imgui/imgui.h	/^    ImDrawIdx*              _IdxWritePtr;       \/\/ [Internal] point within IdxBuffer.Data after each add command (to avoid using the ImVector<> operators too much)$/;"	m	struct:ImDrawList
_KALLOC_H_	lib/klib/kalloc.h	2;"	d
_KO_NO_NET	lib/klib/kopen.c	17;"	d	file:
_OwnerName	lib/cimgui/cimgui.h	/^    const char* _OwnerName;$/;"	m	struct:ImDrawList
_OwnerName	lib/cimgui/generator/output/cimgui.h	/^    const char* _OwnerName;$/;"	m	struct:ImDrawList
_OwnerName	lib/cimgui/imgui/imgui.h	/^    const char*             _OwnerName;         \/\/ Pointer to owner window's name for debugging$/;"	m	struct:ImDrawList
_Path	lib/cimgui/cimgui.h	/^    ImVector_ImVec2 _Path;$/;"	m	struct:ImDrawList
_Path	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImVec2 _Path;$/;"	m	struct:ImDrawList
_Path	lib/cimgui/imgui/imgui.h	/^    ImVector<ImVec2>        _Path;              \/\/ [Internal] current path building$/;"	m	struct:ImDrawList
_RadixSort_Unsigned_PowerOf2Radix_1	lib/klib/test/ksort_test.cc	/^inline void _RadixSort_Unsigned_PowerOf2Radix_1( _Type* a, long last, _Type bitMask, unsigned long shiftRightAmount )$/;"	f
_Splitter	lib/cimgui/cimgui.h	/^    ImDrawListSplitter _Splitter;$/;"	m	struct:ImDrawList
_Splitter	lib/cimgui/generator/output/cimgui.h	/^    ImDrawListSplitter _Splitter;$/;"	m	struct:ImDrawList
_Splitter	lib/cimgui/imgui/imgui.h	/^    ImDrawListSplitter      _Splitter;          \/\/ [Internal] for channels api$/;"	m	struct:ImDrawList
_TextureIdStack	lib/cimgui/cimgui.h	/^    ImVector_ImTextureID _TextureIdStack;$/;"	m	struct:ImDrawList
_TextureIdStack	lib/cimgui/generator/output/cimgui.h	/^    ImVector_ImTextureID _TextureIdStack;$/;"	m	struct:ImDrawList
_TextureIdStack	lib/cimgui/imgui/imgui.h	/^    ImVector<ImTextureID>   _TextureIdStack;    \/\/ [Internal]$/;"	m	struct:ImDrawList
_ToStr	lib/cimgui/generator/cpp2ffi.lua	/^	local function _ToStr(t,strT,rec,name)$/;"	f
_VtxCurrentIdx	lib/cimgui/cimgui.h	/^    unsigned int _VtxCurrentIdx;$/;"	m	struct:ImDrawList
_VtxCurrentIdx	lib/cimgui/generator/output/cimgui.h	/^    unsigned int _VtxCurrentIdx;$/;"	m	struct:ImDrawList
_VtxCurrentIdx	lib/cimgui/imgui/imgui.h	/^    unsigned int            _VtxCurrentIdx;     \/\/ [Internal] Generally == VtxBuffer.Size unless we are past 64K vertices, in which case this gets reset to 0.$/;"	m	struct:ImDrawList
_VtxCurrentOffset	lib/cimgui/cimgui.h	/^    unsigned int _VtxCurrentOffset;$/;"	m	struct:ImDrawList
_VtxCurrentOffset	lib/cimgui/generator/output/cimgui.h	/^    unsigned int _VtxCurrentOffset;$/;"	m	struct:ImDrawList
_VtxCurrentOffset	lib/cimgui/imgui/imgui.h	/^    unsigned int            _VtxCurrentOffset;  \/\/ [Internal] Always 0 unless 'Flags & ImDrawListFlags_AllowVtxOffset'.$/;"	m	struct:ImDrawList
_VtxWritePtr	lib/cimgui/cimgui.h	/^    ImDrawVert* _VtxWritePtr;$/;"	m	struct:ImDrawList
_VtxWritePtr	lib/cimgui/generator/output/cimgui.h	/^    ImDrawVert* _VtxWritePtr;$/;"	m	struct:ImDrawList
_VtxWritePtr	lib/cimgui/imgui/imgui.h	/^    ImDrawVert*             _VtxWritePtr;       \/\/ [Internal] point within VtxBuffer.Data after each add command (to avoid using the ImVector<> operators too much)$/;"	m	struct:ImDrawList
_WIN32	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	90;"	d
__AC_KBTREE_H	lib/klib/kbtree.h	29;"	d
__AC_KDQ_H	lib/klib/kdq.h	2;"	d
__AC_KHASHL_H	lib/klib/khashl.h	27;"	d
__AC_KHASHL_HPP	lib/klib/cpp/khashl.hpp	2;"	d
__AC_KHASH_H	lib/klib/khash.h	118;"	d
__AC_KSW_H	lib/klib/ksw.h	2;"	d
__BGZF_H	lib/klib/bgzf.h	29;"	d
__KAVL_ERASE	lib/klib/kavl.h	175;"	d
__KAVL_FIND	lib/klib/kavl.h	81;"	d
__KAVL_INSERT	lib/klib/kavl.h	129;"	d
__KAVL_ITR	lib/klib/kavl.h	272;"	d
__KAVL_ROTATE	lib/klib/kavl.h	97;"	d
__KB_DEL	lib/klib/kbtree.h	220;"	d
__KB_GET	lib/klib/kbtree.h	119;"	d
__KB_GET_AUX1	lib/klib/kbtree.h	103;"	d
__KB_INIT	lib/klib/kbtree.h	61;"	d
__KB_INTERVAL	lib/klib/kbtree.h	137;"	d
__KB_ITR	lib/klib/kbtree.h	320;"	d
__KB_KEY	lib/klib/kbtree.h	50;"	d
__KB_PTR	lib/klib/kbtree.h	51;"	d
__KB_PUT	lib/klib/kbtree.h	160;"	d
__KB_TREE_T	lib/klib/kbtree.h	53;"	d
__KDQ_IMPL	lib/klib/kdq.h	19;"	d
__KDQ_TYPE	lib/klib/kdq.h	7;"	d
__KG_BASIC	lib/klib/kgraph.h	13;"	d
__KHASHL_IMPL_BASIC	lib/klib/khashl.h	120;"	d
__KHASHL_IMPL_DEL	lib/klib/khashl.h	223;"	d
__KHASHL_IMPL_GET	lib/klib/khashl.h	137;"	d
__KHASHL_IMPL_PUT	lib/klib/khashl.h	197;"	d
__KHASHL_IMPL_RESIZE	lib/klib/khashl.h	152;"	d
__KHASHL_PROTOTYPES	lib/klib/khashl.h	111;"	d
__KHASHL_TYPE	lib/klib/khashl.h	104;"	d
__KHASH_IMPL	lib/klib/khash.h	211;"	d
__KHASH_PROTOTYPES	lib/klib/khash.h	202;"	d
__KHASH_TYPE	lib/klib/khash.h	194;"	d
__KRMQ_ERASE	lib/klib/krmq.h	244;"	d
__KRMQ_FIND	lib/klib/krmq.h	81;"	d
__KRMQ_INSERT	lib/klib/krmq.h	194;"	d
__KRMQ_ITR	lib/klib/krmq.h	343;"	d
__KRMQ_RMQ	lib/klib/krmq.h	110;"	d
__KRMQ_ROTATE	lib/klib/krmq.h	152;"	d
__KSEQ_BASIC	lib/klib/kseq.h	156;"	d
__KSEQ_READ	lib/klib/kseq.h	177;"	d
__KSEQ_TYPE	lib/klib/kseq.h	220;"	d
__KS_BASIC	lib/klib/kseq.h	51;"	d
__KS_GETC	lib/klib/kseq.h	67;"	d
__KS_GETUNTIL	lib/klib/kseq.h	93;"	d
__KS_TYPE	lib/klib/kseq.h	40;"	d
__STB_INCLUDE_STB_TRUETYPE_H__	lib/cimgui/imgui/imstb_truetype.h	501;"	d
__ac_HASH_UPPER	lib/klib/khash.h	/^static const double __ac_HASH_UPPER = 0.77;$/;"	v
__ac_Wang_hash	lib/klib/khash.h	/^static kh_inline khint_t __ac_Wang_hash(khint_t key)$/;"	f
__ac_X31_hash_string	lib/klib/khash.h	/^static kh_inline khint_t __ac_X31_hash_string(const char *s)$/;"	f
__ac_fsize	lib/klib/cpp/khash.hpp	27;"	d
__ac_fsize	lib/klib/khash.h	173;"	d
__ac_isdel	lib/klib/cpp/khash.hpp	18;"	d
__ac_isdel	lib/klib/cpp/khash.hpp	20;"	d
__ac_isdel	lib/klib/khash.h	166;"	d
__ac_iseither	lib/klib/cpp/khash.hpp	21;"	d
__ac_iseither	lib/klib/khash.h	167;"	d
__ac_isempty	lib/klib/cpp/khash.hpp	17;"	d
__ac_isempty	lib/klib/cpp/khash.hpp	19;"	d
__ac_isempty	lib/klib/khash.h	165;"	d
__ac_set_isboth_false	lib/klib/cpp/khash.hpp	24;"	d
__ac_set_isboth_false	lib/klib/khash.h	170;"	d
__ac_set_isdel_false	lib/klib/cpp/khash.hpp	22;"	d
__ac_set_isdel_false	lib/klib/khash.h	168;"	d
__ac_set_isdel_true	lib/klib/cpp/khash.hpp	25;"	d
__ac_set_isdel_true	lib/klib/khash.h	171;"	d
__ac_set_isempty_false	lib/klib/cpp/khash.hpp	23;"	d
__ac_set_isempty_false	lib/klib/khash.h	169;"	d
__err_connect	lib/klib/knetfile.c	149;"	d	file:
__err_connect	lib/klib/knetfile.c	88;"	d	file:
__err_connect	lib/klib/kopen.c	38;"	d	file:
__err_connect	lib/klib/kopen.c	53;"	d	file:
__gl3w_h_	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	2;"	d
__gl3w_h_	lib/gl3w/GL/gl3w.h	2;"	d
__gl_h_	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	7;"	d
__gl_h_	lib/gl3w/GL/gl3w.h	7;"	d
__glcorearb_h_	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	2;"	d
__glcorearb_h_	lib/gl3w/GL/glcorearb.h	2;"	d
__glsl_shader_frag_spv	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static uint32_t __glsl_shader_frag_spv[] =$/;"	v	file:
__glsl_shader_vert_spv	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static uint32_t __glsl_shader_vert_spv[] =$/;"	v	file:
__int_free	lib/klib/test/klist_test.c	4;"	d	file:
__kb_destroy	lib/klib/kbtree.h	79;"	d
__kb_get_first	lib/klib/kbtree.h	430;"	d
__kb_traverse	lib/klib/kbtree.h	406;"	d
__kbstack_t	lib/klib/kbtree.h	/^} __kbstack_t;$/;"	t	typeref:struct:__anon7
__kh_cached_hash	lib/klib/khashl.h	258;"	d
__kh_fsize	lib/klib/cpp/khashl.hpp	/^	static inline khint_t __kh_fsize(khint_t m) { return m<32? 1 : m>>5; }$/;"	f	class:klib::KHashSet
__kh_fsize	lib/klib/khashl.h	96;"	d
__kh_h2b	lib/klib/cpp/khashl.hpp	/^	static inline khint_t __kh_h2b(uint32_t hash, khint_t bits) { return hash * 2654435769U >> (32 - bits); }$/;"	f	class:klib::KHashSet
__kh_h2b	lib/klib/cpp/khashl.hpp	/^	static inline khint_t __kh_h2b(uint64_t hash, khint_t bits) { return hash * 11400714819323198485ULL >> (64 - bits); }$/;"	f	class:klib::KHashSet
__kh_h2b	lib/klib/khashl.h	/^static kh_inline khint_t __kh_h2b(khint_t hash, khint_t bits) { return hash * 2654435769U >> (32 - bits); }$/;"	f
__kh_packed	lib/klib/khashl.h	257;"	d
__kh_set_unused	lib/klib/cpp/khashl.hpp	/^	static inline void __kh_set_unused(uint32_t *flag, khint_t i) { flag[i>>5] &= ~(1U<<(i&0x1fU)); };$/;"	f	class:klib::KHashSet
__kh_set_unused	lib/klib/khashl.h	94;"	d
__kh_set_used	lib/klib/cpp/khashl.hpp	/^	static inline void __kh_set_used(uint32_t *flag, khint_t i) { flag[i>>5] |= 1U<<(i&0x1fU); };$/;"	f	class:klib::KHashSet
__kh_set_used	lib/klib/khashl.h	93;"	d
__kh_used	lib/klib/cpp/khashl.hpp	/^	static inline uint32_t __kh_used(const uint32_t *flag, khint_t i) { return flag[i>>5] >> (i&0x1fU) & 1U; };$/;"	f	class:klib::KHashSet
__kh_used	lib/klib/khashl.h	92;"	d
__kmin_hj_aux	lib/klib/kmath.c	/^static double __kmin_hj_aux(kmin_f func, int n, double *x1, void *data, double fx1, double *dx, int *n_calls)$/;"	f	file:
__ksplit_aux	lib/klib/kstring.c	71;"	d	file:
__kstring_t	lib/klib/bgzf.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	lib/klib/knhx.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	lib/klib/kseq.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	lib/klib/kstring.h	/^typedef struct __kstring_t {$/;"	s
__max_16	lib/klib/ksw.c	113;"	d	file:
__max_8	lib/klib/ksw.c	230;"	d	file:
__new_node	lib/klib/kson.c	28;"	d	file:
__push_back	lib/klib/knhx.c	51;"	d	file:
__push_back	lib/klib/kson.c	20;"	d	file:
_bgzf_close	lib/klib/bgzf.c	38;"	d	file:
_bgzf_close	lib/klib/bgzf.c	55;"	d	file:
_bgzf_dopen	lib/klib/bgzf.c	37;"	d	file:
_bgzf_dopen	lib/klib/bgzf.c	54;"	d	file:
_bgzf_file_t	lib/klib/bgzf.c	/^typedef FILE *_bgzf_file_t;$/;"	t	file:
_bgzf_file_t	lib/klib/bgzf.c	/^typedef knetFile *_bgzf_file_t;$/;"	t	file:
_bgzf_fileno	lib/klib/bgzf.c	39;"	d	file:
_bgzf_fileno	lib/klib/bgzf.c	56;"	d	file:
_bgzf_open	lib/klib/bgzf.c	36;"	d	file:
_bgzf_open	lib/klib/bgzf.c	53;"	d	file:
_bgzf_read	lib/klib/bgzf.c	42;"	d	file:
_bgzf_read	lib/klib/bgzf.c	59;"	d	file:
_bgzf_seek	lib/klib/bgzf.c	41;"	d	file:
_bgzf_seek	lib/klib/bgzf.c	58;"	d	file:
_bgzf_tell	lib/klib/bgzf.c	40;"	d	file:
_bgzf_tell	lib/klib/bgzf.c	57;"	d	file:
_bgzf_write	lib/klib/bgzf.c	43;"	d	file:
_bgzf_write	lib/klib/bgzf.c	60;"	d	file:
_glfw3_h_	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	30;"	d
_glfw3_native_h_	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3native.h	30;"	d
_grow_capacity	lib/cimgui/imgui/imgui.h	/^    inline int          _grow_capacity(int sz) const        { int new_capacity = Capacity ? (Capacity + Capacity\/2) : 8; return new_capacity > sz ? new_capacity : sz; }$/;"	f	struct:ImVector
_kf_gammap	lib/klib/kmath.c	/^static double _kf_gammap(double s, double z)$/;"	f	file:
_kf_gammap	lib/klib/lua/klib.lua	/^	local function _kf_gammap(s, z)$/;"	f
_kf_gammaq	lib/klib/kmath.c	/^static double _kf_gammaq(double s, double z)$/;"	f	file:
_kf_gammaq	lib/klib/lua/klib.lua	/^	local function _kf_gammaq(s, z)$/;"	f
_kswq_t	lib/klib/ksw.c	/^struct _kswq_t {$/;"	s	file:
a	lib/klib/khmm.h	/^	FLOAT **a, **e; \/\/ transition matrix and emitting probilities$/;"	m	struct:__anon20
a	lib/nuklear/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc
a	lib/nuklear/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc_filled
a	lib/nuklear/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
a	lib/nuklear/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
a	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
a	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
a	lib/nuklear/src/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc
a	lib/nuklear/src/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc_filled
a	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
a	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
a	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
a	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
a0	lib/klib/khmm.h	/^	FLOAT *a0; \/\/ trasition matrix from the start state$/;"	m	struct:__anon20
action	lib/klib/kthread.c	/^	int action;$/;"	m	struct:__anon37	file:
active	lib/nuklear/demo/node_editor.c	/^    int active;$/;"	m	struct:node_linking	file:
active	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state
active	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state
active	lib/nuklear/nuklear.h	/^    int active;$/;"	m	struct:nk_buffer_marker
active	lib/nuklear/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_buffer
active	lib/nuklear/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_state
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_window *active;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
active	lib/nuklear/nuklear.h	/^    unsigned char active;$/;"	m	struct:nk_text_edit
active	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state
active	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state
active	lib/nuklear/src/nuklear.h	/^    int active;$/;"	m	struct:nk_buffer_marker
active	lib/nuklear/src/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_buffer
active	lib/nuklear/src/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_state
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_window *active;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
active	lib/nuklear/src/nuklear.h	/^    unsigned char active;$/;"	m	struct:nk_text_edit
active_con	lib/nuklear/nuklear.h	/^    unsigned active_con;$/;"	m	struct:nk_popup_state
active_con	lib/nuklear/src/nuklear.h	/^    unsigned active_con;$/;"	m	struct:nk_popup_state
active_head	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_node *active_head;$/;"	m	struct:stbrp_context
active_head	lib/nuklear/nuklear.h	/^    struct nk_rp_node *active_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node
active_head	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node *active_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node	file:
add_node	lib/klib/knhx.c	/^static inline char *add_node(const char *s, knaux_t *aux, int x)$/;"	f	file:
ae	lib/klib/khmm.h	/^	FLOAT **ae; \/\/ auxiliary array for acceleration, should be calculated by hmm_pre_backward()$/;"	m	struct:__anon20
align	lib/cimgui/imgui/imstb_rectpack.h	/^   int align;$/;"	m	struct:stbrp_context
align	lib/nuklear/nuklear.h	/^    enum nk_style_header_align align;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_style_header_align
align	lib/nuklear/nuklear.h	/^    int align;$/;"	m	struct:nk_rp_context
align	lib/nuklear/src/nuklear.h	/^    enum nk_style_header_align align;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_style_header_align
align	lib/nuklear/src/nuklear_font.c	/^    int align;$/;"	m	struct:nk_rp_context	file:
allegro5	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^} allegro5;$/;"	v	typeref:struct:nk_allegro5
alloc	lib/nuklear/nuklear.h	/^    nk_plugin_alloc alloc;$/;"	m	struct:nk_allocator
alloc	lib/nuklear/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_allocator
alloc	lib/nuklear/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_allocator
alloc	lib/nuklear/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap::nk_allocator
alloc	lib/nuklear/src/nuklear.h	/^    nk_plugin_alloc alloc;$/;"	m	struct:nk_allocator
alloc	lib/nuklear/src/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_allocator
alloc	lib/nuklear/src/nuklear_font.c	/^    struct nk_allocator alloc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_allocator	file:
alloc	lib/nuklear/src/nuklear_font.c	/^    struct nk_allocator alloc;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap::nk_allocator	file:
alloc_chunk	lib/cimgui/imgui/imgui_internal.h	/^    T*      alloc_chunk(size_t sz)      { size_t HDR_SZ = 4; sz = ((HDR_SZ + sz) + 3u) & ~3u; int off = Buf.Size; Buf.resize(off + (int)sz); ((int*)(void*)(Buf.Data + off))[0] = (int)sz; return (T*)(void*)(Buf.Data + off + (int)HDR_SZ); }$/;"	f	struct:ImChunkStream
alloca	lib/cimgui/imgui/imgui_draw.cpp	44;"	d	file:
allocated	lib/nuklear/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_buffer
allocated	lib/nuklear/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_memory_status
allocated	lib/nuklear/src/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_buffer
allocated	lib/nuklear/src/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_memory_status
alpha_1	src/shader.h	/^	GLuint alpha_1; \/\/ out alpha$/;"	m	struct:__anon2
alpha_2	src/shader.h	/^	GLuint alpha_2; \/\/ in alpha$/;"	m	struct:__anon2
alphabet	lib/klib/test/kstring_bench2.c	/^static int alphabet = 2;$/;"	v	file:
and not line:match	lib/cimgui/generator/generator_old.lua	/^        if func and not in_function and not line:match("typedef.*%b().*%b().*") $/;"	f
append	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextBuffer::append(const char* str, const char* str_end)$/;"	f	class:ImGuiTextBuffer
appendf	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextBuffer::appendf(const char* fmt, ...)$/;"	f	class:ImGuiTextBuffer
appendfv	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextBuffer::appendfv(const char* fmt, va_list args)$/;"	f	class:ImGuiTextBuffer
arc_segment_count	lib/nuklear/nuklear.h	/^    unsigned arc_segment_count; \/* number of segments used for arcs: default to 22 *\/$/;"	m	struct:nk_convert_config
arc_segment_count	lib/nuklear/src/nuklear.h	/^    unsigned arc_segment_count; \/* number of segments used for arcs: default to 22 *\/$/;"	m	struct:nk_convert_config
arg	lib/klib/ketopt.h	/^	char *arg; \/* equivalent to optarg *\/$/;"	m	struct:__anon29
array_of_unicode_codepoints	lib/cimgui/imgui/imstb_truetype.h	/^   int *array_of_unicode_codepoints;       \/\/ if non-zero, then this is an array of unicode codepoints$/;"	m	struct:__anon117
array_of_unicode_codepoints	lib/nuklear/nuklear.h	/^    int *array_of_unicode_codepoints;$/;"	m	struct:nk_tt_pack_range
array_of_unicode_codepoints	lib/nuklear/src/nuklear_font.c	/^    int *array_of_unicode_codepoints;$/;"	m	struct:nk_tt_pack_range	file:
ascent	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int ascent;$/;"	m	struct:XFont
ascent	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    int ascent;$/;"	m	struct:XFont
ascent	lib/nuklear/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font
ascent	lib/nuklear/src/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font
assigned	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	file:
at	lib/klib/cpp/khash.hpp	/^	T &at(khint_t x) { return keys[x]; };$/;"	f	class:klib::KHash
at_x	lib/nuklear/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
at_x	lib/nuklear/src/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
at_y	lib/nuklear/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
at_y	lib/nuklear/src/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
atlas	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:__anon174	typeref:struct:__anon174::nk_font_atlas
atlas	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:__anon173	typeref:struct:__anon173::nk_font_atlas
atlas	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_font_atlas
atlas	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_font_atlas
atlas	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_font_atlas
atlas	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_font_atlas
atlas	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_font_atlas
atlas	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_font_atlas
atlas	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml::nk_font_atlas
atlas	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml::nk_font_atlas
atlas	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_x11	typeref:struct:nk_x11::nk_font_atlas
atlas	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_x11	typeref:struct:nk_x11::nk_font_atlas
atlas	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:rawfb_context	typeref:struct:rawfb_context::nk_font_atlas
attr	lib/nuklear/demo/x11/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	file:
attr	lib/nuklear/demo/x11_opengl2/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	file:
attr	lib/nuklear/demo/x11_opengl3/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	file:
attr	lib/nuklear/demo/x11_rawfb/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	file:
attr	lib/nuklear/demo/x11_xft/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	file:
attrib_col	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_glfw_device
attrib_col	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint attrib_col;$/;"	m	struct:nk_glfw_device
attrib_col	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_sdl_device
attrib_col	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint attrib_col;$/;"	m	struct:nk_sdl_device
attrib_col	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_sfml_device
attrib_col	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_x11_device
attrib_col	lib/nuklear/example/canvas.c	/^    GLint attrib_col;$/;"	m	struct:device	file:
attrib_col	lib/nuklear/example/extended.c	/^    GLint attrib_col;$/;"	m	struct:device	file:
attrib_col	lib/nuklear/example/file_browser.c	/^    GLint attrib_col;$/;"	m	struct:device	file:
attrib_col	lib/nuklear/example/skinning.c	/^    GLint attrib_col;$/;"	m	struct:device	file:
attrib_pos	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_glfw_device
attrib_pos	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint attrib_pos;$/;"	m	struct:nk_glfw_device
attrib_pos	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_sdl_device
attrib_pos	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint attrib_pos;$/;"	m	struct:nk_sdl_device
attrib_pos	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_sfml_device
attrib_pos	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_x11_device
attrib_pos	lib/nuklear/example/canvas.c	/^    GLint attrib_pos;$/;"	m	struct:device	file:
attrib_pos	lib/nuklear/example/extended.c	/^    GLint attrib_pos;$/;"	m	struct:device	file:
attrib_pos	lib/nuklear/example/file_browser.c	/^    GLint attrib_pos;$/;"	m	struct:device	file:
attrib_pos	lib/nuklear/example/skinning.c	/^    GLint attrib_pos;$/;"	m	struct:device	file:
attrib_uv	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_glfw_device
attrib_uv	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint attrib_uv;$/;"	m	struct:nk_glfw_device
attrib_uv	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_sdl_device
attrib_uv	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint attrib_uv;$/;"	m	struct:nk_sdl_device
attrib_uv	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_sfml_device
attrib_uv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_x11_device
attrib_uv	lib/nuklear/example/canvas.c	/^    GLint attrib_uv;$/;"	m	struct:device	file:
attrib_uv	lib/nuklear/example/extended.c	/^    GLint attrib_uv;$/;"	m	struct:device	file:
attrib_uv	lib/nuklear/example/file_browser.c	/^    GLint attrib_uv;$/;"	m	struct:device	file:
attrib_uv	lib/nuklear/example/skinning.c	/^    GLint attrib_uv;$/;"	m	struct:device	file:
attribute	lib/nuklear/nuklear.h	/^    enum nk_draw_vertex_layout_attribute attribute;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_element::nk_draw_vertex_layout_attribute
attribute	lib/nuklear/src/nuklear.h	/^    enum nk_draw_vertex_layout_attribute attribute;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_element::nk_draw_vertex_layout_attribute
auth	lib/klib/kurl.c	/^	char *url, *date, *auth;$/;"	m	struct:__anon25	file:
aux_func	lib/klib/lua/klib.lua	/^	local function aux_func(t) -- auxiliary function$/;"	f
available	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon43
b	lib/cimgui/cimgui.h	/^        const char* b;$/;"	m	struct:ImGuiTextRange
b	lib/cimgui/generator/output/cimgui.h	/^        const char* b;$/;"	m	struct:ImGuiTextRange
b	lib/cimgui/imgui/imgui.h	/^        const char*     b;$/;"	m	struct:ImGuiTextFilter::ImGuiTextRange
b	lib/klib/khmm.h	/^	FLOAT **f, **b, *s;$/;"	m	struct:__anon21
b	lib/klib/kurl.c	/^	union { uint8_t b[BLOCK_LENGTH]; uint32_t w[BLOCK_LENGTH\/4]; } buf;$/;"	m	union:sha1nfo::__anon26	file:
b	lib/klib/kurl.c	/^	union { uint8_t b[HASH_LENGTH]; uint32_t w[HASH_LENGTH\/4]; } state;$/;"	m	union:sha1nfo::__anon27	file:
b	lib/klib/test/ksort_test.cc	/^	rstype_t *b, *e;$/;"	m	struct:__anon16	file:
b	lib/nuklear/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
b	lib/nuklear/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
b	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
b	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
b	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
b	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
b	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
b	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
back	lib/cimgui/imgui/imgui.h	/^    inline T&           back()                              { IM_ASSERT(Size > 0); return Data[Size - 1]; }$/;"	f	struct:ImVector
back	lib/cimgui/imgui/imgui.h	/^    inline const T&     back() const                        { IM_ASSERT(Size > 0); return Data[Size - 1]; }$/;"	f	struct:ImVector
background	lib/nuklear/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_color
background	lib/nuklear/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
background	lib/nuklear/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_color
background	lib/nuklear/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_style_item
background	lib/nuklear/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_item
background	lib/nuklear/src/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_color
background	lib/nuklear/src/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
background	lib/nuklear/src/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_style_item
background	lib/nuklear/src/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_item
background	lib/nuklear/src/nuklear_internal.h	/^    struct nk_color background;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_color
balance	lib/klib/cpp/kavl.hpp	/^		signed char balance;$/;"	m	struct:klib::Avl::Node
bar_active	lib/nuklear/nuklear.h	/^    struct nk_color bar_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_active	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_filled	lib/nuklear/nuklear.h	/^    struct nk_color bar_filled;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_filled	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_filled;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_height	lib/nuklear/nuklear.h	/^    float bar_height;$/;"	m	struct:nk_style_slider
bar_height	lib/nuklear/src/nuklear.h	/^    float bar_height;$/;"	m	struct:nk_style_slider
bar_hover	lib/nuklear/nuklear.h	/^    struct nk_color bar_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_normal	lib/nuklear/nuklear.h	/^    struct nk_color bar_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
bar_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
base	lib/klib/kalloc.c	/^	header_t base, *loop_head, *core_head; \/* base is a zero-sized block always kept in the loop *\/$/;"	m	struct:__anon18	file:
base	lib/nuklear/nuklear.h	/^    struct nk_buffer *base;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_command_buffer::nk_buffer
base	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *base;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_command_buffer::nk_buffer
baseline_y_delta	lib/cimgui/imgui/imstb_textedit.h	/^   float baseline_y_delta;  \/\/ position of baseline relative to previous row's baseline$/;"	m	struct:__anon110
baseline_y_delta	lib/nuklear/nuklear.h	/^   float baseline_y_delta;$/;"	m	struct:nk_text_edit_row
baseline_y_delta	lib/nuklear/src/nuklear_text_editor.c	/^   float baseline_y_delta;$/;"	m	struct:nk_text_edit_row	file:
basicSerialize 	lib/cimgui/generator/cpp2ffi.lua	/^    local function basicSerialize (o)$/;"	f
basicSerialize 	lib/cimgui/generator/generator_old.lua	/^    local function basicSerialize (o)$/;"	f
basicToStr 	lib/cimgui/generator/cpp2ffi.lua	/^	local function basicToStr (o)$/;"	f
basic_demo	lib/nuklear/example/extended.c	/^basic_demo(struct nk_context *ctx, struct media *media)$/;"	f	file:
bbgl_init	src/bbgl.c	/^void bbgl_init() {$/;"	f
bbgl_loop	src/bbgl.c	/^void bbgl_loop() {$/;"	f
begin	lib/cimgui/imgui/imgui.h	/^    const char*         begin() const           { return Buf.Data ? &Buf.front() : EmptyString; }$/;"	f	struct:ImGuiTextBuffer
begin	lib/cimgui/imgui/imgui.h	/^    inline T*           begin()                             { return Data; }$/;"	f	struct:ImVector
begin	lib/cimgui/imgui/imgui.h	/^    inline const T*     begin() const                       { return Data; }$/;"	f	struct:ImVector
begin	lib/cimgui/imgui/imgui_internal.h	/^    T*      begin()                     { size_t HDR_SZ = 4; if (!Buf.Data) return NULL; return (T*)(void*)(Buf.Data + HDR_SZ); }$/;"	f	struct:ImChunkStream
begin	lib/klib/cpp/khash.hpp	/^	khint_t begin(void) const { return 0; };$/;"	f	class:klib::KHash
begin	lib/nuklear/demo/node_editor.c	/^    struct node *begin;$/;"	m	struct:node_editor	typeref:struct:node_editor::node	file:
begin	lib/nuklear/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
begin	lib/nuklear/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
begin	lib/nuklear/nuklear.h	/^    nk_size begin;$/;"	m	struct:nk_popup_buffer
begin	lib/nuklear/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
begin	lib/nuklear/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_vec2i
begin	lib/nuklear/nuklear.h	/^    struct nk_window *begin;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
begin	lib/nuklear/src/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
begin	lib/nuklear/src/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
begin	lib/nuklear/src/nuklear.h	/^    nk_size begin;$/;"	m	struct:nk_popup_buffer
begin	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
begin	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_vec2i
begin	lib/nuklear/src/nuklear.h	/^    struct nk_window *begin;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
bgindex	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon159
bgzf_check_EOF	lib/klib/bgzf.c	/^int bgzf_check_EOF(BGZF *fp)$/;"	f
bgzf_close	lib/klib/bgzf.c	/^int bgzf_close(BGZF* fp)$/;"	f
bgzf_dopen	lib/klib/bgzf.c	/^BGZF *bgzf_dopen(int fd, const char *mode)$/;"	f
bgzf_fdopen	lib/klib/bgzf.h	79;"	d
bgzf_flush	lib/klib/bgzf.c	/^int bgzf_flush(BGZF *fp)$/;"	f
bgzf_flush_try	lib/klib/bgzf.c	/^int bgzf_flush_try(BGZF *fp, ssize_t size)$/;"	f
bgzf_getc	lib/klib/bgzf.c	/^int bgzf_getc(BGZF *fp)$/;"	f
bgzf_getline	lib/klib/bgzf.c	/^int bgzf_getline(BGZF *fp, int delim, kstring_t *str)$/;"	f
bgzf_is_bgzf	lib/klib/bgzf.c	/^int bgzf_is_bgzf(const char *fn)$/;"	f
bgzf_open	lib/klib/bgzf.c	/^BGZF *bgzf_open(const char *path, const char *mode)$/;"	f
bgzf_read	lib/klib/bgzf.c	/^ssize_t bgzf_read(BGZF *fp, void *data, ssize_t length)$/;"	f
bgzf_read_block	lib/klib/bgzf.c	/^int bgzf_read_block(BGZF *fp)$/;"	f
bgzf_read_init	lib/klib/bgzf.c	/^static BGZF *bgzf_read_init()$/;"	f	file:
bgzf_seek	lib/klib/bgzf.c	/^int64_t bgzf_seek(BGZF* fp, int64_t pos, int where)$/;"	f
bgzf_set_cache_size	lib/klib/bgzf.c	/^void bgzf_set_cache_size(BGZF *fp, int cache_size)$/;"	f
bgzf_tell	lib/klib/bgzf.h	125;"	d
bgzf_write	lib/klib/bgzf.c	/^ssize_t bgzf_write(BGZF *fp, const void *data, ssize_t length)$/;"	f
bgzf_write_init	lib/klib/bgzf.c	/^static BGZF *bgzf_write_init(int compress_level) \/\/ compress_level==-1 for the default level$/;"	f	file:
binary_to_compressed_c	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^bool binary_to_compressed_c(const char* filename, const char* symbol, bool use_base85_encoding, bool use_compression)$/;"	f
bitmap	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HBITMAP bitmap;$/;"	m	struct:__anon176
bitmap	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpImage *bitmap;$/;"	m	struct:__anon189
bits	lib/klib/cpp/khashl.hpp	/^	khint_t bits, count;$/;"	m	class:klib::KHashSet
blend_state	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11BlendState *blend_state;$/;"	m	struct:__anon174
block	lib/klib/bgzf.c	/^	uint8_t *block;$/;"	m	struct:__anon40	file:
block_address	lib/klib/bgzf.h	/^    int64_t block_address;$/;"	m	struct:__anon31
block_length	lib/klib/bgzf.h	/^    int block_length, block_offset;$/;"	m	struct:__anon31
block_offset	lib/klib/bgzf.h	/^    int block_length, block_offset;$/;"	m	struct:__anon31
blue	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned short* blue;$/;"	m	struct:GLFWgammaramp
blueBits	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int blueBits;$/;"	m	struct:GLFWvidmode
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_panel
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_button
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_chart
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_combo
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_edit
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_progress
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_property
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_scrollbar
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_slider
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_tab
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_toggle
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_window
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_panel
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_button
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_chart
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_combo
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_edit
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_progress
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_property
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_scrollbar
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_slider
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_tab
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_toggle
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_window
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
border_cursor	lib/nuklear/nuklear.h	/^    float border_cursor;$/;"	m	struct:nk_style_scrollbar
border_cursor	lib/nuklear/src/nuklear.h	/^    float border_cursor;$/;"	m	struct:nk_style_scrollbar
bottom	lib/nuklear/nuklear.h	/^    struct nk_color bottom;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
bottom	lib/nuklear/src/nuklear.h	/^    struct nk_color bottom;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
bottom_y	lib/cimgui/imgui/imstb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon129
bounds	lib/cimgui/imgui/imstb_truetype.h	/^   int bounds;$/;"	m	struct:__anon127
bounds	lib/nuklear/demo/node_editor.c	/^    struct nk_rect bounds;$/;"	m	struct:node	typeref:struct:node::nk_rect	file:
bounds	lib/nuklear/demo/node_editor.c	/^    struct nk_rect bounds;$/;"	m	struct:node_editor	typeref:struct:node_editor::nk_rect	file:
bounds	lib/nuklear/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_rect
bounds	lib/nuklear/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_rect
bounds	lib/nuklear/src/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_rect
bounds	lib/nuklear/src/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_rect
brush	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpSolidFill *brush;$/;"	m	struct:__anon189
bt1_countInU64	lib/klib/test/kbit_test.c	/^inline static int bt1_countInU64(uint64_t dw, int c) \/\/ the kbi_DNAcount64() equivalence$/;"	f	file:
bt1_pop64	lib/klib/test/kbit_test.c	/^inline static int bt1_pop64(uint64_t x) \/\/ the kbi_popcount64() equivalence; similar to popcount_2() in wiki$/;"	f	file:
bucket_t	lib/klib/cpp/khashl.hpp	/^	typedef KHashMapBucket<KType, VType> bucket_t;$/;"	t	class:klib::KHashMap
bucket_t	lib/klib/cpp/khashl.hpp	/^	typedef KHashMapCachedBucket<KType, VType, khint_t> bucket_t;$/;"	t	class:klib::KHashMapCached
bucket_t	lib/klib/cpp/khashl.hpp	/^	typedef KHashSetCachedBucket<KType, khint_t> bucket_t;$/;"	t	class:klib::KHashSetCached
buf	lib/klib/kurl.c	/^	uint8_t *buf; \/\/ buffer$/;"	m	struct:kurl_t	file:
buf	lib/klib/kurl.c	/^	union { uint8_t b[BLOCK_LENGTH]; uint32_t w[BLOCK_LENGTH\/4]; } buf;$/;"	m	struct:sha1nfo	typeref:union:sha1nfo::__anon26	file:
buf	lib/klib/test/kthread_test2.c	/^	char *buf;$/;"	m	struct:__anon14	file:
buf	lib/nuklear/nuklear.h	/^    struct nk_popup_buffer buf;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_popup_buffer
buf	lib/nuklear/src/nuklear.h	/^    struct nk_popup_buffer buf;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_popup_buffer
bufOffset	lib/klib/kurl.c	/^	uint8_t bufOffset;$/;"	m	struct:sha1nfo	file:
buf_size	lib/klib/test/kthread_test2.c	/^	int max_lines, buf_size, n_threads;$/;"	m	struct:__anon14	file:
buffer	lib/nuklear/nuklear.h	/^    char buffer[NK_MAX_NUMBER_BUFFER];$/;"	m	struct:nk_property_state
buffer	lib/nuklear/nuklear.h	/^    struct nk_buffer *buffer;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
buffer	lib/nuklear/nuklear.h	/^    struct nk_buffer buffer;$/;"	m	struct:nk_str	typeref:struct:nk_str::nk_buffer
buffer	lib/nuklear/nuklear.h	/^    struct nk_command_buffer *buffer;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_command_buffer
buffer	lib/nuklear/nuklear.h	/^    struct nk_command_buffer buffer;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_command_buffer
buffer	lib/nuklear/src/nuklear.h	/^    char buffer[NK_MAX_NUMBER_BUFFER];$/;"	m	struct:nk_property_state
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *buffer;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_buffer buffer;$/;"	m	struct:nk_str	typeref:struct:nk_str::nk_buffer
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_command_buffer *buffer;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_command_buffer
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_command_buffer buffer;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_command_buffer
buffer_start	lib/nuklear/example/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anon146
buffer_sync	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLsync buffer_sync;$/;"	m	struct:nk_glfw_device
buflen	lib/nuklear/example/stb_image.h	/^   int buflen;$/;"	m	struct:__anon146
build	lib/nuklear/nuklear.h	/^    int build;$/;"	m	struct:nk_context
build	lib/nuklear/nuklear.h	/^    struct nk_font_bake_data *build;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_font_bake_data
build	lib/nuklear/src/nuklear.h	/^    int build;$/;"	m	struct:nk_context
build	lib/nuklear/src/nuklear_font.c	/^    struct nk_font_bake_data *build;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_font_bake_data	file:
builtin	lib/klib/kexpr.c	/^		void (*builtin)(struct ke1_s *a, struct ke1_s *b); \/\/ execution function$/;"	m	union:ke1_s::__anon24	file:
bundle	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^CFBundleRef bundle;$/;"	v
bundle	lib/gl3w/GL/gl3w.c	/^CFBundleRef bundle;$/;"	v
bundleURL	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^CFURLRef bundleURL;$/;"	v
bundleURL	lib/gl3w/GL/gl3w.c	/^CFURLRef bundleURL;$/;"	v
button	lib/nuklear/example/skinning.c	/^    struct nk_image button;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
button	lib/nuklear/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
button	lib/nuklear/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_button
button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_button
button_active	lib/nuklear/example/skinning.c	/^    struct nk_image button_active;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
button_behavior	lib/nuklear/nuklear.h	/^    enum nk_button_behavior button_behavior;$/;"	m	struct:nk_context	typeref:enum:nk_context::nk_button_behavior
button_behavior	lib/nuklear/src/nuklear.h	/^    enum nk_button_behavior button_behavior;$/;"	m	struct:nk_context	typeref:enum:nk_context::nk_button_behavior
button_behaviors	lib/nuklear/nuklear.h	/^    struct nk_config_stack_button_behavior button_behaviors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_button_behavior
button_behaviors	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_button_behavior button_behaviors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_button_behavior
button_demo	lib/nuklear/example/extended.c	/^button_demo(struct nk_context *ctx, struct media *media)$/;"	f	file:
button_hover	lib/nuklear/example/skinning.c	/^    struct nk_image button_hover;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
button_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 button_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
button_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 button_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
buttons	lib/nuklear/nuklear.h	/^    struct nk_mouse_button buttons[NK_BUTTON_MAX];$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_mouse_button
buttons	lib/nuklear/src/nuklear.h	/^    struct nk_mouse_button buttons[NK_BUTTON_MAX];$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_mouse_button
byteCount	lib/klib/kurl.c	/^	uint32_t byteCount;$/;"	m	struct:sha1nfo	file:
c	lib/nuklear/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
c	lib/nuklear/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
c	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big
c	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_vec2i
c	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_vec2i
c	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big
c_str	lib/cimgui/imgui/imgui.h	/^    const char*         c_str() const           { return Buf.Data ? Buf.Data : EmptyString; }$/;"	f	struct:ImGuiTextBuffer
cache	lib/klib/bgzf.h	/^	void *cache; \/\/ a pointer to a hash table$/;"	m	struct:__anon31
cache_block	lib/klib/bgzf.c	/^static void cache_block(BGZF *fp, int size) {}$/;"	f	file:
cache_block	lib/klib/bgzf.c	/^static void cache_block(BGZF *fp, int size)$/;"	f	file:
cache_size	lib/klib/bgzf.h	/^	int cache_size;$/;"	m	struct:__anon31
cache_t	lib/klib/bgzf.c	/^} cache_t;$/;"	t	typeref:struct:__anon40	file:
calculator	lib/nuklear/demo/calculator.c	/^calculator(struct nk_context *ctx)$/;"	f	file:
callback	lib/nuklear/nuklear.h	/^    nk_command_custom_callback callback;$/;"	m	struct:nk_command_custom
callback	lib/nuklear/src/nuklear.h	/^    nk_command_custom_callback callback;$/;"	m	struct:nk_command_custom
callback_data	lib/nuklear/nuklear.h	/^    nk_handle callback_data;$/;"	m	struct:nk_command_custom
callback_data	lib/nuklear/src/nuklear.h	/^    nk_handle callback_data;$/;"	m	struct:nk_command_custom
calloc2	lib/klib/khmm.h	/^static inline void **calloc2(int n_row, int n_col, int size)$/;"	f
calls	lib/nuklear/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_buffer
calls	lib/nuklear/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_memory_status
calls	lib/nuklear/src/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_buffer
calls	lib/nuklear/src/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_memory_status
canvas_begin	lib/nuklear/example/canvas.c	/^canvas_begin(struct nk_context *ctx, struct nk_canvas *canvas, nk_flags flags,$/;"	f	file:
canvas_end	lib/nuklear/example/canvas.c	/^canvas_end(struct nk_context *ctx, struct nk_canvas *canvas)$/;"	f	file:
cap	lib/nuklear/nuklear.h	/^    nk_size cap;$/;"	m	struct:nk_pool
cap	lib/nuklear/src/nuklear.h	/^    nk_size cap;$/;"	m	struct:nk_pool
capacity	lib/cimgui/imgui/imgui.h	/^    inline int          capacity() const                    { return Capacity; }$/;"	f	struct:ImVector
capacity	lib/klib/cpp/khash.hpp	/^	khint_t capacity(void) const { return n_buckets; };$/;"	f	class:klib::KHash
capacity	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon43
capacity	lib/nuklear/nuklear.h	/^    unsigned capacity;$/;"	m	struct:nk_pool
capacity	lib/nuklear/src/nuklear.h	/^    unsigned capacity;$/;"	m	struct:nk_pool
cat_stat_comp	src/data.c	/^static int cat_stat_comp(const void* a, const void* b) {$/;"	f	file:
cat_stat_t	src/data.h	/^typedef struct cat_stat_t {$/;"	s
cat_stat_t	src/data.h	/^} cat_stat_t;$/;"	t	typeref:struct:cat_stat_t
cat_sum	src/data.h	/^    cat_stat_t* cat_sum; \/\/ per category sum$/;"	m	struct:cluster_stat_t
categories_start	src/globals.h	/^int categories_start;$/;"	v
cdata	lib/cimgui/imgui/imstb_truetype.h	/^stbtt_bakedchar cdata[96]; \/\/ ASCII 32..126 is 95 glyphs$/;"	v
cff	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt__buf cff;                    \/\/ cff font data$/;"	m	struct:stbtt_fontinfo
channel	lib/nuklear/example/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon157
char_storage	lib/cimgui/imgui/imstb_textedit.h	/^   int                        char_storage;$/;"	m	struct:__anon107
char_storage	lib/nuklear/nuklear.h	/^   short char_storage;$/;"	m	struct:nk_text_undo_record
char_storage	lib/nuklear/src/nuklear.h	/^   short char_storage;$/;"	m	struct:nk_text_undo_record
chardata_for_range	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt_packedchar *chardata_for_range; \/\/ output$/;"	m	struct:__anon117
chardata_for_range	lib/nuklear/nuklear.h	/^    struct nk_tt_packedchar *chardata_for_range; \/* output *\/$/;"	m	struct:nk_tt_pack_range	typeref:struct:nk_tt_pack_range::nk_tt_packedchar
chardata_for_range	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_packedchar *chardata_for_range; \/* output *\/$/;"	m	struct:nk_tt_pack_range	typeref:struct:nk_tt_pack_range::nk_tt_packedchar	file:
charstrings	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt__buf charstrings;            \/\/ the charstring index$/;"	m	struct:stbtt_fontinfo
chart	lib/nuklear/nuklear.h	/^    struct nk_chart chart;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_chart
chart	lib/nuklear/nuklear.h	/^    struct nk_style_chart chart;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_chart
chart	lib/nuklear/src/nuklear.h	/^    struct nk_chart chart;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_chart
chart	lib/nuklear/src/nuklear.h	/^    struct nk_style_chart chart;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_chart
check	lib/klib/test/kavl_test.c	/^int check(struct my_node *p, int *hh)$/;"	f
check	lib/klib/test/krmq_test.c	/^int check(struct my_node *p, int *hh, int *min)$/;"	f
check	lib/klib/test/kstring_test.c	/^void check(const char *what, const kstring_t *ks, const char *correct)$/;"	f
check	lib/nuklear/example/skinning.c	/^    struct nk_image check;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
check_and_print	lib/klib/test/krmq_test.c	/^void check_and_print(struct my_node *root)$/;"	f
check_arg_detection	lib/cimgui/generator/cpp2ffi.lua	/^local function check_arg_detection(fdefs,typedefs)$/;"	f
check_arg_detection	lib/cimgui/generator/generator_old.lua	/^local function check_arg_detection(fdefs,typedefs)$/;"	f
check_cursor	lib/nuklear/example/skinning.c	/^    struct nk_image check_cursor;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
check_header	lib/klib/bgzf.c	/^static int check_header(const uint8_t *header)$/;"	f	file:
check_rmq	lib/klib/test/krmq_test.c	/^int check_rmq(const struct my_node *root, int lo, int hi)$/;"	f
check_shader	src/shader.c	/^check_shader(GLuint sid) {$/;"	f	file:
check_vk_result	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void check_vk_result(VkResult err)$/;"	f	file:
check_vk_result	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static void check_vk_result(VkResult err)$/;"	f	file:
check_vk_result	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static void check_vk_result(VkResult err)$/;"	f	file:
checkbox	lib/nuklear/nuklear.h	/^    struct nk_style_toggle checkbox;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_toggle
checkbox	lib/nuklear/src/nuklear.h	/^    struct nk_style_toggle checkbox;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_toggle
checked	lib/nuklear/example/extended.c	/^    struct nk_image checked;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
child	lib/klib/knhx.h	/^	int *child;$/;"	m	struct:__anon33
child	lib/klib/kson.h	/^		struct kson_node_s **child;$/;"	m	union:kson_node_s::__anon9	typeref:struct:kson_node_s::__anon9::kson_node_s
child_size	lib/klib/cpp/kavl.hpp	/^	inline unsigned child_size(Node *p, int dir) {$/;"	f	class:klib::Avl
chr	lib/klib/ksa.c	54;"	d	file:
chunk_size	lib/cimgui/imgui/imgui_internal.h	/^    int     chunk_size(const T* p)      { return ((const int*)p)[-1]; }$/;"	f	struct:ImChunkStream
cimgui_generation	lib/cimgui/generator/generator.lua	/^local function cimgui_generation(parser)$/;"	f
cimgui_generation	lib/cimgui/generator/generator_old.lua	/^local function cimgui_generation(postfix,STP,FP)$/;"	f
circle_segment_count	lib/nuklear/nuklear.h	/^    unsigned circle_segment_count; \/* number of segments used for circles: default to 22 *\/$/;"	m	struct:nk_convert_config
circle_segment_count	lib/nuklear/src/nuklear.h	/^    unsigned circle_segment_count; \/* number of segments used for circles: default to 22 *\/$/;"	m	struct:nk_convert_config
circle_vtx	lib/nuklear/nuklear.h	/^    struct nk_vec2 circle_vtx[12];$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_vec2
circle_vtx	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 circle_vtx[12];$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_vec2
clean_spaces	lib/cimgui/generator/cpp2ffi.lua	/^local function clean_spaces(cad)$/;"	f
clean_spaces	lib/cimgui/generator/generator_old.lua	/^local function clean_spaces(cad)$/;"	f
clear	lib/cimgui/imgui/imgui.h	/^    inline void         clear()                             { if (Data) { Size = Capacity = 0; IM_FREE(Data); Data = NULL; } }$/;"	f	struct:ImVector
clear	lib/cimgui/imgui/imgui.h	/^    void                clear()                 { Buf.clear(); }$/;"	f	struct:ImGuiTextBuffer
clear	lib/cimgui/imgui/imgui_internal.h	/^    void    clear()                     { Buf.clear(); }$/;"	f	struct:ImChunkStream
clear	lib/klib/cpp/khashl.hpp	/^	void clear(void) { $/;"	f	class:klib::KHashSet
clear_color	lib/cimgui/imgui/examples/example_glut_opengl2/main.cpp	/^static ImVec4 clear_color = ImVec4(0.45f, 0.55f, 0.60f, 1.00f);$/;"	v	file:
click_x	src/interactive.h	/^int click_x;$/;"	v
click_y	src/interactive.h	/^int click_y;$/;"	v
clicked	lib/nuklear/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_key
clicked	lib/nuklear/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_mouse_button
clicked	lib/nuklear/src/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_key
clicked	lib/nuklear/src/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_mouse_button
clicked_pos	lib/nuklear/nuklear.h	/^    struct nk_vec2 clicked_pos;$/;"	m	struct:nk_mouse_button	typeref:struct:nk_mouse_button::nk_vec2
clicked_pos	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 clicked_pos;$/;"	m	struct:nk_mouse_button	typeref:struct:nk_mouse_button::nk_vec2
clip	lib/nuklear/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_clipboard
clip	lib/nuklear/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_clipboard
clip	lib/nuklear/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_command_buffer::nk_rect
clip	lib/nuklear/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_rect
clip	lib/nuklear/src/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_clipboard
clip	lib/nuklear/src/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_clipboard
clip	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_command_buffer::nk_rect
clip	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_rect
clipMask	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Pixmap clipMask;$/;"	m	struct:XImageWithAlpha
clipMask	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Pixmap clipMask;$/;"	m	struct:XImageWithAlpha
clipMaskGC	lib/nuklear/demo/x11/nuklear_xlib.h	/^    GC clipMaskGC;$/;"	m	struct:XImageWithAlpha
clipMaskGC	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    GC clipMaskGC;$/;"	m	struct:XImageWithAlpha
clip_rect	lib/nuklear/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_command	typeref:struct:nk_draw_command::nk_rect
clip_rect	lib/nuklear/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_rect
clip_rect	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_command	typeref:struct:nk_draw_command::nk_rect
clip_rect	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_rect
clipboard_data	lib/nuklear/demo/x11/nuklear_xlib.h	/^    char *clipboard_data;$/;"	m	struct:__anon191
clipboard_data	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    char *clipboard_data;$/;"	m	struct:__anon190
clipboard_len	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int clipboard_len;$/;"	m	struct:__anon191
clipboard_len	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    int clipboard_len;$/;"	m	struct:__anon190
clipboard_target	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct nk_text_edit* clipboard_target;$/;"	m	struct:__anon191	typeref:struct:__anon191::nk_text_edit
clipboard_target	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    struct nk_text_edit* clipboard_target;$/;"	m	struct:__anon190	typeref:struct:__anon190::nk_text_edit
close_button	lib/nuklear/nuklear.h	/^    struct nk_style_button close_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_button
close_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button close_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_button
close_libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void close_libgl(void)$/;"	f	file:
close_libgl	lib/gl3w/GL/gl3w.c	/^static void close_libgl(void)$/;"	f	file:
close_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type close_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
close_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type close_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
cloud	lib/nuklear/example/extended.c	/^    struct nk_image cloud;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
cluster_col	src/globals.h	/^int cluster_col;$/;"	v
cluster_stat_t	src/data.h	/^typedef struct cluster_stat_t cluster_stat_t;$/;"	t	typeref:struct:cluster_stat_t
cluster_stat_t	src/data.h	/^typedef struct cluster_stat_t {$/;"	s
cluster_stat_t	src/data.h	/^} cluster_stat_t;$/;"	t	typeref:struct:cluster_stat_t
clusters	src/data.h	/^    cluster_stat_t* clusters; \/\/ clusters stat$/;"	m	struct:__anon1
clusters_cnt	src/data.h	/^    int clusters_cnt;     \/\/ number of cluster, max_id - min_id $/;"	m	struct:__anon1
clusters_comp	src/data.c	/^static int clusters_comp(const void* a, const void* b) {$/;"	f	file:
clusters_window	src/gui.c	/^clusters_window() {$/;"	f
cmap	lib/nuklear/demo/x11/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	file:
cmap	lib/nuklear/demo/x11_opengl2/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	file:
cmap	lib/nuklear/demo/x11_opengl3/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	file:
cmap	lib/nuklear/demo/x11_rawfb/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	file:
cmap	lib/nuklear/demo/x11_xft/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	file:
cmap	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Colormap cmap;$/;"	m	struct:__anon190
cmd2argv	lib/klib/kopen.c	/^static char **cmd2argv(const char *cmd)$/;"	f	file:
cmd_count	lib/nuklear/nuklear.h	/^    unsigned int cmd_count;$/;"	m	struct:nk_draw_list
cmd_count	lib/nuklear/src/nuklear.h	/^    unsigned int cmd_count;$/;"	m	struct:nk_draw_list
cmd_offset	lib/nuklear/nuklear.h	/^    nk_size cmd_offset;$/;"	m	struct:nk_draw_list
cmd_offset	lib/nuklear/src/nuklear.h	/^    nk_size cmd_offset;$/;"	m	struct:nk_draw_list
cmds	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_allegro5	typeref:struct:nk_allegro5::nk_buffer
cmds	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_buffer cmds;$/;"	m	struct:__anon174	typeref:struct:__anon174::nk_buffer
cmds	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_buffer cmds;$/;"	m	struct:__anon173	typeref:struct:__anon173::nk_buffer
cmds	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_buffer
cmds	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_buffer
cmds	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_buffer
cmds	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_sdl_device::nk_buffer
cmds	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_sdl_device::nk_buffer
cmds	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_sdl_device::nk_buffer
cmds	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_sfml_device::nk_buffer
cmds	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_sfml_device::nk_buffer
cmds	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_x11_device	typeref:struct:nk_x11_device::nk_buffer
cmds	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_x11_device	typeref:struct:nk_x11_device::nk_buffer
cmds	lib/nuklear/example/canvas.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:device::nk_buffer	file:
cmds	lib/nuklear/example/extended.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:device::nk_buffer	file:
cmds	lib/nuklear/example/file_browser.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:device::nk_buffer	file:
cmds	lib/nuklear/example/skinning.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:device::nk_buffer	file:
cmp_func	lib/klib/cpp/kavl.hpp	/^	inline int cmp_func(const T &x, const T &y) {$/;"	f	class:klib::Avl
cnt	src/data.h	/^    int     cnt;         \/\/ members count$/;"	m	struct:cluster_stat_t
code	lib/nuklear/example/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anon148
code_bits	lib/nuklear/example/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anon149
code_buffer	lib/nuklear/example/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anon149
code_buffer	lib/nuklear/example/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anon153
codepoint	lib/nuklear/nuklear.h	/^    nk_rune codepoint;$/;"	m	struct:nk_font_glyph
codepoint	lib/nuklear/src/nuklear.h	/^    nk_rune codepoint;$/;"	m	struct:nk_font_glyph
codepoint_to_utf8	lib/cimgui/generator/json.lua	/^local function codepoint_to_utf8(n)$/;"	f
codes	lib/nuklear/example/stb_image.h	/^   stbi__gif_lzw codes[4096];$/;"	m	struct:__anon159
coeff	lib/nuklear/example/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anon149::__anon150
coeff_h	lib/nuklear/example/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon149::__anon150
coeff_w	lib/nuklear/example/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anon149::__anon150
col	lib/cimgui/cimgui.h	/^    ImU32 col;$/;"	m	struct:ImDrawVert
col	lib/cimgui/generator/output/cimgui.h	/^    ImU32 col;$/;"	m	struct:ImDrawVert
col	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^    ALLEGRO_COLOR col;$/;"	m	struct:ImDrawVertAllegro	file:
col	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^    D3DCOLOR col;$/;"	m	struct:CUSTOMVERTEX	file:
col	lib/cimgui/imgui/imgui.h	/^    ImU32   col;$/;"	m	struct:ImDrawVert
col	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    nk_byte col[4];$/;"	m	struct:nk_d3d11_vertex
col	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    nk_uchar col[4];$/;"	m	struct:nk_d3d9_vertex
col	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex
col	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex
col	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex
col	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_sdl_vertex
col	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_sdl_vertex
col	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    nk_byte col[4];$/;"	m	struct:nk_sdl_vertex
col	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_sfml_vertex
col	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_sfml_vertex
col	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_x11_vertex
col	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_x11_vertex
col	lib/nuklear/example/canvas.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	file:
col	lib/nuklear/example/extended.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	file:
col	lib/nuklear/example/file_browser.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	file:
col	lib/nuklear/example/skinning.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	file:
col	lib/nuklear/nuklear.h	/^    struct nk_color col;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_color
col	lib/nuklear/src/nuklear.h	/^    struct nk_color col;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_color
color	lib/nuklear/demo/node_editor.c	/^    struct nk_color color;$/;"	m	struct:node	typeref:struct:node::nk_color	file:
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command_arc::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command_arc_filled::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command_circle::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command_circle_filled::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command_rect::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command_rect_filled::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_text	typeref:struct:nk_style_text::nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	union:nk_style_item_data	typeref:struct:nk_style_item_data::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command_arc::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command_arc_filled::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command_circle::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command_circle_filled::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command_rect::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command_rect_filled::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_text	typeref:struct:nk_style_text::nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	union:nk_style_item_data	typeref:struct:nk_style_item_data::nk_color
color_table	lib/nuklear/example/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anon159
colors	lib/nuklear/nuklear.h	/^    struct nk_config_stack_color colors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_color
colors	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_color colors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_color
cols	src/data.h	/^    unsigned int cols;    \/\/ number of cols$/;"	m	struct:__anon1
cols	src/obj.h	/^    size_t cols;$/;"	m	struct:obj_t
columns	lib/nuklear/nuklear.h	/^    int columns;$/;"	m	struct:nk_row_layout
columns	lib/nuklear/src/nuklear.h	/^    int columns;$/;"	m	struct:nk_row_layout
columns_window	src/gui.c	/^columns_window() {$/;"	f
combo	lib/nuklear/nuklear.h	/^    struct nk_style_combo combo;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_combo
combo	lib/nuklear/src/nuklear.h	/^    struct nk_style_combo combo;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_combo
combo_border	lib/nuklear/nuklear.h	/^    float combo_border;$/;"	m	struct:nk_style_window
combo_border	lib/nuklear/src/nuklear.h	/^    float combo_border;$/;"	m	struct:nk_style_window
combo_border_color	lib/nuklear/nuklear.h	/^    struct nk_color combo_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
combo_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color combo_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
combo_count	lib/nuklear/nuklear.h	/^    unsigned combo_count;$/;"	m	struct:nk_popup_state
combo_count	lib/nuklear/src/nuklear.h	/^    unsigned combo_count;$/;"	m	struct:nk_popup_state
combo_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 combo_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
combo_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 combo_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
compare	lib/klib/test/ksort_test.cc	/^int compare(const void *a, const void *b)$/;"	f
compare_int	lib/klib/test/ksort_test.cc	/^int compare_int(int a, int b)$/;"	f
compress_level	lib/klib/bgzf.h	/^    int open_mode:8, compress_level:8, errcode:16;$/;"	m	struct:__anon31
compressed_block	lib/klib/bgzf.h	/^    void *uncompressed_block, *compressed_block;$/;"	m	struct:__anon31
compute	lib/klib/test/kthread_test.c	/^static void compute(void *_g, int i, int tid)$/;"	f	file:
computer	lib/nuklear/example/file_browser.c	/^    struct nk_image computer;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
con_count	lib/nuklear/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state
con_count	lib/nuklear/src/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state
con_old	lib/nuklear/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state
con_old	lib/nuklear/src/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state
config	lib/nuklear/nuklear.h	/^    struct nk_convert_config config;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_convert_config
config	lib/nuklear/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_config
config	lib/nuklear/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font_config
config	lib/nuklear/src/nuklear.h	/^    struct nk_convert_config config;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_convert_config
config	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_config
config	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font_config
const	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Buffer *const_buffer;$/;"	m	struct:__anon174
const_iterator	lib/cimgui/imgui/imgui.h	/^    typedef const value_type*   const_iterator;$/;"	t	struct:ImVector
contains	lib/cimgui/imgui/imgui.h	/^    inline bool         contains(const T& v) const          { const T* data = Data;  const T* data_end = Data + Size; while (data < data_end) if (*data++ == v) return true; return false; }$/;"	f	struct:ImVector
content_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 content_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
content_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 content_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
context	lib/nuklear/demo/d3d11/main.c	/^static ID3D11DeviceContext *context;$/;"	v	file:
contextual_border	lib/nuklear/nuklear.h	/^    float contextual_border;$/;"	m	struct:nk_style_window
contextual_border	lib/nuklear/src/nuklear.h	/^    float contextual_border;$/;"	m	struct:nk_style_window
contextual_border_color	lib/nuklear/nuklear.h	/^    struct nk_color contextual_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
contextual_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color contextual_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
contextual_button	lib/nuklear/nuklear.h	/^    struct nk_style_button contextual_button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
contextual_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button contextual_button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
contextual_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 contextual_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
contextual_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 contextual_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
convert	lib/nuklear/example/extended.c	/^    struct nk_image convert;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
convert_color	lib/nuklear/demo/gdi/nuklear_gdi.h	/^convert_color(struct nk_color c)$/;"	f
convert_color	lib/nuklear/demo/gdip/nuklear_gdip.h	/^static ARGB convert_color(struct nk_color c)$/;"	f
coord_type	lib/nuklear/nuklear.h	/^    enum nk_font_coord_type coord_type;$/;"	m	struct:nk_font_config	typeref:enum:nk_font_config::nk_font_coord_type
coord_type	lib/nuklear/src/nuklear.h	/^    enum nk_font_coord_type coord_type;$/;"	m	struct:nk_font_config	typeref:enum:nk_font_config::nk_font_coord_type
copy	lib/nuklear/example/extended.c	/^    struct nk_image copy;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
copy	lib/nuklear/nuklear.h	/^    nk_plugin_copy copy;$/;"	m	struct:nk_clipboard
copy	lib/nuklear/src/nuklear.h	/^    nk_plugin_copy copy;$/;"	m	struct:nk_clipboard
copyfile	lib/cimgui/generator/cpp2ffi.lua	/^local function copyfile(src,dst,blocksize)$/;"	f
copyfile	lib/cimgui/generator/generator_old.lua	/^local function copyfile(src,dst,blocksize)$/;"	f
core_head	lib/klib/kalloc.c	/^	header_t base, *loop_head, *core_head; \/* base is a zero-sized block always kept in the loop *\/$/;"	m	struct:__anon18	file:
count	lib/klib/cpp/khash.hpp	/^	khint_t n_buckets, count, n_occupied, upper_bound;$/;"	m	class:klib::KHash
count	lib/klib/cpp/khashl.hpp	/^	khint_t bits, count;$/;"	m	class:klib::KHashSet
count	lib/nuklear/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
count	lib/nuklear/nuklear.h	/^    int count;$/;"	m	struct:nk_chart_slot
count	lib/nuklear/nuklear.h	/^    unsigned int count;$/;"	m	struct:nk_context
count	lib/nuklear/src/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
count	lib/nuklear/src/nuklear.h	/^    int count;$/;"	m	struct:nk_chart_slot
count	lib/nuklear/src/nuklear.h	/^    unsigned int count;$/;"	m	struct:nk_context
create_d3d9_device	lib/nuklear/demo/d3d9/main.c	/^static void create_d3d9_device(HWND wnd)$/;"	f	file:
create_set	lib/cimgui/generator/json.lua	/^local function create_set(...)$/;"	f
ctrl	lib/nuklear/nuklear.h	/^    struct nk_vec2i ctrl[2];$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
ctrl	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i ctrl[2];$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
ctrl_fd	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s
ctrl_fd	lib/klib/kopen.c	/^	int max_response, ctrl_fd;$/;"	m	struct:__anon34	file:
ctx	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    struct nk_context ctx;$/;"	m	struct:nk_allegro5	typeref:struct:nk_allegro5::nk_context
ctx	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_context ctx;$/;"	m	struct:__anon174	typeref:struct:__anon174::nk_context
ctx	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_context ctx;$/;"	m	struct:__anon173	typeref:struct:__anon173::nk_context
ctx	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    struct nk_context ctx;$/;"	m	struct:__anon176	typeref:struct:__anon176::nk_context
ctx	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    struct nk_context ctx;$/;"	m	struct:__anon189	typeref:struct:__anon189::nk_context
ctx	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_context
ctx	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_context
ctx	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_context
ctx	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_context
ctx	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_context
ctx	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_context
ctx	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml::nk_context
ctx	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml::nk_context
ctx	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct nk_context ctx;$/;"	m	struct:__anon191	typeref:struct:__anon191::nk_context
ctx	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_x11	typeref:struct:nk_x11::nk_context
ctx	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_x11	typeref:struct:nk_x11::nk_context
ctx	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct nk_context ctx;$/;"	m	struct:rawfb_context	typeref:struct:rawfb_context::nk_context
ctx	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    struct nk_context ctx;$/;"	m	struct:__anon175	typeref:struct:__anon175::nk_context
ctx	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    struct nk_context ctx;$/;"	m	struct:__anon190	typeref:struct:__anon190::nk_context
ctx	lib/nuklear/nuklear.h	/^    struct nk_context *ctx;$/;"	m	struct:nk_list_view	typeref:struct:nk_list_view::nk_context
ctx	lib/nuklear/src/nuklear.h	/^    struct nk_context *ctx;$/;"	m	struct:nk_list_view	typeref:struct:nk_list_view::nk_context
ctx	src/gui.c	/^struct ImGuiContext* ctx;$/;"	v	typeref:struct:ImGuiContext
curFontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    INT curFontCollection;$/;"	m	struct:__anon189
cur_arg	lib/nuklear/src/build.py	/^cur_arg = 1$/;"	v
cur_x	lib/nuklear/example/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon159
cur_y	lib/nuklear/example/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anon159
curl	lib/klib/kurl.c	/^	CURL *curl;   \/\/ cURL easy handle$/;"	m	struct:kurl_t	file:
current	lib/nuklear/nuklear.h	/^    struct nk_window *current;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
current	lib/nuklear/src/nuklear.h	/^    struct nk_window *current;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
cursor	lib/cimgui/imgui/imstb_textedit.h	/^   int cursor;$/;"	m	struct:__anon109
cursor	lib/cimgui/imgui/imstb_truetype.h	/^   int cursor;$/;"	m	struct:__anon113
cursor	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Cursor cursor;$/;"	m	struct:__anon191
cursor	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    Cursor cursor;$/;"	m	struct:nk_x11
cursor	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    Cursor cursor;$/;"	m	struct:nk_x11
cursor	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    Cursor cursor;$/;"	m	struct:__anon175
cursor	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Cursor cursor;$/;"	m	struct:__anon190
cursor	lib/nuklear/nuklear.h	/^    int cursor;$/;"	m	struct:nk_edit_state
cursor	lib/nuklear/nuklear.h	/^    int cursor;$/;"	m	struct:nk_property_state
cursor	lib/nuklear/nuklear.h	/^    int cursor;$/;"	m	struct:nk_text_edit
cursor	lib/nuklear/src/nuklear.h	/^    int cursor;$/;"	m	struct:nk_edit_state
cursor	lib/nuklear/src/nuklear.h	/^    int cursor;$/;"	m	struct:nk_property_state
cursor	lib/nuklear/src/nuklear.h	/^    int cursor;$/;"	m	struct:nk_text_edit
cursor_active	lib/nuklear/nuklear.h	/^    const struct nk_cursor *cursor_active;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursor_active	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_active	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_active	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_active	lib/nuklear/src/nuklear.h	/^    const struct nk_cursor *cursor_active;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursor_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_at_end_of_line	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char cursor_at_end_of_line; \/\/ not implemented yet$/;"	m	struct:__anon109
cursor_at_end_of_line	lib/nuklear/nuklear.h	/^    unsigned char cursor_at_end_of_line;$/;"	m	struct:nk_text_edit
cursor_at_end_of_line	lib/nuklear/src/nuklear.h	/^    unsigned char cursor_at_end_of_line;$/;"	m	struct:nk_text_edit
cursor_border	lib/nuklear/nuklear.h	/^    float cursor_border;$/;"	m	struct:nk_style_progress
cursor_border	lib/nuklear/src/nuklear.h	/^    float cursor_border;$/;"	m	struct:nk_style_progress
cursor_border_color	lib/nuklear/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_color
cursor_border_color	lib/nuklear/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_color
cursor_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_color
cursor_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_color
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_color cursor_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
cursor_last	lib/nuklear/nuklear.h	/^    struct nk_cursor *cursor_last;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursor_last	lib/nuklear/src/nuklear.h	/^    struct nk_cursor *cursor_last;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_color cursor_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
cursor_position_callback	src/interactive.c	/^cursor_position_callback($/;"	f	file:
cursor_rounding	lib/nuklear/nuklear.h	/^    float cursor_rounding;$/;"	m	struct:nk_style_progress
cursor_rounding	lib/nuklear/src/nuklear.h	/^    float cursor_rounding;$/;"	m	struct:nk_style_progress
cursor_size	lib/nuklear/nuklear.h	/^    float cursor_size;$/;"	m	struct:nk_style_edit
cursor_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 cursor_size;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
cursor_size	lib/nuklear/src/nuklear.h	/^    float cursor_size;$/;"	m	struct:nk_style_edit
cursor_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 cursor_size;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
cursor_text_hover	lib/nuklear/nuklear.h	/^    struct nk_color cursor_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_text_normal	lib/nuklear/nuklear.h	/^    struct nk_color cursor_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
cursor_visible	lib/nuklear/nuklear.h	/^    int cursor_visible;$/;"	m	struct:nk_style
cursor_visible	lib/nuklear/src/nuklear.h	/^    int cursor_visible;$/;"	m	struct:nk_style
cursors	lib/nuklear/nuklear.h	/^    const struct nk_cursor *cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursors	lib/nuklear/nuklear.h	/^    struct nk_cursor cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_cursor
cursors	lib/nuklear/src/nuklear.h	/^    const struct nk_cursor *cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_cursor
cursors	lib/nuklear/src/nuklear.h	/^    struct nk_cursor cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_cursor
curve_segment_count	lib/nuklear/nuklear.h	/^    unsigned curve_segment_count; \/* number of segments used for curves: default to 22 *\/$/;"	m	struct:nk_convert_config
curve_segment_count	lib/nuklear/src/nuklear.h	/^    unsigned curve_segment_count; \/* number of segments used for curves: default to 22 *\/$/;"	m	struct:nk_convert_config
custom	lib/nuklear/nuklear.h	/^    struct nk_recti custom;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_recti
custom	lib/nuklear/src/nuklear.h	/^    struct nk_recti custom;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_recti
cv	lib/klib/kthread.c	/^	pthread_cond_t cv;$/;"	m	struct:ktp_t	file:
cv_m	lib/klib/kthread.c	/^	pthread_cond_t cv_m, cv_s;$/;"	m	struct:kt_forpool_t	file:
cv_s	lib/klib/kthread.c	/^	pthread_cond_t cv_m, cv_s;$/;"	m	struct:kt_forpool_t	file:
cx	lib/cimgui/imgui/imstb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon119
cx	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc
cx	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled
cx	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
cx	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc
cx	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled
cx	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	file:
cx1	lib/cimgui/imgui/imstb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon119
cy	lib/cimgui/imgui/imstb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon119
cy	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc
cy	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled
cy	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
cy	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc
cy	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled
cy	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	file:
cy1	lib/cimgui/imgui/imstb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon119
d	lib/klib/knhx.h	/^	double d;$/;"	m	struct:__anon33
d	lib/nuklear/nuklear.h	/^    double d;$/;"	m	union:nk_property
d	lib/nuklear/src/nuklear_internal.h	/^    double d;$/;"	m	union:nk_property
d3d11	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^} d3d11;$/;"	v	typeref:struct:__anon174
d3d9	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^} d3d9;$/;"	v	typeref:struct:__anon173
data	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned char  * data;              \/\/ pointer to .ttf file$/;"	m	struct:stbtt_fontinfo
data	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned char *data;$/;"	m	struct:__anon113
data	lib/klib/cpp/kavl.hpp	/^		T data;$/;"	m	struct:klib::Avl::Node
data	lib/klib/kthread.c	/^	void *data;$/;"	m	struct:__anon38	file:
data	lib/klib/kthread.c	/^	void *data;$/;"	m	struct:kt_for_t	file:
data	lib/klib/kthread.c	/^	void *data;$/;"	m	struct:kt_forpool_t	file:
data	lib/nuklear/example/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anon149::__anon150
data	lib/nuklear/nuklear.h	/^    const unsigned char* data; \/* pointer to .ttf file *\/$/;"	m	struct:nk_tt_fontinfo
data	lib/nuklear/nuklear.h	/^    union nk_page_data data;$/;"	m	struct:nk_page_element	typeref:union:nk_page_element::nk_page_data
data	lib/nuklear/nuklear.h	/^    union nk_style_item_data data;$/;"	m	struct:nk_style_item	typeref:union:nk_style_item::nk_style_item_data
data	lib/nuklear/src/nuklear.h	/^    union nk_page_data data;$/;"	m	struct:nk_page_element	typeref:union:nk_page_element::nk_page_data
data	lib/nuklear/src/nuklear.h	/^    union nk_style_item_data data;$/;"	m	struct:nk_style_item	typeref:union:nk_style_item::nk_style_item_data
data	lib/nuklear/src/nuklear_font.c	/^    const unsigned char* data; \/* pointer to .ttf file *\/$/;"	m	struct:nk_tt_fontinfo	file:
data	src/data.h	/^    float* data;          \/\/ data$/;"	m	struct:__anon1
data	src/main.c	/^data_p data;$/;"	v
data	src/obj.c	/^data_p data;$/;"	v
data_free	src/data.c	/^void data_free(data_t* data) {$/;"	f
data_load	src/data.c	/^data_load(char* filename) {$/;"	f
data_p	src/data.h	/^typedef data_t* data_p;$/;"	t
data_size	lib/klib/test/kbtree_test.c	/^static int data_size = 5000000;$/;"	v	file:
data_size	lib/klib/test/khash_test.c	/^static int data_size = 5000000;$/;"	v	file:
data_t	src/data.h	/^} data_t;$/;"	t	typeref:struct:__anon1
date	lib/klib/kurl.c	/^	char *url, *date, *auth;$/;"	m	struct:__anon25	file:
dc	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HDC dc;$/;"	m	struct:GdiFont
dc_pred	lib/nuklear/example/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anon149::__anon150
dct_bfly32o	lib/nuklear/example/stb_image.h	2067;"	d
dct_bfly32o	lib/nuklear/example/stb_image.h	2201;"	d
dct_bfly32o	lib/nuklear/example/stb_image.h	2253;"	d
dct_bfly32o	lib/nuklear/example/stb_image.h	2411;"	d
dct_const	lib/nuklear/example/stb_image.h	2039;"	d
dct_const	lib/nuklear/example/stb_image.h	2196;"	d
dct_interleave16	lib/nuklear/example/stb_image.h	2084;"	d
dct_interleave16	lib/nuklear/example/stb_image.h	2203;"	d
dct_interleave8	lib/nuklear/example/stb_image.h	2078;"	d
dct_interleave8	lib/nuklear/example/stb_image.h	2202;"	d
dct_long_mac	lib/nuklear/example/stb_image.h	2234;"	d
dct_long_mac	lib/nuklear/example/stb_image.h	2407;"	d
dct_long_mul	lib/nuklear/example/stb_image.h	2230;"	d
dct_long_mul	lib/nuklear/example/stb_image.h	2406;"	d
dct_pass	lib/nuklear/example/stb_image.h	2089;"	d
dct_pass	lib/nuklear/example/stb_image.h	2204;"	d
dct_pass	lib/nuklear/example/stb_image.h	2261;"	d
dct_pass	lib/nuklear/example/stb_image.h	2412;"	d
dct_rot	lib/nuklear/example/stb_image.h	2043;"	d
dct_rot	lib/nuklear/example/stb_image.h	2197;"	d
dct_trn16	lib/nuklear/example/stb_image.h	2321;"	d
dct_trn16	lib/nuklear/example/stb_image.h	2343;"	d
dct_trn32	lib/nuklear/example/stb_image.h	2322;"	d
dct_trn32	lib/nuklear/example/stb_image.h	2344;"	d
dct_trn64	lib/nuklear/example/stb_image.h	2323;"	d
dct_trn64	lib/nuklear/example/stb_image.h	2345;"	d
dct_trn8_16	lib/nuklear/example/stb_image.h	2367;"	d
dct_trn8_16	lib/nuklear/example/stb_image.h	2402;"	d
dct_trn8_32	lib/nuklear/example/stb_image.h	2368;"	d
dct_trn8_32	lib/nuklear/example/stb_image.h	2403;"	d
dct_trn8_8	lib/nuklear/example/stb_image.h	2366;"	d
dct_trn8_8	lib/nuklear/example/stb_image.h	2401;"	d
dct_wadd	lib/nuklear/example/stb_image.h	2057;"	d
dct_wadd	lib/nuklear/example/stb_image.h	2199;"	d
dct_wadd	lib/nuklear/example/stb_image.h	2243;"	d
dct_wadd	lib/nuklear/example/stb_image.h	2409;"	d
dct_widen	lib/nuklear/example/stb_image.h	2052;"	d
dct_widen	lib/nuklear/example/stb_image.h	2198;"	d
dct_widen	lib/nuklear/example/stb_image.h	2238;"	d
dct_widen	lib/nuklear/example/stb_image.h	2408;"	d
dct_wsub	lib/nuklear/example/stb_image.h	2062;"	d
dct_wsub	lib/nuklear/example/stb_image.h	2200;"	d
dct_wsub	lib/nuklear/example/stb_image.h	2248;"	d
dct_wsub	lib/nuklear/example/stb_image.h	2410;"	d
debug_report	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VKAPI_ATTR VkBool32 VKAPI_CALL debug_report(VkDebugReportFlagsEXT flags, VkDebugReportObjectTypeEXT objectType, uint64_t object, size_t location, int32_t messageCode, const char* pLayerPrefix, const char* pMessage, void* pUserData)$/;"	f	file:
debug_report	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VKAPI_ATTR VkBool32 VKAPI_CALL debug_report(VkDebugReportFlagsEXT flags, VkDebugReportObjectTypeEXT objectType, uint64_t object, size_t location, int32_t messageCode, const char* pLayerPrefix, const char* pMessage, void* pUserData)$/;"	f	file:
dec_button	lib/nuklear/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_button
dec_button	lib/nuklear/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_button
dec_button	lib/nuklear/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_button
dec_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_button
dec_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_button
dec_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_button
dec_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_style_scrollbar::nk_symbol_type
dec_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_style_slider::nk_symbol_type
dec_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_style_scrollbar::nk_symbol_type
dec_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_style_slider::nk_symbol_type
decode_error	lib/cimgui/generator/json.lua	/^local function decode_error(str, idx, msg)$/;"	f
default_file	lib/nuklear/example/file_browser.c	/^    struct nk_image default_file;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
default_font	lib/nuklear/nuklear.h	/^    struct nk_font *default_font;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font
default_font	lib/nuklear/src/nuklear.h	/^    struct nk_font *default_font;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font
deflate_block	lib/klib/bgzf.c	/^static int deflate_block(BGZF *fp, int block_length)$/;"	f	file:
del	lib/klib/cpp/khash.hpp	/^	void del(khint_t x) {$/;"	f	class:klib::KHash
del	lib/klib/cpp/khashl.hpp	/^	int del(khint_t i) {$/;"	f	class:klib::KHashSet
del	lib/nuklear/example/extended.c	/^    struct nk_image del;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
delay	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon159
delete_length	lib/cimgui/imgui/imstb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  delete_length;$/;"	m	struct:__anon107
delete_length	lib/nuklear/nuklear.h	/^   short delete_length;$/;"	m	struct:nk_text_undo_record
delete_length	lib/nuklear/src/nuklear.h	/^   short delete_length;$/;"	m	struct:nk_text_undo_record
delta	lib/nuklear/example/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anon148
delta	lib/nuklear/nuklear.h	/^    struct nk_vec2 delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
delta	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
delta_time_seconds	lib/nuklear/nuklear.h	/^    float delta_time_seconds;$/;"	m	struct:nk_context
delta_time_seconds	lib/nuklear/src/nuklear.h	/^    float delta_time_seconds;$/;"	m	struct:nk_context
depth	lib/klib/ksort.h	/^	int depth;$/;"	m	struct:__anon32
dequant	lib/nuklear/example/stb_image.h	/^   stbi_uc dequant[4][64];$/;"	m	struct:__anon149
descent	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int descent;$/;"	m	struct:XFont
descent	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    int descent;$/;"	m	struct:XFont
descent	lib/nuklear/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font
descent	lib/nuklear/src/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font
desktop	lib/nuklear/example/file_browser.c	/^    char desktop[MAX_PATH_LEN];$/;"	m	struct:file_browser	file:
desktop	lib/nuklear/example/file_browser.c	/^    struct nk_image desktop;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
destroy	lib/klib/cpp/kavl.hpp	/^	void destroy(Node *r) {$/;"	f	class:klib::Avl
device	lib/nuklear/demo/d3d11/main.c	/^static ID3D11Device *device;$/;"	v	file:
device	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Device *device;$/;"	m	struct:__anon174
device	lib/nuklear/demo/d3d9/main.c	/^static IDirect3DDevice9 *device;$/;"	v	file:
device	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    IDirect3DDevice9 *device;$/;"	m	struct:__anon173
device	lib/nuklear/example/canvas.c	/^struct device {$/;"	s	file:
device	lib/nuklear/example/extended.c	/^struct device {$/;"	s	file:
device	lib/nuklear/example/file_browser.c	/^struct device {$/;"	s	file:
device	lib/nuklear/example/skinning.c	/^struct device {$/;"	s	file:
deviceEx	lib/nuklear/demo/d3d9/main.c	/^static IDirect3DDevice9Ex *deviceEx;$/;"	v	file:
device_draw	lib/nuklear/example/canvas.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	file:
device_draw	lib/nuklear/example/extended.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	file:
device_draw	lib/nuklear/example/file_browser.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	file:
device_draw	lib/nuklear/example/skinning.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	file:
device_init	lib/nuklear/example/canvas.c	/^device_init(struct device *dev)$/;"	f	file:
device_init	lib/nuklear/example/extended.c	/^device_init(struct device *dev)$/;"	f	file:
device_init	lib/nuklear/example/file_browser.c	/^device_init(struct device *dev)$/;"	f	file:
device_init	lib/nuklear/example/skinning.c	/^device_init(struct device *dev)$/;"	f	file:
device_shutdown	lib/nuklear/example/canvas.c	/^device_shutdown(struct device *dev)$/;"	f	file:
device_shutdown	lib/nuklear/example/extended.c	/^device_shutdown(struct device *dev)$/;"	f	file:
device_shutdown	lib/nuklear/example/file_browser.c	/^device_shutdown(struct device *dev)$/;"	f	file:
device_shutdown	lib/nuklear/example/skinning.c	/^device_shutdown(struct device *dev)$/;"	f	file:
device_upload_atlas	lib/nuklear/example/canvas.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	file:
device_upload_atlas	lib/nuklear/example/extended.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	file:
device_upload_atlas	lib/nuklear/example/file_browser.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	file:
device_upload_atlas	lib/nuklear/example/skinning.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	file:
die	lib/nuklear/demo/x11/main.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/demo/x11_opengl2/main.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/demo/x11_opengl3/main.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/demo/x11_rawfb/main.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/demo/x11_xft/main.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/example/canvas.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/example/extended.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/example/file_browser.c	/^die(const char *fmt, ...)$/;"	f	file:
die	lib/nuklear/example/skinning.c	/^die(const char *fmt, ...)$/;"	f	file:
diff	lib/nuklear/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon135
diff	lib/nuklear/src/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon164
dir	lib/nuklear/example/extended.c	/^    struct nk_image dir;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
dir_count	lib/nuklear/example/file_browser.c	/^    size_t dir_count;$/;"	m	struct:file_browser	file:
dir_free_list	lib/nuklear/example/file_browser.c	/^dir_free_list(char **list, size_t size)$/;"	f	file:
dir_list	lib/nuklear/example/file_browser.c	/^dir_list(const char *dir, int return_subdirs, size_t *count)$/;"	f	file:
direction	lib/cimgui/imgui/imstb_truetype.h	/^   float direction;$/;"	m	struct:stbtt__active_edge
direction	lib/cimgui/imgui/imstb_truetype.h	/^   int direction;$/;"	m	struct:stbtt__active_edge
direction	lib/nuklear/nuklear.h	/^    float direction;$/;"	m	struct:nk_tt__active_edge
direction	lib/nuklear/src/nuklear_font.c	/^    float direction;$/;"	m	struct:nk_tt__active_edge	file:
directories	lib/nuklear/example/file_browser.c	/^    char **directories;$/;"	m	struct:file_browser	file:
directory	lib/nuklear/example/file_browser.c	/^    char directory[MAX_PATH_LEN];$/;"	m	struct:file_browser	file:
directory	lib/nuklear/example/file_browser.c	/^    struct nk_image directory;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
display_height	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
display_height	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
display_height	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
display_width	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
display_width	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
display_width	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw
done_reading	lib/klib/kurl.c	/^	int done_reading; \/\/ true if we can read nothing from the file; buffer may not be empty even if done_reading is set$/;"	m	struct:kurl_t	file:
double_click_pos	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_vec2 double_click_pos;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
double_click_pos	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_vec2 double_click_pos;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
double_click_pos	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_vec2 double_click_pos;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
down	lib/nuklear/nuklear.h	/^    int down;$/;"	m	struct:nk_key
down	lib/nuklear/nuklear.h	/^    int down;$/;"	m	struct:nk_mouse_button
down	lib/nuklear/src/nuklear.h	/^    int down;$/;"	m	struct:nk_key
down	lib/nuklear/src/nuklear.h	/^    int down;$/;"	m	struct:nk_mouse_button
dpy	lib/nuklear/demo/x11/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	file:
dpy	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:XSurface
dpy	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:__anon191
dpy	lib/nuklear/demo/x11_opengl2/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	file:
dpy	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    Display *dpy;$/;"	m	struct:nk_x11
dpy	lib/nuklear/demo/x11_opengl3/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	file:
dpy	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    Display *dpy;$/;"	m	struct:nk_x11
dpy	lib/nuklear/demo/x11_rawfb/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	file:
dpy	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:__anon175
dpy	lib/nuklear/demo/x11_xft/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	file:
dpy	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:XSurface
dpy	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:__anon190
draging	src/interactive.c	/^char draging = 0;$/;"	v
draging	src/interactive.h	/^char draging;$/;"	v
draw_axis	src/gui.c	/^draw_axis(scene_t* scene) {$/;"	f
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle
draw_list	lib/nuklear/nuklear.h	/^    struct nk_draw_list draw_list;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_draw_list
draw_list	lib/nuklear/src/nuklear.h	/^    struct nk_draw_list draw_list;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_draw_list
draw_markers	src/gui.c	/^draw_markers(scene_t* scene) {$/;"	f
drawable	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Drawable drawable;$/;"	m	struct:XSurface
drawable	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Drawable drawable;$/;"	m	struct:XSurface
dsp	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    ALLEGRO_DISPLAY *dsp;$/;"	m	struct:nk_allegro5
dx	lib/cimgui/imgui/imstb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge
e	lib/cimgui/cimgui.h	/^        const char* e;$/;"	m	struct:ImGuiTextRange
e	lib/cimgui/generator/output/cimgui.h	/^        const char* e;$/;"	m	struct:ImGuiTextRange
e	lib/cimgui/imgui/imgui.h	/^        const char*     e;$/;"	m	struct:ImGuiTextFilter::ImGuiTextRange
e	lib/klib/kexpr.c	/^	ke1_t *e;$/;"	m	struct:kexpr_s	file:
e	lib/klib/khmm.h	/^	FLOAT **a, **e; \/\/ transition matrix and emitting probilities$/;"	m	struct:__anon20
e	lib/klib/ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon3	file:
e	lib/klib/test/ksort_test.cc	/^	rstype_t *b, *e;$/;"	m	struct:__anon16	file:
ebo	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device
ebo	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device
ebo	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sdl_device
ebo	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint vbo, ebo;$/;"	m	struct:nk_sdl_device
ebo	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sfml_device
ebo	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_x11_device
ebo	lib/nuklear/example/canvas.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
ebo	lib/nuklear/example/extended.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
ebo	lib/nuklear/example/file_browser.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
ebo	lib/nuklear/example/skinning.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
edit	lib/nuklear/example/extended.c	/^    struct nk_image edit;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
edit	lib/nuklear/nuklear.h	/^    struct nk_edit_state edit;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_edit_state
edit	lib/nuklear/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_edit
edit	lib/nuklear/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_edit
edit	lib/nuklear/src/nuklear.h	/^    struct nk_edit_state edit;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_edit_state
edit	lib/nuklear/src/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_edit
edit	lib/nuklear/src/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_edit
eflags	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon159
eh_t	lib/klib/ksw.c	/^} eh_t;$/;"	t	typeref:struct:__anon3	file:
elem_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int *elem_buffer;$/;"	m	struct:nk_glfw_device
elem_count	lib/nuklear/nuklear.h	/^    unsigned int elem_count;$/;"	m	struct:nk_draw_command
elem_count	lib/nuklear/src/nuklear.h	/^    unsigned int elem_count;$/;"	m	struct:nk_draw_command
element_count	lib/nuklear/nuklear.h	/^    unsigned int element_count;$/;"	m	struct:nk_draw_list
element_count	lib/nuklear/src/nuklear.h	/^    unsigned int element_count;$/;"	m	struct:nk_draw_list
elements	lib/nuklear/nuklear.h	/^    struct nk_buffer *elements;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
elements	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *elements;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
empty	lib/cimgui/imgui/imgui.h	/^        bool            empty() const                   { return b == e; }$/;"	f	struct:ImGuiTextFilter::ImGuiTextRange
empty	lib/cimgui/imgui/imgui.h	/^    bool                empty() const           { return Buf.Size <= 1; }$/;"	f	struct:ImGuiTextBuffer
empty	lib/cimgui/imgui/imgui.h	/^    inline bool         empty() const                       { return Size == 0; }$/;"	f	struct:ImVector
empty	lib/cimgui/imgui/imgui_internal.h	/^    bool    empty() const               { return Buf.Size == 0; }$/;"	f	struct:ImChunkStream
encode 	lib/cimgui/generator/json.lua	/^encode = function(val, stack,level,isvalue)$/;"	f
encode_nil	lib/cimgui/generator/json.lua	/^local function encode_nil(val)$/;"	f
encode_number	lib/cimgui/generator/json.lua	/^local function encode_number(val,stack,level,isvalue)$/;"	f
encode_string	lib/cimgui/generator/json.lua	/^local function encode_string(val,stack,level,isvalue)$/;"	f
encode_table	lib/cimgui/generator/json.lua	/^local function encode_table(val, stack,level,isvalue)$/;"	f
end	lib/cimgui/imgui/imgui.h	/^    const char*         end() const             { return Buf.Data ? &Buf.back() : EmptyString; }   \/\/ Buf is zero-terminated, so end() will point on the zero-terminator$/;"	f	struct:ImGuiTextBuffer
end	lib/cimgui/imgui/imgui.h	/^    inline T*           end()                               { return Data + Size; }$/;"	f	struct:ImVector
end	lib/cimgui/imgui/imgui.h	/^    inline const T*     end() const                         { return Data + Size; }$/;"	f	struct:ImVector
end	lib/cimgui/imgui/imgui_internal.h	/^    T*      end()                       { return (T*)(void*)(Buf.Data + Buf.Size); }$/;"	f	struct:ImChunkStream
end	lib/klib/cpp/khash.hpp	/^	khint_t end(void) const { return n_buckets; };$/;"	f	class:klib::KHash
end	lib/klib/cpp/khashl.hpp	/^	inline khint_t end() const { return n_buckets(); }$/;"	f	class:klib::KHashSet
end	lib/nuklear/demo/node_editor.c	/^    struct node *end;$/;"	m	struct:node_editor	typeref:struct:node_editor::node	file:
end	lib/nuklear/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
end	lib/nuklear/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
end	lib/nuklear/nuklear.h	/^    nk_size end;$/;"	m	struct:nk_popup_buffer
end	lib/nuklear/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
end	lib/nuklear/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_vec2i
end	lib/nuklear/nuklear.h	/^    struct nk_window *end;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
end	lib/nuklear/src/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view
end	lib/nuklear/src/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
end	lib/nuklear/src/nuklear.h	/^    nk_size end;$/;"	m	struct:nk_popup_buffer
end	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_vec2i
end	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_vec2i
end	lib/nuklear/src/nuklear.h	/^    struct nk_window *end;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_window
end_offset	lib/klib/bgzf.c	/^	int64_t end_offset;$/;"	m	struct:__anon40	file:
eob_run	lib/nuklear/example/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anon149
eof	lib/nuklear/example/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end of file\/data$/;"	m	struct:__anon145
equal	lib/cimgui/imgui/imstb_truetype.h	/^static int equal(float *a, float *b)$/;"	f
erase	lib/cimgui/imgui/imgui.h	/^    inline T*           erase(const T* it)                  { IM_ASSERT(it >= Data && it < Data+Size); const ptrdiff_t off = it - Data; memmove(Data + off, Data + off + 1, ((size_t)Size - (size_t)off - 1) * sizeof(T)); Size--; return Data + off; }$/;"	f	struct:ImVector
erase	lib/cimgui/imgui/imgui.h	/^    inline T*           erase(const T* it, const T* it_last){ IM_ASSERT(it >= Data && it < Data+Size && it_last > it && it_last <= Data+Size); const ptrdiff_t count = it_last - it; const ptrdiff_t off = it - Data; memmove(Data + off, Data + off + count, ((size_t)Size - (size_t)off - count) * sizeof(T)); Size -= (int)count; return Data + off; }$/;"	f	struct:ImVector
erase	lib/klib/cpp/kavl.hpp	/^	bool erase(const T &data) {$/;"	f	class:klib::Avl
erase_unsorted	lib/cimgui/imgui/imgui.h	/^    inline T*           erase_unsorted(const T* it)         { IM_ASSERT(it >= Data && it < Data+Size);  const ptrdiff_t off = it - Data; if (it < Data+Size-1) memcpy(Data + off, Data + Size - 1, sizeof(T)); Size--; return Data + off; }$/;"	f	struct:ImVector
err	lib/klib/kurl.c	/^	int err;      \/\/ error code$/;"	m	struct:kurl_t	file:
errcode	lib/klib/bgzf.h	/^    int open_mode:8, compress_level:8, errcode:16;$/;"	m	struct:__anon31
error	lib/klib/knhx.c	/^	int error, n, max;$/;"	m	struct:__anon41	file:
error_callback	lib/nuklear/demo/allegro5/main.c	/^static void error_callback(int e, const char *d)$/;"	f	file:
error_callback	lib/nuklear/demo/glfw_opengl2/main.c	/^static void error_callback(int e, const char *d)$/;"	f	file:
error_callback	lib/nuklear/demo/glfw_opengl3/main.c	/^static void error_callback(int e, const char *d)$/;"	f	file:
error_callback	lib/nuklear/demo/glfw_opengl4/main.c	/^static void error_callback(int e, const char *d)$/;"	f	file:
error_callback	lib/nuklear/example/canvas.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	file:
error_callback	lib/nuklear/example/extended.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	file:
error_callback	lib/nuklear/example/file_browser.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	file:
error_callback	lib/nuklear/example/skinning.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	file:
error_callback	src/bbgl.c	/^static void error_callback(int e, const char *d)$/;"	f	file:
escape_char	lib/cimgui/generator/json.lua	/^local function escape_char(c)$/;"	f
exist	lib/klib/cpp/khash.hpp	/^	void exist(khint_t x) const { return !__ac_iseither(flags, x); };$/;"	f	class:klib::KHash
expanded	lib/nuklear/example/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon155
extensions_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *extensions_str;$/;"	m	struct:opengl_info
extra	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_node extra[2]; \/\/ we allocate two extra nodes so optimal user-node-count is 'width' not 'width+2'$/;"	m	struct:stbrp_context
extra	lib/nuklear/nuklear.h	/^    struct nk_rp_node extra[2];$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node
extra	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node extra[2];$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node	file:
ey	lib/cimgui/imgui/imstb_truetype.h	/^   float ey;$/;"	m	struct:stbtt__active_edge
ey	lib/nuklear/nuklear.h	/^    float ey;$/;"	m	struct:nk_tt__active_edge
ey	lib/nuklear/src/nuklear_font.c	/^    float ey;$/;"	m	struct:nk_tt__active_edge	file:
f	lib/klib/kexpr.c	/^	} f;$/;"	m	struct:ke1_s	typeref:union:ke1_s::__anon24	file:
f	lib/klib/khmm.h	/^	FLOAT **f, **b, *s;$/;"	m	struct:__anon21
f	lib/nuklear/nuklear.h	/^    float f;$/;"	m	union:nk_property
f	lib/nuklear/src/nuklear_internal.h	/^    float f;$/;"	m	union:nk_property
f	src/scene.h	/^    float n,f; \/\/ near far$/;"	m	struct:scene_t
f_Chebyquad	lib/klib/test/kmin_test.c	/^double f_Chebyquad(int n, double *x, void *data)$/;"	f
faidxsub	lib/klib/lua/bio.lua	/^local function faidxsub(fn)$/;"	f
fallback	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    char fallback;$/;"	m	struct:__anon175
fallback	lib/nuklear/nuklear.h	/^    const struct nk_font_glyph *fallback;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_glyph
fallback	lib/nuklear/src/nuklear.h	/^    const struct nk_font_glyph *fallback;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_glyph
fallback_codepoint	lib/nuklear/nuklear.h	/^    nk_rune fallback_codepoint;$/;"	m	struct:nk_font
fallback_codepoint	lib/nuklear/src/nuklear.h	/^    nk_rune fallback_codepoint;$/;"	m	struct:nk_font
fallback_glyph	lib/nuklear/nuklear.h	/^    nk_rune fallback_glyph;$/;"	m	struct:nk_font_config
fallback_glyph	lib/nuklear/src/nuklear.h	/^    nk_rune fallback_glyph;$/;"	m	struct:nk_font_config
fast	lib/nuklear/example/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anon152
fast	lib/nuklear/example/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anon148
fast_ac	lib/nuklear/example/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anon149
fb	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct rawfb_image fb;$/;"	m	struct:rawfb_context	typeref:struct:rawfb_context::rawfb_image
fb_scale	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
fb_scale	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
fb_scale	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
fbc	lib/nuklear/demo/x11_opengl2/main.c	/^    GLXFBConfig fbc;$/;"	m	struct:XWindow	file:
fbc	lib/nuklear/demo/x11_opengl3/main.c	/^    GLXFBConfig fbc;$/;"	m	struct:XWindow	file:
fd	lib/klib/knetfile.h	/^	int type, fd;$/;"	m	struct:knetFile_s
fd	lib/klib/kopen.c	/^	int type, fd;$/;"	m	struct:__anon35	file:
fd	lib/klib/kurl.c	/^	int fd;       \/\/ file descriptor for a normal file; <0 for a remote file$/;"	m	struct:kurl_t	file:
fdselect	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt__buf fdselect;               \/\/ map from glyph to fontdict$/;"	m	struct:stbtt_fontinfo
fdx	lib/cimgui/imgui/imstb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge
fdx	lib/nuklear/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge
fdx	lib/nuklear/src/nuklear_font.c	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	file:
fdy	lib/cimgui/imgui/imstb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge
fdy	lib/nuklear/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge
fdy	lib/nuklear/src/nuklear_font.c	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	file:
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
file	lib/nuklear/example/file_browser.c	/^    char file[MAX_PATH_LEN];$/;"	m	struct:file_browser	file:
file	lib/nuklear/example/file_browser.c	/^struct file {$/;"	s	file:
file_browser	lib/nuklear/example/file_browser.c	/^struct file_browser {$/;"	s	file:
file_browser_free	lib/nuklear/example/file_browser.c	/^file_browser_free(struct file_browser *browser)$/;"	f	file:
file_browser_init	lib/nuklear/example/file_browser.c	/^file_browser_init(struct file_browser *browser, struct media *media)$/;"	f	file:
file_browser_reload_directory_content	lib/nuklear/example/file_browser.c	/^file_browser_reload_directory_content(struct file_browser *browser, const char *path)$/;"	f	file:
file_browser_run	lib/nuklear/example/file_browser.c	/^file_browser_run(struct file_browser *browser, struct nk_context *ctx)$/;"	f	file:
file_count	lib/nuklear/example/file_browser.c	/^    size_t file_count;$/;"	m	struct:file_browser	file:
file_group	lib/nuklear/example/file_browser.c	/^struct file_group {$/;"	s	file:
file_groups	lib/nuklear/example/file_browser.c	/^enum file_groups {$/;"	g	file:
file_load	lib/nuklear/example/file_browser.c	/^file_load(const char* path, size_t* siz)$/;"	f	file:
file_size	lib/klib/knetfile.h	/^    int64_t file_size;$/;"	m	struct:knetFile_s
file_types	lib/nuklear/example/file_browser.c	/^enum file_types {$/;"	g	file:
filelines	lib/cimgui/generator/generator.lua	/^local function filelines(file,locats)$/;"	f
filelines	lib/cimgui/generator/generator_old.lua	/^local function filelines(file,locats)$/;"	f
files	lib/nuklear/example/file_browser.c	/^    char **files;$/;"	m	struct:file_browser	file:
files	lib/nuklear/example/file_browser.c	/^    struct file files[FILE_MAX];$/;"	m	struct:media	typeref:struct:media::file	file:
fill_buffer	lib/klib/kurl.c	/^static int fill_buffer(kurl_t *ku) \/\/ fill the buffer$/;"	f	file:
filled	lib/nuklear/nuklear.h	/^    float filled;$/;"	m	struct:nk_row_layout
filled	lib/nuklear/src/nuklear.h	/^    float filled;$/;"	m	struct:nk_row_layout
filter	lib/nuklear/nuklear.h	/^    nk_plugin_filter filter;$/;"	m	struct:nk_text_edit
filter	lib/nuklear/src/nuklear.h	/^    nk_plugin_filter filter;$/;"	m	struct:nk_text_edit
find	lib/cimgui/imgui/imgui.h	/^    inline T*           find(const T& v)                    { T* data = Data;  const T* data_end = Data + Size; while (data < data_end) if (*data == v) break; else ++data; return data; }$/;"	f	struct:ImVector
find	lib/cimgui/imgui/imgui.h	/^    inline const T*     find(const T& v) const              { const T* data = Data;  const T* data_end = Data + Size; while (data < data_end) if (*data == v) break; else ++data; return data; }$/;"	f	struct:ImVector
find	lib/klib/cpp/kavl.hpp	/^	T *find(const T &data, unsigned *cnt_ = NULL) {$/;"	f	class:klib::Avl
find_erase	lib/cimgui/imgui/imgui.h	/^    inline bool         find_erase(const T& v)              { const T* it = find(v); if (it < Data + Size) { erase(it); return true; } return false; }$/;"	f	struct:ImVector
find_erase_unsorted	lib/cimgui/imgui/imgui.h	/^    inline bool         find_erase_unsorted(const T& v)     { const T* it = find(v); if (it < Data + Size) { erase_unsorted(it); return true; } return false; }$/;"	f	struct:ImVector
finished	lib/klib/kstring.h	/^	int sep, finished;$/;"	m	struct:__anon19
first	lib/nuklear/example/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anon158
first_char	lib/cimgui/imgui/imstb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anon111
first_char	lib/nuklear/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find
first_char	lib/nuklear/src/nuklear_text_editor.c	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	file:
first_free	lib/cimgui/imgui/imstb_truetype.h	/^   void   *first_free;$/;"	m	struct:stbtt__hheap
first_free	lib/nuklear/nuklear.h	/^    void   *first_free;$/;"	m	struct:nk_tt__hheap
first_free	lib/nuklear/src/nuklear_font.c	/^    void   *first_free;$/;"	m	struct:nk_tt__hheap	file:
first_row_filter	lib/nuklear/example/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v
first_unicode_codepoint_in_range	lib/cimgui/imgui/imstb_truetype.h	/^   int first_unicode_codepoint_in_range;  \/\/ if non-zero, then the chars are continuous, and this is the first codepoint$/;"	m	struct:__anon117
first_unicode_codepoint_in_range	lib/nuklear/nuklear.h	/^    int first_unicode_codepoint_in_range;$/;"	m	struct:nk_tt_pack_range
first_unicode_codepoint_in_range	lib/nuklear/src/nuklear_font.c	/^    int first_unicode_codepoint_in_range;$/;"	m	struct:nk_tt_pack_range	file:
first_x	lib/cimgui/imgui/imstb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon127
first_y	lib/cimgui/imgui/imstb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anon127
firstcode	lib/nuklear/example/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anon152
firstsymbol	lib/nuklear/example/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anon152
fixed_background	lib/nuklear/nuklear.h	/^    struct nk_style_item fixed_background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_item
fixed_background	lib/nuklear/src/nuklear.h	/^    struct nk_style_item fixed_background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_item
flags	lib/klib/cpp/khash.hpp	/^	uint32_t *flags;$/;"	m	class:klib::KHash
flags	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon159
flags	lib/nuklear/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_panel
flags	lib/nuklear/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_window
flags	lib/nuklear/nuklear.h	/^    struct nk_config_stack_flags flags;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_flags
flags	lib/nuklear/src/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_panel
flags	lib/nuklear/src/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_window
flags	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_flags flags;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_flags
float2fixed	lib/nuklear/example/stb_image.h	3066;"	d
float2fixed	lib/nuklear/example/stb_image.h	3094;"	d
floats	lib/nuklear/nuklear.h	/^    struct nk_config_stack_float floats;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_float
floats	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_float floats;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_float
fmin_aux	lib/klib/lua/klib.lua	/^	function fmin_aux(x1, data, fx1, dx) -- auxiliary function$/;"	f
font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    ALLEGRO_FONT *font;$/;"	m	struct:NkAllegro5Font
font	lib/nuklear/demo/x11/main.c	/^    XFont *font;$/;"	m	struct:XWindow	file:
font	lib/nuklear/demo/x11_xft/main.c	/^    XFont *font;$/;"	m	struct:XWindow	file:
font	lib/nuklear/example/file_browser.c	/^    int font;$/;"	m	struct:media	file:
font	lib/nuklear/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_user_font
font	lib/nuklear/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_user_font
font	lib/nuklear/nuklear.h	/^    struct nk_baked_font *font;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_baked_font
font	lib/nuklear/src/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_user_font
font	lib/nuklear/src/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_user_font
font	lib/nuklear/src/nuklear.h	/^    struct nk_baked_font *font;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_baked_font
fontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpFontCollection *fontCollection[10];$/;"	m	struct:__anon189
font_14	lib/nuklear/example/extended.c	/^    struct nk_font *font_14;$/;"	m	struct:media	typeref:struct:media::nk_font	file:
font_18	lib/nuklear/example/extended.c	/^    struct nk_font *font_18;$/;"	m	struct:media	typeref:struct:media::nk_font	file:
font_20	lib/nuklear/example/extended.c	/^    struct nk_font *font_20;$/;"	m	struct:media	typeref:struct:media::nk_font	file:
font_22	lib/nuklear/example/extended.c	/^    struct nk_font *font_22;$/;"	m	struct:media	typeref:struct:media::nk_font	file:
font_file	lib/nuklear/example/file_browser.c	/^    struct nk_image font_file;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
font_num	lib/nuklear/nuklear.h	/^    int font_num;$/;"	m	struct:nk_font_atlas
font_num	lib/nuklear/src/nuklear.h	/^    int font_num;$/;"	m	struct:nk_font_atlas
font_size	lib/cimgui/imgui/imstb_truetype.h	/^   float font_size;$/;"	m	struct:__anon117
font_size	lib/nuklear/nuklear.h	/^    float font_size;$/;"	m	struct:nk_tt_pack_range
font_size	lib/nuklear/src/nuklear_font.c	/^    float font_size;$/;"	m	struct:nk_tt_pack_range	file:
font_tex	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_glfw_device
font_tex	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_glfw_device
font_tex	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_sdl_device
font_tex	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_sdl_device
font_tex	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint font_tex;$/;"	m	struct:nk_sdl_device
font_tex	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_sfml_device
font_tex	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_sfml_device
font_tex	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_x11_device
font_tex	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_x11_device
font_tex	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct rawfb_image font_tex;$/;"	m	struct:rawfb_context	typeref:struct:rawfb_context::rawfb_image
font_tex	lib/nuklear/example/canvas.c	/^    GLuint font_tex;$/;"	m	struct:device	file:
font_tex	lib/nuklear/example/extended.c	/^    GLuint font_tex;$/;"	m	struct:device	file:
font_tex	lib/nuklear/example/file_browser.c	/^    GLuint font_tex;$/;"	m	struct:device	file:
font_tex	lib/nuklear/example/skinning.c	/^    GLuint font_tex;$/;"	m	struct:device	file:
font_tex_index	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int font_tex_index;$/;"	m	struct:nk_glfw_device
font_texture_view	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11ShaderResourceView *font_texture_view;$/;"	m	struct:__anon174
fontdicts	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt__buf fontdicts;              \/\/ array of font dicts$/;"	m	struct:stbtt_fontinfo
fonts	lib/nuklear/nuklear.h	/^    struct nk_config_stack_user_font fonts;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_user_font
fonts	lib/nuklear/nuklear.h	/^    struct nk_font *fonts;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font
fonts	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_user_font fonts;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_user_font
fonts	lib/nuklear/src/nuklear.h	/^    struct nk_font *fonts;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font
fontstart	lib/cimgui/imgui/imstb_truetype.h	/^   int              fontstart;         \/\/ offset of start of font$/;"	m	struct:stbtt_fontinfo
fontstart	lib/nuklear/nuklear.h	/^    int fontstart;\/* offset of start of font *\/$/;"	m	struct:nk_tt_fontinfo
fontstart	lib/nuklear/src/nuklear_font.c	/^    int fontstart;\/* offset of start of font *\/$/;"	m	struct:nk_tt_fontinfo	file:
footer_height	lib/nuklear/nuklear.h	/^    float footer_height;$/;"	m	struct:nk_panel
footer_height	lib/nuklear/src/nuklear.h	/^    float footer_height;$/;"	m	struct:nk_panel
foreground	lib/nuklear/nuklear.h	/^    struct nk_color foreground;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_color
foreground	lib/nuklear/src/nuklear.h	/^    struct nk_color foreground;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_color
format	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpStringFormat *format;$/;"	m	struct:__anon189
format	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    enum nk_font_atlas_format format;$/;"	m	struct:rawfb_image	typeref:enum:rawfb_image::nk_font_atlas_format
format	lib/nuklear/nuklear.h	/^    enum nk_draw_vertex_layout_format format;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_element::nk_draw_vertex_layout_format
format	lib/nuklear/src/nuklear.h	/^    enum nk_draw_vertex_layout_format format;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_element::nk_draw_vertex_layout_format
format_float	src/gui.c	/^format_float(const char* format, float f) {$/;"	f	file:
format_node_recur	lib/klib/knhx.c	/^static void format_node_recur(const knhx1_t *node, const knhx1_t *p, kstring_t *s, char *numbuf)$/;"	f	file:
fov	src/scene.h	/^    float fov;$/;"	m	struct:scene_t
fp	lib/klib/bgzf.h	/^	void *fp; \/\/ actual file handler; FILE* on writing; FILE* or knetFile* on reading$/;"	m	struct:__anon31
fp	lib/klib/test/kthread_test2.c	/^	FILE *fp;$/;"	m	struct:__anon14	file:
frag_shdr	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_glfw_device
frag_shdr	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_glfw_device
frag_shdr	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_sdl_device
frag_shdr	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_sdl_device
frag_shdr	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_sfml_device
frag_shdr	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_x11_device
frag_shdr	lib/nuklear/example/canvas.c	/^    GLuint frag_shdr;$/;"	m	struct:device	file:
frag_shdr	lib/nuklear/example/extended.c	/^    GLuint frag_shdr;$/;"	m	struct:device	file:
frag_shdr	lib/nuklear/example/file_browser.c	/^    GLuint frag_shdr;$/;"	m	struct:device	file:
frag_shdr	lib/nuklear/example/skinning.c	/^    GLuint frag_shdr;$/;"	m	struct:device	file:
fragment_program_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int fragment_program_available;$/;"	m	struct:opengl_info
frame_buffer_object_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int frame_buffer_object_available;$/;"	m	struct:opengl_info
free	lib/nuklear/nuklear.h	/^    nk_plugin_free free;$/;"	m	struct:nk_allocator
free	lib/nuklear/src/nuklear.h	/^    nk_plugin_free free;$/;"	m	struct:nk_allocator
free_cache	lib/klib/bgzf.c	/^static void free_cache(BGZF *fp) {}$/;"	f	file:
free_cache	lib/klib/bgzf.c	/^static void free_cache(BGZF *fp)$/;"	f	file:
free_head	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_node *free_head;$/;"	m	struct:stbrp_context
free_head	lib/nuklear/nuklear.h	/^    struct nk_rp_node *free_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node
free_head	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node *free_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_context::nk_rp_node	file:
freelist	lib/nuklear/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_page_element
freelist	lib/nuklear/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_page_element
freelist	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_page_element
freelist	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_page_element
front	lib/cimgui/imgui/imgui.h	/^    inline T&           front()                             { IM_ASSERT(Size > 0); return Data[0]; }$/;"	f	struct:ImVector
front	lib/cimgui/imgui/imgui.h	/^    inline const T&     front() const                       { IM_ASSERT(Size > 0); return Data[0]; }$/;"	f	struct:ImVector
fseeko	lib/klib/bgzf.c	47;"	d	file:
ft	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    XftFont * ft;$/;"	m	struct:XFont
ftdraw	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    XftDraw * ftdraw;$/;"	m	struct:XSurface
ftello	lib/klib/bgzf.c	46;"	d	file:
ftex	lib/cimgui/imgui/imstb_truetype.h	/^GLuint ftex;$/;"	v
ftp_open	lib/klib/kopen.c	/^static int ftp_open(const char *fn)$/;"	f	file:
ftpaux_t	lib/klib/kopen.c	/^} ftpaux_t;$/;"	t	typeref:struct:__anon34	file:
func	lib/klib/kthread.c	/^	void (*func)(void*,long,int);$/;"	m	struct:kt_for_t	file:
func	lib/klib/kthread.c	/^	void (*func)(void*,long,int);$/;"	m	struct:kt_forpool_t	file:
func	lib/klib/kthread.c	/^	void *(*func)(void*, int, void*);$/;"	m	struct:ktp_t	file:
func_header_generate	lib/cimgui/generator/generator.lua	/^local function func_header_generate(FP)$/;"	f
func_header_generate	lib/cimgui/generator/generator_old.lua	/^local function func_header_generate(FP)$/;"	f
func_header_impl_generate	lib/cimgui/generator/generator.lua	/^local function func_header_impl_generate(FP)$/;"	f
func_header_impl_generate	lib/cimgui/generator/generator_old.lua	/^local function func_header_impl_generate(FP)$/;"	f
func_implementation	lib/cimgui/generator/generator.lua	/^local function func_implementation(FP)$/;"	f
func_implementation	lib/cimgui/generator/generator_old.lua	/^local function func_implementation(FP)$/;"	f
func_parser	lib/cimgui/generator/generator_old.lua	/^local function func_parser()$/;"	f
functionD_re 	lib/cimgui/generator/cpp2ffi.lua	/^	functionD_re = "^([^;{}]-%b()[\\n%s%w]*%b{})",$/;"	f
function_re 	lib/cimgui/generator/cpp2ffi.lua	/^	function_re = "^([^;{}]+%b()[\\n%s%w]*;)", --const at the end$/;"	f
function_re 	lib/cimgui/generator/cpp2ffi.lua	/^	function_re = "^([^;{}]+%b()[\\n%s]*;)%s*",$/;"	f
fx	lib/cimgui/imgui/imstb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge
fx	lib/nuklear/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge
fx	lib/nuklear/src/nuklear_font.c	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	file:
g	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
g	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
g	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
g	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
g_Allocator	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkAllocationCallbacks*   g_Allocator = NULL;$/;"	v	file:
g_Allocator	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkAllocationCallbacks*   g_Allocator = NULL;$/;"	v	file:
g_AttribLocationProjMtx	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;                                \/\/ Uniforms location$/;"	v	file:
g_AttribLocationTex	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;                                \/\/ Uniforms location$/;"	v	file:
g_AttribLocationVtxColor	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static int          g_AttribLocationVtxPos = 0, g_AttribLocationVtxUV = 0, g_AttribLocationVtxColor = 0; \/\/ Vertex attributes location$/;"	v	file:
g_AttribLocationVtxPos	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static int          g_AttribLocationVtxPos = 0, g_AttribLocationVtxUV = 0, g_AttribLocationVtxColor = 0; \/\/ Vertex attributes location$/;"	v	file:
g_AttribLocationVtxUV	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static int          g_AttribLocationVtxPos = 0, g_AttribLocationVtxUV = 0, g_AttribLocationVtxColor = 0; \/\/ Vertex attributes location$/;"	v	file:
g_BufferMemoryAlignment	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkDeviceSize             g_BufferMemoryAlignment = 256;$/;"	v	file:
g_ClientApi	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static GlfwClientApi        g_ClientApi = GlfwClientApi_Unknown;$/;"	v	file:
g_ClipboardText	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static char*        g_ClipboardText = NULL;$/;"	v	file:
g_ClipboardTextData	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static char*                    g_ClipboardTextData = NULL;$/;"	v	file:
g_ClipboardTextData	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static char*        g_ClipboardTextData = NULL;$/;"	v	file:
g_DebugReport	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkDebugReportCallbackEXT g_DebugReport = VK_NULL_HANDLE;$/;"	v	file:
g_DebugReport	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkDebugReportCallbackEXT g_DebugReport = VK_NULL_HANDLE;$/;"	v	file:
g_DescriptorPool	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkDescriptorPool         g_DescriptorPool = VK_NULL_HANDLE;$/;"	v	file:
g_DescriptorPool	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkDescriptorPool         g_DescriptorPool = VK_NULL_HANDLE;$/;"	v	file:
g_DescriptorSet	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkDescriptorSet          g_DescriptorSet = VK_NULL_HANDLE;$/;"	v	file:
g_DescriptorSetLayout	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkDescriptorSetLayout    g_DescriptorSetLayout = VK_NULL_HANDLE;$/;"	v	file:
g_Device	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkDevice                 g_Device = VK_NULL_HANDLE;$/;"	v	file:
g_Device	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkDevice                 g_Device = VK_NULL_HANDLE;$/;"	v	file:
g_Display	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static ALLEGRO_DISPLAY*         g_Display = NULL;$/;"	v	file:
g_ElementsHandle	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;$/;"	v	file:
g_FontImage	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkImage                  g_FontImage = VK_NULL_HANDLE;$/;"	v	file:
g_FontMemory	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkDeviceMemory           g_FontMemory = VK_NULL_HANDLE;$/;"	v	file:
g_FontSampler	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkSampler                g_FontSampler = VK_NULL_HANDLE;$/;"	v	file:
g_FontTexture	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static LPDIRECT3DTEXTURE9       g_FontTexture = NULL;$/;"	v	file:
g_FontTexture	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static CIwTexture*  g_FontTexture = NULL;$/;"	v	file:
g_FontTexture	lib/cimgui/imgui/examples/imgui_impl_opengl2.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	file:
g_FontTexture	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	file:
g_FontView	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkImageView              g_FontView = VK_NULL_HANDLE;$/;"	v	file:
g_FragHandle	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static GLuint       g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	file:
g_GLContext	lib/cimgui/imgui/examples/example_emscripten/main.cpp	/^SDL_GLContext   g_GLContext = NULL;$/;"	v
g_GlVersion	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static GLuint       g_GlVersion = 0;                \/\/ Extracted at runtime using GL_MAJOR_VERSION, GL_MINOR_VERSION queries.$/;"	v	file:
g_GlslVersionString	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static char         g_GlslVersionString[32] = "";   \/\/ Specified by user or detected based on compile time GL settings.$/;"	v	file:
g_HasGamepad	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static bool                 g_HasGamepad = false;$/;"	v	file:
g_IndexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	file:
g_IndexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	file:
g_IndexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	file:
g_InstalledCallbacks	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static bool                 g_InstalledCallbacks = false;$/;"	v	file:
g_Instance	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkInstance               g_Instance = VK_NULL_HANDLE;$/;"	v	file:
g_Instance	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkInstance               g_Instance = VK_NULL_HANDLE;$/;"	v	file:
g_LastMouseCursor	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static ImGuiMouseCursor     g_LastMouseCursor = ImGuiMouseCursor_COUNT;$/;"	v	file:
g_MainWindowData	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static ImGui_ImplVulkanH_Window g_MainWindowData;$/;"	v	file:
g_MainWindowData	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static ImGui_ImplVulkanH_Window g_MainWindowData;$/;"	v	file:
g_MainWindowRenderBuffers	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static ImGui_ImplVulkanH_WindowRenderBuffers    g_MainWindowRenderBuffers;$/;"	v	file:
g_MinImageCount	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static int                      g_MinImageCount = 2;$/;"	v	file:
g_MinImageCount	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static uint32_t                 g_MinImageCount = 2;$/;"	v	file:
g_MouseCanUseGlobalState	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static bool         g_MouseCanUseGlobalState = true;$/;"	v	file:
g_MouseCursorInvisible	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static ALLEGRO_MOUSE_CURSOR*    g_MouseCursorInvisible = NULL;$/;"	v	file:
g_MouseCursors	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static GLFWcursor*          g_MouseCursors[ImGuiMouseCursor_COUNT] = {};$/;"	v	file:
g_MouseCursors	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static SDL_Cursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = {};$/;"	v	file:
g_MouseJustPressed	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static bool                 g_MouseJustPressed[5] = { false, false, false, false, false };$/;"	v	file:
g_MousePressed	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static bool         g_MousePressed[3] = { false, false, false };$/;"	v	file:
g_MousePressed	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static bool         g_MousePressed[3] = { false, false, false };$/;"	v	file:
g_PhysicalDevice	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkPhysicalDevice         g_PhysicalDevice = VK_NULL_HANDLE;$/;"	v	file:
g_PhysicalDevice	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkPhysicalDevice         g_PhysicalDevice = VK_NULL_HANDLE;$/;"	v	file:
g_Pipeline	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkPipeline               g_Pipeline = VK_NULL_HANDLE;$/;"	v	file:
g_PipelineCache	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkPipelineCache          g_PipelineCache = VK_NULL_HANDLE;$/;"	v	file:
g_PipelineCache	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkPipelineCache          g_PipelineCache = VK_NULL_HANDLE;$/;"	v	file:
g_PipelineCreateFlags	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkPipelineCreateFlags    g_PipelineCreateFlags = 0x00;$/;"	v	file:
g_PipelineLayout	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkPipelineLayout         g_PipelineLayout = VK_NULL_HANDLE;$/;"	v	file:
g_PrevUserCallbackChar	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static GLFWcharfun          g_PrevUserCallbackChar = NULL;$/;"	v	file:
g_PrevUserCallbackKey	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static GLFWkeyfun           g_PrevUserCallbackKey = NULL;$/;"	v	file:
g_PrevUserCallbackMousebutton	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static GLFWmousebuttonfun   g_PrevUserCallbackMousebutton = NULL;$/;"	v	file:
g_PrevUserCallbackScroll	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static GLFWscrollfun        g_PrevUserCallbackScroll = NULL;$/;"	v	file:
g_Queue	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static VkQueue                  g_Queue = VK_NULL_HANDLE;$/;"	v	file:
g_Queue	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static VkQueue                  g_Queue = VK_NULL_HANDLE;$/;"	v	file:
g_QueueFamily	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static uint32_t                 g_QueueFamily = (uint32_t)-1;$/;"	v	file:
g_QueueFamily	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static uint32_t                 g_QueueFamily = (uint32_t)-1;$/;"	v	file:
g_RTVFormat	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static DXGI_FORMAT                  g_RTVFormat = DXGI_FORMAT_UNKNOWN;$/;"	v	file:
g_RenderPass	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkRenderPass             g_RenderPass = VK_NULL_HANDLE;$/;"	v	file:
g_RenderScale	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static ImVec2       g_RenderScale = ImVec2(1.0f,1.0f);$/;"	v	file:
g_ShaderHandle	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static GLuint       g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	file:
g_SwapChainRebuild	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static bool                     g_SwapChainRebuild = false;$/;"	v	file:
g_SwapChainRebuild	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static bool                     g_SwapChainRebuild = false;$/;"	v	file:
g_SwapChainResizeHeight	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static int                      g_SwapChainResizeHeight = 0;$/;"	v	file:
g_SwapChainResizeHeight	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static int                      g_SwapChainResizeHeight = 0;$/;"	v	file:
g_SwapChainResizeWidth	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static int                      g_SwapChainResizeWidth = 0;$/;"	v	file:
g_SwapChainResizeWidth	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^static int                      g_SwapChainResizeWidth = 0;$/;"	v	file:
g_Texture	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static ALLEGRO_BITMAP*          g_Texture = NULL;$/;"	v	file:
g_TicksPerSecond	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static INT64                g_TicksPerSecond = 0;$/;"	v	file:
g_Time	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static double                   g_Time = 0.0;$/;"	v	file:
g_Time	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static double               g_Time = 0.0;$/;"	v	file:
g_Time	lib/cimgui/imgui/examples/imgui_impl_glut.cpp	/^static int g_Time = 0;          \/\/ Current time, in milliseconds$/;"	v	file:
g_Time	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static double       g_Time = 0.0f;$/;"	v	file:
g_Time	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static Uint64       g_Time = 0;$/;"	v	file:
g_Time	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static INT64                g_Time = 0;$/;"	v	file:
g_UploadBuffer	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkBuffer                 g_UploadBuffer = VK_NULL_HANDLE;$/;"	v	file:
g_UploadBufferMemory	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static VkDeviceMemory           g_UploadBufferMemory = VK_NULL_HANDLE;$/;"	v	file:
g_VboHandle	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;$/;"	v	file:
g_VertHandle	lib/cimgui/imgui/examples/imgui_impl_opengl3.cpp	/^static GLuint       g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	file:
g_VertexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	file:
g_VertexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	file:
g_VertexBufferSize	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	file:
g_VertexDecl	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^static ALLEGRO_VERTEX_DECL*     g_VertexDecl = NULL;$/;"	v	file:
g_VulkanInitInfo	lib/cimgui/imgui/examples/imgui_impl_vulkan.cpp	/^static ImGui_ImplVulkan_InitInfo g_VulkanInitInfo = {};$/;"	v	file:
g_WantUpdateHasGamepad	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static bool                 g_WantUpdateHasGamepad = true;$/;"	v	file:
g_Window	lib/cimgui/imgui/examples/example_emscripten/main.cpp	/^SDL_Window*     g_Window = NULL;$/;"	v
g_Window	lib/cimgui/imgui/examples/imgui_impl_glfw.cpp	/^static GLFWwindow*          g_Window = NULL;    \/\/ Main window$/;"	v	file:
g_Window	lib/cimgui/imgui/examples/imgui_impl_sdl.cpp	/^static SDL_Window*  g_Window = NULL;$/;"	v	file:
g_d3dpp	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^static D3DPRESENT_PARAMETERS    g_d3dpp = {};$/;"	v	file:
g_defr	lib/klib/ksw.c	/^const kswr_t g_defr = { 0, -1, -1, -1, -1, -1, -1 };$/;"	v
g_fence	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static ID3D12Fence*                 g_fence = NULL;$/;"	v	file:
g_fenceEvent	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static HANDLE                       g_fenceEvent = NULL;$/;"	v	file:
g_fenceLastSignaledValue	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static UINT64                       g_fenceLastSignaledValue = 0;$/;"	v	file:
g_frameContext	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static FrameContext                 g_frameContext[NUM_FRAMES_IN_FLIGHT] = {};$/;"	v	file:
g_frameIndex	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static UINT                         g_frameIndex = 0;$/;"	v	file:
g_frameIndex	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static UINT             g_frameIndex = UINT_MAX;$/;"	v	file:
g_hFontSrvCpuDescHandle	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static D3D12_CPU_DESCRIPTOR_HANDLE  g_hFontSrvCpuDescHandle = {};$/;"	v	file:
g_hFontSrvGpuDescHandle	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static D3D12_GPU_DESCRIPTOR_HANDLE  g_hFontSrvGpuDescHandle = {};$/;"	v	file:
g_hSwapChainWaitableObject	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static HANDLE                       g_hSwapChainWaitableObject = NULL;$/;"	v	file:
g_hWnd	lib/cimgui/imgui/examples/imgui_impl_win32.cpp	/^static HWND                 g_hWnd = NULL;$/;"	v	file:
g_magic	lib/klib/bgzf.c	/^static const uint8_t g_magic[19] = "\\037\\213\\010\\4\\0\\0\\0\\0\\0\\377\\6\\0\\102\\103\\2\\0\\0\\0";$/;"	v	file:
g_mainRenderTargetDescriptor	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static D3D12_CPU_DESCRIPTOR_HANDLE  g_mainRenderTargetDescriptor[NUM_BACK_BUFFERS] = {};$/;"	v	file:
g_mainRenderTargetResource	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static ID3D12Resource*              g_mainRenderTargetResource[NUM_BACK_BUFFERS] = {};$/;"	v	file:
g_mainRenderTargetView	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^static ID3D11RenderTargetView*  g_mainRenderTargetView = NULL;$/;"	v	file:
g_mainRenderTargetView	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^static ID3D10RenderTargetView*  g_mainRenderTargetView = NULL;$/;"	v	file:
g_mainRenderTargetView	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^static ID3D11RenderTargetView*  g_mainRenderTargetView = NULL;$/;"	v	file:
g_numFramesInFlight	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static UINT             g_numFramesInFlight = 0;$/;"	v	file:
g_osdKeyboardEnabled	lib/cimgui/imgui/examples/imgui_impl_marmalade.cpp	/^static bool         g_osdKeyboardEnabled = false;$/;"	v	file:
g_pBlendState	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10BlendState*        g_pBlendState = NULL;$/;"	v	file:
g_pBlendState	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11BlendState*        g_pBlendState = NULL;$/;"	v	file:
g_pD3D	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^static LPDIRECT3D9              g_pD3D = NULL;$/;"	v	file:
g_pDepthStencilState	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10DepthStencilState* g_pDepthStencilState = NULL;$/;"	v	file:
g_pDepthStencilState	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11DepthStencilState* g_pDepthStencilState = NULL;$/;"	v	file:
g_pFactory	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static IDXGIFactory*            g_pFactory = NULL;$/;"	v	file:
g_pFactory	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static IDXGIFactory*            g_pFactory = NULL;$/;"	v	file:
g_pFontSampler	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10SamplerState*      g_pFontSampler = NULL;$/;"	v	file:
g_pFontSampler	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11SamplerState*      g_pFontSampler = NULL;$/;"	v	file:
g_pFontTextureResource	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static ID3D12Resource*              g_pFontTextureResource = NULL;$/;"	v	file:
g_pFontTextureView	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10ShaderResourceView*g_pFontTextureView = NULL;$/;"	v	file:
g_pFontTextureView	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11ShaderResourceView*g_pFontTextureView = NULL;$/;"	v	file:
g_pFrameResources	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static FrameResources*  g_pFrameResources = NULL;$/;"	v	file:
g_pIB	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10Buffer*            g_pIB = NULL;$/;"	v	file:
g_pIB	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11Buffer*            g_pIB = NULL;$/;"	v	file:
g_pIB	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static LPDIRECT3DINDEXBUFFER9   g_pIB = NULL;$/;"	v	file:
g_pInputLayout	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10InputLayout*       g_pInputLayout = NULL;$/;"	v	file:
g_pInputLayout	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11InputLayout*       g_pInputLayout = NULL;$/;"	v	file:
g_pPipelineState	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static ID3D12PipelineState*         g_pPipelineState = NULL;$/;"	v	file:
g_pPixelShader	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10PixelShader*       g_pPixelShader = NULL;$/;"	v	file:
g_pPixelShader	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11PixelShader*       g_pPixelShader = NULL;$/;"	v	file:
g_pPixelShaderBlob	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10Blob*              g_pPixelShaderBlob = NULL;$/;"	v	file:
g_pPixelShaderBlob	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D10Blob*              g_pPixelShaderBlob = NULL;$/;"	v	file:
g_pPixelShaderBlob	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static ID3D10Blob*                  g_pPixelShaderBlob = NULL;$/;"	v	file:
g_pRasterizerState	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10RasterizerState*   g_pRasterizerState = NULL;$/;"	v	file:
g_pRasterizerState	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11RasterizerState*   g_pRasterizerState = NULL;$/;"	v	file:
g_pRootSignature	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static ID3D12RootSignature*         g_pRootSignature = NULL;$/;"	v	file:
g_pSwapChain	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^static IDXGISwapChain*          g_pSwapChain = NULL;$/;"	v	file:
g_pSwapChain	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^static IDXGISwapChain*          g_pSwapChain = NULL;$/;"	v	file:
g_pSwapChain	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^static IDXGISwapChain*          g_pSwapChain = NULL;$/;"	v	file:
g_pSwapChain	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static IDXGISwapChain3*             g_pSwapChain = NULL;$/;"	v	file:
g_pVB	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10Buffer*            g_pVB = NULL;$/;"	v	file:
g_pVB	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11Buffer*            g_pVB = NULL;$/;"	v	file:
g_pVB	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static LPDIRECT3DVERTEXBUFFER9  g_pVB = NULL;$/;"	v	file:
g_pVertexConstantBuffer	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10Buffer*            g_pVertexConstantBuffer = NULL;$/;"	v	file:
g_pVertexConstantBuffer	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11Buffer*            g_pVertexConstantBuffer = NULL;$/;"	v	file:
g_pVertexShader	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10VertexShader*      g_pVertexShader = NULL;$/;"	v	file:
g_pVertexShader	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11VertexShader*      g_pVertexShader = NULL;$/;"	v	file:
g_pVertexShaderBlob	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10Blob*              g_pVertexShaderBlob = NULL;$/;"	v	file:
g_pVertexShaderBlob	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D10Blob*              g_pVertexShaderBlob = NULL;$/;"	v	file:
g_pVertexShaderBlob	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static ID3D10Blob*                  g_pVertexShaderBlob = NULL;$/;"	v	file:
g_pd3dCommandList	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static ID3D12GraphicsCommandList*   g_pd3dCommandList = NULL;$/;"	v	file:
g_pd3dCommandQueue	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static ID3D12CommandQueue*          g_pd3dCommandQueue = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^static ID3D11Device*            g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^static ID3D10Device*            g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^static ID3D11Device*            g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static ID3D12Device*                g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^static LPDIRECT3DDEVICE9        g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^static ID3D10Device*            g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11Device*            g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^static ID3D12Device*                g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDevice	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^static LPDIRECT3DDEVICE9        g_pd3dDevice = NULL;$/;"	v	file:
g_pd3dDeviceContext	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;$/;"	v	file:
g_pd3dDeviceContext	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;$/;"	v	file:
g_pd3dDeviceContext	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;$/;"	v	file:
g_pd3dRtvDescHeap	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static ID3D12DescriptorHeap*        g_pd3dRtvDescHeap = NULL;$/;"	v	file:
g_pd3dSrvDescHeap	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^static ID3D12DescriptorHeap*        g_pd3dSrvDescHeap = NULL;$/;"	v	file:
gc	lib/nuklear/demo/x11/nuklear_xlib.h	/^    GC gc;$/;"	m	struct:XSurface
gc	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    GC gc;$/;"	m	struct:__anon175
gc	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    GC gc;$/;"	m	struct:XSurface
gdi	lib/nuklear/demo/gdi/nuklear_gdi.h	/^} gdi;$/;"	v	typeref:struct:__anon176
gdip	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} gdip;$/;"	v	typeref:struct:__anon189
gen_data	lib/klib/test/kstring_bench2.c	/^char *gen_data(int len, int a)$/;"	f
gen_structs_and_enums	lib/cimgui/generator/generator_old.lua	/^local function gen_structs_and_enums(cdefs,templates)$/;"	f
gen_structs_and_enums_table	lib/cimgui/generator/generator_old.lua	/^local function gen_structs_and_enums_table(cdefs)$/;"	f
generate_templates	lib/cimgui/generator/generator.lua	/^local function generate_templates(code,templates)$/;"	f
generate_templates	lib/cimgui/generator/generator_old.lua	/^local function generate_templates(code,templates)$/;"	f
get	lib/klib/cpp/khash.hpp	/^	khint_t get(const T &key) const {$/;"	f	class:klib::KHash
get	lib/klib/cpp/khashl.hpp	/^	khint_t get(const KType &key) const {$/;"	f	class:klib::KHashMap
get	lib/klib/cpp/khashl.hpp	/^	khint_t get(const KType &key) const {$/;"	f	class:klib::KHashMapCached
get	lib/klib/cpp/khashl.hpp	/^	khint_t get(const KType &key) const {$/;"	f	class:klib::KHashSetCached
get	lib/klib/cpp/khashl.hpp	/^	khint_t get(const T &key) const {$/;"	f	class:klib::KHashSet
getBuckets	lib/klib/ksa.c	/^static inline void getBuckets(const saint_t *C, saint_t *B, saint_t k, saint_t end)$/;"	f	file:
getCounts	lib/klib/ksa.c	/^static void getCounts(const unsigned char *T, saint_t *C, saint_t n, saint_t k, int cs)$/;"	f	file:
getRE	lib/cimgui/generator/cpp2ffi.lua	/^local function getRE()$/;"	f
get_defines	lib/cimgui/generator/generator.lua	/^local function get_defines(t)$/;"	f
get_defines	lib/cimgui/generator/generator_old.lua	/^local function get_defines(t)$/;"	f
get_manuals	lib/cimgui/generator/generator_old.lua	/^local function get_manuals(def)$/;"	f
get_proc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void *get_proc(const char *proc)$/;"	f	file:
get_proc	lib/gl3w/GL/gl3w.c	/^static void *get_proc(const char *proc)$/;"	f	file:
get_types	lib/cimgui/generator/cpp2ffi.lua	/^    local function get_types(v)$/;"	f
get_types	lib/cimgui/generator/generator_old.lua	/^    local function get_types(v)$/;"	f
getcimguiname	lib/cimgui/generator/generator_old.lua	/^local function getcimguiname(stname,funcname)$/;"	f
getcimguiname_overload	lib/cimgui/generator/generator_old.lua	/^local function getcimguiname_overload(stname,funcname,signature)$/;"	f
gl3wActiveShaderProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLACTIVESHADERPROGRAMPROC gl3wActiveShaderProgram;$/;"	v
gl3wActiveShaderProgram	lib/gl3w/GL/gl3w.c	/^PFNGLACTIVESHADERPROGRAMPROC gl3wActiveShaderProgram;$/;"	v
gl3wActiveTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLACTIVETEXTUREPROC gl3wActiveTexture;$/;"	v
gl3wActiveTexture	lib/gl3w/GL/gl3w.c	/^PFNGLACTIVETEXTUREPROC gl3wActiveTexture;$/;"	v
gl3wAttachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLATTACHSHADERPROC gl3wAttachShader;$/;"	v
gl3wAttachShader	lib/gl3w/GL/gl3w.c	/^PFNGLATTACHSHADERPROC gl3wAttachShader;$/;"	v
gl3wBeginConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINCONDITIONALRENDERPROC gl3wBeginConditionalRender;$/;"	v
gl3wBeginConditionalRender	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINCONDITIONALRENDERPROC gl3wBeginConditionalRender;$/;"	v
gl3wBeginQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYPROC gl3wBeginQuery;$/;"	v
gl3wBeginQuery	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYPROC gl3wBeginQuery;$/;"	v
gl3wBeginQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYINDEXEDPROC gl3wBeginQueryIndexed;$/;"	v
gl3wBeginQueryIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYINDEXEDPROC gl3wBeginQueryIndexed;$/;"	v
gl3wBeginTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINTRANSFORMFEEDBACKPROC gl3wBeginTransformFeedback;$/;"	v
gl3wBeginTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINTRANSFORMFEEDBACKPROC gl3wBeginTransformFeedback;$/;"	v
gl3wBindAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDATTRIBLOCATIONPROC gl3wBindAttribLocation;$/;"	v
gl3wBindAttribLocation	lib/gl3w/GL/gl3w.c	/^PFNGLBINDATTRIBLOCATIONPROC gl3wBindAttribLocation;$/;"	v
gl3wBindBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERPROC gl3wBindBuffer;$/;"	v
gl3wBindBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERPROC gl3wBindBuffer;$/;"	v
gl3wBindBufferBase	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERBASEPROC gl3wBindBufferBase;$/;"	v
gl3wBindBufferBase	lib/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERBASEPROC gl3wBindBufferBase;$/;"	v
gl3wBindBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERRANGEPROC gl3wBindBufferRange;$/;"	v
gl3wBindBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERRANGEPROC gl3wBindBufferRange;$/;"	v
gl3wBindFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONPROC gl3wBindFragDataLocation;$/;"	v
gl3wBindFragDataLocation	lib/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONPROC gl3wBindFragDataLocation;$/;"	v
gl3wBindFragDataLocationIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONINDEXEDPROC gl3wBindFragDataLocationIndexed;$/;"	v
gl3wBindFragDataLocationIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONINDEXEDPROC gl3wBindFragDataLocationIndexed;$/;"	v
gl3wBindFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDFRAMEBUFFERPROC gl3wBindFramebuffer;$/;"	v
gl3wBindFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDFRAMEBUFFERPROC gl3wBindFramebuffer;$/;"	v
gl3wBindImageTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDIMAGETEXTUREPROC gl3wBindImageTexture;$/;"	v
gl3wBindImageTexture	lib/gl3w/GL/gl3w.c	/^PFNGLBINDIMAGETEXTUREPROC gl3wBindImageTexture;$/;"	v
gl3wBindProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDPROGRAMPIPELINEPROC gl3wBindProgramPipeline;$/;"	v
gl3wBindProgramPipeline	lib/gl3w/GL/gl3w.c	/^PFNGLBINDPROGRAMPIPELINEPROC gl3wBindProgramPipeline;$/;"	v
gl3wBindRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDRENDERBUFFERPROC gl3wBindRenderbuffer;$/;"	v
gl3wBindRenderbuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDRENDERBUFFERPROC gl3wBindRenderbuffer;$/;"	v
gl3wBindSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDSAMPLERPROC gl3wBindSampler;$/;"	v
gl3wBindSampler	lib/gl3w/GL/gl3w.c	/^PFNGLBINDSAMPLERPROC gl3wBindSampler;$/;"	v
gl3wBindTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDTEXTUREPROC gl3wBindTexture;$/;"	v
gl3wBindTexture	lib/gl3w/GL/gl3w.c	/^PFNGLBINDTEXTUREPROC gl3wBindTexture;$/;"	v
gl3wBindTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDTRANSFORMFEEDBACKPROC gl3wBindTransformFeedback;$/;"	v
gl3wBindTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLBINDTRANSFORMFEEDBACKPROC gl3wBindTransformFeedback;$/;"	v
gl3wBindVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXARRAYPROC gl3wBindVertexArray;$/;"	v
gl3wBindVertexArray	lib/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXARRAYPROC gl3wBindVertexArray;$/;"	v
gl3wBindVertexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXBUFFERPROC gl3wBindVertexBuffer;$/;"	v
gl3wBindVertexBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXBUFFERPROC gl3wBindVertexBuffer;$/;"	v
gl3wBlendColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDCOLORPROC gl3wBlendColor;$/;"	v
gl3wBlendColor	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDCOLORPROC gl3wBlendColor;$/;"	v
gl3wBlendEquation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONPROC gl3wBlendEquation;$/;"	v
gl3wBlendEquation	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONPROC gl3wBlendEquation;$/;"	v
gl3wBlendEquationSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEPROC gl3wBlendEquationSeparate;$/;"	v
gl3wBlendEquationSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEPROC gl3wBlendEquationSeparate;$/;"	v
gl3wBlendEquationSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIPROC gl3wBlendEquationSeparatei;$/;"	v
gl3wBlendEquationSeparatei	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIPROC gl3wBlendEquationSeparatei;$/;"	v
gl3wBlendEquationSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIARBPROC gl3wBlendEquationSeparateiARB;$/;"	v
gl3wBlendEquationSeparateiARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIARBPROC gl3wBlendEquationSeparateiARB;$/;"	v
gl3wBlendEquationi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIPROC gl3wBlendEquationi;$/;"	v
gl3wBlendEquationi	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIPROC gl3wBlendEquationi;$/;"	v
gl3wBlendEquationiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIARBPROC gl3wBlendEquationiARB;$/;"	v
gl3wBlendEquationiARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIARBPROC gl3wBlendEquationiARB;$/;"	v
gl3wBlendFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCPROC gl3wBlendFunc;$/;"	v
gl3wBlendFunc	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCPROC gl3wBlendFunc;$/;"	v
gl3wBlendFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEPROC gl3wBlendFuncSeparate;$/;"	v
gl3wBlendFuncSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEPROC gl3wBlendFuncSeparate;$/;"	v
gl3wBlendFuncSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIPROC gl3wBlendFuncSeparatei;$/;"	v
gl3wBlendFuncSeparatei	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIPROC gl3wBlendFuncSeparatei;$/;"	v
gl3wBlendFuncSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIARBPROC gl3wBlendFuncSeparateiARB;$/;"	v
gl3wBlendFuncSeparateiARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIARBPROC gl3wBlendFuncSeparateiARB;$/;"	v
gl3wBlendFunci	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIPROC gl3wBlendFunci;$/;"	v
gl3wBlendFunci	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIPROC gl3wBlendFunci;$/;"	v
gl3wBlendFunciARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIARBPROC gl3wBlendFunciARB;$/;"	v
gl3wBlendFunciARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIARBPROC gl3wBlendFunciARB;$/;"	v
gl3wBlitFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLITFRAMEBUFFERPROC gl3wBlitFramebuffer;$/;"	v
gl3wBlitFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBLITFRAMEBUFFERPROC gl3wBlitFramebuffer;$/;"	v
gl3wBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBUFFERDATAPROC gl3wBufferData;$/;"	v
gl3wBufferData	lib/gl3w/GL/gl3w.c	/^PFNGLBUFFERDATAPROC gl3wBufferData;$/;"	v
gl3wBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBUFFERSUBDATAPROC gl3wBufferSubData;$/;"	v
gl3wBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLBUFFERSUBDATAPROC gl3wBufferSubData;$/;"	v
gl3wCheckFramebufferStatus	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC gl3wCheckFramebufferStatus;$/;"	v
gl3wCheckFramebufferStatus	lib/gl3w/GL/gl3w.c	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC gl3wCheckFramebufferStatus;$/;"	v
gl3wClampColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLAMPCOLORPROC gl3wClampColor;$/;"	v
gl3wClampColor	lib/gl3w/GL/gl3w.c	/^PFNGLCLAMPCOLORPROC gl3wClampColor;$/;"	v
gl3wClear	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARPROC gl3wClear;$/;"	v
gl3wClear	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARPROC gl3wClear;$/;"	v
gl3wClearBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERDATAPROC gl3wClearBufferData;$/;"	v
gl3wClearBufferData	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERDATAPROC gl3wClearBufferData;$/;"	v
gl3wClearBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERSUBDATAPROC gl3wClearBufferSubData;$/;"	v
gl3wClearBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERSUBDATAPROC gl3wClearBufferSubData;$/;"	v
gl3wClearBufferfi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFIPROC gl3wClearBufferfi;$/;"	v
gl3wClearBufferfi	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFIPROC gl3wClearBufferfi;$/;"	v
gl3wClearBufferfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFVPROC gl3wClearBufferfv;$/;"	v
gl3wClearBufferfv	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFVPROC gl3wClearBufferfv;$/;"	v
gl3wClearBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERIVPROC gl3wClearBufferiv;$/;"	v
gl3wClearBufferiv	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERIVPROC gl3wClearBufferiv;$/;"	v
gl3wClearBufferuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERUIVPROC gl3wClearBufferuiv;$/;"	v
gl3wClearBufferuiv	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERUIVPROC gl3wClearBufferuiv;$/;"	v
gl3wClearColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARCOLORPROC gl3wClearColor;$/;"	v
gl3wClearColor	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARCOLORPROC gl3wClearColor;$/;"	v
gl3wClearDepth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHPROC gl3wClearDepth;$/;"	v
gl3wClearDepth	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHPROC gl3wClearDepth;$/;"	v
gl3wClearDepthf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHFPROC gl3wClearDepthf;$/;"	v
gl3wClearDepthf	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHFPROC gl3wClearDepthf;$/;"	v
gl3wClearNamedBufferDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERDATAEXTPROC gl3wClearNamedBufferDataEXT;$/;"	v
gl3wClearNamedBufferDataEXT	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERDATAEXTPROC gl3wClearNamedBufferDataEXT;$/;"	v
gl3wClearNamedBufferSubDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC gl3wClearNamedBufferSubDataEXT;$/;"	v
gl3wClearNamedBufferSubDataEXT	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC gl3wClearNamedBufferSubDataEXT;$/;"	v
gl3wClearStencil	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARSTENCILPROC gl3wClearStencil;$/;"	v
gl3wClearStencil	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARSTENCILPROC gl3wClearStencil;$/;"	v
gl3wClientWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLIENTWAITSYNCPROC gl3wClientWaitSync;$/;"	v
gl3wClientWaitSync	lib/gl3w/GL/gl3w.c	/^PFNGLCLIENTWAITSYNCPROC gl3wClientWaitSync;$/;"	v
gl3wColorMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKPROC gl3wColorMask;$/;"	v
gl3wColorMask	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKPROC gl3wColorMask;$/;"	v
gl3wColorMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKIPROC gl3wColorMaski;$/;"	v
gl3wColorMaski	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKIPROC gl3wColorMaski;$/;"	v
gl3wColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIPROC gl3wColorP3ui;$/;"	v
gl3wColorP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIPROC gl3wColorP3ui;$/;"	v
gl3wColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIVPROC gl3wColorP3uiv;$/;"	v
gl3wColorP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIVPROC gl3wColorP3uiv;$/;"	v
gl3wColorP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIPROC gl3wColorP4ui;$/;"	v
gl3wColorP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIPROC gl3wColorP4ui;$/;"	v
gl3wColorP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIVPROC gl3wColorP4uiv;$/;"	v
gl3wColorP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIVPROC gl3wColorP4uiv;$/;"	v
gl3wCompileShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERPROC gl3wCompileShader;$/;"	v
gl3wCompileShader	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERPROC gl3wCompileShader;$/;"	v
gl3wCompileShaderIncludeARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERINCLUDEARBPROC gl3wCompileShaderIncludeARB;$/;"	v
gl3wCompileShaderIncludeARB	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERINCLUDEARBPROC gl3wCompileShaderIncludeARB;$/;"	v
gl3wCompressedTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC gl3wCompressedTexImage1D;$/;"	v
gl3wCompressedTexImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC gl3wCompressedTexImage1D;$/;"	v
gl3wCompressedTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC gl3wCompressedTexImage2D;$/;"	v
gl3wCompressedTexImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC gl3wCompressedTexImage2D;$/;"	v
gl3wCompressedTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC gl3wCompressedTexImage3D;$/;"	v
gl3wCompressedTexImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC gl3wCompressedTexImage3D;$/;"	v
gl3wCompressedTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC gl3wCompressedTexSubImage1D;$/;"	v
gl3wCompressedTexSubImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC gl3wCompressedTexSubImage1D;$/;"	v
gl3wCompressedTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC gl3wCompressedTexSubImage2D;$/;"	v
gl3wCompressedTexSubImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC gl3wCompressedTexSubImage2D;$/;"	v
gl3wCompressedTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC gl3wCompressedTexSubImage3D;$/;"	v
gl3wCompressedTexSubImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC gl3wCompressedTexSubImage3D;$/;"	v
gl3wCopyBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYBUFFERSUBDATAPROC gl3wCopyBufferSubData;$/;"	v
gl3wCopyBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYBUFFERSUBDATAPROC gl3wCopyBufferSubData;$/;"	v
gl3wCopyImageSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYIMAGESUBDATAPROC gl3wCopyImageSubData;$/;"	v
gl3wCopyImageSubData	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYIMAGESUBDATAPROC gl3wCopyImageSubData;$/;"	v
gl3wCopyTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE1DPROC gl3wCopyTexImage1D;$/;"	v
gl3wCopyTexImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE1DPROC gl3wCopyTexImage1D;$/;"	v
gl3wCopyTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE2DPROC gl3wCopyTexImage2D;$/;"	v
gl3wCopyTexImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE2DPROC gl3wCopyTexImage2D;$/;"	v
gl3wCopyTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE1DPROC gl3wCopyTexSubImage1D;$/;"	v
gl3wCopyTexSubImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE1DPROC gl3wCopyTexSubImage1D;$/;"	v
gl3wCopyTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE2DPROC gl3wCopyTexSubImage2D;$/;"	v
gl3wCopyTexSubImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE2DPROC gl3wCopyTexSubImage2D;$/;"	v
gl3wCopyTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC gl3wCopyTexSubImage3D;$/;"	v
gl3wCopyTexSubImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC gl3wCopyTexSubImage3D;$/;"	v
gl3wCreateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATEPROGRAMPROC gl3wCreateProgram;$/;"	v
gl3wCreateProgram	lib/gl3w/GL/gl3w.c	/^PFNGLCREATEPROGRAMPROC gl3wCreateProgram;$/;"	v
gl3wCreateShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROC gl3wCreateShader;$/;"	v
gl3wCreateShader	lib/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROC gl3wCreateShader;$/;"	v
gl3wCreateShaderProgramv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROGRAMVPROC gl3wCreateShaderProgramv;$/;"	v
gl3wCreateShaderProgramv	lib/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROGRAMVPROC gl3wCreateShaderProgramv;$/;"	v
gl3wCreateSyncFromCLeventARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATESYNCFROMCLEVENTARBPROC gl3wCreateSyncFromCLeventARB;$/;"	v
gl3wCreateSyncFromCLeventARB	lib/gl3w/GL/gl3w.c	/^PFNGLCREATESYNCFROMCLEVENTARBPROC gl3wCreateSyncFromCLeventARB;$/;"	v
gl3wCullFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCULLFACEPROC gl3wCullFace;$/;"	v
gl3wCullFace	lib/gl3w/GL/gl3w.c	/^PFNGLCULLFACEPROC gl3wCullFace;$/;"	v
gl3wDebugMessageCallback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKPROC gl3wDebugMessageCallback;$/;"	v
gl3wDebugMessageCallback	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKPROC gl3wDebugMessageCallback;$/;"	v
gl3wDebugMessageCallbackARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKARBPROC gl3wDebugMessageCallbackARB;$/;"	v
gl3wDebugMessageCallbackARB	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKARBPROC gl3wDebugMessageCallbackARB;$/;"	v
gl3wDebugMessageControl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLPROC gl3wDebugMessageControl;$/;"	v
gl3wDebugMessageControl	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLPROC gl3wDebugMessageControl;$/;"	v
gl3wDebugMessageControlARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLARBPROC gl3wDebugMessageControlARB;$/;"	v
gl3wDebugMessageControlARB	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLARBPROC gl3wDebugMessageControlARB;$/;"	v
gl3wDebugMessageInsert	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTPROC gl3wDebugMessageInsert;$/;"	v
gl3wDebugMessageInsert	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTPROC gl3wDebugMessageInsert;$/;"	v
gl3wDebugMessageInsertARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTARBPROC gl3wDebugMessageInsertARB;$/;"	v
gl3wDebugMessageInsertARB	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTARBPROC gl3wDebugMessageInsertARB;$/;"	v
gl3wDeleteBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEBUFFERSPROC gl3wDeleteBuffers;$/;"	v
gl3wDeleteBuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEBUFFERSPROC gl3wDeleteBuffers;$/;"	v
gl3wDeleteFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEFRAMEBUFFERSPROC gl3wDeleteFramebuffers;$/;"	v
gl3wDeleteFramebuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEFRAMEBUFFERSPROC gl3wDeleteFramebuffers;$/;"	v
gl3wDeleteNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETENAMEDSTRINGARBPROC gl3wDeleteNamedStringARB;$/;"	v
gl3wDeleteNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLDELETENAMEDSTRINGARBPROC gl3wDeleteNamedStringARB;$/;"	v
gl3wDeleteProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPROC gl3wDeleteProgram;$/;"	v
gl3wDeleteProgram	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPROC gl3wDeleteProgram;$/;"	v
gl3wDeleteProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPIPELINESPROC gl3wDeleteProgramPipelines;$/;"	v
gl3wDeleteProgramPipelines	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPIPELINESPROC gl3wDeleteProgramPipelines;$/;"	v
gl3wDeleteQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEQUERIESPROC gl3wDeleteQueries;$/;"	v
gl3wDeleteQueries	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEQUERIESPROC gl3wDeleteQueries;$/;"	v
gl3wDeleteRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETERENDERBUFFERSPROC gl3wDeleteRenderbuffers;$/;"	v
gl3wDeleteRenderbuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETERENDERBUFFERSPROC gl3wDeleteRenderbuffers;$/;"	v
gl3wDeleteSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETESAMPLERSPROC gl3wDeleteSamplers;$/;"	v
gl3wDeleteSamplers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETESAMPLERSPROC gl3wDeleteSamplers;$/;"	v
gl3wDeleteShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETESHADERPROC gl3wDeleteShader;$/;"	v
gl3wDeleteShader	lib/gl3w/GL/gl3w.c	/^PFNGLDELETESHADERPROC gl3wDeleteShader;$/;"	v
gl3wDeleteSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETESYNCPROC gl3wDeleteSync;$/;"	v
gl3wDeleteSync	lib/gl3w/GL/gl3w.c	/^PFNGLDELETESYNCPROC gl3wDeleteSync;$/;"	v
gl3wDeleteTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETETEXTURESPROC gl3wDeleteTextures;$/;"	v
gl3wDeleteTextures	lib/gl3w/GL/gl3w.c	/^PFNGLDELETETEXTURESPROC gl3wDeleteTextures;$/;"	v
gl3wDeleteTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETETRANSFORMFEEDBACKSPROC gl3wDeleteTransformFeedbacks;$/;"	v
gl3wDeleteTransformFeedbacks	lib/gl3w/GL/gl3w.c	/^PFNGLDELETETRANSFORMFEEDBACKSPROC gl3wDeleteTransformFeedbacks;$/;"	v
gl3wDeleteVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEVERTEXARRAYSPROC gl3wDeleteVertexArrays;$/;"	v
gl3wDeleteVertexArrays	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEVERTEXARRAYSPROC gl3wDeleteVertexArrays;$/;"	v
gl3wDepthFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHFUNCPROC gl3wDepthFunc;$/;"	v
gl3wDepthFunc	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHFUNCPROC gl3wDepthFunc;$/;"	v
gl3wDepthMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHMASKPROC gl3wDepthMask;$/;"	v
gl3wDepthMask	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHMASKPROC gl3wDepthMask;$/;"	v
gl3wDepthRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEPROC gl3wDepthRange;$/;"	v
gl3wDepthRange	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEPROC gl3wDepthRange;$/;"	v
gl3wDepthRangeArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEARRAYVPROC gl3wDepthRangeArrayv;$/;"	v
gl3wDepthRangeArrayv	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEARRAYVPROC gl3wDepthRangeArrayv;$/;"	v
gl3wDepthRangeIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEINDEXEDPROC gl3wDepthRangeIndexed;$/;"	v
gl3wDepthRangeIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEINDEXEDPROC gl3wDepthRangeIndexed;$/;"	v
gl3wDepthRangef	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEFPROC gl3wDepthRangef;$/;"	v
gl3wDepthRangef	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEFPROC gl3wDepthRangef;$/;"	v
gl3wDetachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDETACHSHADERPROC gl3wDetachShader;$/;"	v
gl3wDetachShader	lib/gl3w/GL/gl3w.c	/^PFNGLDETACHSHADERPROC gl3wDetachShader;$/;"	v
gl3wDisable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISABLEPROC gl3wDisable;$/;"	v
gl3wDisable	lib/gl3w/GL/gl3w.c	/^PFNGLDISABLEPROC gl3wDisable;$/;"	v
gl3wDisableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC gl3wDisableVertexAttribArray;$/;"	v
gl3wDisableVertexAttribArray	lib/gl3w/GL/gl3w.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC gl3wDisableVertexAttribArray;$/;"	v
gl3wDisablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISABLEIPROC gl3wDisablei;$/;"	v
gl3wDisablei	lib/gl3w/GL/gl3w.c	/^PFNGLDISABLEIPROC gl3wDisablei;$/;"	v
gl3wDispatchCompute	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEPROC gl3wDispatchCompute;$/;"	v
gl3wDispatchCompute	lib/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEPROC gl3wDispatchCompute;$/;"	v
gl3wDispatchComputeIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEINDIRECTPROC gl3wDispatchComputeIndirect;$/;"	v
gl3wDispatchComputeIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEINDIRECTPROC gl3wDispatchComputeIndirect;$/;"	v
gl3wDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSPROC gl3wDrawArrays;$/;"	v
gl3wDrawArrays	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSPROC gl3wDrawArrays;$/;"	v
gl3wDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINDIRECTPROC gl3wDrawArraysIndirect;$/;"	v
gl3wDrawArraysIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINDIRECTPROC gl3wDrawArraysIndirect;$/;"	v
gl3wDrawArraysInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDPROC gl3wDrawArraysInstanced;$/;"	v
gl3wDrawArraysInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDPROC gl3wDrawArraysInstanced;$/;"	v
gl3wDrawArraysInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC gl3wDrawArraysInstancedBaseInstance;$/;"	v
gl3wDrawArraysInstancedBaseInstance	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC gl3wDrawArraysInstancedBaseInstance;$/;"	v
gl3wDrawBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERPROC gl3wDrawBuffer;$/;"	v
gl3wDrawBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERPROC gl3wDrawBuffer;$/;"	v
gl3wDrawBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERSPROC gl3wDrawBuffers;$/;"	v
gl3wDrawBuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERSPROC gl3wDrawBuffers;$/;"	v
gl3wDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSPROC gl3wDrawElements;$/;"	v
gl3wDrawElements	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSPROC gl3wDrawElements;$/;"	v
gl3wDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSBASEVERTEXPROC gl3wDrawElementsBaseVertex;$/;"	v
gl3wDrawElementsBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSBASEVERTEXPROC gl3wDrawElementsBaseVertex;$/;"	v
gl3wDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINDIRECTPROC gl3wDrawElementsIndirect;$/;"	v
gl3wDrawElementsIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINDIRECTPROC gl3wDrawElementsIndirect;$/;"	v
gl3wDrawElementsInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDPROC gl3wDrawElementsInstanced;$/;"	v
gl3wDrawElementsInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDPROC gl3wDrawElementsInstanced;$/;"	v
gl3wDrawElementsInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC gl3wDrawElementsInstancedBaseInstance;$/;"	v
gl3wDrawElementsInstancedBaseInstance	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC gl3wDrawElementsInstancedBaseInstance;$/;"	v
gl3wDrawElementsInstancedBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC gl3wDrawElementsInstancedBaseVertex;$/;"	v
gl3wDrawElementsInstancedBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC gl3wDrawElementsInstancedBaseVertex;$/;"	v
gl3wDrawElementsInstancedBaseVertexBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl3wDrawElementsInstancedBaseVertexBaseInstance;$/;"	v
gl3wDrawElementsInstancedBaseVertexBaseInstance	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl3wDrawElementsInstancedBaseVertexBaseInstance;$/;"	v
gl3wDrawRangeElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSPROC gl3wDrawRangeElements;$/;"	v
gl3wDrawRangeElements	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSPROC gl3wDrawRangeElements;$/;"	v
gl3wDrawRangeElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC gl3wDrawRangeElementsBaseVertex;$/;"	v
gl3wDrawRangeElementsBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC gl3wDrawRangeElementsBaseVertex;$/;"	v
gl3wDrawTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKPROC gl3wDrawTransformFeedback;$/;"	v
gl3wDrawTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKPROC gl3wDrawTransformFeedback;$/;"	v
gl3wDrawTransformFeedbackInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC gl3wDrawTransformFeedbackInstanced;$/;"	v
gl3wDrawTransformFeedbackInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC gl3wDrawTransformFeedbackInstanced;$/;"	v
gl3wDrawTransformFeedbackStream	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC gl3wDrawTransformFeedbackStream;$/;"	v
gl3wDrawTransformFeedbackStream	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC gl3wDrawTransformFeedbackStream;$/;"	v
gl3wDrawTransformFeedbackStreamInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC gl3wDrawTransformFeedbackStreamInstanced;$/;"	v
gl3wDrawTransformFeedbackStreamInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC gl3wDrawTransformFeedbackStreamInstanced;$/;"	v
gl3wEnable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENABLEPROC gl3wEnable;$/;"	v
gl3wEnable	lib/gl3w/GL/gl3w.c	/^PFNGLENABLEPROC gl3wEnable;$/;"	v
gl3wEnableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC gl3wEnableVertexAttribArray;$/;"	v
gl3wEnableVertexAttribArray	lib/gl3w/GL/gl3w.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC gl3wEnableVertexAttribArray;$/;"	v
gl3wEnablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENABLEIPROC gl3wEnablei;$/;"	v
gl3wEnablei	lib/gl3w/GL/gl3w.c	/^PFNGLENABLEIPROC gl3wEnablei;$/;"	v
gl3wEndConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDCONDITIONALRENDERPROC gl3wEndConditionalRender;$/;"	v
gl3wEndConditionalRender	lib/gl3w/GL/gl3w.c	/^PFNGLENDCONDITIONALRENDERPROC gl3wEndConditionalRender;$/;"	v
gl3wEndQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDQUERYPROC gl3wEndQuery;$/;"	v
gl3wEndQuery	lib/gl3w/GL/gl3w.c	/^PFNGLENDQUERYPROC gl3wEndQuery;$/;"	v
gl3wEndQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDQUERYINDEXEDPROC gl3wEndQueryIndexed;$/;"	v
gl3wEndQueryIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLENDQUERYINDEXEDPROC gl3wEndQueryIndexed;$/;"	v
gl3wEndTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDTRANSFORMFEEDBACKPROC gl3wEndTransformFeedback;$/;"	v
gl3wEndTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLENDTRANSFORMFEEDBACKPROC gl3wEndTransformFeedback;$/;"	v
gl3wFenceSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFENCESYNCPROC gl3wFenceSync;$/;"	v
gl3wFenceSync	lib/gl3w/GL/gl3w.c	/^PFNGLFENCESYNCPROC gl3wFenceSync;$/;"	v
gl3wFinish	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFINISHPROC gl3wFinish;$/;"	v
gl3wFinish	lib/gl3w/GL/gl3w.c	/^PFNGLFINISHPROC gl3wFinish;$/;"	v
gl3wFlush	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFLUSHPROC gl3wFlush;$/;"	v
gl3wFlush	lib/gl3w/GL/gl3w.c	/^PFNGLFLUSHPROC gl3wFlush;$/;"	v
gl3wFlushMappedBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC gl3wFlushMappedBufferRange;$/;"	v
gl3wFlushMappedBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC gl3wFlushMappedBufferRange;$/;"	v
gl3wFramebufferParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERPARAMETERIPROC gl3wFramebufferParameteri;$/;"	v
gl3wFramebufferParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERPARAMETERIPROC gl3wFramebufferParameteri;$/;"	v
gl3wFramebufferRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC gl3wFramebufferRenderbuffer;$/;"	v
gl3wFramebufferRenderbuffer	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC gl3wFramebufferRenderbuffer;$/;"	v
gl3wFramebufferTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTUREPROC gl3wFramebufferTexture;$/;"	v
gl3wFramebufferTexture	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTUREPROC gl3wFramebufferTexture;$/;"	v
gl3wFramebufferTexture1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE1DPROC gl3wFramebufferTexture1D;$/;"	v
gl3wFramebufferTexture1D	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE1DPROC gl3wFramebufferTexture1D;$/;"	v
gl3wFramebufferTexture2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE2DPROC gl3wFramebufferTexture2D;$/;"	v
gl3wFramebufferTexture2D	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE2DPROC gl3wFramebufferTexture2D;$/;"	v
gl3wFramebufferTexture3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE3DPROC gl3wFramebufferTexture3D;$/;"	v
gl3wFramebufferTexture3D	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE3DPROC gl3wFramebufferTexture3D;$/;"	v
gl3wFramebufferTextureLayer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC gl3wFramebufferTextureLayer;$/;"	v
gl3wFramebufferTextureLayer	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC gl3wFramebufferTextureLayer;$/;"	v
gl3wFrontFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRONTFACEPROC gl3wFrontFace;$/;"	v
gl3wFrontFace	lib/gl3w/GL/gl3w.c	/^PFNGLFRONTFACEPROC gl3wFrontFace;$/;"	v
gl3wGenBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENBUFFERSPROC gl3wGenBuffers;$/;"	v
gl3wGenBuffers	lib/gl3w/GL/gl3w.c	/^PFNGLGENBUFFERSPROC gl3wGenBuffers;$/;"	v
gl3wGenFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENFRAMEBUFFERSPROC gl3wGenFramebuffers;$/;"	v
gl3wGenFramebuffers	lib/gl3w/GL/gl3w.c	/^PFNGLGENFRAMEBUFFERSPROC gl3wGenFramebuffers;$/;"	v
gl3wGenProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENPROGRAMPIPELINESPROC gl3wGenProgramPipelines;$/;"	v
gl3wGenProgramPipelines	lib/gl3w/GL/gl3w.c	/^PFNGLGENPROGRAMPIPELINESPROC gl3wGenProgramPipelines;$/;"	v
gl3wGenQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENQUERIESPROC gl3wGenQueries;$/;"	v
gl3wGenQueries	lib/gl3w/GL/gl3w.c	/^PFNGLGENQUERIESPROC gl3wGenQueries;$/;"	v
gl3wGenRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENRENDERBUFFERSPROC gl3wGenRenderbuffers;$/;"	v
gl3wGenRenderbuffers	lib/gl3w/GL/gl3w.c	/^PFNGLGENRENDERBUFFERSPROC gl3wGenRenderbuffers;$/;"	v
gl3wGenSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENSAMPLERSPROC gl3wGenSamplers;$/;"	v
gl3wGenSamplers	lib/gl3w/GL/gl3w.c	/^PFNGLGENSAMPLERSPROC gl3wGenSamplers;$/;"	v
gl3wGenTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENTEXTURESPROC gl3wGenTextures;$/;"	v
gl3wGenTextures	lib/gl3w/GL/gl3w.c	/^PFNGLGENTEXTURESPROC gl3wGenTextures;$/;"	v
gl3wGenTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENTRANSFORMFEEDBACKSPROC gl3wGenTransformFeedbacks;$/;"	v
gl3wGenTransformFeedbacks	lib/gl3w/GL/gl3w.c	/^PFNGLGENTRANSFORMFEEDBACKSPROC gl3wGenTransformFeedbacks;$/;"	v
gl3wGenVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENVERTEXARRAYSPROC gl3wGenVertexArrays;$/;"	v
gl3wGenVertexArrays	lib/gl3w/GL/gl3w.c	/^PFNGLGENVERTEXARRAYSPROC gl3wGenVertexArrays;$/;"	v
gl3wGenerateMipmap	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENERATEMIPMAPPROC gl3wGenerateMipmap;$/;"	v
gl3wGenerateMipmap	lib/gl3w/GL/gl3w.c	/^PFNGLGENERATEMIPMAPPROC gl3wGenerateMipmap;$/;"	v
gl3wGetActiveAtomicCounterBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC gl3wGetActiveAtomicCounterBufferiv;$/;"	v
gl3wGetActiveAtomicCounterBufferiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC gl3wGetActiveAtomicCounterBufferiv;$/;"	v
gl3wGetActiveAttrib	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATTRIBPROC gl3wGetActiveAttrib;$/;"	v
gl3wGetActiveAttrib	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATTRIBPROC gl3wGetActiveAttrib;$/;"	v
gl3wGetActiveSubroutineName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINENAMEPROC gl3wGetActiveSubroutineName;$/;"	v
gl3wGetActiveSubroutineName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINENAMEPROC gl3wGetActiveSubroutineName;$/;"	v
gl3wGetActiveSubroutineUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC gl3wGetActiveSubroutineUniformName;$/;"	v
gl3wGetActiveSubroutineUniformName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC gl3wGetActiveSubroutineUniformName;$/;"	v
gl3wGetActiveSubroutineUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC gl3wGetActiveSubroutineUniformiv;$/;"	v
gl3wGetActiveSubroutineUniformiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC gl3wGetActiveSubroutineUniformiv;$/;"	v
gl3wGetActiveUniform	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMPROC gl3wGetActiveUniform;$/;"	v
gl3wGetActiveUniform	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMPROC gl3wGetActiveUniform;$/;"	v
gl3wGetActiveUniformBlockName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC gl3wGetActiveUniformBlockName;$/;"	v
gl3wGetActiveUniformBlockName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC gl3wGetActiveUniformBlockName;$/;"	v
gl3wGetActiveUniformBlockiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC gl3wGetActiveUniformBlockiv;$/;"	v
gl3wGetActiveUniformBlockiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC gl3wGetActiveUniformBlockiv;$/;"	v
gl3wGetActiveUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMNAMEPROC gl3wGetActiveUniformName;$/;"	v
gl3wGetActiveUniformName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMNAMEPROC gl3wGetActiveUniformName;$/;"	v
gl3wGetActiveUniformsiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMSIVPROC gl3wGetActiveUniformsiv;$/;"	v
gl3wGetActiveUniformsiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMSIVPROC gl3wGetActiveUniformsiv;$/;"	v
gl3wGetAttachedShaders	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETATTACHEDSHADERSPROC gl3wGetAttachedShaders;$/;"	v
gl3wGetAttachedShaders	lib/gl3w/GL/gl3w.c	/^PFNGLGETATTACHEDSHADERSPROC gl3wGetAttachedShaders;$/;"	v
gl3wGetAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETATTRIBLOCATIONPROC gl3wGetAttribLocation;$/;"	v
gl3wGetAttribLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETATTRIBLOCATIONPROC gl3wGetAttribLocation;$/;"	v
gl3wGetBooleani_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANI_VPROC gl3wGetBooleani_v;$/;"	v
gl3wGetBooleani_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANI_VPROC gl3wGetBooleani_v;$/;"	v
gl3wGetBooleanv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANVPROC gl3wGetBooleanv;$/;"	v
gl3wGetBooleanv	lib/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANVPROC gl3wGetBooleanv;$/;"	v
gl3wGetBufferParameteri64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERI64VPROC gl3wGetBufferParameteri64v;$/;"	v
gl3wGetBufferParameteri64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERI64VPROC gl3wGetBufferParameteri64v;$/;"	v
gl3wGetBufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERIVPROC gl3wGetBufferParameteriv;$/;"	v
gl3wGetBufferParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERIVPROC gl3wGetBufferParameteriv;$/;"	v
gl3wGetBufferPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPOINTERVPROC gl3wGetBufferPointerv;$/;"	v
gl3wGetBufferPointerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPOINTERVPROC gl3wGetBufferPointerv;$/;"	v
gl3wGetBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERSUBDATAPROC gl3wGetBufferSubData;$/;"	v
gl3wGetBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERSUBDATAPROC gl3wGetBufferSubData;$/;"	v
gl3wGetCompressedTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC gl3wGetCompressedTexImage;$/;"	v
gl3wGetCompressedTexImage	lib/gl3w/GL/gl3w.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC gl3wGetCompressedTexImage;$/;"	v
gl3wGetDebugMessageLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGPROC gl3wGetDebugMessageLog;$/;"	v
gl3wGetDebugMessageLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGPROC gl3wGetDebugMessageLog;$/;"	v
gl3wGetDebugMessageLogARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGARBPROC gl3wGetDebugMessageLogARB;$/;"	v
gl3wGetDebugMessageLogARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGARBPROC gl3wGetDebugMessageLogARB;$/;"	v
gl3wGetDoublei_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEI_VPROC gl3wGetDoublei_v;$/;"	v
gl3wGetDoublei_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEI_VPROC gl3wGetDoublei_v;$/;"	v
gl3wGetDoublev	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEVPROC gl3wGetDoublev;$/;"	v
gl3wGetDoublev	lib/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEVPROC gl3wGetDoublev;$/;"	v
gl3wGetError	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETERRORPROC gl3wGetError;$/;"	v
gl3wGetError	lib/gl3w/GL/gl3w.c	/^PFNGLGETERRORPROC gl3wGetError;$/;"	v
gl3wGetFloati_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFLOATI_VPROC gl3wGetFloati_v;$/;"	v
gl3wGetFloati_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETFLOATI_VPROC gl3wGetFloati_v;$/;"	v
gl3wGetFloatv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFLOATVPROC gl3wGetFloatv;$/;"	v
gl3wGetFloatv	lib/gl3w/GL/gl3w.c	/^PFNGLGETFLOATVPROC gl3wGetFloatv;$/;"	v
gl3wGetFragDataIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATAINDEXPROC gl3wGetFragDataIndex;$/;"	v
gl3wGetFragDataIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATAINDEXPROC gl3wGetFragDataIndex;$/;"	v
gl3wGetFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATALOCATIONPROC gl3wGetFragDataLocation;$/;"	v
gl3wGetFragDataLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATALOCATIONPROC gl3wGetFragDataLocation;$/;"	v
gl3wGetFramebufferAttachmentParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC gl3wGetFramebufferAttachmentParameteriv;$/;"	v
gl3wGetFramebufferAttachmentParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC gl3wGetFramebufferAttachmentParameteriv;$/;"	v
gl3wGetFramebufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERPARAMETERIVPROC gl3wGetFramebufferParameteriv;$/;"	v
gl3wGetFramebufferParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERPARAMETERIVPROC gl3wGetFramebufferParameteriv;$/;"	v
gl3wGetGraphicsResetStatusARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC gl3wGetGraphicsResetStatusARB;$/;"	v
gl3wGetGraphicsResetStatusARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC gl3wGetGraphicsResetStatusARB;$/;"	v
gl3wGetInteger64i_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64I_VPROC gl3wGetInteger64i_v;$/;"	v
gl3wGetInteger64i_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64I_VPROC gl3wGetInteger64i_v;$/;"	v
gl3wGetInteger64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64VPROC gl3wGetInteger64v;$/;"	v
gl3wGetInteger64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64VPROC gl3wGetInteger64v;$/;"	v
gl3wGetIntegeri_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERI_VPROC gl3wGetIntegeri_v;$/;"	v
gl3wGetIntegeri_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERI_VPROC gl3wGetIntegeri_v;$/;"	v
gl3wGetIntegerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERVPROC gl3wGetIntegerv;$/;"	v
gl3wGetIntegerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERVPROC gl3wGetIntegerv;$/;"	v
gl3wGetInternalformati64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATI64VPROC gl3wGetInternalformati64v;$/;"	v
gl3wGetInternalformati64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATI64VPROC gl3wGetInternalformati64v;$/;"	v
gl3wGetInternalformativ	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATIVPROC gl3wGetInternalformativ;$/;"	v
gl3wGetInternalformativ	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATIVPROC gl3wGetInternalformativ;$/;"	v
gl3wGetMultisamplefv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETMULTISAMPLEFVPROC gl3wGetMultisamplefv;$/;"	v
gl3wGetMultisamplefv	lib/gl3w/GL/gl3w.c	/^PFNGLGETMULTISAMPLEFVPROC gl3wGetMultisamplefv;$/;"	v
gl3wGetNamedFramebufferParameterivEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC gl3wGetNamedFramebufferParameterivEXT;$/;"	v
gl3wGetNamedFramebufferParameterivEXT	lib/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC gl3wGetNamedFramebufferParameterivEXT;$/;"	v
gl3wGetNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGARBPROC gl3wGetNamedStringARB;$/;"	v
gl3wGetNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGARBPROC gl3wGetNamedStringARB;$/;"	v
gl3wGetNamedStringivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGIVARBPROC gl3wGetNamedStringivARB;$/;"	v
gl3wGetNamedStringivARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGIVARBPROC gl3wGetNamedStringivARB;$/;"	v
gl3wGetObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTLABELPROC gl3wGetObjectLabel;$/;"	v
gl3wGetObjectLabel	lib/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTLABELPROC gl3wGetObjectLabel;$/;"	v
gl3wGetObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTPTRLABELPROC gl3wGetObjectPtrLabel;$/;"	v
gl3wGetObjectPtrLabel	lib/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTPTRLABELPROC gl3wGetObjectPtrLabel;$/;"	v
gl3wGetPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPOINTERVPROC gl3wGetPointerv;$/;"	v
gl3wGetPointerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPOINTERVPROC gl3wGetPointerv;$/;"	v
gl3wGetProcAddress	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^void *gl3wGetProcAddress(const char *proc)$/;"	f
gl3wGetProcAddress	lib/gl3w/GL/gl3w.c	/^void *gl3wGetProcAddress(const char *proc)$/;"	f
gl3wGetProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMBINARYPROC gl3wGetProgramBinary;$/;"	v
gl3wGetProgramBinary	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMBINARYPROC gl3wGetProgramBinary;$/;"	v
gl3wGetProgramInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINFOLOGPROC gl3wGetProgramInfoLog;$/;"	v
gl3wGetProgramInfoLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINFOLOGPROC gl3wGetProgramInfoLog;$/;"	v
gl3wGetProgramInterfaceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINTERFACEIVPROC gl3wGetProgramInterfaceiv;$/;"	v
gl3wGetProgramInterfaceiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINTERFACEIVPROC gl3wGetProgramInterfaceiv;$/;"	v
gl3wGetProgramPipelineInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEINFOLOGPROC gl3wGetProgramPipelineInfoLog;$/;"	v
gl3wGetProgramPipelineInfoLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEINFOLOGPROC gl3wGetProgramPipelineInfoLog;$/;"	v
gl3wGetProgramPipelineiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEIVPROC gl3wGetProgramPipelineiv;$/;"	v
gl3wGetProgramPipelineiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEIVPROC gl3wGetProgramPipelineiv;$/;"	v
gl3wGetProgramResourceIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEINDEXPROC gl3wGetProgramResourceIndex;$/;"	v
gl3wGetProgramResourceIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEINDEXPROC gl3wGetProgramResourceIndex;$/;"	v
gl3wGetProgramResourceLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONPROC gl3wGetProgramResourceLocation;$/;"	v
gl3wGetProgramResourceLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONPROC gl3wGetProgramResourceLocation;$/;"	v
gl3wGetProgramResourceLocationIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC gl3wGetProgramResourceLocationIndex;$/;"	v
gl3wGetProgramResourceLocationIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC gl3wGetProgramResourceLocationIndex;$/;"	v
gl3wGetProgramResourceName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCENAMEPROC gl3wGetProgramResourceName;$/;"	v
gl3wGetProgramResourceName	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCENAMEPROC gl3wGetProgramResourceName;$/;"	v
gl3wGetProgramResourceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEIVPROC gl3wGetProgramResourceiv;$/;"	v
gl3wGetProgramResourceiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEIVPROC gl3wGetProgramResourceiv;$/;"	v
gl3wGetProgramStageiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMSTAGEIVPROC gl3wGetProgramStageiv;$/;"	v
gl3wGetProgramStageiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMSTAGEIVPROC gl3wGetProgramStageiv;$/;"	v
gl3wGetProgramiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMIVPROC gl3wGetProgramiv;$/;"	v
gl3wGetProgramiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMIVPROC gl3wGetProgramiv;$/;"	v
gl3wGetQueryIndexediv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYINDEXEDIVPROC gl3wGetQueryIndexediv;$/;"	v
gl3wGetQueryIndexediv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYINDEXEDIVPROC gl3wGetQueryIndexediv;$/;"	v
gl3wGetQueryObjecti64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTI64VPROC gl3wGetQueryObjecti64v;$/;"	v
gl3wGetQueryObjecti64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTI64VPROC gl3wGetQueryObjecti64v;$/;"	v
gl3wGetQueryObjectiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTIVPROC gl3wGetQueryObjectiv;$/;"	v
gl3wGetQueryObjectiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTIVPROC gl3wGetQueryObjectiv;$/;"	v
gl3wGetQueryObjectui64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUI64VPROC gl3wGetQueryObjectui64v;$/;"	v
gl3wGetQueryObjectui64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUI64VPROC gl3wGetQueryObjectui64v;$/;"	v
gl3wGetQueryObjectuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUIVPROC gl3wGetQueryObjectuiv;$/;"	v
gl3wGetQueryObjectuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUIVPROC gl3wGetQueryObjectuiv;$/;"	v
gl3wGetQueryiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYIVPROC gl3wGetQueryiv;$/;"	v
gl3wGetQueryiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYIVPROC gl3wGetQueryiv;$/;"	v
gl3wGetRenderbufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC gl3wGetRenderbufferParameteriv;$/;"	v
gl3wGetRenderbufferParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC gl3wGetRenderbufferParameteriv;$/;"	v
gl3wGetSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIIVPROC gl3wGetSamplerParameterIiv;$/;"	v
gl3wGetSamplerParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIIVPROC gl3wGetSamplerParameterIiv;$/;"	v
gl3wGetSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIUIVPROC gl3wGetSamplerParameterIuiv;$/;"	v
gl3wGetSamplerParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIUIVPROC gl3wGetSamplerParameterIuiv;$/;"	v
gl3wGetSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERFVPROC gl3wGetSamplerParameterfv;$/;"	v
gl3wGetSamplerParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERFVPROC gl3wGetSamplerParameterfv;$/;"	v
gl3wGetSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIVPROC gl3wGetSamplerParameteriv;$/;"	v
gl3wGetSamplerParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIVPROC gl3wGetSamplerParameteriv;$/;"	v
gl3wGetShaderInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERINFOLOGPROC gl3wGetShaderInfoLog;$/;"	v
gl3wGetShaderInfoLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERINFOLOGPROC gl3wGetShaderInfoLog;$/;"	v
gl3wGetShaderPrecisionFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERPRECISIONFORMATPROC gl3wGetShaderPrecisionFormat;$/;"	v
gl3wGetShaderPrecisionFormat	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERPRECISIONFORMATPROC gl3wGetShaderPrecisionFormat;$/;"	v
gl3wGetShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERSOURCEPROC gl3wGetShaderSource;$/;"	v
gl3wGetShaderSource	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERSOURCEPROC gl3wGetShaderSource;$/;"	v
gl3wGetShaderiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERIVPROC gl3wGetShaderiv;$/;"	v
gl3wGetShaderiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERIVPROC gl3wGetShaderiv;$/;"	v
gl3wGetString	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGPROC gl3wGetString;$/;"	v
gl3wGetString	lib/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGPROC gl3wGetString;$/;"	v
gl3wGetStringi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGIPROC gl3wGetStringi;$/;"	v
gl3wGetStringi	lib/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGIPROC gl3wGetStringi;$/;"	v
gl3wGetSubroutineIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEINDEXPROC gl3wGetSubroutineIndex;$/;"	v
gl3wGetSubroutineIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEINDEXPROC gl3wGetSubroutineIndex;$/;"	v
gl3wGetSubroutineUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC gl3wGetSubroutineUniformLocation;$/;"	v
gl3wGetSubroutineUniformLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC gl3wGetSubroutineUniformLocation;$/;"	v
gl3wGetSynciv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSYNCIVPROC gl3wGetSynciv;$/;"	v
gl3wGetSynciv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSYNCIVPROC gl3wGetSynciv;$/;"	v
gl3wGetTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXIMAGEPROC gl3wGetTexImage;$/;"	v
gl3wGetTexImage	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXIMAGEPROC gl3wGetTexImage;$/;"	v
gl3wGetTexLevelParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERFVPROC gl3wGetTexLevelParameterfv;$/;"	v
gl3wGetTexLevelParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERFVPROC gl3wGetTexLevelParameterfv;$/;"	v
gl3wGetTexLevelParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERIVPROC gl3wGetTexLevelParameteriv;$/;"	v
gl3wGetTexLevelParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERIVPROC gl3wGetTexLevelParameteriv;$/;"	v
gl3wGetTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIIVPROC gl3wGetTexParameterIiv;$/;"	v
gl3wGetTexParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIIVPROC gl3wGetTexParameterIiv;$/;"	v
gl3wGetTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIUIVPROC gl3wGetTexParameterIuiv;$/;"	v
gl3wGetTexParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIUIVPROC gl3wGetTexParameterIuiv;$/;"	v
gl3wGetTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERFVPROC gl3wGetTexParameterfv;$/;"	v
gl3wGetTexParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERFVPROC gl3wGetTexParameterfv;$/;"	v
gl3wGetTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIVPROC gl3wGetTexParameteriv;$/;"	v
gl3wGetTexParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIVPROC gl3wGetTexParameteriv;$/;"	v
gl3wGetTransformFeedbackVarying	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC gl3wGetTransformFeedbackVarying;$/;"	v
gl3wGetTransformFeedbackVarying	lib/gl3w/GL/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC gl3wGetTransformFeedbackVarying;$/;"	v
gl3wGetUniformBlockIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMBLOCKINDEXPROC gl3wGetUniformBlockIndex;$/;"	v
gl3wGetUniformBlockIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMBLOCKINDEXPROC gl3wGetUniformBlockIndex;$/;"	v
gl3wGetUniformIndices	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMINDICESPROC gl3wGetUniformIndices;$/;"	v
gl3wGetUniformIndices	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMINDICESPROC gl3wGetUniformIndices;$/;"	v
gl3wGetUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMLOCATIONPROC gl3wGetUniformLocation;$/;"	v
gl3wGetUniformLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMLOCATIONPROC gl3wGetUniformLocation;$/;"	v
gl3wGetUniformSubroutineuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMSUBROUTINEUIVPROC gl3wGetUniformSubroutineuiv;$/;"	v
gl3wGetUniformSubroutineuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMSUBROUTINEUIVPROC gl3wGetUniformSubroutineuiv;$/;"	v
gl3wGetUniformdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMDVPROC gl3wGetUniformdv;$/;"	v
gl3wGetUniformdv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMDVPROC gl3wGetUniformdv;$/;"	v
gl3wGetUniformfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMFVPROC gl3wGetUniformfv;$/;"	v
gl3wGetUniformfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMFVPROC gl3wGetUniformfv;$/;"	v
gl3wGetUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMIVPROC gl3wGetUniformiv;$/;"	v
gl3wGetUniformiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMIVPROC gl3wGetUniformiv;$/;"	v
gl3wGetUniformuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMUIVPROC gl3wGetUniformuiv;$/;"	v
gl3wGetUniformuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMUIVPROC gl3wGetUniformuiv;$/;"	v
gl3wGetVertexAttribIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIIVPROC gl3wGetVertexAttribIiv;$/;"	v
gl3wGetVertexAttribIiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIIVPROC gl3wGetVertexAttribIiv;$/;"	v
gl3wGetVertexAttribIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIUIVPROC gl3wGetVertexAttribIuiv;$/;"	v
gl3wGetVertexAttribIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIUIVPROC gl3wGetVertexAttribIuiv;$/;"	v
gl3wGetVertexAttribLdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBLDVPROC gl3wGetVertexAttribLdv;$/;"	v
gl3wGetVertexAttribLdv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBLDVPROC gl3wGetVertexAttribLdv;$/;"	v
gl3wGetVertexAttribPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC gl3wGetVertexAttribPointerv;$/;"	v
gl3wGetVertexAttribPointerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC gl3wGetVertexAttribPointerv;$/;"	v
gl3wGetVertexAttribdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBDVPROC gl3wGetVertexAttribdv;$/;"	v
gl3wGetVertexAttribdv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBDVPROC gl3wGetVertexAttribdv;$/;"	v
gl3wGetVertexAttribfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBFVPROC gl3wGetVertexAttribfv;$/;"	v
gl3wGetVertexAttribfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBFVPROC gl3wGetVertexAttribfv;$/;"	v
gl3wGetVertexAttribiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIVPROC gl3wGetVertexAttribiv;$/;"	v
gl3wGetVertexAttribiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIVPROC gl3wGetVertexAttribiv;$/;"	v
gl3wGetnCompressedTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC gl3wGetnCompressedTexImageARB;$/;"	v
gl3wGetnCompressedTexImageARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC gl3wGetnCompressedTexImageARB;$/;"	v
gl3wGetnTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNTEXIMAGEARBPROC gl3wGetnTexImageARB;$/;"	v
gl3wGetnTexImageARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNTEXIMAGEARBPROC gl3wGetnTexImageARB;$/;"	v
gl3wGetnUniformdvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMDVARBPROC gl3wGetnUniformdvARB;$/;"	v
gl3wGetnUniformdvARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMDVARBPROC gl3wGetnUniformdvARB;$/;"	v
gl3wGetnUniformfvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMFVARBPROC gl3wGetnUniformfvARB;$/;"	v
gl3wGetnUniformfvARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMFVARBPROC gl3wGetnUniformfvARB;$/;"	v
gl3wGetnUniformivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMIVARBPROC gl3wGetnUniformivARB;$/;"	v
gl3wGetnUniformivARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMIVARBPROC gl3wGetnUniformivARB;$/;"	v
gl3wGetnUniformuivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMUIVARBPROC gl3wGetnUniformuivARB;$/;"	v
gl3wGetnUniformuivARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMUIVARBPROC gl3wGetnUniformuivARB;$/;"	v
gl3wHint	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLHINTPROC gl3wHint;$/;"	v
gl3wHint	lib/gl3w/GL/gl3w.c	/^PFNGLHINTPROC gl3wHint;$/;"	v
gl3wInit	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^int gl3wInit(void)$/;"	f
gl3wInit	lib/gl3w/GL/gl3w.c	/^int gl3wInit(void)$/;"	f
gl3wInvalidateBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERDATAPROC gl3wInvalidateBufferData;$/;"	v
gl3wInvalidateBufferData	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERDATAPROC gl3wInvalidateBufferData;$/;"	v
gl3wInvalidateBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERSUBDATAPROC gl3wInvalidateBufferSubData;$/;"	v
gl3wInvalidateBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERSUBDATAPROC gl3wInvalidateBufferSubData;$/;"	v
gl3wInvalidateFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEFRAMEBUFFERPROC gl3wInvalidateFramebuffer;$/;"	v
gl3wInvalidateFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEFRAMEBUFFERPROC gl3wInvalidateFramebuffer;$/;"	v
gl3wInvalidateSubFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATESUBFRAMEBUFFERPROC gl3wInvalidateSubFramebuffer;$/;"	v
gl3wInvalidateSubFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATESUBFRAMEBUFFERPROC gl3wInvalidateSubFramebuffer;$/;"	v
gl3wInvalidateTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXIMAGEPROC gl3wInvalidateTexImage;$/;"	v
gl3wInvalidateTexImage	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXIMAGEPROC gl3wInvalidateTexImage;$/;"	v
gl3wInvalidateTexSubImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXSUBIMAGEPROC gl3wInvalidateTexSubImage;$/;"	v
gl3wInvalidateTexSubImage	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXSUBIMAGEPROC gl3wInvalidateTexSubImage;$/;"	v
gl3wIsBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISBUFFERPROC gl3wIsBuffer;$/;"	v
gl3wIsBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLISBUFFERPROC gl3wIsBuffer;$/;"	v
gl3wIsEnabled	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISENABLEDPROC gl3wIsEnabled;$/;"	v
gl3wIsEnabled	lib/gl3w/GL/gl3w.c	/^PFNGLISENABLEDPROC gl3wIsEnabled;$/;"	v
gl3wIsEnabledi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISENABLEDIPROC gl3wIsEnabledi;$/;"	v
gl3wIsEnabledi	lib/gl3w/GL/gl3w.c	/^PFNGLISENABLEDIPROC gl3wIsEnabledi;$/;"	v
gl3wIsFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISFRAMEBUFFERPROC gl3wIsFramebuffer;$/;"	v
gl3wIsFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLISFRAMEBUFFERPROC gl3wIsFramebuffer;$/;"	v
gl3wIsNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISNAMEDSTRINGARBPROC gl3wIsNamedStringARB;$/;"	v
gl3wIsNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLISNAMEDSTRINGARBPROC gl3wIsNamedStringARB;$/;"	v
gl3wIsProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPROC gl3wIsProgram;$/;"	v
gl3wIsProgram	lib/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPROC gl3wIsProgram;$/;"	v
gl3wIsProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPIPELINEPROC gl3wIsProgramPipeline;$/;"	v
gl3wIsProgramPipeline	lib/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPIPELINEPROC gl3wIsProgramPipeline;$/;"	v
gl3wIsQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISQUERYPROC gl3wIsQuery;$/;"	v
gl3wIsQuery	lib/gl3w/GL/gl3w.c	/^PFNGLISQUERYPROC gl3wIsQuery;$/;"	v
gl3wIsRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISRENDERBUFFERPROC gl3wIsRenderbuffer;$/;"	v
gl3wIsRenderbuffer	lib/gl3w/GL/gl3w.c	/^PFNGLISRENDERBUFFERPROC gl3wIsRenderbuffer;$/;"	v
gl3wIsSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISSAMPLERPROC gl3wIsSampler;$/;"	v
gl3wIsSampler	lib/gl3w/GL/gl3w.c	/^PFNGLISSAMPLERPROC gl3wIsSampler;$/;"	v
gl3wIsShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISSHADERPROC gl3wIsShader;$/;"	v
gl3wIsShader	lib/gl3w/GL/gl3w.c	/^PFNGLISSHADERPROC gl3wIsShader;$/;"	v
gl3wIsSupported	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^int gl3wIsSupported(int major, int minor)$/;"	f
gl3wIsSupported	lib/gl3w/GL/gl3w.c	/^int gl3wIsSupported(int major, int minor)$/;"	f
gl3wIsSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISSYNCPROC gl3wIsSync;$/;"	v
gl3wIsSync	lib/gl3w/GL/gl3w.c	/^PFNGLISSYNCPROC gl3wIsSync;$/;"	v
gl3wIsTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISTEXTUREPROC gl3wIsTexture;$/;"	v
gl3wIsTexture	lib/gl3w/GL/gl3w.c	/^PFNGLISTEXTUREPROC gl3wIsTexture;$/;"	v
gl3wIsTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISTRANSFORMFEEDBACKPROC gl3wIsTransformFeedback;$/;"	v
gl3wIsTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLISTRANSFORMFEEDBACKPROC gl3wIsTransformFeedback;$/;"	v
gl3wIsVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISVERTEXARRAYPROC gl3wIsVertexArray;$/;"	v
gl3wIsVertexArray	lib/gl3w/GL/gl3w.c	/^PFNGLISVERTEXARRAYPROC gl3wIsVertexArray;$/;"	v
gl3wLineWidth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLLINEWIDTHPROC gl3wLineWidth;$/;"	v
gl3wLineWidth	lib/gl3w/GL/gl3w.c	/^PFNGLLINEWIDTHPROC gl3wLineWidth;$/;"	v
gl3wLinkProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLLINKPROGRAMPROC gl3wLinkProgram;$/;"	v
gl3wLinkProgram	lib/gl3w/GL/gl3w.c	/^PFNGLLINKPROGRAMPROC gl3wLinkProgram;$/;"	v
gl3wLogicOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLLOGICOPPROC gl3wLogicOp;$/;"	v
gl3wLogicOp	lib/gl3w/GL/gl3w.c	/^PFNGLLOGICOPPROC gl3wLogicOp;$/;"	v
gl3wMapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERPROC gl3wMapBuffer;$/;"	v
gl3wMapBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERPROC gl3wMapBuffer;$/;"	v
gl3wMapBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERRANGEPROC gl3wMapBufferRange;$/;"	v
gl3wMapBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERRANGEPROC gl3wMapBufferRange;$/;"	v
gl3wMemoryBarrier	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMEMORYBARRIERPROC gl3wMemoryBarrier;$/;"	v
gl3wMemoryBarrier	lib/gl3w/GL/gl3w.c	/^PFNGLMEMORYBARRIERPROC gl3wMemoryBarrier;$/;"	v
gl3wMinSampleShading	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGPROC gl3wMinSampleShading;$/;"	v
gl3wMinSampleShading	lib/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGPROC gl3wMinSampleShading;$/;"	v
gl3wMinSampleShadingARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGARBPROC gl3wMinSampleShadingARB;$/;"	v
gl3wMinSampleShadingARB	lib/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGARBPROC gl3wMinSampleShadingARB;$/;"	v
gl3wMultiDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSPROC gl3wMultiDrawArrays;$/;"	v
gl3wMultiDrawArrays	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSPROC gl3wMultiDrawArrays;$/;"	v
gl3wMultiDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSINDIRECTPROC gl3wMultiDrawArraysIndirect;$/;"	v
gl3wMultiDrawArraysIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSINDIRECTPROC gl3wMultiDrawArraysIndirect;$/;"	v
gl3wMultiDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSPROC gl3wMultiDrawElements;$/;"	v
gl3wMultiDrawElements	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSPROC gl3wMultiDrawElements;$/;"	v
gl3wMultiDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC gl3wMultiDrawElementsBaseVertex;$/;"	v
gl3wMultiDrawElementsBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC gl3wMultiDrawElementsBaseVertex;$/;"	v
gl3wMultiDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSINDIRECTPROC gl3wMultiDrawElementsIndirect;$/;"	v
gl3wMultiDrawElementsIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSINDIRECTPROC gl3wMultiDrawElementsIndirect;$/;"	v
gl3wMultiTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIPROC gl3wMultiTexCoordP1ui;$/;"	v
gl3wMultiTexCoordP1ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIPROC gl3wMultiTexCoordP1ui;$/;"	v
gl3wMultiTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIVPROC gl3wMultiTexCoordP1uiv;$/;"	v
gl3wMultiTexCoordP1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIVPROC gl3wMultiTexCoordP1uiv;$/;"	v
gl3wMultiTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIPROC gl3wMultiTexCoordP2ui;$/;"	v
gl3wMultiTexCoordP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIPROC gl3wMultiTexCoordP2ui;$/;"	v
gl3wMultiTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIVPROC gl3wMultiTexCoordP2uiv;$/;"	v
gl3wMultiTexCoordP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIVPROC gl3wMultiTexCoordP2uiv;$/;"	v
gl3wMultiTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIPROC gl3wMultiTexCoordP3ui;$/;"	v
gl3wMultiTexCoordP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIPROC gl3wMultiTexCoordP3ui;$/;"	v
gl3wMultiTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIVPROC gl3wMultiTexCoordP3uiv;$/;"	v
gl3wMultiTexCoordP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIVPROC gl3wMultiTexCoordP3uiv;$/;"	v
gl3wMultiTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIPROC gl3wMultiTexCoordP4ui;$/;"	v
gl3wMultiTexCoordP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIPROC gl3wMultiTexCoordP4ui;$/;"	v
gl3wMultiTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIVPROC gl3wMultiTexCoordP4uiv;$/;"	v
gl3wMultiTexCoordP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIVPROC gl3wMultiTexCoordP4uiv;$/;"	v
gl3wNamedFramebufferParameteriEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC gl3wNamedFramebufferParameteriEXT;$/;"	v
gl3wNamedFramebufferParameteriEXT	lib/gl3w/GL/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC gl3wNamedFramebufferParameteriEXT;$/;"	v
gl3wNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNAMEDSTRINGARBPROC gl3wNamedStringARB;$/;"	v
gl3wNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLNAMEDSTRINGARBPROC gl3wNamedStringARB;$/;"	v
gl3wNormalP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIPROC gl3wNormalP3ui;$/;"	v
gl3wNormalP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIPROC gl3wNormalP3ui;$/;"	v
gl3wNormalP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIVPROC gl3wNormalP3uiv;$/;"	v
gl3wNormalP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIVPROC gl3wNormalP3uiv;$/;"	v
gl3wObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLOBJECTLABELPROC gl3wObjectLabel;$/;"	v
gl3wObjectLabel	lib/gl3w/GL/gl3w.c	/^PFNGLOBJECTLABELPROC gl3wObjectLabel;$/;"	v
gl3wObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLOBJECTPTRLABELPROC gl3wObjectPtrLabel;$/;"	v
gl3wObjectPtrLabel	lib/gl3w/GL/gl3w.c	/^PFNGLOBJECTPTRLABELPROC gl3wObjectPtrLabel;$/;"	v
gl3wPatchParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERFVPROC gl3wPatchParameterfv;$/;"	v
gl3wPatchParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERFVPROC gl3wPatchParameterfv;$/;"	v
gl3wPatchParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERIPROC gl3wPatchParameteri;$/;"	v
gl3wPatchParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERIPROC gl3wPatchParameteri;$/;"	v
gl3wPauseTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPAUSETRANSFORMFEEDBACKPROC gl3wPauseTransformFeedback;$/;"	v
gl3wPauseTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLPAUSETRANSFORMFEEDBACKPROC gl3wPauseTransformFeedback;$/;"	v
gl3wPixelStoref	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREFPROC gl3wPixelStoref;$/;"	v
gl3wPixelStoref	lib/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREFPROC gl3wPixelStoref;$/;"	v
gl3wPixelStorei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREIPROC gl3wPixelStorei;$/;"	v
gl3wPixelStorei	lib/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREIPROC gl3wPixelStorei;$/;"	v
gl3wPointParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFPROC gl3wPointParameterf;$/;"	v
gl3wPointParameterf	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFPROC gl3wPointParameterf;$/;"	v
gl3wPointParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFVPROC gl3wPointParameterfv;$/;"	v
gl3wPointParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFVPROC gl3wPointParameterfv;$/;"	v
gl3wPointParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIPROC gl3wPointParameteri;$/;"	v
gl3wPointParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIPROC gl3wPointParameteri;$/;"	v
gl3wPointParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIVPROC gl3wPointParameteriv;$/;"	v
gl3wPointParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIVPROC gl3wPointParameteriv;$/;"	v
gl3wPointSize	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTSIZEPROC gl3wPointSize;$/;"	v
gl3wPointSize	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTSIZEPROC gl3wPointSize;$/;"	v
gl3wPolygonMode	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOLYGONMODEPROC gl3wPolygonMode;$/;"	v
gl3wPolygonMode	lib/gl3w/GL/gl3w.c	/^PFNGLPOLYGONMODEPROC gl3wPolygonMode;$/;"	v
gl3wPolygonOffset	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOLYGONOFFSETPROC gl3wPolygonOffset;$/;"	v
gl3wPolygonOffset	lib/gl3w/GL/gl3w.c	/^PFNGLPOLYGONOFFSETPROC gl3wPolygonOffset;$/;"	v
gl3wPopDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOPDEBUGGROUPPROC gl3wPopDebugGroup;$/;"	v
gl3wPopDebugGroup	lib/gl3w/GL/gl3w.c	/^PFNGLPOPDEBUGGROUPPROC gl3wPopDebugGroup;$/;"	v
gl3wPrimitiveRestartIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPRIMITIVERESTARTINDEXPROC gl3wPrimitiveRestartIndex;$/;"	v
gl3wPrimitiveRestartIndex	lib/gl3w/GL/gl3w.c	/^PFNGLPRIMITIVERESTARTINDEXPROC gl3wPrimitiveRestartIndex;$/;"	v
gl3wProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMBINARYPROC gl3wProgramBinary;$/;"	v
gl3wProgramBinary	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMBINARYPROC gl3wProgramBinary;$/;"	v
gl3wProgramParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMPARAMETERIPROC gl3wProgramParameteri;$/;"	v
gl3wProgramParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMPARAMETERIPROC gl3wProgramParameteri;$/;"	v
gl3wProgramUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DPROC gl3wProgramUniform1d;$/;"	v
gl3wProgramUniform1d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DPROC gl3wProgramUniform1d;$/;"	v
gl3wProgramUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DVPROC gl3wProgramUniform1dv;$/;"	v
gl3wProgramUniform1dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DVPROC gl3wProgramUniform1dv;$/;"	v
gl3wProgramUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FPROC gl3wProgramUniform1f;$/;"	v
gl3wProgramUniform1f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FPROC gl3wProgramUniform1f;$/;"	v
gl3wProgramUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FVPROC gl3wProgramUniform1fv;$/;"	v
gl3wProgramUniform1fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FVPROC gl3wProgramUniform1fv;$/;"	v
gl3wProgramUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IPROC gl3wProgramUniform1i;$/;"	v
gl3wProgramUniform1i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IPROC gl3wProgramUniform1i;$/;"	v
gl3wProgramUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IVPROC gl3wProgramUniform1iv;$/;"	v
gl3wProgramUniform1iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IVPROC gl3wProgramUniform1iv;$/;"	v
gl3wProgramUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIPROC gl3wProgramUniform1ui;$/;"	v
gl3wProgramUniform1ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIPROC gl3wProgramUniform1ui;$/;"	v
gl3wProgramUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIVPROC gl3wProgramUniform1uiv;$/;"	v
gl3wProgramUniform1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIVPROC gl3wProgramUniform1uiv;$/;"	v
gl3wProgramUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DPROC gl3wProgramUniform2d;$/;"	v
gl3wProgramUniform2d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DPROC gl3wProgramUniform2d;$/;"	v
gl3wProgramUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DVPROC gl3wProgramUniform2dv;$/;"	v
gl3wProgramUniform2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DVPROC gl3wProgramUniform2dv;$/;"	v
gl3wProgramUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FPROC gl3wProgramUniform2f;$/;"	v
gl3wProgramUniform2f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FPROC gl3wProgramUniform2f;$/;"	v
gl3wProgramUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FVPROC gl3wProgramUniform2fv;$/;"	v
gl3wProgramUniform2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FVPROC gl3wProgramUniform2fv;$/;"	v
gl3wProgramUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IPROC gl3wProgramUniform2i;$/;"	v
gl3wProgramUniform2i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IPROC gl3wProgramUniform2i;$/;"	v
gl3wProgramUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IVPROC gl3wProgramUniform2iv;$/;"	v
gl3wProgramUniform2iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IVPROC gl3wProgramUniform2iv;$/;"	v
gl3wProgramUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIPROC gl3wProgramUniform2ui;$/;"	v
gl3wProgramUniform2ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIPROC gl3wProgramUniform2ui;$/;"	v
gl3wProgramUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIVPROC gl3wProgramUniform2uiv;$/;"	v
gl3wProgramUniform2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIVPROC gl3wProgramUniform2uiv;$/;"	v
gl3wProgramUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DPROC gl3wProgramUniform3d;$/;"	v
gl3wProgramUniform3d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DPROC gl3wProgramUniform3d;$/;"	v
gl3wProgramUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DVPROC gl3wProgramUniform3dv;$/;"	v
gl3wProgramUniform3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DVPROC gl3wProgramUniform3dv;$/;"	v
gl3wProgramUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FPROC gl3wProgramUniform3f;$/;"	v
gl3wProgramUniform3f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FPROC gl3wProgramUniform3f;$/;"	v
gl3wProgramUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FVPROC gl3wProgramUniform3fv;$/;"	v
gl3wProgramUniform3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FVPROC gl3wProgramUniform3fv;$/;"	v
gl3wProgramUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IPROC gl3wProgramUniform3i;$/;"	v
gl3wProgramUniform3i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IPROC gl3wProgramUniform3i;$/;"	v
gl3wProgramUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IVPROC gl3wProgramUniform3iv;$/;"	v
gl3wProgramUniform3iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IVPROC gl3wProgramUniform3iv;$/;"	v
gl3wProgramUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIPROC gl3wProgramUniform3ui;$/;"	v
gl3wProgramUniform3ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIPROC gl3wProgramUniform3ui;$/;"	v
gl3wProgramUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIVPROC gl3wProgramUniform3uiv;$/;"	v
gl3wProgramUniform3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIVPROC gl3wProgramUniform3uiv;$/;"	v
gl3wProgramUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DPROC gl3wProgramUniform4d;$/;"	v
gl3wProgramUniform4d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DPROC gl3wProgramUniform4d;$/;"	v
gl3wProgramUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DVPROC gl3wProgramUniform4dv;$/;"	v
gl3wProgramUniform4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DVPROC gl3wProgramUniform4dv;$/;"	v
gl3wProgramUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FPROC gl3wProgramUniform4f;$/;"	v
gl3wProgramUniform4f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FPROC gl3wProgramUniform4f;$/;"	v
gl3wProgramUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FVPROC gl3wProgramUniform4fv;$/;"	v
gl3wProgramUniform4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FVPROC gl3wProgramUniform4fv;$/;"	v
gl3wProgramUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IPROC gl3wProgramUniform4i;$/;"	v
gl3wProgramUniform4i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IPROC gl3wProgramUniform4i;$/;"	v
gl3wProgramUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IVPROC gl3wProgramUniform4iv;$/;"	v
gl3wProgramUniform4iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IVPROC gl3wProgramUniform4iv;$/;"	v
gl3wProgramUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIPROC gl3wProgramUniform4ui;$/;"	v
gl3wProgramUniform4ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIPROC gl3wProgramUniform4ui;$/;"	v
gl3wProgramUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIVPROC gl3wProgramUniform4uiv;$/;"	v
gl3wProgramUniform4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIVPROC gl3wProgramUniform4uiv;$/;"	v
gl3wProgramUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2DVPROC gl3wProgramUniformMatrix2dv;$/;"	v
gl3wProgramUniformMatrix2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2DVPROC gl3wProgramUniformMatrix2dv;$/;"	v
gl3wProgramUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2FVPROC gl3wProgramUniformMatrix2fv;$/;"	v
gl3wProgramUniformMatrix2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2FVPROC gl3wProgramUniformMatrix2fv;$/;"	v
gl3wProgramUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC gl3wProgramUniformMatrix2x3dv;$/;"	v
gl3wProgramUniformMatrix2x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC gl3wProgramUniformMatrix2x3dv;$/;"	v
gl3wProgramUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC gl3wProgramUniformMatrix2x3fv;$/;"	v
gl3wProgramUniformMatrix2x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC gl3wProgramUniformMatrix2x3fv;$/;"	v
gl3wProgramUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC gl3wProgramUniformMatrix2x4dv;$/;"	v
gl3wProgramUniformMatrix2x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC gl3wProgramUniformMatrix2x4dv;$/;"	v
gl3wProgramUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC gl3wProgramUniformMatrix2x4fv;$/;"	v
gl3wProgramUniformMatrix2x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC gl3wProgramUniformMatrix2x4fv;$/;"	v
gl3wProgramUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3DVPROC gl3wProgramUniformMatrix3dv;$/;"	v
gl3wProgramUniformMatrix3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3DVPROC gl3wProgramUniformMatrix3dv;$/;"	v
gl3wProgramUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3FVPROC gl3wProgramUniformMatrix3fv;$/;"	v
gl3wProgramUniformMatrix3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3FVPROC gl3wProgramUniformMatrix3fv;$/;"	v
gl3wProgramUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC gl3wProgramUniformMatrix3x2dv;$/;"	v
gl3wProgramUniformMatrix3x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC gl3wProgramUniformMatrix3x2dv;$/;"	v
gl3wProgramUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC gl3wProgramUniformMatrix3x2fv;$/;"	v
gl3wProgramUniformMatrix3x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC gl3wProgramUniformMatrix3x2fv;$/;"	v
gl3wProgramUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC gl3wProgramUniformMatrix3x4dv;$/;"	v
gl3wProgramUniformMatrix3x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC gl3wProgramUniformMatrix3x4dv;$/;"	v
gl3wProgramUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC gl3wProgramUniformMatrix3x4fv;$/;"	v
gl3wProgramUniformMatrix3x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC gl3wProgramUniformMatrix3x4fv;$/;"	v
gl3wProgramUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4DVPROC gl3wProgramUniformMatrix4dv;$/;"	v
gl3wProgramUniformMatrix4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4DVPROC gl3wProgramUniformMatrix4dv;$/;"	v
gl3wProgramUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4FVPROC gl3wProgramUniformMatrix4fv;$/;"	v
gl3wProgramUniformMatrix4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4FVPROC gl3wProgramUniformMatrix4fv;$/;"	v
gl3wProgramUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC gl3wProgramUniformMatrix4x2dv;$/;"	v
gl3wProgramUniformMatrix4x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC gl3wProgramUniformMatrix4x2dv;$/;"	v
gl3wProgramUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC gl3wProgramUniformMatrix4x2fv;$/;"	v
gl3wProgramUniformMatrix4x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC gl3wProgramUniformMatrix4x2fv;$/;"	v
gl3wProgramUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC gl3wProgramUniformMatrix4x3dv;$/;"	v
gl3wProgramUniformMatrix4x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC gl3wProgramUniformMatrix4x3dv;$/;"	v
gl3wProgramUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC gl3wProgramUniformMatrix4x3fv;$/;"	v
gl3wProgramUniformMatrix4x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC gl3wProgramUniformMatrix4x3fv;$/;"	v
gl3wProvokingVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROVOKINGVERTEXPROC gl3wProvokingVertex;$/;"	v
gl3wProvokingVertex	lib/gl3w/GL/gl3w.c	/^PFNGLPROVOKINGVERTEXPROC gl3wProvokingVertex;$/;"	v
gl3wPushDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPUSHDEBUGGROUPPROC gl3wPushDebugGroup;$/;"	v
gl3wPushDebugGroup	lib/gl3w/GL/gl3w.c	/^PFNGLPUSHDEBUGGROUPPROC gl3wPushDebugGroup;$/;"	v
gl3wQueryCounter	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLQUERYCOUNTERPROC gl3wQueryCounter;$/;"	v
gl3wQueryCounter	lib/gl3w/GL/gl3w.c	/^PFNGLQUERYCOUNTERPROC gl3wQueryCounter;$/;"	v
gl3wReadBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLREADBUFFERPROC gl3wReadBuffer;$/;"	v
gl3wReadBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLREADBUFFERPROC gl3wReadBuffer;$/;"	v
gl3wReadPixels	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLREADPIXELSPROC gl3wReadPixels;$/;"	v
gl3wReadPixels	lib/gl3w/GL/gl3w.c	/^PFNGLREADPIXELSPROC gl3wReadPixels;$/;"	v
gl3wReadnPixelsARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLREADNPIXELSARBPROC gl3wReadnPixelsARB;$/;"	v
gl3wReadnPixelsARB	lib/gl3w/GL/gl3w.c	/^PFNGLREADNPIXELSARBPROC gl3wReadnPixelsARB;$/;"	v
gl3wReleaseShaderCompiler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRELEASESHADERCOMPILERPROC gl3wReleaseShaderCompiler;$/;"	v
gl3wReleaseShaderCompiler	lib/gl3w/GL/gl3w.c	/^PFNGLRELEASESHADERCOMPILERPROC gl3wReleaseShaderCompiler;$/;"	v
gl3wRenderbufferStorage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEPROC gl3wRenderbufferStorage;$/;"	v
gl3wRenderbufferStorage	lib/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEPROC gl3wRenderbufferStorage;$/;"	v
gl3wRenderbufferStorageMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC gl3wRenderbufferStorageMultisample;$/;"	v
gl3wRenderbufferStorageMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC gl3wRenderbufferStorageMultisample;$/;"	v
gl3wResumeTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRESUMETRANSFORMFEEDBACKPROC gl3wResumeTransformFeedback;$/;"	v
gl3wResumeTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLRESUMETRANSFORMFEEDBACKPROC gl3wResumeTransformFeedback;$/;"	v
gl3wSampleCoverage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLECOVERAGEPROC gl3wSampleCoverage;$/;"	v
gl3wSampleCoverage	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLECOVERAGEPROC gl3wSampleCoverage;$/;"	v
gl3wSampleMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLEMASKIPROC gl3wSampleMaski;$/;"	v
gl3wSampleMaski	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLEMASKIPROC gl3wSampleMaski;$/;"	v
gl3wSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIIVPROC gl3wSamplerParameterIiv;$/;"	v
gl3wSamplerParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIIVPROC gl3wSamplerParameterIiv;$/;"	v
gl3wSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIUIVPROC gl3wSamplerParameterIuiv;$/;"	v
gl3wSamplerParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIUIVPROC gl3wSamplerParameterIuiv;$/;"	v
gl3wSamplerParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFPROC gl3wSamplerParameterf;$/;"	v
gl3wSamplerParameterf	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFPROC gl3wSamplerParameterf;$/;"	v
gl3wSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFVPROC gl3wSamplerParameterfv;$/;"	v
gl3wSamplerParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFVPROC gl3wSamplerParameterfv;$/;"	v
gl3wSamplerParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIPROC gl3wSamplerParameteri;$/;"	v
gl3wSamplerParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIPROC gl3wSamplerParameteri;$/;"	v
gl3wSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIVPROC gl3wSamplerParameteriv;$/;"	v
gl3wSamplerParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIVPROC gl3wSamplerParameteriv;$/;"	v
gl3wScissor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORPROC gl3wScissor;$/;"	v
gl3wScissor	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORPROC gl3wScissor;$/;"	v
gl3wScissorArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORARRAYVPROC gl3wScissorArrayv;$/;"	v
gl3wScissorArrayv	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORARRAYVPROC gl3wScissorArrayv;$/;"	v
gl3wScissorIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDPROC gl3wScissorIndexed;$/;"	v
gl3wScissorIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDPROC gl3wScissorIndexed;$/;"	v
gl3wScissorIndexedv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDVPROC gl3wScissorIndexedv;$/;"	v
gl3wScissorIndexedv	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDVPROC gl3wScissorIndexedv;$/;"	v
gl3wSecondaryColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIPROC gl3wSecondaryColorP3ui;$/;"	v
gl3wSecondaryColorP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIPROC gl3wSecondaryColorP3ui;$/;"	v
gl3wSecondaryColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIVPROC gl3wSecondaryColorP3uiv;$/;"	v
gl3wSecondaryColorP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIVPROC gl3wSecondaryColorP3uiv;$/;"	v
gl3wShaderBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSHADERBINARYPROC gl3wShaderBinary;$/;"	v
gl3wShaderBinary	lib/gl3w/GL/gl3w.c	/^PFNGLSHADERBINARYPROC gl3wShaderBinary;$/;"	v
gl3wShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSHADERSOURCEPROC gl3wShaderSource;$/;"	v
gl3wShaderSource	lib/gl3w/GL/gl3w.c	/^PFNGLSHADERSOURCEPROC gl3wShaderSource;$/;"	v
gl3wShaderStorageBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSHADERSTORAGEBLOCKBINDINGPROC gl3wShaderStorageBlockBinding;$/;"	v
gl3wShaderStorageBlockBinding	lib/gl3w/GL/gl3w.c	/^PFNGLSHADERSTORAGEBLOCKBINDINGPROC gl3wShaderStorageBlockBinding;$/;"	v
gl3wStencilFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCPROC gl3wStencilFunc;$/;"	v
gl3wStencilFunc	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCPROC gl3wStencilFunc;$/;"	v
gl3wStencilFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCSEPARATEPROC gl3wStencilFuncSeparate;$/;"	v
gl3wStencilFuncSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCSEPARATEPROC gl3wStencilFuncSeparate;$/;"	v
gl3wStencilMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKPROC gl3wStencilMask;$/;"	v
gl3wStencilMask	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKPROC gl3wStencilMask;$/;"	v
gl3wStencilMaskSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKSEPARATEPROC gl3wStencilMaskSeparate;$/;"	v
gl3wStencilMaskSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKSEPARATEPROC gl3wStencilMaskSeparate;$/;"	v
gl3wStencilOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPPROC gl3wStencilOp;$/;"	v
gl3wStencilOp	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPPROC gl3wStencilOp;$/;"	v
gl3wStencilOpSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPSEPARATEPROC gl3wStencilOpSeparate;$/;"	v
gl3wStencilOpSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPSEPARATEPROC gl3wStencilOpSeparate;$/;"	v
gl3wTexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERPROC gl3wTexBuffer;$/;"	v
gl3wTexBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERPROC gl3wTexBuffer;$/;"	v
gl3wTexBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERRANGEPROC gl3wTexBufferRange;$/;"	v
gl3wTexBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERRANGEPROC gl3wTexBufferRange;$/;"	v
gl3wTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIPROC gl3wTexCoordP1ui;$/;"	v
gl3wTexCoordP1ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIPROC gl3wTexCoordP1ui;$/;"	v
gl3wTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIVPROC gl3wTexCoordP1uiv;$/;"	v
gl3wTexCoordP1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIVPROC gl3wTexCoordP1uiv;$/;"	v
gl3wTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIPROC gl3wTexCoordP2ui;$/;"	v
gl3wTexCoordP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIPROC gl3wTexCoordP2ui;$/;"	v
gl3wTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIVPROC gl3wTexCoordP2uiv;$/;"	v
gl3wTexCoordP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIVPROC gl3wTexCoordP2uiv;$/;"	v
gl3wTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIPROC gl3wTexCoordP3ui;$/;"	v
gl3wTexCoordP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIPROC gl3wTexCoordP3ui;$/;"	v
gl3wTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIVPROC gl3wTexCoordP3uiv;$/;"	v
gl3wTexCoordP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIVPROC gl3wTexCoordP3uiv;$/;"	v
gl3wTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIPROC gl3wTexCoordP4ui;$/;"	v
gl3wTexCoordP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIPROC gl3wTexCoordP4ui;$/;"	v
gl3wTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIVPROC gl3wTexCoordP4uiv;$/;"	v
gl3wTexCoordP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIVPROC gl3wTexCoordP4uiv;$/;"	v
gl3wTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE1DPROC gl3wTexImage1D;$/;"	v
gl3wTexImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE1DPROC gl3wTexImage1D;$/;"	v
gl3wTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DPROC gl3wTexImage2D;$/;"	v
gl3wTexImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DPROC gl3wTexImage2D;$/;"	v
gl3wTexImage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC gl3wTexImage2DMultisample;$/;"	v
gl3wTexImage2DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC gl3wTexImage2DMultisample;$/;"	v
gl3wTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DPROC gl3wTexImage3D;$/;"	v
gl3wTexImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DPROC gl3wTexImage3D;$/;"	v
gl3wTexImage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC gl3wTexImage3DMultisample;$/;"	v
gl3wTexImage3DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC gl3wTexImage3DMultisample;$/;"	v
gl3wTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIIVPROC gl3wTexParameterIiv;$/;"	v
gl3wTexParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIIVPROC gl3wTexParameterIiv;$/;"	v
gl3wTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIUIVPROC gl3wTexParameterIuiv;$/;"	v
gl3wTexParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIUIVPROC gl3wTexParameterIuiv;$/;"	v
gl3wTexParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFPROC gl3wTexParameterf;$/;"	v
gl3wTexParameterf	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFPROC gl3wTexParameterf;$/;"	v
gl3wTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFVPROC gl3wTexParameterfv;$/;"	v
gl3wTexParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFVPROC gl3wTexParameterfv;$/;"	v
gl3wTexParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIPROC gl3wTexParameteri;$/;"	v
gl3wTexParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIPROC gl3wTexParameteri;$/;"	v
gl3wTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIVPROC gl3wTexParameteriv;$/;"	v
gl3wTexParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIVPROC gl3wTexParameteriv;$/;"	v
gl3wTexStorage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE1DPROC gl3wTexStorage1D;$/;"	v
gl3wTexStorage1D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE1DPROC gl3wTexStorage1D;$/;"	v
gl3wTexStorage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DPROC gl3wTexStorage2D;$/;"	v
gl3wTexStorage2D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DPROC gl3wTexStorage2D;$/;"	v
gl3wTexStorage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DMULTISAMPLEPROC gl3wTexStorage2DMultisample;$/;"	v
gl3wTexStorage2DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DMULTISAMPLEPROC gl3wTexStorage2DMultisample;$/;"	v
gl3wTexStorage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DPROC gl3wTexStorage3D;$/;"	v
gl3wTexStorage3D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DPROC gl3wTexStorage3D;$/;"	v
gl3wTexStorage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DMULTISAMPLEPROC gl3wTexStorage3DMultisample;$/;"	v
gl3wTexStorage3DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DMULTISAMPLEPROC gl3wTexStorage3DMultisample;$/;"	v
gl3wTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE1DPROC gl3wTexSubImage1D;$/;"	v
gl3wTexSubImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE1DPROC gl3wTexSubImage1D;$/;"	v
gl3wTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE2DPROC gl3wTexSubImage2D;$/;"	v
gl3wTexSubImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE2DPROC gl3wTexSubImage2D;$/;"	v
gl3wTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE3DPROC gl3wTexSubImage3D;$/;"	v
gl3wTexSubImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE3DPROC gl3wTexSubImage3D;$/;"	v
gl3wTextureBufferRangeEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTUREBUFFERRANGEEXTPROC gl3wTextureBufferRangeEXT;$/;"	v
gl3wTextureBufferRangeEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTUREBUFFERRANGEEXTPROC gl3wTextureBufferRangeEXT;$/;"	v
gl3wTextureStorage1DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE1DEXTPROC gl3wTextureStorage1DEXT;$/;"	v
gl3wTextureStorage1DEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE1DEXTPROC gl3wTextureStorage1DEXT;$/;"	v
gl3wTextureStorage2DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DEXTPROC gl3wTextureStorage2DEXT;$/;"	v
gl3wTextureStorage2DEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DEXTPROC gl3wTextureStorage2DEXT;$/;"	v
gl3wTextureStorage2DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC gl3wTextureStorage2DMultisampleEXT;$/;"	v
gl3wTextureStorage2DMultisampleEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC gl3wTextureStorage2DMultisampleEXT;$/;"	v
gl3wTextureStorage3DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DEXTPROC gl3wTextureStorage3DEXT;$/;"	v
gl3wTextureStorage3DEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DEXTPROC gl3wTextureStorage3DEXT;$/;"	v
gl3wTextureStorage3DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC gl3wTextureStorage3DMultisampleEXT;$/;"	v
gl3wTextureStorage3DMultisampleEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC gl3wTextureStorage3DMultisampleEXT;$/;"	v
gl3wTextureView	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTUREVIEWPROC gl3wTextureView;$/;"	v
gl3wTextureView	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTUREVIEWPROC gl3wTextureView;$/;"	v
gl3wTransformFeedbackVaryings	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC gl3wTransformFeedbackVaryings;$/;"	v
gl3wTransformFeedbackVaryings	lib/gl3w/GL/gl3w.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC gl3wTransformFeedbackVaryings;$/;"	v
gl3wUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DPROC gl3wUniform1d;$/;"	v
gl3wUniform1d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DPROC gl3wUniform1d;$/;"	v
gl3wUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DVPROC gl3wUniform1dv;$/;"	v
gl3wUniform1dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DVPROC gl3wUniform1dv;$/;"	v
gl3wUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FPROC gl3wUniform1f;$/;"	v
gl3wUniform1f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FPROC gl3wUniform1f;$/;"	v
gl3wUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FVPROC gl3wUniform1fv;$/;"	v
gl3wUniform1fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FVPROC gl3wUniform1fv;$/;"	v
gl3wUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IPROC gl3wUniform1i;$/;"	v
gl3wUniform1i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IPROC gl3wUniform1i;$/;"	v
gl3wUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IVPROC gl3wUniform1iv;$/;"	v
gl3wUniform1iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IVPROC gl3wUniform1iv;$/;"	v
gl3wUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIPROC gl3wUniform1ui;$/;"	v
gl3wUniform1ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIPROC gl3wUniform1ui;$/;"	v
gl3wUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIVPROC gl3wUniform1uiv;$/;"	v
gl3wUniform1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIVPROC gl3wUniform1uiv;$/;"	v
gl3wUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DPROC gl3wUniform2d;$/;"	v
gl3wUniform2d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DPROC gl3wUniform2d;$/;"	v
gl3wUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DVPROC gl3wUniform2dv;$/;"	v
gl3wUniform2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DVPROC gl3wUniform2dv;$/;"	v
gl3wUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FPROC gl3wUniform2f;$/;"	v
gl3wUniform2f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FPROC gl3wUniform2f;$/;"	v
gl3wUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FVPROC gl3wUniform2fv;$/;"	v
gl3wUniform2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FVPROC gl3wUniform2fv;$/;"	v
gl3wUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IPROC gl3wUniform2i;$/;"	v
gl3wUniform2i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IPROC gl3wUniform2i;$/;"	v
gl3wUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IVPROC gl3wUniform2iv;$/;"	v
gl3wUniform2iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IVPROC gl3wUniform2iv;$/;"	v
gl3wUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIPROC gl3wUniform2ui;$/;"	v
gl3wUniform2ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIPROC gl3wUniform2ui;$/;"	v
gl3wUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIVPROC gl3wUniform2uiv;$/;"	v
gl3wUniform2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIVPROC gl3wUniform2uiv;$/;"	v
gl3wUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DPROC gl3wUniform3d;$/;"	v
gl3wUniform3d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DPROC gl3wUniform3d;$/;"	v
gl3wUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DVPROC gl3wUniform3dv;$/;"	v
gl3wUniform3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DVPROC gl3wUniform3dv;$/;"	v
gl3wUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FPROC gl3wUniform3f;$/;"	v
gl3wUniform3f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FPROC gl3wUniform3f;$/;"	v
gl3wUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FVPROC gl3wUniform3fv;$/;"	v
gl3wUniform3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FVPROC gl3wUniform3fv;$/;"	v
gl3wUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IPROC gl3wUniform3i;$/;"	v
gl3wUniform3i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IPROC gl3wUniform3i;$/;"	v
gl3wUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IVPROC gl3wUniform3iv;$/;"	v
gl3wUniform3iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IVPROC gl3wUniform3iv;$/;"	v
gl3wUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIPROC gl3wUniform3ui;$/;"	v
gl3wUniform3ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIPROC gl3wUniform3ui;$/;"	v
gl3wUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIVPROC gl3wUniform3uiv;$/;"	v
gl3wUniform3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIVPROC gl3wUniform3uiv;$/;"	v
gl3wUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DPROC gl3wUniform4d;$/;"	v
gl3wUniform4d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DPROC gl3wUniform4d;$/;"	v
gl3wUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DVPROC gl3wUniform4dv;$/;"	v
gl3wUniform4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DVPROC gl3wUniform4dv;$/;"	v
gl3wUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FPROC gl3wUniform4f;$/;"	v
gl3wUniform4f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FPROC gl3wUniform4f;$/;"	v
gl3wUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FVPROC gl3wUniform4fv;$/;"	v
gl3wUniform4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FVPROC gl3wUniform4fv;$/;"	v
gl3wUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IPROC gl3wUniform4i;$/;"	v
gl3wUniform4i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IPROC gl3wUniform4i;$/;"	v
gl3wUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IVPROC gl3wUniform4iv;$/;"	v
gl3wUniform4iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IVPROC gl3wUniform4iv;$/;"	v
gl3wUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIPROC gl3wUniform4ui;$/;"	v
gl3wUniform4ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIPROC gl3wUniform4ui;$/;"	v
gl3wUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIVPROC gl3wUniform4uiv;$/;"	v
gl3wUniform4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIVPROC gl3wUniform4uiv;$/;"	v
gl3wUniformBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMBLOCKBINDINGPROC gl3wUniformBlockBinding;$/;"	v
gl3wUniformBlockBinding	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMBLOCKBINDINGPROC gl3wUniformBlockBinding;$/;"	v
gl3wUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2DVPROC gl3wUniformMatrix2dv;$/;"	v
gl3wUniformMatrix2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2DVPROC gl3wUniformMatrix2dv;$/;"	v
gl3wUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2FVPROC gl3wUniformMatrix2fv;$/;"	v
gl3wUniformMatrix2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2FVPROC gl3wUniformMatrix2fv;$/;"	v
gl3wUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3DVPROC gl3wUniformMatrix2x3dv;$/;"	v
gl3wUniformMatrix2x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3DVPROC gl3wUniformMatrix2x3dv;$/;"	v
gl3wUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3FVPROC gl3wUniformMatrix2x3fv;$/;"	v
gl3wUniformMatrix2x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3FVPROC gl3wUniformMatrix2x3fv;$/;"	v
gl3wUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4DVPROC gl3wUniformMatrix2x4dv;$/;"	v
gl3wUniformMatrix2x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4DVPROC gl3wUniformMatrix2x4dv;$/;"	v
gl3wUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4FVPROC gl3wUniformMatrix2x4fv;$/;"	v
gl3wUniformMatrix2x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4FVPROC gl3wUniformMatrix2x4fv;$/;"	v
gl3wUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3DVPROC gl3wUniformMatrix3dv;$/;"	v
gl3wUniformMatrix3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3DVPROC gl3wUniformMatrix3dv;$/;"	v
gl3wUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3FVPROC gl3wUniformMatrix3fv;$/;"	v
gl3wUniformMatrix3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3FVPROC gl3wUniformMatrix3fv;$/;"	v
gl3wUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2DVPROC gl3wUniformMatrix3x2dv;$/;"	v
gl3wUniformMatrix3x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2DVPROC gl3wUniformMatrix3x2dv;$/;"	v
gl3wUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2FVPROC gl3wUniformMatrix3x2fv;$/;"	v
gl3wUniformMatrix3x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2FVPROC gl3wUniformMatrix3x2fv;$/;"	v
gl3wUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4DVPROC gl3wUniformMatrix3x4dv;$/;"	v
gl3wUniformMatrix3x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4DVPROC gl3wUniformMatrix3x4dv;$/;"	v
gl3wUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4FVPROC gl3wUniformMatrix3x4fv;$/;"	v
gl3wUniformMatrix3x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4FVPROC gl3wUniformMatrix3x4fv;$/;"	v
gl3wUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4DVPROC gl3wUniformMatrix4dv;$/;"	v
gl3wUniformMatrix4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4DVPROC gl3wUniformMatrix4dv;$/;"	v
gl3wUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4FVPROC gl3wUniformMatrix4fv;$/;"	v
gl3wUniformMatrix4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4FVPROC gl3wUniformMatrix4fv;$/;"	v
gl3wUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2DVPROC gl3wUniformMatrix4x2dv;$/;"	v
gl3wUniformMatrix4x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2DVPROC gl3wUniformMatrix4x2dv;$/;"	v
gl3wUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2FVPROC gl3wUniformMatrix4x2fv;$/;"	v
gl3wUniformMatrix4x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2FVPROC gl3wUniformMatrix4x2fv;$/;"	v
gl3wUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3DVPROC gl3wUniformMatrix4x3dv;$/;"	v
gl3wUniformMatrix4x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3DVPROC gl3wUniformMatrix4x3dv;$/;"	v
gl3wUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3FVPROC gl3wUniformMatrix4x3fv;$/;"	v
gl3wUniformMatrix4x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3FVPROC gl3wUniformMatrix4x3fv;$/;"	v
gl3wUniformSubroutinesuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMSUBROUTINESUIVPROC gl3wUniformSubroutinesuiv;$/;"	v
gl3wUniformSubroutinesuiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMSUBROUTINESUIVPROC gl3wUniformSubroutinesuiv;$/;"	v
gl3wUnmapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNMAPBUFFERPROC gl3wUnmapBuffer;$/;"	v
gl3wUnmapBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLUNMAPBUFFERPROC gl3wUnmapBuffer;$/;"	v
gl3wUseProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMPROC gl3wUseProgram;$/;"	v
gl3wUseProgram	lib/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMPROC gl3wUseProgram;$/;"	v
gl3wUseProgramStages	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMSTAGESPROC gl3wUseProgramStages;$/;"	v
gl3wUseProgramStages	lib/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMSTAGESPROC gl3wUseProgramStages;$/;"	v
gl3wValidateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPROC gl3wValidateProgram;$/;"	v
gl3wValidateProgram	lib/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPROC gl3wValidateProgram;$/;"	v
gl3wValidateProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPIPELINEPROC gl3wValidateProgramPipeline;$/;"	v
gl3wValidateProgramPipeline	lib/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPIPELINEPROC gl3wValidateProgramPipeline;$/;"	v
gl3wVertexArrayBindVertexBufferEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC gl3wVertexArrayBindVertexBufferEXT;$/;"	v
gl3wVertexArrayBindVertexBufferEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC gl3wVertexArrayBindVertexBufferEXT;$/;"	v
gl3wVertexArrayVertexAttribBindingEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC gl3wVertexArrayVertexAttribBindingEXT;$/;"	v
gl3wVertexArrayVertexAttribBindingEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC gl3wVertexArrayVertexAttribBindingEXT;$/;"	v
gl3wVertexArrayVertexAttribFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC gl3wVertexArrayVertexAttribFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribFormatEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC gl3wVertexArrayVertexAttribFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribIFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC gl3wVertexArrayVertexAttribIFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribIFormatEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC gl3wVertexArrayVertexAttribIFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribLFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC gl3wVertexArrayVertexAttribLFormatEXT;$/;"	v
gl3wVertexArrayVertexAttribLFormatEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC gl3wVertexArrayVertexAttribLFormatEXT;$/;"	v
gl3wVertexArrayVertexBindingDivisorEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC gl3wVertexArrayVertexBindingDivisorEXT;$/;"	v
gl3wVertexArrayVertexBindingDivisorEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC gl3wVertexArrayVertexBindingDivisorEXT;$/;"	v
gl3wVertexAttrib1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DPROC gl3wVertexAttrib1d;$/;"	v
gl3wVertexAttrib1d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DPROC gl3wVertexAttrib1d;$/;"	v
gl3wVertexAttrib1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DVPROC gl3wVertexAttrib1dv;$/;"	v
gl3wVertexAttrib1dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DVPROC gl3wVertexAttrib1dv;$/;"	v
gl3wVertexAttrib1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FPROC gl3wVertexAttrib1f;$/;"	v
gl3wVertexAttrib1f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FPROC gl3wVertexAttrib1f;$/;"	v
gl3wVertexAttrib1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FVPROC gl3wVertexAttrib1fv;$/;"	v
gl3wVertexAttrib1fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FVPROC gl3wVertexAttrib1fv;$/;"	v
gl3wVertexAttrib1s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SPROC gl3wVertexAttrib1s;$/;"	v
gl3wVertexAttrib1s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SPROC gl3wVertexAttrib1s;$/;"	v
gl3wVertexAttrib1sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SVPROC gl3wVertexAttrib1sv;$/;"	v
gl3wVertexAttrib1sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SVPROC gl3wVertexAttrib1sv;$/;"	v
gl3wVertexAttrib2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DPROC gl3wVertexAttrib2d;$/;"	v
gl3wVertexAttrib2d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DPROC gl3wVertexAttrib2d;$/;"	v
gl3wVertexAttrib2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DVPROC gl3wVertexAttrib2dv;$/;"	v
gl3wVertexAttrib2dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DVPROC gl3wVertexAttrib2dv;$/;"	v
gl3wVertexAttrib2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FPROC gl3wVertexAttrib2f;$/;"	v
gl3wVertexAttrib2f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FPROC gl3wVertexAttrib2f;$/;"	v
gl3wVertexAttrib2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FVPROC gl3wVertexAttrib2fv;$/;"	v
gl3wVertexAttrib2fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FVPROC gl3wVertexAttrib2fv;$/;"	v
gl3wVertexAttrib2s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SPROC gl3wVertexAttrib2s;$/;"	v
gl3wVertexAttrib2s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SPROC gl3wVertexAttrib2s;$/;"	v
gl3wVertexAttrib2sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SVPROC gl3wVertexAttrib2sv;$/;"	v
gl3wVertexAttrib2sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SVPROC gl3wVertexAttrib2sv;$/;"	v
gl3wVertexAttrib3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DPROC gl3wVertexAttrib3d;$/;"	v
gl3wVertexAttrib3d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DPROC gl3wVertexAttrib3d;$/;"	v
gl3wVertexAttrib3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DVPROC gl3wVertexAttrib3dv;$/;"	v
gl3wVertexAttrib3dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DVPROC gl3wVertexAttrib3dv;$/;"	v
gl3wVertexAttrib3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FPROC gl3wVertexAttrib3f;$/;"	v
gl3wVertexAttrib3f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FPROC gl3wVertexAttrib3f;$/;"	v
gl3wVertexAttrib3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FVPROC gl3wVertexAttrib3fv;$/;"	v
gl3wVertexAttrib3fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FVPROC gl3wVertexAttrib3fv;$/;"	v
gl3wVertexAttrib3s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SPROC gl3wVertexAttrib3s;$/;"	v
gl3wVertexAttrib3s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SPROC gl3wVertexAttrib3s;$/;"	v
gl3wVertexAttrib3sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SVPROC gl3wVertexAttrib3sv;$/;"	v
gl3wVertexAttrib3sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SVPROC gl3wVertexAttrib3sv;$/;"	v
gl3wVertexAttrib4Nbv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NBVPROC gl3wVertexAttrib4Nbv;$/;"	v
gl3wVertexAttrib4Nbv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NBVPROC gl3wVertexAttrib4Nbv;$/;"	v
gl3wVertexAttrib4Niv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NIVPROC gl3wVertexAttrib4Niv;$/;"	v
gl3wVertexAttrib4Niv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NIVPROC gl3wVertexAttrib4Niv;$/;"	v
gl3wVertexAttrib4Nsv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NSVPROC gl3wVertexAttrib4Nsv;$/;"	v
gl3wVertexAttrib4Nsv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NSVPROC gl3wVertexAttrib4Nsv;$/;"	v
gl3wVertexAttrib4Nub	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBPROC gl3wVertexAttrib4Nub;$/;"	v
gl3wVertexAttrib4Nub	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBPROC gl3wVertexAttrib4Nub;$/;"	v
gl3wVertexAttrib4Nubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBVPROC gl3wVertexAttrib4Nubv;$/;"	v
gl3wVertexAttrib4Nubv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBVPROC gl3wVertexAttrib4Nubv;$/;"	v
gl3wVertexAttrib4Nuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUIVPROC gl3wVertexAttrib4Nuiv;$/;"	v
gl3wVertexAttrib4Nuiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUIVPROC gl3wVertexAttrib4Nuiv;$/;"	v
gl3wVertexAttrib4Nusv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUSVPROC gl3wVertexAttrib4Nusv;$/;"	v
gl3wVertexAttrib4Nusv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUSVPROC gl3wVertexAttrib4Nusv;$/;"	v
gl3wVertexAttrib4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4BVPROC gl3wVertexAttrib4bv;$/;"	v
gl3wVertexAttrib4bv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4BVPROC gl3wVertexAttrib4bv;$/;"	v
gl3wVertexAttrib4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DPROC gl3wVertexAttrib4d;$/;"	v
gl3wVertexAttrib4d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DPROC gl3wVertexAttrib4d;$/;"	v
gl3wVertexAttrib4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DVPROC gl3wVertexAttrib4dv;$/;"	v
gl3wVertexAttrib4dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DVPROC gl3wVertexAttrib4dv;$/;"	v
gl3wVertexAttrib4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FPROC gl3wVertexAttrib4f;$/;"	v
gl3wVertexAttrib4f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FPROC gl3wVertexAttrib4f;$/;"	v
gl3wVertexAttrib4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FVPROC gl3wVertexAttrib4fv;$/;"	v
gl3wVertexAttrib4fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FVPROC gl3wVertexAttrib4fv;$/;"	v
gl3wVertexAttrib4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4IVPROC gl3wVertexAttrib4iv;$/;"	v
gl3wVertexAttrib4iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4IVPROC gl3wVertexAttrib4iv;$/;"	v
gl3wVertexAttrib4s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SPROC gl3wVertexAttrib4s;$/;"	v
gl3wVertexAttrib4s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SPROC gl3wVertexAttrib4s;$/;"	v
gl3wVertexAttrib4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SVPROC gl3wVertexAttrib4sv;$/;"	v
gl3wVertexAttrib4sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SVPROC gl3wVertexAttrib4sv;$/;"	v
gl3wVertexAttrib4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UBVPROC gl3wVertexAttrib4ubv;$/;"	v
gl3wVertexAttrib4ubv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UBVPROC gl3wVertexAttrib4ubv;$/;"	v
gl3wVertexAttrib4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UIVPROC gl3wVertexAttrib4uiv;$/;"	v
gl3wVertexAttrib4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UIVPROC gl3wVertexAttrib4uiv;$/;"	v
gl3wVertexAttrib4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4USVPROC gl3wVertexAttrib4usv;$/;"	v
gl3wVertexAttrib4usv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4USVPROC gl3wVertexAttrib4usv;$/;"	v
gl3wVertexAttribBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBBINDINGPROC gl3wVertexAttribBinding;$/;"	v
gl3wVertexAttribBinding	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBBINDINGPROC gl3wVertexAttribBinding;$/;"	v
gl3wVertexAttribDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBDIVISORPROC gl3wVertexAttribDivisor;$/;"	v
gl3wVertexAttribDivisor	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBDIVISORPROC gl3wVertexAttribDivisor;$/;"	v
gl3wVertexAttribFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBFORMATPROC gl3wVertexAttribFormat;$/;"	v
gl3wVertexAttribFormat	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBFORMATPROC gl3wVertexAttribFormat;$/;"	v
gl3wVertexAttribI1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IPROC gl3wVertexAttribI1i;$/;"	v
gl3wVertexAttribI1i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IPROC gl3wVertexAttribI1i;$/;"	v
gl3wVertexAttribI1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IVPROC gl3wVertexAttribI1iv;$/;"	v
gl3wVertexAttribI1iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IVPROC gl3wVertexAttribI1iv;$/;"	v
gl3wVertexAttribI1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIPROC gl3wVertexAttribI1ui;$/;"	v
gl3wVertexAttribI1ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIPROC gl3wVertexAttribI1ui;$/;"	v
gl3wVertexAttribI1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIVPROC gl3wVertexAttribI1uiv;$/;"	v
gl3wVertexAttribI1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIVPROC gl3wVertexAttribI1uiv;$/;"	v
gl3wVertexAttribI2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IPROC gl3wVertexAttribI2i;$/;"	v
gl3wVertexAttribI2i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IPROC gl3wVertexAttribI2i;$/;"	v
gl3wVertexAttribI2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IVPROC gl3wVertexAttribI2iv;$/;"	v
gl3wVertexAttribI2iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IVPROC gl3wVertexAttribI2iv;$/;"	v
gl3wVertexAttribI2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIPROC gl3wVertexAttribI2ui;$/;"	v
gl3wVertexAttribI2ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIPROC gl3wVertexAttribI2ui;$/;"	v
gl3wVertexAttribI2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIVPROC gl3wVertexAttribI2uiv;$/;"	v
gl3wVertexAttribI2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIVPROC gl3wVertexAttribI2uiv;$/;"	v
gl3wVertexAttribI3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IPROC gl3wVertexAttribI3i;$/;"	v
gl3wVertexAttribI3i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IPROC gl3wVertexAttribI3i;$/;"	v
gl3wVertexAttribI3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IVPROC gl3wVertexAttribI3iv;$/;"	v
gl3wVertexAttribI3iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IVPROC gl3wVertexAttribI3iv;$/;"	v
gl3wVertexAttribI3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIPROC gl3wVertexAttribI3ui;$/;"	v
gl3wVertexAttribI3ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIPROC gl3wVertexAttribI3ui;$/;"	v
gl3wVertexAttribI3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIVPROC gl3wVertexAttribI3uiv;$/;"	v
gl3wVertexAttribI3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIVPROC gl3wVertexAttribI3uiv;$/;"	v
gl3wVertexAttribI4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4BVPROC gl3wVertexAttribI4bv;$/;"	v
gl3wVertexAttribI4bv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4BVPROC gl3wVertexAttribI4bv;$/;"	v
gl3wVertexAttribI4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IPROC gl3wVertexAttribI4i;$/;"	v
gl3wVertexAttribI4i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IPROC gl3wVertexAttribI4i;$/;"	v
gl3wVertexAttribI4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IVPROC gl3wVertexAttribI4iv;$/;"	v
gl3wVertexAttribI4iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IVPROC gl3wVertexAttribI4iv;$/;"	v
gl3wVertexAttribI4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4SVPROC gl3wVertexAttribI4sv;$/;"	v
gl3wVertexAttribI4sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4SVPROC gl3wVertexAttribI4sv;$/;"	v
gl3wVertexAttribI4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UBVPROC gl3wVertexAttribI4ubv;$/;"	v
gl3wVertexAttribI4ubv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UBVPROC gl3wVertexAttribI4ubv;$/;"	v
gl3wVertexAttribI4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIPROC gl3wVertexAttribI4ui;$/;"	v
gl3wVertexAttribI4ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIPROC gl3wVertexAttribI4ui;$/;"	v
gl3wVertexAttribI4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIVPROC gl3wVertexAttribI4uiv;$/;"	v
gl3wVertexAttribI4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIVPROC gl3wVertexAttribI4uiv;$/;"	v
gl3wVertexAttribI4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4USVPROC gl3wVertexAttribI4usv;$/;"	v
gl3wVertexAttribI4usv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4USVPROC gl3wVertexAttribI4usv;$/;"	v
gl3wVertexAttribIFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIFORMATPROC gl3wVertexAttribIFormat;$/;"	v
gl3wVertexAttribIFormat	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIFORMATPROC gl3wVertexAttribIFormat;$/;"	v
gl3wVertexAttribIPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIPOINTERPROC gl3wVertexAttribIPointer;$/;"	v
gl3wVertexAttribIPointer	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIPOINTERPROC gl3wVertexAttribIPointer;$/;"	v
gl3wVertexAttribL1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DPROC gl3wVertexAttribL1d;$/;"	v
gl3wVertexAttribL1d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DPROC gl3wVertexAttribL1d;$/;"	v
gl3wVertexAttribL1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DVPROC gl3wVertexAttribL1dv;$/;"	v
gl3wVertexAttribL1dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DVPROC gl3wVertexAttribL1dv;$/;"	v
gl3wVertexAttribL2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DPROC gl3wVertexAttribL2d;$/;"	v
gl3wVertexAttribL2d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DPROC gl3wVertexAttribL2d;$/;"	v
gl3wVertexAttribL2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DVPROC gl3wVertexAttribL2dv;$/;"	v
gl3wVertexAttribL2dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DVPROC gl3wVertexAttribL2dv;$/;"	v
gl3wVertexAttribL3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DPROC gl3wVertexAttribL3d;$/;"	v
gl3wVertexAttribL3d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DPROC gl3wVertexAttribL3d;$/;"	v
gl3wVertexAttribL3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DVPROC gl3wVertexAttribL3dv;$/;"	v
gl3wVertexAttribL3dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DVPROC gl3wVertexAttribL3dv;$/;"	v
gl3wVertexAttribL4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DPROC gl3wVertexAttribL4d;$/;"	v
gl3wVertexAttribL4d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DPROC gl3wVertexAttribL4d;$/;"	v
gl3wVertexAttribL4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DVPROC gl3wVertexAttribL4dv;$/;"	v
gl3wVertexAttribL4dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DVPROC gl3wVertexAttribL4dv;$/;"	v
gl3wVertexAttribLFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLFORMATPROC gl3wVertexAttribLFormat;$/;"	v
gl3wVertexAttribLFormat	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLFORMATPROC gl3wVertexAttribLFormat;$/;"	v
gl3wVertexAttribLPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLPOINTERPROC gl3wVertexAttribLPointer;$/;"	v
gl3wVertexAttribLPointer	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLPOINTERPROC gl3wVertexAttribLPointer;$/;"	v
gl3wVertexAttribP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIPROC gl3wVertexAttribP1ui;$/;"	v
gl3wVertexAttribP1ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIPROC gl3wVertexAttribP1ui;$/;"	v
gl3wVertexAttribP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIVPROC gl3wVertexAttribP1uiv;$/;"	v
gl3wVertexAttribP1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIVPROC gl3wVertexAttribP1uiv;$/;"	v
gl3wVertexAttribP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIPROC gl3wVertexAttribP2ui;$/;"	v
gl3wVertexAttribP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIPROC gl3wVertexAttribP2ui;$/;"	v
gl3wVertexAttribP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIVPROC gl3wVertexAttribP2uiv;$/;"	v
gl3wVertexAttribP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIVPROC gl3wVertexAttribP2uiv;$/;"	v
gl3wVertexAttribP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIPROC gl3wVertexAttribP3ui;$/;"	v
gl3wVertexAttribP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIPROC gl3wVertexAttribP3ui;$/;"	v
gl3wVertexAttribP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIVPROC gl3wVertexAttribP3uiv;$/;"	v
gl3wVertexAttribP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIVPROC gl3wVertexAttribP3uiv;$/;"	v
gl3wVertexAttribP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIPROC gl3wVertexAttribP4ui;$/;"	v
gl3wVertexAttribP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIPROC gl3wVertexAttribP4ui;$/;"	v
gl3wVertexAttribP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIVPROC gl3wVertexAttribP4uiv;$/;"	v
gl3wVertexAttribP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIVPROC gl3wVertexAttribP4uiv;$/;"	v
gl3wVertexAttribPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBPOINTERPROC gl3wVertexAttribPointer;$/;"	v
gl3wVertexAttribPointer	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBPOINTERPROC gl3wVertexAttribPointer;$/;"	v
gl3wVertexBindingDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXBINDINGDIVISORPROC gl3wVertexBindingDivisor;$/;"	v
gl3wVertexBindingDivisor	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXBINDINGDIVISORPROC gl3wVertexBindingDivisor;$/;"	v
gl3wVertexP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIPROC gl3wVertexP2ui;$/;"	v
gl3wVertexP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIPROC gl3wVertexP2ui;$/;"	v
gl3wVertexP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIVPROC gl3wVertexP2uiv;$/;"	v
gl3wVertexP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIVPROC gl3wVertexP2uiv;$/;"	v
gl3wVertexP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIPROC gl3wVertexP3ui;$/;"	v
gl3wVertexP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIPROC gl3wVertexP3ui;$/;"	v
gl3wVertexP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIVPROC gl3wVertexP3uiv;$/;"	v
gl3wVertexP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIVPROC gl3wVertexP3uiv;$/;"	v
gl3wVertexP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIPROC gl3wVertexP4ui;$/;"	v
gl3wVertexP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIPROC gl3wVertexP4ui;$/;"	v
gl3wVertexP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIVPROC gl3wVertexP4uiv;$/;"	v
gl3wVertexP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIVPROC gl3wVertexP4uiv;$/;"	v
gl3wViewport	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTPROC gl3wViewport;$/;"	v
gl3wViewport	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTPROC gl3wViewport;$/;"	v
gl3wViewportArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTARRAYVPROC gl3wViewportArrayv;$/;"	v
gl3wViewportArrayv	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTARRAYVPROC gl3wViewportArrayv;$/;"	v
gl3wViewportIndexedf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFPROC gl3wViewportIndexedf;$/;"	v
gl3wViewportIndexedf	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFPROC gl3wViewportIndexedf;$/;"	v
gl3wViewportIndexedfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFVPROC gl3wViewportIndexedfv;$/;"	v
gl3wViewportIndexedfv	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFVPROC gl3wViewportIndexedfv;$/;"	v
gl3wWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLWAITSYNCPROC gl3wWaitSync;$/;"	v
gl3wWaitSync	lib/gl3w/GL/gl3w.c	/^PFNGLWAITSYNCPROC gl3wWaitSync;$/;"	v
glActiveShaderProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1066;"	d
glActiveShaderProgram	lib/gl3w/GL/gl3w.h	1066;"	d
glActiveTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	693;"	d
glActiveTexture	lib/gl3w/GL/gl3w.h	693;"	d
glAttachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	733;"	d
glAttachShader	lib/gl3w/GL/gl3w.h	733;"	d
glAttachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglAttachShader glAttachShader;$/;"	v
glBeginConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	840;"	d
glBeginConditionalRender	lib/gl3w/GL/gl3w.h	840;"	d
glBeginQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	712;"	d
glBeginQuery	lib/gl3w/GL/gl3w.h	712;"	d
glBeginQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1054;"	d
glBeginQueryIndexed	lib/gl3w/GL/gl3w.h	1054;"	d
glBeginTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	833;"	d
glBeginTransformFeedback	lib/gl3w/GL/gl3w.h	833;"	d
glBindAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	734;"	d
glBindAttribLocation	lib/gl3w/GL/gl3w.h	734;"	d
glBindBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	717;"	d
glBindBuffer	lib/gl3w/GL/gl3w.h	717;"	d
glBindBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBindBuffer glBindBuffer;$/;"	v
glBindBufferBase	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	836;"	d
glBindBufferBase	lib/gl3w/GL/gl3w.h	836;"	d
glBindBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	835;"	d
glBindBufferRange	lib/gl3w/GL/gl3w.h	835;"	d
glBindFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	866;"	d
glBindFragDataLocation	lib/gl3w/GL/gl3w.h	866;"	d
glBindFragDataLocationIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	959;"	d
glBindFragDataLocationIndexed	lib/gl3w/GL/gl3w.h	959;"	d
glBindFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	905;"	d
glBindFramebuffer	lib/gl3w/GL/gl3w.h	905;"	d
glBindImageTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1165;"	d
glBindImageTexture	lib/gl3w/GL/gl3w.h	1165;"	d
glBindProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1068;"	d
glBindProgramPipeline	lib/gl3w/GL/gl3w.h	1068;"	d
glBindRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	899;"	d
glBindRenderbuffer	lib/gl3w/GL/gl3w.h	899;"	d
glBindSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	964;"	d
glBindSampler	lib/gl3w/GL/gl3w.h	964;"	d
glBindTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	683;"	d
glBindTexture	lib/gl3w/GL/gl3w.h	683;"	d
glBindTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1046;"	d
glBindTransformFeedback	lib/gl3w/GL/gl3w.h	1046;"	d
glBindVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	920;"	d
glBindVertexArray	lib/gl3w/GL/gl3w.h	920;"	d
glBindVertexArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBindVertexArray glBindVertexArray;$/;"	v
glBindVertexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1191;"	d
glBindVertexBuffer	lib/gl3w/GL/gl3w.h	1191;"	d
glBlendColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	687;"	d
glBlendColor	lib/gl3w/GL/gl3w.h	687;"	d
glBlendEquation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	688;"	d
glBlendEquation	lib/gl3w/GL/gl3w.h	688;"	d
glBlendEquationSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	728;"	d
glBlendEquationSeparate	lib/gl3w/GL/gl3w.h	728;"	d
glBlendEquationSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	895;"	d
glBlendEquationSeparatei	lib/gl3w/GL/gl3w.h	895;"	d
glBlendEquationSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	949;"	d
glBlendEquationSeparateiARB	lib/gl3w/GL/gl3w.h	949;"	d
glBlendEquationi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	894;"	d
glBlendEquationi	lib/gl3w/GL/gl3w.h	894;"	d
glBlendEquationiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	948;"	d
glBlendEquationiARB	lib/gl3w/GL/gl3w.h	948;"	d
glBlendFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	650;"	d
glBlendFunc	lib/gl3w/GL/gl3w.h	650;"	d
glBlendFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	702;"	d
glBlendFuncSeparate	lib/gl3w/GL/gl3w.h	702;"	d
glBlendFuncSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	897;"	d
glBlendFuncSeparatei	lib/gl3w/GL/gl3w.h	897;"	d
glBlendFuncSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	951;"	d
glBlendFuncSeparateiARB	lib/gl3w/GL/gl3w.h	951;"	d
glBlendFunci	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	896;"	d
glBlendFunci	lib/gl3w/GL/gl3w.h	896;"	d
glBlendFunciARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	950;"	d
glBlendFunciARB	lib/gl3w/GL/gl3w.h	950;"	d
glBlitFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	915;"	d
glBlitFramebuffer	lib/gl3w/GL/gl3w.h	915;"	d
glBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	721;"	d
glBufferData	lib/gl3w/GL/gl3w.h	721;"	d
glBufferData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBufferData glBufferData;$/;"	v
glBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	722;"	d
glBufferSubData	lib/gl3w/GL/gl3w.h	722;"	d
glBufferSubData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBufferSubData glBufferSubData;$/;"	v
glCheckFramebufferStatus	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	908;"	d
glCheckFramebufferStatus	lib/gl3w/GL/gl3w.h	908;"	d
glClampColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	839;"	d
glClampColor	lib/gl3w/GL/gl3w.h	839;"	d
glClear	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	639;"	d
glClear	lib/gl3w/GL/gl3w.h	639;"	d
glClearBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1183;"	d
glClearBufferData	lib/gl3w/GL/gl3w.h	1183;"	d
glClearBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1184;"	d
glClearBufferSubData	lib/gl3w/GL/gl3w.h	1184;"	d
glClearBufferfi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	883;"	d
glClearBufferfi	lib/gl3w/GL/gl3w.h	883;"	d
glClearBufferfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	882;"	d
glClearBufferfv	lib/gl3w/GL/gl3w.h	882;"	d
glClearBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	880;"	d
glClearBufferiv	lib/gl3w/GL/gl3w.h	880;"	d
glClearBufferuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	881;"	d
glClearBufferuiv	lib/gl3w/GL/gl3w.h	881;"	d
glClearColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	640;"	d
glClearColor	lib/gl3w/GL/gl3w.h	640;"	d
glClearDepth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	642;"	d
glClearDepth	lib/gl3w/GL/gl3w.h	642;"	d
glClearDepthf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1061;"	d
glClearDepthf	lib/gl3w/GL/gl3w.h	1061;"	d
glClearNamedBufferDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1185;"	d
glClearNamedBufferDataEXT	lib/gl3w/GL/gl3w.h	1185;"	d
glClearNamedBufferSubDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1186;"	d
glClearNamedBufferSubDataEXT	lib/gl3w/GL/gl3w.h	1186;"	d
glClearStencil	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	641;"	d
glClearStencil	lib/gl3w/GL/gl3w.h	641;"	d
glClientWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	940;"	d
glClientWaitSync	lib/gl3w/GL/gl3w.h	940;"	d
glColorMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	644;"	d
glColorMask	lib/gl3w/GL/gl3w.h	644;"	d
glColorMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	827;"	d
glColorMaski	lib/gl3w/GL/gl3w.h	827;"	d
glColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1002;"	d
glColorP3ui	lib/gl3w/GL/gl3w.h	1002;"	d
glColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1003;"	d
glColorP3uiv	lib/gl3w/GL/gl3w.h	1003;"	d
glColorP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1004;"	d
glColorP4ui	lib/gl3w/GL/gl3w.h	1004;"	d
glColorP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1005;"	d
glColorP4uiv	lib/gl3w/GL/gl3w.h	1005;"	d
glCompileShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	735;"	d
glCompileShader	lib/gl3w/GL/gl3w.h	735;"	d
glCompileShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglCompileShader glCompileShader;$/;"	v
glCompileShaderIncludeARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	955;"	d
glCompileShaderIncludeARB	lib/gl3w/GL/gl3w.h	955;"	d
glCompressedTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	697;"	d
glCompressedTexImage1D	lib/gl3w/GL/gl3w.h	697;"	d
glCompressedTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	696;"	d
glCompressedTexImage2D	lib/gl3w/GL/gl3w.h	696;"	d
glCompressedTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	695;"	d
glCompressedTexImage3D	lib/gl3w/GL/gl3w.h	695;"	d
glCompressedTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	700;"	d
glCompressedTexSubImage1D	lib/gl3w/GL/gl3w.h	700;"	d
glCompressedTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	699;"	d
glCompressedTexSubImage2D	lib/gl3w/GL/gl3w.h	699;"	d
glCompressedTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	698;"	d
glCompressedTexSubImage3D	lib/gl3w/GL/gl3w.h	698;"	d
glCopyBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	931;"	d
glCopyBufferSubData	lib/gl3w/GL/gl3w.h	931;"	d
glCopyImageSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1189;"	d
glCopyImageSubData	lib/gl3w/GL/gl3w.h	1189;"	d
glCopyTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	677;"	d
glCopyTexImage1D	lib/gl3w/GL/gl3w.h	677;"	d
glCopyTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	678;"	d
glCopyTexImage2D	lib/gl3w/GL/gl3w.h	678;"	d
glCopyTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	679;"	d
glCopyTexSubImage1D	lib/gl3w/GL/gl3w.h	679;"	d
glCopyTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	680;"	d
glCopyTexSubImage2D	lib/gl3w/GL/gl3w.h	680;"	d
glCopyTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	692;"	d
glCopyTexSubImage3D	lib/gl3w/GL/gl3w.h	692;"	d
glCreateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	736;"	d
glCreateProgram	lib/gl3w/GL/gl3w.h	736;"	d
glCreateProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglCreateProgram glCreateProgram;$/;"	v
glCreateShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	737;"	d
glCreateShader	lib/gl3w/GL/gl3w.h	737;"	d
glCreateShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglCreateShader glCreateShader;$/;"	v
glCreateShaderProgramv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1067;"	d
glCreateShaderProgramv	lib/gl3w/GL/gl3w.h	1067;"	d
glCreateSyncFromCLeventARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1145;"	d
glCreateSyncFromCLeventARB	lib/gl3w/GL/gl3w.h	1145;"	d
glCullFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	625;"	d
glCullFace	lib/gl3w/GL/gl3w.h	625;"	d
glDebugMessageCallback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1175;"	d
glDebugMessageCallback	lib/gl3w/GL/gl3w.h	1175;"	d
glDebugMessageCallbackARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1148;"	d
glDebugMessageCallbackARB	lib/gl3w/GL/gl3w.h	1148;"	d
glDebugMessageControl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1173;"	d
glDebugMessageControl	lib/gl3w/GL/gl3w.h	1173;"	d
glDebugMessageControlARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1146;"	d
glDebugMessageControlARB	lib/gl3w/GL/gl3w.h	1146;"	d
glDebugMessageInsert	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1174;"	d
glDebugMessageInsert	lib/gl3w/GL/gl3w.h	1174;"	d
glDebugMessageInsertARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1147;"	d
glDebugMessageInsertARB	lib/gl3w/GL/gl3w.h	1147;"	d
glDeleteBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	718;"	d
glDeleteBuffers	lib/gl3w/GL/gl3w.h	718;"	d
glDeleteBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteBuffers glDeleteBuffers;$/;"	v
glDeleteFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	906;"	d
glDeleteFramebuffers	lib/gl3w/GL/gl3w.h	906;"	d
glDeleteNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	954;"	d
glDeleteNamedStringARB	lib/gl3w/GL/gl3w.h	954;"	d
glDeleteProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	738;"	d
glDeleteProgram	lib/gl3w/GL/gl3w.h	738;"	d
glDeleteProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteProgram glDeleteProgram;$/;"	v
glDeleteProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1069;"	d
glDeleteProgramPipelines	lib/gl3w/GL/gl3w.h	1069;"	d
glDeleteQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	710;"	d
glDeleteQueries	lib/gl3w/GL/gl3w.h	710;"	d
glDeleteRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	900;"	d
glDeleteRenderbuffers	lib/gl3w/GL/gl3w.h	900;"	d
glDeleteSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	962;"	d
glDeleteSamplers	lib/gl3w/GL/gl3w.h	962;"	d
glDeleteShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	739;"	d
glDeleteShader	lib/gl3w/GL/gl3w.h	739;"	d
glDeleteShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteShader glDeleteShader;$/;"	v
glDeleteSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	939;"	d
glDeleteSync	lib/gl3w/GL/gl3w.h	939;"	d
glDeleteTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	684;"	d
glDeleteTextures	lib/gl3w/GL/gl3w.h	684;"	d
glDeleteTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1047;"	d
glDeleteTransformFeedbacks	lib/gl3w/GL/gl3w.h	1047;"	d
glDeleteVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	921;"	d
glDeleteVertexArrays	lib/gl3w/GL/gl3w.h	921;"	d
glDeleteVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteVertexArrays glDeleteVertexArrays;$/;"	v
glDepthFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	654;"	d
glDepthFunc	lib/gl3w/GL/gl3w.h	654;"	d
glDepthMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	645;"	d
glDepthMask	lib/gl3w/GL/gl3w.h	645;"	d
glDepthRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	671;"	d
glDepthRange	lib/gl3w/GL/gl3w.h	671;"	d
glDepthRangeArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1141;"	d
glDepthRangeArrayv	lib/gl3w/GL/gl3w.h	1141;"	d
glDepthRangeIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1142;"	d
glDepthRangeIndexed	lib/gl3w/GL/gl3w.h	1142;"	d
glDepthRangef	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1060;"	d
glDepthRangef	lib/gl3w/GL/gl3w.h	1060;"	d
glDetachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	740;"	d
glDetachShader	lib/gl3w/GL/gl3w.h	740;"	d
glDetachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDetachShader glDetachShader;$/;"	v
glDisable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	646;"	d
glDisable	lib/gl3w/GL/gl3w.h	646;"	d
glDisableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	741;"	d
glDisableVertexAttribArray	lib/gl3w/GL/gl3w.h	741;"	d
glDisableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDisableVertexAttribArray glDisableVertexAttribArray;$/;"	v
glDisablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	831;"	d
glDisablei	lib/gl3w/GL/gl3w.h	831;"	d
glDispatchCompute	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1187;"	d
glDispatchCompute	lib/gl3w/GL/gl3w.h	1187;"	d
glDispatchComputeIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1188;"	d
glDispatchComputeIndirect	lib/gl3w/GL/gl3w.h	1188;"	d
glDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	673;"	d
glDrawArrays	lib/gl3w/GL/gl3w.h	673;"	d
glDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1016;"	d
glDrawArraysIndirect	lib/gl3w/GL/gl3w.h	1016;"	d
glDrawArraysInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	885;"	d
glDrawArraysInstanced	lib/gl3w/GL/gl3w.h	885;"	d
glDrawArraysInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1158;"	d
glDrawArraysInstancedBaseInstance	lib/gl3w/GL/gl3w.h	1158;"	d
glDrawBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	638;"	d
glDrawBuffer	lib/gl3w/GL/gl3w.h	638;"	d
glDrawBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	729;"	d
glDrawBuffers	lib/gl3w/GL/gl3w.h	729;"	d
glDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	674;"	d
glDrawElements	lib/gl3w/GL/gl3w.h	674;"	d
glDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	932;"	d
glDrawElementsBaseVertex	lib/gl3w/GL/gl3w.h	932;"	d
glDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1017;"	d
glDrawElementsIndirect	lib/gl3w/GL/gl3w.h	1017;"	d
glDrawElementsInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	886;"	d
glDrawElementsInstanced	lib/gl3w/GL/gl3w.h	886;"	d
glDrawElementsInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1159;"	d
glDrawElementsInstancedBaseInstance	lib/gl3w/GL/gl3w.h	1159;"	d
glDrawElementsInstancedBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	934;"	d
glDrawElementsInstancedBaseVertex	lib/gl3w/GL/gl3w.h	934;"	d
glDrawElementsInstancedBaseVertexBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1160;"	d
glDrawElementsInstancedBaseVertexBaseInstance	lib/gl3w/GL/gl3w.h	1160;"	d
glDrawRangeElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	689;"	d
glDrawRangeElements	lib/gl3w/GL/gl3w.h	689;"	d
glDrawRangeElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	933;"	d
glDrawRangeElementsBaseVertex	lib/gl3w/GL/gl3w.h	933;"	d
glDrawTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1052;"	d
glDrawTransformFeedback	lib/gl3w/GL/gl3w.h	1052;"	d
glDrawTransformFeedbackInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1161;"	d
glDrawTransformFeedbackInstanced	lib/gl3w/GL/gl3w.h	1161;"	d
glDrawTransformFeedbackStream	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1053;"	d
glDrawTransformFeedbackStream	lib/gl3w/GL/gl3w.h	1053;"	d
glDrawTransformFeedbackStreamInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1162;"	d
glDrawTransformFeedbackStreamInstanced	lib/gl3w/GL/gl3w.h	1162;"	d
glEnable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	647;"	d
glEnable	lib/gl3w/GL/gl3w.h	647;"	d
glEnableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	742;"	d
glEnableVertexAttribArray	lib/gl3w/GL/gl3w.h	742;"	d
glEnableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglEnableVertexAttribArray glEnableVertexAttribArray;$/;"	v
glEnablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	830;"	d
glEnablei	lib/gl3w/GL/gl3w.h	830;"	d
glEndConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	841;"	d
glEndConditionalRender	lib/gl3w/GL/gl3w.h	841;"	d
glEndQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	713;"	d
glEndQuery	lib/gl3w/GL/gl3w.h	713;"	d
glEndQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1055;"	d
glEndQueryIndexed	lib/gl3w/GL/gl3w.h	1055;"	d
glEndTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	834;"	d
glEndTransformFeedback	lib/gl3w/GL/gl3w.h	834;"	d
glFenceSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	937;"	d
glFenceSync	lib/gl3w/GL/gl3w.h	937;"	d
glFinish	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	648;"	d
glFinish	lib/gl3w/GL/gl3w.h	648;"	d
glFlush	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	649;"	d
glFlush	lib/gl3w/GL/gl3w.h	649;"	d
glFlushMappedBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	919;"	d
glFlushMappedBufferRange	lib/gl3w/GL/gl3w.h	919;"	d
glFramebufferParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1203;"	d
glFramebufferParameteri	lib/gl3w/GL/gl3w.h	1203;"	d
glFramebufferRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	912;"	d
glFramebufferRenderbuffer	lib/gl3w/GL/gl3w.h	912;"	d
glFramebufferTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	891;"	d
glFramebufferTexture	lib/gl3w/GL/gl3w.h	891;"	d
glFramebufferTexture1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	909;"	d
glFramebufferTexture1D	lib/gl3w/GL/gl3w.h	909;"	d
glFramebufferTexture2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	910;"	d
glFramebufferTexture2D	lib/gl3w/GL/gl3w.h	910;"	d
glFramebufferTexture3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	911;"	d
glFramebufferTexture3D	lib/gl3w/GL/gl3w.h	911;"	d
glFramebufferTextureLayer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	917;"	d
glFramebufferTextureLayer	lib/gl3w/GL/gl3w.h	917;"	d
glFrontFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	626;"	d
glFrontFace	lib/gl3w/GL/gl3w.h	626;"	d
glGenBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	719;"	d
glGenBuffers	lib/gl3w/GL/gl3w.h	719;"	d
glGenBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGenBuffers glGenBuffers;$/;"	v
glGenFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	907;"	d
glGenFramebuffers	lib/gl3w/GL/gl3w.h	907;"	d
glGenProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1070;"	d
glGenProgramPipelines	lib/gl3w/GL/gl3w.h	1070;"	d
glGenQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	709;"	d
glGenQueries	lib/gl3w/GL/gl3w.h	709;"	d
glGenRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	901;"	d
glGenRenderbuffers	lib/gl3w/GL/gl3w.h	901;"	d
glGenSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	961;"	d
glGenSamplers	lib/gl3w/GL/gl3w.h	961;"	d
glGenTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	685;"	d
glGenTextures	lib/gl3w/GL/gl3w.h	685;"	d
glGenTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1048;"	d
glGenTransformFeedbacks	lib/gl3w/GL/gl3w.h	1048;"	d
glGenVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	922;"	d
glGenVertexArrays	lib/gl3w/GL/gl3w.h	922;"	d
glGenVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGenVertexArrays glGenVertexArrays;$/;"	v
glGenerateMipmap	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	914;"	d
glGenerateMipmap	lib/gl3w/GL/gl3w.h	914;"	d
glGenerateMipmap	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGenerateMipmap glGenerateMipmap;$/;"	v
glGetActiveAtomicCounterBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1164;"	d
glGetActiveAtomicCounterBufferiv	lib/gl3w/GL/gl3w.h	1164;"	d
glGetActiveAttrib	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	743;"	d
glGetActiveAttrib	lib/gl3w/GL/gl3w.h	743;"	d
glGetActiveSubroutineName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1040;"	d
glGetActiveSubroutineName	lib/gl3w/GL/gl3w.h	1040;"	d
glGetActiveSubroutineUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1039;"	d
glGetActiveSubroutineUniformName	lib/gl3w/GL/gl3w.h	1039;"	d
glGetActiveSubroutineUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1038;"	d
glGetActiveSubroutineUniformiv	lib/gl3w/GL/gl3w.h	1038;"	d
glGetActiveUniform	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	744;"	d
glGetActiveUniform	lib/gl3w/GL/gl3w.h	744;"	d
glGetActiveUniformBlockName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	929;"	d
glGetActiveUniformBlockName	lib/gl3w/GL/gl3w.h	929;"	d
glGetActiveUniformBlockiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	928;"	d
glGetActiveUniformBlockiv	lib/gl3w/GL/gl3w.h	928;"	d
glGetActiveUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	926;"	d
glGetActiveUniformName	lib/gl3w/GL/gl3w.h	926;"	d
glGetActiveUniformsiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	925;"	d
glGetActiveUniformsiv	lib/gl3w/GL/gl3w.h	925;"	d
glGetAttachedShaders	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	745;"	d
glGetAttachedShaders	lib/gl3w/GL/gl3w.h	745;"	d
glGetAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	746;"	d
glGetAttribLocation	lib/gl3w/GL/gl3w.h	746;"	d
glGetAttribLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetAttribLocation glGetAttribLocation;$/;"	v
glGetBooleani_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	828;"	d
glGetBooleani_v	lib/gl3w/GL/gl3w.h	828;"	d
glGetBooleanv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	659;"	d
glGetBooleanv	lib/gl3w/GL/gl3w.h	659;"	d
glGetBufferParameteri64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	890;"	d
glGetBufferParameteri64v	lib/gl3w/GL/gl3w.h	890;"	d
glGetBufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	726;"	d
glGetBufferParameteriv	lib/gl3w/GL/gl3w.h	726;"	d
glGetBufferPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	727;"	d
glGetBufferPointerv	lib/gl3w/GL/gl3w.h	727;"	d
glGetBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	723;"	d
glGetBufferSubData	lib/gl3w/GL/gl3w.h	723;"	d
glGetCompressedTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	701;"	d
glGetCompressedTexImage	lib/gl3w/GL/gl3w.h	701;"	d
glGetDebugMessageLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1176;"	d
glGetDebugMessageLog	lib/gl3w/GL/gl3w.h	1176;"	d
glGetDebugMessageLogARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1149;"	d
glGetDebugMessageLogARB	lib/gl3w/GL/gl3w.h	1149;"	d
glGetDoublei_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1144;"	d
glGetDoublei_v	lib/gl3w/GL/gl3w.h	1144;"	d
glGetDoublev	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	660;"	d
glGetDoublev	lib/gl3w/GL/gl3w.h	660;"	d
glGetError	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	661;"	d
glGetError	lib/gl3w/GL/gl3w.h	661;"	d
glGetFloati_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1143;"	d
glGetFloati_v	lib/gl3w/GL/gl3w.h	1143;"	d
glGetFloatv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	662;"	d
glGetFloatv	lib/gl3w/GL/gl3w.h	662;"	d
glGetFragDataIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	960;"	d
glGetFragDataIndex	lib/gl3w/GL/gl3w.h	960;"	d
glGetFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	867;"	d
glGetFragDataLocation	lib/gl3w/GL/gl3w.h	867;"	d
glGetFramebufferAttachmentParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	913;"	d
glGetFramebufferAttachmentParameteriv	lib/gl3w/GL/gl3w.h	913;"	d
glGetFramebufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1204;"	d
glGetFramebufferParameteriv	lib/gl3w/GL/gl3w.h	1204;"	d
glGetGraphicsResetStatusARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1150;"	d
glGetGraphicsResetStatusARB	lib/gl3w/GL/gl3w.h	1150;"	d
glGetInteger64i_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	889;"	d
glGetInteger64i_v	lib/gl3w/GL/gl3w.h	889;"	d
glGetInteger64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	942;"	d
glGetInteger64v	lib/gl3w/GL/gl3w.h	942;"	d
glGetIntegeri_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	829;"	d
glGetIntegeri_v	lib/gl3w/GL/gl3w.h	829;"	d
glGetIntegerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	663;"	d
glGetIntegerv	lib/gl3w/GL/gl3w.h	663;"	d
glGetInternalformati64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1207;"	d
glGetInternalformati64v	lib/gl3w/GL/gl3w.h	1207;"	d
glGetInternalformativ	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1163;"	d
glGetInternalformativ	lib/gl3w/GL/gl3w.h	1163;"	d
glGetMultisamplefv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	946;"	d
glGetMultisamplefv	lib/gl3w/GL/gl3w.h	946;"	d
glGetNamedFramebufferParameterivEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1206;"	d
glGetNamedFramebufferParameterivEXT	lib/gl3w/GL/gl3w.h	1206;"	d
glGetNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	957;"	d
glGetNamedStringARB	lib/gl3w/GL/gl3w.h	957;"	d
glGetNamedStringivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	958;"	d
glGetNamedStringivARB	lib/gl3w/GL/gl3w.h	958;"	d
glGetObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1180;"	d
glGetObjectLabel	lib/gl3w/GL/gl3w.h	1180;"	d
glGetObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1182;"	d
glGetObjectPtrLabel	lib/gl3w/GL/gl3w.h	1182;"	d
glGetPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	675;"	d
glGetPointerv	lib/gl3w/GL/gl3w.h	675;"	d
glGetProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1062;"	d
glGetProgramBinary	lib/gl3w/GL/gl3w.h	1062;"	d
glGetProgramInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	748;"	d
glGetProgramInfoLog	lib/gl3w/GL/gl3w.h	748;"	d
glGetProgramInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetProgramInfoLog glGetProgramInfoLog;$/;"	v
glGetProgramInterfaceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1216;"	d
glGetProgramInterfaceiv	lib/gl3w/GL/gl3w.h	1216;"	d
glGetProgramPipelineInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1124;"	d
glGetProgramPipelineInfoLog	lib/gl3w/GL/gl3w.h	1124;"	d
glGetProgramPipelineiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1072;"	d
glGetProgramPipelineiv	lib/gl3w/GL/gl3w.h	1072;"	d
glGetProgramResourceIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1217;"	d
glGetProgramResourceIndex	lib/gl3w/GL/gl3w.h	1217;"	d
glGetProgramResourceLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1220;"	d
glGetProgramResourceLocation	lib/gl3w/GL/gl3w.h	1220;"	d
glGetProgramResourceLocationIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1221;"	d
glGetProgramResourceLocationIndex	lib/gl3w/GL/gl3w.h	1221;"	d
glGetProgramResourceName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1218;"	d
glGetProgramResourceName	lib/gl3w/GL/gl3w.h	1218;"	d
glGetProgramResourceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1219;"	d
glGetProgramResourceiv	lib/gl3w/GL/gl3w.h	1219;"	d
glGetProgramStageiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1043;"	d
glGetProgramStageiv	lib/gl3w/GL/gl3w.h	1043;"	d
glGetProgramiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	747;"	d
glGetProgramiv	lib/gl3w/GL/gl3w.h	747;"	d
glGetProgramiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetProgramiv glGetProgramiv;$/;"	v
glGetQueryIndexediv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1056;"	d
glGetQueryIndexediv	lib/gl3w/GL/gl3w.h	1056;"	d
glGetQueryObjecti64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	976;"	d
glGetQueryObjecti64v	lib/gl3w/GL/gl3w.h	976;"	d
glGetQueryObjectiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	715;"	d
glGetQueryObjectiv	lib/gl3w/GL/gl3w.h	715;"	d
glGetQueryObjectui64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	977;"	d
glGetQueryObjectui64v	lib/gl3w/GL/gl3w.h	977;"	d
glGetQueryObjectuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	716;"	d
glGetQueryObjectuiv	lib/gl3w/GL/gl3w.h	716;"	d
glGetQueryiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	714;"	d
glGetQueryiv	lib/gl3w/GL/gl3w.h	714;"	d
glGetRenderbufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	903;"	d
glGetRenderbufferParameteriv	lib/gl3w/GL/gl3w.h	903;"	d
glGetSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	972;"	d
glGetSamplerParameterIiv	lib/gl3w/GL/gl3w.h	972;"	d
glGetSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	974;"	d
glGetSamplerParameterIuiv	lib/gl3w/GL/gl3w.h	974;"	d
glGetSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	973;"	d
glGetSamplerParameterfv	lib/gl3w/GL/gl3w.h	973;"	d
glGetSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	971;"	d
glGetSamplerParameteriv	lib/gl3w/GL/gl3w.h	971;"	d
glGetShaderInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	750;"	d
glGetShaderInfoLog	lib/gl3w/GL/gl3w.h	750;"	d
glGetShaderInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetShaderInfoLog glGetShaderInfoLog;$/;"	v
glGetShaderPrecisionFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1059;"	d
glGetShaderPrecisionFormat	lib/gl3w/GL/gl3w.h	1059;"	d
glGetShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	751;"	d
glGetShaderSource	lib/gl3w/GL/gl3w.h	751;"	d
glGetShaderiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	749;"	d
glGetShaderiv	lib/gl3w/GL/gl3w.h	749;"	d
glGetShaderiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetShaderiv glGetShaderiv;$/;"	v
glGetString	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	664;"	d
glGetString	lib/gl3w/GL/gl3w.h	664;"	d
glGetStringi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	884;"	d
glGetStringi	lib/gl3w/GL/gl3w.h	884;"	d
glGetSubroutineIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1037;"	d
glGetSubroutineIndex	lib/gl3w/GL/gl3w.h	1037;"	d
glGetSubroutineUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1036;"	d
glGetSubroutineUniformLocation	lib/gl3w/GL/gl3w.h	1036;"	d
glGetSynciv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	943;"	d
glGetSynciv	lib/gl3w/GL/gl3w.h	943;"	d
glGetTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	665;"	d
glGetTexImage	lib/gl3w/GL/gl3w.h	665;"	d
glGetTexLevelParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	668;"	d
glGetTexLevelParameterfv	lib/gl3w/GL/gl3w.h	668;"	d
glGetTexLevelParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	669;"	d
glGetTexLevelParameteriv	lib/gl3w/GL/gl3w.h	669;"	d
glGetTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	878;"	d
glGetTexParameterIiv	lib/gl3w/GL/gl3w.h	878;"	d
glGetTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	879;"	d
glGetTexParameterIuiv	lib/gl3w/GL/gl3w.h	879;"	d
glGetTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	666;"	d
glGetTexParameterfv	lib/gl3w/GL/gl3w.h	666;"	d
glGetTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	667;"	d
glGetTexParameteriv	lib/gl3w/GL/gl3w.h	667;"	d
glGetTransformFeedbackVarying	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	838;"	d
glGetTransformFeedbackVarying	lib/gl3w/GL/gl3w.h	838;"	d
glGetUniformBlockIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	927;"	d
glGetUniformBlockIndex	lib/gl3w/GL/gl3w.h	927;"	d
glGetUniformIndices	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	924;"	d
glGetUniformIndices	lib/gl3w/GL/gl3w.h	924;"	d
glGetUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	752;"	d
glGetUniformLocation	lib/gl3w/GL/gl3w.h	752;"	d
glGetUniformLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetUniformLocation glGetUniformLocation;$/;"	v
glGetUniformSubroutineuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1042;"	d
glGetUniformSubroutineuiv	lib/gl3w/GL/gl3w.h	1042;"	d
glGetUniformdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1035;"	d
glGetUniformdv	lib/gl3w/GL/gl3w.h	1035;"	d
glGetUniformfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	753;"	d
glGetUniformfv	lib/gl3w/GL/gl3w.h	753;"	d
glGetUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	754;"	d
glGetUniformiv	lib/gl3w/GL/gl3w.h	754;"	d
glGetUniformuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	865;"	d
glGetUniformuiv	lib/gl3w/GL/gl3w.h	865;"	d
glGetVertexAttribIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	843;"	d
glGetVertexAttribIiv	lib/gl3w/GL/gl3w.h	843;"	d
glGetVertexAttribIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	844;"	d
glGetVertexAttribIuiv	lib/gl3w/GL/gl3w.h	844;"	d
glGetVertexAttribLdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1134;"	d
glGetVertexAttribLdv	lib/gl3w/GL/gl3w.h	1134;"	d
glGetVertexAttribPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	758;"	d
glGetVertexAttribPointerv	lib/gl3w/GL/gl3w.h	758;"	d
glGetVertexAttribdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	755;"	d
glGetVertexAttribdv	lib/gl3w/GL/gl3w.h	755;"	d
glGetVertexAttribfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	756;"	d
glGetVertexAttribfv	lib/gl3w/GL/gl3w.h	756;"	d
glGetVertexAttribiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	757;"	d
glGetVertexAttribiv	lib/gl3w/GL/gl3w.h	757;"	d
glGetnCompressedTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1153;"	d
glGetnCompressedTexImageARB	lib/gl3w/GL/gl3w.h	1153;"	d
glGetnTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1151;"	d
glGetnTexImageARB	lib/gl3w/GL/gl3w.h	1151;"	d
glGetnUniformdvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1157;"	d
glGetnUniformdvARB	lib/gl3w/GL/gl3w.h	1157;"	d
glGetnUniformfvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1154;"	d
glGetnUniformfvARB	lib/gl3w/GL/gl3w.h	1154;"	d
glGetnUniformivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1155;"	d
glGetnUniformivARB	lib/gl3w/GL/gl3w.h	1155;"	d
glGetnUniformuivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1156;"	d
glGetnUniformuivARB	lib/gl3w/GL/gl3w.h	1156;"	d
glHint	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	627;"	d
glHint	lib/gl3w/GL/gl3w.h	627;"	d
glInvalidateBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1211;"	d
glInvalidateBufferData	lib/gl3w/GL/gl3w.h	1211;"	d
glInvalidateBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1210;"	d
glInvalidateBufferSubData	lib/gl3w/GL/gl3w.h	1210;"	d
glInvalidateFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1212;"	d
glInvalidateFramebuffer	lib/gl3w/GL/gl3w.h	1212;"	d
glInvalidateSubFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1213;"	d
glInvalidateSubFramebuffer	lib/gl3w/GL/gl3w.h	1213;"	d
glInvalidateTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1209;"	d
glInvalidateTexImage	lib/gl3w/GL/gl3w.h	1209;"	d
glInvalidateTexSubImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1208;"	d
glInvalidateTexSubImage	lib/gl3w/GL/gl3w.h	1208;"	d
glIsBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	720;"	d
glIsBuffer	lib/gl3w/GL/gl3w.h	720;"	d
glIsEnabled	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	670;"	d
glIsEnabled	lib/gl3w/GL/gl3w.h	670;"	d
glIsEnabledi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	832;"	d
glIsEnabledi	lib/gl3w/GL/gl3w.h	832;"	d
glIsFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	904;"	d
glIsFramebuffer	lib/gl3w/GL/gl3w.h	904;"	d
glIsNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	956;"	d
glIsNamedStringARB	lib/gl3w/GL/gl3w.h	956;"	d
glIsProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	759;"	d
glIsProgram	lib/gl3w/GL/gl3w.h	759;"	d
glIsProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1071;"	d
glIsProgramPipeline	lib/gl3w/GL/gl3w.h	1071;"	d
glIsQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	711;"	d
glIsQuery	lib/gl3w/GL/gl3w.h	711;"	d
glIsRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	898;"	d
glIsRenderbuffer	lib/gl3w/GL/gl3w.h	898;"	d
glIsSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	963;"	d
glIsSampler	lib/gl3w/GL/gl3w.h	963;"	d
glIsShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	760;"	d
glIsShader	lib/gl3w/GL/gl3w.h	760;"	d
glIsSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	938;"	d
glIsSync	lib/gl3w/GL/gl3w.h	938;"	d
glIsTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	686;"	d
glIsTexture	lib/gl3w/GL/gl3w.h	686;"	d
glIsTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1049;"	d
glIsTransformFeedback	lib/gl3w/GL/gl3w.h	1049;"	d
glIsVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	923;"	d
glIsVertexArray	lib/gl3w/GL/gl3w.h	923;"	d
glLineWidth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	628;"	d
glLineWidth	lib/gl3w/GL/gl3w.h	628;"	d
glLinkProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	761;"	d
glLinkProgram	lib/gl3w/GL/gl3w.h	761;"	d
glLinkProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglLinkProgram glLinkProgram;$/;"	v
glLogicOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	651;"	d
glLogicOp	lib/gl3w/GL/gl3w.h	651;"	d
glMapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	724;"	d
glMapBuffer	lib/gl3w/GL/gl3w.h	724;"	d
glMapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglMapBuffer glMapBuffer;$/;"	v
glMapBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	918;"	d
glMapBufferRange	lib/gl3w/GL/gl3w.h	918;"	d
glMemoryBarrier	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1166;"	d
glMemoryBarrier	lib/gl3w/GL/gl3w.h	1166;"	d
glMinSampleShading	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	893;"	d
glMinSampleShading	lib/gl3w/GL/gl3w.h	893;"	d
glMinSampleShadingARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	952;"	d
glMinSampleShadingARB	lib/gl3w/GL/gl3w.h	952;"	d
glMultiDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	703;"	d
glMultiDrawArrays	lib/gl3w/GL/gl3w.h	703;"	d
glMultiDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1214;"	d
glMultiDrawArraysIndirect	lib/gl3w/GL/gl3w.h	1214;"	d
glMultiDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	704;"	d
glMultiDrawElements	lib/gl3w/GL/gl3w.h	704;"	d
glMultiDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	935;"	d
glMultiDrawElementsBaseVertex	lib/gl3w/GL/gl3w.h	935;"	d
glMultiDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1215;"	d
glMultiDrawElementsIndirect	lib/gl3w/GL/gl3w.h	1215;"	d
glMultiTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	992;"	d
glMultiTexCoordP1ui	lib/gl3w/GL/gl3w.h	992;"	d
glMultiTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	993;"	d
glMultiTexCoordP1uiv	lib/gl3w/GL/gl3w.h	993;"	d
glMultiTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	994;"	d
glMultiTexCoordP2ui	lib/gl3w/GL/gl3w.h	994;"	d
glMultiTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	995;"	d
glMultiTexCoordP2uiv	lib/gl3w/GL/gl3w.h	995;"	d
glMultiTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	996;"	d
glMultiTexCoordP3ui	lib/gl3w/GL/gl3w.h	996;"	d
glMultiTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	997;"	d
glMultiTexCoordP3uiv	lib/gl3w/GL/gl3w.h	997;"	d
glMultiTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	998;"	d
glMultiTexCoordP4ui	lib/gl3w/GL/gl3w.h	998;"	d
glMultiTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	999;"	d
glMultiTexCoordP4uiv	lib/gl3w/GL/gl3w.h	999;"	d
glNamedFramebufferParameteriEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1205;"	d
glNamedFramebufferParameteriEXT	lib/gl3w/GL/gl3w.h	1205;"	d
glNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	953;"	d
glNamedStringARB	lib/gl3w/GL/gl3w.h	953;"	d
glNormalP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1000;"	d
glNormalP3ui	lib/gl3w/GL/gl3w.h	1000;"	d
glNormalP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1001;"	d
glNormalP3uiv	lib/gl3w/GL/gl3w.h	1001;"	d
glObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1179;"	d
glObjectLabel	lib/gl3w/GL/gl3w.h	1179;"	d
glObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1181;"	d
glObjectPtrLabel	lib/gl3w/GL/gl3w.h	1181;"	d
glPatchParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1045;"	d
glPatchParameterfv	lib/gl3w/GL/gl3w.h	1045;"	d
glPatchParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1044;"	d
glPatchParameteri	lib/gl3w/GL/gl3w.h	1044;"	d
glPauseTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1050;"	d
glPauseTransformFeedback	lib/gl3w/GL/gl3w.h	1050;"	d
glPixelStoref	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	655;"	d
glPixelStoref	lib/gl3w/GL/gl3w.h	655;"	d
glPixelStorei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	656;"	d
glPixelStorei	lib/gl3w/GL/gl3w.h	656;"	d
glPointParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	705;"	d
glPointParameterf	lib/gl3w/GL/gl3w.h	705;"	d
glPointParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	706;"	d
glPointParameterfv	lib/gl3w/GL/gl3w.h	706;"	d
glPointParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	707;"	d
glPointParameteri	lib/gl3w/GL/gl3w.h	707;"	d
glPointParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	708;"	d
glPointParameteriv	lib/gl3w/GL/gl3w.h	708;"	d
glPointSize	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	629;"	d
glPointSize	lib/gl3w/GL/gl3w.h	629;"	d
glPolygonMode	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	630;"	d
glPolygonMode	lib/gl3w/GL/gl3w.h	630;"	d
glPolygonOffset	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	676;"	d
glPolygonOffset	lib/gl3w/GL/gl3w.h	676;"	d
glPopDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1178;"	d
glPopDebugGroup	lib/gl3w/GL/gl3w.h	1178;"	d
glPrimitiveRestartIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	888;"	d
glPrimitiveRestartIndex	lib/gl3w/GL/gl3w.h	888;"	d
glProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1063;"	d
glProgramBinary	lib/gl3w/GL/gl3w.h	1063;"	d
glProgramParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1064;"	d
glProgramParameteri	lib/gl3w/GL/gl3w.h	1064;"	d
glProgramUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1077;"	d
glProgramUniform1d	lib/gl3w/GL/gl3w.h	1077;"	d
glProgramUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1078;"	d
glProgramUniform1dv	lib/gl3w/GL/gl3w.h	1078;"	d
glProgramUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1075;"	d
glProgramUniform1f	lib/gl3w/GL/gl3w.h	1075;"	d
glProgramUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1076;"	d
glProgramUniform1fv	lib/gl3w/GL/gl3w.h	1076;"	d
glProgramUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1073;"	d
glProgramUniform1i	lib/gl3w/GL/gl3w.h	1073;"	d
glProgramUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1074;"	d
glProgramUniform1iv	lib/gl3w/GL/gl3w.h	1074;"	d
glProgramUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1079;"	d
glProgramUniform1ui	lib/gl3w/GL/gl3w.h	1079;"	d
glProgramUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1080;"	d
glProgramUniform1uiv	lib/gl3w/GL/gl3w.h	1080;"	d
glProgramUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1085;"	d
glProgramUniform2d	lib/gl3w/GL/gl3w.h	1085;"	d
glProgramUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1086;"	d
glProgramUniform2dv	lib/gl3w/GL/gl3w.h	1086;"	d
glProgramUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1083;"	d
glProgramUniform2f	lib/gl3w/GL/gl3w.h	1083;"	d
glProgramUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1084;"	d
glProgramUniform2fv	lib/gl3w/GL/gl3w.h	1084;"	d
glProgramUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1081;"	d
glProgramUniform2i	lib/gl3w/GL/gl3w.h	1081;"	d
glProgramUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1082;"	d
glProgramUniform2iv	lib/gl3w/GL/gl3w.h	1082;"	d
glProgramUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1087;"	d
glProgramUniform2ui	lib/gl3w/GL/gl3w.h	1087;"	d
glProgramUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1088;"	d
glProgramUniform2uiv	lib/gl3w/GL/gl3w.h	1088;"	d
glProgramUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1093;"	d
glProgramUniform3d	lib/gl3w/GL/gl3w.h	1093;"	d
glProgramUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1094;"	d
glProgramUniform3dv	lib/gl3w/GL/gl3w.h	1094;"	d
glProgramUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1091;"	d
glProgramUniform3f	lib/gl3w/GL/gl3w.h	1091;"	d
glProgramUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1092;"	d
glProgramUniform3fv	lib/gl3w/GL/gl3w.h	1092;"	d
glProgramUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1089;"	d
glProgramUniform3i	lib/gl3w/GL/gl3w.h	1089;"	d
glProgramUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1090;"	d
glProgramUniform3iv	lib/gl3w/GL/gl3w.h	1090;"	d
glProgramUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1095;"	d
glProgramUniform3ui	lib/gl3w/GL/gl3w.h	1095;"	d
glProgramUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1096;"	d
glProgramUniform3uiv	lib/gl3w/GL/gl3w.h	1096;"	d
glProgramUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1101;"	d
glProgramUniform4d	lib/gl3w/GL/gl3w.h	1101;"	d
glProgramUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1102;"	d
glProgramUniform4dv	lib/gl3w/GL/gl3w.h	1102;"	d
glProgramUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1099;"	d
glProgramUniform4f	lib/gl3w/GL/gl3w.h	1099;"	d
glProgramUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1100;"	d
glProgramUniform4fv	lib/gl3w/GL/gl3w.h	1100;"	d
glProgramUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1097;"	d
glProgramUniform4i	lib/gl3w/GL/gl3w.h	1097;"	d
glProgramUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1098;"	d
glProgramUniform4iv	lib/gl3w/GL/gl3w.h	1098;"	d
glProgramUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1103;"	d
glProgramUniform4ui	lib/gl3w/GL/gl3w.h	1103;"	d
glProgramUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1104;"	d
glProgramUniform4uiv	lib/gl3w/GL/gl3w.h	1104;"	d
glProgramUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1108;"	d
glProgramUniformMatrix2dv	lib/gl3w/GL/gl3w.h	1108;"	d
glProgramUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1105;"	d
glProgramUniformMatrix2fv	lib/gl3w/GL/gl3w.h	1105;"	d
glProgramUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1117;"	d
glProgramUniformMatrix2x3dv	lib/gl3w/GL/gl3w.h	1117;"	d
glProgramUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1111;"	d
glProgramUniformMatrix2x3fv	lib/gl3w/GL/gl3w.h	1111;"	d
glProgramUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1119;"	d
glProgramUniformMatrix2x4dv	lib/gl3w/GL/gl3w.h	1119;"	d
glProgramUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1113;"	d
glProgramUniformMatrix2x4fv	lib/gl3w/GL/gl3w.h	1113;"	d
glProgramUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1109;"	d
glProgramUniformMatrix3dv	lib/gl3w/GL/gl3w.h	1109;"	d
glProgramUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1106;"	d
glProgramUniformMatrix3fv	lib/gl3w/GL/gl3w.h	1106;"	d
glProgramUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1118;"	d
glProgramUniformMatrix3x2dv	lib/gl3w/GL/gl3w.h	1118;"	d
glProgramUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1112;"	d
glProgramUniformMatrix3x2fv	lib/gl3w/GL/gl3w.h	1112;"	d
glProgramUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1121;"	d
glProgramUniformMatrix3x4dv	lib/gl3w/GL/gl3w.h	1121;"	d
glProgramUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1115;"	d
glProgramUniformMatrix3x4fv	lib/gl3w/GL/gl3w.h	1115;"	d
glProgramUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1110;"	d
glProgramUniformMatrix4dv	lib/gl3w/GL/gl3w.h	1110;"	d
glProgramUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1107;"	d
glProgramUniformMatrix4fv	lib/gl3w/GL/gl3w.h	1107;"	d
glProgramUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1120;"	d
glProgramUniformMatrix4x2dv	lib/gl3w/GL/gl3w.h	1120;"	d
glProgramUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1114;"	d
glProgramUniformMatrix4x2fv	lib/gl3w/GL/gl3w.h	1114;"	d
glProgramUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1122;"	d
glProgramUniformMatrix4x3dv	lib/gl3w/GL/gl3w.h	1122;"	d
glProgramUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1116;"	d
glProgramUniformMatrix4x3fv	lib/gl3w/GL/gl3w.h	1116;"	d
glProvokingVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	936;"	d
glProvokingVertex	lib/gl3w/GL/gl3w.h	936;"	d
glPushDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1177;"	d
glPushDebugGroup	lib/gl3w/GL/gl3w.h	1177;"	d
glQueryCounter	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	975;"	d
glQueryCounter	lib/gl3w/GL/gl3w.h	975;"	d
glReadBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	657;"	d
glReadBuffer	lib/gl3w/GL/gl3w.h	657;"	d
glReadPixels	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	658;"	d
glReadPixels	lib/gl3w/GL/gl3w.h	658;"	d
glReadnPixelsARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1152;"	d
glReadnPixelsARB	lib/gl3w/GL/gl3w.h	1152;"	d
glReleaseShaderCompiler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1057;"	d
glReleaseShaderCompiler	lib/gl3w/GL/gl3w.h	1057;"	d
glRenderbufferStorage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	902;"	d
glRenderbufferStorage	lib/gl3w/GL/gl3w.h	902;"	d
glRenderbufferStorageMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	916;"	d
glRenderbufferStorageMultisample	lib/gl3w/GL/gl3w.h	916;"	d
glResumeTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1051;"	d
glResumeTransformFeedback	lib/gl3w/GL/gl3w.h	1051;"	d
glSampleCoverage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	694;"	d
glSampleCoverage	lib/gl3w/GL/gl3w.h	694;"	d
glSampleMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	947;"	d
glSampleMaski	lib/gl3w/GL/gl3w.h	947;"	d
glSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	969;"	d
glSamplerParameterIiv	lib/gl3w/GL/gl3w.h	969;"	d
glSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	970;"	d
glSamplerParameterIuiv	lib/gl3w/GL/gl3w.h	970;"	d
glSamplerParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	967;"	d
glSamplerParameterf	lib/gl3w/GL/gl3w.h	967;"	d
glSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	968;"	d
glSamplerParameterfv	lib/gl3w/GL/gl3w.h	968;"	d
glSamplerParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	965;"	d
glSamplerParameteri	lib/gl3w/GL/gl3w.h	965;"	d
glSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	966;"	d
glSamplerParameteriv	lib/gl3w/GL/gl3w.h	966;"	d
glScissor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	631;"	d
glScissor	lib/gl3w/GL/gl3w.h	631;"	d
glScissorArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1138;"	d
glScissorArrayv	lib/gl3w/GL/gl3w.h	1138;"	d
glScissorIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1139;"	d
glScissorIndexed	lib/gl3w/GL/gl3w.h	1139;"	d
glScissorIndexedv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1140;"	d
glScissorIndexedv	lib/gl3w/GL/gl3w.h	1140;"	d
glSecondaryColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1006;"	d
glSecondaryColorP3ui	lib/gl3w/GL/gl3w.h	1006;"	d
glSecondaryColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1007;"	d
glSecondaryColorP3uiv	lib/gl3w/GL/gl3w.h	1007;"	d
glShaderBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1058;"	d
glShaderBinary	lib/gl3w/GL/gl3w.h	1058;"	d
glShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	762;"	d
glShaderSource	lib/gl3w/GL/gl3w.h	762;"	d
glShaderSource	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglShaderSource glShaderSource;$/;"	v
glShaderStorageBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1222;"	d
glShaderStorageBlockBinding	lib/gl3w/GL/gl3w.h	1222;"	d
glStencilFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	652;"	d
glStencilFunc	lib/gl3w/GL/gl3w.h	652;"	d
glStencilFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	731;"	d
glStencilFuncSeparate	lib/gl3w/GL/gl3w.h	731;"	d
glStencilMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	643;"	d
glStencilMask	lib/gl3w/GL/gl3w.h	643;"	d
glStencilMaskSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	732;"	d
glStencilMaskSeparate	lib/gl3w/GL/gl3w.h	732;"	d
glStencilOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	653;"	d
glStencilOp	lib/gl3w/GL/gl3w.h	653;"	d
glStencilOpSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	730;"	d
glStencilOpSeparate	lib/gl3w/GL/gl3w.h	730;"	d
glTexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	887;"	d
glTexBuffer	lib/gl3w/GL/gl3w.h	887;"	d
glTexBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1223;"	d
glTexBufferRange	lib/gl3w/GL/gl3w.h	1223;"	d
glTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	984;"	d
glTexCoordP1ui	lib/gl3w/GL/gl3w.h	984;"	d
glTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	985;"	d
glTexCoordP1uiv	lib/gl3w/GL/gl3w.h	985;"	d
glTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	986;"	d
glTexCoordP2ui	lib/gl3w/GL/gl3w.h	986;"	d
glTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	987;"	d
glTexCoordP2uiv	lib/gl3w/GL/gl3w.h	987;"	d
glTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	988;"	d
glTexCoordP3ui	lib/gl3w/GL/gl3w.h	988;"	d
glTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	989;"	d
glTexCoordP3uiv	lib/gl3w/GL/gl3w.h	989;"	d
glTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	990;"	d
glTexCoordP4ui	lib/gl3w/GL/gl3w.h	990;"	d
glTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	991;"	d
glTexCoordP4uiv	lib/gl3w/GL/gl3w.h	991;"	d
glTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	636;"	d
glTexImage1D	lib/gl3w/GL/gl3w.h	636;"	d
glTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	637;"	d
glTexImage2D	lib/gl3w/GL/gl3w.h	637;"	d
glTexImage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	944;"	d
glTexImage2DMultisample	lib/gl3w/GL/gl3w.h	944;"	d
glTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	690;"	d
glTexImage3D	lib/gl3w/GL/gl3w.h	690;"	d
glTexImage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	945;"	d
glTexImage3DMultisample	lib/gl3w/GL/gl3w.h	945;"	d
glTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	876;"	d
glTexParameterIiv	lib/gl3w/GL/gl3w.h	876;"	d
glTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	877;"	d
glTexParameterIuiv	lib/gl3w/GL/gl3w.h	877;"	d
glTexParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	632;"	d
glTexParameterf	lib/gl3w/GL/gl3w.h	632;"	d
glTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	633;"	d
glTexParameterfv	lib/gl3w/GL/gl3w.h	633;"	d
glTexParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	634;"	d
glTexParameteri	lib/gl3w/GL/gl3w.h	634;"	d
glTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	635;"	d
glTexParameteriv	lib/gl3w/GL/gl3w.h	635;"	d
glTexStorage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1167;"	d
glTexStorage1D	lib/gl3w/GL/gl3w.h	1167;"	d
glTexStorage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1168;"	d
glTexStorage2D	lib/gl3w/GL/gl3w.h	1168;"	d
glTexStorage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1225;"	d
glTexStorage2DMultisample	lib/gl3w/GL/gl3w.h	1225;"	d
glTexStorage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1169;"	d
glTexStorage3D	lib/gl3w/GL/gl3w.h	1169;"	d
glTexStorage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1226;"	d
glTexStorage3DMultisample	lib/gl3w/GL/gl3w.h	1226;"	d
glTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	681;"	d
glTexSubImage1D	lib/gl3w/GL/gl3w.h	681;"	d
glTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	682;"	d
glTexSubImage2D	lib/gl3w/GL/gl3w.h	682;"	d
glTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	691;"	d
glTexSubImage3D	lib/gl3w/GL/gl3w.h	691;"	d
glTextureBufferRangeEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1224;"	d
glTextureBufferRangeEXT	lib/gl3w/GL/gl3w.h	1224;"	d
glTextureStorage1DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1170;"	d
glTextureStorage1DEXT	lib/gl3w/GL/gl3w.h	1170;"	d
glTextureStorage2DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1171;"	d
glTextureStorage2DEXT	lib/gl3w/GL/gl3w.h	1171;"	d
glTextureStorage2DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1227;"	d
glTextureStorage2DMultisampleEXT	lib/gl3w/GL/gl3w.h	1227;"	d
glTextureStorage3DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1172;"	d
glTextureStorage3DEXT	lib/gl3w/GL/gl3w.h	1172;"	d
glTextureStorage3DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1228;"	d
glTextureStorage3DMultisampleEXT	lib/gl3w/GL/gl3w.h	1228;"	d
glTextureView	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1190;"	d
glTextureView	lib/gl3w/GL/gl3w.h	1190;"	d
glTransformFeedbackVaryings	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	837;"	d
glTransformFeedbackVaryings	lib/gl3w/GL/gl3w.h	837;"	d
glUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1018;"	d
glUniform1d	lib/gl3w/GL/gl3w.h	1018;"	d
glUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1022;"	d
glUniform1dv	lib/gl3w/GL/gl3w.h	1022;"	d
glUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	764;"	d
glUniform1f	lib/gl3w/GL/gl3w.h	764;"	d
glUniform1f	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniform1f glUniform1f;$/;"	v
glUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	772;"	d
glUniform1fv	lib/gl3w/GL/gl3w.h	772;"	d
glUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	768;"	d
glUniform1i	lib/gl3w/GL/gl3w.h	768;"	d
glUniform1i	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniform1i glUniform1i;$/;"	v
glUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	776;"	d
glUniform1iv	lib/gl3w/GL/gl3w.h	776;"	d
glUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	868;"	d
glUniform1ui	lib/gl3w/GL/gl3w.h	868;"	d
glUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	872;"	d
glUniform1uiv	lib/gl3w/GL/gl3w.h	872;"	d
glUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1019;"	d
glUniform2d	lib/gl3w/GL/gl3w.h	1019;"	d
glUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1023;"	d
glUniform2dv	lib/gl3w/GL/gl3w.h	1023;"	d
glUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	765;"	d
glUniform2f	lib/gl3w/GL/gl3w.h	765;"	d
glUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	773;"	d
glUniform2fv	lib/gl3w/GL/gl3w.h	773;"	d
glUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	769;"	d
glUniform2i	lib/gl3w/GL/gl3w.h	769;"	d
glUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	777;"	d
glUniform2iv	lib/gl3w/GL/gl3w.h	777;"	d
glUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	869;"	d
glUniform2ui	lib/gl3w/GL/gl3w.h	869;"	d
glUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	873;"	d
glUniform2uiv	lib/gl3w/GL/gl3w.h	873;"	d
glUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1020;"	d
glUniform3d	lib/gl3w/GL/gl3w.h	1020;"	d
glUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1024;"	d
glUniform3dv	lib/gl3w/GL/gl3w.h	1024;"	d
glUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	766;"	d
glUniform3f	lib/gl3w/GL/gl3w.h	766;"	d
glUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	774;"	d
glUniform3fv	lib/gl3w/GL/gl3w.h	774;"	d
glUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	770;"	d
glUniform3i	lib/gl3w/GL/gl3w.h	770;"	d
glUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	778;"	d
glUniform3iv	lib/gl3w/GL/gl3w.h	778;"	d
glUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	870;"	d
glUniform3ui	lib/gl3w/GL/gl3w.h	870;"	d
glUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	874;"	d
glUniform3uiv	lib/gl3w/GL/gl3w.h	874;"	d
glUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1021;"	d
glUniform4d	lib/gl3w/GL/gl3w.h	1021;"	d
glUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1025;"	d
glUniform4dv	lib/gl3w/GL/gl3w.h	1025;"	d
glUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	767;"	d
glUniform4f	lib/gl3w/GL/gl3w.h	767;"	d
glUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	775;"	d
glUniform4fv	lib/gl3w/GL/gl3w.h	775;"	d
glUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	771;"	d
glUniform4i	lib/gl3w/GL/gl3w.h	771;"	d
glUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	779;"	d
glUniform4iv	lib/gl3w/GL/gl3w.h	779;"	d
glUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	871;"	d
glUniform4ui	lib/gl3w/GL/gl3w.h	871;"	d
glUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	875;"	d
glUniform4uiv	lib/gl3w/GL/gl3w.h	875;"	d
glUniformBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	930;"	d
glUniformBlockBinding	lib/gl3w/GL/gl3w.h	930;"	d
glUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1026;"	d
glUniformMatrix2dv	lib/gl3w/GL/gl3w.h	1026;"	d
glUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	780;"	d
glUniformMatrix2fv	lib/gl3w/GL/gl3w.h	780;"	d
glUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1029;"	d
glUniformMatrix2x3dv	lib/gl3w/GL/gl3w.h	1029;"	d
glUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	821;"	d
glUniformMatrix2x3fv	lib/gl3w/GL/gl3w.h	821;"	d
glUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1030;"	d
glUniformMatrix2x4dv	lib/gl3w/GL/gl3w.h	1030;"	d
glUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	823;"	d
glUniformMatrix2x4fv	lib/gl3w/GL/gl3w.h	823;"	d
glUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1027;"	d
glUniformMatrix3dv	lib/gl3w/GL/gl3w.h	1027;"	d
glUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	781;"	d
glUniformMatrix3fv	lib/gl3w/GL/gl3w.h	781;"	d
glUniformMatrix3fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniformMatrix3fv glUniformMatrix3fv;$/;"	v
glUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1031;"	d
glUniformMatrix3x2dv	lib/gl3w/GL/gl3w.h	1031;"	d
glUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	822;"	d
glUniformMatrix3x2fv	lib/gl3w/GL/gl3w.h	822;"	d
glUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1032;"	d
glUniformMatrix3x4dv	lib/gl3w/GL/gl3w.h	1032;"	d
glUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	825;"	d
glUniformMatrix3x4fv	lib/gl3w/GL/gl3w.h	825;"	d
glUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1028;"	d
glUniformMatrix4dv	lib/gl3w/GL/gl3w.h	1028;"	d
glUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	782;"	d
glUniformMatrix4fv	lib/gl3w/GL/gl3w.h	782;"	d
glUniformMatrix4fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniformMatrix4fv glUniformMatrix4fv;$/;"	v
glUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1033;"	d
glUniformMatrix4x2dv	lib/gl3w/GL/gl3w.h	1033;"	d
glUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	824;"	d
glUniformMatrix4x2fv	lib/gl3w/GL/gl3w.h	824;"	d
glUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1034;"	d
glUniformMatrix4x3dv	lib/gl3w/GL/gl3w.h	1034;"	d
glUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	826;"	d
glUniformMatrix4x3fv	lib/gl3w/GL/gl3w.h	826;"	d
glUniformSubroutinesuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1041;"	d
glUniformSubroutinesuiv	lib/gl3w/GL/gl3w.h	1041;"	d
glUnmapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	725;"	d
glUnmapBuffer	lib/gl3w/GL/gl3w.h	725;"	d
glUnmapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUnmapBuffer glUnmapBuffer;$/;"	v
glUseProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	763;"	d
glUseProgram	lib/gl3w/GL/gl3w.h	763;"	d
glUseProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUseProgram glUseProgram;$/;"	v
glUseProgramStages	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1065;"	d
glUseProgramStages	lib/gl3w/GL/gl3w.h	1065;"	d
glValidateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	783;"	d
glValidateProgram	lib/gl3w/GL/gl3w.h	783;"	d
glValidateProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1123;"	d
glValidateProgramPipeline	lib/gl3w/GL/gl3w.h	1123;"	d
glVertexArrayBindVertexBufferEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1197;"	d
glVertexArrayBindVertexBufferEXT	lib/gl3w/GL/gl3w.h	1197;"	d
glVertexArrayVertexAttribBindingEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1201;"	d
glVertexArrayVertexAttribBindingEXT	lib/gl3w/GL/gl3w.h	1201;"	d
glVertexArrayVertexAttribFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1198;"	d
glVertexArrayVertexAttribFormatEXT	lib/gl3w/GL/gl3w.h	1198;"	d
glVertexArrayVertexAttribIFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1199;"	d
glVertexArrayVertexAttribIFormatEXT	lib/gl3w/GL/gl3w.h	1199;"	d
glVertexArrayVertexAttribLFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1200;"	d
glVertexArrayVertexAttribLFormatEXT	lib/gl3w/GL/gl3w.h	1200;"	d
glVertexArrayVertexBindingDivisorEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1202;"	d
glVertexArrayVertexBindingDivisorEXT	lib/gl3w/GL/gl3w.h	1202;"	d
glVertexAttrib1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	784;"	d
glVertexAttrib1d	lib/gl3w/GL/gl3w.h	784;"	d
glVertexAttrib1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	785;"	d
glVertexAttrib1dv	lib/gl3w/GL/gl3w.h	785;"	d
glVertexAttrib1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	786;"	d
glVertexAttrib1f	lib/gl3w/GL/gl3w.h	786;"	d
glVertexAttrib1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	787;"	d
glVertexAttrib1fv	lib/gl3w/GL/gl3w.h	787;"	d
glVertexAttrib1s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	788;"	d
glVertexAttrib1s	lib/gl3w/GL/gl3w.h	788;"	d
glVertexAttrib1sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	789;"	d
glVertexAttrib1sv	lib/gl3w/GL/gl3w.h	789;"	d
glVertexAttrib2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	790;"	d
glVertexAttrib2d	lib/gl3w/GL/gl3w.h	790;"	d
glVertexAttrib2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	791;"	d
glVertexAttrib2dv	lib/gl3w/GL/gl3w.h	791;"	d
glVertexAttrib2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	792;"	d
glVertexAttrib2f	lib/gl3w/GL/gl3w.h	792;"	d
glVertexAttrib2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	793;"	d
glVertexAttrib2fv	lib/gl3w/GL/gl3w.h	793;"	d
glVertexAttrib2s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	794;"	d
glVertexAttrib2s	lib/gl3w/GL/gl3w.h	794;"	d
glVertexAttrib2sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	795;"	d
glVertexAttrib2sv	lib/gl3w/GL/gl3w.h	795;"	d
glVertexAttrib3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	796;"	d
glVertexAttrib3d	lib/gl3w/GL/gl3w.h	796;"	d
glVertexAttrib3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	797;"	d
glVertexAttrib3dv	lib/gl3w/GL/gl3w.h	797;"	d
glVertexAttrib3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	798;"	d
glVertexAttrib3f	lib/gl3w/GL/gl3w.h	798;"	d
glVertexAttrib3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	799;"	d
glVertexAttrib3fv	lib/gl3w/GL/gl3w.h	799;"	d
glVertexAttrib3s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	800;"	d
glVertexAttrib3s	lib/gl3w/GL/gl3w.h	800;"	d
glVertexAttrib3sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	801;"	d
glVertexAttrib3sv	lib/gl3w/GL/gl3w.h	801;"	d
glVertexAttrib4Nbv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	802;"	d
glVertexAttrib4Nbv	lib/gl3w/GL/gl3w.h	802;"	d
glVertexAttrib4Niv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	803;"	d
glVertexAttrib4Niv	lib/gl3w/GL/gl3w.h	803;"	d
glVertexAttrib4Nsv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	804;"	d
glVertexAttrib4Nsv	lib/gl3w/GL/gl3w.h	804;"	d
glVertexAttrib4Nub	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	805;"	d
glVertexAttrib4Nub	lib/gl3w/GL/gl3w.h	805;"	d
glVertexAttrib4Nubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	806;"	d
glVertexAttrib4Nubv	lib/gl3w/GL/gl3w.h	806;"	d
glVertexAttrib4Nuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	807;"	d
glVertexAttrib4Nuiv	lib/gl3w/GL/gl3w.h	807;"	d
glVertexAttrib4Nusv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	808;"	d
glVertexAttrib4Nusv	lib/gl3w/GL/gl3w.h	808;"	d
glVertexAttrib4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	809;"	d
glVertexAttrib4bv	lib/gl3w/GL/gl3w.h	809;"	d
glVertexAttrib4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	810;"	d
glVertexAttrib4d	lib/gl3w/GL/gl3w.h	810;"	d
glVertexAttrib4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	811;"	d
glVertexAttrib4dv	lib/gl3w/GL/gl3w.h	811;"	d
glVertexAttrib4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	812;"	d
glVertexAttrib4f	lib/gl3w/GL/gl3w.h	812;"	d
glVertexAttrib4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	813;"	d
glVertexAttrib4fv	lib/gl3w/GL/gl3w.h	813;"	d
glVertexAttrib4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	814;"	d
glVertexAttrib4iv	lib/gl3w/GL/gl3w.h	814;"	d
glVertexAttrib4s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	815;"	d
glVertexAttrib4s	lib/gl3w/GL/gl3w.h	815;"	d
glVertexAttrib4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	816;"	d
glVertexAttrib4sv	lib/gl3w/GL/gl3w.h	816;"	d
glVertexAttrib4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	817;"	d
glVertexAttrib4ubv	lib/gl3w/GL/gl3w.h	817;"	d
glVertexAttrib4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	818;"	d
glVertexAttrib4uiv	lib/gl3w/GL/gl3w.h	818;"	d
glVertexAttrib4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	819;"	d
glVertexAttrib4usv	lib/gl3w/GL/gl3w.h	819;"	d
glVertexAttribBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1195;"	d
glVertexAttribBinding	lib/gl3w/GL/gl3w.h	1195;"	d
glVertexAttribDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	892;"	d
glVertexAttribDivisor	lib/gl3w/GL/gl3w.h	892;"	d
glVertexAttribFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1192;"	d
glVertexAttribFormat	lib/gl3w/GL/gl3w.h	1192;"	d
glVertexAttribI1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	845;"	d
glVertexAttribI1i	lib/gl3w/GL/gl3w.h	845;"	d
glVertexAttribI1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	853;"	d
glVertexAttribI1iv	lib/gl3w/GL/gl3w.h	853;"	d
glVertexAttribI1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	849;"	d
glVertexAttribI1ui	lib/gl3w/GL/gl3w.h	849;"	d
glVertexAttribI1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	857;"	d
glVertexAttribI1uiv	lib/gl3w/GL/gl3w.h	857;"	d
glVertexAttribI2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	846;"	d
glVertexAttribI2i	lib/gl3w/GL/gl3w.h	846;"	d
glVertexAttribI2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	854;"	d
glVertexAttribI2iv	lib/gl3w/GL/gl3w.h	854;"	d
glVertexAttribI2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	850;"	d
glVertexAttribI2ui	lib/gl3w/GL/gl3w.h	850;"	d
glVertexAttribI2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	858;"	d
glVertexAttribI2uiv	lib/gl3w/GL/gl3w.h	858;"	d
glVertexAttribI3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	847;"	d
glVertexAttribI3i	lib/gl3w/GL/gl3w.h	847;"	d
glVertexAttribI3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	855;"	d
glVertexAttribI3iv	lib/gl3w/GL/gl3w.h	855;"	d
glVertexAttribI3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	851;"	d
glVertexAttribI3ui	lib/gl3w/GL/gl3w.h	851;"	d
glVertexAttribI3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	859;"	d
glVertexAttribI3uiv	lib/gl3w/GL/gl3w.h	859;"	d
glVertexAttribI4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	861;"	d
glVertexAttribI4bv	lib/gl3w/GL/gl3w.h	861;"	d
glVertexAttribI4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	848;"	d
glVertexAttribI4i	lib/gl3w/GL/gl3w.h	848;"	d
glVertexAttribI4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	856;"	d
glVertexAttribI4iv	lib/gl3w/GL/gl3w.h	856;"	d
glVertexAttribI4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	862;"	d
glVertexAttribI4sv	lib/gl3w/GL/gl3w.h	862;"	d
glVertexAttribI4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	863;"	d
glVertexAttribI4ubv	lib/gl3w/GL/gl3w.h	863;"	d
glVertexAttribI4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	852;"	d
glVertexAttribI4ui	lib/gl3w/GL/gl3w.h	852;"	d
glVertexAttribI4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	860;"	d
glVertexAttribI4uiv	lib/gl3w/GL/gl3w.h	860;"	d
glVertexAttribI4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	864;"	d
glVertexAttribI4usv	lib/gl3w/GL/gl3w.h	864;"	d
glVertexAttribIFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1193;"	d
glVertexAttribIFormat	lib/gl3w/GL/gl3w.h	1193;"	d
glVertexAttribIPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	842;"	d
glVertexAttribIPointer	lib/gl3w/GL/gl3w.h	842;"	d
glVertexAttribL1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1125;"	d
glVertexAttribL1d	lib/gl3w/GL/gl3w.h	1125;"	d
glVertexAttribL1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1129;"	d
glVertexAttribL1dv	lib/gl3w/GL/gl3w.h	1129;"	d
glVertexAttribL2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1126;"	d
glVertexAttribL2d	lib/gl3w/GL/gl3w.h	1126;"	d
glVertexAttribL2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1130;"	d
glVertexAttribL2dv	lib/gl3w/GL/gl3w.h	1130;"	d
glVertexAttribL3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1127;"	d
glVertexAttribL3d	lib/gl3w/GL/gl3w.h	1127;"	d
glVertexAttribL3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1131;"	d
glVertexAttribL3dv	lib/gl3w/GL/gl3w.h	1131;"	d
glVertexAttribL4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1128;"	d
glVertexAttribL4d	lib/gl3w/GL/gl3w.h	1128;"	d
glVertexAttribL4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1132;"	d
glVertexAttribL4dv	lib/gl3w/GL/gl3w.h	1132;"	d
glVertexAttribLFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1194;"	d
glVertexAttribLFormat	lib/gl3w/GL/gl3w.h	1194;"	d
glVertexAttribLPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1133;"	d
glVertexAttribLPointer	lib/gl3w/GL/gl3w.h	1133;"	d
glVertexAttribP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1008;"	d
glVertexAttribP1ui	lib/gl3w/GL/gl3w.h	1008;"	d
glVertexAttribP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1009;"	d
glVertexAttribP1uiv	lib/gl3w/GL/gl3w.h	1009;"	d
glVertexAttribP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1010;"	d
glVertexAttribP2ui	lib/gl3w/GL/gl3w.h	1010;"	d
glVertexAttribP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1011;"	d
glVertexAttribP2uiv	lib/gl3w/GL/gl3w.h	1011;"	d
glVertexAttribP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1012;"	d
glVertexAttribP3ui	lib/gl3w/GL/gl3w.h	1012;"	d
glVertexAttribP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1013;"	d
glVertexAttribP3uiv	lib/gl3w/GL/gl3w.h	1013;"	d
glVertexAttribP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1014;"	d
glVertexAttribP4ui	lib/gl3w/GL/gl3w.h	1014;"	d
glVertexAttribP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1015;"	d
glVertexAttribP4uiv	lib/gl3w/GL/gl3w.h	1015;"	d
glVertexAttribPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	820;"	d
glVertexAttribPointer	lib/gl3w/GL/gl3w.h	820;"	d
glVertexAttribPointer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglVertexAttribPointer glVertexAttribPointer;$/;"	v
glVertexBindingDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1196;"	d
glVertexBindingDivisor	lib/gl3w/GL/gl3w.h	1196;"	d
glVertexP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	978;"	d
glVertexP2ui	lib/gl3w/GL/gl3w.h	978;"	d
glVertexP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	979;"	d
glVertexP2uiv	lib/gl3w/GL/gl3w.h	979;"	d
glVertexP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	980;"	d
glVertexP3ui	lib/gl3w/GL/gl3w.h	980;"	d
glVertexP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	981;"	d
glVertexP3uiv	lib/gl3w/GL/gl3w.h	981;"	d
glVertexP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	982;"	d
glVertexP4ui	lib/gl3w/GL/gl3w.h	982;"	d
glVertexP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	983;"	d
glVertexP4uiv	lib/gl3w/GL/gl3w.h	983;"	d
glViewport	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	672;"	d
glViewport	lib/gl3w/GL/gl3w.h	672;"	d
glViewportArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1135;"	d
glViewportArrayv	lib/gl3w/GL/gl3w.h	1135;"	d
glViewportIndexedf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1136;"	d
glViewportIndexedf	lib/gl3w/GL/gl3w.h	1136;"	d
glViewportIndexedfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	1137;"	d
glViewportIndexedfv	lib/gl3w/GL/gl3w.h	1137;"	d
glWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	941;"	d
glWaitSync	lib/gl3w/GL/gl3w.h	941;"	d
gl_err	lib/nuklear/demo/x11_opengl2/main.c	/^static int gl_err = nk_false;$/;"	v	file:
gl_err	lib/nuklear/demo/x11_opengl3/main.c	/^static int gl_err = nk_false;$/;"	v	file:
gl_error_handler	lib/nuklear/demo/x11_opengl2/main.c	/^static int gl_error_handler(Display *dpy, XErrorEvent *ev)$/;"	f	file:
gl_error_handler	lib/nuklear/demo/x11_opengl3/main.c	/^static int gl_error_handler(Display *dpy, XErrorEvent *ev)$/;"	f	file:
glfw	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfw	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfw	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfw_error_callback	lib/cimgui/imgui/examples/example_glfw_opengl2/main.cpp	/^static void glfw_error_callback(int error, const char* description)$/;"	f	file:
glfw_error_callback	lib/cimgui/imgui/examples/example_glfw_opengl3/main.cpp	/^static void glfw_error_callback(int error, const char* description)$/;"	f	file:
glfw_error_callback	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void glfw_error_callback(int error, const char* description)$/;"	f	file:
glfw_resize_callback	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^static void glfw_resize_callback(GLFWwindow*, int w, int h)$/;"	f	file:
global_alpha	lib/nuklear/nuklear.h	/^    float global_alpha; \/* global alpha value *\/$/;"	m	struct:nk_convert_config
global_alpha	lib/nuklear/src/nuklear.h	/^    float global_alpha; \/* global alpha value *\/$/;"	m	struct:nk_convert_config
global_t	lib/klib/test/kthread_test.c	/^} global_t;$/;"	t	typeref:struct:__anon17	file:
glsl_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int glsl_available;$/;"	m	struct:opengl_info
glsl_version_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *glsl_version_str;$/;"	m	struct:opengl_info
glut_display_func	lib/cimgui/imgui/examples/example_glut_opengl2/main.cpp	/^void glut_display_func()$/;"	f
glyf	lib/cimgui/imgui/imstb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
glyf	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
glyf	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	file:
glyph_count	lib/nuklear/nuklear.h	/^    int glyph_count;$/;"	m	struct:nk_font_atlas
glyph_count	lib/nuklear/nuklear.h	/^    nk_rune glyph_count;$/;"	m	struct:nk_baked_font
glyph_count	lib/nuklear/src/nuklear.h	/^    int glyph_count;$/;"	m	struct:nk_font_atlas
glyph_count	lib/nuklear/src/nuklear.h	/^    nk_rune glyph_count;$/;"	m	struct:nk_baked_font
glyph_offset	lib/nuklear/nuklear.h	/^    nk_rune glyph_offset;$/;"	m	struct:nk_baked_font
glyph_offset	lib/nuklear/src/nuklear.h	/^    nk_rune glyph_offset;$/;"	m	struct:nk_baked_font
glyphs	lib/nuklear/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_glyph
glyphs	lib/nuklear/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font_glyph
glyphs	lib/nuklear/src/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font_glyph
glyphs	lib/nuklear/src/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_font_glyph
gpos	lib/cimgui/imgui/imstb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
grab	lib/nuklear/nuklear.h	/^    unsigned char grab;$/;"	m	struct:nk_mouse
grab	lib/nuklear/src/nuklear.h	/^    unsigned char grab;$/;"	m	struct:nk_mouse
grabbed	lib/nuklear/nuklear.h	/^    unsigned char grabbed;$/;"	m	struct:nk_mouse
grabbed	lib/nuklear/src/nuklear.h	/^    unsigned char grabbed;$/;"	m	struct:nk_mouse
graphics_card_vendors	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^enum graphics_card_vendors {$/;"	g
green	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned short* green;$/;"	m	struct:GLFWgammaramp
greenBits	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int greenBits;$/;"	m	struct:GLFWvidmode
grid_demo	lib/nuklear/example/extended.c	/^grid_demo(struct nk_context *ctx, struct media *media)$/;"	f	file:
group	lib/nuklear/example/file_browser.c	/^    enum file_groups group;$/;"	m	struct:file	typeref:enum:file::file_groups	file:
group	lib/nuklear/example/file_browser.c	/^    enum file_groups group;$/;"	m	struct:file_group	typeref:enum:file_group::file_groups	file:
group	lib/nuklear/example/file_browser.c	/^    struct file_group group[FILE_GROUP_MAX];$/;"	m	struct:media	typeref:struct:media::file_group	file:
group_border	lib/nuklear/nuklear.h	/^    float group_border;$/;"	m	struct:nk_style_window
group_border	lib/nuklear/src/nuklear.h	/^    float group_border;$/;"	m	struct:nk_style_window
group_border_color	lib/nuklear/nuklear.h	/^    struct nk_color group_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
group_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color group_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
group_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 group_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
group_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 group_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
grow_factor	lib/nuklear/nuklear.h	/^    float grow_factor;$/;"	m	struct:nk_buffer
grow_factor	lib/nuklear/src/nuklear.h	/^    float grow_factor;$/;"	m	struct:nk_buffer
gsubrs	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt__buf gsubrs;                 \/\/ global charstring subroutines index$/;"	m	struct:stbtt_fontinfo
gui_alpha_1	src/gui.c	/^float gui_alpha_1    = 0.10;$/;"	v
gui_alpha_1	src/gui.h	/^float gui_alpha_1;$/;"	v
gui_alpha_2	src/gui.c	/^float gui_alpha_2    = 0.75;$/;"	v
gui_alpha_2	src/gui.h	/^float gui_alpha_2;$/;"	v
gui_camera_radius	src/gui.c	/^float gui_camera_radius = 40.0;$/;"	v
gui_camera_radius	src/gui.h	/^float gui_camera_radius;$/;"	v
gui_camera_rx	src/gui.c	/^float gui_camera_rx = 30.0;$/;"	v
gui_camera_rx	src/gui.h	/^float gui_camera_rx;$/;"	v
gui_camera_ry	src/gui.c	/^float gui_camera_ry = 30.0;$/;"	v
gui_camera_ry	src/gui.h	/^float gui_camera_ry;$/;"	v
gui_col_id	src/gui.c	/^int gui_col_id = 0;$/;"	v
gui_col_id	src/gui.h	/^int gui_col_id;$/;"	v
gui_focused	src/gui.c	/^int gui_focused = 0;$/;"	v
gui_focused	src/gui.h	/^int gui_focused;$/;"	v
gui_init	src/gui.c	/^void gui_init(GLFWwindow* win) {$/;"	f
gui_max	src/gui.c	/^float gui_max = 50.0;$/;"	v
gui_max	src/gui.h	/^float gui_max;$/;"	v
gui_min	src/gui.c	/^float gui_min = 0.0;$/;"	v
gui_min	src/gui.h	/^float gui_min;$/;"	v
gui_off_u	src/gui.c	/^float gui_off_u = 10.0;$/;"	v
gui_off_u	src/gui.h	/^float gui_off_u;$/;"	v
gui_point_size	src/gui.c	/^float gui_point_size = 1.0;$/;"	v
gui_point_size	src/gui.h	/^float gui_point_size;$/;"	v
gui_render	src/gui.c	/^gui_render(){$/;"	f
gui_rot_u	src/gui.c	/^float gui_rot_u = 0.0;$/;"	v
gui_rot_u	src/gui.h	/^float gui_rot_u;$/;"	v
gui_rot_v	src/gui.c	/^float gui_rot_v = 0.0;$/;"	v
gui_rot_v	src/gui.h	/^float gui_rot_v;$/;"	v
gui_terminate	src/gui.c	/^gui_terminate(){$/;"	f
gui_update	src/gui.c	/^gui_update(scene_t* scene) {$/;"	f
h	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect
h	lib/cimgui/imgui/imstb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
h	lib/cimgui/imgui/imstb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon120
h	lib/klib/ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon3	file:
h	lib/klib/test/kthread_test.c	/^	int max_iter, w, h;$/;"	m	struct:__anon17	file:
h	lib/nuklear/demo/x11/nuklear_xlib.h	/^    unsigned int w, h;$/;"	m	struct:XSurface
h	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    int w, h, pitch;$/;"	m	struct:rawfb_image
h	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    unsigned int w, h;$/;"	m	struct:XSurface
h	lib/nuklear/example/stb_image.h	/^      int h,v;$/;"	m	struct:__anon149::__anon150
h	lib/nuklear/example/stb_image.h	/^   int w,h;$/;"	m	struct:__anon159
h	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
h	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
h	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
h	lib/nuklear/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text
h	lib/nuklear/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap
h	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
h	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
h	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
h	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
h	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
h	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text
h	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
h	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
h	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
h	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	file:
h	lib/nuklear/src/nuklear_font.c	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	file:
h2	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon149::__anon150
h_oversample	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon117
h_oversample	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context
h_oversample	lib/nuklear/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range
h_oversample	lib/nuklear/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context
h_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	file:
h_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	file:
ha	lib/nuklear/example/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon149::__anon150
handle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HFONT handle;$/;"	m	struct:GdiFont
handle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpFont* handle;$/;"	m	struct:GdipFont
handle	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct nk_user_font handle;$/;"	m	struct:XFont	typeref:struct:XFont::nk_user_font
handle	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    struct nk_user_font handle;$/;"	m	struct:XFont	typeref:struct:XFont::nk_user_font
handle	lib/nuklear/nuklear.h	/^    struct nk_user_font handle;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_user_font
handle	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
handle	lib/nuklear/src/nuklear.h	/^    struct nk_user_font handle;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_user_font
handle	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
has_arg	lib/klib/ketopt.h	/^	int has_arg;$/;"	m	struct:__anon30
has_extension	lib/nuklear/demo/x11_opengl2/main.c	/^has_extension(const char *string, const char *ext)$/;"	f	file:
has_extension	lib/nuklear/demo/x11_opengl3/main.c	/^has_extension(const char *string, const char *ext)$/;"	f	file:
has_preferred_x	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char has_preferred_x;$/;"	m	struct:__anon109
has_preferred_x	lib/nuklear/nuklear.h	/^    unsigned char has_preferred_x;$/;"	m	struct:nk_text_edit
has_preferred_x	lib/nuklear/src/nuklear.h	/^    unsigned char has_preferred_x;$/;"	m	struct:nk_text_edit
has_scrolling	lib/nuklear/nuklear.h	/^    unsigned int has_scrolling;$/;"	m	struct:nk_panel
has_scrolling	lib/nuklear/src/nuklear.h	/^    unsigned int has_scrolling;$/;"	m	struct:nk_panel
hash	lib/klib/cpp/khashl.hpp	/^struct KHashMapCachedBucket { KType key; VType val; khint_t hash; };$/;"	m	struct:klib::KHashMapCachedBucket
hash	lib/klib/cpp/khashl.hpp	/^struct KHashSetCachedBucket { KType key; khint_t hash; };$/;"	m	struct:klib::KHashSetCachedBucket
hash_eq	lib/klib/test/khash_test.c	21;"	d	file:
hash_func	lib/klib/test/khash_test.c	22;"	d	file:
hashset_t	lib/klib/cpp/khashl.hpp	/^	typedef KHashSet<bucket_t, KHashCachedHash<bucket_t, khint_t>, KHashCachedEq<bucket_t, Eq>, khint_t> hashset_t;$/;"	t	class:klib::KHashMapCached
hashset_t	lib/klib/cpp/khashl.hpp	/^	typedef KHashSet<bucket_t, KHashCachedHash<bucket_t, khint_t>, KHashCachedEq<bucket_t, Eq>, khint_t> hashset_t;$/;"	t	class:klib::KHashSetCached
hashset_t	lib/klib/cpp/khashl.hpp	/^	typedef KHashSet<bucket_t, KHashMapHash<bucket_t, Hash, khint_t>, KHashMapEq<bucket_t, Eq>, khint_t> hashset_t;$/;"	t	class:klib::KHashMap
hd	lib/nuklear/example/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anon149::__anon150
hdr	lib/klib/kurl.c	/^	struct curl_slist *hdr;$/;"	m	struct:kurl_t	typeref:struct:kurl_t::curl_slist	file:
head	lib/cimgui/imgui/imstb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
head	lib/cimgui/imgui/imstb_truetype.h	/^   struct stbtt__hheap_chunk *head;$/;"	m	struct:stbtt__hheap	typeref:struct:stbtt__hheap::stbtt__hheap_chunk
head	lib/klib/test/kavl_test.c	/^	KAVL_HEAD(struct my_node) head;$/;"	m	struct:my_node	file:
head	lib/klib/test/krmq_test.c	/^	KRMQ_HEAD(struct my_node) head;$/;"	m	struct:my_node	file:
head	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
head	lib/nuklear/nuklear.h	/^    struct nk_tt__hheap_chunk *head;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap::nk_tt__hheap_chunk
head	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	file:
head	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt__hheap_chunk *head;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap::nk_tt__hheap_chunk	file:
header	lib/nuklear/example/skinning.c	/^    struct nk_image header;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command_arc::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command_arc_filled::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command_circle::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command_circle_filled::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_custom	typeref:struct:nk_command_custom::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command_rect::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command_rect_filled::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_scissor	typeref:struct:nk_command_scissor::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_rect header;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_rect
header	lib/nuklear/nuklear.h	/^    struct nk_style_window_header header;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_window_header
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command_arc::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command_arc_filled::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command_circle::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command_circle_filled::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command_curve::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_custom	typeref:struct:nk_command_custom::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_line	typeref:struct:nk_command_line::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command_rect::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command_rect_filled::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_scissor	typeref:struct:nk_command_scissor::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_text	typeref:struct:nk_command_text::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command_triangle::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command_triangle_filled::nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_rect header;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_rect
header	lib/nuklear/src/nuklear.h	/^    struct nk_style_window_header header;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_window_header
header	src/data.h	/^    char** header;        \/\/ csv header$/;"	m	struct:__anon1
header_height	lib/nuklear/nuklear.h	/^    float header_height;$/;"	m	struct:nk_panel
header_height	lib/nuklear/src/nuklear.h	/^    float header_height;$/;"	m	struct:nk_panel
header_t	lib/klib/kalloc.c	/^typedef struct header_t {$/;"	s	file:
header_t	lib/klib/kalloc.c	/^} header_t;$/;"	t	typeref:struct:header_t	file:
heapSort	lib/klib/test/ksort_test.cc	/^void heapSort (int numbers[], int qty) {$/;"	f
height	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWimage
height	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWvidmode
height	lib/cimgui/imgui/imstb_rectpack.h	/^   int height;$/;"	m	struct:stbrp_context
height	lib/cimgui/imgui/imstb_textedit.h	/^   float height; \/\/ height of line$/;"	m	struct:__anon111
height	lib/cimgui/imgui/imstb_truetype.h	/^   int   height;$/;"	m	struct:stbtt_pack_context
height	lib/cimgui/imgui/imstb_truetype.h	/^   int width,height;$/;"	m	struct:__anon129
height	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    int height;$/;"	m	struct:NkAllegro5Font
height	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    unsigned int height;$/;"	m	struct:nk_allegro5
height	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    int height;$/;"	m	struct:GdiFont
height	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    unsigned int height;$/;"	m	struct:__anon176
height	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw
height	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int width, height;$/;"	m	struct:nk_glfw
height	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int width, height;$/;"	m	struct:nk_glfw
height	lib/nuklear/demo/x11/main.c	/^    unsigned int height;$/;"	m	struct:XWindow	file:
height	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int height;$/;"	m	struct:XFont
height	lib/nuklear/demo/x11_opengl2/main.c	/^    int width, height;$/;"	m	struct:XWindow	file:
height	lib/nuklear/demo/x11_opengl3/main.c	/^    int width, height;$/;"	m	struct:XWindow	file:
height	lib/nuklear/demo/x11_rawfb/main.c	/^    unsigned int height;$/;"	m	struct:XWindow	file:
height	lib/nuklear/demo/x11_xft/main.c	/^    unsigned int height;$/;"	m	struct:XWindow	file:
height	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    int height;$/;"	m	struct:XFont
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_baked_font
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_command_text
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_row_layout
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_user_font
height	lib/nuklear/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph
height	lib/nuklear/nuklear.h	/^    int   height;$/;"	m	struct:nk_tt_pack_context
height	lib/nuklear/nuklear.h	/^    int height;$/;"	m	struct:nk_rp_context
height	lib/nuklear/nuklear.h	/^   float height; \/* height of line *\/$/;"	m	struct:nk_text_find
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_baked_font
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_command_text
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_row_layout
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_user_font
height	lib/nuklear/src/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph
height	lib/nuklear/src/nuklear_font.c	/^    int   height;$/;"	m	struct:nk_tt_pack_context	file:
height	lib/nuklear/src/nuklear_font.c	/^    int height;$/;"	m	struct:nk_rp_context	file:
height	lib/nuklear/src/nuklear_text_editor.c	/^   float height; \/* height of line *\/$/;"	m	struct:nk_text_find	file:
height	src/bbgl.c	/^int width = 0, height = 0;$/;"	v
height	src/bbgl.h	/^int height;$/;"	v
heuristic	lib/cimgui/imgui/imstb_rectpack.h	/^   int heuristic;$/;"	m	struct:stbrp_context
heuristic	lib/nuklear/nuklear.h	/^    int heuristic;$/;"	m	struct:nk_rp_context
heuristic	lib/nuklear/src/nuklear_font.c	/^    int heuristic;$/;"	m	struct:nk_rp_context	file:
hhea	lib/cimgui/imgui/imstb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
hhea	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
hhea	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	file:
highlight	lib/nuklear/nuklear.h	/^    struct nk_color highlight;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_color
highlight	lib/nuklear/src/nuklear.h	/^    struct nk_color highlight;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_color
hmm_Q	lib/klib/khmm.c	/^FLOAT hmm_Q(const hmm_par_t *hp, const hmm_exp_t *he)$/;"	f
hmm_Q0	lib/klib/khmm.c	/^FLOAT hmm_Q0(const hmm_par_t *hp, hmm_exp_t *he)$/;"	f
hmm_Viterbi	lib/klib/khmm.c	/^FLOAT hmm_Viterbi(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f
hmm_add_expect	lib/klib/khmm.c	/^void hmm_add_expect(const hmm_exp_t *he0, hmm_exp_t *he1)$/;"	f
hmm_backward	lib/klib/khmm.c	/^void hmm_backward(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f
hmm_data_t	lib/klib/khmm.h	/^} hmm_data_t;$/;"	t	typeref:struct:__anon21
hmm_delete_data	lib/klib/khmm.c	/^void hmm_delete_data(hmm_data_t *hd)$/;"	f
hmm_delete_exp	lib/klib/khmm.c	/^void hmm_delete_exp(hmm_exp_t *he)$/;"	f
hmm_delete_par	lib/klib/khmm.c	/^void hmm_delete_par(hmm_par_t *hp)$/;"	f
hmm_exp_t	lib/klib/khmm.h	/^} hmm_exp_t;$/;"	t	typeref:struct:__anon22
hmm_expect	lib/klib/khmm.c	/^hmm_exp_t *hmm_expect(const hmm_par_t *hp, const hmm_data_t *hd)$/;"	f
hmm_forward	lib/klib/khmm.c	/^void hmm_forward(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f
hmm_gof_t	lib/klib/khmm.h	/^} hmm_gof_t;$/;"	t	typeref:struct:__anon23
hmm_lk	lib/klib/khmm.c	/^FLOAT hmm_lk(const hmm_data_t *hd)$/;"	f
hmm_new_data	lib/klib/khmm.c	/^hmm_data_t *hmm_new_data(int L, const char *seq, const hmm_par_t *hp)$/;"	f
hmm_new_exp	lib/klib/khmm.c	/^hmm_exp_t *hmm_new_exp(const hmm_par_t *hp)$/;"	f
hmm_new_par	lib/klib/khmm.c	/^hmm_par_t *hmm_new_par(int m, int n)$/;"	f
hmm_par_t	lib/klib/khmm.h	/^} hmm_par_t;$/;"	t	typeref:struct:__anon20
hmm_post_decode	lib/klib/khmm.c	/^void hmm_post_decode(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f
hmm_post_state	lib/klib/khmm.c	/^FLOAT hmm_post_state(const hmm_par_t *hp, const hmm_data_t *hd, int u, FLOAT *prob)$/;"	f
hmm_pre_backward	lib/klib/khmm.c	/^void hmm_pre_backward(hmm_par_t *hp)$/;"	f
hmm_simulate	lib/klib/khmm.c	/^char *hmm_simulate(const hmm_par_t *hp, int L)$/;"	f
hmtx	lib/cimgui/imgui/imstb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
hmtx	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
hmtx	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	file:
home	lib/nuklear/example/file_browser.c	/^    char home[MAX_PATH_LEN];$/;"	m	struct:file_browser	file:
home	lib/nuklear/example/file_browser.c	/^    struct nk_image home;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
host	lib/klib/knetfile.h	/^	char *host, *port;$/;"	m	struct:knetFile_s
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
hover_active	lib/nuklear/nuklear.h	/^    struct nk_style_item hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
hover_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
hs	lib/nuklear/example/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon151
ht_destroy_data	lib/klib/test/kbtree_test.c	/^void ht_destroy_data()$/;"	f
ht_destroy_data	lib/klib/test/khash_test.c	/^void ht_destroy_data()$/;"	f
ht_init_data	lib/klib/test/kbtree_test.c	/^void ht_init_data()$/;"	f
ht_init_data	lib/klib/test/khash_test.c	/^void ht_init_data()$/;"	f
ht_khash_int	lib/klib/test/kbtree_test.c	/^void ht_khash_int()$/;"	f
ht_khash_int	lib/klib/test/khash_test.c	/^void ht_khash_int()$/;"	f
ht_khash_packed	lib/klib/test/khash_test.c	/^void ht_khash_packed()$/;"	f
ht_khash_str	lib/klib/test/kbtree_test.c	/^void ht_khash_str()$/;"	f
ht_khash_str	lib/klib/test/khash_test.c	/^void ht_khash_str()$/;"	f
ht_khash_unpack	lib/klib/test/khash_test.c	/^void ht_khash_unpack()$/;"	f
ht_timing	lib/klib/test/kbtree_test.c	/^void ht_timing(void (*f)(void))$/;"	f
ht_timing	lib/klib/test/khash_test.c	/^void ht_timing(void (*f)(void))$/;"	f
http_host	lib/klib/knetfile.h	/^	char *path, *http_host;$/;"	m	struct:knetFile_s
http_open	lib/klib/kopen.c	/^static int http_open(const char *fn)$/;"	f	file:
huff_ac	lib/nuklear/example/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anon149
huff_dc	lib/nuklear/example/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anon149
hypergeo	lib/klib/lua/klib.lua	/^	local function hypergeo(n11, n1_, n_1, n)$/;"	f
hypergeo_inc	lib/klib/lua/klib.lua	/^	local function hypergeo_inc(n11, n1_, n_1, n)$/;"	f
i	lib/klib/kbtree.h	/^	int i;$/;"	m	struct:__anon5
i	lib/klib/kbtree.h	/^	int i;$/;"	m	struct:__anon7
i	lib/klib/ketopt.h	/^	int i, pos, n_args;$/;"	m	struct:__anon29
i	lib/klib/kexpr.c	/^	int64_t i;$/;"	m	struct:ke1_s	file:
i	lib/klib/kthread.c	/^	long i;$/;"	m	struct:__anon36	file:
i	lib/klib/kthread.c	/^	long i;$/;"	m	struct:__anon37	file:
i	lib/klib/test/kgraph_test.c	/^	int i;$/;"	m	struct:__anon13	file:
i	lib/nuklear/nuklear.h	/^    int i;$/;"	m	union:nk_property
i	lib/nuklear/src/nuklear_internal.h	/^    int i;$/;"	m	union:nk_property
icon	lib/nuklear/example/file_browser.c	/^    struct nk_image *icon;$/;"	m	struct:file_group	typeref:struct:file_group::nk_image	file:
icon_load	lib/nuklear/example/extended.c	/^icon_load(const char *filename)$/;"	f	file:
icon_load	lib/nuklear/example/file_browser.c	/^icon_load(const char *filename)$/;"	f	file:
icon_sheet	lib/nuklear/example/file_browser.c	/^    int icon_sheet;$/;"	m	struct:media	file:
icons	lib/nuklear/example/file_browser.c	/^    struct icons icons;$/;"	m	struct:media	typeref:struct:media::icons	file:
icons	lib/nuklear/example/file_browser.c	/^struct icons {$/;"	s	file:
id	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3native.h	/^  typedef void* id;$/;"	t
id	lib/cimgui/imgui/imstb_rectpack.h	/^   int            id;$/;"	m	struct:stbrp_rect
id	lib/cimgui/imgui/imstb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
id	lib/nuklear/example/stb_image.h	/^      int id;$/;"	m	struct:__anon149::__anon150
id	lib/nuklear/nuklear.h	/^    int id;$/;"	m	struct:nk_rp_rect
id	lib/nuklear/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon132
id	lib/nuklear/src/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon161
id	lib/nuklear/src/nuklear_font.c	/^    int id;$/;"	m	struct:nk_rp_rect	file:
id	src/data.h	/^    int     id;          \/\/ cluster id$/;"	m	struct:cluster_stat_t
id	src/data.h	/^    int id;$/;"	m	struct:cat_stat_t
idata	lib/nuklear/example/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon155
idct_block_kernel	lib/nuklear/example/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anon149
idd	src/gui.c	/^ImDrawData idd;$/;"	v
if it.re_name 	lib/cimgui/generator/cpp2ffi.lua	/^			if it.re_name == "function_re" or it.re_name == "functionD_re" then$/;"	f
if itemb.re_name 	lib/cimgui/generator/cpp2ffi.lua	/^							if itemb.re_name == "function_re" or itemb.re_name == "functionD_re" then$/;"	f
if itnsp.re_name 	lib/cimgui/generator/cpp2ffi.lua	/^					if itnsp.re_name == "function_re" or itnsp.re_name == "functionD_re" then$/;"	f
if itnsp.re_name 	lib/cimgui/generator/cpp2ffi.lua	/^					if itnsp.re_name == "struct_re" then --or itnsp.re_name == "functionD_re" then$/;"	f
igAcceptDragDropPayload	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImGuiPayload* igAcceptDragDropPayload(const char* type,ImGuiDragDropFlags flags)$/;"	f
igAcceptDragDropPayload	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImGuiPayload* igAcceptDragDropPayload(const char* type,ImGuiDragDropFlags flags)$/;"	f
igAlignTextToFramePadding	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igAlignTextToFramePadding()$/;"	f
igAlignTextToFramePadding	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igAlignTextToFramePadding()$/;"	f
igArrowButton	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igArrowButton(const char* str_id,ImGuiDir dir)$/;"	f
igArrowButton	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igArrowButton(const char* str_id,ImGuiDir dir)$/;"	f
igBegin	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBegin(const char* name,bool* p_open,ImGuiWindowFlags flags)$/;"	f
igBegin	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBegin(const char* name,bool* p_open,ImGuiWindowFlags flags)$/;"	f
igBeginChild	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginChild(const char* str_id,const ImVec2 size,bool border,ImGuiWindowFlags flags)$/;"	f
igBeginChild	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginChild(const char* str_id,const ImVec2 size,bool border,ImGuiWindowFlags flags)$/;"	f
igBeginChildFrame	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginChildFrame(ImGuiID id,const ImVec2 size,ImGuiWindowFlags flags)$/;"	f
igBeginChildFrame	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginChildFrame(ImGuiID id,const ImVec2 size,ImGuiWindowFlags flags)$/;"	f
igBeginChildID	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginChildID(ImGuiID id,const ImVec2 size,bool border,ImGuiWindowFlags flags)$/;"	f
igBeginChildID	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginChildID(ImGuiID id,const ImVec2 size,bool border,ImGuiWindowFlags flags)$/;"	f
igBeginCombo	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginCombo(const char* label,const char* preview_value,ImGuiComboFlags flags)$/;"	f
igBeginCombo	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginCombo(const char* label,const char* preview_value,ImGuiComboFlags flags)$/;"	f
igBeginDragDropSource	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginDragDropSource(ImGuiDragDropFlags flags)$/;"	f
igBeginDragDropSource	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginDragDropSource(ImGuiDragDropFlags flags)$/;"	f
igBeginDragDropTarget	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginDragDropTarget()$/;"	f
igBeginDragDropTarget	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginDragDropTarget()$/;"	f
igBeginGroup	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igBeginGroup()$/;"	f
igBeginGroup	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igBeginGroup()$/;"	f
igBeginMainMenuBar	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginMainMenuBar()$/;"	f
igBeginMainMenuBar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginMainMenuBar()$/;"	f
igBeginMenu	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginMenu(const char* label,bool enabled)$/;"	f
igBeginMenu	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginMenu(const char* label,bool enabled)$/;"	f
igBeginMenuBar	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginMenuBar()$/;"	f
igBeginMenuBar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginMenuBar()$/;"	f
igBeginPopup	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopup(const char* str_id,ImGuiWindowFlags flags)$/;"	f
igBeginPopup	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginPopup(const char* str_id,ImGuiWindowFlags flags)$/;"	f
igBeginPopupContextItem	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextItem(const char* str_id,ImGuiMouseButton mouse_button)$/;"	f
igBeginPopupContextItem	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextItem(const char* str_id,ImGuiMouseButton mouse_button)$/;"	f
igBeginPopupContextVoid	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextVoid(const char* str_id,ImGuiMouseButton mouse_button)$/;"	f
igBeginPopupContextVoid	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextVoid(const char* str_id,ImGuiMouseButton mouse_button)$/;"	f
igBeginPopupContextWindow	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextWindow(const char* str_id,ImGuiMouseButton mouse_button,bool also_over_items)$/;"	f
igBeginPopupContextWindow	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextWindow(const char* str_id,ImGuiMouseButton mouse_button,bool also_over_items)$/;"	f
igBeginPopupModal	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupModal(const char* name,bool* p_open,ImGuiWindowFlags flags)$/;"	f
igBeginPopupModal	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginPopupModal(const char* name,bool* p_open,ImGuiWindowFlags flags)$/;"	f
igBeginTabBar	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginTabBar(const char* str_id,ImGuiTabBarFlags flags)$/;"	f
igBeginTabBar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginTabBar(const char* str_id,ImGuiTabBarFlags flags)$/;"	f
igBeginTabItem	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginTabItem(const char* label,bool* p_open,ImGuiTabItemFlags flags)$/;"	f
igBeginTabItem	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igBeginTabItem(const char* label,bool* p_open,ImGuiTabItemFlags flags)$/;"	f
igBeginTooltip	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igBeginTooltip()$/;"	f
igBeginTooltip	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igBeginTooltip()$/;"	f
igBullet	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igBullet()$/;"	f
igBullet	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igBullet()$/;"	f
igBulletText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igBulletText(const char* fmt,...)$/;"	f
igBulletText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igBulletText(const char* fmt,...)$/;"	f
igBulletTextV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igBulletTextV(const char* fmt,va_list args)$/;"	f
igBulletTextV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igBulletTextV(const char* fmt,va_list args)$/;"	f
igButton	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igButton(const char* label,const ImVec2 size)$/;"	f
igButton	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igButton(const char* label,const ImVec2 size)$/;"	f
igCalcItemWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igCalcItemWidth()$/;"	f
igCalcItemWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igCalcItemWidth()$/;"	f
igCalcListClipping	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igCalcListClipping(int items_count,float items_height,int* out_items_display_start,int* out_items_display_end)$/;"	f
igCalcListClipping	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igCalcListClipping(int items_count,float items_height,int* out_items_display_start,int* out_items_display_end)$/;"	f
igCalcTextSize	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igCalcTextSize(const char* text,const char* text_end,bool hide_text_after_double_hash,float wrap_width)$/;"	f
igCalcTextSize	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igCalcTextSize(const char* text,const char* text_end,bool hide_text_after_double_hash,float wrap_width)$/;"	f
igCalcTextSize_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igCalcTextSize_nonUDT(ImVec2 *pOut,const char* text,const char* text_end,bool hide_text_after_double_hash,float wrap_width)$/;"	f
igCalcTextSize_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igCalcTextSize_nonUDT(ImVec2 *pOut,const char* text,const char* text_end,bool hide_text_after_double_hash,float wrap_width)$/;"	f
igCalcTextSize_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igCalcTextSize_nonUDT2(const char* text,const char* text_end,bool hide_text_after_double_hash,float wrap_width)$/;"	f
igCalcTextSize_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igCalcTextSize_nonUDT2(const char* text,const char* text_end,bool hide_text_after_double_hash,float wrap_width)$/;"	f
igCaptureKeyboardFromApp	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igCaptureKeyboardFromApp(bool want_capture_keyboard_value)$/;"	f
igCaptureKeyboardFromApp	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igCaptureKeyboardFromApp(bool want_capture_keyboard_value)$/;"	f
igCaptureMouseFromApp	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igCaptureMouseFromApp(bool want_capture_mouse_value)$/;"	f
igCaptureMouseFromApp	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igCaptureMouseFromApp(bool want_capture_mouse_value)$/;"	f
igCheckbox	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igCheckbox(const char* label,bool* v)$/;"	f
igCheckbox	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igCheckbox(const char* label,bool* v)$/;"	f
igCheckboxFlags	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igCheckboxFlags(const char* label,unsigned int* flags,unsigned int flags_value)$/;"	f
igCheckboxFlags	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igCheckboxFlags(const char* label,unsigned int* flags,unsigned int flags_value)$/;"	f
igCloseCurrentPopup	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igCloseCurrentPopup()$/;"	f
igCloseCurrentPopup	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igCloseCurrentPopup()$/;"	f
igCollapsingHeader	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igCollapsingHeader(const char* label,ImGuiTreeNodeFlags flags)$/;"	f
igCollapsingHeader	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igCollapsingHeader(const char* label,ImGuiTreeNodeFlags flags)$/;"	f
igCollapsingHeaderBoolPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igCollapsingHeaderBoolPtr(const char* label,bool* p_open,ImGuiTreeNodeFlags flags)$/;"	f
igCollapsingHeaderBoolPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igCollapsingHeaderBoolPtr(const char* label,bool* p_open,ImGuiTreeNodeFlags flags)$/;"	f
igColorButton	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorButton(const char* desc_id,const ImVec4 col,ImGuiColorEditFlags flags,ImVec2 size)$/;"	f
igColorButton	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igColorButton(const char* desc_id,const ImVec4 col,ImGuiColorEditFlags flags,ImVec2 size)$/;"	f
igColorConvertFloat4ToU32	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igColorConvertFloat4ToU32(const ImVec4 in)$/;"	f
igColorConvertFloat4ToU32	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImU32 igColorConvertFloat4ToU32(const ImVec4 in)$/;"	f
igColorConvertHSVtoRGB	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igColorConvertHSVtoRGB(float h,float s,float v,float *out_r,float *out_g,float *out_b)$/;"	f
igColorConvertHSVtoRGB	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void igColorConvertHSVtoRGB(float h,float s,float v,float *out_r,float *out_g,float *out_b)$/;"	f
igColorConvertHSVtoRGB	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igColorConvertHSVtoRGB(float h,float s,float v,float *out_r,float *out_g,float *out_b)$/;"	f
igColorConvertRGBtoHSV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igColorConvertRGBtoHSV(float r,float g,float b,float *out_h,float *out_s,float *out_v)$/;"	f
igColorConvertRGBtoHSV	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void igColorConvertRGBtoHSV(float r,float g,float b,float *out_h,float *out_s,float *out_v)$/;"	f
igColorConvertRGBtoHSV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igColorConvertRGBtoHSV(float r,float g,float b,float *out_h,float *out_s,float *out_v)$/;"	f
igColorConvertU32ToFloat4	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec4 igColorConvertU32ToFloat4(ImU32 in)$/;"	f
igColorConvertU32ToFloat4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec4 igColorConvertU32ToFloat4(ImU32 in)$/;"	f
igColorConvertU32ToFloat4_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igColorConvertU32ToFloat4_nonUDT(ImVec4 *pOut,ImU32 in)$/;"	f
igColorConvertU32ToFloat4_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igColorConvertU32ToFloat4_nonUDT(ImVec4 *pOut,ImU32 in)$/;"	f
igColorConvertU32ToFloat4_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec4_Simple igColorConvertU32ToFloat4_nonUDT2(ImU32 in)$/;"	f
igColorConvertU32ToFloat4_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec4_Simple igColorConvertU32ToFloat4_nonUDT2(ImU32 in)$/;"	f
igColorEdit3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorEdit3(const char* label,float col[3],ImGuiColorEditFlags flags)$/;"	f
igColorEdit3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igColorEdit3(const char* label,float col[3],ImGuiColorEditFlags flags)$/;"	f
igColorEdit4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorEdit4(const char* label,float col[4],ImGuiColorEditFlags flags)$/;"	f
igColorEdit4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igColorEdit4(const char* label,float col[4],ImGuiColorEditFlags flags)$/;"	f
igColorPicker3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorPicker3(const char* label,float col[3],ImGuiColorEditFlags flags)$/;"	f
igColorPicker3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igColorPicker3(const char* label,float col[3],ImGuiColorEditFlags flags)$/;"	f
igColorPicker4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorPicker4(const char* label,float col[4],ImGuiColorEditFlags flags,const float* ref_col)$/;"	f
igColorPicker4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igColorPicker4(const char* label,float col[4],ImGuiColorEditFlags flags,const float* ref_col)$/;"	f
igColumns	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igColumns(int count,const char* id,bool border)$/;"	f
igColumns	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igColumns(int count,const char* id,bool border)$/;"	f
igCombo	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igCombo(const char* label,int* current_item,const char* const items[],int items_count,int popup_max_height_in_items)$/;"	f
igCombo	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igCombo(const char* label,int* current_item,const char* const items[],int items_count,int popup_max_height_in_items)$/;"	f
igComboFnPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igComboFnPtr(const char* label,int* current_item,bool(*items_getter)(void* data,int idx,const char** out_text),void* data,int items_count,int popup_max_height_in_items)$/;"	f
igComboFnPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igComboFnPtr(const char* label,int* current_item,bool(*items_getter)(void* data,int idx,const char** out_text),void* data,int items_count,int popup_max_height_in_items)$/;"	f
igComboStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igComboStr(const char* label,int* current_item,const char* items_separated_by_zeros,int popup_max_height_in_items)$/;"	f
igComboStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igComboStr(const char* label,int* current_item,const char* items_separated_by_zeros,int popup_max_height_in_items)$/;"	f
igCreateContext	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiContext* igCreateContext(ImFontAtlas* shared_font_atlas)$/;"	f
igCreateContext	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiContext* igCreateContext(ImFontAtlas* shared_font_atlas)$/;"	f
igDebugCheckVersionAndDataLayout	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDebugCheckVersionAndDataLayout(const char* version_str,size_t sz_io,size_t sz_style,size_t sz_vec2,size_t sz_vec4,size_t sz_drawvert,size_t sz_drawidx)$/;"	f
igDebugCheckVersionAndDataLayout	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDebugCheckVersionAndDataLayout(const char* version_str,size_t sz_io,size_t sz_style,size_t sz_vec2,size_t sz_vec4,size_t sz_drawvert,size_t sz_drawidx)$/;"	f
igDestroyContext	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igDestroyContext(ImGuiContext* ctx)$/;"	f
igDestroyContext	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igDestroyContext(ImGuiContext* ctx)$/;"	f
igDragFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat(const char* label,float* v,float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragFloat(const char* label,float* v,float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloat2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat2(const char* label,float v[2],float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloat2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragFloat2(const char* label,float v[2],float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloat3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat3(const char* label,float v[3],float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloat3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragFloat3(const char* label,float v[3],float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloat4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat4(const char* label,float v[4],float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloat4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragFloat4(const char* label,float v[4],float v_speed,float v_min,float v_max,const char* format,float power)$/;"	f
igDragFloatRange2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloatRange2(const char* label,float* v_current_min,float* v_current_max,float v_speed,float v_min,float v_max,const char* format,const char* format_max,float power)$/;"	f
igDragFloatRange2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragFloatRange2(const char* label,float* v_current_min,float* v_current_max,float v_speed,float v_min,float v_max,const char* format,const char* format_max,float power)$/;"	f
igDragInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt(const char* label,int* v,float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragInt(const char* label,int* v,float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragInt2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt2(const char* label,int v[2],float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragInt2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragInt2(const char* label,int v[2],float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragInt3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt3(const char* label,int v[3],float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragInt3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragInt3(const char* label,int v[3],float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragInt4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt4(const char* label,int v[4],float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragInt4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragInt4(const char* label,int v[4],float v_speed,int v_min,int v_max,const char* format)$/;"	f
igDragIntRange2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragIntRange2(const char* label,int* v_current_min,int* v_current_max,float v_speed,int v_min,int v_max,const char* format,const char* format_max)$/;"	f
igDragIntRange2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragIntRange2(const char* label,int* v_current_min,int* v_current_max,float v_speed,int v_min,int v_max,const char* format,const char* format_max)$/;"	f
igDragScalar	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragScalar(const char* label,ImGuiDataType data_type,void* p_data,float v_speed,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igDragScalar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragScalar(const char* label,ImGuiDataType data_type,void* p_data,float v_speed,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igDragScalarN	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragScalarN(const char* label,ImGuiDataType data_type,void* p_data,int components,float v_speed,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igDragScalarN	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igDragScalarN(const char* label,ImGuiDataType data_type,void* p_data,int components,float v_speed,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igDummy	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igDummy(const ImVec2 size)$/;"	f
igDummy	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igDummy(const ImVec2 size)$/;"	f
igEnd	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEnd()$/;"	f
igEnd	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEnd()$/;"	f
igEndChild	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndChild()$/;"	f
igEndChild	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndChild()$/;"	f
igEndChildFrame	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndChildFrame()$/;"	f
igEndChildFrame	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndChildFrame()$/;"	f
igEndCombo	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndCombo()$/;"	f
igEndCombo	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndCombo()$/;"	f
igEndDragDropSource	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndDragDropSource()$/;"	f
igEndDragDropSource	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndDragDropSource()$/;"	f
igEndDragDropTarget	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndDragDropTarget()$/;"	f
igEndDragDropTarget	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndDragDropTarget()$/;"	f
igEndFrame	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndFrame()$/;"	f
igEndFrame	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndFrame()$/;"	f
igEndGroup	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndGroup()$/;"	f
igEndGroup	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndGroup()$/;"	f
igEndMainMenuBar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndMainMenuBar()$/;"	f
igEndMainMenuBar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndMainMenuBar()$/;"	f
igEndMenu	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndMenu()$/;"	f
igEndMenu	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndMenu()$/;"	f
igEndMenuBar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndMenuBar()$/;"	f
igEndMenuBar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndMenuBar()$/;"	f
igEndPopup	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndPopup()$/;"	f
igEndPopup	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndPopup()$/;"	f
igEndTabBar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndTabBar()$/;"	f
igEndTabBar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndTabBar()$/;"	f
igEndTabItem	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndTabItem()$/;"	f
igEndTabItem	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndTabItem()$/;"	f
igEndTooltip	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igEndTooltip()$/;"	f
igEndTooltip	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igEndTooltip()$/;"	f
igGET_FLT_MAX	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGET_FLT_MAX()$/;"	f
igGET_FLT_MAX	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API float igGET_FLT_MAX()$/;"	f
igGET_FLT_MAX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGET_FLT_MAX()$/;"	f
igGetBackgroundDrawList	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawList* igGetBackgroundDrawList()$/;"	f
igGetBackgroundDrawList	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawList* igGetBackgroundDrawList()$/;"	f
igGetClipboardText	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* igGetClipboardText()$/;"	f
igGetClipboardText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* igGetClipboardText()$/;"	f
igGetColorU32	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32(ImGuiCol idx,float alpha_mul)$/;"	f
igGetColorU32	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32(ImGuiCol idx,float alpha_mul)$/;"	f
igGetColorU32U32	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32U32(ImU32 col)$/;"	f
igGetColorU32U32	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32U32(ImU32 col)$/;"	f
igGetColorU32Vec4	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32Vec4(const ImVec4 col)$/;"	f
igGetColorU32Vec4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32Vec4(const ImVec4 col)$/;"	f
igGetColumnIndex	lib/cimgui/cimgui.cpp	/^CIMGUI_API int igGetColumnIndex()$/;"	f
igGetColumnIndex	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int igGetColumnIndex()$/;"	f
igGetColumnOffset	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetColumnOffset(int column_index)$/;"	f
igGetColumnOffset	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetColumnOffset(int column_index)$/;"	f
igGetColumnWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetColumnWidth(int column_index)$/;"	f
igGetColumnWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetColumnWidth(int column_index)$/;"	f
igGetColumnsCount	lib/cimgui/cimgui.cpp	/^CIMGUI_API int igGetColumnsCount()$/;"	f
igGetColumnsCount	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int igGetColumnsCount()$/;"	f
igGetContentRegionAvail	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetContentRegionAvail()$/;"	f
igGetContentRegionAvail	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetContentRegionAvail()$/;"	f
igGetContentRegionAvail_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetContentRegionAvail_nonUDT(ImVec2 *pOut)$/;"	f
igGetContentRegionAvail_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetContentRegionAvail_nonUDT(ImVec2 *pOut)$/;"	f
igGetContentRegionAvail_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetContentRegionAvail_nonUDT2()$/;"	f
igGetContentRegionAvail_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetContentRegionAvail_nonUDT2()$/;"	f
igGetContentRegionMax	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetContentRegionMax()$/;"	f
igGetContentRegionMax	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetContentRegionMax()$/;"	f
igGetContentRegionMax_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetContentRegionMax_nonUDT(ImVec2 *pOut)$/;"	f
igGetContentRegionMax_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetContentRegionMax_nonUDT(ImVec2 *pOut)$/;"	f
igGetContentRegionMax_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetContentRegionMax_nonUDT2()$/;"	f
igGetContentRegionMax_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetContentRegionMax_nonUDT2()$/;"	f
igGetCurrentContext	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiContext* igGetCurrentContext()$/;"	f
igGetCurrentContext	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiContext* igGetCurrentContext()$/;"	f
igGetCursorPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetCursorPos()$/;"	f
igGetCursorPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetCursorPos()$/;"	f
igGetCursorPosX	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetCursorPosX()$/;"	f
igGetCursorPosX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetCursorPosX()$/;"	f
igGetCursorPosY	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetCursorPosY()$/;"	f
igGetCursorPosY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetCursorPosY()$/;"	f
igGetCursorPos_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetCursorPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetCursorPos_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetCursorPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetCursorPos_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetCursorPos_nonUDT2()$/;"	f
igGetCursorPos_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetCursorPos_nonUDT2()$/;"	f
igGetCursorScreenPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetCursorScreenPos()$/;"	f
igGetCursorScreenPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetCursorScreenPos()$/;"	f
igGetCursorScreenPos_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetCursorScreenPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetCursorScreenPos_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetCursorScreenPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetCursorScreenPos_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetCursorScreenPos_nonUDT2()$/;"	f
igGetCursorScreenPos_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetCursorScreenPos_nonUDT2()$/;"	f
igGetCursorStartPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetCursorStartPos()$/;"	f
igGetCursorStartPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetCursorStartPos()$/;"	f
igGetCursorStartPos_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetCursorStartPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetCursorStartPos_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetCursorStartPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetCursorStartPos_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetCursorStartPos_nonUDT2()$/;"	f
igGetCursorStartPos_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetCursorStartPos_nonUDT2()$/;"	f
igGetDragDropPayload	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImGuiPayload* igGetDragDropPayload()$/;"	f
igGetDragDropPayload	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImGuiPayload* igGetDragDropPayload()$/;"	f
igGetDrawData	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawData* igGetDrawData()$/;"	f
igGetDrawData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawData* igGetDrawData()$/;"	f
igGetDrawListSharedData	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawListSharedData* igGetDrawListSharedData()$/;"	f
igGetDrawListSharedData	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawListSharedData* igGetDrawListSharedData()$/;"	f
igGetFont	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImFont* igGetFont()$/;"	f
igGetFont	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImFont* igGetFont()$/;"	f
igGetFontSize	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetFontSize()$/;"	f
igGetFontSize	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetFontSize()$/;"	f
igGetFontTexUvWhitePixel	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetFontTexUvWhitePixel()$/;"	f
igGetFontTexUvWhitePixel	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetFontTexUvWhitePixel()$/;"	f
igGetFontTexUvWhitePixel_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetFontTexUvWhitePixel_nonUDT(ImVec2 *pOut)$/;"	f
igGetFontTexUvWhitePixel_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetFontTexUvWhitePixel_nonUDT(ImVec2 *pOut)$/;"	f
igGetFontTexUvWhitePixel_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetFontTexUvWhitePixel_nonUDT2()$/;"	f
igGetFontTexUvWhitePixel_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetFontTexUvWhitePixel_nonUDT2()$/;"	f
igGetForegroundDrawList	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawList* igGetForegroundDrawList()$/;"	f
igGetForegroundDrawList	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawList* igGetForegroundDrawList()$/;"	f
igGetFrameCount	lib/cimgui/cimgui.cpp	/^CIMGUI_API int igGetFrameCount()$/;"	f
igGetFrameCount	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int igGetFrameCount()$/;"	f
igGetFrameHeight	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetFrameHeight()$/;"	f
igGetFrameHeight	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetFrameHeight()$/;"	f
igGetFrameHeightWithSpacing	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetFrameHeightWithSpacing()$/;"	f
igGetFrameHeightWithSpacing	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetFrameHeightWithSpacing()$/;"	f
igGetIDPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDPtr(const void* ptr_id)$/;"	f
igGetIDPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDPtr(const void* ptr_id)$/;"	f
igGetIDRange	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDRange(const char* str_id_begin,const char* str_id_end)$/;"	f
igGetIDRange	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDRange(const char* str_id_begin,const char* str_id_end)$/;"	f
igGetIDStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDStr(const char* str_id)$/;"	f
igGetIDStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDStr(const char* str_id)$/;"	f
igGetIO	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiIO* igGetIO()$/;"	f
igGetIO	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiIO* igGetIO()$/;"	f
igGetItemRectMax	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetItemRectMax()$/;"	f
igGetItemRectMax	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetItemRectMax()$/;"	f
igGetItemRectMax_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetItemRectMax_nonUDT(ImVec2 *pOut)$/;"	f
igGetItemRectMax_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetItemRectMax_nonUDT(ImVec2 *pOut)$/;"	f
igGetItemRectMax_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetItemRectMax_nonUDT2()$/;"	f
igGetItemRectMax_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetItemRectMax_nonUDT2()$/;"	f
igGetItemRectMin	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetItemRectMin()$/;"	f
igGetItemRectMin	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetItemRectMin()$/;"	f
igGetItemRectMin_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetItemRectMin_nonUDT(ImVec2 *pOut)$/;"	f
igGetItemRectMin_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetItemRectMin_nonUDT(ImVec2 *pOut)$/;"	f
igGetItemRectMin_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetItemRectMin_nonUDT2()$/;"	f
igGetItemRectMin_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetItemRectMin_nonUDT2()$/;"	f
igGetItemRectSize	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetItemRectSize()$/;"	f
igGetItemRectSize	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetItemRectSize()$/;"	f
igGetItemRectSize_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetItemRectSize_nonUDT(ImVec2 *pOut)$/;"	f
igGetItemRectSize_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetItemRectSize_nonUDT(ImVec2 *pOut)$/;"	f
igGetItemRectSize_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetItemRectSize_nonUDT2()$/;"	f
igGetItemRectSize_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetItemRectSize_nonUDT2()$/;"	f
igGetKeyIndex	lib/cimgui/cimgui.cpp	/^CIMGUI_API int igGetKeyIndex(ImGuiKey imgui_key)$/;"	f
igGetKeyIndex	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int igGetKeyIndex(ImGuiKey imgui_key)$/;"	f
igGetKeyPressedAmount	lib/cimgui/cimgui.cpp	/^CIMGUI_API int igGetKeyPressedAmount(int key_index,float repeat_delay,float rate)$/;"	f
igGetKeyPressedAmount	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API int igGetKeyPressedAmount(int key_index,float repeat_delay,float rate)$/;"	f
igGetMouseCursor	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiMouseCursor igGetMouseCursor()$/;"	f
igGetMouseCursor	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiMouseCursor igGetMouseCursor()$/;"	f
igGetMouseDragDelta	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetMouseDragDelta(ImGuiMouseButton button,float lock_threshold)$/;"	f
igGetMouseDragDelta	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetMouseDragDelta(ImGuiMouseButton button,float lock_threshold)$/;"	f
igGetMouseDragDelta_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetMouseDragDelta_nonUDT(ImVec2 *pOut,ImGuiMouseButton button,float lock_threshold)$/;"	f
igGetMouseDragDelta_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetMouseDragDelta_nonUDT(ImVec2 *pOut,ImGuiMouseButton button,float lock_threshold)$/;"	f
igGetMouseDragDelta_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetMouseDragDelta_nonUDT2(ImGuiMouseButton button,float lock_threshold)$/;"	f
igGetMouseDragDelta_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetMouseDragDelta_nonUDT2(ImGuiMouseButton button,float lock_threshold)$/;"	f
igGetMousePos	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetMousePos()$/;"	f
igGetMousePos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetMousePos()$/;"	f
igGetMousePosOnOpeningCurrentPopup	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetMousePosOnOpeningCurrentPopup()$/;"	f
igGetMousePosOnOpeningCurrentPopup	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetMousePosOnOpeningCurrentPopup()$/;"	f
igGetMousePosOnOpeningCurrentPopup_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetMousePosOnOpeningCurrentPopup_nonUDT(ImVec2 *pOut)$/;"	f
igGetMousePosOnOpeningCurrentPopup_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetMousePosOnOpeningCurrentPopup_nonUDT(ImVec2 *pOut)$/;"	f
igGetMousePosOnOpeningCurrentPopup_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetMousePosOnOpeningCurrentPopup_nonUDT2()$/;"	f
igGetMousePosOnOpeningCurrentPopup_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetMousePosOnOpeningCurrentPopup_nonUDT2()$/;"	f
igGetMousePos_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetMousePos_nonUDT(ImVec2 *pOut)$/;"	f
igGetMousePos_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetMousePos_nonUDT(ImVec2 *pOut)$/;"	f
igGetMousePos_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetMousePos_nonUDT2()$/;"	f
igGetMousePos_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetMousePos_nonUDT2()$/;"	f
igGetScrollMaxX	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollMaxX()$/;"	f
igGetScrollMaxX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetScrollMaxX()$/;"	f
igGetScrollMaxY	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollMaxY()$/;"	f
igGetScrollMaxY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetScrollMaxY()$/;"	f
igGetScrollX	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollX()$/;"	f
igGetScrollX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetScrollX()$/;"	f
igGetScrollY	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollY()$/;"	f
igGetScrollY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetScrollY()$/;"	f
igGetStateStorage	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStorage* igGetStateStorage()$/;"	f
igGetStateStorage	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiStorage* igGetStateStorage()$/;"	f
igGetStyle	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStyle* igGetStyle()$/;"	f
igGetStyle	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImGuiStyle* igGetStyle()$/;"	f
igGetStyleColorName	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* igGetStyleColorName(ImGuiCol idx)$/;"	f
igGetStyleColorName	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* igGetStyleColorName(ImGuiCol idx)$/;"	f
igGetStyleColorVec4	lib/cimgui/cimgui.cpp	/^CIMGUI_API const ImVec4* igGetStyleColorVec4(ImGuiCol idx)$/;"	f
igGetStyleColorVec4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const ImVec4* igGetStyleColorVec4(ImGuiCol idx)$/;"	f
igGetTextLineHeight	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetTextLineHeight()$/;"	f
igGetTextLineHeight	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetTextLineHeight()$/;"	f
igGetTextLineHeightWithSpacing	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetTextLineHeightWithSpacing()$/;"	f
igGetTextLineHeightWithSpacing	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetTextLineHeightWithSpacing()$/;"	f
igGetTime	lib/cimgui/cimgui.cpp	/^CIMGUI_API double igGetTime()$/;"	f
igGetTime	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API double igGetTime()$/;"	f
igGetTreeNodeToLabelSpacing	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetTreeNodeToLabelSpacing()$/;"	f
igGetTreeNodeToLabelSpacing	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetTreeNodeToLabelSpacing()$/;"	f
igGetVersion	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* igGetVersion()$/;"	f
igGetVersion	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* igGetVersion()$/;"	f
igGetWindowContentRegionMax	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowContentRegionMax()$/;"	f
igGetWindowContentRegionMax	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowContentRegionMax()$/;"	f
igGetWindowContentRegionMax_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowContentRegionMax_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowContentRegionMax_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetWindowContentRegionMax_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowContentRegionMax_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowContentRegionMax_nonUDT2()$/;"	f
igGetWindowContentRegionMax_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowContentRegionMax_nonUDT2()$/;"	f
igGetWindowContentRegionMin	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowContentRegionMin()$/;"	f
igGetWindowContentRegionMin	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowContentRegionMin()$/;"	f
igGetWindowContentRegionMin_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowContentRegionMin_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowContentRegionMin_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetWindowContentRegionMin_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowContentRegionMin_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowContentRegionMin_nonUDT2()$/;"	f
igGetWindowContentRegionMin_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowContentRegionMin_nonUDT2()$/;"	f
igGetWindowContentRegionWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetWindowContentRegionWidth()$/;"	f
igGetWindowContentRegionWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetWindowContentRegionWidth()$/;"	f
igGetWindowDrawList	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawList* igGetWindowDrawList()$/;"	f
igGetWindowDrawList	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImDrawList* igGetWindowDrawList()$/;"	f
igGetWindowHeight	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetWindowHeight()$/;"	f
igGetWindowHeight	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetWindowHeight()$/;"	f
igGetWindowPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowPos()$/;"	f
igGetWindowPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowPos()$/;"	f
igGetWindowPos_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowPos_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetWindowPos_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowPos_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowPos_nonUDT2()$/;"	f
igGetWindowPos_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowPos_nonUDT2()$/;"	f
igGetWindowSize	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowSize()$/;"	f
igGetWindowSize	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2 igGetWindowSize()$/;"	f
igGetWindowSize_nonUDT	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowSize_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowSize_nonUDT	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igGetWindowSize_nonUDT(ImVec2 *pOut)$/;"	f
igGetWindowSize_nonUDT2	lib/cimgui/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowSize_nonUDT2()$/;"	f
igGetWindowSize_nonUDT2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API ImVec2_Simple igGetWindowSize_nonUDT2()$/;"	f
igGetWindowWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API float igGetWindowWidth()$/;"	f
igGetWindowWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API float igGetWindowWidth()$/;"	f
igImage	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igImage(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 tint_col,const ImVec4 border_col)$/;"	f
igImage	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igImage(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,const ImVec4 tint_col,const ImVec4 border_col)$/;"	f
igImageButton	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igImageButton(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,int frame_padding,const ImVec4 bg_col,const ImVec4 tint_col)$/;"	f
igImageButton	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igImageButton(ImTextureID user_texture_id,const ImVec2 size,const ImVec2 uv0,const ImVec2 uv1,int frame_padding,const ImVec4 bg_col,const ImVec4 tint_col)$/;"	f
igIndent	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igIndent(float indent_w)$/;"	f
igIndent	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igIndent(float indent_w)$/;"	f
igInputDouble	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputDouble(const char* label,double* v,double step,double step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputDouble	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputDouble(const char* label,double* v,double step,double step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat(const char* label,float* v,float step,float step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputFloat(const char* label,float* v,float step,float step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat2(const char* label,float v[2],const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputFloat2(const char* label,float v[2],const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat3(const char* label,float v[3],const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputFloat3(const char* label,float v[3],const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat4(const char* label,float v[4],const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputFloat4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputFloat4(const char* label,float v[4],const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt(const char* label,int* v,int step,int step_fast,ImGuiInputTextFlags flags)$/;"	f
igInputInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputInt(const char* label,int* v,int step,int step_fast,ImGuiInputTextFlags flags)$/;"	f
igInputInt2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt2(const char* label,int v[2],ImGuiInputTextFlags flags)$/;"	f
igInputInt2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputInt2(const char* label,int v[2],ImGuiInputTextFlags flags)$/;"	f
igInputInt3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt3(const char* label,int v[3],ImGuiInputTextFlags flags)$/;"	f
igInputInt3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputInt3(const char* label,int v[3],ImGuiInputTextFlags flags)$/;"	f
igInputInt4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt4(const char* label,int v[4],ImGuiInputTextFlags flags)$/;"	f
igInputInt4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputInt4(const char* label,int v[4],ImGuiInputTextFlags flags)$/;"	f
igInputScalar	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputScalar(const char* label,ImGuiDataType data_type,void* p_data,const void* p_step,const void* p_step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputScalar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputScalar(const char* label,ImGuiDataType data_type,void* p_data,const void* p_step,const void* p_step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputScalarN	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputScalarN(const char* label,ImGuiDataType data_type,void* p_data,int components,const void* p_step,const void* p_step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputScalarN	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputScalarN(const char* label,ImGuiDataType data_type,void* p_data,int components,const void* p_step,const void* p_step_fast,const char* format,ImGuiInputTextFlags flags)$/;"	f
igInputText	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputText(const char* label,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data)$/;"	f
igInputText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputText(const char* label,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data)$/;"	f
igInputTextMultiline	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputTextMultiline(const char* label,char* buf,size_t buf_size,const ImVec2 size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data)$/;"	f
igInputTextMultiline	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputTextMultiline(const char* label,char* buf,size_t buf_size,const ImVec2 size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data)$/;"	f
igInputTextWithHint	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputTextWithHint(const char* label,const char* hint,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data)$/;"	f
igInputTextWithHint	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInputTextWithHint(const char* label,const char* hint,char* buf,size_t buf_size,ImGuiInputTextFlags flags,ImGuiInputTextCallback callback,void* user_data)$/;"	f
igInvisibleButton	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igInvisibleButton(const char* str_id,const ImVec2 size)$/;"	f
igInvisibleButton	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igInvisibleButton(const char* str_id,const ImVec2 size)$/;"	f
igIsAnyItemActive	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemActive()$/;"	f
igIsAnyItemActive	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemActive()$/;"	f
igIsAnyItemFocused	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemFocused()$/;"	f
igIsAnyItemFocused	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemFocused()$/;"	f
igIsAnyItemHovered	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemHovered()$/;"	f
igIsAnyItemHovered	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemHovered()$/;"	f
igIsAnyMouseDown	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyMouseDown()$/;"	f
igIsAnyMouseDown	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsAnyMouseDown()$/;"	f
igIsItemActivated	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemActivated()$/;"	f
igIsItemActivated	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemActivated()$/;"	f
igIsItemActive	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemActive()$/;"	f
igIsItemActive	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemActive()$/;"	f
igIsItemClicked	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemClicked(ImGuiMouseButton mouse_button)$/;"	f
igIsItemClicked	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemClicked(ImGuiMouseButton mouse_button)$/;"	f
igIsItemDeactivated	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemDeactivated()$/;"	f
igIsItemDeactivated	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemDeactivated()$/;"	f
igIsItemDeactivatedAfterEdit	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemDeactivatedAfterEdit()$/;"	f
igIsItemDeactivatedAfterEdit	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemDeactivatedAfterEdit()$/;"	f
igIsItemEdited	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemEdited()$/;"	f
igIsItemEdited	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemEdited()$/;"	f
igIsItemFocused	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemFocused()$/;"	f
igIsItemFocused	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemFocused()$/;"	f
igIsItemHovered	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemHovered(ImGuiHoveredFlags flags)$/;"	f
igIsItemHovered	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemHovered(ImGuiHoveredFlags flags)$/;"	f
igIsItemToggledOpen	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemToggledOpen()$/;"	f
igIsItemToggledOpen	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemToggledOpen()$/;"	f
igIsItemVisible	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemVisible()$/;"	f
igIsItemVisible	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsItemVisible()$/;"	f
igIsKeyDown	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsKeyDown(int user_key_index)$/;"	f
igIsKeyDown	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsKeyDown(int user_key_index)$/;"	f
igIsKeyPressed	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsKeyPressed(int user_key_index,bool repeat)$/;"	f
igIsKeyPressed	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsKeyPressed(int user_key_index,bool repeat)$/;"	f
igIsKeyReleased	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsKeyReleased(int user_key_index)$/;"	f
igIsKeyReleased	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsKeyReleased(int user_key_index)$/;"	f
igIsMouseClicked	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseClicked(ImGuiMouseButton button,bool repeat)$/;"	f
igIsMouseClicked	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsMouseClicked(ImGuiMouseButton button,bool repeat)$/;"	f
igIsMouseDoubleClicked	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseDoubleClicked(ImGuiMouseButton button)$/;"	f
igIsMouseDoubleClicked	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsMouseDoubleClicked(ImGuiMouseButton button)$/;"	f
igIsMouseDown	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseDown(ImGuiMouseButton button)$/;"	f
igIsMouseDown	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsMouseDown(ImGuiMouseButton button)$/;"	f
igIsMouseDragging	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseDragging(ImGuiMouseButton button,float lock_threshold)$/;"	f
igIsMouseDragging	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsMouseDragging(ImGuiMouseButton button,float lock_threshold)$/;"	f
igIsMouseHoveringRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseHoveringRect(const ImVec2 r_min,const ImVec2 r_max,bool clip)$/;"	f
igIsMouseHoveringRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsMouseHoveringRect(const ImVec2 r_min,const ImVec2 r_max,bool clip)$/;"	f
igIsMousePosValid	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMousePosValid(const ImVec2* mouse_pos)$/;"	f
igIsMousePosValid	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsMousePosValid(const ImVec2* mouse_pos)$/;"	f
igIsMouseReleased	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseReleased(ImGuiMouseButton button)$/;"	f
igIsMouseReleased	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsMouseReleased(ImGuiMouseButton button)$/;"	f
igIsPopupOpen	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsPopupOpen(const char* str_id)$/;"	f
igIsPopupOpen	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsPopupOpen(const char* str_id)$/;"	f
igIsRectVisible	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsRectVisible(const ImVec2 size)$/;"	f
igIsRectVisible	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsRectVisible(const ImVec2 size)$/;"	f
igIsRectVisibleVec2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsRectVisibleVec2(const ImVec2 rect_min,const ImVec2 rect_max)$/;"	f
igIsRectVisibleVec2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsRectVisibleVec2(const ImVec2 rect_min,const ImVec2 rect_max)$/;"	f
igIsWindowAppearing	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowAppearing()$/;"	f
igIsWindowAppearing	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsWindowAppearing()$/;"	f
igIsWindowCollapsed	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowCollapsed()$/;"	f
igIsWindowCollapsed	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsWindowCollapsed()$/;"	f
igIsWindowFocused	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowFocused(ImGuiFocusedFlags flags)$/;"	f
igIsWindowFocused	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsWindowFocused(ImGuiFocusedFlags flags)$/;"	f
igIsWindowHovered	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowHovered(ImGuiHoveredFlags flags)$/;"	f
igIsWindowHovered	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igIsWindowHovered(ImGuiHoveredFlags flags)$/;"	f
igLabelText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLabelText(const char* label,const char* fmt,...)$/;"	f
igLabelText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLabelText(const char* label,const char* fmt,...)$/;"	f
igLabelTextV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLabelTextV(const char* label,const char* fmt,va_list args)$/;"	f
igLabelTextV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLabelTextV(const char* label,const char* fmt,va_list args)$/;"	f
igListBoxFnPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBoxFnPtr(const char* label,int* current_item,bool(*items_getter)(void* data,int idx,const char** out_text),void* data,int items_count,int height_in_items)$/;"	f
igListBoxFnPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igListBoxFnPtr(const char* label,int* current_item,bool(*items_getter)(void* data,int idx,const char** out_text),void* data,int items_count,int height_in_items)$/;"	f
igListBoxFooter	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igListBoxFooter()$/;"	f
igListBoxFooter	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igListBoxFooter()$/;"	f
igListBoxHeaderInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBoxHeaderInt(const char* label,int items_count,int height_in_items)$/;"	f
igListBoxHeaderInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igListBoxHeaderInt(const char* label,int items_count,int height_in_items)$/;"	f
igListBoxHeaderVec2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBoxHeaderVec2(const char* label,const ImVec2 size)$/;"	f
igListBoxHeaderVec2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igListBoxHeaderVec2(const char* label,const ImVec2 size)$/;"	f
igListBoxStr_arr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBoxStr_arr(const char* label,int* current_item,const char* const items[],int items_count,int height_in_items)$/;"	f
igListBoxStr_arr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igListBoxStr_arr(const char* label,int* current_item,const char* const items[],int items_count,int height_in_items)$/;"	f
igLoadIniSettingsFromDisk	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLoadIniSettingsFromDisk(const char* ini_filename)$/;"	f
igLoadIniSettingsFromDisk	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLoadIniSettingsFromDisk(const char* ini_filename)$/;"	f
igLoadIniSettingsFromMemory	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLoadIniSettingsFromMemory(const char* ini_data,size_t ini_size)$/;"	f
igLoadIniSettingsFromMemory	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLoadIniSettingsFromMemory(const char* ini_data,size_t ini_size)$/;"	f
igLogButtons	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLogButtons()$/;"	f
igLogButtons	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLogButtons()$/;"	f
igLogFinish	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLogFinish()$/;"	f
igLogFinish	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLogFinish()$/;"	f
igLogText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLogText(CONST char *fmt, ...)$/;"	f
igLogText	lib/cimgui/generator/cimgui_template.cpp	/^CIMGUI_API void igLogText(CONST char *fmt, ...)$/;"	f
igLogText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLogText(CONST char *fmt, ...)$/;"	f
igLogToClipboard	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLogToClipboard(int auto_open_depth)$/;"	f
igLogToClipboard	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLogToClipboard(int auto_open_depth)$/;"	f
igLogToFile	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLogToFile(int auto_open_depth,const char* filename)$/;"	f
igLogToFile	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLogToFile(int auto_open_depth,const char* filename)$/;"	f
igLogToTTY	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igLogToTTY(int auto_open_depth)$/;"	f
igLogToTTY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igLogToTTY(int auto_open_depth)$/;"	f
igMemAlloc	lib/cimgui/cimgui.cpp	/^CIMGUI_API void* igMemAlloc(size_t size)$/;"	f
igMemAlloc	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void* igMemAlloc(size_t size)$/;"	f
igMemFree	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igMemFree(void* ptr)$/;"	f
igMemFree	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igMemFree(void* ptr)$/;"	f
igMenuItemBool	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igMenuItemBool(const char* label,const char* shortcut,bool selected,bool enabled)$/;"	f
igMenuItemBool	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igMenuItemBool(const char* label,const char* shortcut,bool selected,bool enabled)$/;"	f
igMenuItemBoolPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igMenuItemBoolPtr(const char* label,const char* shortcut,bool* p_selected,bool enabled)$/;"	f
igMenuItemBoolPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igMenuItemBoolPtr(const char* label,const char* shortcut,bool* p_selected,bool enabled)$/;"	f
igNewFrame	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igNewFrame()$/;"	f
igNewFrame	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igNewFrame()$/;"	f
igNewLine	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igNewLine()$/;"	f
igNewLine	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igNewLine()$/;"	f
igNextColumn	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igNextColumn()$/;"	f
igNextColumn	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igNextColumn()$/;"	f
igOpenPopup	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igOpenPopup(const char* str_id)$/;"	f
igOpenPopup	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igOpenPopup(const char* str_id)$/;"	f
igOpenPopupOnItemClick	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igOpenPopupOnItemClick(const char* str_id,ImGuiMouseButton mouse_button)$/;"	f
igOpenPopupOnItemClick	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igOpenPopupOnItemClick(const char* str_id,ImGuiMouseButton mouse_button)$/;"	f
igPlotHistogramFloatPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotHistogramFloatPtr(const char* label,const float* values,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride)$/;"	f
igPlotHistogramFloatPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPlotHistogramFloatPtr(const char* label,const float* values,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride)$/;"	f
igPlotHistogramFnPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotHistogramFnPtr(const char* label,float(*values_getter)(void* data,int idx),void* data,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size)$/;"	f
igPlotHistogramFnPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPlotHistogramFnPtr(const char* label,float(*values_getter)(void* data,int idx),void* data,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size)$/;"	f
igPlotLines	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotLines(const char* label,const float* values,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride)$/;"	f
igPlotLines	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPlotLines(const char* label,const float* values,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size,int stride)$/;"	f
igPlotLinesFnPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotLinesFnPtr(const char* label,float(*values_getter)(void* data,int idx),void* data,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size)$/;"	f
igPlotLinesFnPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPlotLinesFnPtr(const char* label,float(*values_getter)(void* data,int idx),void* data,int values_count,int values_offset,const char* overlay_text,float scale_min,float scale_max,ImVec2 graph_size)$/;"	f
igPopAllowKeyboardFocus	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopAllowKeyboardFocus()$/;"	f
igPopAllowKeyboardFocus	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopAllowKeyboardFocus()$/;"	f
igPopButtonRepeat	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopButtonRepeat()$/;"	f
igPopButtonRepeat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopButtonRepeat()$/;"	f
igPopClipRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopClipRect()$/;"	f
igPopClipRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopClipRect()$/;"	f
igPopFont	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopFont()$/;"	f
igPopFont	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopFont()$/;"	f
igPopID	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopID()$/;"	f
igPopID	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopID()$/;"	f
igPopItemWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopItemWidth()$/;"	f
igPopItemWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopItemWidth()$/;"	f
igPopStyleColor	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopStyleColor(int count)$/;"	f
igPopStyleColor	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopStyleColor(int count)$/;"	f
igPopStyleVar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopStyleVar(int count)$/;"	f
igPopStyleVar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopStyleVar(int count)$/;"	f
igPopTextWrapPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPopTextWrapPos()$/;"	f
igPopTextWrapPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPopTextWrapPos()$/;"	f
igProgressBar	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igProgressBar(float fraction,const ImVec2 size_arg,const char* overlay)$/;"	f
igProgressBar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igProgressBar(float fraction,const ImVec2 size_arg,const char* overlay)$/;"	f
igPushAllowKeyboardFocus	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushAllowKeyboardFocus(bool allow_keyboard_focus)$/;"	f
igPushAllowKeyboardFocus	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushAllowKeyboardFocus(bool allow_keyboard_focus)$/;"	f
igPushButtonRepeat	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushButtonRepeat(bool repeat)$/;"	f
igPushButtonRepeat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushButtonRepeat(bool repeat)$/;"	f
igPushClipRect	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushClipRect(const ImVec2 clip_rect_min,const ImVec2 clip_rect_max,bool intersect_with_current_clip_rect)$/;"	f
igPushClipRect	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushClipRect(const ImVec2 clip_rect_min,const ImVec2 clip_rect_max,bool intersect_with_current_clip_rect)$/;"	f
igPushFont	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushFont(ImFont* font)$/;"	f
igPushFont	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushFont(ImFont* font)$/;"	f
igPushIDInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDInt(int int_id)$/;"	f
igPushIDInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushIDInt(int int_id)$/;"	f
igPushIDPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDPtr(const void* ptr_id)$/;"	f
igPushIDPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushIDPtr(const void* ptr_id)$/;"	f
igPushIDRange	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDRange(const char* str_id_begin,const char* str_id_end)$/;"	f
igPushIDRange	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushIDRange(const char* str_id_begin,const char* str_id_end)$/;"	f
igPushIDStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDStr(const char* str_id)$/;"	f
igPushIDStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushIDStr(const char* str_id)$/;"	f
igPushItemWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushItemWidth(float item_width)$/;"	f
igPushItemWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushItemWidth(float item_width)$/;"	f
igPushStyleColor	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleColor(ImGuiCol idx,const ImVec4 col)$/;"	f
igPushStyleColor	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushStyleColor(ImGuiCol idx,const ImVec4 col)$/;"	f
igPushStyleColorU32	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleColorU32(ImGuiCol idx,ImU32 col)$/;"	f
igPushStyleColorU32	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushStyleColorU32(ImGuiCol idx,ImU32 col)$/;"	f
igPushStyleVarFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleVarFloat(ImGuiStyleVar idx,float val)$/;"	f
igPushStyleVarFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushStyleVarFloat(ImGuiStyleVar idx,float val)$/;"	f
igPushStyleVarVec2	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleVarVec2(ImGuiStyleVar idx,const ImVec2 val)$/;"	f
igPushStyleVarVec2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushStyleVarVec2(ImGuiStyleVar idx,const ImVec2 val)$/;"	f
igPushTextWrapPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igPushTextWrapPos(float wrap_local_pos_x)$/;"	f
igPushTextWrapPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igPushTextWrapPos(float wrap_local_pos_x)$/;"	f
igRadioButtonBool	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igRadioButtonBool(const char* label,bool active)$/;"	f
igRadioButtonBool	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igRadioButtonBool(const char* label,bool active)$/;"	f
igRadioButtonIntPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igRadioButtonIntPtr(const char* label,int* v,int v_button)$/;"	f
igRadioButtonIntPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igRadioButtonIntPtr(const char* label,int* v,int v_button)$/;"	f
igRender	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igRender()$/;"	f
igRender	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igRender()$/;"	f
igResetMouseDragDelta	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igResetMouseDragDelta(ImGuiMouseButton button)$/;"	f
igResetMouseDragDelta	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igResetMouseDragDelta(ImGuiMouseButton button)$/;"	f
igSameLine	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSameLine(float offset_from_start_x,float spacing)$/;"	f
igSameLine	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSameLine(float offset_from_start_x,float spacing)$/;"	f
igSaveIniSettingsToDisk	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSaveIniSettingsToDisk(const char* ini_filename)$/;"	f
igSaveIniSettingsToDisk	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSaveIniSettingsToDisk(const char* ini_filename)$/;"	f
igSaveIniSettingsToMemory	lib/cimgui/cimgui.cpp	/^CIMGUI_API const char* igSaveIniSettingsToMemory(size_t* out_ini_size)$/;"	f
igSaveIniSettingsToMemory	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API const char* igSaveIniSettingsToMemory(size_t* out_ini_size)$/;"	f
igSelectable	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSelectable(const char* label,bool selected,ImGuiSelectableFlags flags,const ImVec2 size)$/;"	f
igSelectable	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSelectable(const char* label,bool selected,ImGuiSelectableFlags flags,const ImVec2 size)$/;"	f
igSelectableBoolPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSelectableBoolPtr(const char* label,bool* p_selected,ImGuiSelectableFlags flags,const ImVec2 size)$/;"	f
igSelectableBoolPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSelectableBoolPtr(const char* label,bool* p_selected,ImGuiSelectableFlags flags,const ImVec2 size)$/;"	f
igSeparator	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSeparator()$/;"	f
igSeparator	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSeparator()$/;"	f
igSetAllocatorFunctions	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetAllocatorFunctions(void*(*alloc_func)(size_t sz,void* user_data),void(*free_func)(void* ptr,void* user_data),void* user_data)$/;"	f
igSetAllocatorFunctions	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetAllocatorFunctions(void*(*alloc_func)(size_t sz,void* user_data),void(*free_func)(void* ptr,void* user_data),void* user_data)$/;"	f
igSetClipboardText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetClipboardText(const char* text)$/;"	f
igSetClipboardText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetClipboardText(const char* text)$/;"	f
igSetColorEditOptions	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetColorEditOptions(ImGuiColorEditFlags flags)$/;"	f
igSetColorEditOptions	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetColorEditOptions(ImGuiColorEditFlags flags)$/;"	f
igSetColumnOffset	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetColumnOffset(int column_index,float offset_x)$/;"	f
igSetColumnOffset	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetColumnOffset(int column_index,float offset_x)$/;"	f
igSetColumnWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetColumnWidth(int column_index,float width)$/;"	f
igSetColumnWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetColumnWidth(int column_index,float width)$/;"	f
igSetCurrentContext	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCurrentContext(ImGuiContext* ctx)$/;"	f
igSetCurrentContext	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetCurrentContext(ImGuiContext* ctx)$/;"	f
igSetCursorPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorPos(const ImVec2 local_pos)$/;"	f
igSetCursorPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetCursorPos(const ImVec2 local_pos)$/;"	f
igSetCursorPosX	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorPosX(float local_x)$/;"	f
igSetCursorPosX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetCursorPosX(float local_x)$/;"	f
igSetCursorPosY	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorPosY(float local_y)$/;"	f
igSetCursorPosY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetCursorPosY(float local_y)$/;"	f
igSetCursorScreenPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorScreenPos(const ImVec2 pos)$/;"	f
igSetCursorScreenPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetCursorScreenPos(const ImVec2 pos)$/;"	f
igSetDragDropPayload	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSetDragDropPayload(const char* type,const void* data,size_t sz,ImGuiCond cond)$/;"	f
igSetDragDropPayload	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSetDragDropPayload(const char* type,const void* data,size_t sz,ImGuiCond cond)$/;"	f
igSetItemAllowOverlap	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetItemAllowOverlap()$/;"	f
igSetItemAllowOverlap	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetItemAllowOverlap()$/;"	f
igSetItemDefaultFocus	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetItemDefaultFocus()$/;"	f
igSetItemDefaultFocus	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetItemDefaultFocus()$/;"	f
igSetKeyboardFocusHere	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetKeyboardFocusHere(int offset)$/;"	f
igSetKeyboardFocusHere	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetKeyboardFocusHere(int offset)$/;"	f
igSetMouseCursor	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetMouseCursor(ImGuiMouseCursor cursor_type)$/;"	f
igSetMouseCursor	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetMouseCursor(ImGuiMouseCursor cursor_type)$/;"	f
igSetNextItemOpen	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextItemOpen(bool is_open,ImGuiCond cond)$/;"	f
igSetNextItemOpen	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextItemOpen(bool is_open,ImGuiCond cond)$/;"	f
igSetNextItemWidth	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextItemWidth(float item_width)$/;"	f
igSetNextItemWidth	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextItemWidth(float item_width)$/;"	f
igSetNextWindowBgAlpha	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowBgAlpha(float alpha)$/;"	f
igSetNextWindowBgAlpha	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextWindowBgAlpha(float alpha)$/;"	f
igSetNextWindowCollapsed	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowCollapsed(bool collapsed,ImGuiCond cond)$/;"	f
igSetNextWindowCollapsed	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextWindowCollapsed(bool collapsed,ImGuiCond cond)$/;"	f
igSetNextWindowContentSize	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowContentSize(const ImVec2 size)$/;"	f
igSetNextWindowContentSize	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextWindowContentSize(const ImVec2 size)$/;"	f
igSetNextWindowFocus	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowFocus()$/;"	f
igSetNextWindowFocus	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextWindowFocus()$/;"	f
igSetNextWindowPos	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowPos(const ImVec2 pos,ImGuiCond cond,const ImVec2 pivot)$/;"	f
igSetNextWindowPos	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextWindowPos(const ImVec2 pos,ImGuiCond cond,const ImVec2 pivot)$/;"	f
igSetNextWindowSize	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowSize(const ImVec2 size,ImGuiCond cond)$/;"	f
igSetNextWindowSize	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextWindowSize(const ImVec2 size,ImGuiCond cond)$/;"	f
igSetNextWindowSizeConstraints	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowSizeConstraints(const ImVec2 size_min,const ImVec2 size_max,ImGuiSizeCallback custom_callback,void* custom_callback_data)$/;"	f
igSetNextWindowSizeConstraints	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetNextWindowSizeConstraints(const ImVec2 size_min,const ImVec2 size_max,ImGuiSizeCallback custom_callback,void* custom_callback_data)$/;"	f
igSetScrollFromPosX	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollFromPosX(float local_x,float center_x_ratio)$/;"	f
igSetScrollFromPosX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetScrollFromPosX(float local_x,float center_x_ratio)$/;"	f
igSetScrollFromPosY	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollFromPosY(float local_y,float center_y_ratio)$/;"	f
igSetScrollFromPosY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetScrollFromPosY(float local_y,float center_y_ratio)$/;"	f
igSetScrollHereX	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollHereX(float center_x_ratio)$/;"	f
igSetScrollHereX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetScrollHereX(float center_x_ratio)$/;"	f
igSetScrollHereY	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollHereY(float center_y_ratio)$/;"	f
igSetScrollHereY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetScrollHereY(float center_y_ratio)$/;"	f
igSetScrollX	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollX(float scroll_x)$/;"	f
igSetScrollX	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetScrollX(float scroll_x)$/;"	f
igSetScrollY	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollY(float scroll_y)$/;"	f
igSetScrollY	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetScrollY(float scroll_y)$/;"	f
igSetStateStorage	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetStateStorage(ImGuiStorage* storage)$/;"	f
igSetStateStorage	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetStateStorage(ImGuiStorage* storage)$/;"	f
igSetTabItemClosed	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetTabItemClosed(const char* tab_or_docked_window_label)$/;"	f
igSetTabItemClosed	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetTabItemClosed(const char* tab_or_docked_window_label)$/;"	f
igSetTooltip	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetTooltip(const char* fmt,...)$/;"	f
igSetTooltip	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetTooltip(const char* fmt,...)$/;"	f
igSetTooltipV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetTooltipV(const char* fmt,va_list args)$/;"	f
igSetTooltipV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetTooltipV(const char* fmt,va_list args)$/;"	f
igSetWindowCollapsedBool	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowCollapsedBool(bool collapsed,ImGuiCond cond)$/;"	f
igSetWindowCollapsedBool	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowCollapsedBool(bool collapsed,ImGuiCond cond)$/;"	f
igSetWindowCollapsedStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowCollapsedStr(const char* name,bool collapsed,ImGuiCond cond)$/;"	f
igSetWindowCollapsedStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowCollapsedStr(const char* name,bool collapsed,ImGuiCond cond)$/;"	f
igSetWindowFocus	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowFocus()$/;"	f
igSetWindowFocus	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowFocus()$/;"	f
igSetWindowFocusStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowFocusStr(const char* name)$/;"	f
igSetWindowFocusStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowFocusStr(const char* name)$/;"	f
igSetWindowFontScale	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowFontScale(float scale)$/;"	f
igSetWindowFontScale	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowFontScale(float scale)$/;"	f
igSetWindowPosStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowPosStr(const char* name,const ImVec2 pos,ImGuiCond cond)$/;"	f
igSetWindowPosStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowPosStr(const char* name,const ImVec2 pos,ImGuiCond cond)$/;"	f
igSetWindowPosVec2	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowPosVec2(const ImVec2 pos,ImGuiCond cond)$/;"	f
igSetWindowPosVec2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowPosVec2(const ImVec2 pos,ImGuiCond cond)$/;"	f
igSetWindowSizeStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowSizeStr(const char* name,const ImVec2 size,ImGuiCond cond)$/;"	f
igSetWindowSizeStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowSizeStr(const char* name,const ImVec2 size,ImGuiCond cond)$/;"	f
igSetWindowSizeVec2	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowSizeVec2(const ImVec2 size,ImGuiCond cond)$/;"	f
igSetWindowSizeVec2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSetWindowSizeVec2(const ImVec2 size,ImGuiCond cond)$/;"	f
igShowAboutWindow	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igShowAboutWindow(bool* p_open)$/;"	f
igShowAboutWindow	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igShowAboutWindow(bool* p_open)$/;"	f
igShowDemoWindow	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igShowDemoWindow(bool* p_open)$/;"	f
igShowDemoWindow	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igShowDemoWindow(bool* p_open)$/;"	f
igShowFontSelector	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igShowFontSelector(const char* label)$/;"	f
igShowFontSelector	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igShowFontSelector(const char* label)$/;"	f
igShowMetricsWindow	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igShowMetricsWindow(bool* p_open)$/;"	f
igShowMetricsWindow	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igShowMetricsWindow(bool* p_open)$/;"	f
igShowStyleEditor	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igShowStyleEditor(ImGuiStyle* ref)$/;"	f
igShowStyleEditor	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igShowStyleEditor(ImGuiStyle* ref)$/;"	f
igShowStyleSelector	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igShowStyleSelector(const char* label)$/;"	f
igShowStyleSelector	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igShowStyleSelector(const char* label)$/;"	f
igShowUserGuide	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igShowUserGuide()$/;"	f
igShowUserGuide	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igShowUserGuide()$/;"	f
igSliderAngle	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderAngle(const char* label,float* v_rad,float v_degrees_min,float v_degrees_max,const char* format)$/;"	f
igSliderAngle	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderAngle(const char* label,float* v_rad,float v_degrees_min,float v_degrees_max,const char* format)$/;"	f
igSliderFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat(const char* label,float* v,float v_min,float v_max,const char* format,float power)$/;"	f
igSliderFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderFloat(const char* label,float* v,float v_min,float v_max,const char* format,float power)$/;"	f
igSliderFloat2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat2(const char* label,float v[2],float v_min,float v_max,const char* format,float power)$/;"	f
igSliderFloat2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderFloat2(const char* label,float v[2],float v_min,float v_max,const char* format,float power)$/;"	f
igSliderFloat3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat3(const char* label,float v[3],float v_min,float v_max,const char* format,float power)$/;"	f
igSliderFloat3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderFloat3(const char* label,float v[3],float v_min,float v_max,const char* format,float power)$/;"	f
igSliderFloat4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat4(const char* label,float v[4],float v_min,float v_max,const char* format,float power)$/;"	f
igSliderFloat4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderFloat4(const char* label,float v[4],float v_min,float v_max,const char* format,float power)$/;"	f
igSliderInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt(const char* label,int* v,int v_min,int v_max,const char* format)$/;"	f
igSliderInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderInt(const char* label,int* v,int v_min,int v_max,const char* format)$/;"	f
igSliderInt2	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt2(const char* label,int v[2],int v_min,int v_max,const char* format)$/;"	f
igSliderInt2	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderInt2(const char* label,int v[2],int v_min,int v_max,const char* format)$/;"	f
igSliderInt3	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt3(const char* label,int v[3],int v_min,int v_max,const char* format)$/;"	f
igSliderInt3	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderInt3(const char* label,int v[3],int v_min,int v_max,const char* format)$/;"	f
igSliderInt4	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt4(const char* label,int v[4],int v_min,int v_max,const char* format)$/;"	f
igSliderInt4	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderInt4(const char* label,int v[4],int v_min,int v_max,const char* format)$/;"	f
igSliderScalar	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderScalar(const char* label,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igSliderScalar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderScalar(const char* label,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igSliderScalarN	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderScalarN(const char* label,ImGuiDataType data_type,void* p_data,int components,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igSliderScalarN	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSliderScalarN(const char* label,ImGuiDataType data_type,void* p_data,int components,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igSmallButton	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igSmallButton(const char* label)$/;"	f
igSmallButton	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igSmallButton(const char* label)$/;"	f
igSpacing	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igSpacing()$/;"	f
igSpacing	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igSpacing()$/;"	f
igStyleColorsClassic	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igStyleColorsClassic(ImGuiStyle* dst)$/;"	f
igStyleColorsClassic	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igStyleColorsClassic(ImGuiStyle* dst)$/;"	f
igStyleColorsDark	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igStyleColorsDark(ImGuiStyle* dst)$/;"	f
igStyleColorsDark	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igStyleColorsDark(ImGuiStyle* dst)$/;"	f
igStyleColorsLight	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igStyleColorsLight(ImGuiStyle* dst)$/;"	f
igStyleColorsLight	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igStyleColorsLight(ImGuiStyle* dst)$/;"	f
igText	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igText(const char* fmt,...)$/;"	f
igText	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igText(const char* fmt,...)$/;"	f
igTextColored	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextColored(const ImVec4 col,const char* fmt,...)$/;"	f
igTextColored	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextColored(const ImVec4 col,const char* fmt,...)$/;"	f
igTextColoredV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextColoredV(const ImVec4 col,const char* fmt,va_list args)$/;"	f
igTextColoredV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextColoredV(const ImVec4 col,const char* fmt,va_list args)$/;"	f
igTextDisabled	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextDisabled(const char* fmt,...)$/;"	f
igTextDisabled	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextDisabled(const char* fmt,...)$/;"	f
igTextDisabledV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextDisabledV(const char* fmt,va_list args)$/;"	f
igTextDisabledV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextDisabledV(const char* fmt,va_list args)$/;"	f
igTextUnformatted	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextUnformatted(const char* text,const char* text_end)$/;"	f
igTextUnformatted	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextUnformatted(const char* text,const char* text_end)$/;"	f
igTextV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextV(const char* fmt,va_list args)$/;"	f
igTextV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextV(const char* fmt,va_list args)$/;"	f
igTextWrapped	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextWrapped(const char* fmt,...)$/;"	f
igTextWrapped	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextWrapped(const char* fmt,...)$/;"	f
igTextWrappedV	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTextWrappedV(const char* fmt,va_list args)$/;"	f
igTextWrappedV	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTextWrappedV(const char* fmt,va_list args)$/;"	f
igTreeNodeExPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExPtr(const void* ptr_id,ImGuiTreeNodeFlags flags,const char* fmt,...)$/;"	f
igTreeNodeExPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExPtr(const void* ptr_id,ImGuiTreeNodeFlags flags,const char* fmt,...)$/;"	f
igTreeNodeExStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExStr(const char* label,ImGuiTreeNodeFlags flags)$/;"	f
igTreeNodeExStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExStr(const char* label,ImGuiTreeNodeFlags flags)$/;"	f
igTreeNodeExStrStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExStrStr(const char* str_id,ImGuiTreeNodeFlags flags,const char* fmt,...)$/;"	f
igTreeNodeExStrStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExStrStr(const char* str_id,ImGuiTreeNodeFlags flags,const char* fmt,...)$/;"	f
igTreeNodeExVPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExVPtr(const void* ptr_id,ImGuiTreeNodeFlags flags,const char* fmt,va_list args)$/;"	f
igTreeNodeExVPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExVPtr(const void* ptr_id,ImGuiTreeNodeFlags flags,const char* fmt,va_list args)$/;"	f
igTreeNodeExVStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExVStr(const char* str_id,ImGuiTreeNodeFlags flags,const char* fmt,va_list args)$/;"	f
igTreeNodeExVStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExVStr(const char* str_id,ImGuiTreeNodeFlags flags,const char* fmt,va_list args)$/;"	f
igTreeNodePtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodePtr(const void* ptr_id,const char* fmt,...)$/;"	f
igTreeNodePtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodePtr(const void* ptr_id,const char* fmt,...)$/;"	f
igTreeNodeStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeStr(const char* label)$/;"	f
igTreeNodeStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeStr(const char* label)$/;"	f
igTreeNodeStrStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeStrStr(const char* str_id,const char* fmt,...)$/;"	f
igTreeNodeStrStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeStrStr(const char* str_id,const char* fmt,...)$/;"	f
igTreeNodeVPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeVPtr(const void* ptr_id,const char* fmt,va_list args)$/;"	f
igTreeNodeVPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeVPtr(const void* ptr_id,const char* fmt,va_list args)$/;"	f
igTreeNodeVStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeVStr(const char* str_id,const char* fmt,va_list args)$/;"	f
igTreeNodeVStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igTreeNodeVStr(const char* str_id,const char* fmt,va_list args)$/;"	f
igTreePop	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTreePop()$/;"	f
igTreePop	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTreePop()$/;"	f
igTreePushPtr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTreePushPtr(const void* ptr_id)$/;"	f
igTreePushPtr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTreePushPtr(const void* ptr_id)$/;"	f
igTreePushStr	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igTreePushStr(const char* str_id)$/;"	f
igTreePushStr	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igTreePushStr(const char* str_id)$/;"	f
igUnindent	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igUnindent(float indent_w)$/;"	f
igUnindent	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igUnindent(float indent_w)$/;"	f
igVSliderFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igVSliderFloat(const char* label,const ImVec2 size,float* v,float v_min,float v_max,const char* format,float power)$/;"	f
igVSliderFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igVSliderFloat(const char* label,const ImVec2 size,float* v,float v_min,float v_max,const char* format,float power)$/;"	f
igVSliderInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igVSliderInt(const char* label,const ImVec2 size,int* v,int v_min,int v_max,const char* format)$/;"	f
igVSliderInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igVSliderInt(const char* label,const ImVec2 size,int* v,int v_min,int v_max,const char* format)$/;"	f
igVSliderScalar	lib/cimgui/cimgui.cpp	/^CIMGUI_API bool igVSliderScalar(const char* label,const ImVec2 size,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igVSliderScalar	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API bool igVSliderScalar(const char* label,const ImVec2 size,ImGuiDataType data_type,void* p_data,const void* p_min,const void* p_max,const char* format,float power)$/;"	f
igValueBool	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igValueBool(const char* prefix,bool b)$/;"	f
igValueBool	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igValueBool(const char* prefix,bool b)$/;"	f
igValueFloat	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igValueFloat(const char* prefix,float v,const char* float_format)$/;"	f
igValueFloat	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igValueFloat(const char* prefix,float v,const char* float_format)$/;"	f
igValueInt	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igValueInt(const char* prefix,int v)$/;"	f
igValueInt	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igValueInt(const char* prefix,int v)$/;"	f
igValueUint	lib/cimgui/cimgui.cpp	/^CIMGUI_API void igValueUint(const char* prefix,unsigned int v)$/;"	f
igValueUint	lib/cimgui/generator/output/cimgui.cpp	/^CIMGUI_API void igValueUint(const char* prefix,unsigned int v)$/;"	f
ignored	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef struct { int ignored; } *					uSynergyCookie;$/;"	m	struct:__anon103
image	lib/nuklear/nuklear.h	/^    struct nk_image image;$/;"	m	union:nk_style_item_data	typeref:struct:nk_style_item_data::nk_image
image	lib/nuklear/src/nuklear.h	/^    struct nk_image image;$/;"	m	union:nk_style_item_data	typeref:struct:nk_style_item_data::nk_image
image_load	lib/nuklear/example/skinning.c	/^image_load(const char *filename)$/;"	f	file:
image_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
image_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
image_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
image_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
images	lib/nuklear/example/extended.c	/^    struct nk_image images[9];$/;"	m	struct:media	typeref:struct:media::nk_image	file:
img	lib/nuklear/nuklear.h	/^    struct nk_image img;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_image
img	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::nk_image
img	lib/nuklear/src/nuklear.h	/^    struct nk_image img;$/;"	m	struct:nk_command_image	typeref:struct:nk_command_image::nk_image
img	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::nk_image
img_buffer	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon146
img_buffer_end	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anon146
img_buffer_original	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon146
img_buffer_original_end	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anon146
img_comp	lib/nuklear/example/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anon149	typeref:struct:__anon149::__anon150
img_file	lib/nuklear/example/file_browser.c	/^    struct nk_image img_file;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
img_h_max	lib/nuklear/example/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon149
img_mcu_h	lib/nuklear/example/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon149
img_mcu_w	lib/nuklear/example/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anon149
img_mcu_x	lib/nuklear/example/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon149
img_mcu_y	lib/nuklear/example/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anon149
img_n	lib/nuklear/example/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon146
img_out_n	lib/nuklear/example/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anon146
img_v_max	lib/nuklear/example/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anon149
img_x	lib/nuklear/example/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon146
img_y	lib/nuklear/example/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anon146
in	lib/nuklear/demo/node_editor.c	/^    struct nk_vec2 in;$/;"	m	struct:node_link	typeref:struct:node_link::nk_vec2	file:
in_function 	lib/cimgui/generator/generator_old.lua	/^                in_function = false$/;"	f
in_function 	lib/cimgui/generator/generator_old.lua	/^                in_function = true$/;"	f
in_functionst 	lib/cimgui/generator/generator_old.lua	/^                in_functionst = false$/;"	f
in_functionst 	lib/cimgui/generator/generator_old.lua	/^                in_functionst = true$/;"	f
inc_button	lib/nuklear/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_button
inc_button	lib/nuklear/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_button
inc_button	lib/nuklear/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_button
inc_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_button
inc_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_button
inc_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_button
inc_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_style_scrollbar::nk_symbol_type
inc_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_style_slider::nk_symbol_type
inc_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_style_scrollbar::nk_symbol_type
inc_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_style_slider::nk_symbol_type
ind	lib/klib/ketopt.h	/^	int ind;   \/* equivalent to optind *\/$/;"	m	struct:__anon29
indent	lib/nuklear/nuklear.h	/^    float indent;$/;"	m	struct:nk_style_tab
indent	lib/nuklear/src/nuklear.h	/^    float indent;$/;"	m	struct:nk_style_tab
index	lib/klib/kthread.c	/^	int64_t index;$/;"	m	struct:__anon38	file:
index	lib/klib/kthread.c	/^	int64_t index;$/;"	m	struct:ktp_t	file:
index	lib/nuklear/nuklear.h	/^    int index;$/;"	m	struct:nk_chart_slot
index	lib/nuklear/nuklear.h	/^    int index;$/;"	m	struct:nk_row_layout
index	lib/nuklear/src/nuklear.h	/^    int index;$/;"	m	struct:nk_chart_slot
index	lib/nuklear/src/nuklear.h	/^    int index;$/;"	m	struct:nk_row_layout
indexToLocFormat	lib/cimgui/imgui/imstb_truetype.h	/^   int indexToLocFormat;              \/\/ format needed to map from glyph index to glyph$/;"	m	struct:stbtt_fontinfo
indexToLocFormat	lib/nuklear/nuklear.h	/^    int indexToLocFormat; \/* format needed to map from glyph index to glyph *\/$/;"	m	struct:nk_tt_fontinfo
indexToLocFormat	lib/nuklear/src/nuklear_font.c	/^    int indexToLocFormat; \/* format needed to map from glyph index to glyph *\/$/;"	m	struct:nk_tt_fontinfo	file:
index_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Buffer *index_buffer;$/;"	m	struct:__anon174
index_from_ptr	lib/cimgui/imgui/imgui.h	/^    inline int          index_from_ptr(const T* it) const   { IM_ASSERT(it >= Data && it < Data + Size); const ptrdiff_t off = it - Data; return (int)off; }$/;"	f	struct:ImVector
index_map	lib/cimgui/imgui/imstb_truetype.h	/^   int index_map;                     \/\/ a cmap mapping for our chosen character encoding$/;"	m	struct:stbtt_fontinfo
index_map	lib/nuklear/nuklear.h	/^    int index_map; \/* a cmap mapping for our chosen character encoding *\/$/;"	m	struct:nk_tt_fontinfo
index_map	lib/nuklear/src/nuklear_font.c	/^    int index_map; \/* a cmap mapping for our chosen character encoding *\/$/;"	m	struct:nk_tt_fontinfo	file:
induceSA	lib/klib/ksa.c	/^static void induceSA(const unsigned char *T, saint_t *SA, saint_t *C, saint_t *B, saint_t n, saint_t k, saint_t cs)$/;"	f	file:
inflate_block	lib/klib/bgzf.c	/^static int inflate_block(BGZF* fp, int block_length)$/;"	f	file:
info	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct opengl_info info;$/;"	m	struct:nk_x11_device	typeref:struct:nk_x11_device::opengl_info
info	lib/nuklear/nuklear.h	/^    struct nk_baked_font info;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_baked_font
info	lib/nuklear/nuklear.h	/^    struct nk_tt_fontinfo info;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_tt_fontinfo
info	lib/nuklear/src/nuklear.h	/^    struct nk_baked_font info;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_baked_font
info	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_fontinfo info;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_tt_fontinfo	file:
info_arch	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v
info_version_internal	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v
init_mode	lib/cimgui/imgui/imstb_rectpack.h	/^   int init_mode;$/;"	m	struct:stbrp_context
init_mode	lib/nuklear/nuklear.h	/^    int init_mode;$/;"	m	struct:nk_rp_context
init_mode	lib/nuklear/src/nuklear_font.c	/^    int init_mode;$/;"	m	struct:nk_rp_context	file:
init_vao	src/obj.c	/^init_vao(obj_p obj, int col) {$/;"	f	file:
initialized	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char initialized;$/;"	m	struct:__anon109
initialized	lib/nuklear/demo/node_editor.c	/^    int initialized;$/;"	m	struct:node_editor	file:
initialized	lib/nuklear/nuklear.h	/^    unsigned char initialized;$/;"	m	struct:nk_text_edit
initialized	lib/nuklear/src/nuklear.h	/^    unsigned char initialized;$/;"	m	struct:nk_text_edit
inline	lib/klib/kavl.h	66;"	d
inline	lib/klib/krmq.h	66;"	d
innerHash	lib/klib/kurl.c	/^	uint8_t innerHash[HASH_LENGTH];$/;"	m	struct:sha1nfo	file:
input	lib/nuklear/nuklear.h	/^    struct nk_input input;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_input
input	lib/nuklear/src/nuklear.h	/^    struct nk_input input;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_input
input_count	lib/nuklear/demo/node_editor.c	/^    int input_count;$/;"	m	struct:node	file:
input_id	lib/nuklear/demo/node_editor.c	/^    int input_id;$/;"	m	struct:node_link	file:
input_id	lib/nuklear/demo/node_editor.c	/^    int input_id;$/;"	m	struct:node_linking	file:
input_layout	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11InputLayout *input_layout;$/;"	m	struct:__anon174
input_slot	lib/nuklear/demo/node_editor.c	/^    int input_slot;$/;"	m	struct:node_link	file:
input_slot	lib/nuklear/demo/node_editor.c	/^    int input_slot;$/;"	m	struct:node_linking	file:
insert	lib/cimgui/imgui/imgui.h	/^    inline T*           insert(const T* it, const T& v)     { IM_ASSERT(it >= Data && it <= Data+Size); const ptrdiff_t off = it - Data; if (Size == Capacity) reserve(_grow_capacity(Size + 1)); if (off < (int)Size) memmove(Data + off + 1, Data + off, ((size_t)Size - (size_t)off) * sizeof(T)); memcpy(&Data[off], &v, sizeof(v)); Size++; return Data + off; }$/;"	f	struct:ImVector
insert	lib/klib/cpp/kavl.hpp	/^	T *insert(const T &data, bool *is_new = NULL, unsigned *cnt_ = NULL) {$/;"	f	class:klib::Avl
insertSort	lib/klib/test/ksort_test.cc	/^inline void insertSort (int numbers[], int qty) {$/;"	f
insert_length	lib/cimgui/imgui/imstb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  insert_length;$/;"	m	struct:__anon107
insert_length	lib/nuklear/nuklear.h	/^   short insert_length;$/;"	m	struct:nk_text_undo_record
insert_length	lib/nuklear/src/nuklear.h	/^   short insert_length;$/;"	m	struct:nk_text_undo_record
insert_mode	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char insert_mode;$/;"	m	struct:__anon109
int2str	lib/klib/test/khash_keith.c	/^inline void int2str(int c, int base, char *ret)$/;"	f
int2str	lib/klib/test/khash_keith2.c	/^inline void int2str(int c, int base, char *ret)$/;"	f
int32_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef __int32 int32_t;$/;"	t
int32_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef long int int32_t;$/;"	t
int32_t	lib/gl3w/GL/glcorearb.h	/^typedef __int32 int32_t;$/;"	t
int32_t	lib/gl3w/GL/glcorearb.h	/^typedef long int int32_t;$/;"	t
int64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef __int64 int64_t;$/;"	t
int64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef long int int64_t;$/;"	t
int64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef long long int int64_t;$/;"	t
int64_t	lib/gl3w/GL/glcorearb.h	/^typedef __int64 int64_t;$/;"	t
int64_t	lib/gl3w/GL/glcorearb.h	/^typedef long int int64_t;$/;"	t
int64_t	lib/gl3w/GL/glcorearb.h	/^typedef long long int int64_t;$/;"	t
int64tostr	lib/klib/knetfile.c	/^char *int64tostr(char *buf, int64_t x)$/;"	f
int_data	lib/klib/test/kbtree_test.c	/^static unsigned *int_data;$/;"	v	file:
int_data	lib/klib/test/khash_test.c	/^static unsigned *int_data;$/;"	v	file:
int_packed_t	lib/klib/test/khash_test.c	/^} __attribute__ ((__packed__)) int_packed_t;$/;"	t	typeref:struct:__anon12	file:
int_unpack_t	lib/klib/test/khash_test.c	/^} int_unpack_t;$/;"	t	typeref:struct:__anon11	file:
intcmp_t	lib/klib/test/ksort_test.cc	/^struct intcmp_t {$/;"	s	file:
interactive_init	src/interactive.c	/^interactive_init(GLFWwindow* win) {$/;"	f
intro_files	lib/nuklear/src/build.py	/^        intro_files = parse_files(sys.argv[cur_arg])$/;"	v
intro_files	lib/nuklear/src/build.py	/^intro_files = []$/;"	v
intvovlp	lib/klib/lua/bio.lua	/^local function intvovlp(intv, bits)$/;"	f
invert	lib/cimgui/imgui/imstb_truetype.h	/^   int invert;$/;"	m	struct:stbtt__edge
invert	lib/nuklear/nuklear.h	/^    int invert;$/;"	m	struct:nk_tt__edge
invert	lib/nuklear/src/nuklear_font.c	/^    int invert;$/;"	m	struct:nk_tt__edge	file:
io	lib/nuklear/example/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anon146
io	src/gui.c	/^struct ImGuiIO* io;$/;"	v	typeref:struct:ImGuiIO
io.xopen	lib/klib/lua/klib.lua	/^function io.xopen(fn, mode)$/;"	f
io_user_data	lib/nuklear/example/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anon146
is_double_click_down	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int is_double_click_down;$/;"	m	struct:nk_glfw
is_double_click_down	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int is_double_click_down;$/;"	m	struct:nk_glfw
is_double_click_down	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int is_double_click_down;$/;"	m	struct:nk_glfw
is_internal	lib/klib/kbtree.h	/^	int32_t is_internal:1, n:31;$/;"	m	struct:__anon4
is_ready	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s
is_separator	lib/cimgui/imgui/imgui_widgets.cpp	/^static bool is_separator(unsigned int c)                                        { return ImCharIsBlankW(c) || c==',' || c==';' || c=='(' || c==')' || c=='{' || c=='}' || c=='[' || c==']' || c=='|'; }$/;"	f	namespace:ImStb
is_touch_down	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    int is_touch_down;$/;"	m	struct:nk_allegro5
is_word_boundary	lib/cimgui/imgui/imstb_textedit.h	/^static int is_word_boundary( STB_TEXTEDIT_STRING *str, int idx )$/;"	f
is_word_boundary_from_left	lib/cimgui/imgui/imgui_widgets.cpp	/^static int  is_word_boundary_from_left(STB_TEXTEDIT_STRING* obj, int idx)       { return idx > 0 ? (!is_separator( obj->TextW[idx-1] ) && is_separator( obj->TextW[idx] ) ) : 1; }$/;"	f	namespace:ImStb
is_word_boundary_from_right	lib/cimgui/imgui/imgui_widgets.cpp	/^static int  is_word_boundary_from_right(STB_TEXTEDIT_STRING* obj, int idx)      { return idx > 0 ? (is_separator( obj->TextW[idx-1] ) && !is_separator( obj->TextW[idx] ) ) : 1; }$/;"	f	namespace:ImStb
item	lib/nuklear/nuklear.h	/^    struct nk_rect item;$/;"	m	struct:nk_row_layout	typeref:struct:nk_row_layout::nk_rect
item	lib/nuklear/src/nuklear.h	/^    struct nk_rect item;$/;"	m	struct:nk_row_layout	typeref:struct:nk_row_layout::nk_rect
item_height	lib/nuklear/nuklear.h	/^    float item_height;$/;"	m	struct:nk_row_layout
item_height	lib/nuklear/src/nuklear.h	/^    float item_height;$/;"	m	struct:nk_row_layout
item_offset	lib/nuklear/nuklear.h	/^    float item_offset;$/;"	m	struct:nk_row_layout
item_offset	lib/nuklear/src/nuklear.h	/^    float item_offset;$/;"	m	struct:nk_row_layout
item_spacing	lib/nuklear/example/canvas.c	/^    struct nk_vec2 item_spacing;$/;"	m	struct:nk_canvas	typeref:struct:nk_canvas::nk_vec2	file:
item_width	lib/nuklear/nuklear.h	/^    float item_width;$/;"	m	struct:nk_row_layout
item_width	lib/nuklear/src/nuklear.h	/^    float item_width;$/;"	m	struct:nk_row_layout
itemsCount	lib/cimgui/generator/cpp2ffi.lua	/^local function itemsCount(items)$/;"	f
iterator	lib/cimgui/imgui/imgui.h	/^    typedef value_type*         iterator;$/;"	t	struct:ImVector
json.decode	lib/cimgui/generator/json.lua	/^function json.decode(str)$/;"	f
json.encode	lib/cimgui/generator/json.lua	/^function json.encode(val)$/;"	f
json_prepare	lib/cimgui/generator/generator.lua	/^local function json_prepare(defs)$/;"	f
json_prepare	lib/cimgui/generator/generator_old.lua	/^local function json_prepare(defs)$/;"	f
k	lib/klib/test/kthread_test.c	/^	int *k;$/;"	m	struct:__anon17	file:
kavl_at	lib/klib/kavl.h	388;"	d
kavl_erase	lib/klib/kavl.h	345;"	d
kavl_erase_first	lib/klib/kavl.h	346;"	d
kavl_find	lib/klib/kavl.h	334;"	d
kavl_free	lib/klib/kavl.h	258;"	d
kavl_insert	lib/klib/kavl.h	322;"	d
kavl_itr_find	lib/klib/kavl.h	370;"	d
kavl_itr_first	lib/klib/kavl.h	357;"	d
kavl_itr_next	lib/klib/kavl.h	379;"	d
kavl_itr_t	lib/klib/kavl.h	348;"	d
kavl_size	lib/klib/kavl.h	71;"	d
kavl_size_child	lib/klib/kavl.h	72;"	d
kb_del	lib/klib/kbtree.h	381;"	d
kb_delp	lib/klib/kbtree.h	385;"	d
kb_destroy	lib/klib/kbtree.h	378;"	d
kb_generic_cmp	lib/klib/kbtree.h	396;"	d
kb_get	lib/klib/kbtree.h	379;"	d
kb_getp	lib/klib/kbtree.h	383;"	d
kb_init	lib/klib/kbtree.h	377;"	d
kb_interval	lib/klib/kbtree.h	382;"	d
kb_intervalp	lib/klib/kbtree.h	386;"	d
kb_itr_first	lib/klib/kbtree.h	388;"	d
kb_itr_get	lib/klib/kbtree.h	389;"	d
kb_itr_key	lib/klib/kbtree.h	391;"	d
kb_itr_next	lib/klib/kbtree.h	390;"	d
kb_itr_valid	lib/klib/kbtree.h	392;"	d
kb_put	lib/klib/kbtree.h	380;"	d
kb_putp	lib/klib/kbtree.h	384;"	d
kb_size	lib/klib/kbtree.h	394;"	d
kb_str_cmp	lib/klib/kbtree.h	397;"	d
kbi_DNAcount64	lib/klib/kbit.h	/^static inline uint64_t kbi_DNAcount64(uint64_t y, int c) \/\/ count #A\/C\/G\/T from a 2-bit encoded integer; from BWA$/;"	f
kbi_popcount64	lib/klib/kbit.h	/^static inline uint64_t kbi_popcount64(uint64_t y) \/\/ standard popcount; from wikipedia$/;"	f
kbi_swap	lib/klib/kbit.h	27;"	d
kbitr_t	lib/klib/kbtree.h	/^} kbitr_t;$/;"	t	typeref:struct:__anon6
kbnode_t	lib/klib/kbtree.h	/^} kbnode_t;$/;"	t	typeref:struct:__anon4
kbpos_t	lib/klib/kbtree.h	/^} kbpos_t;$/;"	t	typeref:struct:__anon5
kbtree_t	lib/klib/kbtree.h	376;"	d
kcalloc	lib/klib/kalloc.c	/^void *kcalloc(void *_km, size_t count, size_t size)$/;"	f
kcalloc	lib/klib/khash.h	180;"	d
kcalloc	lib/klib/khashl.h	76;"	d
kclose	lib/klib/kopen.c	/^int kclose(void *a)$/;"	f
kdq_at	lib/klib/kdq.h	17;"	d
kdq_destroy	lib/klib/kdq.h	119;"	d
kdq_first	lib/klib/kdq.h	15;"	d
kdq_init	lib/klib/kdq.h	118;"	d
kdq_last	lib/klib/kdq.h	16;"	d
kdq_pop	lib/klib/kdq.h	123;"	d
kdq_push	lib/klib/kdq.h	122;"	d
kdq_pushp	lib/klib/kdq.h	121;"	d
kdq_resize	lib/klib/kdq.h	120;"	d
kdq_shift	lib/klib/kdq.h	126;"	d
kdq_size	lib/klib/kdq.h	14;"	d
kdq_t	lib/klib/kdq.h	13;"	d
kdq_unshift	lib/klib/kdq.h	125;"	d
kdq_unshiftp	lib/klib/kdq.h	124;"	d
ke1_s	lib/klib/kexpr.c	/^typedef struct ke1_s {$/;"	s	file:
ke1_t	lib/klib/kexpr.c	/^} ke1_t;$/;"	t	typeref:struct:ke1_s	file:
ke_core_sstq	lib/klib/keigen.c	/^int ke_core_sstq(int n, double *b, double *c, double *q, int cal_ev, double eps, int l)$/;"	f
ke_core_strq	lib/klib/keigen.c	/^void ke_core_strq(int n, double *q, double *b, double *c)$/;"	f
ke_destroy	lib/klib/kexpr.c	/^void ke_destroy(kexpr_t *ke)$/;"	f
ke_eigen_sd	lib/klib/keigen.c	/^int ke_eigen_sd(int n, double *a, double *v, int cal_ev, double eps, int max_iter)$/;"	f
ke_eval	lib/klib/kexpr.c	/^int ke_eval(const kexpr_t *ke, int64_t *_i, double *_r, const char **_p, int *ret_type)$/;"	f
ke_eval_int	lib/klib/kexpr.c	/^int64_t ke_eval_int(const kexpr_t *ke, int *err)$/;"	f
ke_eval_real	lib/klib/kexpr.c	/^double ke_eval_real(const kexpr_t *ke, int *err)$/;"	f
ke_func1_abs	lib/klib/kexpr.c	/^static void ke_func1_abs(ke1_t *p, ke1_t *q) { if (p->vtype == KEV_INT) p->i = abs(p->i), p->r = (double)p->i; else p->r = fabs(p->r), p->i = (int64_t)(p->r + .5); }$/;"	f	file:
ke_op	lib/klib/kexpr.c	/^static int ke_op[25] = {$/;"	v	file:
ke_op_KEO_BNOT	lib/klib/kexpr.c	/^static void ke_op_KEO_BNOT(ke1_t *p, ke1_t *q) { p->i = ~p->i; p->r = (double)p->i; p->vtype = KEV_INT; }$/;"	f	file:
ke_op_KEO_DIV	lib/klib/kexpr.c	/^static void ke_op_KEO_DIV(ke1_t *p, ke1_t *q)  { p->r \/= q->r, p->i = (int64_t)(p->r + .5); p->vtype = KEV_REAL; }$/;"	f	file:
ke_op_KEO_LAND	lib/klib/kexpr.c	/^static void ke_op_KEO_LAND(ke1_t *p, ke1_t *q) { p->i = (p->i && q->i); p->r = p->i; p->vtype = KEV_INT; }$/;"	f	file:
ke_op_KEO_LNOT	lib/klib/kexpr.c	/^static void ke_op_KEO_LNOT(ke1_t *p, ke1_t *q) { p->i = !p->i; p->r = (double)p->i; p->vtype = KEV_INT; }$/;"	f	file:
ke_op_KEO_LOR	lib/klib/kexpr.c	/^static void ke_op_KEO_LOR(ke1_t *p, ke1_t *q)  { p->i = (p->i || q->i); p->r = p->i; p->vtype = KEV_INT; }$/;"	f	file:
ke_op_KEO_NEG	lib/klib/kexpr.c	/^static void ke_op_KEO_NEG(ke1_t *p, ke1_t *q)  { p->i = -p->i, p->r = -p->r; }$/;"	f	file:
ke_op_KEO_POS	lib/klib/kexpr.c	/^static void ke_op_KEO_POS(ke1_t *p, ke1_t *q)  { } \/\/ do nothing$/;"	f	file:
ke_op_KEO_POW	lib/klib/kexpr.c	/^static void ke_op_KEO_POW(ke1_t *p, ke1_t *q)  { p->r = pow(p->r, q->r), p->i = (int64_t)(p->r + .5); p->vtype = p->vtype == KEV_REAL || q->vtype == KEV_REAL? KEV_REAL : KEV_INT; }$/;"	f	file:
ke_opstr	lib/klib/kexpr.c	/^static const char *ke_opstr[] = {$/;"	v	file:
ke_parse	lib/klib/kexpr.c	/^kexpr_t *ke_parse(const char *_s, int *err)$/;"	f
ke_parse_core	lib/klib/kexpr.c	/^static ke1_t *ke_parse_core(const char *_s, int *_n, int *err)$/;"	f	file:
ke_print	lib/klib/kexpr.c	/^void ke_print(const kexpr_t *ke)$/;"	f
ke_read_token	lib/klib/kexpr.c	/^static ke1_t ke_read_token(char *p, char **r, int *err, int last_is_val) \/\/ it doesn't parse parentheses$/;"	f	file:
ke_set_default_func	lib/klib/kexpr.c	/^int ke_set_default_func(kexpr_t *ke)$/;"	f
ke_set_int	lib/klib/kexpr.c	/^int ke_set_int(kexpr_t *ke, const char *var, int64_t y)$/;"	f
ke_set_real	lib/klib/kexpr.c	/^int ke_set_real(kexpr_t *ke, const char *var, double x)$/;"	f
ke_set_real_func1	lib/klib/kexpr.c	/^int ke_set_real_func1(kexpr_t *ke, const char *name, double (*func)(double))$/;"	f
ke_set_real_func2	lib/klib/kexpr.c	/^int ke_set_real_func2(kexpr_t *ke, const char *name, double (*func)(double, double))$/;"	f
ke_set_str	lib/klib/kexpr.c	/^int ke_set_str(kexpr_t *ke, const char *var, const char *x)$/;"	f
ke_unset	lib/klib/kexpr.c	/^void ke_unset(kexpr_t *ke)$/;"	f
kern	lib/cimgui/imgui/imstb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
kern	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
kern	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	file:
ketopt	lib/klib/ketopt.h	/^static int ketopt(ketopt_t *s, int argc, char *argv[], int permute, const char *ostr, const ko_longopt_t *longopts)$/;"	f
ketopt_permute	lib/klib/ketopt.h	/^static void ketopt_permute(char *argv[], int j, int n) \/* move argv[j] over n elements to the left *\/$/;"	f
ketopt_t	lib/klib/ketopt.h	/^} ketopt_t;$/;"	t	typeref:struct:__anon29
kexpr_s	lib/klib/kexpr.c	/^struct kexpr_s {$/;"	s	file:
kexpr_t	lib/klib/kexpr.h	/^typedef struct kexpr_s kexpr_t;$/;"	t	typeref:struct:kexpr_s
key	lib/cimgui/cimgui.h	/^        ImGuiID key;$/;"	m	struct:ImGuiStoragePair
key	lib/cimgui/generator/output/cimgui.h	/^        ImGuiID key;$/;"	m	struct:ImGuiStoragePair
key	lib/cimgui/imgui/imgui.h	/^        ImGuiID key;$/;"	m	struct:ImGuiStorage::ImGuiStoragePair
key	lib/klib/cpp/khashl.hpp	/^	inline KType &key(khint_t i) { return hashset_t::key(i).key; }$/;"	f	class:klib::KHashMap
key	lib/klib/cpp/khashl.hpp	/^	inline KType &key(khint_t i) { return hashset_t::key(i).key; }$/;"	f	class:klib::KHashMapCached
key	lib/klib/cpp/khashl.hpp	/^	inline KType &key(khint_t i) { return hashset_t::key(i).key; }$/;"	f	class:klib::KHashSetCached
key	lib/klib/cpp/khashl.hpp	/^	inline T &key(khint_t x) { return keys[x]; };$/;"	f	class:klib::KHashSet
key	lib/klib/cpp/khashl.hpp	/^struct KHashMapBucket { KType key; VType val; };$/;"	m	struct:klib::KHashMapBucket
key	lib/klib/cpp/khashl.hpp	/^struct KHashMapCachedBucket { KType key; VType val; khint_t hash; };$/;"	m	struct:klib::KHashMapCachedBucket
key	lib/klib/cpp/khashl.hpp	/^struct KHashSetCachedBucket { KType key; khint_t hash; };$/;"	m	struct:klib::KHashSetCachedBucket
key	lib/klib/kson.h	/^	char *key;$/;"	m	struct:kson_node_s
key	lib/klib/test/kavl_test.c	/^	int key;$/;"	m	struct:my_node	file:
key	lib/klib/test/khash_test.c	/^	unsigned key;$/;"	m	struct:__anon11	file:
key	lib/klib/test/khash_test.c	/^	unsigned key;$/;"	m	struct:__anon12	file:
key	lib/klib/test/krmq_test.c	/^	int key;$/;"	m	struct:my_node	file:
keyBuffer	lib/klib/kurl.c	/^	uint8_t keyBuffer[BLOCK_LENGTH];$/;"	m	struct:sha1nfo	file:
key_callback	src/interactive.c	/^key_callback($/;"	f	file:
keyboard	lib/nuklear/nuklear.h	/^    struct nk_keyboard keyboard;$/;"	m	struct:nk_input	typeref:struct:nk_input::nk_keyboard
keyboard	lib/nuklear/src/nuklear.h	/^    struct nk_keyboard keyboard;$/;"	m	struct:nk_input	typeref:struct:nk_input::nk_keyboard
keys	lib/klib/cpp/khash.hpp	/^	T *keys;$/;"	m	class:klib::KHash
keys	lib/klib/cpp/khashl.hpp	/^	T *keys;$/;"	m	class:klib::KHashSet
keys	lib/nuklear/nuklear.h	/^    nk_hash keys[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table
keys	lib/nuklear/nuklear.h	/^    struct nk_key keys[NK_KEY_MAX];$/;"	m	struct:nk_keyboard	typeref:struct:nk_keyboard::nk_key
keys	lib/nuklear/src/nuklear.h	/^    nk_hash keys[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table
keys	lib/nuklear/src/nuklear.h	/^    struct nk_key keys[NK_KEY_MAX];$/;"	m	struct:nk_keyboard	typeref:struct:nk_keyboard::nk_key
kf_betai	lib/klib/kmath.c	/^double kf_betai(double a, double b, double x)$/;"	f
kf_betai_aux	lib/klib/kmath.c	/^static double kf_betai_aux(double a, double b, double x)$/;"	f	file:
kf_erfc	lib/klib/kmath.c	/^double kf_erfc(double x)$/;"	f
kf_gammap	lib/klib/kmath.c	/^double kf_gammap(double s, double z)$/;"	f
kf_gammaq	lib/klib/kmath.c	/^double kf_gammaq(double s, double z)$/;"	f
kf_lgamma	lib/klib/kmath.c	/^double kf_lgamma(double z)$/;"	f
kfree	lib/klib/kalloc.c	/^void kfree(void *_km, void *ap) \/* kfree() also adds a new core to the circular list *\/$/;"	f
kfree	lib/klib/khash.h	189;"	d
kfree	lib/klib/khashl.h	85;"	d
kftp_connect	lib/klib/knetfile.c	/^int kftp_connect(knetFile *ftp)$/;"	f
kftp_connect_file	lib/klib/knetfile.c	/^int kftp_connect_file(knetFile *fp)$/;"	f
kftp_get_response	lib/klib/knetfile.c	/^static int kftp_get_response(knetFile *ftp)$/;"	f	file:
kftp_get_response	lib/klib/kopen.c	/^static int kftp_get_response(ftpaux_t *aux)$/;"	f	file:
kftp_parse_url	lib/klib/knetfile.c	/^knetFile *kftp_parse_url(const char *fn, const char *mode)$/;"	f
kftp_pasv_connect	lib/klib/knetfile.c	/^static int kftp_pasv_connect(knetFile *ftp)$/;"	f	file:
kftp_pasv_prep	lib/klib/knetfile.c	/^static int kftp_pasv_prep(knetFile *ftp)$/;"	f	file:
kftp_reconnect	lib/klib/knetfile.c	/^int kftp_reconnect(knetFile *ftp)$/;"	f
kftp_send_cmd	lib/klib/knetfile.c	/^static int kftp_send_cmd(knetFile *ftp, const char *cmd, int is_get)$/;"	f	file:
kftp_send_cmd	lib/klib/kopen.c	/^static int kftp_send_cmd(ftpaux_t *aux, const char *cmd, int is_get)$/;"	f	file:
kgetline	lib/klib/kstring.c	/^int kgetline(kstring_t *s, kgets_func *fgets_fn, void *fp)$/;"	f
kgets_func	lib/klib/kstring.h	/^	typedef char *kgets_func(char *, int, void *);$/;"	t
kgint_t	lib/klib/kgraph.h	/^typedef unsigned kgint_t;$/;"	t
kgraph_t	lib/klib/kgraph.h	11;"	d
kh_begin	lib/klib/khash.h	528;"	d
kh_bucket	lib/klib/khashl.h	306;"	d
kh_capacity	lib/klib/khashl.h	308;"	d
kh_clear	lib/klib/khash.h	453;"	d
kh_cstr_t	lib/klib/khash.h	/^typedef const char *kh_cstr_t;$/;"	t
kh_del	lib/klib/khash.h	491;"	d
kh_destroy	lib/klib/khash.h	446;"	d
kh_end	lib/klib/khash.h	535;"	d
kh_end	lib/klib/khashl.h	309;"	d
kh_eq_generic	lib/klib/khashl.h	318;"	d
kh_eq_str	lib/klib/khashl.h	319;"	d
kh_exist	lib/klib/khash.h	499;"	d
kh_foreach	lib/klib/khash.h	558;"	d
kh_foreach_value	lib/klib/khash.h	572;"	d
kh_get	lib/klib/khash.h	483;"	d
kh_hash_dummy	lib/klib/khashl.h	320;"	d
kh_hash_str	lib/klib/khashl.h	/^static kh_inline khint_t kh_hash_str(const char *s) {$/;"	f
kh_hash_uint32	lib/klib/khashl.h	/^static kh_inline khint_t kh_hash_uint32(khint_t key) {$/;"	f
kh_hash_uint64	lib/klib/khashl.h	/^static kh_inline khint_t kh_hash_uint64(khint64_t key) {$/;"	f
kh_init	lib/klib/khash.h	439;"	d
kh_inline	lib/klib/khash.h	148;"	d
kh_inline	lib/klib/khash.h	150;"	d
kh_inline	lib/klib/khashl.h	53;"	d
kh_inline	lib/klib/khashl.h	55;"	d
kh_int64_hash_equal	lib/klib/khash.h	389;"	d
kh_int64_hash_func	lib/klib/khash.h	385;"	d
kh_int_hash_equal	lib/klib/khash.h	379;"	d
kh_int_hash_func	lib/klib/khash.h	375;"	d
kh_int_hash_func2	lib/klib/khash.h	422;"	d
kh_key	lib/klib/khash.h	507;"	d
kh_key	lib/klib/khashl.h	311;"	d
kh_n_buckets	lib/klib/khash.h	549;"	d
kh_put	lib/klib/khash.h	474;"	d
kh_resize	lib/klib/khash.h	461;"	d
kh_size	lib/klib/khash.h	542;"	d
kh_size	lib/klib/khashl.h	307;"	d
kh_str_hash_equal	lib/klib/khash.h	410;"	d
kh_str_hash_func	lib/klib/khash.h	406;"	d
kh_val	lib/klib/khash.h	516;"	d
kh_val	lib/klib/khashl.h	312;"	d
kh_value	lib/klib/khash.h	521;"	d
khash_t	lib/klib/khash.h	432;"	d
khint32_t	lib/klib/khash.h	/^typedef unsigned int khint32_t;$/;"	t
khint32_t	lib/klib/khash.h	/^typedef unsigned long khint32_t;$/;"	t
khint32_t	lib/klib/khashl.h	/^typedef unsigned int khint32_t;$/;"	t
khint32_t	lib/klib/khashl.h	/^typedef unsigned long khint32_t;$/;"	t
khint64_t	lib/klib/khash.h	/^typedef unsigned long khint64_t;$/;"	t
khint64_t	lib/klib/khash.h	/^typedef unsigned long long khint64_t;$/;"	t
khint64_t	lib/klib/khashl.h	/^typedef unsigned long khint64_t;$/;"	t
khint64_t	lib/klib/khashl.h	/^typedef unsigned long long khint64_t;$/;"	t
khint_t	lib/klib/khash.h	/^typedef khint32_t khint_t;$/;"	t
khint_t	lib/klib/khashl.h	/^typedef khint32_t khint_t;$/;"	t
khiter_t	lib/klib/khash.h	/^typedef khint_t khiter_t;$/;"	t
khttp_connect_file	lib/klib/knetfile.c	/^int khttp_connect_file(knetFile *fp)$/;"	f
khttp_parse_url	lib/klib/knetfile.c	/^knetFile *khttp_parse_url(const char *fn, const char *mode)$/;"	f
kind	lib/nuklear/nuklear.h	/^    enum nk_property_kind kind;$/;"	m	struct:nk_property_variant	typeref:enum:nk_property_variant::nk_property_kind
kind	lib/nuklear/src/nuklear_internal.h	/^    enum nk_property_kind kind;$/;"	m	struct:nk_property_variant	typeref:enum:nk_property_variant::nk_property_kind
kl_begin	lib/klib/klist.h	127;"	d
kl_destroy	lib/klib/klist.h	131;"	d
kl_end	lib/klib/klist.h	128;"	d
kl_init	lib/klib/klist.h	130;"	d
kl_next	lib/klib/klist.h	126;"	d
kl_pushp	lib/klib/klist.h	132;"	d
kl_shift	lib/klib/klist.h	133;"	d
kl_val	lib/klib/klist.h	125;"	d
klib	lib/klib/cpp/kavl.hpp	/^namespace klib {$/;"	n
klib	lib/klib/cpp/khash.hpp	/^namespace klib {$/;"	n
klib	lib/klib/cpp/khashl.hpp	/^namespace klib {$/;"	n
klib_unused	lib/klib/kdq.h	100;"	d
klib_unused	lib/klib/kdq.h	98;"	d
klib_unused	lib/klib/khash.h	156;"	d
klib_unused	lib/klib/khash.h	158;"	d
klib_unused	lib/klib/khashl.h	61;"	d
klib_unused	lib/klib/khashl.h	63;"	d
klib_unused	lib/klib/klist.h	33;"	d
klib_unused	lib/klib/klist.h	35;"	d
klist_t	lib/klib/klist.h	124;"	d
kliter_t	lib/klib/klist.h	123;"	d
km_destroy	lib/klib/kalloc.c	/^void km_destroy(void *_km)$/;"	f
km_init	lib/klib/kalloc.c	/^void *km_init(void)$/;"	f
km_ks_dist	lib/klib/kmath.c	/^double km_ks_dist(int na, const double a[], int nb, const double b[]) \/\/ a[] and b[] MUST BE sorted$/;"	f
km_stat	lib/klib/kalloc.c	/^void km_stat(const void *_km, km_stat_t *s)$/;"	f
km_stat_t	lib/klib/kalloc.h	/^} km_stat_t;$/;"	t	typeref:struct:__anon43
kmalloc	lib/klib/kalloc.c	/^void *kmalloc(void *_km, size_t n_bytes)$/;"	f
kmalloc	lib/klib/khash.h	183;"	d
kmalloc	lib/klib/khashl.h	79;"	d
kmem_t	lib/klib/kalloc.c	/^} kmem_t;$/;"	t	typeref:struct:__anon18	file:
kmemmem	lib/klib/kstring.c	/^void *kmemmem(const void *_str, int n, const void *_pat, int m, int **_prep)$/;"	f
kmempool_t	lib/klib/klist.h	71;"	d
kmin1_f	lib/klib/kmath.h	/^	typedef double (*kmin1_f)(double, void*);$/;"	t
kmin_brent	lib/klib/kmath.c	/^double kmin_brent(kmin1_f func, double a, double b, void *data, double tol, double *xmin)$/;"	f
kmin_f	lib/klib/kmath.h	/^	typedef double (*kmin_f)(int, double*, void*);$/;"	t
kmin_hj	lib/klib/kmath.c	/^double kmin_hj(kmin_f func, int n, double *x, void *data, double r, double eps, int max_calls)$/;"	f
kmp_alloc	lib/klib/klist.h	74;"	d
kmp_destroy	lib/klib/klist.h	73;"	d
kmp_free	lib/klib/klist.h	75;"	d
kmp_init	lib/klib/klist.h	72;"	d
kn_format	lib/klib/knhx.c	/^void kn_format(const knhx1_t *node, int root, kstring_t *s) \/\/ TODO: get rid of recursion$/;"	f
kn_parse	lib/klib/knhx.c	/^knhx1_t *kn_parse(const char *nhx, int *_n, int *_error)$/;"	f
knaux_t	lib/klib/knhx.c	/^} knaux_t;$/;"	t	typeref:struct:__anon41	file:
knetFile	lib/klib/knetfile.h	/^} knetFile;$/;"	t	typeref:struct:knetFile_s
knetFile	lib/klib/kurl.h	/^typedef kurl_t knetFile;$/;"	t
knetFile_s	lib/klib/knetfile.h	/^typedef struct knetFile_s {$/;"	s
knet_close	lib/klib/knetfile.c	/^int knet_close(knetFile *fp)$/;"	f
knet_close	lib/klib/kurl.h	48;"	d
knet_dopen	lib/klib/knetfile.c	/^knetFile *knet_dopen(int fd, const char *mode)$/;"	f
knet_dopen	lib/klib/kurl.h	47;"	d
knet_fileno	lib/klib/knetfile.h	40;"	d
knet_fileno	lib/klib/kurl.h	52;"	d
knet_open	lib/klib/knetfile.c	/^knetFile *knet_open(const char *fn, const char *mode)$/;"	f
knet_open	lib/klib/kurl.h	46;"	d
knet_read	lib/klib/knetfile.c	/^off_t knet_read(knetFile *fp, void *buf, off_t len)$/;"	f
knet_read	lib/klib/kurl.h	49;"	d
knet_seek	lib/klib/knetfile.c	/^off_t knet_seek(knetFile *fp, int64_t off, int whence)$/;"	f
knet_seek	lib/klib/kurl.h	50;"	d
knet_tell	lib/klib/knetfile.h	39;"	d
knet_tell	lib/klib/kurl.h	51;"	d
knet_win32_destroy	lib/klib/knetfile.c	/^void knet_win32_destroy()$/;"	f
knet_win32_destroy	lib/klib/kurl.h	54;"	d
knet_win32_init	lib/klib/knetfile.c	/^int knet_win32_init()$/;"	f
knet_win32_init	lib/klib/kurl.h	53;"	d
knhx1_t	lib/klib/knhx.h	/^} knhx1_t;$/;"	t	typeref:struct:__anon33
ko_longopt_t	lib/klib/ketopt.h	/^} ko_longopt_t;$/;"	t	typeref:struct:__anon30
ko_no_argument	lib/klib/ketopt.h	6;"	d
ko_optional_argument	lib/klib/ketopt.h	8;"	d
ko_required_argument	lib/klib/ketopt.h	7;"	d
koaux_t	lib/klib/kopen.c	/^} koaux_t;$/;"	t	typeref:struct:__anon35	file:
kopen	lib/klib/kopen.c	/^void *kopen(const char *fn, int *_fd)$/;"	f
kputc	lib/klib/knhx.c	/^static inline int kputc(int c, kstring_t *s)$/;"	f	file:
kputc	lib/klib/kstring.h	/^static inline int kputc(int c, kstring_t *s)$/;"	f
kputc_	lib/klib/kstring.h	/^static inline int kputc_(int c, kstring_t *s)$/;"	f
kputl	lib/klib/kstring.h	/^static inline int kputl(long c, kstring_t *s)$/;"	f
kputs	lib/klib/kstring.h	/^static inline int kputs(const char *p, kstring_t *s)$/;"	f
kputsn	lib/klib/knhx.c	/^static inline int kputsn(const char *p, int l, kstring_t *s)$/;"	f	file:
kputsn	lib/klib/kstring.h	/^static inline int kputsn(const char *p, int l, kstring_t *s)$/;"	f
kputsn	lib/klib/kurl.c	/^static inline int kputsn(const char *p, int l, kstring_t *s)$/;"	f	file:
kputsn_	lib/klib/kstring.h	/^static inline int kputsn_(const void *p, int l, kstring_t *s)$/;"	f
kputuw	lib/klib/kstring.h	/^static inline int kputuw(unsigned c, kstring_t *s)$/;"	f
kputw	lib/klib/kstring.h	/^static inline int kputw(int c, kstring_t *s)$/;"	f
kr_drand_r	lib/klib/krng.h	/^static inline double kr_drand_r(krng_t *r)$/;"	f
kr_jump_r	lib/klib/krng.h	/^static inline void kr_jump_r(krng_t *r)$/;"	f
kr_rand_r	lib/klib/krng.h	/^static inline uint64_t kr_rand_r(krng_t *r)$/;"	f
kr_splitmix64	lib/klib/krng.h	/^static inline uint64_t kr_splitmix64(uint64_t x)$/;"	f
kr_srand_r	lib/klib/krng.h	/^static inline void kr_srand_r(krng_t *r, uint64_t seed)$/;"	f
krealloc	lib/klib/kalloc.c	/^void *krealloc(void *_km, void *ap, size_t n_bytes) \/\/ TODO: this can be made more efficient in principle$/;"	f
krealloc	lib/klib/khash.h	186;"	d
krealloc	lib/klib/khashl.h	82;"	d
krf_brent	lib/klib/kmath.c	/^double krf_brent(double x1, double x2, double tol, double (*func)(double, void*), void *data, int *err)$/;"	f
krmq_at	lib/klib/krmq.h	461;"	d
krmq_erase	lib/klib/krmq.h	417;"	d
krmq_erase_first	lib/klib/krmq.h	418;"	d
krmq_find	lib/klib/krmq.h	404;"	d
krmq_free	lib/klib/krmq.h	329;"	d
krmq_insert	lib/klib/krmq.h	392;"	d
krmq_interval	lib/klib/krmq.h	405;"	d
krmq_itr_find	lib/klib/krmq.h	442;"	d
krmq_itr_first	lib/klib/krmq.h	429;"	d
krmq_itr_next	lib/klib/krmq.h	451;"	d
krmq_itr_prev	lib/klib/krmq.h	452;"	d
krmq_itr_t	lib/klib/krmq.h	420;"	d
krmq_rmq	lib/klib/krmq.h	406;"	d
krmq_size	lib/klib/krmq.h	71;"	d
krmq_size_child	lib/klib/krmq.h	72;"	d
krng_t	lib/klib/krng.h	/^} krng_t;$/;"	t	typeref:struct:__anon8
kroundup32	lib/klib/bgzf.c	522;"	d	file:
kroundup32	lib/klib/cpp/khash.hpp	14;"	d
kroundup32	lib/klib/kbit.h	23;"	d
kroundup32	lib/klib/khash.h	176;"	d
kroundup32	lib/klib/knhx.c	95;"	d	file:
kroundup32	lib/klib/kseq.h	90;"	d
kroundup32	lib/klib/kson.c	197;"	d	file:
kroundup32	lib/klib/kstring.h	36;"	d
kroundup32	lib/klib/kurl.c	22;"	d	file:
ksBM_prep	lib/klib/kstring.c	/^static int *ksBM_prep(const ubyte_t *pat, int m)$/;"	f	file:
ks_combsort	lib/klib/ksort.h	283;"	d
ks_eof	lib/klib/kseq.h	48;"	d
ks_err	lib/klib/kseq.h	47;"	d
ks_heapadjust	lib/klib/ksort.h	286;"	d
ks_heapmake	lib/klib/ksort.h	285;"	d
ks_heapsort	lib/klib/ksort.h	284;"	d
ks_introsort	lib/klib/ksort.h	282;"	d
ks_isort_stack_t	lib/klib/ksort.h	/^} ks_isort_stack_t;$/;"	t	typeref:struct:__anon32
ks_ksmall	lib/klib/ksort.h	287;"	d
ks_len	lib/klib/kstring.h	/^static inline size_t ks_len(kstring_t *s)$/;"	f
ks_lt_generic	lib/klib/ksort.h	290;"	d
ks_lt_str	lib/klib/ksort.h	291;"	d
ks_mergesort	lib/klib/ksort.h	281;"	d
ks_release	lib/klib/kstring.h	/^static inline char *ks_release(kstring_t *s)$/;"	f
ks_resize	lib/klib/kstring.h	/^static inline int ks_resize(kstring_t *s, size_t size)$/;"	f
ks_rewind	lib/klib/kseq.h	49;"	d
ks_shuffle	lib/klib/ksort.h	288;"	d
ks_str	lib/klib/kstring.h	/^static inline char *ks_str(kstring_t *s)$/;"	f
ks_tokaux_t	lib/klib/kstring.h	/^} ks_tokaux_t;$/;"	t	typeref:struct:__anon19
kseq_rewind	lib/klib/kseq.h	154;"	d
kson_by_index	lib/klib/kson.h	/^static inline const kson_node_t *kson_by_index(const kson_node_t *p, long i)$/;"	f
kson_by_key	lib/klib/kson.h	/^static inline const kson_node_t *kson_by_key(const kson_node_t *p, const char *key)$/;"	f
kson_by_path	lib/klib/kson.c	/^const kson_node_t *kson_by_path(const kson_node_t *p, int depth, ...)$/;"	f
kson_destroy	lib/klib/kson.c	/^void kson_destroy(kson_t *kson)$/;"	f
kson_format	lib/klib/kson.c	/^void kson_format(const kson_node_t *root)$/;"	f
kson_format_recur	lib/klib/kson.c	/^void kson_format_recur(const kson_node_t *p, int depth)$/;"	f
kson_is_internal	lib/klib/kson.h	44;"	d
kson_node_s	lib/klib/kson.h	/^typedef struct kson_node_s {$/;"	s
kson_node_t	lib/klib/kson.h	/^} kson_node_t;$/;"	t	typeref:struct:kson_node_s
kson_parse	lib/klib/kson.c	/^kson_t *kson_parse(const char *json)$/;"	f
kson_parse_core	lib/klib/kson.c	/^kson_node_t *kson_parse_core(const char *json, long *_n, int *error, long *parsed_len)$/;"	f
kson_t	lib/klib/kson.h	/^} kson_t;$/;"	t	typeref:struct:__anon10
ksplit	lib/klib/kstring.h	/^static inline int *ksplit(kstring_t *s, int delimiter, int *n)$/;"	f
ksplit_core	lib/klib/kstring.c	/^int ksplit_core(char *s, int delimiter, int *_max, int **_offsets)$/;"	f
ksprintf	lib/klib/kstring.c	/^int ksprintf(kstring_t *s, const char *fmt, ...)$/;"	f
ksstr_t	lib/klib/ksort.h	/^typedef const char *ksstr_t;$/;"	t
kstring_t	lib/klib/bgzf.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/knhx.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/kseq.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/kstring.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	t	typeref:struct:__anon28	file:
kstrnstr	lib/klib/kstring.c	/^char *kstrnstr(const char *str, const char *pat, int n, int **_prep)$/;"	f
kstrstr	lib/klib/kstring.c	/^char *kstrstr(const char *str, const char *pat, int **_prep)$/;"	f
kstrtok	lib/klib/kstring.c	/^char *kstrtok(const char *str, const char *sep_in, ks_tokaux_t *aux)$/;"	f
ksw_align	lib/klib/ksw.c	/^kswr_t ksw_align(int qlen, uint8_t *query, int tlen, uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int xtra, kswq_t **qry)$/;"	f
ksw_extend	lib/klib/ksw.c	/^int ksw_extend(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int w, int h0, int *_qle, int *_tle)$/;"	f
ksw_global	lib/klib/ksw.c	/^int ksw_global(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int w, int *n_cigar_, uint32_t **cigar_)$/;"	f
ksw_i16	lib/klib/ksw.c	/^kswr_t ksw_i16(kswq_t *q, int tlen, const uint8_t *target, int _gapo, int _gape, int xtra) \/\/ the first gap costs -(_o+_e)$/;"	f
ksw_qinit	lib/klib/ksw.c	/^kswq_t *ksw_qinit(int size, int qlen, const uint8_t *query, int m, const int8_t *mat)$/;"	f
ksw_u8	lib/klib/ksw.c	/^kswr_t ksw_u8(kswq_t *q, int tlen, const uint8_t *target, int _gapo, int _gape, int xtra) \/\/ the first gap costs -(_o+_e)$/;"	f
kswq_t	lib/klib/ksw.h	/^typedef struct _kswq_t kswq_t;$/;"	t	typeref:struct:_kswq_t
kswr_t	lib/klib/ksw.h	/^} kswr_t;$/;"	t	typeref:struct:__anon39
kt_for	lib/klib/kthread.c	/^void kt_for(int n_threads, void (*func)(void*,long,int), void *data, long n)$/;"	f
kt_for_t	lib/klib/kthread.c	/^typedef struct kt_for_t {$/;"	s	file:
kt_for_t	lib/klib/kthread.c	/^} kt_for_t;$/;"	t	typeref:struct:kt_for_t	file:
kt_forpool	lib/klib/kthread.c	/^void kt_forpool(void *_fp, void (*func)(void*,long,int), void *data, long n)$/;"	f
kt_forpool_destroy	lib/klib/kthread.c	/^void kt_forpool_destroy(void *_fp)$/;"	f
kt_forpool_init	lib/klib/kthread.c	/^void *kt_forpool_init(int n_threads)$/;"	f
kt_forpool_t	lib/klib/kthread.c	/^typedef struct kt_forpool_t {$/;"	s	file:
kt_forpool_t	lib/klib/kthread.c	/^} kt_forpool_t;$/;"	t	typeref:struct:kt_forpool_t	file:
kt_fp_steal_work	lib/klib/kthread.c	/^static inline long kt_fp_steal_work(kt_forpool_t *t)$/;"	f	file:
kt_fp_worker	lib/klib/kthread.c	/^static void *kt_fp_worker(void *data)$/;"	f	file:
kt_pipeline	lib/klib/kthread.c	/^void kt_pipeline(int n_threads, void *(*func)(void*, int, void*), void *shared_data, int n_steps)$/;"	f
ktf_worker	lib/klib/kthread.c	/^static void *ktf_worker(void *data)$/;"	f	file:
ktf_worker_t	lib/klib/kthread.c	/^} ktf_worker_t;$/;"	t	typeref:struct:__anon36	file:
kto_worker_t	lib/klib/kthread.c	/^} kto_worker_t;$/;"	t	typeref:struct:__anon37	file:
ktp_t	lib/klib/kthread.c	/^typedef struct ktp_t {$/;"	s	file:
ktp_t	lib/klib/kthread.c	/^} ktp_t;$/;"	t	typeref:struct:ktp_t	file:
ktp_worker	lib/klib/kthread.c	/^static void *ktp_worker(void *data)$/;"	f	file:
ktp_worker_t	lib/klib/kthread.c	/^} ktp_worker_t;$/;"	t	typeref:struct:__anon38	file:
kurl_buflen	lib/klib/kurl.c	/^int kurl_buflen(kurl_t *ku, int len)$/;"	f
kurl_close	lib/klib/kurl.c	/^int kurl_close(kurl_t *ku)$/;"	f
kurl_destroy	lib/klib/kurl.c	/^void kurl_destroy(void)$/;"	f
kurl_dopen	lib/klib/kurl.c	/^kurl_t *kurl_dopen(int fd)$/;"	f
kurl_eof	lib/klib/kurl.c	/^int kurl_eof(const kurl_t *ku)$/;"	f
kurl_error	lib/klib/kurl.c	/^int kurl_error(const kurl_t *ku)$/;"	f
kurl_fileno	lib/klib/kurl.c	/^int kurl_fileno(const kurl_t *ku)$/;"	f
kurl_init	lib/klib/kurl.c	/^int kurl_init(void) \/\/ required for SSL and win32 socket; NOT thread safe$/;"	f
kurl_isfile	lib/klib/kurl.c	19;"	d	file:
kurl_open	lib/klib/kurl.c	/^kurl_t *kurl_open(const char *url, kurl_opt_t *opt)$/;"	f
kurl_opt_t	lib/klib/kurl.h	/^} kurl_opt_t;$/;"	t	typeref:struct:__anon42
kurl_read	lib/klib/kurl.c	/^ssize_t kurl_read(kurl_t *ku, void *buf, size_t nbytes)$/;"	f
kurl_seek	lib/klib/kurl.c	/^off_t kurl_seek(kurl_t *ku, off_t offset, int whence) \/\/ FIXME: sometimes when seek() fails, read() will fail as well.$/;"	f
kurl_t	lib/klib/kurl.c	/^struct kurl_t {$/;"	s	file:
kurl_t	lib/klib/kurl.h	/^typedef struct kurl_t kurl_t;$/;"	t	typeref:struct:kurl_t
kurl_tell	lib/klib/kurl.c	/^off_t kurl_tell(const kurl_t *ku)$/;"	f
kv_A	lib/klib/kvec.h	58;"	d
kv_a	lib/klib/kvec.h	84;"	d
kv_copy	lib/klib/kvec.h	65;"	d
kv_destroy	lib/klib/kvec.h	57;"	d
kv_init	lib/klib/kvec.h	56;"	d
kv_max	lib/klib/kvec.h	61;"	d
kv_pop	lib/klib/kvec.h	59;"	d
kv_push	lib/klib/kvec.h	71;"	d
kv_pushp	lib/klib/kvec.h	79;"	d
kv_resize	lib/klib/kvec.h	63;"	d
kv_roundup32	lib/klib/kvec.h	53;"	d
kv_size	lib/klib/kvec.h	60;"	d
kvec_t	lib/klib/kvec.h	55;"	d
kvsprintf	lib/klib/kstring.c	/^int kvsprintf(kstring_t *s, const char *fmt, va_list ap)$/;"	f
l	lib/klib/bgzf.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l	lib/klib/khmm.h	/^	int l, *obs;$/;"	m	struct:__anon23
l	lib/klib/knhx.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l	lib/klib/kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l	lib/klib/kstring.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	m	struct:__anon28	file:
l_buf	lib/klib/kurl.c	/^	int l_buf;    \/\/ length of the buffer; l_buf == 0 iff the input read entirely; l_buf <= m_buf$/;"	m	struct:kurl_t	file:
label_active	lib/nuklear/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_active	lib/nuklear/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_active	lib/nuklear/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_active	lib/nuklear/src/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_active	lib/nuklear/src/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_active	lib/nuklear/src/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_hover	lib/nuklear/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_hover	lib/nuklear/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_hover	lib/nuklear/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_normal	lib/nuklear/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_normal	lib/nuklear/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_normal	lib/nuklear/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
label_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_color
label_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_color
label_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 label_padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
label_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 label_padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
largest	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon43
last	lib/nuklear/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
last	lib/nuklear/nuklear.h	/^    nk_size last;$/;"	m	struct:nk_popup_buffer
last	lib/nuklear/nuklear.h	/^    struct nk_vec2 last;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_vec2
last	lib/nuklear/src/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer
last	lib/nuklear/src/nuklear.h	/^    nk_size last;$/;"	m	struct:nk_popup_buffer
last	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 last;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_chart_slot::nk_vec2
last_button_click	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    double last_button_click;$/;"	m	struct:nk_glfw
last_button_click	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    double last_button_click;$/;"	m	struct:nk_glfw
last_button_click	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    double last_button_click;$/;"	m	struct:nk_glfw
last_button_click	lib/nuklear/demo/x11/nuklear_xlib.h	/^    long last_button_click;$/;"	m	struct:__anon191
last_button_click	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    long last_button_click;$/;"	m	struct:nk_x11
last_button_click	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    long last_button_click;$/;"	m	struct:nk_x11
last_button_click	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    long last_button_click;$/;"	m	struct:__anon190
last_widget_state	lib/nuklear/nuklear.h	/^    nk_flags last_widget_state;$/;"	m	struct:nk_context
last_widget_state	lib/nuklear/src/nuklear.h	/^    nk_flags last_widget_state;$/;"	m	struct:nk_context
layout	lib/nuklear/nuklear.h	/^    struct nk_panel *layout;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_panel
layout	lib/nuklear/src/nuklear.h	/^    struct nk_panel *layout;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_panel
left	lib/klib/ksort.h	/^	void *left, *right;$/;"	m	struct:__anon32
left	lib/nuklear/nuklear.h	/^    struct nk_color left;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
left	lib/nuklear/src/nuklear.h	/^    struct nk_color left;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
len	lib/nuklear/nuklear.h	/^    int len; \/* in codepoints\/runes\/glyphs *\/$/;"	m	struct:nk_str
len	lib/nuklear/src/nuklear.h	/^    int len; \/* in codepoints\/runes\/glyphs *\/$/;"	m	struct:nk_str
length	lib/cimgui/imgui/imstb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anon111
length	lib/nuklear/example/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anon154
length	lib/nuklear/nuklear.h	/^    int length;$/;"	m	struct:nk_command_text
length	lib/nuklear/nuklear.h	/^    int length;$/;"	m	struct:nk_property_state
length	lib/nuklear/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find
length	lib/nuklear/src/nuklear.h	/^    int length;$/;"	m	struct:nk_command_text
length	lib/nuklear/src/nuklear.h	/^    int length;$/;"	m	struct:nk_property_state
length	lib/nuklear/src/nuklear_text_editor.c	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	file:
lflags	lib/nuklear/example/stb_image.h	/^   int lflags;$/;"	m	struct:__anon159
libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static HMODULE libgl;$/;"	v	file:
libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void *libgl;$/;"	v	file:
libgl	lib/gl3w/GL/gl3w.c	/^static HMODULE libgl;$/;"	v	file:
libgl	lib/gl3w/GL/gl3w.c	/^static void *libgl;$/;"	v	file:
line0	lib/nuklear/example/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon151
line1	lib/nuklear/example/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anon151
line_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing line_AA; \/* line anti-aliasing flag can be turned off if you are tight on memory *\/$/;"	m	struct:nk_convert_config	typeref:enum:nk_convert_config::nk_anti_aliasing
line_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing line_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_draw_list::nk_anti_aliasing
line_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing line_AA; \/* line anti-aliasing flag can be turned off if you are tight on memory *\/$/;"	m	struct:nk_convert_config	typeref:enum:nk_convert_config::nk_anti_aliasing
line_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing line_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_draw_list::nk_anti_aliasing
line_in_function 	lib/cimgui/generator/generator_old.lua	/^                line_in_function = lineorig$/;"	f
line_size	lib/nuklear/example/stb_image.h	/^   int line_size;$/;"	m	struct:__anon159
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_arc
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_circle
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_curve
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_line
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polygon
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polyline
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_rect
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_triangle
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_arc
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_circle
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_curve
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_line
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polygon
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polyline
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_rect
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_triangle
linebuf	lib/nuklear/example/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anon149::__anon150
lines	lib/klib/test/kthread_test2.c	/^	char **lines;$/;"	m	struct:__anon15	file:
link_count	lib/nuklear/demo/node_editor.c	/^    int link_count;$/;"	m	struct:node_editor	file:
linking	lib/nuklear/demo/node_editor.c	/^    struct node_linking linking;$/;"	m	struct:node_editor	typeref:struct:node_editor::node_linking	file:
links	lib/nuklear/demo/node_editor.c	/^    struct node_link links[64];$/;"	m	struct:node_editor	typeref:struct:node_editor::node_link	file:
load_block_from_cache	lib/klib/bgzf.c	/^static int load_block_from_cache(BGZF *fp, int64_t block_address) {return 0;}$/;"	f	file:
load_block_from_cache	lib/klib/bgzf.c	/^static int load_block_from_cache(BGZF *fp, int64_t block_address)$/;"	f	file:
load_file	src/shader.c	/^load_file($/;"	f	file:
load_jpeg_image	lib/nuklear/example/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f
load_procs	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void load_procs(void)$/;"	f	file:
load_procs	lib/gl3w/GL/gl3w.c	/^static void load_procs(void)$/;"	f	file:
loca	lib/cimgui/imgui/imstb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo
loca	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo
loca	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	file:
local func 	lib/cimgui/generator/generator_old.lua	/^        local func = line:match(function_re)$/;"	f
local function_closed_re 	lib/cimgui/generator/generator_old.lua	/^    local function_closed_re = "[;}]$"$/;"	f
local function_closed_re 	lib/cimgui/generator/generator_old.lua	/^    local function_closed_re = "[;}]%s*$"$/;"	f
local function_closing_re 	lib/cimgui/generator/generator_old.lua	/^    local function_closing_re = "}"$/;"	f
local function_re 	lib/cimgui/generator/generator_old.lua	/^    local function_re = "(%a*%w+%s*%b())" --"(%a*%w+%b())" --"(%a*%w+%s+%w+%b())"$/;"	f
local function_re 	lib/cimgui/generator/generator_old.lua	/^    local function_re = "(%a*[%w%[%]]+%s*%b())"$/;"	f
local in_function 	lib/cimgui/generator/generator_old.lua	/^    local in_function = false$/;"	f
local in_functionst 	lib/cimgui/generator/generator_old.lua	/^    local in_functionst = false$/;"	f
local resN 	lib/cimgui/generator/cpp2ffi.lua	/^	local resN = {"functypedef_re","functype_re","function_re","functionD_re","struct_re","enum_re","union_re","namespace_re","class_re","typedef_re","vardef_re"}$/;"	f
location	lib/cimgui/generator/cpp2ffi.lua	/^local function location(file,locpathT,defines,COMPILER)$/;"	f
location	lib/cimgui/generator/generator_old.lua	/^local function location(file,locpathT)$/;"	f
location_it	lib/cimgui/generator/cpp2ffi.lua	/^    local function location_it()$/;"	f
location_it	lib/cimgui/generator/generator.lua	/^    local function location_it()$/;"	f
location_it	lib/cimgui/generator/generator_old.lua	/^    local function location_it()$/;"	f
longidx	lib/klib/ketopt.h	/^	int longidx; \/* index of a long option; or -1 if short *\/$/;"	m	struct:__anon29
loop_head	lib/klib/kalloc.c	/^	header_t base, *loop_head, *core_head; \/* base is a zero-sized block always kept in the loop *\/$/;"	m	struct:__anon18	file:
lpal	lib/nuklear/example/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anon159
m	lib/klib/bgzf.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	lib/klib/khmm.h	/^	int m, n; \/\/ number of symbols, number of states$/;"	m	struct:__anon20
m	lib/klib/khmm.h	/^	int m, n;$/;"	m	struct:__anon22
m	lib/klib/knhx.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	lib/klib/kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	lib/klib/kstring.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
m	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	m	struct:__anon28	file:
m	src/obj.h	/^    mat4x4 m;$/;"	m	struct:obj_t
m_buf	lib/klib/kurl.c	/^	int m_buf;    \/\/ max buffer size; for a remote file, CURL_MAX_WRITE_SIZE*2 is recommended$/;"	m	struct:kurl_t	file:
m_clientHeight	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_clientHeight;									\/* Height of screen *\/$/;"	m	struct:__anon104
m_clientName	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	const char*						m_clientName;									\/* Name of Synergy Screen \/ Client *\/$/;"	m	struct:__anon104
m_clientWidth	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_clientWidth;									\/* Width of screen *\/$/;"	m	struct:__anon104
m_clipboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyClipboardCallback		m_clipboardCallback;							\/* Callback for clipboard events *\/$/;"	m	struct:__anon104
m_connectFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyConnectFunc				m_connectFunc;									\/* Connect function *\/$/;"	m	struct:__anon104
m_connected	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_connected;									\/* Is our socket connected? *\/$/;"	m	struct:__anon104
m_cookie	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyCookie					m_cookie;										\/* Cookie pointer passed to callback functions (can be NULL) *\/$/;"	m	struct:__anon104
m_getTimeFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyGetTimeFunc				m_getTimeFunc;									\/* Get current time function *\/$/;"	m	struct:__anon104
m_hasReceivedHello	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_hasReceivedHello;								\/* Have we received a 'Hello' from the server? *\/$/;"	m	struct:__anon104
m_isCaptured	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_isCaptured;									\/* Is Synergy active (i.e. this client is receiving input messages?) *\/$/;"	m	struct:__anon104
m_joystickButtons	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_joystickButtons[USYNERGY_NUM_JOYSTICKS];		\/* Joystick button state *\/$/;"	m	struct:__anon104
m_joystickCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyJoystickCallback		m_joystickCallback;								\/* Callback for joystick events *\/$/;"	m	struct:__anon104
m_joystickSticks	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int8_t							m_joystickSticks[USYNERGY_NUM_JOYSTICKS][4];	\/* Joystick stick position in 2 axes for 2 sticks *\/$/;"	m	struct:__anon104
m_keyboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyKeyboardCallback		m_keyboardCallback;								\/* Callback for keyboard events *\/$/;"	m	struct:__anon104
m_lastMessageTime	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint32_t						m_lastMessageTime;								\/* Time at which last message was received *\/$/;"	m	struct:__anon104
m_mouseButtonLeft	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_mouseButtonLeft;								\/* Mouse left button *\/$/;"	m	struct:__anon104
m_mouseButtonMiddle	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_mouseButtonMiddle;							\/* Mouse middle button *\/$/;"	m	struct:__anon104
m_mouseButtonRight	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_mouseButtonRight;								\/* Mouse right button *\/$/;"	m	struct:__anon104
m_mouseCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyMouseCallback			m_mouseCallback;								\/* Callback for mouse events *\/$/;"	m	struct:__anon104
m_mouseWheelX	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int16_t							m_mouseWheelX;									\/* Mouse wheel X position *\/$/;"	m	struct:__anon104
m_mouseWheelY	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int16_t							m_mouseWheelY;									\/* Mouse wheel Y position *\/$/;"	m	struct:__anon104
m_mouseX	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_mouseX;										\/* Mouse X position *\/$/;"	m	struct:__anon104
m_mouseY	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_mouseY;										\/* Mouse Y position *\/$/;"	m	struct:__anon104
m_receiveBuffer	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint8_t							m_receiveBuffer[USYNERGY_RECEIVE_BUFFER_SIZE];	\/* Receive buffer *\/$/;"	m	struct:__anon104
m_receiveFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyReceiveFunc				m_receiveFunc;									\/* Receive data function *\/$/;"	m	struct:__anon104
m_receiveOfs	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int								m_receiveOfs;									\/* Receive buffer offset *\/$/;"	m	struct:__anon104
m_replyBuffer	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint8_t							m_replyBuffer[USYNERGY_REPLY_BUFFER_SIZE];		\/* Reply buffer *\/$/;"	m	struct:__anon104
m_replyCur	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint8_t*						m_replyCur;										\/* Write offset into reply buffer *\/$/;"	m	struct:__anon104
m_screenActiveCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyScreenActiveCallback	m_screenActiveCallback;							\/* Callback for entering and leaving screen *\/$/;"	m	struct:__anon104
m_sendFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergySendFunc				m_sendFunc;										\/* Send data function *\/$/;"	m	struct:__anon104
m_sequenceNumber	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint32_t						m_sequenceNumber;								\/* Packet sequence number *\/$/;"	m	struct:__anon104
m_sleepFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergySleepFunc				m_sleepFunc;									\/* Thread sleep function *\/$/;"	m	struct:__anon104
m_traceFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyTraceFunc				m_traceFunc;									\/* Function for tracing status (can be NULL) *\/$/;"	m	struct:__anon104
macro	lib/nuklear/src/build.py	/^        macro = sys.argv[cur_arg]$/;"	v
macro	lib/nuklear/src/build.py	/^macro = ""$/;"	v
main	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	lib/cimgui/imgui/examples/example_allegro5/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_emscripten/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_glfw_opengl2/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_glfw_opengl3/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_glfw_vulkan/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_glut_opengl2/main.cpp	/^int main(int argc, char** argv)$/;"	f
main	lib/cimgui/imgui/examples/example_marmalade/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_null/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_sdl_directx11/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_sdl_opengl2/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_sdl_opengl3/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_sdl_vulkan/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_win32_directx10/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_win32_directx11/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_win32_directx12/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/examples/example_win32_directx9/main.cpp	/^int main(int, char**)$/;"	f
main	lib/cimgui/imgui/imstb_truetype.h	/^int main(int argc, char **argv)$/;"	f
main	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^int main(int argc, char** argv)$/;"	f
main	lib/cimgui/test/main.c	/^int main(void)$/;"	f
main	lib/klib/kexpr.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/kmath.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/knetfile.c	/^int main(void)$/;"	f
main	lib/klib/knhx.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/kopen.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/kson.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/kstring.c	/^int main()$/;"	f
main	lib/klib/ksw.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/kurl.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/kavl_test.c	/^int main(void)$/;"	f
main	lib/klib/test/kbit_test.c	/^int main(void)$/;"	f
main	lib/klib/test/kbtree_test.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/ketopt_test.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/kgraph_test.c	/^int main()$/;"	f
main	lib/klib/test/khash_keith.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/khash_keith2.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/khash_test.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/klist_test.c	/^int main()$/;"	f
main	lib/klib/test/kmin_test.c	/^int main()$/;"	f
main	lib/klib/test/krmq_test.c	/^int main(void)$/;"	f
main	lib/klib/test/kseq_bench2.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/ksort_test.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/ksort_test.cc	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/kstring_bench.c	/^int main()$/;"	f
main	lib/klib/test/kstring_bench2.c	/^int main()$/;"	f
main	lib/klib/test/kstring_test.c	/^int main(int argc, char **argv)$/;"	f
main	lib/klib/test/kthread_test.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/kthread_test2.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/klib/test/kvec_test.cc	/^int main()$/;"	f
main	lib/nuklear/demo/allegro5/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/d3d11/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/d3d9/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/gdi/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/gdip/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/glfw_opengl2/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/glfw_opengl3/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/glfw_opengl4/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/sdl_opengl2/main.c	/^main(void)$/;"	f
main	lib/nuklear/demo/sdl_opengl3/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/sdl_opengles2/main.c	/^int main(int argc, char* argv[])$/;"	f
main	lib/nuklear/demo/sfml_opengl2/main.cpp	/^int main(void)$/;"	f
main	lib/nuklear/demo/sfml_opengl3/main.cpp	/^int main(void)$/;"	f
main	lib/nuklear/demo/x11/main.c	/^main(void)$/;"	f
main	lib/nuklear/demo/x11_opengl2/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/x11_opengl3/main.c	/^int main(void)$/;"	f
main	lib/nuklear/demo/x11_rawfb/main.c	/^main(void)$/;"	f
main	lib/nuklear/demo/x11_xft/main.c	/^main(void)$/;"	f
main	lib/nuklear/doc/stddoc.c	/^int main() {$/;"	f
main	lib/nuklear/example/canvas.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/nuklear/example/extended.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/nuklear/example/file_browser.c	/^int main(int argc, char *argv[])$/;"	f
main	lib/nuklear/example/skinning.c	/^int main(int argc, char *argv[])$/;"	f
main	src/data.c	/^int main() {$/;"	f
main	src/main.c	/^int main(int argc, char** argv) {$/;"	f
main_clipboard	lib/cimgui/imgui/imgui.cpp	/^static PasteboardRef main_clipboard = 0;$/;"	v	file:
main_loop	lib/cimgui/imgui/examples/example_emscripten/main.cpp	/^void main_loop(void* arg)$/;"	f
major	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon102	file:
major	lib/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon44	file:
major_version	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int major_version;$/;"	m	struct:opengl_info
map_buffer_range_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int map_buffer_range_available;$/;"	m	struct:opengl_info
marker	lib/nuklear/example/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anon149
marker	lib/nuklear/nuklear.h	/^    struct nk_buffer_marker marker[NK_BUFFER_MAX];$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_buffer_marker
marker	lib/nuklear/src/nuklear.h	/^    struct nk_buffer_marker marker[NK_BUFFER_MAX];$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_buffer_marker
mat4x4	lib/linmath/linmath.h	/^typedef vec4 mat4x4[4];$/;"	t	typeref:typename:vec4[4]
mat4x4_add	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_add(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,mat4x4 a,mat4x4 b)
mat4x4_arcball	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_arcball(mat4x4 R, mat4x4 M, vec2 _a, vec2 _b, float s)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 R,mat4x4 M,vec2 _a,vec2 _b,float s)
mat4x4_col	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_col(vec4 r, mat4x4 M, int i)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,mat4x4 M,int i)
mat4x4_dup	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_dup(mat4x4 M, mat4x4 N)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,mat4x4 N)
mat4x4_from_quat	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_from_quat(mat4x4 M, quat q)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,quat q)
mat4x4_from_vec3_mul_outer	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_from_vec3_mul_outer(mat4x4 M, vec3 a, vec3 b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,vec3 a,vec3 b)
mat4x4_frustum	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_frustum(mat4x4 M, float l, float r, float b, float t, float n, float /;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,float l,float r,float b,float t,float n,float f)
mat4x4_identity	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_identity(mat4x4 M)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M)
mat4x4_invert	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_invert(mat4x4 T, mat4x4 M)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 T,mat4x4 M)
mat4x4_look_at	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_look_at(mat4x4 m, vec3 eye, vec3 center, vec3 up)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 m,vec3 eye,vec3 center,vec3 up)
mat4x4_mul	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_mul(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,mat4x4 a,mat4x4 b)
mat4x4_mul_vec4	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_mul_vec4(vec4 r, mat4x4 M, vec4 v)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,mat4x4 M,vec4 v)
mat4x4_ortho	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_ortho(mat4x4 M, float l, float r, float b, float t, float n, float f)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,float l,float r,float b,float t,float n,float f)
mat4x4_orthonormalize	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_orthonormalize(mat4x4 R, mat4x4 M)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 R,mat4x4 M)
mat4x4_perspective	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_perspective(mat4x4 m, float y_fov, float aspect, float n, float f)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 m,float y_fov,float aspect,float n,float f)
mat4x4_rotate	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_rotate(mat4x4 R, mat4x4 M, float x, float y, float z, float angle)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 R,mat4x4 M,float x,float y,float z,float angle)
mat4x4_rotate_X	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_rotate_X(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 Q,mat4x4 M,float angle)
mat4x4_rotate_Y	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_rotate_Y(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 Q,mat4x4 M,float angle)
mat4x4_rotate_Z	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_rotate_Z(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 Q,mat4x4 M,float angle)
mat4x4_row	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_row(vec4 r, mat4x4 M, int i)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,mat4x4 M,int i)
mat4x4_scale	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_scale(mat4x4 M, mat4x4 a, float k)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,mat4x4 a,float k)
mat4x4_scale_aniso	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_scale_aniso(mat4x4 M, mat4x4 a, float x, float y, float z)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,mat4x4 a,float x,float y,float z)
mat4x4_sub	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_sub(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,mat4x4 a,mat4x4 b)
mat4x4_translate	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_translate(mat4x4 T, float x, float y, float z)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 T,float x,float y,float z)
mat4x4_translate_in_place	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_translate_in_place(mat4x4 M, float x, float y, float z)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,float x,float y,float z)
mat4x4_transpose	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4_transpose(mat4x4 M, mat4x4 N)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 M,mat4x4 N)
mat4x4o_mul_quat	lib/linmath/linmath.h	/^LINMATH_H_FUNC void mat4x4o_mul_quat(mat4x4 R, mat4x4 M, quat q)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(mat4x4 R,mat4x4 M,quat q)
math.bernstein_poly	lib/klib/lua/klib.lua	/^function math.bernstein_poly(beta)$/;"	f
math.erfc	lib/klib/lua/klib.lua	/^function math.erfc(x)$/;"	f
math.fisher_exact	lib/klib/lua/klib.lua	/^function math.fisher_exact(n11, n12, n21, n22)$/;"	f
math.fmin	lib/klib/lua/klib.lua	/^function math.fmin(func, x, data, r, eps, max_calls)$/;"	f
math.igamma	lib/klib/lua/klib.lua	/^function math.igamma(s, z, complement)$/;"	f
math.jackknife	lib/klib/lua/klib.lua	/^function math.jackknife(g, m, t, t0)$/;"	f
math.lbinom	lib/klib/lua/klib.lua	/^function math.lbinom(n, m)$/;"	f
math.lgamma	lib/klib/lua/klib.lua	/^function math.lgamma(z)$/;"	f
math.pearson	lib/klib/lua/klib.lua	/^function math.pearson(a)$/;"	f
math.spearman	lib/klib/lua/klib.lua	/^function math.spearman(a)$/;"	f
matrix.T	lib/klib/lua/klib.lua	/^function matrix.T(a)$/;"	f
matrix.add	lib/klib/lua/klib.lua	/^function matrix.add(a, b)$/;"	f
matrix.chi2	lib/klib/lua/klib.lua	/^function matrix.chi2(a)$/;"	f
matrix.mul	lib/klib/lua/klib.lua	/^function matrix.mul(a, b)$/;"	f
matrix.solve	lib/klib/lua/klib.lua	/^function matrix.solve(a, b)$/;"	f
matrix.tostring	lib/klib/lua/klib.lua	/^function matrix.tostring(a)$/;"	f
max	lib/klib/knhx.c	/^	int error, n, max;$/;"	m	struct:__anon41	file:
max	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
max	lib/nuklear/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
max	lib/nuklear/src/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
max	src/data.h	/^    float* max;           \/\/ max of col$/;"	m	struct:__anon1
max	src/shader.h	/^	GLuint max; \/\/ max in value$/;"	m	struct:__anon2
max_element_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int max_element_buffer;$/;"	m	struct:nk_glfw_device
max_id	src/data.h	/^    unsigned int* max_id; \/\/ max row$/;"	m	struct:__anon1
max_index_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    unsigned int max_index_buffer;$/;"	m	struct:__anon174
max_iter	lib/klib/test/kthread_test.c	/^	int max_iter, w, h;$/;"	m	struct:__anon17	file:
max_lines	lib/klib/test/kthread_test2.c	/^	int max_lines, buf_size, n_threads;$/;"	m	struct:__anon14	file:
max_response	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s
max_response	lib/klib/kopen.c	/^	int max_response, ctrl_fd;$/;"	m	struct:__anon34	file:
max_value	lib/nuklear/nuklear.h	/^    union nk_property max_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
max_value	lib/nuklear/src/nuklear_internal.h	/^    union nk_property max_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
max_vertex_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    unsigned int max_vertex_buffer;$/;"	m	struct:__anon174
max_vertex_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int max_vertex_buffer;$/;"	m	struct:nk_glfw_device
max_x	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon127
max_x	lib/nuklear/example/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon159
max_x	lib/nuklear/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
max_x	lib/nuklear/src/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel
max_y	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon127
max_y	lib/nuklear/example/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anon159
maxcode	lib/nuklear/example/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anon152
maxcode	lib/nuklear/example/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anon148
maximize_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type maximize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
maximize_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type maximize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
mdiff	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
media	lib/nuklear/example/extended.c	/^struct media {$/;"	s	file:
media	lib/nuklear/example/file_browser.c	/^    struct media *media;$/;"	m	struct:file_browser	typeref:struct:file_browser::media	file:
media	lib/nuklear/example/file_browser.c	/^struct media {$/;"	s	file:
media	lib/nuklear/example/skinning.c	/^struct media {$/;"	s	file:
media_icon_for_file	lib/nuklear/example/file_browser.c	/^media_icon_for_file(struct media *media, const char *file)$/;"	f	file:
media_init	lib/nuklear/example/file_browser.c	/^media_init(struct media *media)$/;"	f	file:
medianOf3	lib/klib/test/ksort_test.cc	/^static int medianOf3 (int * numbers, int i, int j) {$/;"	f	file:
mem_gets	lib/klib/test/kstring_test.c	/^static char *mem_gets(char *buf, int buflen, void *vtextp)$/;"	f	file:
memory	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpGraphics *memory;$/;"	m	struct:__anon189
memory	lib/nuklear/nuklear.h	/^    struct nk_buffer memory;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_buffer
memory	lib/nuklear/nuklear.h	/^    struct nk_memory memory;$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_memory
memory	lib/nuklear/nuklear.h	/^    void *memory;$/;"	m	struct:nk_memory_status
memory	lib/nuklear/src/nuklear.h	/^    struct nk_buffer memory;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_buffer
memory	lib/nuklear/src/nuklear.h	/^    struct nk_memory memory;$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_memory
memory	lib/nuklear/src/nuklear.h	/^    void *memory;$/;"	m	struct:nk_memory_status
memory_dc	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HDC memory_dc;$/;"	m	struct:__anon176
menu	lib/nuklear/example/extended.c	/^    struct nk_image menu[6];$/;"	m	struct:media	typeref:struct:media::nk_image	file:
menu	lib/nuklear/example/skinning.c	/^    struct nk_image menu;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
menu	lib/nuklear/nuklear.h	/^    struct nk_menu_state menu;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_menu_state
menu	lib/nuklear/src/nuklear.h	/^    struct nk_menu_state menu;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_menu_state
menu_border	lib/nuklear/nuklear.h	/^    float menu_border;$/;"	m	struct:nk_style_window
menu_border	lib/nuklear/src/nuklear.h	/^    float menu_border;$/;"	m	struct:nk_style_window
menu_border_color	lib/nuklear/nuklear.h	/^    struct nk_color menu_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
menu_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color menu_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
menu_button	lib/nuklear/nuklear.h	/^    struct nk_style_button menu_button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
menu_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button menu_button;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_button
menu_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 menu_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
menu_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 menu_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
mergeSort	lib/klib/test/ksort_test.cc	/^void mergeSort (int numbers[], int qty) {$/;"	f
mergeT	lib/cimgui/generator/generator_old.lua	/^function mergeT(t1,t2)$/;"	f
merge_mode	lib/nuklear/nuklear.h	/^    unsigned char merge_mode;$/;"	m	struct:nk_font_config
merge_mode	lib/nuklear/src/nuklear.h	/^    unsigned char merge_mode;$/;"	m	struct:nk_font_config
mergesortExchange	lib/klib/test/ksort_test.cc	/^static void mergesortExchange (int * numbers, int * altNumbers, int qty) {$/;"	f	file:
mergesortInPlace	lib/klib/test/ksort_test.cc	/^static void mergesortInPlace (int * numbers, int * altNumbers, int qty) {$/;"	f	file:
min	lib/nuklear/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
min	lib/nuklear/src/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
min	src/data.h	/^    float* min;           \/\/ min of col$/;"	m	struct:__anon1
min	src/shader.h	/^	GLuint min; \/\/ min in value $/;"	m	struct:__anon2
min_height	lib/nuklear/nuklear.h	/^    float min_height;$/;"	m	struct:nk_row_layout
min_height	lib/nuklear/src/nuklear.h	/^    float min_height;$/;"	m	struct:nk_row_layout
min_id	src/data.h	/^    unsigned int* min_id; \/\/ min row$/;"	m	struct:__anon1
min_row_height_padding	lib/nuklear/nuklear.h	/^    float min_row_height_padding;$/;"	m	struct:nk_style_window
min_row_height_padding	lib/nuklear/src/nuklear.h	/^    float min_row_height_padding;$/;"	m	struct:nk_style_window
min_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 min_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
min_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 min_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
min_value	lib/nuklear/nuklear.h	/^    union nk_property min_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
min_value	lib/nuklear/src/nuklear_internal.h	/^    union nk_property min_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
min_x	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon127
min_y	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anon127
minimize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button minimize_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_button
minimize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button minimize_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_button
minimize_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type minimize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
minimize_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type minimize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_window_header::nk_symbol_type
minor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon102	file:
minor	lib/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon44	file:
minor_version	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int minor_version;$/;"	m	struct:opengl_info
mode	lib/nuklear/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_edit_state
mode	lib/nuklear/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_text_edit
mode	lib/nuklear/src/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_edit_state
mode	lib/nuklear/src/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_text_edit
mode2level	lib/klib/bgzf.c	/^static int mode2level(const char *__restrict mode)$/;"	f	file:
morecore	lib/klib/kalloc.c	/^static header_t *morecore(kmem_t *km, size_t nu)$/;"	f	file:
mouse	lib/nuklear/nuklear.h	/^    struct nk_mouse mouse;$/;"	m	struct:nk_input	typeref:struct:nk_input::nk_mouse
mouse	lib/nuklear/src/nuklear.h	/^    struct nk_mouse mouse;$/;"	m	struct:nk_input	typeref:struct:nk_input::nk_mouse
mouse_button_callback	src/interactive.c	/^mouse_button_callback($/;"	f	file:
mouse_scroll_callback	src/interactive.c	/^mouse_scroll_callback($/;"	f	file:
mouse_x	src/interactive.h	/^int mouse_x;$/;"	v
mouse_y	src/interactive.h	/^int mouse_y;$/;"	v
movie_file	lib/nuklear/example/file_browser.c	/^    struct nk_image movie_file;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
multi	lib/klib/kurl.c	/^	CURLM *multi; \/\/ cURL multi handler$/;"	m	struct:kurl_t	file:
music_file	lib/nuklear/example/file_browser.c	/^    struct nk_image music_file;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
mutex	lib/klib/kthread.c	/^	pthread_mutex_t mutex;$/;"	m	struct:kt_forpool_t	file:
mutex	lib/klib/kthread.c	/^	pthread_mutex_t mutex;$/;"	m	struct:ktp_t	file:
mvp	lib/cimgui/imgui/examples/imgui_impl_dx10.cpp	/^    float   mvp[4][4];$/;"	m	struct:VERTEX_CONSTANT_BUFFER	file:
mvp	lib/cimgui/imgui/examples/imgui_impl_dx11.cpp	/^    float   mvp[4][4];$/;"	m	struct:VERTEX_CONSTANT_BUFFER	file:
mvp	lib/cimgui/imgui/examples/imgui_impl_dx12.cpp	/^    float   mvp[4][4];$/;"	m	struct:VERTEX_CONSTANT_BUFFER	file:
mvp	src/scene.h	/^    mat4x4 mvp;$/;"	m	struct:scene_t
mvp	src/shader.h	/^	GLuint mvp; \/\/ model view projection$/;"	m	struct:__anon2
my_cmp	lib/klib/test/kavl_test.c	14;"	d	file:
my_cmp	lib/klib/test/krmq_test.c	17;"	d	file:
my_display_code	lib/cimgui/imgui/examples/example_glut_opengl2/main.cpp	/^void my_display_code()$/;"	f
my_lt2	lib/klib/test/krmq_test.c	18;"	d	file:
my_netread	lib/klib/knetfile.c	/^static off_t my_netread(int fd, void *buf, off_t len)$/;"	f	file:
my_node	lib/klib/test/kavl_test.c	/^struct my_node {$/;"	s	file:
my_node	lib/klib/test/krmq_test.c	/^struct my_node {$/;"	s	file:
my_stbtt_initfont	lib/cimgui/imgui/imstb_truetype.h	/^void my_stbtt_initfont(void)$/;"	f
my_stbtt_print	lib/cimgui/imgui/imstb_truetype.h	/^void my_stbtt_print(float x, float y, char *text)$/;"	f
mystrndup	lib/klib/kexpr.c	/^static inline char *mystrndup(const char *src, int n)$/;"	f	file:
n	lib/klib/kbtree.h	/^	int32_t is_internal:1, n:31;$/;"	m	struct:__anon4
n	lib/klib/kexpr.c	/^	int n;$/;"	m	struct:kexpr_s	file:
n	lib/klib/khmm.h	/^	int m, n; \/\/ number of symbols, number of states$/;"	m	struct:__anon20
n	lib/klib/khmm.h	/^	int m, n;$/;"	m	struct:__anon22
n	lib/klib/knhx.c	/^	int error, n, max;$/;"	m	struct:__anon41	file:
n	lib/klib/knhx.h	/^	int parent, n;$/;"	m	struct:__anon33
n	lib/klib/kson.h	/^	unsigned long long type:3, n:61;$/;"	m	struct:kson_node_s
n	lib/klib/kthread.c	/^	long n;$/;"	m	struct:kt_for_t	file:
n	lib/klib/kthread.c	/^	long n;$/;"	m	struct:kt_forpool_t	file:
n	lib/nuklear/nuklear.h	/^    struct nk_font_config *n;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_font_config
n	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *n;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_font_config
n	src/scene.h	/^    float n,f; \/\/ near far$/;"	m	struct:scene_t
n_args	lib/klib/ketopt.h	/^	int i, pos, n_args;$/;"	m	struct:__anon29
n_args	lib/klib/kexpr.c	/^	int32_t op:8, n_args:24; \/\/ op: operator, n_args: number of arguments$/;"	m	struct:ke1_s	file:
n_blocks	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon43
n_buckets	lib/klib/cpp/khash.hpp	/^	khint_t n_buckets, count, n_occupied, upper_bound;$/;"	m	class:klib::KHash
n_buckets	lib/klib/cpp/khashl.hpp	/^	inline khint_t n_buckets() const { return used? khint_t(1) << bits : 0; }$/;"	f	class:klib::KHashSet
n_cores	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon43
n_evals	lib/klib/test/kmin_test.c	/^static int n_evals;$/;"	v	file:
n_lines	lib/klib/test/kthread_test2.c	/^	int n_lines;$/;"	m	struct:__anon15	file:
n_nodes	lib/klib/kson.h	/^	long n_nodes;$/;"	m	struct:__anon10
n_occupied	lib/klib/cpp/khash.hpp	/^	khint_t n_buckets, count, n_occupied, upper_bound;$/;"	m	class:klib::KHash
n_pending	lib/klib/kthread.c	/^	int n_threads, n_pending;$/;"	m	struct:kt_forpool_t	file:
n_steps	lib/klib/kthread.c	/^	int n_workers, n_steps;$/;"	m	struct:ktp_t	file:
n_threads	lib/klib/kthread.c	/^	int n_threads, n_pending;$/;"	m	struct:kt_forpool_t	file:
n_threads	lib/klib/kthread.c	/^	int n_threads;$/;"	m	struct:kt_for_t	file:
n_threads	lib/klib/test/kthread_test2.c	/^	int max_lines, buf_size, n_threads;$/;"	m	struct:__anon14	file:
n_workers	lib/klib/kthread.c	/^	int n_workers, n_steps;$/;"	m	struct:ktp_t	file:
name	lib/klib/ketopt.h	/^	char *name;$/;"	m	struct:__anon30
name	lib/klib/kexpr.c	/^	char *name; \/\/ variable name or function name$/;"	m	struct:ke1_s	file:
name	lib/klib/knhx.h	/^	char *name;$/;"	m	struct:__anon33
name	lib/nuklear/demo/node_editor.c	/^    char name[32];$/;"	m	struct:node	file:
name	lib/nuklear/example/file_browser.c	/^    const char *name;$/;"	m	struct:file_group	file:
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_edit_state
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_popup_state
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_property_state
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_window
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_edit_state
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_popup_state
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_property_state
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_window
name_overloadsAlgo	lib/cimgui/generator/cpp2ffi.lua	/^local function name_overloadsAlgo(v)$/;"	f
name_overloadsAlgo	lib/cimgui/generator/generator_old.lua	/^local function name_overloadsAlgo(v)$/;"	f
name_string	lib/nuklear/nuklear.h	/^    char name_string[NK_WINDOW_MAX_NAME];$/;"	m	struct:nk_window
name_string	lib/nuklear/src/nuklear.h	/^    char name_string[NK_WINDOW_MAX_NAME];$/;"	m	struct:nk_window
needed	lib/nuklear/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_buffer
needed	lib/nuklear/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_memory_status
needed	lib/nuklear/src/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_buffer
needed	lib/nuklear/src/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_memory_status
netclose	lib/klib/knetfile.h	10;"	d
netclose	lib/klib/knetfile.h	15;"	d
netread	lib/klib/knetfile.h	13;"	d
netread	lib/klib/knetfile.h	8;"	d
netwrite	lib/klib/knetfile.h	14;"	d
netwrite	lib/klib/knetfile.h	9;"	d
next	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_node  *next;$/;"	m	struct:stbrp_node
next	lib/cimgui/imgui/imstb_truetype.h	/^   struct stbtt__active_edge *next;$/;"	m	struct:stbtt__active_edge	typeref:struct:stbtt__active_edge::stbtt__active_edge
next	lib/cimgui/imgui/imstb_truetype.h	/^   struct stbtt__hheap_chunk *next;$/;"	m	struct:stbtt__hheap_chunk	typeref:struct:stbtt__hheap_chunk::stbtt__hheap_chunk
next	lib/nuklear/demo/node_editor.c	/^    struct node *next;$/;"	m	struct:node	typeref:struct:node::node	file:
next	lib/nuklear/example/extended.c	/^    struct nk_image next;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
next	lib/nuklear/nuklear.h	/^    nk_size next;$/;"	m	struct:nk_command
next	lib/nuklear/nuklear.h	/^    struct nk_font *next;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font
next	lib/nuklear/nuklear.h	/^    struct nk_font_config *next;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_font_config
next	lib/nuklear/nuklear.h	/^    struct nk_page *next;$/;"	m	struct:nk_page	typeref:struct:nk_page::nk_page
next	lib/nuklear/nuklear.h	/^    struct nk_page_element *next;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element::nk_page_element
next	lib/nuklear/nuklear.h	/^    struct nk_rp_node  *next;$/;"	m	struct:nk_rp_node	typeref:struct:nk_rp_node::nk_rp_node
next	lib/nuklear/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table::nk_table
next	lib/nuklear/nuklear.h	/^    struct nk_tt__active_edge *next;$/;"	m	struct:nk_tt__active_edge	typeref:struct:nk_tt__active_edge::nk_tt__active_edge
next	lib/nuklear/nuklear.h	/^    struct nk_tt__hheap_chunk *next;$/;"	m	struct:nk_tt__hheap_chunk	typeref:struct:nk_tt__hheap_chunk::nk_tt__hheap_chunk
next	lib/nuklear/nuklear.h	/^    struct nk_window *next;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
next	lib/nuklear/src/nuklear.h	/^    nk_size next;$/;"	m	struct:nk_command
next	lib/nuklear/src/nuklear.h	/^    struct nk_font *next;$/;"	m	struct:nk_font	typeref:struct:nk_font::nk_font
next	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *next;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_font_config
next	lib/nuklear/src/nuklear.h	/^    struct nk_page *next;$/;"	m	struct:nk_page	typeref:struct:nk_page::nk_page
next	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *next;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element::nk_page_element
next	lib/nuklear/src/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table::nk_table
next	lib/nuklear/src/nuklear.h	/^    struct nk_window *next;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
next	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node  *next;$/;"	m	struct:nk_rp_node	typeref:struct:nk_rp_node::nk_rp_node	file:
next	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt__active_edge *next;$/;"	m	struct:nk_tt__active_edge	typeref:struct:nk_tt__active_edge::nk_tt__active_edge	file:
next	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt__hheap_chunk *next;$/;"	m	struct:nk_tt__hheap_chunk	typeref:struct:nk_tt__hheap_chunk::nk_tt__hheap_chunk	file:
next_char	lib/cimgui/generator/json.lua	/^local function next_char(str, idx, set, negate)$/;"	f
next_chunk	lib/cimgui/imgui/imgui_internal.h	/^    T*      next_chunk(T* p)            { size_t HDR_SZ = 4; IM_ASSERT(p >= begin() && p < end()); p = (T*)(void*)((char*)(void*)p + chunk_size(p)); if (p == (T*)(void*)((char*)end() + HDR_SZ)) return (T*)0; IM_ASSERT(p < end()); return p; }$/;"	f	struct:ImChunkStream
nfail	lib/klib/test/kstring_test.c	/^int nfail = 0;$/;"	v
nk	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    struct nk_user_font nk;$/;"	m	struct:NkAllegro5Font	typeref:struct:NkAllegro5Font::nk_user_font
nk	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    struct nk_user_font nk;$/;"	m	struct:GdiFont	typeref:struct:GdiFont::nk_user_font
nk	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    struct nk_user_font nk;$/;"	m	struct:GdipFont	typeref:struct:GdipFont::nk_user_font
nk__barrier	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier;$/;"	v
nk__barrier	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier;$/;"	v
nk__barrier2	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier2;$/;"	v
nk__barrier2	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier2;$/;"	v
nk__barrier3	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier3;$/;"	v
nk__barrier3	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier3;$/;"	v
nk__barrier4	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier4;$/;"	v
nk__barrier4	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier4;$/;"	v
nk__begin	lib/nuklear/nuklear.h	/^nk__begin(struct nk_context *ctx)$/;"	f
nk__begin	lib/nuklear/src/nuklear_context.c	/^nk__begin(struct nk_context *ctx)$/;"	f
nk__dout	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__dout;$/;"	v
nk__dout	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__dout;$/;"	v
nk__draw_begin	lib/nuklear/nuklear.h	/^nk__draw_begin(const struct nk_context *ctx,$/;"	f
nk__draw_begin	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_begin(const struct nk_context *ctx,$/;"	f
nk__draw_end	lib/nuklear/nuklear.h	/^nk__draw_end(const struct nk_context *ctx, const struct nk_buffer *buffer)$/;"	f
nk__draw_end	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_end(const struct nk_context *ctx, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_begin	lib/nuklear/nuklear.h	/^nk__draw_list_begin(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_begin	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_list_begin(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_end	lib/nuklear/nuklear.h	/^nk__draw_list_end(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_end	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_list_end(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f
nk__draw_list_next	lib/nuklear/nuklear.h	/^nk__draw_list_next(const struct nk_draw_command *cmd,$/;"	f
nk__draw_list_next	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_list_next(const struct nk_draw_command *cmd,$/;"	f
nk__draw_next	lib/nuklear/nuklear.h	/^nk__draw_next(const struct nk_draw_command *cmd,$/;"	f
nk__draw_next	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_next(const struct nk_draw_command *cmd,$/;"	f
nk__in2	lib/nuklear/nuklear.h	13306;"	d
nk__in2	lib/nuklear/src/nuklear_font.c	2755;"	d	file:
nk__in3	lib/nuklear/nuklear.h	13307;"	d
nk__in3	lib/nuklear/src/nuklear_font.c	2756;"	d	file:
nk__in4	lib/nuklear/nuklear.h	13308;"	d
nk__in4	lib/nuklear/src/nuklear_font.c	2757;"	d	file:
nk__lit	lib/nuklear/nuklear.h	/^nk__lit(unsigned char *data, unsigned int length)$/;"	f
nk__lit	lib/nuklear/src/nuklear_font.c	/^nk__lit(unsigned char *data, unsigned int length)$/;"	f
nk__match	lib/nuklear/nuklear.h	/^nk__match(unsigned char *data, unsigned int length)$/;"	f
nk__match	lib/nuklear/src/nuklear_font.c	/^nk__match(unsigned char *data, unsigned int length)$/;"	f
nk__next	lib/nuklear/nuklear.h	/^nk__next(struct nk_context *ctx, const struct nk_command *cmd)$/;"	f
nk__next	lib/nuklear/src/nuklear_context.c	/^nk__next(struct nk_context *ctx, const struct nk_command *cmd)$/;"	f
nk_add_value	lib/nuklear/nuklear.h	/^nk_add_value(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_add_value	lib/nuklear/src/nuklear_table.c	/^nk_add_value(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_adler32	lib/nuklear/nuklear.h	/^nk_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f
nk_adler32	lib/nuklear/src/nuklear_font.c	/^nk_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f
nk_alignof	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s
nk_alignof	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s
nk_allegro5	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^static struct nk_allegro5 {$/;"	s
nk_allegro5_clipboard_copy	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_allegro5_clipboard_paste	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_allegro5_font_create_from_file	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_create_from_file(const char *file_name, int font_size, int flags)$/;"	f
nk_allegro5_font_del	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_del(NkAllegro5Font *font)$/;"	f
nk_allegro5_font_get_text_width	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_allegro5_font_set_font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_set_font(NkAllegro5Font *allegro5font)$/;"	f
nk_allegro5_handle_event	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_handle_event(ALLEGRO_EVENT *ev)$/;"	f
nk_allegro5_init	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_init(NkAllegro5Font *allegro5font, ALLEGRO_DISPLAY *dsp,$/;"	f
nk_allegro5_render	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_render()$/;"	f
nk_allegro5_shutdown	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^void nk_allegro5_shutdown(void)$/;"	f
nk_allocation_type	lib/nuklear/nuklear.h	/^enum nk_allocation_type {$/;"	g
nk_allocation_type	lib/nuklear/src/nuklear.h	/^enum nk_allocation_type {$/;"	g
nk_allocator	lib/nuklear/nuklear.h	/^struct nk_allocator {$/;"	s
nk_allocator	lib/nuklear/src/nuklear.h	/^struct nk_allocator {$/;"	s
nk_anti_aliasing	lib/nuklear/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	g
nk_anti_aliasing	lib/nuklear/src/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	g
nk_baked_font	lib/nuklear/nuklear.h	/^struct nk_baked_font {$/;"	s
nk_baked_font	lib/nuklear/src/nuklear.h	/^struct nk_baked_font {$/;"	s
nk_baker_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_baker_align = NK_ALIGNOF(struct nk_font_baker);$/;"	v
nk_baker_align	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const nk_size nk_baker_align = NK_ALIGNOF(struct nk_font_baker);$/;"	v
nk_begin	lib/nuklear/nuklear.h	/^nk_begin(struct nk_context *ctx, const char *title,$/;"	f
nk_begin	lib/nuklear/src/nuklear_window.c	/^nk_begin(struct nk_context *ctx, const char *title,$/;"	f
nk_begin_titled	lib/nuklear/nuklear.h	/^nk_begin_titled(struct nk_context *ctx, const char *name, const char *title,$/;"	f
nk_begin_titled	lib/nuklear/src/nuklear_window.c	/^nk_begin_titled(struct nk_context *ctx, const char *name, const char *title,$/;"	f
nk_black	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_black = {0,0,0,255};$/;"	v	typeref:struct:nk_color
nk_black	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_black = {0,0,0,255};$/;"	v	typeref:struct:nk_color
nk_blue	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_blue = {0,0,255,255};$/;"	v	typeref:struct:nk_color
nk_blue	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_blue = {0,0,255,255};$/;"	v	typeref:struct:nk_color
nk_buffer	lib/nuklear/nuklear.h	/^struct nk_buffer {$/;"	s
nk_buffer	lib/nuklear/src/nuklear.h	/^struct nk_buffer {$/;"	s
nk_buffer_align	lib/nuklear/nuklear.h	/^nk_buffer_align(void *unaligned,$/;"	f
nk_buffer_align	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_align(void *unaligned,$/;"	f
nk_buffer_alloc	lib/nuklear/nuklear.h	/^nk_buffer_alloc(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f
nk_buffer_alloc	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_alloc(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f
nk_buffer_allocation_type	lib/nuklear/nuklear.h	/^enum nk_buffer_allocation_type {$/;"	g
nk_buffer_allocation_type	lib/nuklear/src/nuklear.h	/^enum nk_buffer_allocation_type {$/;"	g
nk_buffer_clear	lib/nuklear/nuklear.h	/^nk_buffer_clear(struct nk_buffer *b)$/;"	f
nk_buffer_clear	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_clear(struct nk_buffer *b)$/;"	f
nk_buffer_free	lib/nuklear/nuklear.h	/^nk_buffer_free(struct nk_buffer *b)$/;"	f
nk_buffer_free	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_free(struct nk_buffer *b)$/;"	f
nk_buffer_info	lib/nuklear/nuklear.h	/^nk_buffer_info(struct nk_memory_status *s, struct nk_buffer *b)$/;"	f
nk_buffer_info	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_info(struct nk_memory_status *s, struct nk_buffer *b)$/;"	f
nk_buffer_init	lib/nuklear/nuklear.h	/^nk_buffer_init(struct nk_buffer *b, const struct nk_allocator *a,$/;"	f
nk_buffer_init	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_init(struct nk_buffer *b, const struct nk_allocator *a,$/;"	f
nk_buffer_init_default	lib/nuklear/nuklear.h	/^nk_buffer_init_default(struct nk_buffer *buffer)$/;"	f
nk_buffer_init_default	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_init_default(struct nk_buffer *buffer)$/;"	f
nk_buffer_init_fixed	lib/nuklear/nuklear.h	/^nk_buffer_init_fixed(struct nk_buffer *b, void *m, nk_size size)$/;"	f
nk_buffer_init_fixed	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_init_fixed(struct nk_buffer *b, void *m, nk_size size)$/;"	f
nk_buffer_mark	lib/nuklear/nuklear.h	/^nk_buffer_mark(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f
nk_buffer_mark	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_mark(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f
nk_buffer_marker	lib/nuklear/nuklear.h	/^struct nk_buffer_marker {$/;"	s
nk_buffer_marker	lib/nuklear/src/nuklear.h	/^struct nk_buffer_marker {$/;"	s
nk_buffer_memory	lib/nuklear/nuklear.h	/^nk_buffer_memory(struct nk_buffer *buffer)$/;"	f
nk_buffer_memory	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_memory(struct nk_buffer *buffer)$/;"	f
nk_buffer_memory_const	lib/nuklear/nuklear.h	/^nk_buffer_memory_const(const struct nk_buffer *buffer)$/;"	f
nk_buffer_memory_const	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_memory_const(const struct nk_buffer *buffer)$/;"	f
nk_buffer_push	lib/nuklear/nuklear.h	/^nk_buffer_push(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f
nk_buffer_push	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_push(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f
nk_buffer_realloc	lib/nuklear/nuklear.h	/^nk_buffer_realloc(struct nk_buffer *b, nk_size capacity, nk_size *size)$/;"	f
nk_buffer_realloc	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_realloc(struct nk_buffer *b, nk_size capacity, nk_size *size)$/;"	f
nk_buffer_reset	lib/nuklear/nuklear.h	/^nk_buffer_reset(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f
nk_buffer_reset	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_reset(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f
nk_buffer_total	lib/nuklear/nuklear.h	/^nk_buffer_total(struct nk_buffer *buffer)$/;"	f
nk_buffer_total	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_total(struct nk_buffer *buffer)$/;"	f
nk_build	lib/nuklear/nuklear.h	/^nk_build(struct nk_context *ctx)$/;"	f
nk_build	lib/nuklear/src/nuklear_context.c	/^nk_build(struct nk_context *ctx)$/;"	f
nk_build_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_build_align = NK_ALIGNOF(struct nk_font_bake_data);$/;"	v
nk_build_align	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const nk_size nk_build_align = NK_ALIGNOF(struct nk_font_bake_data);$/;"	v
nk_button_behavior	lib/nuklear/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	g
nk_button_behavior	lib/nuklear/nuklear.h	/^nk_button_behavior(nk_flags *state, struct nk_rect r,$/;"	f
nk_button_behavior	lib/nuklear/src/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	g
nk_button_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_behavior(nk_flags *state, struct nk_rect r,$/;"	f
nk_button_color	lib/nuklear/nuklear.h	/^nk_button_color(struct nk_context *ctx, struct nk_color color)$/;"	f
nk_button_color	lib/nuklear/src/nuklear_button.c	/^nk_button_color(struct nk_context *ctx, struct nk_color color)$/;"	f
nk_button_image	lib/nuklear/nuklear.h	/^nk_button_image(struct nk_context *ctx, struct nk_image img)$/;"	f
nk_button_image	lib/nuklear/src/nuklear_button.c	/^nk_button_image(struct nk_context *ctx, struct nk_image img)$/;"	f
nk_button_image_label	lib/nuklear/nuklear.h	/^NK_API int nk_button_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_button_image_label	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_button_image_label_styled	lib/nuklear/nuklear.h	/^NK_API int nk_button_image_label_styled(struct nk_context *ctx,$/;"	f
nk_button_image_label_styled	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_image_label_styled(struct nk_context *ctx,$/;"	f
nk_button_image_styled	lib/nuklear/nuklear.h	/^nk_button_image_styled(struct nk_context *ctx, const struct nk_style_button *style,$/;"	f
nk_button_image_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_image_styled(struct nk_context *ctx, const struct nk_style_button *style,$/;"	f
nk_button_image_text	lib/nuklear/nuklear.h	/^nk_button_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_button_image_text	lib/nuklear/src/nuklear_button.c	/^nk_button_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_button_image_text_styled	lib/nuklear/nuklear.h	/^nk_button_image_text_styled(struct nk_context *ctx,$/;"	f
nk_button_image_text_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_image_text_styled(struct nk_context *ctx,$/;"	f
nk_button_label	lib/nuklear/nuklear.h	/^NK_API int nk_button_label(struct nk_context *ctx, const char *title)$/;"	f
nk_button_label	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_label(struct nk_context *ctx, const char *title)$/;"	f
nk_button_label_styled	lib/nuklear/nuklear.h	/^NK_API int nk_button_label_styled(struct nk_context *ctx,$/;"	f
nk_button_label_styled	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_label_styled(struct nk_context *ctx,$/;"	f
nk_button_pop_behavior	lib/nuklear/nuklear.h	/^nk_button_pop_behavior(struct nk_context *ctx)$/;"	f
nk_button_pop_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_pop_behavior(struct nk_context *ctx)$/;"	f
nk_button_push_behavior	lib/nuklear/nuklear.h	/^nk_button_push_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f
nk_button_push_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_push_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f
nk_button_set_behavior	lib/nuklear/nuklear.h	/^nk_button_set_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f
nk_button_set_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_set_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f
nk_button_symbol	lib/nuklear/nuklear.h	/^nk_button_symbol(struct nk_context *ctx, enum nk_symbol_type symbol)$/;"	f
nk_button_symbol	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol(struct nk_context *ctx, enum nk_symbol_type symbol)$/;"	f
nk_button_symbol_label	lib/nuklear/nuklear.h	/^NK_API int nk_button_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_button_symbol_label	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_button_symbol_label_styled	lib/nuklear/nuklear.h	/^NK_API int nk_button_symbol_label_styled(struct nk_context *ctx,$/;"	f
nk_button_symbol_label_styled	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_symbol_label_styled(struct nk_context *ctx,$/;"	f
nk_button_symbol_styled	lib/nuklear/nuklear.h	/^nk_button_symbol_styled(struct nk_context *ctx,$/;"	f
nk_button_symbol_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol_styled(struct nk_context *ctx,$/;"	f
nk_button_symbol_text	lib/nuklear/nuklear.h	/^nk_button_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_button_symbol_text	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_button_symbol_text_styled	lib/nuklear/nuklear.h	/^nk_button_symbol_text_styled(struct nk_context *ctx,$/;"	f
nk_button_symbol_text_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol_text_styled(struct nk_context *ctx,$/;"	f
nk_button_text	lib/nuklear/nuklear.h	/^nk_button_text(struct nk_context *ctx, const char *title, int len)$/;"	f
nk_button_text	lib/nuklear/src/nuklear_button.c	/^nk_button_text(struct nk_context *ctx, const char *title, int len)$/;"	f
nk_button_text_styled	lib/nuklear/nuklear.h	/^nk_button_text_styled(struct nk_context *ctx,$/;"	f
nk_button_text_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_text_styled(struct nk_context *ctx,$/;"	f
nk_buttons	lib/nuklear/nuklear.h	/^enum nk_buttons {$/;"	g
nk_buttons	lib/nuklear/src/nuklear.h	/^enum nk_buttons {$/;"	g
nk_byte	lib/nuklear/nuklear.h	/^typedef NK_UINT8 nk_byte;$/;"	t
nk_byte	lib/nuklear/src/nuklear.h	/^typedef NK_UINT8 nk_byte;$/;"	t
nk_canvas	lib/nuklear/example/canvas.c	/^struct nk_canvas {$/;"	s	file:
nk_char	lib/nuklear/nuklear.h	/^typedef NK_INT8 nk_char;$/;"	t
nk_char	lib/nuklear/src/nuklear.h	/^typedef NK_INT8 nk_char;$/;"	t
nk_char_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_char_align = NK_ALIGNOF(struct nk_tt_packedchar);$/;"	v
nk_char_align	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const nk_size nk_char_align = NK_ALIGNOF(struct nk_tt_packedchar);$/;"	v
nk_chart	lib/nuklear/nuklear.h	/^struct nk_chart {$/;"	s
nk_chart	lib/nuklear/src/nuklear.h	/^struct nk_chart {$/;"	s
nk_chart_add_slot	lib/nuklear/nuklear.h	/^nk_chart_add_slot(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_add_slot	lib/nuklear/src/nuklear_chart.c	/^nk_chart_add_slot(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_add_slot_colored	lib/nuklear/nuklear.h	/^nk_chart_add_slot_colored(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_add_slot_colored	lib/nuklear/src/nuklear_chart.c	/^nk_chart_add_slot_colored(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_begin	lib/nuklear/nuklear.h	/^nk_chart_begin(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_begin	lib/nuklear/src/nuklear_chart.c	/^nk_chart_begin(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f
nk_chart_begin_colored	lib/nuklear/nuklear.h	/^nk_chart_begin_colored(struct nk_context *ctx, enum nk_chart_type type,$/;"	f
nk_chart_begin_colored	lib/nuklear/src/nuklear_chart.c	/^nk_chart_begin_colored(struct nk_context *ctx, enum nk_chart_type type,$/;"	f
nk_chart_end	lib/nuklear/nuklear.h	/^nk_chart_end(struct nk_context *ctx)$/;"	f
nk_chart_end	lib/nuklear/src/nuklear_chart.c	/^nk_chart_end(struct nk_context *ctx)$/;"	f
nk_chart_event	lib/nuklear/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	g
nk_chart_event	lib/nuklear/src/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	g
nk_chart_push	lib/nuklear/nuklear.h	/^nk_chart_push(struct nk_context *ctx, float value)$/;"	f
nk_chart_push	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push(struct nk_context *ctx, float value)$/;"	f
nk_chart_push_column	lib/nuklear/nuklear.h	/^nk_chart_push_column(const struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_chart_push_column	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push_column(const struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_chart_push_line	lib/nuklear/nuklear.h	/^nk_chart_push_line(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_chart_push_line	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push_line(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_chart_push_slot	lib/nuklear/nuklear.h	/^nk_chart_push_slot(struct nk_context *ctx, float value, int slot)$/;"	f
nk_chart_push_slot	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push_slot(struct nk_context *ctx, float value, int slot)$/;"	f
nk_chart_slot	lib/nuklear/nuklear.h	/^struct nk_chart_slot {$/;"	s
nk_chart_slot	lib/nuklear/src/nuklear.h	/^struct nk_chart_slot {$/;"	s
nk_chart_type	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	g
nk_chart_type	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	g
nk_check_flags_label	lib/nuklear/nuklear.h	/^NK_API unsigned int nk_check_flags_label(struct nk_context *ctx, const char *label,$/;"	f
nk_check_flags_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API unsigned int nk_check_flags_label(struct nk_context *ctx, const char *label,$/;"	f
nk_check_flags_text	lib/nuklear/nuklear.h	/^nk_check_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_check_flags_text	lib/nuklear/src/nuklear_toggle.c	/^nk_check_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_check_label	lib/nuklear/nuklear.h	/^NK_API int nk_check_label(struct nk_context *ctx, const char *label, int active)$/;"	f
nk_check_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API int nk_check_label(struct nk_context *ctx, const char *label, int active)$/;"	f
nk_check_text	lib/nuklear/nuklear.h	/^nk_check_text(struct nk_context *ctx, const char *text, int len, int active)$/;"	f
nk_check_text	lib/nuklear/src/nuklear_toggle.c	/^nk_check_text(struct nk_context *ctx, const char *text, int len, int active)$/;"	f
nk_checkbox_flags_label	lib/nuklear/nuklear.h	/^NK_API int nk_checkbox_flags_label(struct nk_context *ctx, const char *label,$/;"	f
nk_checkbox_flags_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API int nk_checkbox_flags_label(struct nk_context *ctx, const char *label,$/;"	f
nk_checkbox_flags_text	lib/nuklear/nuklear.h	/^nk_checkbox_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_checkbox_flags_text	lib/nuklear/src/nuklear_toggle.c	/^nk_checkbox_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_checkbox_label	lib/nuklear/nuklear.h	/^NK_API int nk_checkbox_label(struct nk_context *ctx, const char *label, int *active)$/;"	f
nk_checkbox_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API int nk_checkbox_label(struct nk_context *ctx, const char *label, int *active)$/;"	f
nk_checkbox_text	lib/nuklear/nuklear.h	/^nk_checkbox_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f
nk_checkbox_text	lib/nuklear/src/nuklear_toggle.c	/^nk_checkbox_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f
nk_clear	lib/nuklear/nuklear.h	/^nk_clear(struct nk_context *ctx)$/;"	f
nk_clear	lib/nuklear/src/nuklear_context.c	/^nk_clear(struct nk_context *ctx)$/;"	f
nk_clipboard	lib/nuklear/nuklear.h	/^struct nk_clipboard {$/;"	s
nk_clipboard	lib/nuklear/src/nuklear.h	/^struct nk_clipboard {$/;"	s
nk_collapse_states	lib/nuklear/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	g
nk_collapse_states	lib/nuklear/src/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	g
nk_color	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	s
nk_color	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	s
nk_color_cf	lib/nuklear/nuklear.h	/^nk_color_cf(struct nk_color in)$/;"	f
nk_color_cf	lib/nuklear/src/nuklear_color.c	/^nk_color_cf(struct nk_color in)$/;"	f
nk_color_d	lib/nuklear/nuklear.h	/^nk_color_d(double *r, double *g, double *b, double *a, struct nk_color in)$/;"	f
nk_color_d	lib/nuklear/src/nuklear_color.c	/^nk_color_d(double *r, double *g, double *b, double *a, struct nk_color in)$/;"	f
nk_color_dv	lib/nuklear/nuklear.h	/^nk_color_dv(double *c, struct nk_color in)$/;"	f
nk_color_dv	lib/nuklear/src/nuklear_color.c	/^nk_color_dv(double *c, struct nk_color in)$/;"	f
nk_color_f	lib/nuklear/nuklear.h	/^nk_color_f(float *r, float *g, float *b, float *a, struct nk_color in)$/;"	f
nk_color_f	lib/nuklear/src/nuklear_color.c	/^nk_color_f(float *r, float *g, float *b, float *a, struct nk_color in)$/;"	f
nk_color_format	lib/nuklear/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	g
nk_color_format	lib/nuklear/src/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	g
nk_color_from_byte	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_color_from_byte(const nk_byte *c)$/;"	f
nk_color_from_byte	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_color_from_byte(const nk_byte *c)$/;"	f
nk_color_fv	lib/nuklear/nuklear.h	/^nk_color_fv(float *c, struct nk_color in)$/;"	f
nk_color_fv	lib/nuklear/src/nuklear_color.c	/^nk_color_fv(float *c, struct nk_color in)$/;"	f
nk_color_hex_rgb	lib/nuklear/nuklear.h	/^nk_color_hex_rgb(char *output, struct nk_color col)$/;"	f
nk_color_hex_rgb	lib/nuklear/src/nuklear_color.c	/^nk_color_hex_rgb(char *output, struct nk_color col)$/;"	f
nk_color_hex_rgba	lib/nuklear/nuklear.h	/^nk_color_hex_rgba(char *output, struct nk_color col)$/;"	f
nk_color_hex_rgba	lib/nuklear/src/nuklear_color.c	/^nk_color_hex_rgba(char *output, struct nk_color col)$/;"	f
nk_color_hsv_b	lib/nuklear/nuklear.h	/^nk_color_hsv_b(nk_byte *out_h, nk_byte *out_s, nk_byte *out_v, struct nk_color in)$/;"	f
nk_color_hsv_b	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_b(nk_byte *out_h, nk_byte *out_s, nk_byte *out_v, struct nk_color in)$/;"	f
nk_color_hsv_bv	lib/nuklear/nuklear.h	/^nk_color_hsv_bv(nk_byte *out, struct nk_color in)$/;"	f
nk_color_hsv_bv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_bv(nk_byte *out, struct nk_color in)$/;"	f
nk_color_hsv_f	lib/nuklear/nuklear.h	/^nk_color_hsv_f(float *out_h, float *out_s, float *out_v, struct nk_color in)$/;"	f
nk_color_hsv_f	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_f(float *out_h, float *out_s, float *out_v, struct nk_color in)$/;"	f
nk_color_hsv_fv	lib/nuklear/nuklear.h	/^nk_color_hsv_fv(float *out, struct nk_color in)$/;"	f
nk_color_hsv_fv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_fv(float *out, struct nk_color in)$/;"	f
nk_color_hsv_i	lib/nuklear/nuklear.h	/^nk_color_hsv_i(int *out_h, int *out_s, int *out_v, struct nk_color in)$/;"	f
nk_color_hsv_i	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_i(int *out_h, int *out_s, int *out_v, struct nk_color in)$/;"	f
nk_color_hsv_iv	lib/nuklear/nuklear.h	/^nk_color_hsv_iv(int *out, struct nk_color in)$/;"	f
nk_color_hsv_iv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_iv(int *out, struct nk_color in)$/;"	f
nk_color_hsva_b	lib/nuklear/nuklear.h	/^nk_color_hsva_b(nk_byte *h, nk_byte *s, nk_byte *v, nk_byte *a, struct nk_color in)$/;"	f
nk_color_hsva_b	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_b(nk_byte *h, nk_byte *s, nk_byte *v, nk_byte *a, struct nk_color in)$/;"	f
nk_color_hsva_bv	lib/nuklear/nuklear.h	/^nk_color_hsva_bv(nk_byte *out, struct nk_color in)$/;"	f
nk_color_hsva_bv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_bv(nk_byte *out, struct nk_color in)$/;"	f
nk_color_hsva_f	lib/nuklear/nuklear.h	/^nk_color_hsva_f(float *out_h, float *out_s,$/;"	f
nk_color_hsva_f	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_f(float *out_h, float *out_s,$/;"	f
nk_color_hsva_fv	lib/nuklear/nuklear.h	/^nk_color_hsva_fv(float *out, struct nk_color in)$/;"	f
nk_color_hsva_fv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_fv(float *out, struct nk_color in)$/;"	f
nk_color_hsva_i	lib/nuklear/nuklear.h	/^nk_color_hsva_i(int *out_h, int *out_s, int *out_v,$/;"	f
nk_color_hsva_i	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_i(int *out_h, int *out_s, int *out_v,$/;"	f
nk_color_hsva_iv	lib/nuklear/nuklear.h	/^nk_color_hsva_iv(int *out, struct nk_color in)$/;"	f
nk_color_hsva_iv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_iv(int *out, struct nk_color in)$/;"	f
nk_color_names	lib/nuklear/nuklear.h	/^NK_GLOBAL const char *nk_color_names[NK_COLOR_COUNT] = {$/;"	v
nk_color_names	lib/nuklear/src/nuklear_style.c	/^NK_GLOBAL const char *nk_color_names[NK_COLOR_COUNT] = {$/;"	v
nk_color_pick	lib/nuklear/nuklear.h	/^nk_color_pick(struct nk_context * ctx, struct nk_colorf *color,$/;"	f
nk_color_pick	lib/nuklear/src/nuklear_color_picker.c	/^nk_color_pick(struct nk_context * ctx, struct nk_colorf *color,$/;"	f
nk_color_picker	lib/nuklear/nuklear.h	/^nk_color_picker(struct nk_context *ctx, struct nk_colorf color,$/;"	f
nk_color_picker	lib/nuklear/src/nuklear_color_picker.c	/^nk_color_picker(struct nk_context *ctx, struct nk_colorf color,$/;"	f
nk_color_picker_behavior	lib/nuklear/nuklear.h	/^nk_color_picker_behavior(nk_flags *state,$/;"	f
nk_color_picker_behavior	lib/nuklear/src/nuklear_color_picker.c	/^nk_color_picker_behavior(nk_flags *state,$/;"	f
nk_color_to_allegro_color	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_color_to_allegro_color(struct nk_color color)$/;"	f
nk_color_u32	lib/nuklear/nuklear.h	/^nk_color_u32(struct nk_color in)$/;"	f
nk_color_u32	lib/nuklear/src/nuklear_color.c	/^nk_color_u32(struct nk_color in)$/;"	f
nk_colorf	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	s
nk_colorf	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	s
nk_colorf_hsva_f	lib/nuklear/nuklear.h	/^nk_colorf_hsva_f(float *out_h, float *out_s,$/;"	f
nk_colorf_hsva_f	lib/nuklear/src/nuklear_color.c	/^nk_colorf_hsva_f(float *out_h, float *out_s,$/;"	f
nk_colorf_hsva_fv	lib/nuklear/nuklear.h	/^nk_colorf_hsva_fv(float *hsva, struct nk_colorf in)$/;"	f
nk_colorf_hsva_fv	lib/nuklear/src/nuklear_color.c	/^nk_colorf_hsva_fv(float *hsva, struct nk_colorf in)$/;"	f
nk_combo	lib/nuklear/nuklear.h	/^nk_combo(struct nk_context *ctx, const char **items, int count,$/;"	f
nk_combo	lib/nuklear/src/nuklear_combo.c	/^nk_combo(struct nk_context *ctx, const char **items, int count,$/;"	f
nk_combo_begin	lib/nuklear/nuklear.h	/^nk_combo_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_combo_begin	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_combo_begin_color	lib/nuklear/nuklear.h	/^nk_combo_begin_color(struct nk_context *ctx, struct nk_color color, struct nk_vec2 size)$/;"	f
nk_combo_begin_color	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_color(struct nk_context *ctx, struct nk_color color, struct nk_vec2 size)$/;"	f
nk_combo_begin_image	lib/nuklear/nuklear.h	/^nk_combo_begin_image(struct nk_context *ctx, struct nk_image img, struct nk_vec2 size)$/;"	f
nk_combo_begin_image	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_image(struct nk_context *ctx, struct nk_image img, struct nk_vec2 size)$/;"	f
nk_combo_begin_image_label	lib/nuklear/nuklear.h	/^nk_combo_begin_image_label(struct nk_context *ctx,$/;"	f
nk_combo_begin_image_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_image_label(struct nk_context *ctx,$/;"	f
nk_combo_begin_image_text	lib/nuklear/nuklear.h	/^nk_combo_begin_image_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_begin_image_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_image_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_begin_label	lib/nuklear/nuklear.h	/^nk_combo_begin_label(struct nk_context *ctx, const char *selected, struct nk_vec2 size)$/;"	f
nk_combo_begin_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_label(struct nk_context *ctx, const char *selected, struct nk_vec2 size)$/;"	f
nk_combo_begin_symbol	lib/nuklear/nuklear.h	/^nk_combo_begin_symbol(struct nk_context *ctx, enum nk_symbol_type symbol, struct nk_vec2 size)$/;"	f
nk_combo_begin_symbol	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_symbol(struct nk_context *ctx, enum nk_symbol_type symbol, struct nk_vec2 size)$/;"	f
nk_combo_begin_symbol_label	lib/nuklear/nuklear.h	/^nk_combo_begin_symbol_label(struct nk_context *ctx,$/;"	f
nk_combo_begin_symbol_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_symbol_label(struct nk_context *ctx,$/;"	f
nk_combo_begin_symbol_text	lib/nuklear/nuklear.h	/^nk_combo_begin_symbol_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_begin_symbol_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_symbol_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_begin_text	lib/nuklear/nuklear.h	/^nk_combo_begin_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_begin_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_text(struct nk_context *ctx, const char *selected, int len,$/;"	f
nk_combo_callback	lib/nuklear/nuklear.h	/^nk_combo_callback(struct nk_context *ctx, void(*item_getter)(void*, int, const char**),$/;"	f
nk_combo_callback	lib/nuklear/src/nuklear_combo.c	/^nk_combo_callback(struct nk_context *ctx, void(*item_getter)(void*, int, const char**),$/;"	f
nk_combo_close	lib/nuklear/nuklear.h	/^NK_API void nk_combo_close(struct nk_context *ctx)$/;"	f
nk_combo_close	lib/nuklear/src/nuklear_combo.c	/^NK_API void nk_combo_close(struct nk_context *ctx)$/;"	f
nk_combo_end	lib/nuklear/nuklear.h	/^NK_API void nk_combo_end(struct nk_context *ctx)$/;"	f
nk_combo_end	lib/nuklear/src/nuklear_combo.c	/^NK_API void nk_combo_end(struct nk_context *ctx)$/;"	f
nk_combo_item_image_label	lib/nuklear/nuklear.h	/^nk_combo_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_combo_item_image_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_combo_item_image_text	lib/nuklear/nuklear.h	/^nk_combo_item_image_text(struct nk_context *ctx, struct nk_image img, const char *text,$/;"	f
nk_combo_item_image_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_image_text(struct nk_context *ctx, struct nk_image img, const char *text,$/;"	f
nk_combo_item_label	lib/nuklear/nuklear.h	/^nk_combo_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_combo_item_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_combo_item_symbol_label	lib/nuklear/nuklear.h	/^nk_combo_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_combo_item_symbol_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_combo_item_symbol_text	lib/nuklear/nuklear.h	/^nk_combo_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_combo_item_symbol_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_combo_item_text	lib/nuklear/nuklear.h	/^nk_combo_item_text(struct nk_context *ctx, const char *text, int len,nk_flags align)$/;"	f
nk_combo_item_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_text(struct nk_context *ctx, const char *text, int len,nk_flags align)$/;"	f
nk_combo_separator	lib/nuklear/nuklear.h	/^nk_combo_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f
nk_combo_separator	lib/nuklear/src/nuklear_combo.c	/^nk_combo_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f
nk_combo_string	lib/nuklear/nuklear.h	/^nk_combo_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f
nk_combo_string	lib/nuklear/src/nuklear_combo.c	/^nk_combo_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f
nk_combobox	lib/nuklear/nuklear.h	/^nk_combobox(struct nk_context *ctx, const char **items, int count,$/;"	f
nk_combobox	lib/nuklear/src/nuklear_combo.c	/^nk_combobox(struct nk_context *ctx, const char **items, int count,$/;"	f
nk_combobox_callback	lib/nuklear/nuklear.h	/^nk_combobox_callback(struct nk_context *ctx,$/;"	f
nk_combobox_callback	lib/nuklear/src/nuklear_combo.c	/^nk_combobox_callback(struct nk_context *ctx,$/;"	f
nk_combobox_separator	lib/nuklear/nuklear.h	/^nk_combobox_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f
nk_combobox_separator	lib/nuklear/src/nuklear_combo.c	/^nk_combobox_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f
nk_combobox_string	lib/nuklear/nuklear.h	/^nk_combobox_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f
nk_combobox_string	lib/nuklear/src/nuklear_combo.c	/^nk_combobox_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f
nk_command	lib/nuklear/nuklear.h	/^struct nk_command {$/;"	s
nk_command	lib/nuklear/src/nuklear.h	/^struct nk_command {$/;"	s
nk_command_arc	lib/nuklear/nuklear.h	/^struct nk_command_arc {$/;"	s
nk_command_arc	lib/nuklear/src/nuklear.h	/^struct nk_command_arc {$/;"	s
nk_command_arc_filled	lib/nuklear/nuklear.h	/^struct nk_command_arc_filled {$/;"	s
nk_command_arc_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_arc_filled {$/;"	s
nk_command_buffer	lib/nuklear/nuklear.h	/^struct nk_command_buffer {$/;"	s
nk_command_buffer	lib/nuklear/src/nuklear.h	/^struct nk_command_buffer {$/;"	s
nk_command_buffer_init	lib/nuklear/nuklear.h	/^nk_command_buffer_init(struct nk_command_buffer *cb,$/;"	f
nk_command_buffer_init	lib/nuklear/src/nuklear_draw.c	/^nk_command_buffer_init(struct nk_command_buffer *cb,$/;"	f
nk_command_buffer_push	lib/nuklear/nuklear.h	/^nk_command_buffer_push(struct nk_command_buffer* b,$/;"	f
nk_command_buffer_push	lib/nuklear/src/nuklear_draw.c	/^nk_command_buffer_push(struct nk_command_buffer* b,$/;"	f
nk_command_buffer_reset	lib/nuklear/nuklear.h	/^nk_command_buffer_reset(struct nk_command_buffer *b)$/;"	f
nk_command_buffer_reset	lib/nuklear/src/nuklear_draw.c	/^nk_command_buffer_reset(struct nk_command_buffer *b)$/;"	f
nk_command_circle	lib/nuklear/nuklear.h	/^struct nk_command_circle {$/;"	s
nk_command_circle	lib/nuklear/src/nuklear.h	/^struct nk_command_circle {$/;"	s
nk_command_circle_filled	lib/nuklear/nuklear.h	/^struct nk_command_circle_filled {$/;"	s
nk_command_circle_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_circle_filled {$/;"	s
nk_command_clipping	lib/nuklear/nuklear.h	/^enum nk_command_clipping {$/;"	g
nk_command_clipping	lib/nuklear/src/nuklear.h	/^enum nk_command_clipping {$/;"	g
nk_command_curve	lib/nuklear/nuklear.h	/^struct nk_command_curve {$/;"	s
nk_command_curve	lib/nuklear/src/nuklear.h	/^struct nk_command_curve {$/;"	s
nk_command_custom	lib/nuklear/nuklear.h	/^struct nk_command_custom {$/;"	s
nk_command_custom	lib/nuklear/src/nuklear.h	/^struct nk_command_custom {$/;"	s
nk_command_custom_callback	lib/nuklear/nuklear.h	/^typedef void (*nk_command_custom_callback)(void *canvas, short x,short y,$/;"	t
nk_command_custom_callback	lib/nuklear/src/nuklear.h	/^typedef void (*nk_command_custom_callback)(void *canvas, short x,short y,$/;"	t
nk_command_image	lib/nuklear/nuklear.h	/^struct nk_command_image {$/;"	s
nk_command_image	lib/nuklear/src/nuklear.h	/^struct nk_command_image {$/;"	s
nk_command_line	lib/nuklear/nuklear.h	/^struct nk_command_line {$/;"	s
nk_command_line	lib/nuklear/src/nuklear.h	/^struct nk_command_line {$/;"	s
nk_command_polygon	lib/nuklear/nuklear.h	/^struct nk_command_polygon {$/;"	s
nk_command_polygon	lib/nuklear/src/nuklear.h	/^struct nk_command_polygon {$/;"	s
nk_command_polygon_filled	lib/nuklear/nuklear.h	/^struct nk_command_polygon_filled {$/;"	s
nk_command_polygon_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_polygon_filled {$/;"	s
nk_command_polyline	lib/nuklear/nuklear.h	/^struct nk_command_polyline {$/;"	s
nk_command_polyline	lib/nuklear/src/nuklear.h	/^struct nk_command_polyline {$/;"	s
nk_command_rect	lib/nuklear/nuklear.h	/^struct nk_command_rect {$/;"	s
nk_command_rect	lib/nuklear/src/nuklear.h	/^struct nk_command_rect {$/;"	s
nk_command_rect_filled	lib/nuklear/nuklear.h	/^struct nk_command_rect_filled {$/;"	s
nk_command_rect_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_rect_filled {$/;"	s
nk_command_rect_multi_color	lib/nuklear/nuklear.h	/^struct nk_command_rect_multi_color {$/;"	s
nk_command_rect_multi_color	lib/nuklear/src/nuklear.h	/^struct nk_command_rect_multi_color {$/;"	s
nk_command_scissor	lib/nuklear/nuklear.h	/^struct nk_command_scissor {$/;"	s
nk_command_scissor	lib/nuklear/src/nuklear.h	/^struct nk_command_scissor {$/;"	s
nk_command_text	lib/nuklear/nuklear.h	/^struct nk_command_text {$/;"	s
nk_command_text	lib/nuklear/src/nuklear.h	/^struct nk_command_text {$/;"	s
nk_command_triangle	lib/nuklear/nuklear.h	/^struct nk_command_triangle {$/;"	s
nk_command_triangle	lib/nuklear/src/nuklear.h	/^struct nk_command_triangle {$/;"	s
nk_command_triangle_filled	lib/nuklear/nuklear.h	/^struct nk_command_triangle_filled {$/;"	s
nk_command_triangle_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_triangle_filled {$/;"	s
nk_command_type	lib/nuklear/nuklear.h	/^enum nk_command_type {$/;"	g
nk_command_type	lib/nuklear/src/nuklear.h	/^enum nk_command_type {$/;"	g
nk_configuration_stacks	lib/nuklear/nuklear.h	/^struct nk_configuration_stacks {$/;"	s
nk_configuration_stacks	lib/nuklear/src/nuklear.h	/^struct nk_configuration_stacks {$/;"	s
nk_context	lib/nuklear/nuklear.h	/^struct nk_context {$/;"	s
nk_context	lib/nuklear/src/nuklear.h	/^struct nk_context {$/;"	s
nk_contextual_begin	lib/nuklear/nuklear.h	/^nk_contextual_begin(struct nk_context *ctx, nk_flags flags, struct nk_vec2 size,$/;"	f
nk_contextual_begin	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_begin(struct nk_context *ctx, nk_flags flags, struct nk_vec2 size,$/;"	f
nk_contextual_close	lib/nuklear/nuklear.h	/^nk_contextual_close(struct nk_context *ctx)$/;"	f
nk_contextual_close	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_close(struct nk_context *ctx)$/;"	f
nk_contextual_end	lib/nuklear/nuklear.h	/^nk_contextual_end(struct nk_context *ctx)$/;"	f
nk_contextual_end	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_end(struct nk_context *ctx)$/;"	f
nk_contextual_item_image_label	lib/nuklear/nuklear.h	/^nk_contextual_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_contextual_item_image_label	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_contextual_item_image_text	lib/nuklear/nuklear.h	/^nk_contextual_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_contextual_item_image_text	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_contextual_item_label	lib/nuklear/nuklear.h	/^nk_contextual_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_contextual_item_label	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_contextual_item_symbol_label	lib/nuklear/nuklear.h	/^nk_contextual_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_contextual_item_symbol_label	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_contextual_item_symbol_text	lib/nuklear/nuklear.h	/^nk_contextual_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_contextual_item_symbol_text	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f
nk_contextual_item_text	lib/nuklear/nuklear.h	/^nk_contextual_item_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_contextual_item_text	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_text(struct nk_context *ctx, const char *text, int len,$/;"	f
nk_convert	lib/nuklear/nuklear.h	/^nk_convert(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f
nk_convert	lib/nuklear/src/nuklear_vertex.c	/^nk_convert(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f
nk_convert_config	lib/nuklear/nuklear.h	/^struct nk_convert_config {$/;"	s
nk_convert_config	lib/nuklear/src/nuklear.h	/^struct nk_convert_config {$/;"	s
nk_convert_result	lib/nuklear/nuklear.h	/^enum nk_convert_result {$/;"	g
nk_convert_result	lib/nuklear/src/nuklear.h	/^enum nk_convert_result {$/;"	g
nk_cos	lib/nuklear/nuklear.h	/^nk_cos(float x)$/;"	f
nk_cos	lib/nuklear/src/nuklear_math.c	/^nk_cos(float x)$/;"	f
nk_create_image	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_create_image(struct nk_image * image, const char * frame_buffer, const int width, const int height)$/;"	f
nk_create_page_element	lib/nuklear/nuklear.h	/^nk_create_page_element(struct nk_context *ctx)$/;"	f
nk_create_page_element	lib/nuklear/src/nuklear_page_element.c	/^nk_create_page_element(struct nk_context *ctx)$/;"	f
nk_create_panel	lib/nuklear/nuklear.h	/^nk_create_panel(struct nk_context *ctx)$/;"	f
nk_create_panel	lib/nuklear/src/nuklear_panel.c	/^nk_create_panel(struct nk_context *ctx)$/;"	f
nk_create_table	lib/nuklear/nuklear.h	/^nk_create_table(struct nk_context *ctx)$/;"	f
nk_create_table	lib/nuklear/src/nuklear_table.c	/^nk_create_table(struct nk_context *ctx)$/;"	f
nk_create_window	lib/nuklear/nuklear.h	/^nk_create_window(struct nk_context *ctx)$/;"	f
nk_create_window	lib/nuklear/src/nuklear_window.c	/^nk_create_window(struct nk_context *ctx)$/;"	f
nk_cursor	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	s
nk_cursor	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	s
nk_custom_cursor_data	lib/nuklear/nuklear.h	/^NK_GLOBAL const char nk_custom_cursor_data[NK_CURSOR_DATA_W * NK_CURSOR_DATA_H + 1] =$/;"	v
nk_custom_cursor_data	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const char nk_custom_cursor_data[NK_CURSOR_DATA_W * NK_CURSOR_DATA_H + 1] =$/;"	v
nk_d3d11_clipboard_copy	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_d3d11_clipboard_paste	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_d3d11_font_stash_begin	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_d3d11_font_stash_end	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_font_stash_end(void)$/;"	f
nk_d3d11_get_projection_matrix	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_get_projection_matrix(int width, int height, float *result)$/;"	f
nk_d3d11_handle_event	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f
nk_d3d11_init	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_init(ID3D11Device *device, int width, int height, unsigned int max_vertex_buffer, unsigned int max_index_buffer)$/;"	f
nk_d3d11_pixel_shader	lib/nuklear/demo/d3d11/nuklear_d3d11_pixel_shader.h	/^const BYTE nk_d3d11_pixel_shader[] =$/;"	v
nk_d3d11_render	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_render(ID3D11DeviceContext *context, enum nk_anti_aliasing AA)$/;"	f
nk_d3d11_resize	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_resize(ID3D11DeviceContext *context, int width, int height)$/;"	f
nk_d3d11_shutdown	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^void nk_d3d11_shutdown(void)$/;"	f
nk_d3d11_vertex	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^struct nk_d3d11_vertex {$/;"	s
nk_d3d11_vertex_shader	lib/nuklear/demo/d3d11/nuklear_d3d11_vertex_shader.h	/^const BYTE nk_d3d11_vertex_shader[] =$/;"	v
nk_d3d9_clipboard_copy	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_d3d9_clipboard_paste	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_d3d9_create_font_texture	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_create_font_texture()$/;"	f
nk_d3d9_create_state	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_create_state()$/;"	f
nk_d3d9_font_stash_begin	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_d3d9_font_stash_end	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_font_stash_end(void)$/;"	f
nk_d3d9_get_projection_matrix	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_get_projection_matrix(int width, int height, float *result)$/;"	f
nk_d3d9_handle_event	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f
nk_d3d9_init	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_init(IDirect3DDevice9 *device, int width, int height)$/;"	f
nk_d3d9_release	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_release(void)$/;"	f
nk_d3d9_render	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_render(enum nk_anti_aliasing AA)$/;"	f
nk_d3d9_resize	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_resize(int width, int height)$/;"	f
nk_d3d9_shutdown	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^void nk_d3d9_shutdown(void)$/;"	f
nk_d3d9_vertex	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^struct nk_d3d9_vertex {$/;"	s
nk_decode_85	lib/nuklear/nuklear.h	/^nk_decode_85(unsigned char* dst, const unsigned char* src)$/;"	f
nk_decode_85	lib/nuklear/src/nuklear_font.c	/^nk_decode_85(unsigned char* dst, const unsigned char* src)$/;"	f
nk_decode_85_byte	lib/nuklear/nuklear.h	/^nk_decode_85_byte(char c)$/;"	f
nk_decode_85_byte	lib/nuklear/src/nuklear_font.c	/^nk_decode_85_byte(char c)$/;"	f
nk_decompress	lib/nuklear/nuklear.h	/^nk_decompress(unsigned char *output, unsigned char *i, unsigned int length)$/;"	f
nk_decompress	lib/nuklear/src/nuklear_font.c	/^nk_decompress(unsigned char *output, unsigned char *i, unsigned int length)$/;"	f
nk_decompress_length	lib/nuklear/nuklear.h	/^nk_decompress_length(unsigned char *input)$/;"	f
nk_decompress_length	lib/nuklear/src/nuklear_font.c	/^nk_decompress_length(unsigned char *input)$/;"	f
nk_decompress_token	lib/nuklear/nuklear.h	/^nk_decompress_token(unsigned char *i)$/;"	f
nk_decompress_token	lib/nuklear/src/nuklear_font.c	/^nk_decompress_token(unsigned char *i)$/;"	f
nk_default_color_style	lib/nuklear/nuklear.h	/^nk_default_color_style[NK_COLOR_COUNT] = {$/;"	v	typeref:struct:nk_color
nk_default_color_style	lib/nuklear/src/nuklear_style.c	/^nk_default_color_style[NK_COLOR_COUNT] = {$/;"	v	typeref:struct:nk_color
nk_delete_image	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_delete_image(struct nk_image * image)$/;"	f
nk_do_button	lib/nuklear/nuklear.h	/^nk_do_button(nk_flags *state, struct nk_command_buffer *out, struct nk_rect r,$/;"	f
nk_do_button	lib/nuklear/src/nuklear_button.c	/^nk_do_button(nk_flags *state, struct nk_command_buffer *out, struct nk_rect r,$/;"	f
nk_do_button_image	lib/nuklear/nuklear.h	/^nk_do_button_image(nk_flags *state,$/;"	f
nk_do_button_image	lib/nuklear/src/nuklear_button.c	/^nk_do_button_image(nk_flags *state,$/;"	f
nk_do_button_symbol	lib/nuklear/nuklear.h	/^nk_do_button_symbol(nk_flags *state,$/;"	f
nk_do_button_symbol	lib/nuklear/src/nuklear_button.c	/^nk_do_button_symbol(nk_flags *state,$/;"	f
nk_do_button_text	lib/nuklear/nuklear.h	/^nk_do_button_text(nk_flags *state,$/;"	f
nk_do_button_text	lib/nuklear/src/nuklear_button.c	/^nk_do_button_text(nk_flags *state,$/;"	f
nk_do_button_text_image	lib/nuklear/nuklear.h	/^nk_do_button_text_image(nk_flags *state,$/;"	f
nk_do_button_text_image	lib/nuklear/src/nuklear_button.c	/^nk_do_button_text_image(nk_flags *state,$/;"	f
nk_do_button_text_symbol	lib/nuklear/nuklear.h	/^nk_do_button_text_symbol(nk_flags *state,$/;"	f
nk_do_button_text_symbol	lib/nuklear/src/nuklear_button.c	/^nk_do_button_text_symbol(nk_flags *state,$/;"	f
nk_do_color_picker	lib/nuklear/nuklear.h	/^nk_do_color_picker(nk_flags *state,$/;"	f
nk_do_color_picker	lib/nuklear/src/nuklear_color_picker.c	/^nk_do_color_picker(nk_flags *state,$/;"	f
nk_do_edit	lib/nuklear/nuklear.h	/^nk_do_edit(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_edit	lib/nuklear/src/nuklear_edit.c	/^nk_do_edit(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_progress	lib/nuklear/nuklear.h	/^nk_do_progress(nk_flags *state,$/;"	f
nk_do_progress	lib/nuklear/src/nuklear_progress.c	/^nk_do_progress(nk_flags *state,$/;"	f
nk_do_property	lib/nuklear/nuklear.h	/^nk_do_property(nk_flags *ws,$/;"	f
nk_do_property	lib/nuklear/src/nuklear_property.c	/^nk_do_property(nk_flags *ws,$/;"	f
nk_do_scrollbarh	lib/nuklear/nuklear.h	/^nk_do_scrollbarh(nk_flags *state,$/;"	f
nk_do_scrollbarh	lib/nuklear/src/nuklear_scrollbar.c	/^nk_do_scrollbarh(nk_flags *state,$/;"	f
nk_do_scrollbarv	lib/nuklear/nuklear.h	/^nk_do_scrollbarv(nk_flags *state,$/;"	f
nk_do_scrollbarv	lib/nuklear/src/nuklear_scrollbar.c	/^nk_do_scrollbarv(nk_flags *state,$/;"	f
nk_do_selectable	lib/nuklear/nuklear.h	/^nk_do_selectable(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_selectable	lib/nuklear/src/nuklear_selectable.c	/^nk_do_selectable(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_selectable_image	lib/nuklear/nuklear.h	/^nk_do_selectable_image(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_selectable_image	lib/nuklear/src/nuklear_selectable.c	/^nk_do_selectable_image(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_selectable_symbol	lib/nuklear/nuklear.h	/^nk_do_selectable_symbol(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_selectable_symbol	lib/nuklear/src/nuklear_selectable.c	/^nk_do_selectable_symbol(nk_flags *state, struct nk_command_buffer *out,$/;"	f
nk_do_slider	lib/nuklear/nuklear.h	/^nk_do_slider(nk_flags *state,$/;"	f
nk_do_slider	lib/nuklear/src/nuklear_slider.c	/^nk_do_slider(nk_flags *state,$/;"	f
nk_do_toggle	lib/nuklear/nuklear.h	/^nk_do_toggle(nk_flags *state,$/;"	f
nk_do_toggle	lib/nuklear/src/nuklear_toggle.c	/^nk_do_toggle(nk_flags *state,$/;"	f
nk_drag_behavior	lib/nuklear/nuklear.h	/^nk_drag_behavior(nk_flags *state, const struct nk_input *in,$/;"	f
nk_drag_behavior	lib/nuklear/src/nuklear_property.c	/^nk_drag_behavior(nk_flags *state, const struct nk_input *in,$/;"	f
nk_draw_button	lib/nuklear/nuklear.h	/^nk_draw_button(struct nk_command_buffer *out,$/;"	f
nk_draw_button	lib/nuklear/src/nuklear_button.c	/^nk_draw_button(struct nk_command_buffer *out,$/;"	f
nk_draw_button_image	lib/nuklear/nuklear.h	/^nk_draw_button_image(struct nk_command_buffer *out,$/;"	f
nk_draw_button_image	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_image(struct nk_command_buffer *out,$/;"	f
nk_draw_button_symbol	lib/nuklear/nuklear.h	/^nk_draw_button_symbol(struct nk_command_buffer *out,$/;"	f
nk_draw_button_symbol	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_symbol(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text	lib/nuklear/nuklear.h	/^nk_draw_button_text(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_text(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text_image	lib/nuklear/nuklear.h	/^nk_draw_button_text_image(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text_image	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_text_image(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text_symbol	lib/nuklear/nuklear.h	/^nk_draw_button_text_symbol(struct nk_command_buffer *out,$/;"	f
nk_draw_button_text_symbol	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_text_symbol(struct nk_command_buffer *out,$/;"	f
nk_draw_checkbox	lib/nuklear/nuklear.h	/^nk_draw_checkbox(struct nk_command_buffer *out,$/;"	f
nk_draw_checkbox	lib/nuklear/src/nuklear_toggle.c	/^nk_draw_checkbox(struct nk_command_buffer *out,$/;"	f
nk_draw_color_picker	lib/nuklear/nuklear.h	/^nk_draw_color_picker(struct nk_command_buffer *o, const struct nk_rect *matrix,$/;"	f
nk_draw_color_picker	lib/nuklear/src/nuklear_color_picker.c	/^nk_draw_color_picker(struct nk_command_buffer *o, const struct nk_rect *matrix,$/;"	f
nk_draw_command	lib/nuklear/nuklear.h	/^struct nk_draw_command {$/;"	s
nk_draw_command	lib/nuklear/src/nuklear.h	/^struct nk_draw_command {$/;"	s
nk_draw_foreach	lib/nuklear/nuklear.h	1301;"	d
nk_draw_foreach	lib/nuklear/src/nuklear.h	1082;"	d
nk_draw_image	lib/nuklear/nuklear.h	/^nk_draw_image(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_draw_image	lib/nuklear/src/nuklear_draw.c	/^nk_draw_image(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_draw_index	lib/nuklear/nuklear.h	/^typedef nk_uint nk_draw_index;$/;"	t
nk_draw_index	lib/nuklear/nuklear.h	/^typedef nk_ushort nk_draw_index;$/;"	t
nk_draw_index	lib/nuklear/src/nuklear.h	/^typedef nk_uint nk_draw_index;$/;"	t
nk_draw_index	lib/nuklear/src/nuklear.h	/^typedef nk_ushort nk_draw_index;$/;"	t
nk_draw_list	lib/nuklear/nuklear.h	/^struct nk_draw_list {$/;"	s
nk_draw_list	lib/nuklear/src/nuklear.h	/^struct nk_draw_list {$/;"	s
nk_draw_list_add_clip	lib/nuklear/nuklear.h	/^nk_draw_list_add_clip(struct nk_draw_list *list, struct nk_rect rect)$/;"	f
nk_draw_list_add_clip	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_add_clip(struct nk_draw_list *list, struct nk_rect rect)$/;"	f
nk_draw_list_add_image	lib/nuklear/nuklear.h	/^nk_draw_list_add_image(struct nk_draw_list *list, struct nk_image texture,$/;"	f
nk_draw_list_add_image	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_add_image(struct nk_draw_list *list, struct nk_image texture,$/;"	f
nk_draw_list_add_text	lib/nuklear/nuklear.h	/^nk_draw_list_add_text(struct nk_draw_list *list, const struct nk_user_font *font,$/;"	f
nk_draw_list_add_text	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_add_text(struct nk_draw_list *list, const struct nk_user_font *font,$/;"	f
nk_draw_list_alloc_elements	lib/nuklear/nuklear.h	/^nk_draw_list_alloc_elements(struct nk_draw_list *list, nk_size count)$/;"	f
nk_draw_list_alloc_elements	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_alloc_elements(struct nk_draw_list *list, nk_size count)$/;"	f
nk_draw_list_alloc_path	lib/nuklear/nuklear.h	/^nk_draw_list_alloc_path(struct nk_draw_list *list, int count)$/;"	f
nk_draw_list_alloc_path	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_alloc_path(struct nk_draw_list *list, int count)$/;"	f
nk_draw_list_alloc_vertices	lib/nuklear/nuklear.h	/^nk_draw_list_alloc_vertices(struct nk_draw_list *list, nk_size count)$/;"	f
nk_draw_list_alloc_vertices	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_alloc_vertices(struct nk_draw_list *list, nk_size count)$/;"	f
nk_draw_list_command_last	lib/nuklear/nuklear.h	/^nk_draw_list_command_last(struct nk_draw_list *list)$/;"	f
nk_draw_list_command_last	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_command_last(struct nk_draw_list *list)$/;"	f
nk_draw_list_fill_circle	lib/nuklear/nuklear.h	/^nk_draw_list_fill_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_fill_circle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_fill_poly_convex	lib/nuklear/nuklear.h	/^nk_draw_list_fill_poly_convex(struct nk_draw_list *list,$/;"	f
nk_draw_list_fill_poly_convex	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_poly_convex(struct nk_draw_list *list,$/;"	f
nk_draw_list_fill_rect	lib/nuklear/nuklear.h	/^nk_draw_list_fill_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_fill_rect	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_fill_rect_multi_color	lib/nuklear/nuklear.h	/^nk_draw_list_fill_rect_multi_color(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_fill_rect_multi_color	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_rect_multi_color(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_fill_triangle	lib/nuklear/nuklear.h	/^nk_draw_list_fill_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_fill_triangle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_foreach	lib/nuklear/nuklear.h	4761;"	d
nk_draw_list_foreach	lib/nuklear/src/nuklear.h	4542;"	d
nk_draw_list_init	lib/nuklear/nuklear.h	/^nk_draw_list_init(struct nk_draw_list *list)$/;"	f
nk_draw_list_init	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_init(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_arc_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_arc_to(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_path_arc_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_arc_to(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_path_arc_to_fast	lib/nuklear/nuklear.h	/^nk_draw_list_path_arc_to_fast(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_path_arc_to_fast	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_arc_to_fast(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_path_clear	lib/nuklear/nuklear.h	/^nk_draw_list_path_clear(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_clear	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_clear(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_curve_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_curve_to(struct nk_draw_list *list, struct nk_vec2 p2,$/;"	f
nk_draw_list_path_curve_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_curve_to(struct nk_draw_list *list, struct nk_vec2 p2,$/;"	f
nk_draw_list_path_fill	lib/nuklear/nuklear.h	/^nk_draw_list_path_fill(struct nk_draw_list *list, struct nk_color color)$/;"	f
nk_draw_list_path_fill	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_fill(struct nk_draw_list *list, struct nk_color color)$/;"	f
nk_draw_list_path_last	lib/nuklear/nuklear.h	/^nk_draw_list_path_last(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_last	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_last(struct nk_draw_list *list)$/;"	f
nk_draw_list_path_line_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_line_to(struct nk_draw_list *list, struct nk_vec2 pos)$/;"	f
nk_draw_list_path_line_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_line_to(struct nk_draw_list *list, struct nk_vec2 pos)$/;"	f
nk_draw_list_path_rect_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_rect_to(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_path_rect_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_rect_to(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_path_stroke	lib/nuklear/nuklear.h	/^nk_draw_list_path_stroke(struct nk_draw_list *list, struct nk_color color,$/;"	f
nk_draw_list_path_stroke	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_stroke(struct nk_draw_list *list, struct nk_color color,$/;"	f
nk_draw_list_push_command	lib/nuklear/nuklear.h	/^nk_draw_list_push_command(struct nk_draw_list *list, struct nk_rect clip,$/;"	f
nk_draw_list_push_command	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_command(struct nk_draw_list *list, struct nk_rect clip,$/;"	f
nk_draw_list_push_image	lib/nuklear/nuklear.h	/^nk_draw_list_push_image(struct nk_draw_list *list, nk_handle texture)$/;"	f
nk_draw_list_push_image	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_image(struct nk_draw_list *list, nk_handle texture)$/;"	f
nk_draw_list_push_rect_uv	lib/nuklear/nuklear.h	/^nk_draw_list_push_rect_uv(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_push_rect_uv	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_rect_uv(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_push_userdata	lib/nuklear/nuklear.h	/^nk_draw_list_push_userdata(struct nk_draw_list *list, nk_handle userdata)$/;"	f
nk_draw_list_push_userdata	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_userdata(struct nk_draw_list *list, nk_handle userdata)$/;"	f
nk_draw_list_setup	lib/nuklear/nuklear.h	/^nk_draw_list_setup(struct nk_draw_list *canvas, const struct nk_convert_config *config,$/;"	f
nk_draw_list_setup	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_setup(struct nk_draw_list *canvas, const struct nk_convert_config *config,$/;"	f
nk_draw_list_stroke	lib/nuklear/nuklear.h	/^enum nk_draw_list_stroke {$/;"	g
nk_draw_list_stroke	lib/nuklear/src/nuklear.h	/^enum nk_draw_list_stroke {$/;"	g
nk_draw_list_stroke_circle	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_stroke_circle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f
nk_draw_list_stroke_curve	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_curve(struct nk_draw_list *list, struct nk_vec2 p0,$/;"	f
nk_draw_list_stroke_curve	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_curve(struct nk_draw_list *list, struct nk_vec2 p0,$/;"	f
nk_draw_list_stroke_line	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_line(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_stroke_line	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_line(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_stroke_poly_line	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_poly_line(struct nk_draw_list *list, const struct nk_vec2 *points,$/;"	f
nk_draw_list_stroke_poly_line	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_poly_line(struct nk_draw_list *list, const struct nk_vec2 *points,$/;"	f
nk_draw_list_stroke_rect	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_stroke_rect	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f
nk_draw_list_stroke_triangle	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_list_stroke_triangle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f
nk_draw_null_texture	lib/nuklear/nuklear.h	/^struct nk_draw_null_texture {$/;"	s
nk_draw_null_texture	lib/nuklear/src/nuklear.h	/^struct nk_draw_null_texture {$/;"	s
nk_draw_option	lib/nuklear/nuklear.h	/^nk_draw_option(struct nk_command_buffer *out,$/;"	f
nk_draw_option	lib/nuklear/src/nuklear_toggle.c	/^nk_draw_option(struct nk_command_buffer *out,$/;"	f
nk_draw_progress	lib/nuklear/nuklear.h	/^nk_draw_progress(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_progress	lib/nuklear/src/nuklear_progress.c	/^nk_draw_progress(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_property	lib/nuklear/nuklear.h	/^nk_draw_property(struct nk_command_buffer *out, const struct nk_style_property *style,$/;"	f
nk_draw_property	lib/nuklear/src/nuklear_property.c	/^nk_draw_property(struct nk_command_buffer *out, const struct nk_style_property *style,$/;"	f
nk_draw_scrollbar	lib/nuklear/nuklear.h	/^nk_draw_scrollbar(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_scrollbar	lib/nuklear/src/nuklear_scrollbar.c	/^nk_draw_scrollbar(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_selectable	lib/nuklear/nuklear.h	/^nk_draw_selectable(struct nk_command_buffer *out,$/;"	f
nk_draw_selectable	lib/nuklear/src/nuklear_selectable.c	/^nk_draw_selectable(struct nk_command_buffer *out,$/;"	f
nk_draw_slider	lib/nuklear/nuklear.h	/^nk_draw_slider(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_slider	lib/nuklear/src/nuklear_slider.c	/^nk_draw_slider(struct nk_command_buffer *out, nk_flags state,$/;"	f
nk_draw_symbol	lib/nuklear/nuklear.h	/^nk_draw_symbol(struct nk_command_buffer *out, enum nk_symbol_type type,$/;"	f
nk_draw_symbol	lib/nuklear/src/nuklear_button.c	/^nk_draw_symbol(struct nk_command_buffer *out, enum nk_symbol_type type,$/;"	f
nk_draw_text	lib/nuklear/nuklear.h	/^nk_draw_text(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_draw_text	lib/nuklear/src/nuklear_draw.c	/^nk_draw_text(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_draw_vertex	lib/nuklear/nuklear.h	/^nk_draw_vertex(void *dst, const struct nk_convert_config *config,$/;"	f
nk_draw_vertex	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex(void *dst, const struct nk_convert_config *config,$/;"	f
nk_draw_vertex_color	lib/nuklear/nuklear.h	/^nk_draw_vertex_color(void *attr, const float *vals,$/;"	f
nk_draw_vertex_color	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex_color(void *attr, const float *vals,$/;"	f
nk_draw_vertex_element	lib/nuklear/nuklear.h	/^nk_draw_vertex_element(void *dst, const float *values, int value_count,$/;"	f
nk_draw_vertex_element	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex_element(void *dst, const float *values, int value_count,$/;"	f
nk_draw_vertex_layout_attribute	lib/nuklear/nuklear.h	/^enum nk_draw_vertex_layout_attribute {$/;"	g
nk_draw_vertex_layout_attribute	lib/nuklear/src/nuklear.h	/^enum nk_draw_vertex_layout_attribute {$/;"	g
nk_draw_vertex_layout_element	lib/nuklear/nuklear.h	/^struct nk_draw_vertex_layout_element {$/;"	s
nk_draw_vertex_layout_element	lib/nuklear/src/nuklear.h	/^struct nk_draw_vertex_layout_element {$/;"	s
nk_draw_vertex_layout_element_is_end_of_layout	lib/nuklear/nuklear.h	/^nk_draw_vertex_layout_element_is_end_of_layout($/;"	f
nk_draw_vertex_layout_element_is_end_of_layout	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex_layout_element_is_end_of_layout($/;"	f
nk_draw_vertex_layout_format	lib/nuklear/nuklear.h	/^enum nk_draw_vertex_layout_format {$/;"	g
nk_draw_vertex_layout_format	lib/nuklear/src/nuklear.h	/^enum nk_draw_vertex_layout_format {$/;"	g
nk_dtoa	lib/nuklear/nuklear.h	/^nk_dtoa(char *s, double n)$/;"	f
nk_dtoa	lib/nuklear/src/nuklear_util.c	/^nk_dtoa(char *s, double n)$/;"	f
nk_edit_buffer	lib/nuklear/nuklear.h	/^nk_edit_buffer(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_buffer	lib/nuklear/src/nuklear_edit.c	/^nk_edit_buffer(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_draw_text	lib/nuklear/nuklear.h	/^nk_edit_draw_text(struct nk_command_buffer *out,$/;"	f
nk_edit_draw_text	lib/nuklear/src/nuklear_edit.c	/^nk_edit_draw_text(struct nk_command_buffer *out,$/;"	f
nk_edit_events	lib/nuklear/nuklear.h	/^enum nk_edit_events {$/;"	g
nk_edit_events	lib/nuklear/src/nuklear.h	/^enum nk_edit_events {$/;"	g
nk_edit_flags	lib/nuklear/nuklear.h	/^enum nk_edit_flags {$/;"	g
nk_edit_flags	lib/nuklear/src/nuklear.h	/^enum nk_edit_flags {$/;"	g
nk_edit_focus	lib/nuklear/nuklear.h	/^nk_edit_focus(struct nk_context *ctx, nk_flags flags)$/;"	f
nk_edit_focus	lib/nuklear/src/nuklear_edit.c	/^nk_edit_focus(struct nk_context *ctx, nk_flags flags)$/;"	f
nk_edit_state	lib/nuklear/nuklear.h	/^struct nk_edit_state {$/;"	s
nk_edit_state	lib/nuklear/src/nuklear.h	/^struct nk_edit_state {$/;"	s
nk_edit_string	lib/nuklear/nuklear.h	/^nk_edit_string(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_string	lib/nuklear/src/nuklear_edit.c	/^nk_edit_string(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_string_zero_terminated	lib/nuklear/nuklear.h	/^nk_edit_string_zero_terminated(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_string_zero_terminated	lib/nuklear/src/nuklear_edit.c	/^nk_edit_string_zero_terminated(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_edit_types	lib/nuklear/nuklear.h	/^enum nk_edit_types {$/;"	g
nk_edit_types	lib/nuklear/src/nuklear.h	/^enum nk_edit_types {$/;"	g
nk_edit_unfocus	lib/nuklear/nuklear.h	/^nk_edit_unfocus(struct nk_context *ctx)$/;"	f
nk_edit_unfocus	lib/nuklear/src/nuklear_edit.c	/^nk_edit_unfocus(struct nk_context *ctx)$/;"	f
nk_end	lib/nuklear/nuklear.h	/^nk_end(struct nk_context *ctx)$/;"	f
nk_end	lib/nuklear/src/nuklear_window.c	/^nk_end(struct nk_context *ctx)$/;"	f
nk_false	lib/nuklear/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon131
nk_false	lib/nuklear/src/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon160
nk_file_load	lib/nuklear/nuklear.h	/^nk_file_load(const char* path, nk_size* siz, struct nk_allocator *alloc)$/;"	f
nk_file_load	lib/nuklear/src/nuklear_util.c	/^nk_file_load(const char* path, nk_size* siz, struct nk_allocator *alloc)$/;"	f
nk_fill_arc	lib/nuklear/nuklear.h	/^nk_fill_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f
nk_fill_arc	lib/nuklear/src/nuklear_draw.c	/^nk_fill_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f
nk_fill_circle	lib/nuklear/nuklear.h	/^nk_fill_circle(struct nk_command_buffer *b, struct nk_rect r, struct nk_color c)$/;"	f
nk_fill_circle	lib/nuklear/src/nuklear_draw.c	/^nk_fill_circle(struct nk_command_buffer *b, struct nk_rect r, struct nk_color c)$/;"	f
nk_fill_polygon	lib/nuklear/nuklear.h	/^nk_fill_polygon(struct nk_command_buffer *b, float *points, int point_count,$/;"	f
nk_fill_polygon	lib/nuklear/src/nuklear_draw.c	/^nk_fill_polygon(struct nk_command_buffer *b, float *points, int point_count,$/;"	f
nk_fill_rect	lib/nuklear/nuklear.h	/^nk_fill_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_fill_rect	lib/nuklear/src/nuklear_draw.c	/^nk_fill_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_fill_rect_multi_color	lib/nuklear/nuklear.h	/^nk_fill_rect_multi_color(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_fill_rect_multi_color	lib/nuklear/src/nuklear_draw.c	/^nk_fill_rect_multi_color(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_fill_triangle	lib/nuklear/nuklear.h	/^nk_fill_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f
nk_fill_triangle	lib/nuklear/src/nuklear_draw.c	/^nk_fill_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f
nk_filter_ascii	lib/nuklear/nuklear.h	/^nk_filter_ascii(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_ascii	lib/nuklear/src/nuklear_edit.c	/^nk_filter_ascii(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_binary	lib/nuklear/nuklear.h	/^nk_filter_binary(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_binary	lib/nuklear/src/nuklear_edit.c	/^nk_filter_binary(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_decimal	lib/nuklear/nuklear.h	/^nk_filter_decimal(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_decimal	lib/nuklear/src/nuklear_edit.c	/^nk_filter_decimal(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_default	lib/nuklear/nuklear.h	/^nk_filter_default(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_default	lib/nuklear/src/nuklear_edit.c	/^nk_filter_default(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_float	lib/nuklear/nuklear.h	/^nk_filter_float(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_float	lib/nuklear/src/nuklear_edit.c	/^nk_filter_float(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_hex	lib/nuklear/nuklear.h	/^nk_filter_hex(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_hex	lib/nuklear/src/nuklear_edit.c	/^nk_filter_hex(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_oct	lib/nuklear/nuklear.h	/^nk_filter_oct(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_filter_oct	lib/nuklear/src/nuklear_edit.c	/^nk_filter_oct(const struct nk_text_edit *box, nk_rune unicode)$/;"	f
nk_find_value	lib/nuklear/nuklear.h	/^nk_find_value(struct nk_window *win, nk_hash name)$/;"	f
nk_find_value	lib/nuklear/src/nuklear_table.c	/^nk_find_value(struct nk_window *win, nk_hash name)$/;"	f
nk_find_window	lib/nuklear/nuklear.h	/^nk_find_window(struct nk_context *ctx, nk_hash hash, const char *name)$/;"	f
nk_find_window	lib/nuklear/src/nuklear_window.c	/^nk_find_window(struct nk_context *ctx, nk_hash hash, const char *name)$/;"	f
nk_finish	lib/nuklear/nuklear.h	/^nk_finish(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_finish	lib/nuklear/src/nuklear_context.c	/^nk_finish(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_finish_buffer	lib/nuklear/nuklear.h	/^nk_finish_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f
nk_finish_buffer	lib/nuklear/src/nuklear_context.c	/^nk_finish_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f
nk_finish_popup	lib/nuklear/nuklear.h	/^nk_finish_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_finish_popup	lib/nuklear/src/nuklear_context.c	/^nk_finish_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_flags	lib/nuklear/nuklear.h	/^typedef nk_uint nk_flags;$/;"	t
nk_flags	lib/nuklear/src/nuklear.h	/^typedef nk_uint nk_flags;$/;"	t
nk_float	lib/nuklear/nuklear.h	5499;"	d
nk_float	lib/nuklear/src/nuklear.h	5280;"	d
nk_font	lib/nuklear/nuklear.h	/^struct nk_font {$/;"	s
nk_font	lib/nuklear/src/nuklear.h	/^struct nk_font {$/;"	s
nk_font_atlas	lib/nuklear/nuklear.h	/^struct nk_font_atlas {$/;"	s
nk_font_atlas	lib/nuklear/src/nuklear.h	/^struct nk_font_atlas {$/;"	s
nk_font_atlas_add	lib/nuklear/nuklear.h	/^nk_font_atlas_add(struct nk_font_atlas *atlas, const struct nk_font_config *config)$/;"	f
nk_font_atlas_add	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add(struct nk_font_atlas *atlas, const struct nk_font_config *config)$/;"	f
nk_font_atlas_add_compressed	lib/nuklear/nuklear.h	/^nk_font_atlas_add_compressed(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_compressed	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_compressed(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_compressed_base85	lib/nuklear/nuklear.h	/^nk_font_atlas_add_compressed_base85(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_compressed_base85	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_compressed_base85(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_default	lib/nuklear/nuklear.h	/^nk_font_atlas_add_default(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_default	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_default(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_add_from_file	lib/nuklear/nuklear.h	/^nk_font_atlas_add_from_file(struct nk_font_atlas *atlas, const char *file_path,$/;"	f
nk_font_atlas_add_from_file	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_from_file(struct nk_font_atlas *atlas, const char *file_path,$/;"	f
nk_font_atlas_add_from_memory	lib/nuklear/nuklear.h	/^nk_font_atlas_add_from_memory(struct nk_font_atlas *atlas, void *memory,$/;"	f
nk_font_atlas_add_from_memory	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_from_memory(struct nk_font_atlas *atlas, void *memory,$/;"	f
nk_font_atlas_bake	lib/nuklear/nuklear.h	/^nk_font_atlas_bake(struct nk_font_atlas *atlas, int *width, int *height,$/;"	f
nk_font_atlas_bake	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_bake(struct nk_font_atlas *atlas, int *width, int *height,$/;"	f
nk_font_atlas_begin	lib/nuklear/nuklear.h	/^nk_font_atlas_begin(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_begin	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_begin(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_cleanup	lib/nuklear/nuklear.h	/^nk_font_atlas_cleanup(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_cleanup	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_cleanup(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_clear	lib/nuklear/nuklear.h	/^nk_font_atlas_clear(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_clear	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_clear(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_end	lib/nuklear/nuklear.h	/^nk_font_atlas_end(struct nk_font_atlas *atlas, nk_handle texture,$/;"	f
nk_font_atlas_end	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_end(struct nk_font_atlas *atlas, nk_handle texture,$/;"	f
nk_font_atlas_format	lib/nuklear/nuklear.h	/^enum nk_font_atlas_format {$/;"	g
nk_font_atlas_format	lib/nuklear/src/nuklear.h	/^enum nk_font_atlas_format {$/;"	g
nk_font_atlas_init	lib/nuklear/nuklear.h	/^nk_font_atlas_init(struct nk_font_atlas *atlas, struct nk_allocator *alloc)$/;"	f
nk_font_atlas_init	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_init(struct nk_font_atlas *atlas, struct nk_allocator *alloc)$/;"	f
nk_font_atlas_init_custom	lib/nuklear/nuklear.h	/^nk_font_atlas_init_custom(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_init_custom	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_init_custom(struct nk_font_atlas *atlas,$/;"	f
nk_font_atlas_init_default	lib/nuklear/nuklear.h	/^nk_font_atlas_init_default(struct nk_font_atlas *atlas)$/;"	f
nk_font_atlas_init_default	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_init_default(struct nk_font_atlas *atlas)$/;"	f
nk_font_bake	lib/nuklear/nuklear.h	/^nk_font_bake(struct nk_font_baker *baker, void *image_memory, int width, int height,$/;"	f
nk_font_bake	lib/nuklear/src/nuklear_font.c	/^nk_font_bake(struct nk_font_baker *baker, void *image_memory, int width, int height,$/;"	f
nk_font_bake_convert	lib/nuklear/nuklear.h	/^nk_font_bake_convert(void *out_memory, int img_width, int img_height,$/;"	f
nk_font_bake_convert	lib/nuklear/src/nuklear_font.c	/^nk_font_bake_convert(void *out_memory, int img_width, int img_height,$/;"	f
nk_font_bake_custom_data	lib/nuklear/nuklear.h	/^nk_font_bake_custom_data(void *img_memory, int img_width, int img_height,$/;"	f
nk_font_bake_custom_data	lib/nuklear/src/nuklear_font.c	/^nk_font_bake_custom_data(void *img_memory, int img_width, int img_height,$/;"	f
nk_font_bake_data	lib/nuklear/nuklear.h	/^struct nk_font_bake_data {$/;"	s
nk_font_bake_data	lib/nuklear/src/nuklear_font.c	/^struct nk_font_bake_data {$/;"	s	file:
nk_font_bake_pack	lib/nuklear/nuklear.h	/^nk_font_bake_pack(struct nk_font_baker *baker,$/;"	f
nk_font_bake_pack	lib/nuklear/src/nuklear_font.c	/^nk_font_bake_pack(struct nk_font_baker *baker,$/;"	f
nk_font_baker	lib/nuklear/nuklear.h	/^nk_font_baker(void *memory, int glyph_count, int count, struct nk_allocator *alloc)$/;"	f
nk_font_baker	lib/nuklear/nuklear.h	/^struct nk_font_baker {$/;"	s
nk_font_baker	lib/nuklear/src/nuklear_font.c	/^nk_font_baker(void *memory, int glyph_count, int count, struct nk_allocator *alloc)$/;"	f
nk_font_baker	lib/nuklear/src/nuklear_font.c	/^struct nk_font_baker {$/;"	s	file:
nk_font_baker_memory	lib/nuklear/nuklear.h	/^nk_font_baker_memory(nk_size *temp, int *glyph_count,$/;"	f
nk_font_baker_memory	lib/nuklear/src/nuklear_font.c	/^nk_font_baker_memory(nk_size *temp, int *glyph_count,$/;"	f
nk_font_chinese_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_chinese_glyph_ranges(void)$/;"	f
nk_font_chinese_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_chinese_glyph_ranges(void)$/;"	f
nk_font_config	lib/nuklear/nuklear.h	/^nk_font_config(float pixel_height)$/;"	f
nk_font_config	lib/nuklear/nuklear.h	/^struct nk_font_config {$/;"	s
nk_font_config	lib/nuklear/src/nuklear.h	/^struct nk_font_config {$/;"	s
nk_font_config	lib/nuklear/src/nuklear_font.c	/^nk_font_config(float pixel_height)$/;"	f
nk_font_coord_type	lib/nuklear/nuklear.h	/^enum nk_font_coord_type {$/;"	g
nk_font_coord_type	lib/nuklear/src/nuklear.h	/^enum nk_font_coord_type {$/;"	g
nk_font_cyrillic_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_cyrillic_glyph_ranges(void)$/;"	f
nk_font_cyrillic_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_cyrillic_glyph_ranges(void)$/;"	f
nk_font_default_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_default_glyph_ranges(void)$/;"	f
nk_font_default_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_default_glyph_ranges(void)$/;"	f
nk_font_find_glyph	lib/nuklear/nuklear.h	/^nk_font_find_glyph(struct nk_font *font, nk_rune unicode)$/;"	f
nk_font_find_glyph	lib/nuklear/src/nuklear_font.c	/^nk_font_find_glyph(struct nk_font *font, nk_rune unicode)$/;"	f
nk_font_glyph	lib/nuklear/nuklear.h	/^struct nk_font_glyph {$/;"	s
nk_font_glyph	lib/nuklear/src/nuklear.h	/^struct nk_font_glyph {$/;"	s
nk_font_init	lib/nuklear/nuklear.h	/^nk_font_init(struct nk_font *font, float pixel_height,$/;"	f
nk_font_init	lib/nuklear/src/nuklear_font.c	/^nk_font_init(struct nk_font *font, float pixel_height,$/;"	f
nk_font_korean_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_korean_glyph_ranges(void)$/;"	f
nk_font_korean_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_korean_glyph_ranges(void)$/;"	f
nk_font_query_font_glyph	lib/nuklear/nuklear.h	/^nk_font_query_font_glyph(nk_handle handle, float height,$/;"	f
nk_font_query_font_glyph	lib/nuklear/src/nuklear_font.c	/^nk_font_query_font_glyph(nk_handle handle, float height,$/;"	f
nk_font_text_width	lib/nuklear/nuklear.h	/^nk_font_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_font_text_width	lib/nuklear/src/nuklear_font.c	/^nk_font_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_foreach	lib/nuklear/nuklear.h	1210;"	d
nk_foreach	lib/nuklear/src/nuklear.h	991;"	d
nk_free	lib/nuklear/nuklear.h	/^nk_free(struct nk_context *ctx)$/;"	f
nk_free	lib/nuklear/src/nuklear_context.c	/^nk_free(struct nk_context *ctx)$/;"	f
nk_free_page_element	lib/nuklear/nuklear.h	/^nk_free_page_element(struct nk_context *ctx, struct nk_page_element *elem)$/;"	f
nk_free_page_element	lib/nuklear/src/nuklear_page_element.c	/^nk_free_page_element(struct nk_context *ctx, struct nk_page_element *elem)$/;"	f
nk_free_panel	lib/nuklear/nuklear.h	/^nk_free_panel(struct nk_context *ctx, struct nk_panel *pan)$/;"	f
nk_free_panel	lib/nuklear/src/nuklear_panel.c	/^nk_free_panel(struct nk_context *ctx, struct nk_panel *pan)$/;"	f
nk_free_table	lib/nuklear/nuklear.h	/^nk_free_table(struct nk_context *ctx, struct nk_table *tbl)$/;"	f
nk_free_table	lib/nuklear/src/nuklear_table.c	/^nk_free_table(struct nk_context *ctx, struct nk_table *tbl)$/;"	f
nk_free_window	lib/nuklear/nuklear.h	/^nk_free_window(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_free_window	lib/nuklear/src/nuklear_window.c	/^nk_free_window(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_gdi_blit	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_blit(HDC dc)$/;"	f
nk_gdi_clear	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_clear(HDC dc, struct nk_color col)$/;"	f
nk_gdi_clipboard_copy	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_gdi_clipboard_paste	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_gdi_draw_image	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_draw_image(short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_gdi_draw_text	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_draw_text(HDC dc, short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_gdi_fill_circle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_circle(HDC dc, short x, short y, unsigned short w,$/;"	f
nk_gdi_fill_polygon	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_polygon(HDC dc, const struct nk_vec2i *pnts, int count, struct nk_color col)$/;"	f
nk_gdi_fill_rect	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_rect(HDC dc, short x, short y, unsigned short w,$/;"	f
nk_gdi_fill_triangle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_triangle(HDC dc, short x0, short y0, short x1,$/;"	f
nk_gdi_handle_event	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f
nk_gdi_init	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_init(GdiFont *gdifont, HDC window_dc, unsigned int width, unsigned int height)$/;"	f
nk_gdi_rect_multi_color	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_rect_multi_color(HDC dc, short x, short y, unsigned short w,$/;"	f
nk_gdi_render	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_render(struct nk_color clear)$/;"	f
nk_gdi_scissor	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_scissor(HDC dc, float x, float y, float w, float h)$/;"	f
nk_gdi_set_font	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_set_font(GdiFont *gdifont)$/;"	f
nk_gdi_set_vertexColor	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_set_vertexColor(PTRIVERTEX tri, struct nk_color col)$/;"	f
nk_gdi_shutdown	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_shutdown(void)$/;"	f
nk_gdi_stroke_circle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_circle(HDC dc, short x, short y, unsigned short w,$/;"	f
nk_gdi_stroke_curve	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_curve(HDC dc, struct nk_vec2i p1,$/;"	f
nk_gdi_stroke_line	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_line(HDC dc, short x0, short y0, short x1,$/;"	f
nk_gdi_stroke_polygon	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_polygon(HDC dc, const struct nk_vec2i *pnts, int count,$/;"	f
nk_gdi_stroke_polyline	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_polyline(HDC dc, const struct nk_vec2i *pnts,$/;"	f
nk_gdi_stroke_rect	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_rect(HDC dc, short x, short y, unsigned short w,$/;"	f
nk_gdi_stroke_triangle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_triangle(HDC dc, short x0, short y0, short x1,$/;"	f
nk_gdifont_create	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdifont_create(const char *name, int size)$/;"	f
nk_gdifont_del	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdifont_del(GdiFont *font)$/;"	f
nk_gdifont_get_text_width	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdifont_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_gdip_blit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_blit(GpGraphics *graphics)$/;"	f
nk_gdip_clear	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_clear(struct nk_color col)$/;"	f
nk_gdip_clipboard_copy	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_gdip_clipboard_paste	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_gdip_draw_image	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_draw_image(short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_gdip_draw_text	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_draw_text(short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_gdip_fill_circle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_circle(short x, short y, unsigned short w,$/;"	f
nk_gdip_fill_polygon	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_polygon(const struct nk_vec2i *pnts, int count, struct nk_color col)$/;"	f
nk_gdip_fill_rect	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_rect(short x, short y, unsigned short w,$/;"	f
nk_gdip_fill_triangle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_triangle(short x0, short y0, short x1,$/;"	f
nk_gdip_getCurFontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_getCurFontCollection(){$/;"	f
nk_gdip_handle_event	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f
nk_gdip_image_free	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_image_free(struct nk_image image)$/;"	f
nk_gdip_image_to_nk	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_image_to_nk(GpImage *image) {$/;"	f
nk_gdip_init	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_init(HWND hwnd, unsigned int width, unsigned int height)$/;"	f
nk_gdip_load_image_from_file	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_load_image_from_file(const WCHAR *filename)$/;"	f
nk_gdip_load_image_from_memory	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_load_image_from_memory(const void *membuf, nk_uint membufSize)$/;"	f
nk_gdip_prerender_gui	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_prerender_gui(enum nk_anti_aliasing AA)$/;"	f
nk_gdip_render	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_render(enum nk_anti_aliasing AA, struct nk_color clear)$/;"	f
nk_gdip_render_gui	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_render_gui(enum nk_anti_aliasing AA)$/;"	f
nk_gdip_scissor	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_scissor(float x, float y, float w, float h)$/;"	f
nk_gdip_set_font	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_set_font(GdipFont *gdipfont)$/;"	f
nk_gdip_shutdown	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_shutdown(void)$/;"	f
nk_gdip_stroke_circle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_circle(short x, short y, unsigned short w,$/;"	f
nk_gdip_stroke_curve	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_curve(struct nk_vec2i p1,$/;"	f
nk_gdip_stroke_line	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_line(short x0, short y0, short x1,$/;"	f
nk_gdip_stroke_polygon	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_polygon(const struct nk_vec2i *pnts, int count,$/;"	f
nk_gdip_stroke_polyline	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_polyline(const struct nk_vec2i *pnts,$/;"	f
nk_gdip_stroke_rect	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_rect(short x, short y, unsigned short w,$/;"	f
nk_gdip_stroke_triangle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_triangle(short x0, short y0, short x1,$/;"	f
nk_gdipfont_create	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create(const char *name, int size)$/;"	f
nk_gdipfont_create_from_collection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create_from_collection(int size){$/;"	f
nk_gdipfont_create_from_file	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create_from_file(const WCHAR* filename, int size)$/;"	f
nk_gdipfont_create_from_memory	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create_from_memory(const void* membuf, int membufSize, int size)$/;"	f
nk_gdipfont_del	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_del(GdipFont *font)$/;"	f
nk_gdipfont_get_text_width	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_get_null_rect	lib/nuklear/nuklear.h	/^nk_get_null_rect(void)$/;"	f
nk_get_null_rect	lib/nuklear/src/nuklear_math.c	/^nk_get_null_rect(void)$/;"	f
nk_gflw3_scroll_callback	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f
nk_gflw3_scroll_callback	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f
nk_gflw3_scroll_callback	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f
nk_gl_ext	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_gl_ext(const char *name)$/;"	f
nk_glfw	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^static struct nk_glfw {$/;"	s
nk_glfw	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^static struct nk_glfw {$/;"	s
nk_glfw	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^static struct nk_glfw {$/;"	s
nk_glfw3_char_callback	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f
nk_glfw3_char_callback	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f
nk_glfw3_char_callback	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f
nk_glfw3_clipboard_copy	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_glfw3_clipboard_copy	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_glfw3_clipboard_copy	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_glfw3_clipboard_paste	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_glfw3_clipboard_paste	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_glfw3_clipboard_paste	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_glfw3_create_texture	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_create_texture(const void* image, int width, int height)$/;"	f
nk_glfw3_destroy_texture	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_destroy_texture(int tex_index)$/;"	f
nk_glfw3_device_create	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_device_create(void)$/;"	f
nk_glfw3_device_create	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_device_create()$/;"	f
nk_glfw3_device_destroy	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_device_destroy(void)$/;"	f
nk_glfw3_device_destroy	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_device_destroy(void)$/;"	f
nk_glfw3_device_upload_atlas	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_glfw3_device_upload_atlas	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_glfw3_device_upload_atlas	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_glfw3_font_stash_begin	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_glfw3_font_stash_begin	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_glfw3_font_stash_begin	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_glfw3_font_stash_end	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_end(void)$/;"	f
nk_glfw3_font_stash_end	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_font_stash_end(void)$/;"	f
nk_glfw3_font_stash_end	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_font_stash_end(void)$/;"	f
nk_glfw3_get_available_tex_index	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_get_available_tex_index()$/;"	f
nk_glfw3_get_tex_ogl_handle	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_get_tex_ogl_handle(int tex_index)$/;"	f
nk_glfw3_get_tex_ogl_id	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_get_tex_ogl_id(int tex_index)$/;"	f
nk_glfw3_init	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state)$/;"	f
nk_glfw3_init	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state)$/;"	f
nk_glfw3_init	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state,$/;"	f
nk_glfw3_lock_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_lock_buffer()$/;"	f
nk_glfw3_mouse_button_callback	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f
nk_glfw3_mouse_button_callback	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f
nk_glfw3_mouse_button_callback	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f
nk_glfw3_new_frame	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_new_frame(void)$/;"	f
nk_glfw3_new_frame	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_new_frame(void)$/;"	f
nk_glfw3_new_frame	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_new_frame(void)$/;"	f
nk_glfw3_render	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_render(enum nk_anti_aliasing AA)$/;"	f
nk_glfw3_render	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f
nk_glfw3_render	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_render(enum nk_anti_aliasing AA)$/;"	f
nk_glfw3_shutdown	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^void nk_glfw3_shutdown(void)$/;"	f
nk_glfw3_shutdown	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^void nk_glfw3_shutdown(void)$/;"	f
nk_glfw3_shutdown	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^void nk_glfw3_shutdown(void)$/;"	f
nk_glfw3_wait_for_buffer_unlock	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_wait_for_buffer_unlock()$/;"	f
nk_glfw_device	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_device	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_device	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_init_state	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_init_state	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_init_state	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_vertex	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^struct nk_glfw_vertex {$/;"	s
nk_glfw_vertex	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^struct nk_glfw_vertex {$/;"	s
nk_glfw_vertex	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^struct nk_glfw_vertex {$/;"	s
nk_glfw_vertex	lib/nuklear/example/canvas.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glfw_vertex	lib/nuklear/example/extended.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glfw_vertex	lib/nuklear/example/file_browser.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glfw_vertex	lib/nuklear/example/skinning.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glyph	lib/nuklear/nuklear.h	/^typedef char nk_glyph[NK_UTF_SIZE];$/;"	t
nk_glyph	lib/nuklear/src/nuklear.h	/^typedef char nk_glyph[NK_UTF_SIZE];$/;"	t
nk_green	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_green = {0,255,0,255};$/;"	v	typeref:struct:nk_color
nk_green	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_green = {0,255,0,255};$/;"	v	typeref:struct:nk_color
nk_group_begin	lib/nuklear/nuklear.h	/^nk_group_begin(struct nk_context *ctx, const char *title, nk_flags flags)$/;"	f
nk_group_begin	lib/nuklear/src/nuklear_group.c	/^nk_group_begin(struct nk_context *ctx, const char *title, nk_flags flags)$/;"	f
nk_group_begin_titled	lib/nuklear/nuklear.h	/^nk_group_begin_titled(struct nk_context *ctx, const char *id,$/;"	f
nk_group_begin_titled	lib/nuklear/src/nuklear_group.c	/^nk_group_begin_titled(struct nk_context *ctx, const char *id,$/;"	f
nk_group_end	lib/nuklear/nuklear.h	/^nk_group_end(struct nk_context *ctx)$/;"	f
nk_group_end	lib/nuklear/src/nuklear_group.c	/^nk_group_end(struct nk_context *ctx)$/;"	f
nk_group_get_scroll	lib/nuklear/nuklear.h	/^nk_group_get_scroll(struct nk_context *ctx, const char *id, nk_uint *x_offset, nk_uint *y_offset)$/;"	f
nk_group_get_scroll	lib/nuklear/src/nuklear_group.c	/^nk_group_get_scroll(struct nk_context *ctx, const char *id, nk_uint *x_offset, nk_uint *y_offset)$/;"	f
nk_group_scrolled_begin	lib/nuklear/nuklear.h	/^nk_group_scrolled_begin(struct nk_context *ctx,$/;"	f
nk_group_scrolled_begin	lib/nuklear/src/nuklear_group.c	/^nk_group_scrolled_begin(struct nk_context *ctx,$/;"	f
nk_group_scrolled_end	lib/nuklear/nuklear.h	/^nk_group_scrolled_end(struct nk_context *ctx)$/;"	f
nk_group_scrolled_end	lib/nuklear/src/nuklear_group.c	/^nk_group_scrolled_end(struct nk_context *ctx)$/;"	f
nk_group_scrolled_offset_begin	lib/nuklear/nuklear.h	/^nk_group_scrolled_offset_begin(struct nk_context *ctx,$/;"	f
nk_group_scrolled_offset_begin	lib/nuklear/src/nuklear_group.c	/^nk_group_scrolled_offset_begin(struct nk_context *ctx,$/;"	f
nk_group_set_scroll	lib/nuklear/nuklear.h	/^nk_group_set_scroll(struct nk_context *ctx, const char *id, nk_uint x_offset, nk_uint y_offset)$/;"	f
nk_group_set_scroll	lib/nuklear/src/nuklear_group.c	/^nk_group_set_scroll(struct nk_context *ctx, const char *id, nk_uint x_offset, nk_uint y_offset)$/;"	f
nk_handle	lib/nuklear/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	t	typeref:union:__anon132
nk_handle	lib/nuklear/src/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	t	typeref:union:__anon161
nk_handle_id	lib/nuklear/nuklear.h	/^nk_handle_id(int id)$/;"	f
nk_handle_id	lib/nuklear/src/nuklear_image.c	/^nk_handle_id(int id)$/;"	f
nk_handle_ptr	lib/nuklear/nuklear.h	/^nk_handle_ptr(void *ptr)$/;"	f
nk_handle_ptr	lib/nuklear/src/nuklear_image.c	/^nk_handle_ptr(void *ptr)$/;"	f
nk_hash	lib/nuklear/nuklear.h	/^typedef nk_uint nk_hash;$/;"	t
nk_hash	lib/nuklear/src/nuklear.h	/^typedef nk_uint nk_hash;$/;"	t
nk_heading	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	g
nk_heading	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	g
nk_helper	lib/nuklear/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	s
nk_helper	lib/nuklear/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	s
nk_helper	lib/nuklear/src/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	s
nk_helper	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	s
nk_hsv	lib/nuklear/nuklear.h	/^nk_hsv(int h, int s, int v)$/;"	f
nk_hsv	lib/nuklear/src/nuklear_color.c	/^nk_hsv(int h, int s, int v)$/;"	f
nk_hsv_bv	lib/nuklear/nuklear.h	/^nk_hsv_bv(const nk_byte *c)$/;"	f
nk_hsv_bv	lib/nuklear/src/nuklear_color.c	/^nk_hsv_bv(const nk_byte *c)$/;"	f
nk_hsv_f	lib/nuklear/nuklear.h	/^nk_hsv_f(float h, float s, float v)$/;"	f
nk_hsv_f	lib/nuklear/src/nuklear_color.c	/^nk_hsv_f(float h, float s, float v)$/;"	f
nk_hsv_fv	lib/nuklear/nuklear.h	/^nk_hsv_fv(const float *c)$/;"	f
nk_hsv_fv	lib/nuklear/src/nuklear_color.c	/^nk_hsv_fv(const float *c)$/;"	f
nk_hsv_iv	lib/nuklear/nuklear.h	/^nk_hsv_iv(const int *c)$/;"	f
nk_hsv_iv	lib/nuklear/src/nuklear_color.c	/^nk_hsv_iv(const int *c)$/;"	f
nk_hsva	lib/nuklear/nuklear.h	/^nk_hsva(int h, int s, int v, int a)$/;"	f
nk_hsva	lib/nuklear/src/nuklear_color.c	/^nk_hsva(int h, int s, int v, int a)$/;"	f
nk_hsva_bv	lib/nuklear/nuklear.h	/^nk_hsva_bv(const nk_byte *c)$/;"	f
nk_hsva_bv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_bv(const nk_byte *c)$/;"	f
nk_hsva_colorf	lib/nuklear/nuklear.h	/^nk_hsva_colorf(float h, float s, float v, float a)$/;"	f
nk_hsva_colorf	lib/nuklear/src/nuklear_color.c	/^nk_hsva_colorf(float h, float s, float v, float a)$/;"	f
nk_hsva_colorfv	lib/nuklear/nuklear.h	/^nk_hsva_colorfv(float *c)$/;"	f
nk_hsva_colorfv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_colorfv(float *c)$/;"	f
nk_hsva_f	lib/nuklear/nuklear.h	/^nk_hsva_f(float h, float s, float v, float a)$/;"	f
nk_hsva_f	lib/nuklear/src/nuklear_color.c	/^nk_hsva_f(float h, float s, float v, float a)$/;"	f
nk_hsva_fv	lib/nuklear/nuklear.h	/^nk_hsva_fv(const float *c)$/;"	f
nk_hsva_fv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_fv(const float *c)$/;"	f
nk_hsva_iv	lib/nuklear/nuklear.h	/^nk_hsva_iv(const int *c)$/;"	f
nk_hsva_iv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_iv(const int *c)$/;"	f
nk_iceilf	lib/nuklear/nuklear.h	/^nk_iceilf(float x)$/;"	f
nk_iceilf	lib/nuklear/src/nuklear_math.c	/^nk_iceilf(float x)$/;"	f
nk_ifloord	lib/nuklear/nuklear.h	/^nk_ifloord(double x)$/;"	f
nk_ifloord	lib/nuklear/src/nuklear_math.c	/^nk_ifloord(double x)$/;"	f
nk_ifloorf	lib/nuklear/nuklear.h	/^nk_ifloorf(float x)$/;"	f
nk_ifloorf	lib/nuklear/src/nuklear_math.c	/^nk_ifloorf(float x)$/;"	f
nk_image	lib/nuklear/nuklear.h	/^nk_image(struct nk_context *ctx, struct nk_image img)$/;"	f
nk_image	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	s
nk_image	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	s
nk_image	lib/nuklear/src/nuklear_image.c	/^nk_image(struct nk_context *ctx, struct nk_image img)$/;"	f
nk_image_color	lib/nuklear/nuklear.h	/^nk_image_color(struct nk_context *ctx, struct nk_image img, struct nk_color col)$/;"	f
nk_image_color	lib/nuklear/src/nuklear_image.c	/^nk_image_color(struct nk_context *ctx, struct nk_image img, struct nk_color col)$/;"	f
nk_image_handle	lib/nuklear/nuklear.h	/^nk_image_handle(nk_handle handle)$/;"	f
nk_image_handle	lib/nuklear/src/nuklear_image.c	/^nk_image_handle(nk_handle handle)$/;"	f
nk_image_id	lib/nuklear/nuklear.h	/^nk_image_id(int id)$/;"	f
nk_image_id	lib/nuklear/src/nuklear_image.c	/^nk_image_id(int id)$/;"	f
nk_image_is_subimage	lib/nuklear/nuklear.h	/^nk_image_is_subimage(const struct nk_image* img)$/;"	f
nk_image_is_subimage	lib/nuklear/src/nuklear_image.c	/^nk_image_is_subimage(const struct nk_image* img)$/;"	f
nk_image_ptr	lib/nuklear/nuklear.h	/^nk_image_ptr(void *ptr)$/;"	f
nk_image_ptr	lib/nuklear/src/nuklear_image.c	/^nk_image_ptr(void *ptr)$/;"	f
nk_init	lib/nuklear/nuklear.h	/^nk_init(struct nk_context *ctx, struct nk_allocator *alloc,$/;"	f
nk_init	lib/nuklear/src/nuklear_context.c	/^nk_init(struct nk_context *ctx, struct nk_allocator *alloc,$/;"	f
nk_init_custom	lib/nuklear/nuklear.h	/^nk_init_custom(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f
nk_init_custom	lib/nuklear/src/nuklear_context.c	/^nk_init_custom(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f
nk_init_default	lib/nuklear/nuklear.h	/^nk_init_default(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_init_default	lib/nuklear/src/nuklear_context.c	/^nk_init_default(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_init_fixed	lib/nuklear/nuklear.h	/^nk_init_fixed(struct nk_context *ctx, void *memory, nk_size size,$/;"	f
nk_init_fixed	lib/nuklear/src/nuklear_context.c	/^nk_init_fixed(struct nk_context *ctx, void *memory, nk_size size,$/;"	f
nk_input	lib/nuklear/nuklear.h	/^struct nk_input {$/;"	s
nk_input	lib/nuklear/src/nuklear.h	/^struct nk_input {$/;"	s
nk_input_any_mouse_click_in_rect	lib/nuklear/nuklear.h	/^nk_input_any_mouse_click_in_rect(const struct nk_input *in, struct nk_rect b)$/;"	f
nk_input_any_mouse_click_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_any_mouse_click_in_rect(const struct nk_input *in, struct nk_rect b)$/;"	f
nk_input_begin	lib/nuklear/nuklear.h	/^nk_input_begin(struct nk_context *ctx)$/;"	f
nk_input_begin	lib/nuklear/src/nuklear_input.c	/^nk_input_begin(struct nk_context *ctx)$/;"	f
nk_input_button	lib/nuklear/nuklear.h	/^nk_input_button(struct nk_context *ctx, enum nk_buttons id, int x, int y, int down)$/;"	f
nk_input_button	lib/nuklear/src/nuklear_input.c	/^nk_input_button(struct nk_context *ctx, enum nk_buttons id, int x, int y, int down)$/;"	f
nk_input_char	lib/nuklear/nuklear.h	/^nk_input_char(struct nk_context *ctx, char c)$/;"	f
nk_input_char	lib/nuklear/src/nuklear_input.c	/^nk_input_char(struct nk_context *ctx, char c)$/;"	f
nk_input_end	lib/nuklear/nuklear.h	/^nk_input_end(struct nk_context *ctx)$/;"	f
nk_input_end	lib/nuklear/src/nuklear_input.c	/^nk_input_end(struct nk_context *ctx)$/;"	f
nk_input_glyph	lib/nuklear/nuklear.h	/^nk_input_glyph(struct nk_context *ctx, const nk_glyph glyph)$/;"	f
nk_input_glyph	lib/nuklear/src/nuklear_input.c	/^nk_input_glyph(struct nk_context *ctx, const nk_glyph glyph)$/;"	f
nk_input_has_mouse_click	lib/nuklear/nuklear.h	/^nk_input_has_mouse_click(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_has_mouse_click	lib/nuklear/src/nuklear_input.c	/^nk_input_has_mouse_click(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_has_mouse_click_down_in_rect	lib/nuklear/nuklear.h	/^nk_input_has_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_has_mouse_click_down_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_has_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_has_mouse_click_in_rect	lib/nuklear/nuklear.h	/^nk_input_has_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_has_mouse_click_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_has_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_key_down	lib/nuklear/nuklear.h	/^nk_input_is_key_down(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_key_down	lib/nuklear/src/nuklear_input.c	/^nk_input_is_key_down(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_key_pressed	lib/nuklear/nuklear.h	/^nk_input_is_key_pressed(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_key_pressed	lib/nuklear/src/nuklear_input.c	/^nk_input_is_key_pressed(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_key_released	lib/nuklear/nuklear.h	/^nk_input_is_key_released(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_key_released	lib/nuklear/src/nuklear_input.c	/^nk_input_is_key_released(const struct nk_input *i, enum nk_keys key)$/;"	f
nk_input_is_mouse_click_down_in_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_mouse_click_down_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_mouse_click_in_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_mouse_click_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f
nk_input_is_mouse_down	lib/nuklear/nuklear.h	/^nk_input_is_mouse_down(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_is_mouse_down	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_down(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_is_mouse_hovering_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f
nk_input_is_mouse_hovering_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f
nk_input_is_mouse_pressed	lib/nuklear/nuklear.h	/^nk_input_is_mouse_pressed(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_is_mouse_pressed	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_pressed(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_is_mouse_prev_hovering_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_prev_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f
nk_input_is_mouse_prev_hovering_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_prev_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f
nk_input_is_mouse_released	lib/nuklear/nuklear.h	/^nk_input_is_mouse_released(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_is_mouse_released	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_released(const struct nk_input *i, enum nk_buttons id)$/;"	f
nk_input_key	lib/nuklear/nuklear.h	/^nk_input_key(struct nk_context *ctx, enum nk_keys key, int down)$/;"	f
nk_input_key	lib/nuklear/src/nuklear_input.c	/^nk_input_key(struct nk_context *ctx, enum nk_keys key, int down)$/;"	f
nk_input_motion	lib/nuklear/nuklear.h	/^nk_input_motion(struct nk_context *ctx, int x, int y)$/;"	f
nk_input_motion	lib/nuklear/src/nuklear_input.c	/^nk_input_motion(struct nk_context *ctx, int x, int y)$/;"	f
nk_input_mouse_clicked	lib/nuklear/nuklear.h	/^nk_input_mouse_clicked(const struct nk_input *i, enum nk_buttons id, struct nk_rect rect)$/;"	f
nk_input_mouse_clicked	lib/nuklear/src/nuklear_input.c	/^nk_input_mouse_clicked(const struct nk_input *i, enum nk_buttons id, struct nk_rect rect)$/;"	f
nk_input_scroll	lib/nuklear/nuklear.h	/^nk_input_scroll(struct nk_context *ctx, struct nk_vec2 val)$/;"	f
nk_input_scroll	lib/nuklear/src/nuklear_input.c	/^nk_input_scroll(struct nk_context *ctx, struct nk_vec2 val)$/;"	f
nk_input_unicode	lib/nuklear/nuklear.h	/^nk_input_unicode(struct nk_context *ctx, nk_rune unicode)$/;"	f
nk_input_unicode	lib/nuklear/src/nuklear_input.c	/^nk_input_unicode(struct nk_context *ctx, nk_rune unicode)$/;"	f
nk_insert_window	lib/nuklear/nuklear.h	/^nk_insert_window(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_insert_window	lib/nuklear/src/nuklear_window.c	/^nk_insert_window(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_int	lib/nuklear/nuklear.h	/^typedef NK_INT32 nk_int;$/;"	t
nk_int	lib/nuklear/src/nuklear.h	/^typedef NK_INT32 nk_int;$/;"	t
nk_inv_sqrt	lib/nuklear/nuklear.h	/^nk_inv_sqrt(float n)$/;"	f
nk_inv_sqrt	lib/nuklear/src/nuklear_math.c	/^nk_inv_sqrt(float n)$/;"	f
nk_is_lower	lib/nuklear/nuklear.h	/^NK_LIB int nk_is_lower(int c) {return (c >= 'a' && c <= 'z') || (c >= 0xE0 && c <= 0xFF);}$/;"	f
nk_is_lower	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_is_lower(int c) {return (c >= 'a' && c <= 'z') || (c >= 0xE0 && c <= 0xFF);}$/;"	f
nk_is_upper	lib/nuklear/nuklear.h	/^NK_LIB int nk_is_upper(int c){return (c >= 'A' && c <= 'Z') || (c >= 0xC0 && c <= 0xDF);}$/;"	f
nk_is_upper	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_is_upper(int c){return (c >= 'A' && c <= 'Z') || (c >= 0xC0 && c <= 0xDF);}$/;"	f
nk_is_word_boundary	lib/nuklear/nuklear.h	/^nk_is_word_boundary( struct nk_text_edit *state, int idx)$/;"	f
nk_is_word_boundary	lib/nuklear/src/nuklear_text_editor.c	/^nk_is_word_boundary( struct nk_text_edit *state, int idx)$/;"	f
nk_item_is_any_active	lib/nuklear/nuklear.h	/^nk_item_is_any_active(struct nk_context *ctx)$/;"	f
nk_item_is_any_active	lib/nuklear/src/nuklear_window.c	/^nk_item_is_any_active(struct nk_context *ctx)$/;"	f
nk_itoa	lib/nuklear/nuklear.h	/^nk_itoa(char *s, long n)$/;"	f
nk_itoa	lib/nuklear/src/nuklear_util.c	/^nk_itoa(char *s, long n)$/;"	f
nk_key	lib/nuklear/nuklear.h	/^struct nk_key {$/;"	s
nk_key	lib/nuklear/src/nuklear.h	/^struct nk_key {$/;"	s
nk_keyboard	lib/nuklear/nuklear.h	/^struct nk_keyboard {$/;"	s
nk_keyboard	lib/nuklear/src/nuklear.h	/^struct nk_keyboard {$/;"	s
nk_keys	lib/nuklear/nuklear.h	/^enum nk_keys {$/;"	g
nk_keys	lib/nuklear/src/nuklear.h	/^enum nk_keys {$/;"	g
nk_label	lib/nuklear/nuklear.h	/^nk_label(struct nk_context *ctx, const char *str, nk_flags alignment)$/;"	f
nk_label	lib/nuklear/src/nuklear_text.c	/^nk_label(struct nk_context *ctx, const char *str, nk_flags alignment)$/;"	f
nk_label_colored	lib/nuklear/nuklear.h	/^nk_label_colored(struct nk_context *ctx, const char *str, nk_flags align,$/;"	f
nk_label_colored	lib/nuklear/src/nuklear_text.c	/^nk_label_colored(struct nk_context *ctx, const char *str, nk_flags align,$/;"	f
nk_label_colored_wrap	lib/nuklear/nuklear.h	/^nk_label_colored_wrap(struct nk_context *ctx, const char *str, struct nk_color color)$/;"	f
nk_label_colored_wrap	lib/nuklear/src/nuklear_text.c	/^nk_label_colored_wrap(struct nk_context *ctx, const char *str, struct nk_color color)$/;"	f
nk_label_wrap	lib/nuklear/nuklear.h	/^nk_label_wrap(struct nk_context *ctx, const char *str)$/;"	f
nk_label_wrap	lib/nuklear/src/nuklear_text.c	/^nk_label_wrap(struct nk_context *ctx, const char *str)$/;"	f
nk_labelf	lib/nuklear/nuklear.h	/^nk_labelf(struct nk_context *ctx, nk_flags flags, const char *fmt, ...)$/;"	f
nk_labelf	lib/nuklear/src/nuklear_text.c	/^nk_labelf(struct nk_context *ctx, nk_flags flags, const char *fmt, ...)$/;"	f
nk_labelf_colored	lib/nuklear/nuklear.h	/^nk_labelf_colored(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_labelf_colored	lib/nuklear/src/nuklear_text.c	/^nk_labelf_colored(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_labelf_colored_wrap	lib/nuklear/nuklear.h	/^nk_labelf_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f
nk_labelf_colored_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelf_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f
nk_labelf_wrap	lib/nuklear/nuklear.h	/^nk_labelf_wrap(struct nk_context *ctx, const char *fmt,...)$/;"	f
nk_labelf_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelf_wrap(struct nk_context *ctx, const char *fmt,...)$/;"	f
nk_labelfv	lib/nuklear/nuklear.h	/^nk_labelfv(struct nk_context *ctx, nk_flags flags, const char *fmt, va_list args)$/;"	f
nk_labelfv	lib/nuklear/src/nuklear_text.c	/^nk_labelfv(struct nk_context *ctx, nk_flags flags, const char *fmt, va_list args)$/;"	f
nk_labelfv_colored	lib/nuklear/nuklear.h	/^nk_labelfv_colored(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_labelfv_colored	lib/nuklear/src/nuklear_text.c	/^nk_labelfv_colored(struct nk_context *ctx, nk_flags flags,$/;"	f
nk_labelfv_colored_wrap	lib/nuklear/nuklear.h	/^nk_labelfv_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f
nk_labelfv_colored_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelfv_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f
nk_labelfv_wrap	lib/nuklear/nuklear.h	/^nk_labelfv_wrap(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f
nk_labelfv_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelfv_wrap(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f
nk_layout_format	lib/nuklear/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	g
nk_layout_format	lib/nuklear/src/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	g
nk_layout_peek	lib/nuklear/nuklear.h	/^nk_layout_peek(struct nk_rect *bounds, struct nk_context *ctx)$/;"	f
nk_layout_peek	lib/nuklear/src/nuklear_layout.c	/^nk_layout_peek(struct nk_rect *bounds, struct nk_context *ctx)$/;"	f
nk_layout_ratio_from_pixel	lib/nuklear/nuklear.h	/^nk_layout_ratio_from_pixel(struct nk_context *ctx, float pixel_width)$/;"	f
nk_layout_ratio_from_pixel	lib/nuklear/src/nuklear_layout.c	/^nk_layout_ratio_from_pixel(struct nk_context *ctx, float pixel_width)$/;"	f
nk_layout_reset_min_row_height	lib/nuklear/nuklear.h	/^nk_layout_reset_min_row_height(struct nk_context *ctx)$/;"	f
nk_layout_reset_min_row_height	lib/nuklear/src/nuklear_layout.c	/^nk_layout_reset_min_row_height(struct nk_context *ctx)$/;"	f
nk_layout_row	lib/nuklear/nuklear.h	/^nk_layout_row(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_row	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_row_begin	lib/nuklear/nuklear.h	/^nk_layout_row_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_row_begin	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_row_calculate_usable_space	lib/nuklear/nuklear.h	/^nk_layout_row_calculate_usable_space(const struct nk_style *style, enum nk_panel_type type,$/;"	f
nk_layout_row_calculate_usable_space	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_calculate_usable_space(const struct nk_style *style, enum nk_panel_type type,$/;"	f
nk_layout_row_dynamic	lib/nuklear/nuklear.h	/^nk_layout_row_dynamic(struct nk_context *ctx, float height, int cols)$/;"	f
nk_layout_row_dynamic	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_dynamic(struct nk_context *ctx, float height, int cols)$/;"	f
nk_layout_row_end	lib/nuklear/nuklear.h	/^nk_layout_row_end(struct nk_context *ctx)$/;"	f
nk_layout_row_end	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_end(struct nk_context *ctx)$/;"	f
nk_layout_row_push	lib/nuklear/nuklear.h	/^nk_layout_row_push(struct nk_context *ctx, float ratio_or_width)$/;"	f
nk_layout_row_push	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_push(struct nk_context *ctx, float ratio_or_width)$/;"	f
nk_layout_row_static	lib/nuklear/nuklear.h	/^nk_layout_row_static(struct nk_context *ctx, float height, int item_width, int cols)$/;"	f
nk_layout_row_static	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_static(struct nk_context *ctx, float height, int item_width, int cols)$/;"	f
nk_layout_row_template_begin	lib/nuklear/nuklear.h	/^nk_layout_row_template_begin(struct nk_context *ctx, float height)$/;"	f
nk_layout_row_template_begin	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_begin(struct nk_context *ctx, float height)$/;"	f
nk_layout_row_template_end	lib/nuklear/nuklear.h	/^nk_layout_row_template_end(struct nk_context *ctx)$/;"	f
nk_layout_row_template_end	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_end(struct nk_context *ctx)$/;"	f
nk_layout_row_template_push_dynamic	lib/nuklear/nuklear.h	/^nk_layout_row_template_push_dynamic(struct nk_context *ctx)$/;"	f
nk_layout_row_template_push_dynamic	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_push_dynamic(struct nk_context *ctx)$/;"	f
nk_layout_row_template_push_static	lib/nuklear/nuklear.h	/^nk_layout_row_template_push_static(struct nk_context *ctx, float width)$/;"	f
nk_layout_row_template_push_static	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_push_static(struct nk_context *ctx, float width)$/;"	f
nk_layout_row_template_push_variable	lib/nuklear/nuklear.h	/^nk_layout_row_template_push_variable(struct nk_context *ctx, float min_width)$/;"	f
nk_layout_row_template_push_variable	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_push_variable(struct nk_context *ctx, float min_width)$/;"	f
nk_layout_set_min_row_height	lib/nuklear/nuklear.h	/^nk_layout_set_min_row_height(struct nk_context *ctx, float height)$/;"	f
nk_layout_set_min_row_height	lib/nuklear/src/nuklear_layout.c	/^nk_layout_set_min_row_height(struct nk_context *ctx, float height)$/;"	f
nk_layout_space_begin	lib/nuklear/nuklear.h	/^nk_layout_space_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_space_begin	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_layout_space_bounds	lib/nuklear/nuklear.h	/^nk_layout_space_bounds(struct nk_context *ctx)$/;"	f
nk_layout_space_bounds	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_bounds(struct nk_context *ctx)$/;"	f
nk_layout_space_end	lib/nuklear/nuklear.h	/^nk_layout_space_end(struct nk_context *ctx)$/;"	f
nk_layout_space_end	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_end(struct nk_context *ctx)$/;"	f
nk_layout_space_push	lib/nuklear/nuklear.h	/^nk_layout_space_push(struct nk_context *ctx, struct nk_rect rect)$/;"	f
nk_layout_space_push	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_push(struct nk_context *ctx, struct nk_rect rect)$/;"	f
nk_layout_space_rect_to_local	lib/nuklear/nuklear.h	/^nk_layout_space_rect_to_local(struct nk_context *ctx, struct nk_rect ret)$/;"	f
nk_layout_space_rect_to_local	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_rect_to_local(struct nk_context *ctx, struct nk_rect ret)$/;"	f
nk_layout_space_rect_to_screen	lib/nuklear/nuklear.h	/^nk_layout_space_rect_to_screen(struct nk_context *ctx, struct nk_rect ret)$/;"	f
nk_layout_space_rect_to_screen	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_rect_to_screen(struct nk_context *ctx, struct nk_rect ret)$/;"	f
nk_layout_space_to_local	lib/nuklear/nuklear.h	/^nk_layout_space_to_local(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f
nk_layout_space_to_local	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_to_local(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f
nk_layout_space_to_screen	lib/nuklear/nuklear.h	/^nk_layout_space_to_screen(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f
nk_layout_space_to_screen	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_to_screen(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f
nk_layout_widget_bounds	lib/nuklear/nuklear.h	/^nk_layout_widget_bounds(struct nk_context *ctx)$/;"	f
nk_layout_widget_bounds	lib/nuklear/src/nuklear_layout.c	/^nk_layout_widget_bounds(struct nk_context *ctx)$/;"	f
nk_layout_widget_space	lib/nuklear/nuklear.h	/^nk_layout_widget_space(struct nk_rect *bounds, const struct nk_context *ctx,$/;"	f
nk_layout_widget_space	lib/nuklear/src/nuklear_layout.c	/^nk_layout_widget_space(struct nk_rect *bounds, const struct nk_context *ctx,$/;"	f
nk_link_page_element_into_freelist	lib/nuklear/nuklear.h	/^nk_link_page_element_into_freelist(struct nk_context *ctx,$/;"	f
nk_link_page_element_into_freelist	lib/nuklear/src/nuklear_page_element.c	/^nk_link_page_element_into_freelist(struct nk_context *ctx,$/;"	f
nk_list_view	lib/nuklear/nuklear.h	/^struct nk_list_view {$/;"	s
nk_list_view	lib/nuklear/src/nuklear.h	/^struct nk_list_view {$/;"	s
nk_list_view_begin	lib/nuklear/nuklear.h	/^nk_list_view_begin(struct nk_context *ctx, struct nk_list_view *view,$/;"	f
nk_list_view_begin	lib/nuklear/src/nuklear_list_view.c	/^nk_list_view_begin(struct nk_context *ctx, struct nk_list_view *view,$/;"	f
nk_list_view_end	lib/nuklear/nuklear.h	/^nk_list_view_end(struct nk_list_view *view)$/;"	f
nk_list_view_end	lib/nuklear/src/nuklear_list_view.c	/^nk_list_view_end(struct nk_list_view *view)$/;"	f
nk_load_opengl	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_load_opengl(struct opengl_info *gl)$/;"	f
nk_log10	lib/nuklear/nuklear.h	/^nk_log10(double n)$/;"	f
nk_log10	lib/nuklear/src/nuklear_math.c	/^nk_log10(double n)$/;"	f
nk_malloc	lib/nuklear/nuklear.h	/^nk_malloc(nk_handle unused, void *old,nk_size size)$/;"	f
nk_malloc	lib/nuklear/src/nuklear_buffer.c	/^nk_malloc(nk_handle unused, void *old,nk_size size)$/;"	f
nk_memcopy	lib/nuklear/nuklear.h	/^nk_memcopy(void *dst0, const void *src0, nk_size length)$/;"	f
nk_memcopy	lib/nuklear/src/nuklear_util.c	/^nk_memcopy(void *dst0, const void *src0, nk_size length)$/;"	f
nk_memory	lib/nuklear/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	s
nk_memory	lib/nuklear/src/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	s
nk_memory_status	lib/nuklear/nuklear.h	/^struct nk_memory_status {$/;"	s
nk_memory_status	lib/nuklear/src/nuklear.h	/^struct nk_memory_status {$/;"	s
nk_memset	lib/nuklear/nuklear.h	/^nk_memset(void *ptr, int c0, nk_size size)$/;"	f
nk_memset	lib/nuklear/src/nuklear_util.c	/^nk_memset(void *ptr, int c0, nk_size size)$/;"	f
nk_menu_begin	lib/nuklear/nuklear.h	/^nk_menu_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_menu_begin	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_menu_begin_image	lib/nuklear/nuklear.h	/^nk_menu_begin_image(struct nk_context *ctx, const char *id, struct nk_image img,$/;"	f
nk_menu_begin_image	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_image(struct nk_context *ctx, const char *id, struct nk_image img,$/;"	f
nk_menu_begin_image_label	lib/nuklear/nuklear.h	/^nk_menu_begin_image_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_image_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_image_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_image_text	lib/nuklear/nuklear.h	/^nk_menu_begin_image_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_begin_image_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_image_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_begin_label	lib/nuklear/nuklear.h	/^NK_API int nk_menu_begin_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_label	lib/nuklear/src/nuklear_menu.c	/^NK_API int nk_menu_begin_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_symbol	lib/nuklear/nuklear.h	/^nk_menu_begin_symbol(struct nk_context *ctx, const char *id,$/;"	f
nk_menu_begin_symbol	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_symbol(struct nk_context *ctx, const char *id,$/;"	f
nk_menu_begin_symbol_label	lib/nuklear/nuklear.h	/^nk_menu_begin_symbol_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_symbol_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_symbol_label(struct nk_context *ctx,$/;"	f
nk_menu_begin_symbol_text	lib/nuklear/nuklear.h	/^nk_menu_begin_symbol_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_begin_symbol_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_symbol_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_begin_text	lib/nuklear/nuklear.h	/^nk_menu_begin_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_begin_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_text(struct nk_context *ctx, const char *title, int len,$/;"	f
nk_menu_close	lib/nuklear/nuklear.h	/^NK_API void nk_menu_close(struct nk_context *ctx)$/;"	f
nk_menu_close	lib/nuklear/src/nuklear_menu.c	/^NK_API void nk_menu_close(struct nk_context *ctx)$/;"	f
nk_menu_end	lib/nuklear/nuklear.h	/^nk_menu_end(struct nk_context *ctx)$/;"	f
nk_menu_end	lib/nuklear/src/nuklear_menu.c	/^nk_menu_end(struct nk_context *ctx)$/;"	f
nk_menu_item_image_label	lib/nuklear/nuklear.h	/^nk_menu_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_menu_item_image_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_menu_item_image_text	lib/nuklear/nuklear.h	/^nk_menu_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_menu_item_image_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_menu_item_label	lib/nuklear/nuklear.h	/^nk_menu_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_menu_item_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f
nk_menu_item_symbol_label	lib/nuklear/nuklear.h	/^NK_API int nk_menu_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_menu_item_symbol_label	lib/nuklear/src/nuklear_menu.c	/^NK_API int nk_menu_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_menu_item_symbol_text	lib/nuklear/nuklear.h	/^NK_API int nk_menu_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_menu_item_symbol_text	lib/nuklear/src/nuklear_menu.c	/^NK_API int nk_menu_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_menu_item_text	lib/nuklear/nuklear.h	/^nk_menu_item_text(struct nk_context *ctx, const char *title, int len, nk_flags align)$/;"	f
nk_menu_item_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_text(struct nk_context *ctx, const char *title, int len, nk_flags align)$/;"	f
nk_menu_state	lib/nuklear/nuklear.h	/^struct nk_menu_state {$/;"	s
nk_menu_state	lib/nuklear/src/nuklear.h	/^struct nk_menu_state {$/;"	s
nk_menubar_begin	lib/nuklear/nuklear.h	/^nk_menubar_begin(struct nk_context *ctx)$/;"	f
nk_menubar_begin	lib/nuklear/src/nuklear_menu.c	/^nk_menubar_begin(struct nk_context *ctx)$/;"	f
nk_menubar_end	lib/nuklear/nuklear.h	/^nk_menubar_end(struct nk_context *ctx)$/;"	f
nk_menubar_end	lib/nuklear/src/nuklear_menu.c	/^nk_menubar_end(struct nk_context *ctx)$/;"	f
nk_mfree	lib/nuklear/nuklear.h	/^nk_mfree(nk_handle unused, void *ptr)$/;"	f
nk_mfree	lib/nuklear/src/nuklear_buffer.c	/^nk_mfree(nk_handle unused, void *ptr)$/;"	f
nk_modify	lib/nuklear/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	g
nk_modify	lib/nuklear/src/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	g
nk_mouse	lib/nuklear/nuklear.h	/^struct nk_mouse {$/;"	s
nk_mouse	lib/nuklear/src/nuklear.h	/^struct nk_mouse {$/;"	s
nk_mouse_button	lib/nuklear/nuklear.h	/^struct nk_mouse_button {$/;"	s
nk_mouse_button	lib/nuklear/src/nuklear.h	/^struct nk_mouse_button {$/;"	s
nk_murmur_hash	lib/nuklear/nuklear.h	/^nk_murmur_hash(const void * key, int len, nk_hash seed)$/;"	f
nk_murmur_hash	lib/nuklear/src/nuklear_util.c	/^nk_murmur_hash(const void * key, int len, nk_hash seed)$/;"	f
nk_nonblock_begin	lib/nuklear/nuklear.h	/^nk_nonblock_begin(struct nk_context *ctx,$/;"	f
nk_nonblock_begin	lib/nuklear/src/nuklear_popup.c	/^nk_nonblock_begin(struct nk_context *ctx,$/;"	f
nk_null_rect	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_rect nk_null_rect = {-8192.0f, -8192.0f, 16384, 16384};$/;"	v	typeref:struct:nk_rect
nk_null_rect	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_rect nk_null_rect = {-8192.0f, -8192.0f, 16384, 16384};$/;"	v	typeref:struct:nk_rect
nk_option_label	lib/nuklear/nuklear.h	/^nk_option_label(struct nk_context *ctx, const char *label, int active)$/;"	f
nk_option_label	lib/nuklear/src/nuklear_toggle.c	/^nk_option_label(struct nk_context *ctx, const char *label, int active)$/;"	f
nk_option_text	lib/nuklear/nuklear.h	/^nk_option_text(struct nk_context *ctx, const char *text, int len, int is_active)$/;"	f
nk_option_text	lib/nuklear/src/nuklear_toggle.c	/^nk_option_text(struct nk_context *ctx, const char *text, int len, int is_active)$/;"	f
nk_orientation	lib/nuklear/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	g
nk_orientation	lib/nuklear/src/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	g
nk_pad_rect	lib/nuklear/nuklear.h	/^nk_pad_rect(struct nk_rect r, struct nk_vec2 pad)$/;"	f
nk_pad_rect	lib/nuklear/src/nuklear_math.c	/^nk_pad_rect(struct nk_rect r, struct nk_vec2 pad)$/;"	f
nk_page	lib/nuklear/nuklear.h	/^struct nk_page {$/;"	s
nk_page	lib/nuklear/src/nuklear.h	/^struct nk_page {$/;"	s
nk_page_data	lib/nuklear/nuklear.h	/^union nk_page_data {$/;"	u
nk_page_data	lib/nuklear/src/nuklear.h	/^union nk_page_data {$/;"	u
nk_page_element	lib/nuklear/nuklear.h	/^struct nk_page_element {$/;"	s
nk_page_element	lib/nuklear/src/nuklear.h	/^struct nk_page_element {$/;"	s
nk_panel	lib/nuklear/nuklear.h	/^struct nk_panel {$/;"	s
nk_panel	lib/nuklear/src/nuklear.h	/^struct nk_panel {$/;"	s
nk_panel_alloc_row	lib/nuklear/nuklear.h	/^nk_panel_alloc_row(const struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_panel_alloc_row	lib/nuklear/src/nuklear_layout.c	/^nk_panel_alloc_row(const struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_panel_alloc_space	lib/nuklear/nuklear.h	/^nk_panel_alloc_space(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f
nk_panel_alloc_space	lib/nuklear/src/nuklear_layout.c	/^nk_panel_alloc_space(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f
nk_panel_begin	lib/nuklear/nuklear.h	/^nk_panel_begin(struct nk_context *ctx, const char *title, enum nk_panel_type panel_type)$/;"	f
nk_panel_begin	lib/nuklear/src/nuklear_panel.c	/^nk_panel_begin(struct nk_context *ctx, const char *title, enum nk_panel_type panel_type)$/;"	f
nk_panel_end	lib/nuklear/nuklear.h	/^nk_panel_end(struct nk_context *ctx)$/;"	f
nk_panel_end	lib/nuklear/src/nuklear_panel.c	/^nk_panel_end(struct nk_context *ctx)$/;"	f
nk_panel_flags	lib/nuklear/nuklear.h	/^enum nk_panel_flags {$/;"	g
nk_panel_flags	lib/nuklear/src/nuklear.h	/^enum nk_panel_flags {$/;"	g
nk_panel_get_border	lib/nuklear/nuklear.h	/^nk_panel_get_border(const struct nk_style *style, nk_flags flags,$/;"	f
nk_panel_get_border	lib/nuklear/src/nuklear_panel.c	/^nk_panel_get_border(const struct nk_style *style, nk_flags flags,$/;"	f
nk_panel_get_border_color	lib/nuklear/nuklear.h	/^nk_panel_get_border_color(const struct nk_style *style, enum nk_panel_type type)$/;"	f
nk_panel_get_border_color	lib/nuklear/src/nuklear_panel.c	/^nk_panel_get_border_color(const struct nk_style *style, enum nk_panel_type type)$/;"	f
nk_panel_get_padding	lib/nuklear/nuklear.h	/^nk_panel_get_padding(const struct nk_style *style, enum nk_panel_type type)$/;"	f
nk_panel_get_padding	lib/nuklear/src/nuklear_panel.c	/^nk_panel_get_padding(const struct nk_style *style, enum nk_panel_type type)$/;"	f
nk_panel_has_header	lib/nuklear/nuklear.h	/^nk_panel_has_header(nk_flags flags, const char *title)$/;"	f
nk_panel_has_header	lib/nuklear/src/nuklear_panel.c	/^nk_panel_has_header(nk_flags flags, const char *title)$/;"	f
nk_panel_is_nonblock	lib/nuklear/nuklear.h	/^nk_panel_is_nonblock(enum nk_panel_type type)$/;"	f
nk_panel_is_nonblock	lib/nuklear/src/nuklear_panel.c	/^nk_panel_is_nonblock(enum nk_panel_type type)$/;"	f
nk_panel_is_sub	lib/nuklear/nuklear.h	/^nk_panel_is_sub(enum nk_panel_type type)$/;"	f
nk_panel_is_sub	lib/nuklear/src/nuklear_panel.c	/^nk_panel_is_sub(enum nk_panel_type type)$/;"	f
nk_panel_layout	lib/nuklear/nuklear.h	/^nk_panel_layout(const struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_panel_layout	lib/nuklear/src/nuklear_layout.c	/^nk_panel_layout(const struct nk_context *ctx, struct nk_window *win,$/;"	f
nk_panel_row_layout_type	lib/nuklear/nuklear.h	/^enum nk_panel_row_layout_type {$/;"	g
nk_panel_row_layout_type	lib/nuklear/src/nuklear.h	/^enum nk_panel_row_layout_type {$/;"	g
nk_panel_set	lib/nuklear/nuklear.h	/^enum nk_panel_set {$/;"	g
nk_panel_set	lib/nuklear/src/nuklear.h	/^enum nk_panel_set {$/;"	g
nk_panel_type	lib/nuklear/nuklear.h	/^enum nk_panel_type {$/;"	g
nk_panel_type	lib/nuklear/src/nuklear.h	/^enum nk_panel_type {$/;"	g
nk_parse_hex	lib/nuklear/nuklear.h	/^nk_parse_hex(const char *p, int length)$/;"	f
nk_parse_hex	lib/nuklear/src/nuklear_color.c	/^nk_parse_hex(const char *p, int length)$/;"	f
nk_plot	lib/nuklear/nuklear.h	/^nk_plot(struct nk_context *ctx, enum nk_chart_type type, const float *values,$/;"	f
nk_plot	lib/nuklear/src/nuklear_chart.c	/^nk_plot(struct nk_context *ctx, enum nk_chart_type type, const float *values,$/;"	f
nk_plot_function	lib/nuklear/nuklear.h	/^nk_plot_function(struct nk_context *ctx, enum nk_chart_type type, void *userdata,$/;"	f
nk_plot_function	lib/nuklear/src/nuklear_chart.c	/^nk_plot_function(struct nk_context *ctx, enum nk_chart_type type, void *userdata,$/;"	f
nk_plugin_alloc	lib/nuklear/nuklear.h	/^typedef void*(*nk_plugin_alloc)(nk_handle, void *old, nk_size);$/;"	t
nk_plugin_alloc	lib/nuklear/src/nuklear.h	/^typedef void*(*nk_plugin_alloc)(nk_handle, void *old, nk_size);$/;"	t
nk_plugin_copy	lib/nuklear/nuklear.h	/^typedef void(*nk_plugin_copy)(nk_handle, const char*, int len);$/;"	t
nk_plugin_copy	lib/nuklear/src/nuklear.h	/^typedef void(*nk_plugin_copy)(nk_handle, const char*, int len);$/;"	t
nk_plugin_filter	lib/nuklear/nuklear.h	/^typedef int(*nk_plugin_filter)(const struct nk_text_edit*, nk_rune unicode);$/;"	t
nk_plugin_filter	lib/nuklear/src/nuklear.h	/^typedef int(*nk_plugin_filter)(const struct nk_text_edit*, nk_rune unicode);$/;"	t
nk_plugin_free	lib/nuklear/nuklear.h	/^typedef void (*nk_plugin_free)(nk_handle, void *old);$/;"	t
nk_plugin_free	lib/nuklear/src/nuklear.h	/^typedef void (*nk_plugin_free)(nk_handle, void *old);$/;"	t
nk_plugin_paste	lib/nuklear/nuklear.h	/^typedef void(*nk_plugin_paste)(nk_handle, struct nk_text_edit*);$/;"	t
nk_plugin_paste	lib/nuklear/src/nuklear.h	/^typedef void(*nk_plugin_paste)(nk_handle, struct nk_text_edit*);$/;"	t
nk_pool	lib/nuklear/nuklear.h	/^struct nk_pool {$/;"	s
nk_pool	lib/nuklear/src/nuklear.h	/^struct nk_pool {$/;"	s
nk_pool_alloc	lib/nuklear/nuklear.h	/^nk_pool_alloc(struct nk_pool *pool)$/;"	f
nk_pool_alloc	lib/nuklear/src/nuklear_pool.c	/^nk_pool_alloc(struct nk_pool *pool)$/;"	f
nk_pool_free	lib/nuklear/nuklear.h	/^nk_pool_free(struct nk_pool *pool)$/;"	f
nk_pool_free	lib/nuklear/src/nuklear_pool.c	/^nk_pool_free(struct nk_pool *pool)$/;"	f
nk_pool_init	lib/nuklear/nuklear.h	/^nk_pool_init(struct nk_pool *pool, struct nk_allocator *alloc,$/;"	f
nk_pool_init	lib/nuklear/src/nuklear_pool.c	/^nk_pool_init(struct nk_pool *pool, struct nk_allocator *alloc,$/;"	f
nk_pool_init_fixed	lib/nuklear/nuklear.h	/^nk_pool_init_fixed(struct nk_pool *pool, void *memory, nk_size size)$/;"	f
nk_pool_init_fixed	lib/nuklear/src/nuklear_pool.c	/^nk_pool_init_fixed(struct nk_pool *pool, void *memory, nk_size size)$/;"	f
nk_popup_begin	lib/nuklear/nuklear.h	/^nk_popup_begin(struct nk_context *ctx, enum nk_popup_type type,$/;"	f
nk_popup_begin	lib/nuklear/src/nuklear_popup.c	/^nk_popup_begin(struct nk_context *ctx, enum nk_popup_type type,$/;"	f
nk_popup_buffer	lib/nuklear/nuklear.h	/^struct nk_popup_buffer {$/;"	s
nk_popup_buffer	lib/nuklear/src/nuklear.h	/^struct nk_popup_buffer {$/;"	s
nk_popup_close	lib/nuklear/nuklear.h	/^nk_popup_close(struct nk_context *ctx)$/;"	f
nk_popup_close	lib/nuklear/src/nuklear_popup.c	/^nk_popup_close(struct nk_context *ctx)$/;"	f
nk_popup_end	lib/nuklear/nuklear.h	/^nk_popup_end(struct nk_context *ctx)$/;"	f
nk_popup_end	lib/nuklear/src/nuklear_popup.c	/^nk_popup_end(struct nk_context *ctx)$/;"	f
nk_popup_get_scroll	lib/nuklear/nuklear.h	/^nk_popup_get_scroll(struct nk_context *ctx, nk_uint *offset_x, nk_uint *offset_y)$/;"	f
nk_popup_get_scroll	lib/nuklear/src/nuklear_popup.c	/^nk_popup_get_scroll(struct nk_context *ctx, nk_uint *offset_x, nk_uint *offset_y)$/;"	f
nk_popup_set_scroll	lib/nuklear/nuklear.h	/^nk_popup_set_scroll(struct nk_context *ctx, nk_uint offset_x, nk_uint offset_y)$/;"	f
nk_popup_set_scroll	lib/nuklear/src/nuklear_popup.c	/^nk_popup_set_scroll(struct nk_context *ctx, nk_uint offset_x, nk_uint offset_y)$/;"	f
nk_popup_state	lib/nuklear/nuklear.h	/^struct nk_popup_state {$/;"	s
nk_popup_state	lib/nuklear/src/nuklear.h	/^struct nk_popup_state {$/;"	s
nk_popup_type	lib/nuklear/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	g
nk_popup_type	lib/nuklear/src/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	g
nk_pow	lib/nuklear/nuklear.h	/^nk_pow(double x, int n)$/;"	f
nk_pow	lib/nuklear/src/nuklear_math.c	/^nk_pow(double x, int n)$/;"	f
nk_prog	lib/nuklear/nuklear.h	/^nk_prog(struct nk_context *ctx, nk_size cur, nk_size max, int modifyable)$/;"	f
nk_prog	lib/nuklear/src/nuklear_progress.c	/^nk_prog(struct nk_context *ctx, nk_size cur, nk_size max, int modifyable)$/;"	f
nk_proggy_clean_ttf_compressed_data_base85	lib/nuklear/nuklear.h	/^NK_GLOBAL const char nk_proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v
nk_proggy_clean_ttf_compressed_data_base85	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const char nk_proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v
nk_progress	lib/nuklear/nuklear.h	/^nk_progress(struct nk_context *ctx, nk_size *cur, nk_size max, int is_modifyable)$/;"	f
nk_progress	lib/nuklear/src/nuklear_progress.c	/^nk_progress(struct nk_context *ctx, nk_size *cur, nk_size max, int is_modifyable)$/;"	f
nk_progress_behavior	lib/nuklear/nuklear.h	/^nk_progress_behavior(nk_flags *state, struct nk_input *in,$/;"	f
nk_progress_behavior	lib/nuklear/src/nuklear_progress.c	/^nk_progress_behavior(nk_flags *state, struct nk_input *in,$/;"	f
nk_property	lib/nuklear/nuklear.h	/^nk_property(struct nk_context *ctx, const char *name, struct nk_property_variant *variant,$/;"	f
nk_property	lib/nuklear/nuklear.h	/^union nk_property {$/;"	u
nk_property	lib/nuklear/src/nuklear_internal.h	/^union nk_property {$/;"	u
nk_property	lib/nuklear/src/nuklear_property.c	/^nk_property(struct nk_context *ctx, const char *name, struct nk_property_variant *variant,$/;"	f
nk_property_behavior	lib/nuklear/nuklear.h	/^nk_property_behavior(nk_flags *ws, const struct nk_input *in,$/;"	f
nk_property_behavior	lib/nuklear/src/nuklear_property.c	/^nk_property_behavior(nk_flags *ws, const struct nk_input *in,$/;"	f
nk_property_double	lib/nuklear/nuklear.h	/^nk_property_double(struct nk_context *ctx, const char *name,$/;"	f
nk_property_double	lib/nuklear/src/nuklear_property.c	/^nk_property_double(struct nk_context *ctx, const char *name,$/;"	f
nk_property_filter	lib/nuklear/nuklear.h	/^enum nk_property_filter {$/;"	g
nk_property_filter	lib/nuklear/src/nuklear_internal.h	/^enum nk_property_filter {$/;"	g
nk_property_float	lib/nuklear/nuklear.h	/^nk_property_float(struct nk_context *ctx, const char *name,$/;"	f
nk_property_float	lib/nuklear/src/nuklear_property.c	/^nk_property_float(struct nk_context *ctx, const char *name,$/;"	f
nk_property_int	lib/nuklear/nuklear.h	/^nk_property_int(struct nk_context *ctx, const char *name,$/;"	f
nk_property_int	lib/nuklear/src/nuklear_property.c	/^nk_property_int(struct nk_context *ctx, const char *name,$/;"	f
nk_property_kind	lib/nuklear/nuklear.h	/^enum nk_property_kind {$/;"	g
nk_property_kind	lib/nuklear/src/nuklear_internal.h	/^enum nk_property_kind {$/;"	g
nk_property_state	lib/nuklear/nuklear.h	/^struct nk_property_state {$/;"	s
nk_property_state	lib/nuklear/src/nuklear.h	/^struct nk_property_state {$/;"	s
nk_property_status	lib/nuklear/nuklear.h	/^enum nk_property_status {$/;"	g
nk_property_status	lib/nuklear/src/nuklear_internal.h	/^enum nk_property_status {$/;"	g
nk_property_variant	lib/nuklear/nuklear.h	/^struct nk_property_variant {$/;"	s
nk_property_variant	lib/nuklear/src/nuklear_internal.h	/^struct nk_property_variant {$/;"	s
nk_property_variant_double	lib/nuklear/nuklear.h	/^nk_property_variant_double(double value, double min_value, double max_value,$/;"	f
nk_property_variant_double	lib/nuklear/src/nuklear_property.c	/^nk_property_variant_double(double value, double min_value, double max_value,$/;"	f
nk_property_variant_float	lib/nuklear/nuklear.h	/^nk_property_variant_float(float value, float min_value, float max_value, float step)$/;"	f
nk_property_variant_float	lib/nuklear/src/nuklear_property.c	/^nk_property_variant_float(float value, float min_value, float max_value, float step)$/;"	f
nk_property_variant_int	lib/nuklear/nuklear.h	/^nk_property_variant_int(int value, int min_value, int max_value, int step)$/;"	f
nk_property_variant_int	lib/nuklear/src/nuklear_property.c	/^nk_property_variant_int(int value, int min_value, int max_value, int step)$/;"	f
nk_propertyd	lib/nuklear/nuklear.h	/^nk_propertyd(struct nk_context *ctx, const char *name, double min,$/;"	f
nk_propertyd	lib/nuklear/src/nuklear_property.c	/^nk_propertyd(struct nk_context *ctx, const char *name, double min,$/;"	f
nk_propertyf	lib/nuklear/nuklear.h	/^nk_propertyf(struct nk_context *ctx, const char *name, float min,$/;"	f
nk_propertyf	lib/nuklear/src/nuklear_property.c	/^nk_propertyf(struct nk_context *ctx, const char *name, float min,$/;"	f
nk_propertyi	lib/nuklear/nuklear.h	/^nk_propertyi(struct nk_context *ctx, const char *name, int min, int val,$/;"	f
nk_propertyi	lib/nuklear/src/nuklear_property.c	/^nk_propertyi(struct nk_context *ctx, const char *name, int min, int val,$/;"	f
nk_ptr	lib/nuklear/nuklear.h	/^typedef NK_POINTER_TYPE nk_ptr;$/;"	t
nk_ptr	lib/nuklear/src/nuklear.h	/^typedef NK_POINTER_TYPE nk_ptr;$/;"	t
nk_ptr_add	lib/nuklear/nuklear.h	5634;"	d
nk_ptr_add	lib/nuklear/src/nuklear.h	5415;"	d
nk_ptr_add_const	lib/nuklear/nuklear.h	5635;"	d
nk_ptr_add_const	lib/nuklear/src/nuklear.h	5416;"	d
nk_push_custom	lib/nuklear/nuklear.h	/^nk_push_custom(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_push_custom	lib/nuklear/src/nuklear_draw.c	/^nk_push_custom(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_push_scissor	lib/nuklear/nuklear.h	/^nk_push_scissor(struct nk_command_buffer *b, struct nk_rect r)$/;"	f
nk_push_scissor	lib/nuklear/src/nuklear_draw.c	/^nk_push_scissor(struct nk_command_buffer *b, struct nk_rect r)$/;"	f
nk_push_table	lib/nuklear/nuklear.h	/^nk_push_table(struct nk_window *win, struct nk_table *tbl)$/;"	f
nk_push_table	lib/nuklear/src/nuklear_table.c	/^nk_push_table(struct nk_window *win, struct nk_table *tbl)$/;"	f
nk_query_font_glyph_f	lib/nuklear/nuklear.h	/^typedef void(*nk_query_font_glyph_f)(nk_handle handle, float font_height,$/;"	t
nk_query_font_glyph_f	lib/nuklear/src/nuklear.h	/^typedef void(*nk_query_font_glyph_f)(nk_handle handle, float font_height,$/;"	t
nk_radio_label	lib/nuklear/nuklear.h	/^nk_radio_label(struct nk_context *ctx, const char *label, int *active)$/;"	f
nk_radio_label	lib/nuklear/src/nuklear_toggle.c	/^nk_radio_label(struct nk_context *ctx, const char *label, int *active)$/;"	f
nk_radio_text	lib/nuklear/nuklear.h	/^nk_radio_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f
nk_radio_text	lib/nuklear/src/nuklear_toggle.c	/^nk_radio_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f
nk_range_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_range_align = NK_ALIGNOF(struct nk_tt_pack_range);$/;"	v
nk_range_align	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const nk_size nk_range_align = NK_ALIGNOF(struct nk_tt_pack_range);$/;"	v
nk_range_count	lib/nuklear/nuklear.h	/^nk_range_count(const nk_rune *range)$/;"	f
nk_range_count	lib/nuklear/src/nuklear_font.c	/^nk_range_count(const nk_rune *range)$/;"	f
nk_range_glyph_count	lib/nuklear/nuklear.h	/^nk_range_glyph_count(const nk_rune *range, int count)$/;"	f
nk_range_glyph_count	lib/nuklear/src/nuklear_font.c	/^nk_range_glyph_count(const nk_rune *range, int count)$/;"	f
nk_rawfb_clear	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_clear(const struct rawfb_context *rawfb, const struct nk_color col)$/;"	f
nk_rawfb_color2int	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_color2int(const struct nk_color c, rawfb_pl pl)$/;"	f
nk_rawfb_ctx_setpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_ctx_setpixel(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_draw_rect_multi_color	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_draw_rect_multi_color(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_draw_text	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_draw_text(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_drawimage	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_drawimage(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_fill_arc	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_arc(const struct rawfb_context *rawfb, short x0, short y0,$/;"	f
nk_rawfb_fill_circle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_circle(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_fill_polygon	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_polygon(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_fill_rect	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_rect(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_fill_triangle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_triangle(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_font_query_font_glyph	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_font_query_font_glyph(nk_handle handle, const float height,$/;"	f
nk_rawfb_img_blendpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_img_blendpixel(const struct rawfb_image *img,$/;"	f
nk_rawfb_img_getpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_img_getpixel(const struct rawfb_image *img, const int x0, const int y0)$/;"	f
nk_rawfb_img_setpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_img_setpixel(const struct rawfb_image *img,$/;"	f
nk_rawfb_init	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_init(void *fb, void *tex_mem, const unsigned int w, const unsigned int h,$/;"	f
nk_rawfb_int2color	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_int2color(const unsigned int i, rawfb_pl pl)$/;"	f
nk_rawfb_line_horizontal	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_line_horizontal(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_render	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_render(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_resize_fb	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_resize_fb(struct rawfb_context *rawfb,$/;"	f
nk_rawfb_scissor	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_scissor(struct rawfb_context *rawfb,$/;"	f
nk_rawfb_shutdown	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_shutdown(struct rawfb_context *rawfb)$/;"	f
nk_rawfb_stretch_image	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stretch_image(const struct rawfb_image *dst,$/;"	f
nk_rawfb_stroke_arc	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_arc(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_stroke_circle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_circle(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_stroke_curve	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_curve(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_stroke_line	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_line(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_stroke_polygon	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_polygon(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_stroke_polyline	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_polyline(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_stroke_rect	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_rect(const struct rawfb_context *rawfb,$/;"	f
nk_rawfb_stroke_triangle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_triangle(const struct rawfb_context *rawfb,$/;"	f
nk_rect	lib/nuklear/nuklear.h	/^nk_rect(float x, float y, float w, float h)$/;"	f
nk_rect	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	s
nk_rect	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	s
nk_rect	lib/nuklear/src/nuklear_math.c	/^nk_rect(float x, float y, float w, float h)$/;"	f
nk_rect_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_rect_align = NK_ALIGNOF(struct nk_rp_rect);$/;"	v
nk_rect_align	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const nk_size nk_rect_align = NK_ALIGNOF(struct nk_rp_rect);$/;"	v
nk_rect_height_compare	lib/nuklear/nuklear.h	/^nk_rect_height_compare(const void *a, const void *b)$/;"	f
nk_rect_height_compare	lib/nuklear/src/nuklear_font.c	/^nk_rect_height_compare(const void *a, const void *b)$/;"	f
nk_rect_original_order	lib/nuklear/nuklear.h	/^nk_rect_original_order(const void *a, const void *b)$/;"	f
nk_rect_original_order	lib/nuklear/src/nuklear_font.c	/^nk_rect_original_order(const void *a, const void *b)$/;"	f
nk_rect_pos	lib/nuklear/nuklear.h	/^nk_rect_pos(struct nk_rect r)$/;"	f
nk_rect_pos	lib/nuklear/src/nuklear_math.c	/^nk_rect_pos(struct nk_rect r)$/;"	f
nk_rect_size	lib/nuklear/nuklear.h	/^nk_rect_size(struct nk_rect r)$/;"	f
nk_rect_size	lib/nuklear/src/nuklear_math.c	/^nk_rect_size(struct nk_rect r)$/;"	f
nk_recta	lib/nuklear/nuklear.h	/^nk_recta(struct nk_vec2 pos, struct nk_vec2 size)$/;"	f
nk_recta	lib/nuklear/src/nuklear_math.c	/^nk_recta(struct nk_vec2 pos, struct nk_vec2 size)$/;"	f
nk_recti	lib/nuklear/nuklear.h	/^nk_recti(int x, int y, int w, int h)$/;"	f
nk_recti	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	s
nk_recti	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	s
nk_recti	lib/nuklear/src/nuklear_math.c	/^nk_recti(int x, int y, int w, int h)$/;"	f
nk_rectiv	lib/nuklear/nuklear.h	/^nk_rectiv(const int *r)$/;"	f
nk_rectiv	lib/nuklear/src/nuklear_math.c	/^nk_rectiv(const int *r)$/;"	f
nk_rectv	lib/nuklear/nuklear.h	/^nk_rectv(const float *r)$/;"	f
nk_rectv	lib/nuklear/src/nuklear_math.c	/^nk_rectv(const float *r)$/;"	f
nk_red	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_red = {255,0,0,255};$/;"	v	typeref:struct:nk_color
nk_red	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_red = {255,0,0,255};$/;"	v	typeref:struct:nk_color
nk_remove_table	lib/nuklear/nuklear.h	/^nk_remove_table(struct nk_window *win, struct nk_table *tbl)$/;"	f
nk_remove_table	lib/nuklear/src/nuklear_table.c	/^nk_remove_table(struct nk_window *win, struct nk_table *tbl)$/;"	f
nk_remove_window	lib/nuklear/nuklear.h	/^nk_remove_window(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_remove_window	lib/nuklear/src/nuklear_window.c	/^nk_remove_window(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_rgb	lib/nuklear/nuklear.h	/^nk_rgb(int r, int g, int b)$/;"	f
nk_rgb	lib/nuklear/src/nuklear_color.c	/^nk_rgb(int r, int g, int b)$/;"	f
nk_rgb_bv	lib/nuklear/nuklear.h	/^nk_rgb_bv(const nk_byte* c)$/;"	f
nk_rgb_bv	lib/nuklear/src/nuklear_color.c	/^nk_rgb_bv(const nk_byte* c)$/;"	f
nk_rgb_cf	lib/nuklear/nuklear.h	/^nk_rgb_cf(struct nk_colorf c)$/;"	f
nk_rgb_cf	lib/nuklear/src/nuklear_color.c	/^nk_rgb_cf(struct nk_colorf c)$/;"	f
nk_rgb_f	lib/nuklear/nuklear.h	/^nk_rgb_f(float r, float g, float b)$/;"	f
nk_rgb_f	lib/nuklear/src/nuklear_color.c	/^nk_rgb_f(float r, float g, float b)$/;"	f
nk_rgb_fv	lib/nuklear/nuklear.h	/^nk_rgb_fv(const float *c)$/;"	f
nk_rgb_fv	lib/nuklear/src/nuklear_color.c	/^nk_rgb_fv(const float *c)$/;"	f
nk_rgb_hex	lib/nuklear/nuklear.h	/^nk_rgb_hex(const char *rgb)$/;"	f
nk_rgb_hex	lib/nuklear/src/nuklear_color.c	/^nk_rgb_hex(const char *rgb)$/;"	f
nk_rgb_iv	lib/nuklear/nuklear.h	/^nk_rgb_iv(const int *c)$/;"	f
nk_rgb_iv	lib/nuklear/src/nuklear_color.c	/^nk_rgb_iv(const int *c)$/;"	f
nk_rgba	lib/nuklear/nuklear.h	/^nk_rgba(int r, int g, int b, int a)$/;"	f
nk_rgba	lib/nuklear/src/nuklear_color.c	/^nk_rgba(int r, int g, int b, int a)$/;"	f
nk_rgba_bv	lib/nuklear/nuklear.h	/^nk_rgba_bv(const nk_byte *c)$/;"	f
nk_rgba_bv	lib/nuklear/src/nuklear_color.c	/^nk_rgba_bv(const nk_byte *c)$/;"	f
nk_rgba_cf	lib/nuklear/nuklear.h	/^nk_rgba_cf(struct nk_colorf c)$/;"	f
nk_rgba_cf	lib/nuklear/src/nuklear_color.c	/^nk_rgba_cf(struct nk_colorf c)$/;"	f
nk_rgba_f	lib/nuklear/nuklear.h	/^nk_rgba_f(float r, float g, float b, float a)$/;"	f
nk_rgba_f	lib/nuklear/src/nuklear_color.c	/^nk_rgba_f(float r, float g, float b, float a)$/;"	f
nk_rgba_fv	lib/nuklear/nuklear.h	/^nk_rgba_fv(const float *c)$/;"	f
nk_rgba_fv	lib/nuklear/src/nuklear_color.c	/^nk_rgba_fv(const float *c)$/;"	f
nk_rgba_hex	lib/nuklear/nuklear.h	/^nk_rgba_hex(const char *rgb)$/;"	f
nk_rgba_hex	lib/nuklear/src/nuklear_color.c	/^nk_rgba_hex(const char *rgb)$/;"	f
nk_rgba_iv	lib/nuklear/nuklear.h	/^nk_rgba_iv(const int *c)$/;"	f
nk_rgba_iv	lib/nuklear/src/nuklear_color.c	/^nk_rgba_iv(const int *c)$/;"	f
nk_rgba_u32	lib/nuklear/nuklear.h	/^nk_rgba_u32(nk_uint in)$/;"	f
nk_rgba_u32	lib/nuklear/src/nuklear_color.c	/^nk_rgba_u32(nk_uint in)$/;"	f
nk_round_up_pow2	lib/nuklear/nuklear.h	/^nk_round_up_pow2(nk_uint v)$/;"	f
nk_round_up_pow2	lib/nuklear/src/nuklear_math.c	/^nk_round_up_pow2(nk_uint v)$/;"	f
nk_row_layout	lib/nuklear/nuklear.h	/^nk_row_layout(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_row_layout	lib/nuklear/nuklear.h	/^struct nk_row_layout {$/;"	s
nk_row_layout	lib/nuklear/src/nuklear.h	/^struct nk_row_layout {$/;"	s
nk_row_layout	lib/nuklear/src/nuklear_layout.c	/^nk_row_layout(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f
nk_rp__findresult	lib/nuklear/nuklear.h	/^struct nk_rp__findresult {$/;"	s
nk_rp__findresult	lib/nuklear/src/nuklear_font.c	/^struct nk_rp__findresult {$/;"	s	file:
nk_rp__skyline_find_best_pos	lib/nuklear/nuklear.h	/^nk_rp__skyline_find_best_pos(struct nk_rp_context *c, int width, int height)$/;"	f
nk_rp__skyline_find_best_pos	lib/nuklear/src/nuklear_font.c	/^nk_rp__skyline_find_best_pos(struct nk_rp_context *c, int width, int height)$/;"	f
nk_rp__skyline_find_min_y	lib/nuklear/nuklear.h	/^nk_rp__skyline_find_min_y(struct nk_rp_context *c, struct nk_rp_node *first,$/;"	f
nk_rp__skyline_find_min_y	lib/nuklear/src/nuklear_font.c	/^nk_rp__skyline_find_min_y(struct nk_rp_context *c, struct nk_rp_node *first,$/;"	f
nk_rp__skyline_pack_rectangle	lib/nuklear/nuklear.h	/^nk_rp__skyline_pack_rectangle(struct nk_rp_context *context, int width, int height)$/;"	f
nk_rp__skyline_pack_rectangle	lib/nuklear/src/nuklear_font.c	/^nk_rp__skyline_pack_rectangle(struct nk_rp_context *context, int width, int height)$/;"	f
nk_rp_context	lib/nuklear/nuklear.h	/^struct nk_rp_context {$/;"	s
nk_rp_context	lib/nuklear/src/nuklear_font.c	/^struct nk_rp_context {$/;"	s	file:
nk_rp_coord	lib/nuklear/nuklear.h	/^typedef unsigned short nk_rp_coord;$/;"	t
nk_rp_coord	lib/nuklear/src/nuklear_font.c	/^typedef unsigned short nk_rp_coord;$/;"	t	file:
nk_rp_init_target	lib/nuklear/nuklear.h	/^nk_rp_init_target(struct nk_rp_context *context, int width, int height,$/;"	f
nk_rp_init_target	lib/nuklear/src/nuklear_font.c	/^nk_rp_init_target(struct nk_rp_context *context, int width, int height,$/;"	f
nk_rp_node	lib/nuklear/nuklear.h	/^struct nk_rp_node {$/;"	s
nk_rp_node	lib/nuklear/src/nuklear_font.c	/^struct nk_rp_node {$/;"	s	file:
nk_rp_pack_rects	lib/nuklear/nuklear.h	/^nk_rp_pack_rects(struct nk_rp_context *context, struct nk_rp_rect *rects, int num_rects)$/;"	f
nk_rp_pack_rects	lib/nuklear/src/nuklear_font.c	/^nk_rp_pack_rects(struct nk_rp_context *context, struct nk_rp_rect *rects, int num_rects)$/;"	f
nk_rp_qsort	lib/nuklear/nuklear.h	/^nk_rp_qsort(struct nk_rp_rect *array, unsigned int len, int(*cmp)(const void*,const void*))$/;"	f
nk_rp_qsort	lib/nuklear/src/nuklear_font.c	/^nk_rp_qsort(struct nk_rp_rect *array, unsigned int len, int(*cmp)(const void*,const void*))$/;"	f
nk_rp_rect	lib/nuklear/nuklear.h	/^struct nk_rp_rect {$/;"	s
nk_rp_rect	lib/nuklear/src/nuklear_font.c	/^struct nk_rp_rect {$/;"	s	file:
nk_rp_setup_allow_out_of_mem	lib/nuklear/nuklear.h	/^nk_rp_setup_allow_out_of_mem(struct nk_rp_context *context, int allow_out_of_mem)$/;"	f
nk_rp_setup_allow_out_of_mem	lib/nuklear/src/nuklear_font.c	/^nk_rp_setup_allow_out_of_mem(struct nk_rp_context *context, int allow_out_of_mem)$/;"	f
nk_rune	lib/nuklear/nuklear.h	/^typedef nk_uint nk_rune;$/;"	t
nk_rune	lib/nuklear/src/nuklear.h	/^typedef nk_uint nk_rune;$/;"	t
nk_scroll	lib/nuklear/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	s
nk_scroll	lib/nuklear/src/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	s
nk_scrollbar_behavior	lib/nuklear/nuklear.h	/^nk_scrollbar_behavior(nk_flags *state, struct nk_input *in,$/;"	f
nk_scrollbar_behavior	lib/nuklear/src/nuklear_scrollbar.c	/^nk_scrollbar_behavior(nk_flags *state, struct nk_input *in,$/;"	f
nk_sdl	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^static struct nk_sdl {$/;"	s
nk_sdl	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^static struct nk_sdl {$/;"	s
nk_sdl	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^static struct nk_sdl {$/;"	s
nk_sdl_clipboard_copy	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_sdl_clipboard_copy	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_sdl_clipboard_copy	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f
nk_sdl_clipboard_paste	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_sdl_clipboard_paste	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_sdl_clipboard_paste	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f
nk_sdl_device	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^struct nk_sdl_device {$/;"	s
nk_sdl_device	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^struct nk_sdl_device {$/;"	s
nk_sdl_device	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^struct nk_sdl_device {$/;"	s
nk_sdl_device_create	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_device_create(void)$/;"	f
nk_sdl_device_create	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_device_create(void)$/;"	f
nk_sdl_device_destroy	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_device_destroy(void)$/;"	f
nk_sdl_device_destroy	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_device_destroy(void)$/;"	f
nk_sdl_device_upload_atlas	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_sdl_device_upload_atlas	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_sdl_device_upload_atlas	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_sdl_font_stash_begin	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_sdl_font_stash_begin	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_sdl_font_stash_begin	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_sdl_font_stash_end	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_font_stash_end(void)$/;"	f
nk_sdl_font_stash_end	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_font_stash_end(void)$/;"	f
nk_sdl_font_stash_end	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_font_stash_end(void)$/;"	f
nk_sdl_handle_event	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_handle_event(SDL_Event *evt)$/;"	f
nk_sdl_handle_event	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_handle_event(SDL_Event *evt)$/;"	f
nk_sdl_handle_event	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_handle_event(SDL_Event *evt)$/;"	f
nk_sdl_init	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_init(SDL_Window *win)$/;"	f
nk_sdl_init	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_init(SDL_Window *win)$/;"	f
nk_sdl_init	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_init(SDL_Window *win)$/;"	f
nk_sdl_render	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_render(enum nk_anti_aliasing AA)$/;"	f
nk_sdl_render	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f
nk_sdl_render	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f
nk_sdl_shutdown	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^void nk_sdl_shutdown(void)$/;"	f
nk_sdl_shutdown	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^void nk_sdl_shutdown(void)$/;"	f
nk_sdl_shutdown	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^void nk_sdl_shutdown(void)$/;"	f
nk_sdl_vertex	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^struct nk_sdl_vertex {$/;"	s
nk_sdl_vertex	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^struct nk_sdl_vertex {$/;"	s
nk_sdl_vertex	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^struct nk_sdl_vertex {$/;"	s
nk_select_image_label	lib/nuklear/nuklear.h	/^NK_API int nk_select_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_select_image_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_select_image_text	lib/nuklear/nuklear.h	/^NK_API int nk_select_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_select_image_text	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_select_label	lib/nuklear/nuklear.h	/^NK_API int nk_select_label(struct nk_context *ctx, const char *str, nk_flags align, int value)$/;"	f
nk_select_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_label(struct nk_context *ctx, const char *str, nk_flags align, int value)$/;"	f
nk_select_symbol_label	lib/nuklear/nuklear.h	/^nk_select_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_select_symbol_label	lib/nuklear/src/nuklear_selectable.c	/^nk_select_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_select_symbol_text	lib/nuklear/nuklear.h	/^nk_select_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_select_symbol_text	lib/nuklear/src/nuklear_selectable.c	/^nk_select_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_select_text	lib/nuklear/nuklear.h	/^NK_API int nk_select_text(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_select_text	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_text(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_selectable_image_label	lib/nuklear/nuklear.h	/^NK_API int nk_selectable_image_label(struct nk_context *ctx,struct nk_image img,$/;"	f
nk_selectable_image_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_selectable_image_label(struct nk_context *ctx,struct nk_image img,$/;"	f
nk_selectable_image_text	lib/nuklear/nuklear.h	/^nk_selectable_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_selectable_image_text	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f
nk_selectable_label	lib/nuklear/nuklear.h	/^NK_API int nk_selectable_label(struct nk_context *ctx, const char *str, nk_flags align, int *value)$/;"	f
nk_selectable_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_selectable_label(struct nk_context *ctx, const char *str, nk_flags align, int *value)$/;"	f
nk_selectable_symbol_label	lib/nuklear/nuklear.h	/^nk_selectable_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_selectable_symbol_label	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_selectable_symbol_text	lib/nuklear/nuklear.h	/^nk_selectable_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_selectable_symbol_text	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f
nk_selectable_text	lib/nuklear/nuklear.h	/^nk_selectable_text(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_selectable_text	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_text(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_set_user_data	lib/nuklear/nuklear.h	/^nk_set_user_data(struct nk_context *ctx, nk_handle handle)$/;"	f
nk_set_user_data	lib/nuklear/src/nuklear_context.c	/^nk_set_user_data(struct nk_context *ctx, nk_handle handle)$/;"	f
nk_setup	lib/nuklear/nuklear.h	/^nk_setup(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_setup	lib/nuklear/src/nuklear_context.c	/^nk_setup(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_sfml	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^static struct nk_sfml {$/;"	s
nk_sfml	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^static struct nk_sfml {$/;"	s
nk_sfml_clipboard_copy	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_clipboard_copy(nk_handle usr, const char* text, int len)$/;"	f
nk_sfml_clipboard_copy	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_clipboard_copy(nk_handle usr, const char* text, int len)$/;"	f
nk_sfml_clipboard_paste	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_clipboard_paste(nk_handle usr, struct nk_text_edit* edit)$/;"	f
nk_sfml_clipboard_paste	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_clipboard_paste(nk_handle usr, struct nk_text_edit* edit)$/;"	f
nk_sfml_device	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^struct nk_sfml_device {$/;"	s
nk_sfml_device	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^struct nk_sfml_device {$/;"	s
nk_sfml_device_create	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_device_create(void)$/;"	f
nk_sfml_device_destroy	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_device_destroy(void)$/;"	f
nk_sfml_device_upload_atlas	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_device_upload_atlas(const void* image, int width, int height)$/;"	f
nk_sfml_device_upload_atlas	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_device_upload_atlas(const void* image, int width, int height)$/;"	f
nk_sfml_font_stash_begin	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_font_stash_begin(struct nk_font_atlas** atlas)$/;"	f
nk_sfml_font_stash_begin	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_font_stash_begin(struct nk_font_atlas** atlas)$/;"	f
nk_sfml_font_stash_end	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_font_stash_end()$/;"	f
nk_sfml_font_stash_end	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_font_stash_end()$/;"	f
nk_sfml_handle_event	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_handle_event(sf::Event* evt)$/;"	f
nk_sfml_handle_event	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_handle_event(sf::Event* evt)$/;"	f
nk_sfml_init	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_init(sf::Window* window)$/;"	f
nk_sfml_init	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_init(sf::Window* window)$/;"	f
nk_sfml_render	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_render(enum nk_anti_aliasing AA)$/;"	f
nk_sfml_render	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f
nk_sfml_shutdown	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^void nk_sfml_shutdown(void)$/;"	f
nk_sfml_shutdown	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^void nk_sfml_shutdown()$/;"	f
nk_sfml_vertex	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^struct nk_sfml_vertex {$/;"	s
nk_sfml_vertex	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^struct nk_sfml_vertex {$/;"	s
nk_short	lib/nuklear/nuklear.h	/^typedef NK_INT16 nk_short;$/;"	t
nk_short	lib/nuklear/src/nuklear.h	/^typedef NK_INT16 nk_short;$/;"	t
nk_show_states	lib/nuklear/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	g
nk_show_states	lib/nuklear/src/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	g
nk_shrink_rect	lib/nuklear/nuklear.h	/^nk_shrink_rect(struct nk_rect r, float amount)$/;"	f
nk_shrink_rect	lib/nuklear/src/nuklear_math.c	/^nk_shrink_rect(struct nk_rect r, float amount)$/;"	f
nk_sin	lib/nuklear/nuklear.h	/^nk_sin(float x)$/;"	f
nk_sin	lib/nuklear/src/nuklear_math.c	/^nk_sin(float x)$/;"	f
nk_size	lib/nuklear/nuklear.h	/^typedef NK_SIZE_TYPE nk_size;$/;"	t
nk_size	lib/nuklear/src/nuklear.h	/^typedef NK_SIZE_TYPE nk_size;$/;"	t
nk_slide_float	lib/nuklear/nuklear.h	/^nk_slide_float(struct nk_context *ctx, float min, float val, float max, float step)$/;"	f
nk_slide_float	lib/nuklear/src/nuklear_slider.c	/^nk_slide_float(struct nk_context *ctx, float min, float val, float max, float step)$/;"	f
nk_slide_int	lib/nuklear/nuklear.h	/^nk_slide_int(struct nk_context *ctx, int min, int val, int max, int step)$/;"	f
nk_slide_int	lib/nuklear/src/nuklear_slider.c	/^nk_slide_int(struct nk_context *ctx, int min, int val, int max, int step)$/;"	f
nk_slider_behavior	lib/nuklear/nuklear.h	/^nk_slider_behavior(nk_flags *state, struct nk_rect *logical_cursor,$/;"	f
nk_slider_behavior	lib/nuklear/src/nuklear_slider.c	/^nk_slider_behavior(nk_flags *state, struct nk_rect *logical_cursor,$/;"	f
nk_slider_float	lib/nuklear/nuklear.h	/^nk_slider_float(struct nk_context *ctx, float min_value, float *value, float max_value,$/;"	f
nk_slider_float	lib/nuklear/src/nuklear_slider.c	/^nk_slider_float(struct nk_context *ctx, float min_value, float *value, float max_value,$/;"	f
nk_slider_int	lib/nuklear/nuklear.h	/^nk_slider_int(struct nk_context *ctx, int min, int *val, int max, int step)$/;"	f
nk_slider_int	lib/nuklear/src/nuklear_slider.c	/^nk_slider_int(struct nk_context *ctx, int min, int *val, int max, int step)$/;"	f
nk_spacing	lib/nuklear/nuklear.h	/^nk_spacing(struct nk_context *ctx, int cols)$/;"	f
nk_spacing	lib/nuklear/src/nuklear_widget.c	/^nk_spacing(struct nk_context *ctx, int cols)$/;"	f
nk_sqrt	lib/nuklear/nuklear.h	/^nk_sqrt(float x)$/;"	f
nk_sqrt	lib/nuklear/src/nuklear_math.c	/^nk_sqrt(float x)$/;"	f
nk_start	lib/nuklear/nuklear.h	/^nk_start(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_start	lib/nuklear/src/nuklear_context.c	/^nk_start(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_start_buffer	lib/nuklear/nuklear.h	/^nk_start_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f
nk_start_buffer	lib/nuklear/src/nuklear_context.c	/^nk_start_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f
nk_start_popup	lib/nuklear/nuklear.h	/^nk_start_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_start_popup	lib/nuklear/src/nuklear_context.c	/^nk_start_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f
nk_stbi_image_to_xsurf	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_stbi_image_to_xsurf(unsigned char *data, int width, int height, int channels) {$/;"	f
nk_stbi_image_to_xsurf	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_stbi_image_to_xsurf(unsigned char *data, int width, int height, int channels) {$/;"	f
nk_str	lib/nuklear/nuklear.h	/^struct nk_str {$/;"	s
nk_str	lib/nuklear/src/nuklear.h	/^struct nk_str {$/;"	s
nk_str_append_str_char	lib/nuklear/nuklear.h	/^nk_str_append_str_char(struct nk_str *s, const char *str)$/;"	f
nk_str_append_str_char	lib/nuklear/src/nuklear_string.c	/^nk_str_append_str_char(struct nk_str *s, const char *str)$/;"	f
nk_str_append_str_runes	lib/nuklear/nuklear.h	/^nk_str_append_str_runes(struct nk_str *str, const nk_rune *runes)$/;"	f
nk_str_append_str_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_append_str_runes(struct nk_str *str, const nk_rune *runes)$/;"	f
nk_str_append_str_utf8	lib/nuklear/nuklear.h	/^nk_str_append_str_utf8(struct nk_str *str, const char *text)$/;"	f
nk_str_append_str_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_append_str_utf8(struct nk_str *str, const char *text)$/;"	f
nk_str_append_text_char	lib/nuklear/nuklear.h	/^nk_str_append_text_char(struct nk_str *s, const char *str, int len)$/;"	f
nk_str_append_text_char	lib/nuklear/src/nuklear_string.c	/^nk_str_append_text_char(struct nk_str *s, const char *str, int len)$/;"	f
nk_str_append_text_runes	lib/nuklear/nuklear.h	/^nk_str_append_text_runes(struct nk_str *str, const nk_rune *text, int len)$/;"	f
nk_str_append_text_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_append_text_runes(struct nk_str *str, const nk_rune *text, int len)$/;"	f
nk_str_append_text_utf8	lib/nuklear/nuklear.h	/^nk_str_append_text_utf8(struct nk_str *str, const char *text, int len)$/;"	f
nk_str_append_text_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_append_text_utf8(struct nk_str *str, const char *text, int len)$/;"	f
nk_str_at_char	lib/nuklear/nuklear.h	/^nk_str_at_char(struct nk_str *s, int pos)$/;"	f
nk_str_at_char	lib/nuklear/src/nuklear_string.c	/^nk_str_at_char(struct nk_str *s, int pos)$/;"	f
nk_str_at_char_const	lib/nuklear/nuklear.h	/^nk_str_at_char_const(const struct nk_str *s, int pos)$/;"	f
nk_str_at_char_const	lib/nuklear/src/nuklear_string.c	/^nk_str_at_char_const(const struct nk_str *s, int pos)$/;"	f
nk_str_at_const	lib/nuklear/nuklear.h	/^nk_str_at_const(const struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f
nk_str_at_const	lib/nuklear/src/nuklear_string.c	/^nk_str_at_const(const struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f
nk_str_at_rune	lib/nuklear/nuklear.h	/^nk_str_at_rune(struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f
nk_str_at_rune	lib/nuklear/src/nuklear_string.c	/^nk_str_at_rune(struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f
nk_str_clear	lib/nuklear/nuklear.h	/^nk_str_clear(struct nk_str *str)$/;"	f
nk_str_clear	lib/nuklear/src/nuklear_string.c	/^nk_str_clear(struct nk_str *str)$/;"	f
nk_str_delete_chars	lib/nuklear/nuklear.h	/^nk_str_delete_chars(struct nk_str *s, int pos, int len)$/;"	f
nk_str_delete_chars	lib/nuklear/src/nuklear_string.c	/^nk_str_delete_chars(struct nk_str *s, int pos, int len)$/;"	f
nk_str_delete_runes	lib/nuklear/nuklear.h	/^nk_str_delete_runes(struct nk_str *s, int pos, int len)$/;"	f
nk_str_delete_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_delete_runes(struct nk_str *s, int pos, int len)$/;"	f
nk_str_free	lib/nuklear/nuklear.h	/^nk_str_free(struct nk_str *str)$/;"	f
nk_str_free	lib/nuklear/src/nuklear_string.c	/^nk_str_free(struct nk_str *str)$/;"	f
nk_str_get	lib/nuklear/nuklear.h	/^nk_str_get(struct nk_str *s)$/;"	f
nk_str_get	lib/nuklear/src/nuklear_string.c	/^nk_str_get(struct nk_str *s)$/;"	f
nk_str_get_const	lib/nuklear/nuklear.h	/^nk_str_get_const(const struct nk_str *s)$/;"	f
nk_str_get_const	lib/nuklear/src/nuklear_string.c	/^nk_str_get_const(const struct nk_str *s)$/;"	f
nk_str_init	lib/nuklear/nuklear.h	/^nk_str_init(struct nk_str *str, const struct nk_allocator *alloc, nk_size size)$/;"	f
nk_str_init	lib/nuklear/src/nuklear_string.c	/^nk_str_init(struct nk_str *str, const struct nk_allocator *alloc, nk_size size)$/;"	f
nk_str_init_default	lib/nuklear/nuklear.h	/^nk_str_init_default(struct nk_str *str)$/;"	f
nk_str_init_default	lib/nuklear/src/nuklear_string.c	/^nk_str_init_default(struct nk_str *str)$/;"	f
nk_str_init_fixed	lib/nuklear/nuklear.h	/^nk_str_init_fixed(struct nk_str *str, void *memory, nk_size size)$/;"	f
nk_str_init_fixed	lib/nuklear/src/nuklear_string.c	/^nk_str_init_fixed(struct nk_str *str, void *memory, nk_size size)$/;"	f
nk_str_insert_at_char	lib/nuklear/nuklear.h	/^nk_str_insert_at_char(struct nk_str *s, int pos, const char *str, int len)$/;"	f
nk_str_insert_at_char	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_at_char(struct nk_str *s, int pos, const char *str, int len)$/;"	f
nk_str_insert_at_rune	lib/nuklear/nuklear.h	/^nk_str_insert_at_rune(struct nk_str *str, int pos, const char *cstr, int len)$/;"	f
nk_str_insert_at_rune	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_at_rune(struct nk_str *str, int pos, const char *cstr, int len)$/;"	f
nk_str_insert_str_char	lib/nuklear/nuklear.h	/^nk_str_insert_str_char(struct nk_str *str, int pos, const char *text)$/;"	f
nk_str_insert_str_char	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_str_char(struct nk_str *str, int pos, const char *text)$/;"	f
nk_str_insert_str_runes	lib/nuklear/nuklear.h	/^nk_str_insert_str_runes(struct nk_str *str, int pos, const nk_rune *runes)$/;"	f
nk_str_insert_str_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_str_runes(struct nk_str *str, int pos, const nk_rune *runes)$/;"	f
nk_str_insert_str_utf8	lib/nuklear/nuklear.h	/^nk_str_insert_str_utf8(struct nk_str *str, int pos, const char *text)$/;"	f
nk_str_insert_str_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_str_utf8(struct nk_str *str, int pos, const char *text)$/;"	f
nk_str_insert_text_char	lib/nuklear/nuklear.h	/^nk_str_insert_text_char(struct nk_str *str, int pos, const char *text, int len)$/;"	f
nk_str_insert_text_char	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_text_char(struct nk_str *str, int pos, const char *text, int len)$/;"	f
nk_str_insert_text_runes	lib/nuklear/nuklear.h	/^nk_str_insert_text_runes(struct nk_str *str, int pos, const nk_rune *runes, int len)$/;"	f
nk_str_insert_text_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_text_runes(struct nk_str *str, int pos, const nk_rune *runes, int len)$/;"	f
nk_str_insert_text_utf8	lib/nuklear/nuklear.h	/^nk_str_insert_text_utf8(struct nk_str *str, int pos, const char *text, int len)$/;"	f
nk_str_insert_text_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_text_utf8(struct nk_str *str, int pos, const char *text, int len)$/;"	f
nk_str_len	lib/nuklear/nuklear.h	/^nk_str_len(struct nk_str *s)$/;"	f
nk_str_len	lib/nuklear/src/nuklear_string.c	/^nk_str_len(struct nk_str *s)$/;"	f
nk_str_len_char	lib/nuklear/nuklear.h	/^nk_str_len_char(struct nk_str *s)$/;"	f
nk_str_len_char	lib/nuklear/src/nuklear_string.c	/^nk_str_len_char(struct nk_str *s)$/;"	f
nk_str_match_here	lib/nuklear/nuklear.h	/^nk_str_match_here(const char *regexp, const char *text)$/;"	f
nk_str_match_here	lib/nuklear/src/nuklear_util.c	/^nk_str_match_here(const char *regexp, const char *text)$/;"	f
nk_str_match_star	lib/nuklear/nuklear.h	/^nk_str_match_star(int c, const char *regexp, const char *text)$/;"	f
nk_str_match_star	lib/nuklear/src/nuklear_util.c	/^nk_str_match_star(int c, const char *regexp, const char *text)$/;"	f
nk_str_remove_chars	lib/nuklear/nuklear.h	/^nk_str_remove_chars(struct nk_str *s, int len)$/;"	f
nk_str_remove_chars	lib/nuklear/src/nuklear_string.c	/^nk_str_remove_chars(struct nk_str *s, int len)$/;"	f
nk_str_remove_runes	lib/nuklear/nuklear.h	/^nk_str_remove_runes(struct nk_str *str, int len)$/;"	f
nk_str_remove_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_remove_runes(struct nk_str *str, int len)$/;"	f
nk_str_rune_at	lib/nuklear/nuklear.h	/^nk_str_rune_at(const struct nk_str *str, int pos)$/;"	f
nk_str_rune_at	lib/nuklear/src/nuklear_string.c	/^nk_str_rune_at(const struct nk_str *str, int pos)$/;"	f
nk_strfilter	lib/nuklear/nuklear.h	/^nk_strfilter(const char *text, const char *regexp)$/;"	f
nk_strfilter	lib/nuklear/src/nuklear_util.c	/^nk_strfilter(const char *text, const char *regexp)$/;"	f
nk_strfmt	lib/nuklear/nuklear.h	/^nk_strfmt(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f
nk_strfmt	lib/nuklear/src/nuklear_util.c	/^nk_strfmt(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f
nk_stricmp	lib/nuklear/nuklear.h	/^nk_stricmp(const char *s1, const char *s2)$/;"	f
nk_stricmp	lib/nuklear/src/nuklear_util.c	/^nk_stricmp(const char *s1, const char *s2)$/;"	f
nk_stricmpn	lib/nuklear/nuklear.h	/^nk_stricmpn(const char *s1, const char *s2, int n)$/;"	f
nk_stricmpn	lib/nuklear/src/nuklear_util.c	/^nk_stricmpn(const char *s1, const char *s2, int n)$/;"	f
nk_string_float_limit	lib/nuklear/nuklear.h	/^nk_string_float_limit(char *string, int prec)$/;"	f
nk_string_float_limit	lib/nuklear/src/nuklear_util.c	/^nk_string_float_limit(char *string, int prec)$/;"	f
nk_strlen	lib/nuklear/nuklear.h	/^nk_strlen(const char *str)$/;"	f
nk_strlen	lib/nuklear/src/nuklear_util.c	/^nk_strlen(const char *str)$/;"	f
nk_strmatch_fuzzy_string	lib/nuklear/nuklear.h	/^nk_strmatch_fuzzy_string(char const *str, char const *pattern, int *out_score)$/;"	f
nk_strmatch_fuzzy_string	lib/nuklear/src/nuklear_util.c	/^nk_strmatch_fuzzy_string(char const *str, char const *pattern, int *out_score)$/;"	f
nk_strmatch_fuzzy_text	lib/nuklear/nuklear.h	/^nk_strmatch_fuzzy_text(const char *str, int str_len,$/;"	f
nk_strmatch_fuzzy_text	lib/nuklear/src/nuklear_util.c	/^nk_strmatch_fuzzy_text(const char *str, int str_len,$/;"	f
nk_stroke_arc	lib/nuklear/nuklear.h	/^nk_stroke_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f
nk_stroke_arc	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f
nk_stroke_circle	lib/nuklear/nuklear.h	/^nk_stroke_circle(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_stroke_circle	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_circle(struct nk_command_buffer *b, struct nk_rect r,$/;"	f
nk_stroke_curve	lib/nuklear/nuklear.h	/^nk_stroke_curve(struct nk_command_buffer *b, float ax, float ay,$/;"	f
nk_stroke_curve	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_curve(struct nk_command_buffer *b, float ax, float ay,$/;"	f
nk_stroke_line	lib/nuklear/nuklear.h	/^nk_stroke_line(struct nk_command_buffer *b, float x0, float y0,$/;"	f
nk_stroke_line	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_line(struct nk_command_buffer *b, float x0, float y0,$/;"	f
nk_stroke_polygon	lib/nuklear/nuklear.h	/^nk_stroke_polygon(struct nk_command_buffer *b,  float *points, int point_count,$/;"	f
nk_stroke_polygon	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_polygon(struct nk_command_buffer *b,  float *points, int point_count,$/;"	f
nk_stroke_polyline	lib/nuklear/nuklear.h	/^nk_stroke_polyline(struct nk_command_buffer *b, float *points, int point_count,$/;"	f
nk_stroke_polyline	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_polyline(struct nk_command_buffer *b, float *points, int point_count,$/;"	f
nk_stroke_rect	lib/nuklear/nuklear.h	/^nk_stroke_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_stroke_rect	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f
nk_stroke_triangle	lib/nuklear/nuklear.h	/^nk_stroke_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f
nk_stroke_triangle	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f
nk_strrev_ascii	lib/nuklear/nuklear.h	/^nk_strrev_ascii(char *s)$/;"	f
nk_strrev_ascii	lib/nuklear/src/nuklear_util.c	/^nk_strrev_ascii(char *s)$/;"	f
nk_strtod	lib/nuklear/nuklear.h	/^nk_strtod(const char *str, const char **endptr)$/;"	f
nk_strtod	lib/nuklear/src/nuklear_util.c	/^nk_strtod(const char *str, const char **endptr)$/;"	f
nk_strtof	lib/nuklear/nuklear.h	/^nk_strtof(const char *str, const char **endptr)$/;"	f
nk_strtof	lib/nuklear/src/nuklear_util.c	/^nk_strtof(const char *str, const char **endptr)$/;"	f
nk_strtoi	lib/nuklear/nuklear.h	/^nk_strtoi(const char *str, const char **endptr)$/;"	f
nk_strtoi	lib/nuklear/src/nuklear_util.c	/^nk_strtoi(const char *str, const char **endptr)$/;"	f
nk_style	lib/nuklear/nuklear.h	/^struct nk_style {$/;"	s
nk_style	lib/nuklear/src/nuklear.h	/^struct nk_style {$/;"	s
nk_style_button	lib/nuklear/nuklear.h	/^struct nk_style_button {$/;"	s
nk_style_button	lib/nuklear/src/nuklear.h	/^struct nk_style_button {$/;"	s
nk_style_chart	lib/nuklear/nuklear.h	/^struct nk_style_chart {$/;"	s
nk_style_chart	lib/nuklear/src/nuklear.h	/^struct nk_style_chart {$/;"	s
nk_style_colors	lib/nuklear/nuklear.h	/^enum nk_style_colors {$/;"	g
nk_style_colors	lib/nuklear/src/nuklear.h	/^enum nk_style_colors {$/;"	g
nk_style_combo	lib/nuklear/nuklear.h	/^struct nk_style_combo {$/;"	s
nk_style_combo	lib/nuklear/src/nuklear.h	/^struct nk_style_combo {$/;"	s
nk_style_cursor	lib/nuklear/nuklear.h	/^enum nk_style_cursor {$/;"	g
nk_style_cursor	lib/nuklear/src/nuklear.h	/^enum nk_style_cursor {$/;"	g
nk_style_default	lib/nuklear/nuklear.h	/^NK_API void nk_style_default(struct nk_context *ctx){nk_style_from_table(ctx, 0);}$/;"	f
nk_style_default	lib/nuklear/src/nuklear_style.c	/^NK_API void nk_style_default(struct nk_context *ctx){nk_style_from_table(ctx, 0);}$/;"	f
nk_style_edit	lib/nuklear/nuklear.h	/^struct nk_style_edit {$/;"	s
nk_style_edit	lib/nuklear/src/nuklear.h	/^struct nk_style_edit {$/;"	s
nk_style_from_table	lib/nuklear/nuklear.h	/^nk_style_from_table(struct nk_context *ctx, const struct nk_color *table)$/;"	f
nk_style_from_table	lib/nuklear/src/nuklear_style.c	/^nk_style_from_table(struct nk_context *ctx, const struct nk_color *table)$/;"	f
nk_style_get_color_by_name	lib/nuklear/nuklear.h	/^nk_style_get_color_by_name(enum nk_style_colors c)$/;"	f
nk_style_get_color_by_name	lib/nuklear/src/nuklear_style.c	/^nk_style_get_color_by_name(enum nk_style_colors c)$/;"	f
nk_style_header_align	lib/nuklear/nuklear.h	/^enum nk_style_header_align {$/;"	g
nk_style_header_align	lib/nuklear/src/nuklear.h	/^enum nk_style_header_align {$/;"	g
nk_style_hide_cursor	lib/nuklear/nuklear.h	/^nk_style_hide_cursor(struct nk_context *ctx)$/;"	f
nk_style_hide_cursor	lib/nuklear/src/nuklear_style.c	/^nk_style_hide_cursor(struct nk_context *ctx)$/;"	f
nk_style_item	lib/nuklear/nuklear.h	/^struct nk_style_item {$/;"	s
nk_style_item	lib/nuklear/src/nuklear.h	/^struct nk_style_item {$/;"	s
nk_style_item_color	lib/nuklear/nuklear.h	/^nk_style_item_color(struct nk_color col)$/;"	f
nk_style_item_color	lib/nuklear/src/nuklear_style.c	/^nk_style_item_color(struct nk_color col)$/;"	f
nk_style_item_data	lib/nuklear/nuklear.h	/^union nk_style_item_data {$/;"	u
nk_style_item_data	lib/nuklear/src/nuklear.h	/^union nk_style_item_data {$/;"	u
nk_style_item_hide	lib/nuklear/nuklear.h	/^nk_style_item_hide(void)$/;"	f
nk_style_item_hide	lib/nuklear/src/nuklear_style.c	/^nk_style_item_hide(void)$/;"	f
nk_style_item_image	lib/nuklear/nuklear.h	/^nk_style_item_image(struct nk_image img)$/;"	f
nk_style_item_image	lib/nuklear/src/nuklear_style.c	/^nk_style_item_image(struct nk_image img)$/;"	f
nk_style_item_type	lib/nuklear/nuklear.h	/^enum nk_style_item_type {$/;"	g
nk_style_item_type	lib/nuklear/src/nuklear.h	/^enum nk_style_item_type {$/;"	g
nk_style_load_all_cursors	lib/nuklear/nuklear.h	/^nk_style_load_all_cursors(struct nk_context *ctx, struct nk_cursor *cursors)$/;"	f
nk_style_load_all_cursors	lib/nuklear/src/nuklear_style.c	/^nk_style_load_all_cursors(struct nk_context *ctx, struct nk_cursor *cursors)$/;"	f
nk_style_load_cursor	lib/nuklear/nuklear.h	/^nk_style_load_cursor(struct nk_context *ctx, enum nk_style_cursor cursor,$/;"	f
nk_style_load_cursor	lib/nuklear/src/nuklear_style.c	/^nk_style_load_cursor(struct nk_context *ctx, enum nk_style_cursor cursor,$/;"	f
nk_style_pop_font	lib/nuklear/nuklear.h	/^nk_style_pop_font(struct nk_context *ctx)$/;"	f
nk_style_pop_font	lib/nuklear/src/nuklear_style.c	/^nk_style_pop_font(struct nk_context *ctx)$/;"	f
nk_style_progress	lib/nuklear/nuklear.h	/^struct nk_style_progress {$/;"	s
nk_style_progress	lib/nuklear/src/nuklear.h	/^struct nk_style_progress {$/;"	s
nk_style_property	lib/nuklear/nuklear.h	/^struct nk_style_property {$/;"	s
nk_style_property	lib/nuklear/src/nuklear.h	/^struct nk_style_property {$/;"	s
nk_style_push_font	lib/nuklear/nuklear.h	/^nk_style_push_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_style_push_font	lib/nuklear/src/nuklear_style.c	/^nk_style_push_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_style_scrollbar	lib/nuklear/nuklear.h	/^struct nk_style_scrollbar {$/;"	s
nk_style_scrollbar	lib/nuklear/src/nuklear.h	/^struct nk_style_scrollbar {$/;"	s
nk_style_selectable	lib/nuklear/nuklear.h	/^struct nk_style_selectable {$/;"	s
nk_style_selectable	lib/nuklear/src/nuklear.h	/^struct nk_style_selectable {$/;"	s
nk_style_set_cursor	lib/nuklear/nuklear.h	/^nk_style_set_cursor(struct nk_context *ctx, enum nk_style_cursor c)$/;"	f
nk_style_set_font	lib/nuklear/nuklear.h	/^nk_style_set_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_style_set_font	lib/nuklear/src/nuklear_style.c	/^nk_style_set_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f
nk_style_show_cursor	lib/nuklear/nuklear.h	/^nk_style_show_cursor(struct nk_context *ctx)$/;"	f
nk_style_show_cursor	lib/nuklear/src/nuklear_style.c	/^nk_style_show_cursor(struct nk_context *ctx)$/;"	f
nk_style_slider	lib/nuklear/nuklear.h	/^struct nk_style_slider {$/;"	s
nk_style_slider	lib/nuklear/src/nuklear.h	/^struct nk_style_slider {$/;"	s
nk_style_tab	lib/nuklear/nuklear.h	/^struct nk_style_tab {$/;"	s
nk_style_tab	lib/nuklear/src/nuklear.h	/^struct nk_style_tab {$/;"	s
nk_style_text	lib/nuklear/nuklear.h	/^struct nk_style_text {$/;"	s
nk_style_text	lib/nuklear/src/nuklear.h	/^struct nk_style_text {$/;"	s
nk_style_toggle	lib/nuklear/nuklear.h	/^struct nk_style_toggle {$/;"	s
nk_style_toggle	lib/nuklear/src/nuklear.h	/^struct nk_style_toggle {$/;"	s
nk_style_window	lib/nuklear/nuklear.h	/^struct nk_style_window {$/;"	s
nk_style_window	lib/nuklear/src/nuklear.h	/^struct nk_style_window {$/;"	s
nk_style_window_header	lib/nuklear/nuklear.h	/^struct nk_style_window_header {$/;"	s
nk_style_window_header	lib/nuklear/src/nuklear.h	/^struct nk_style_window_header {$/;"	s
nk_subimage_handle	lib/nuklear/nuklear.h	/^nk_subimage_handle(nk_handle handle, unsigned short w, unsigned short h,$/;"	f
nk_subimage_handle	lib/nuklear/src/nuklear_image.c	/^nk_subimage_handle(nk_handle handle, unsigned short w, unsigned short h,$/;"	f
nk_subimage_id	lib/nuklear/nuklear.h	/^nk_subimage_id(int id, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f
nk_subimage_id	lib/nuklear/src/nuklear_image.c	/^nk_subimage_id(int id, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f
nk_subimage_ptr	lib/nuklear/nuklear.h	/^nk_subimage_ptr(void *ptr, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f
nk_subimage_ptr	lib/nuklear/src/nuklear_image.c	/^nk_subimage_ptr(void *ptr, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f
nk_symbol_type	lib/nuklear/nuklear.h	/^enum nk_symbol_type {$/;"	g
nk_symbol_type	lib/nuklear/src/nuklear.h	/^enum nk_symbol_type {$/;"	g
nk_table	lib/nuklear/nuklear.h	/^struct nk_table {$/;"	s
nk_table	lib/nuklear/src/nuklear.h	/^struct nk_table {$/;"	s
nk_text	lib/nuklear/nuklear.h	/^nk_text(struct nk_context *ctx, const char *str, int len, nk_flags alignment)$/;"	f
nk_text	lib/nuklear/nuklear.h	/^struct nk_text {$/;"	s
nk_text	lib/nuklear/src/nuklear_internal.h	/^struct nk_text {$/;"	s
nk_text	lib/nuklear/src/nuklear_text.c	/^nk_text(struct nk_context *ctx, const char *str, int len, nk_flags alignment)$/;"	f
nk_text_align	lib/nuklear/nuklear.h	/^enum nk_text_align {$/;"	g
nk_text_align	lib/nuklear/src/nuklear.h	/^enum nk_text_align {$/;"	g
nk_text_alignment	lib/nuklear/nuklear.h	/^enum nk_text_alignment {$/;"	g
nk_text_alignment	lib/nuklear/src/nuklear.h	/^enum nk_text_alignment {$/;"	g
nk_text_calculate_text_bounds	lib/nuklear/nuklear.h	/^nk_text_calculate_text_bounds(const struct nk_user_font *font,$/;"	f
nk_text_calculate_text_bounds	lib/nuklear/src/nuklear_util.c	/^nk_text_calculate_text_bounds(const struct nk_user_font *font,$/;"	f
nk_text_clamp	lib/nuklear/nuklear.h	/^nk_text_clamp(const struct nk_user_font *font, const char *text,$/;"	f
nk_text_clamp	lib/nuklear/src/nuklear_util.c	/^nk_text_clamp(const struct nk_user_font *font, const char *text,$/;"	f
nk_text_colored	lib/nuklear/nuklear.h	/^nk_text_colored(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_text_colored	lib/nuklear/src/nuklear_text.c	/^nk_text_colored(struct nk_context *ctx, const char *str, int len,$/;"	f
nk_text_edit	lib/nuklear/nuklear.h	/^struct nk_text_edit {$/;"	s
nk_text_edit	lib/nuklear/src/nuklear.h	/^struct nk_text_edit {$/;"	s
nk_text_edit_mode	lib/nuklear/nuklear.h	/^enum nk_text_edit_mode {$/;"	g
nk_text_edit_mode	lib/nuklear/src/nuklear.h	/^enum nk_text_edit_mode {$/;"	g
nk_text_edit_row	lib/nuklear/nuklear.h	/^struct nk_text_edit_row {$/;"	s
nk_text_edit_row	lib/nuklear/src/nuklear_text_editor.c	/^struct nk_text_edit_row {$/;"	s	file:
nk_text_edit_type	lib/nuklear/nuklear.h	/^enum nk_text_edit_type {$/;"	g
nk_text_edit_type	lib/nuklear/src/nuklear.h	/^enum nk_text_edit_type {$/;"	g
nk_text_find	lib/nuklear/nuklear.h	/^struct nk_text_find {$/;"	s
nk_text_find	lib/nuklear/src/nuklear_text_editor.c	/^struct nk_text_find {$/;"	s	file:
nk_text_undo_record	lib/nuklear/nuklear.h	/^struct nk_text_undo_record {$/;"	s
nk_text_undo_record	lib/nuklear/src/nuklear.h	/^struct nk_text_undo_record {$/;"	s
nk_text_undo_state	lib/nuklear/nuklear.h	/^struct nk_text_undo_state {$/;"	s
nk_text_undo_state	lib/nuklear/src/nuklear.h	/^struct nk_text_undo_state {$/;"	s
nk_text_width_f	lib/nuklear/nuklear.h	/^typedef float(*nk_text_width_f)(nk_handle, float h, const char*, int len);$/;"	t
nk_text_width_f	lib/nuklear/src/nuklear.h	/^typedef float(*nk_text_width_f)(nk_handle, float h, const char*, int len);$/;"	t
nk_text_wrap	lib/nuklear/nuklear.h	/^nk_text_wrap(struct nk_context *ctx, const char *str, int len)$/;"	f
nk_text_wrap	lib/nuklear/src/nuklear_text.c	/^nk_text_wrap(struct nk_context *ctx, const char *str, int len)$/;"	f
nk_text_wrap_colored	lib/nuklear/nuklear.h	/^nk_text_wrap_colored(struct nk_context *ctx, const char *str,$/;"	f
nk_text_wrap_colored	lib/nuklear/src/nuklear_text.c	/^nk_text_wrap_colored(struct nk_context *ctx, const char *str,$/;"	f
nk_textedit_clamp	lib/nuklear/nuklear.h	/^nk_textedit_clamp(struct nk_text_edit *state)$/;"	f
nk_textedit_clamp	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_clamp(struct nk_text_edit *state)$/;"	f
nk_textedit_clear_state	lib/nuklear/nuklear.h	/^nk_textedit_clear_state(struct nk_text_edit *state, enum nk_text_edit_type type,$/;"	f
nk_textedit_clear_state	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_clear_state(struct nk_text_edit *state, enum nk_text_edit_type type,$/;"	f
nk_textedit_click	lib/nuklear/nuklear.h	/^nk_textedit_click(struct nk_text_edit *state, float x, float y,$/;"	f
nk_textedit_click	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_click(struct nk_text_edit *state, float x, float y,$/;"	f
nk_textedit_create_undo_record	lib/nuklear/nuklear.h	/^nk_textedit_create_undo_record(struct nk_text_undo_state *state, int numchars)$/;"	f
nk_textedit_create_undo_record	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_create_undo_record(struct nk_text_undo_state *state, int numchars)$/;"	f
nk_textedit_createundo	lib/nuklear/nuklear.h	/^nk_textedit_createundo(struct nk_text_undo_state *state, int pos,$/;"	f
nk_textedit_createundo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_createundo(struct nk_text_undo_state *state, int pos,$/;"	f
nk_textedit_cut	lib/nuklear/nuklear.h	/^nk_textedit_cut(struct nk_text_edit *state)$/;"	f
nk_textedit_cut	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_cut(struct nk_text_edit *state)$/;"	f
nk_textedit_delete	lib/nuklear/nuklear.h	/^nk_textedit_delete(struct nk_text_edit *state, int where, int len)$/;"	f
nk_textedit_delete	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_delete(struct nk_text_edit *state, int where, int len)$/;"	f
nk_textedit_delete_selection	lib/nuklear/nuklear.h	/^nk_textedit_delete_selection(struct nk_text_edit *state)$/;"	f
nk_textedit_delete_selection	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_delete_selection(struct nk_text_edit *state)$/;"	f
nk_textedit_discard_redo	lib/nuklear/nuklear.h	/^nk_textedit_discard_redo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_discard_redo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_discard_redo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_discard_undo	lib/nuklear/nuklear.h	/^nk_textedit_discard_undo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_discard_undo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_discard_undo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_drag	lib/nuklear/nuklear.h	/^nk_textedit_drag(struct nk_text_edit *state, float x, float y,$/;"	f
nk_textedit_drag	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_drag(struct nk_text_edit *state, float x, float y,$/;"	f
nk_textedit_find_charpos	lib/nuklear/nuklear.h	/^nk_textedit_find_charpos(struct nk_text_find *find, struct nk_text_edit *state,$/;"	f
nk_textedit_find_charpos	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_find_charpos(struct nk_text_find *find, struct nk_text_edit *state,$/;"	f
nk_textedit_flush_redo	lib/nuklear/nuklear.h	/^nk_textedit_flush_redo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_flush_redo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_flush_redo(struct nk_text_undo_state *state)$/;"	f
nk_textedit_free	lib/nuklear/nuklear.h	/^nk_textedit_free(struct nk_text_edit *state)$/;"	f
nk_textedit_free	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_free(struct nk_text_edit *state)$/;"	f
nk_textedit_get_width	lib/nuklear/nuklear.h	/^nk_textedit_get_width(const struct nk_text_edit *edit, int line_start, int char_id,$/;"	f
nk_textedit_get_width	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_get_width(const struct nk_text_edit *edit, int line_start, int char_id,$/;"	f
nk_textedit_init	lib/nuklear/nuklear.h	/^nk_textedit_init(struct nk_text_edit *state, struct nk_allocator *alloc, nk_size size)$/;"	f
nk_textedit_init	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_init(struct nk_text_edit *state, struct nk_allocator *alloc, nk_size size)$/;"	f
nk_textedit_init_default	lib/nuklear/nuklear.h	/^nk_textedit_init_default(struct nk_text_edit *state)$/;"	f
nk_textedit_init_default	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_init_default(struct nk_text_edit *state)$/;"	f
nk_textedit_init_fixed	lib/nuklear/nuklear.h	/^nk_textedit_init_fixed(struct nk_text_edit *state, void *memory, nk_size size)$/;"	f
nk_textedit_init_fixed	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_init_fixed(struct nk_text_edit *state, void *memory, nk_size size)$/;"	f
nk_textedit_key	lib/nuklear/nuklear.h	/^nk_textedit_key(struct nk_text_edit *state, enum nk_keys key, int shift_mod,$/;"	f
nk_textedit_key	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_key(struct nk_text_edit *state, enum nk_keys key, int shift_mod,$/;"	f
nk_textedit_layout_row	lib/nuklear/nuklear.h	/^nk_textedit_layout_row(struct nk_text_edit_row *r, struct nk_text_edit *edit,$/;"	f
nk_textedit_layout_row	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_layout_row(struct nk_text_edit_row *r, struct nk_text_edit *edit,$/;"	f
nk_textedit_locate_coord	lib/nuklear/nuklear.h	/^nk_textedit_locate_coord(struct nk_text_edit *edit, float x, float y,$/;"	f
nk_textedit_locate_coord	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_locate_coord(struct nk_text_edit *edit, float x, float y,$/;"	f
nk_textedit_makeundo_delete	lib/nuklear/nuklear.h	/^nk_textedit_makeundo_delete(struct nk_text_edit *state, int where, int length)$/;"	f
nk_textedit_makeundo_delete	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_makeundo_delete(struct nk_text_edit *state, int where, int length)$/;"	f
nk_textedit_makeundo_insert	lib/nuklear/nuklear.h	/^nk_textedit_makeundo_insert(struct nk_text_edit *state, int where, int length)$/;"	f
nk_textedit_makeundo_insert	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_makeundo_insert(struct nk_text_edit *state, int where, int length)$/;"	f
nk_textedit_makeundo_replace	lib/nuklear/nuklear.h	/^nk_textedit_makeundo_replace(struct nk_text_edit *state, int where,$/;"	f
nk_textedit_makeundo_replace	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_makeundo_replace(struct nk_text_edit *state, int where,$/;"	f
nk_textedit_move_to_first	lib/nuklear/nuklear.h	/^nk_textedit_move_to_first(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_first	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_first(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_last	lib/nuklear/nuklear.h	/^nk_textedit_move_to_last(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_last	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_last(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_word_next	lib/nuklear/nuklear.h	/^nk_textedit_move_to_word_next(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_word_next	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_word_next(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_word_previous	lib/nuklear/nuklear.h	/^nk_textedit_move_to_word_previous(struct nk_text_edit *state)$/;"	f
nk_textedit_move_to_word_previous	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_word_previous(struct nk_text_edit *state)$/;"	f
nk_textedit_paste	lib/nuklear/nuklear.h	/^nk_textedit_paste(struct nk_text_edit *state, char const *ctext, int len)$/;"	f
nk_textedit_paste	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_paste(struct nk_text_edit *state, char const *ctext, int len)$/;"	f
nk_textedit_prep_selection_at_cursor	lib/nuklear/nuklear.h	/^nk_textedit_prep_selection_at_cursor(struct nk_text_edit *state)$/;"	f
nk_textedit_prep_selection_at_cursor	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_prep_selection_at_cursor(struct nk_text_edit *state)$/;"	f
nk_textedit_redo	lib/nuklear/nuklear.h	/^nk_textedit_redo(struct nk_text_edit *state)$/;"	f
nk_textedit_redo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_redo(struct nk_text_edit *state)$/;"	f
nk_textedit_select_all	lib/nuklear/nuklear.h	/^nk_textedit_select_all(struct nk_text_edit *state)$/;"	f
nk_textedit_select_all	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_select_all(struct nk_text_edit *state)$/;"	f
nk_textedit_sortselection	lib/nuklear/nuklear.h	/^nk_textedit_sortselection(struct nk_text_edit *state)$/;"	f
nk_textedit_sortselection	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_sortselection(struct nk_text_edit *state)$/;"	f
nk_textedit_text	lib/nuklear/nuklear.h	/^nk_textedit_text(struct nk_text_edit *state, const char *text, int total_len)$/;"	f
nk_textedit_text	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_text(struct nk_text_edit *state, const char *text, int total_len)$/;"	f
nk_textedit_undo	lib/nuklear/nuklear.h	/^nk_textedit_undo(struct nk_text_edit *state)$/;"	f
nk_textedit_undo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_undo(struct nk_text_edit *state)$/;"	f
nk_timestamp	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_timestamp(void)$/;"	f
nk_timestamp	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_timestamp(void)$/;"	f
nk_timestamp	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_timestamp(void)$/;"	f
nk_timestamp	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_timestamp(void)$/;"	f
nk_to_lower	lib/nuklear/nuklear.h	/^NK_LIB int nk_to_lower(int c) {return (c >= 'A' && c <= 'Z') ? (c - ('a' + 'A')) : c;}$/;"	f
nk_to_lower	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_to_lower(int c) {return (c >= 'A' && c <= 'Z') ? (c - ('a' + 'A')) : c;}$/;"	f
nk_to_upper	lib/nuklear/nuklear.h	/^NK_LIB int nk_to_upper(int c) {return (c >= 'a' && c <= 'z') ? (c - ('a' - 'A')) : c;}$/;"	f
nk_to_upper	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_to_upper(int c) {return (c >= 'a' && c <= 'z') ? (c - ('a' - 'A')) : c;}$/;"	f
nk_toggle_behavior	lib/nuklear/nuklear.h	/^nk_toggle_behavior(const struct nk_input *in, struct nk_rect select,$/;"	f
nk_toggle_behavior	lib/nuklear/src/nuklear_toggle.c	/^nk_toggle_behavior(const struct nk_input *in, struct nk_rect select,$/;"	f
nk_toggle_type	lib/nuklear/nuklear.h	/^enum nk_toggle_type {$/;"	g
nk_toggle_type	lib/nuklear/src/nuklear_internal.h	/^enum nk_toggle_type {$/;"	g
nk_tooltip	lib/nuklear/nuklear.h	/^nk_tooltip(struct nk_context *ctx, const char *text)$/;"	f
nk_tooltip	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltip(struct nk_context *ctx, const char *text)$/;"	f
nk_tooltip_begin	lib/nuklear/nuklear.h	/^nk_tooltip_begin(struct nk_context *ctx, float width)$/;"	f
nk_tooltip_begin	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltip_begin(struct nk_context *ctx, float width)$/;"	f
nk_tooltip_end	lib/nuklear/nuklear.h	/^nk_tooltip_end(struct nk_context *ctx)$/;"	f
nk_tooltip_end	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltip_end(struct nk_context *ctx)$/;"	f
nk_tooltipf	lib/nuklear/nuklear.h	/^nk_tooltipf(struct nk_context *ctx, const char *fmt, ...)$/;"	f
nk_tooltipf	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltipf(struct nk_context *ctx, const char *fmt, ...)$/;"	f
nk_tooltipfv	lib/nuklear/nuklear.h	/^nk_tooltipfv(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f
nk_tooltipfv	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltipfv(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f
nk_tree_base	lib/nuklear/nuklear.h	/^nk_tree_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_base	lib/nuklear/nuklear.h	/^nk_tree_element_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_image_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_element_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_image_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_image_push_hashed_base	lib/nuklear/nuklear.h	/^nk_tree_element_image_push_hashed_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_image_push_hashed_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_image_push_hashed_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_pop	lib/nuklear/nuklear.h	/^nk_tree_element_pop(struct nk_context *ctx)$/;"	f
nk_tree_element_pop	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_pop(struct nk_context *ctx)$/;"	f
nk_tree_element_push	lib/nuklear/nuklear.h	3014;"	d
nk_tree_element_push	lib/nuklear/src/nuklear.h	2795;"	d
nk_tree_element_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_element_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_element_push_id	lib/nuklear/nuklear.h	3015;"	d
nk_tree_element_push_id	lib/nuklear/src/nuklear.h	2796;"	d
nk_tree_image_push	lib/nuklear/nuklear.h	2916;"	d
nk_tree_image_push	lib/nuklear/src/nuklear.h	2697;"	d
nk_tree_image_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_image_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_image_push_id	lib/nuklear/nuklear.h	2936;"	d
nk_tree_image_push_id	lib/nuklear/src/nuklear.h	2717;"	d
nk_tree_pop	lib/nuklear/nuklear.h	/^nk_tree_pop(struct nk_context *ctx)$/;"	f
nk_tree_pop	lib/nuklear/src/nuklear_tree.c	/^nk_tree_pop(struct nk_context *ctx)$/;"	f
nk_tree_push	lib/nuklear/nuklear.h	2856;"	d
nk_tree_push	lib/nuklear/src/nuklear.h	2637;"	d
nk_tree_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_push_id	lib/nuklear/nuklear.h	2873;"	d
nk_tree_push_id	lib/nuklear/src/nuklear.h	2654;"	d
nk_tree_state_base	lib/nuklear/nuklear.h	/^nk_tree_state_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_state_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_state_image_push	lib/nuklear/nuklear.h	/^nk_tree_state_image_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_state_image_push	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_image_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_state_pop	lib/nuklear/nuklear.h	/^nk_tree_state_pop(struct nk_context *ctx)$/;"	f
nk_tree_state_pop	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_pop(struct nk_context *ctx)$/;"	f
nk_tree_state_push	lib/nuklear/nuklear.h	/^nk_tree_state_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_state_push	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f
nk_tree_type	lib/nuklear/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	g
nk_tree_type	lib/nuklear/src/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	g
nk_triangle_from_direction	lib/nuklear/nuklear.h	/^nk_triangle_from_direction(struct nk_vec2 *result, struct nk_rect r,$/;"	f
nk_triangle_from_direction	lib/nuklear/src/nuklear_math.c	/^nk_triangle_from_direction(struct nk_vec2 *result, struct nk_rect r,$/;"	f
nk_true	lib/nuklear/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon131
nk_true	lib/nuklear/src/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon160
nk_ttBYTE	lib/nuklear/nuklear.h	11080;"	d
nk_ttBYTE	lib/nuklear/src/nuklear_font.c	529;"	d	file:
nk_ttCHAR	lib/nuklear/nuklear.h	11081;"	d
nk_ttCHAR	lib/nuklear/src/nuklear_font.c	530;"	d	file:
nk_ttLONG	lib/nuklear/nuklear.h	11087;"	d
nk_ttLONG	lib/nuklear/src/nuklear_font.c	536;"	d	file:
nk_ttSHORT	lib/nuklear/nuklear.h	/^    static nk_short nk_ttSHORT(const nk_byte *p)   { return (nk_short)(p[0]*256 + p[1]); }$/;"	f
nk_ttSHORT	lib/nuklear/nuklear.h	11085;"	d
nk_ttSHORT	lib/nuklear/src/nuklear_font.c	/^    static nk_short nk_ttSHORT(const nk_byte *p)   { return (nk_short)(p[0]*256 + p[1]); }$/;"	f	file:
nk_ttSHORT	lib/nuklear/src/nuklear_font.c	534;"	d	file:
nk_ttULONG	lib/nuklear/nuklear.h	/^    static nk_uint nk_ttULONG(const nk_byte *p)  { return (nk_uint)((p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]); }$/;"	f
nk_ttULONG	lib/nuklear/nuklear.h	11086;"	d
nk_ttULONG	lib/nuklear/src/nuklear_font.c	/^    static nk_uint nk_ttULONG(const nk_byte *p)  { return (nk_uint)((p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]); }$/;"	f	file:
nk_ttULONG	lib/nuklear/src/nuklear_font.c	535;"	d	file:
nk_ttUSHORT	lib/nuklear/nuklear.h	/^    static nk_ushort nk_ttUSHORT(const nk_byte *p) { return (nk_ushort)(p[0]*256 + p[1]); }$/;"	f
nk_ttUSHORT	lib/nuklear/nuklear.h	11084;"	d
nk_ttUSHORT	lib/nuklear/src/nuklear_font.c	/^    static nk_ushort nk_ttUSHORT(const nk_byte *p) { return (nk_ushort)(p[0]*256 + p[1]); }$/;"	f	file:
nk_ttUSHORT	lib/nuklear/src/nuklear_font.c	533;"	d	file:
nk_tt_FindGlyphIndex	lib/nuklear/nuklear.h	/^nk_tt_FindGlyphIndex(const struct nk_tt_fontinfo *info, int unicode_codepoint)$/;"	f
nk_tt_FindGlyphIndex	lib/nuklear/src/nuklear_font.c	/^nk_tt_FindGlyphIndex(const struct nk_tt_fontinfo *info, int unicode_codepoint)$/;"	f
nk_tt_FlattenCurves	lib/nuklear/nuklear.h	/^nk_tt_FlattenCurves(struct nk_tt_vertex *vertices, int num_verts,$/;"	f
nk_tt_FlattenCurves	lib/nuklear/src/nuklear_font.c	/^nk_tt_FlattenCurves(struct nk_tt_vertex *vertices, int num_verts,$/;"	f
nk_tt_GetFontVMetrics	lib/nuklear/nuklear.h	/^nk_tt_GetFontVMetrics(const struct nk_tt_fontinfo *info,$/;"	f
nk_tt_GetFontVMetrics	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetFontVMetrics(const struct nk_tt_fontinfo *info,$/;"	f
nk_tt_GetGlyphBitmapBox	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphBitmapBox(const struct nk_tt_fontinfo *font, int glyph,$/;"	f
nk_tt_GetGlyphBitmapBox	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphBitmapBox(const struct nk_tt_fontinfo *font, int glyph,$/;"	f
nk_tt_GetGlyphBitmapBoxSubpixel	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphBitmapBoxSubpixel(const struct nk_tt_fontinfo *font,$/;"	f
nk_tt_GetGlyphBitmapBoxSubpixel	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphBitmapBoxSubpixel(const struct nk_tt_fontinfo *font,$/;"	f
nk_tt_GetGlyphBox	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphBox(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f
nk_tt_GetGlyphBox	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphBox(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f
nk_tt_GetGlyphHMetrics	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphHMetrics(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f
nk_tt_GetGlyphHMetrics	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphHMetrics(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f
nk_tt_GetGlyphShape	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphShape(const struct nk_tt_fontinfo *info, struct nk_allocator *alloc,$/;"	f
nk_tt_GetGlyphShape	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphShape(const struct nk_tt_fontinfo *info, struct nk_allocator *alloc,$/;"	f
nk_tt_GetPackedQuad	lib/nuklear/nuklear.h	/^nk_tt_GetPackedQuad(struct nk_tt_packedchar *chardata, int pw, int ph,$/;"	f
nk_tt_GetPackedQuad	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetPackedQuad(struct nk_tt_packedchar *chardata, int pw, int ph,$/;"	f
nk_tt_InitFont	lib/nuklear/nuklear.h	/^nk_tt_InitFont(struct nk_tt_fontinfo *info, const unsigned char *data2, int fontstart)$/;"	f
nk_tt_InitFont	lib/nuklear/src/nuklear_font.c	/^nk_tt_InitFont(struct nk_tt_fontinfo *info, const unsigned char *data2, int fontstart)$/;"	f
nk_tt_MakeGlyphBitmapSubpixel	lib/nuklear/nuklear.h	/^nk_tt_MakeGlyphBitmapSubpixel(const struct nk_tt_fontinfo *info, unsigned char *output,$/;"	f
nk_tt_MakeGlyphBitmapSubpixel	lib/nuklear/src/nuklear_font.c	/^nk_tt_MakeGlyphBitmapSubpixel(const struct nk_tt_fontinfo *info, unsigned char *output,$/;"	f
nk_tt_PackBegin	lib/nuklear/nuklear.h	/^nk_tt_PackBegin(struct nk_tt_pack_context *spc, unsigned char *pixels,$/;"	f
nk_tt_PackBegin	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackBegin(struct nk_tt_pack_context *spc, unsigned char *pixels,$/;"	f
nk_tt_PackEnd	lib/nuklear/nuklear.h	/^nk_tt_PackEnd(struct nk_tt_pack_context *spc, struct nk_allocator *alloc)$/;"	f
nk_tt_PackEnd	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackEnd(struct nk_tt_pack_context *spc, struct nk_allocator *alloc)$/;"	f
nk_tt_PackFontRangesGatherRects	lib/nuklear/nuklear.h	/^nk_tt_PackFontRangesGatherRects(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_PackFontRangesGatherRects	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackFontRangesGatherRects(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_PackFontRangesRenderIntoRects	lib/nuklear/nuklear.h	/^nk_tt_PackFontRangesRenderIntoRects(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_PackFontRangesRenderIntoRects	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackFontRangesRenderIntoRects(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_PackSetOversampling	lib/nuklear/nuklear.h	/^nk_tt_PackSetOversampling(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_PackSetOversampling	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackSetOversampling(struct nk_tt_pack_context *spc,$/;"	f
nk_tt_Rasterize	lib/nuklear/nuklear.h	/^nk_tt_Rasterize(struct nk_tt__bitmap *result, float flatness_in_pixels,$/;"	f
nk_tt_Rasterize	lib/nuklear/src/nuklear_font.c	/^nk_tt_Rasterize(struct nk_tt__bitmap *result, float flatness_in_pixels,$/;"	f
nk_tt_ScaleForMappingEmToPixels	lib/nuklear/nuklear.h	/^nk_tt_ScaleForMappingEmToPixels(const struct nk_tt_fontinfo *info, float pixels)$/;"	f
nk_tt_ScaleForMappingEmToPixels	lib/nuklear/src/nuklear_font.c	/^nk_tt_ScaleForMappingEmToPixels(const struct nk_tt_fontinfo *info, float pixels)$/;"	f
nk_tt_ScaleForPixelHeight	lib/nuklear/nuklear.h	/^nk_tt_ScaleForPixelHeight(const struct nk_tt_fontinfo *info, float height)$/;"	f
nk_tt_ScaleForPixelHeight	lib/nuklear/src/nuklear_font.c	/^nk_tt_ScaleForPixelHeight(const struct nk_tt_fontinfo *info, float height)$/;"	f
nk_tt__GetGlyfOffset	lib/nuklear/nuklear.h	/^nk_tt__GetGlyfOffset(const struct nk_tt_fontinfo *info, int glyph_index)$/;"	f
nk_tt__GetGlyfOffset	lib/nuklear/src/nuklear_font.c	/^nk_tt__GetGlyfOffset(const struct nk_tt_fontinfo *info, int glyph_index)$/;"	f
nk_tt__active_edge	lib/nuklear/nuklear.h	/^struct nk_tt__active_edge {$/;"	s
nk_tt__active_edge	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__active_edge {$/;"	s	file:
nk_tt__add_point	lib/nuklear/nuklear.h	/^nk_tt__add_point(struct nk_tt__point *points, int n, float x, float y)$/;"	f
nk_tt__add_point	lib/nuklear/src/nuklear_font.c	/^nk_tt__add_point(struct nk_tt__point *points, int n, float x, float y)$/;"	f
nk_tt__bitmap	lib/nuklear/nuklear.h	/^struct nk_tt__bitmap{$/;"	s
nk_tt__bitmap	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__bitmap{$/;"	s	file:
nk_tt__close_shape	lib/nuklear/nuklear.h	/^nk_tt__close_shape(struct nk_tt_vertex *vertices, int num_vertices, int was_off,$/;"	f
nk_tt__close_shape	lib/nuklear/src/nuklear_font.c	/^nk_tt__close_shape(struct nk_tt_vertex *vertices, int num_vertices, int was_off,$/;"	f
nk_tt__edge	lib/nuklear/nuklear.h	/^struct nk_tt__edge {$/;"	s
nk_tt__edge	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__edge {$/;"	s	file:
nk_tt__fill_active_edges_new	lib/nuklear/nuklear.h	/^nk_tt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,$/;"	f
nk_tt__fill_active_edges_new	lib/nuklear/src/nuklear_font.c	/^nk_tt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,$/;"	f
nk_tt__find_table	lib/nuklear/nuklear.h	/^nk_tt__find_table(const nk_byte *data, nk_uint fontstart, const char *tag)$/;"	f
nk_tt__find_table	lib/nuklear/src/nuklear_font.c	/^nk_tt__find_table(const nk_byte *data, nk_uint fontstart, const char *tag)$/;"	f
nk_tt__h_prefilter	lib/nuklear/nuklear.h	/^nk_tt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f
nk_tt__h_prefilter	lib/nuklear/src/nuklear_font.c	/^nk_tt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f
nk_tt__handle_clipped_edge	lib/nuklear/nuklear.h	/^nk_tt__handle_clipped_edge(float *scanline, int x, struct nk_tt__active_edge *e,$/;"	f
nk_tt__handle_clipped_edge	lib/nuklear/src/nuklear_font.c	/^nk_tt__handle_clipped_edge(float *scanline, int x, struct nk_tt__active_edge *e,$/;"	f
nk_tt__hheap	lib/nuklear/nuklear.h	/^struct nk_tt__hheap {$/;"	s
nk_tt__hheap	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__hheap {$/;"	s	file:
nk_tt__hheap_alloc	lib/nuklear/nuklear.h	/^nk_tt__hheap_alloc(struct nk_tt__hheap *hh, nk_size size)$/;"	f
nk_tt__hheap_alloc	lib/nuklear/src/nuklear_font.c	/^nk_tt__hheap_alloc(struct nk_tt__hheap *hh, nk_size size)$/;"	f
nk_tt__hheap_chunk	lib/nuklear/nuklear.h	/^struct nk_tt__hheap_chunk {$/;"	s
nk_tt__hheap_chunk	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__hheap_chunk {$/;"	s	file:
nk_tt__hheap_cleanup	lib/nuklear/nuklear.h	/^nk_tt__hheap_cleanup(struct nk_tt__hheap *hh)$/;"	f
nk_tt__hheap_cleanup	lib/nuklear/src/nuklear_font.c	/^nk_tt__hheap_cleanup(struct nk_tt__hheap *hh)$/;"	f
nk_tt__hheap_free	lib/nuklear/nuklear.h	/^nk_tt__hheap_free(struct nk_tt__hheap *hh, void *p)$/;"	f
nk_tt__hheap_free	lib/nuklear/src/nuklear_font.c	/^nk_tt__hheap_free(struct nk_tt__hheap *hh, void *p)$/;"	f
nk_tt__new_active	lib/nuklear/nuklear.h	/^nk_tt__new_active(struct nk_tt__hheap *hh, struct nk_tt__edge *e,$/;"	f
nk_tt__new_active	lib/nuklear/src/nuklear_font.c	/^nk_tt__new_active(struct nk_tt__hheap *hh, struct nk_tt__edge *e,$/;"	f
nk_tt__oversample_shift	lib/nuklear/nuklear.h	/^nk_tt__oversample_shift(int oversample)$/;"	f
nk_tt__oversample_shift	lib/nuklear/src/nuklear_font.c	/^nk_tt__oversample_shift(int oversample)$/;"	f
nk_tt__point	lib/nuklear/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	s
nk_tt__point	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__point {float x,y;};$/;"	s	file:
nk_tt__rasterize	lib/nuklear/nuklear.h	/^nk_tt__rasterize(struct nk_tt__bitmap *result, struct nk_tt__point *pts,$/;"	f
nk_tt__rasterize	lib/nuklear/src/nuklear_font.c	/^nk_tt__rasterize(struct nk_tt__bitmap *result, struct nk_tt__point *pts,$/;"	f
nk_tt__rasterize_sorted_edges	lib/nuklear/nuklear.h	/^nk_tt__rasterize_sorted_edges(struct nk_tt__bitmap *result, struct nk_tt__edge *e,$/;"	f
nk_tt__rasterize_sorted_edges	lib/nuklear/src/nuklear_font.c	/^nk_tt__rasterize_sorted_edges(struct nk_tt__bitmap *result, struct nk_tt__edge *e,$/;"	f
nk_tt__sort_edges	lib/nuklear/nuklear.h	/^nk_tt__sort_edges(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__sort_edges	lib/nuklear/src/nuklear_font.c	/^nk_tt__sort_edges(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__sort_edges_ins_sort	lib/nuklear/nuklear.h	/^nk_tt__sort_edges_ins_sort(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__sort_edges_ins_sort	lib/nuklear/src/nuklear_font.c	/^nk_tt__sort_edges_ins_sort(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__sort_edges_quicksort	lib/nuklear/nuklear.h	/^nk_tt__sort_edges_quicksort(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__sort_edges_quicksort	lib/nuklear/src/nuklear_font.c	/^nk_tt__sort_edges_quicksort(struct nk_tt__edge *p, int n)$/;"	f
nk_tt__tesselate_curve	lib/nuklear/nuklear.h	/^nk_tt__tesselate_curve(struct nk_tt__point *points, int *num_points,$/;"	f
nk_tt__tesselate_curve	lib/nuklear/src/nuklear_font.c	/^nk_tt__tesselate_curve(struct nk_tt__point *points, int *num_points,$/;"	f
nk_tt__v_prefilter	lib/nuklear/nuklear.h	/^nk_tt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f
nk_tt__v_prefilter	lib/nuklear/src/nuklear_font.c	/^nk_tt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f
nk_tt_aligned_quad	lib/nuklear/nuklear.h	/^struct nk_tt_aligned_quad{$/;"	s
nk_tt_aligned_quad	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_aligned_quad{$/;"	s	file:
nk_tt_bakedchar	lib/nuklear/nuklear.h	/^struct nk_tt_bakedchar {$/;"	s
nk_tt_bakedchar	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_bakedchar {$/;"	s	file:
nk_tt_fontinfo	lib/nuklear/nuklear.h	/^struct nk_tt_fontinfo {$/;"	s
nk_tt_fontinfo	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_fontinfo {$/;"	s	file:
nk_tt_pack_context	lib/nuklear/nuklear.h	/^struct nk_tt_pack_context {$/;"	s
nk_tt_pack_context	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_pack_context {$/;"	s	file:
nk_tt_pack_range	lib/nuklear/nuklear.h	/^struct nk_tt_pack_range {$/;"	s
nk_tt_pack_range	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_pack_range {$/;"	s	file:
nk_tt_packedchar	lib/nuklear/nuklear.h	/^struct nk_tt_packedchar {$/;"	s
nk_tt_packedchar	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_packedchar {$/;"	s	file:
nk_tt_setvertex	lib/nuklear/nuklear.h	/^nk_tt_setvertex(struct nk_tt_vertex *v, nk_byte type, nk_int x, nk_int y, nk_int cx, nk_int cy)$/;"	f
nk_tt_setvertex	lib/nuklear/src/nuklear_font.c	/^nk_tt_setvertex(struct nk_tt_vertex *v, nk_byte type, nk_int x, nk_int y, nk_int cx, nk_int cy)$/;"	f
nk_tt_tag	lib/nuklear/nuklear.h	11096;"	d
nk_tt_tag	lib/nuklear/src/nuklear_font.c	545;"	d	file:
nk_tt_tag4	lib/nuklear/nuklear.h	11094;"	d
nk_tt_tag4	lib/nuklear/src/nuklear_font.c	543;"	d	file:
nk_tt_vertex	lib/nuklear/nuklear.h	/^struct nk_tt_vertex {$/;"	s
nk_tt_vertex	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_vertex {$/;"	s	file:
nk_uchar	lib/nuklear/nuklear.h	/^typedef NK_UINT8 nk_uchar;$/;"	t
nk_uchar	lib/nuklear/src/nuklear.h	/^typedef NK_UINT8 nk_uchar;$/;"	t
nk_uint	lib/nuklear/nuklear.h	/^typedef NK_UINT32 nk_uint;$/;"	t
nk_uint	lib/nuklear/src/nuklear.h	/^typedef NK_UINT32 nk_uint;$/;"	t
nk_unify	lib/nuklear/nuklear.h	/^nk_unify(struct nk_rect *clip, const struct nk_rect *a, float x0, float y0,$/;"	f
nk_unify	lib/nuklear/src/nuklear_math.c	/^nk_unify(struct nk_rect *clip, const struct nk_rect *a, float x0, float y0,$/;"	f
nk_user_font	lib/nuklear/nuklear.h	/^struct nk_user_font {$/;"	s
nk_user_font	lib/nuklear/src/nuklear.h	/^struct nk_user_font {$/;"	s
nk_user_font_glyph	lib/nuklear/nuklear.h	/^struct nk_user_font_glyph {$/;"	s
nk_user_font_glyph	lib/nuklear/src/nuklear.h	/^struct nk_user_font_glyph {$/;"	s
nk_ushort	lib/nuklear/nuklear.h	/^typedef NK_UINT16 nk_ushort;$/;"	t
nk_ushort	lib/nuklear/src/nuklear.h	/^typedef NK_UINT16 nk_ushort;$/;"	t
nk_utf_at	lib/nuklear/nuklear.h	/^nk_utf_at(const char *buffer, int length, int index,$/;"	f
nk_utf_at	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_at(const char *buffer, int length, int index,$/;"	f
nk_utf_decode	lib/nuklear/nuklear.h	/^nk_utf_decode(const char *c, nk_rune *u, int clen)$/;"	f
nk_utf_decode	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_decode(const char *c, nk_rune *u, int clen)$/;"	f
nk_utf_decode_byte	lib/nuklear/nuklear.h	/^nk_utf_decode_byte(char c, int *i)$/;"	f
nk_utf_decode_byte	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_decode_byte(char c, int *i)$/;"	f
nk_utf_encode	lib/nuklear/nuklear.h	/^nk_utf_encode(nk_rune u, char *c, int clen)$/;"	f
nk_utf_encode	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_encode(nk_rune u, char *c, int clen)$/;"	f
nk_utf_encode_byte	lib/nuklear/nuklear.h	/^nk_utf_encode_byte(nk_rune u, int i)$/;"	f
nk_utf_encode_byte	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_encode_byte(nk_rune u, int i)$/;"	f
nk_utf_len	lib/nuklear/nuklear.h	/^nk_utf_len(const char *str, int len)$/;"	f
nk_utf_len	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_len(const char *str, int len)$/;"	f
nk_utf_validate	lib/nuklear/nuklear.h	/^nk_utf_validate(nk_rune *u, int i)$/;"	f
nk_utf_validate	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_validate(nk_rune *u, int i)$/;"	f
nk_utfbyte	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfbyte[NK_UTF_SIZE+1] = {0x80, 0, 0xC0, 0xE0, 0xF0};$/;"	v
nk_utfbyte	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_byte nk_utfbyte[NK_UTF_SIZE+1] = {0x80, 0, 0xC0, 0xE0, 0xF0};$/;"	v
nk_utfmask	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfmask[NK_UTF_SIZE+1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v
nk_utfmask	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_byte nk_utfmask[NK_UTF_SIZE+1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v
nk_utfmax	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmax[NK_UTF_SIZE+1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v
nk_utfmax	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_uint nk_utfmax[NK_UTF_SIZE+1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v
nk_utfmin	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmin[NK_UTF_SIZE+1] = {0, 0, 0x80, 0x800, 0x10000};$/;"	v
nk_utfmin	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_uint nk_utfmin[NK_UTF_SIZE+1] = {0, 0, 0x80, 0x800, 0x10000};$/;"	v
nk_value_bool	lib/nuklear/nuklear.h	/^nk_value_bool(struct nk_context *ctx, const char *prefix, int value)$/;"	f
nk_value_bool	lib/nuklear/src/nuklear_text.c	/^nk_value_bool(struct nk_context *ctx, const char *prefix, int value)$/;"	f
nk_value_color_byte	lib/nuklear/nuklear.h	/^nk_value_color_byte(struct nk_context *ctx, const char *p, struct nk_color c)$/;"	f
nk_value_color_byte	lib/nuklear/src/nuklear_text.c	/^nk_value_color_byte(struct nk_context *ctx, const char *p, struct nk_color c)$/;"	f
nk_value_color_float	lib/nuklear/nuklear.h	/^nk_value_color_float(struct nk_context *ctx, const char *p, struct nk_color color)$/;"	f
nk_value_color_float	lib/nuklear/src/nuklear_text.c	/^nk_value_color_float(struct nk_context *ctx, const char *p, struct nk_color color)$/;"	f
nk_value_color_hex	lib/nuklear/nuklear.h	/^nk_value_color_hex(struct nk_context *ctx, const char *prefix, struct nk_color color)$/;"	f
nk_value_color_hex	lib/nuklear/src/nuklear_text.c	/^nk_value_color_hex(struct nk_context *ctx, const char *prefix, struct nk_color color)$/;"	f
nk_value_float	lib/nuklear/nuklear.h	/^nk_value_float(struct nk_context *ctx, const char *prefix, float value)$/;"	f
nk_value_float	lib/nuklear/src/nuklear_text.c	/^nk_value_float(struct nk_context *ctx, const char *prefix, float value)$/;"	f
nk_value_int	lib/nuklear/nuklear.h	/^nk_value_int(struct nk_context *ctx, const char *prefix, int value)$/;"	f
nk_value_int	lib/nuklear/src/nuklear_text.c	/^nk_value_int(struct nk_context *ctx, const char *prefix, int value)$/;"	f
nk_value_uint	lib/nuklear/nuklear.h	/^nk_value_uint(struct nk_context *ctx, const char *prefix, unsigned int value)$/;"	f
nk_value_uint	lib/nuklear/src/nuklear_text.c	/^nk_value_uint(struct nk_context *ctx, const char *prefix, unsigned int value)$/;"	f
nk_vec2	lib/nuklear/nuklear.h	/^nk_vec2(float x, float y)$/;"	f
nk_vec2	lib/nuklear/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	s
nk_vec2	lib/nuklear/src/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	s
nk_vec2	lib/nuklear/src/nuklear_math.c	/^nk_vec2(float x, float y)$/;"	f
nk_vec2_add	lib/nuklear/nuklear.h	5630;"	d
nk_vec2_add	lib/nuklear/src/nuklear.h	5411;"	d
nk_vec2_len_sqr	lib/nuklear/nuklear.h	5631;"	d
nk_vec2_len_sqr	lib/nuklear/src/nuklear.h	5412;"	d
nk_vec2_muls	lib/nuklear/nuklear.h	5632;"	d
nk_vec2_muls	lib/nuklear/src/nuklear.h	5413;"	d
nk_vec2_sub	lib/nuklear/nuklear.h	5629;"	d
nk_vec2_sub	lib/nuklear/src/nuklear.h	5410;"	d
nk_vec2i	lib/nuklear/nuklear.h	/^nk_vec2i(int x, int y)$/;"	f
nk_vec2i	lib/nuklear/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	s
nk_vec2i	lib/nuklear/src/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	s
nk_vec2i	lib/nuklear/src/nuklear_math.c	/^nk_vec2i(int x, int y)$/;"	f
nk_vec2iv	lib/nuklear/nuklear.h	/^nk_vec2iv(const int *v)$/;"	f
nk_vec2iv	lib/nuklear/src/nuklear_math.c	/^nk_vec2iv(const int *v)$/;"	f
nk_vec2v	lib/nuklear/nuklear.h	/^nk_vec2v(const float *v)$/;"	f
nk_vec2v	lib/nuklear/src/nuklear_math.c	/^nk_vec2v(const float *v)$/;"	f
nk_vsnprintf	lib/nuklear/nuklear.h	/^nk_vsnprintf(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f
nk_vsnprintf	lib/nuklear/src/nuklear_util.c	/^nk_vsnprintf(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f
nk_white	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_white = {255,255,255,255};$/;"	v	typeref:struct:nk_color
nk_white	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_white = {255,255,255,255};$/;"	v	typeref:struct:nk_color
nk_widget	lib/nuklear/nuklear.h	/^nk_widget(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f
nk_widget	lib/nuklear/src/nuklear_widget.c	/^nk_widget(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f
nk_widget_bounds	lib/nuklear/nuklear.h	/^nk_widget_bounds(struct nk_context *ctx)$/;"	f
nk_widget_bounds	lib/nuklear/src/nuklear_widget.c	/^nk_widget_bounds(struct nk_context *ctx)$/;"	f
nk_widget_fitting	lib/nuklear/nuklear.h	/^nk_widget_fitting(struct nk_rect *bounds, struct nk_context *ctx,$/;"	f
nk_widget_fitting	lib/nuklear/src/nuklear_widget.c	/^nk_widget_fitting(struct nk_rect *bounds, struct nk_context *ctx,$/;"	f
nk_widget_has_mouse_click_down	lib/nuklear/nuklear.h	/^nk_widget_has_mouse_click_down(struct nk_context *ctx, enum nk_buttons btn, int down)$/;"	f
nk_widget_has_mouse_click_down	lib/nuklear/src/nuklear_widget.c	/^nk_widget_has_mouse_click_down(struct nk_context *ctx, enum nk_buttons btn, int down)$/;"	f
nk_widget_height	lib/nuklear/nuklear.h	/^nk_widget_height(struct nk_context *ctx)$/;"	f
nk_widget_height	lib/nuklear/src/nuklear_widget.c	/^nk_widget_height(struct nk_context *ctx)$/;"	f
nk_widget_is_hovered	lib/nuklear/nuklear.h	/^nk_widget_is_hovered(struct nk_context *ctx)$/;"	f
nk_widget_is_hovered	lib/nuklear/src/nuklear_widget.c	/^nk_widget_is_hovered(struct nk_context *ctx)$/;"	f
nk_widget_is_mouse_clicked	lib/nuklear/nuklear.h	/^nk_widget_is_mouse_clicked(struct nk_context *ctx, enum nk_buttons btn)$/;"	f
nk_widget_is_mouse_clicked	lib/nuklear/src/nuklear_widget.c	/^nk_widget_is_mouse_clicked(struct nk_context *ctx, enum nk_buttons btn)$/;"	f
nk_widget_layout_states	lib/nuklear/nuklear.h	/^enum nk_widget_layout_states {$/;"	g
nk_widget_layout_states	lib/nuklear/src/nuklear.h	/^enum nk_widget_layout_states {$/;"	g
nk_widget_position	lib/nuklear/nuklear.h	/^nk_widget_position(struct nk_context *ctx)$/;"	f
nk_widget_position	lib/nuklear/src/nuklear_widget.c	/^nk_widget_position(struct nk_context *ctx)$/;"	f
nk_widget_size	lib/nuklear/nuklear.h	/^nk_widget_size(struct nk_context *ctx)$/;"	f
nk_widget_size	lib/nuklear/src/nuklear_widget.c	/^nk_widget_size(struct nk_context *ctx)$/;"	f
nk_widget_state_reset	lib/nuklear/nuklear.h	5793;"	d
nk_widget_state_reset	lib/nuklear/src/nuklear_internal.h	108;"	d
nk_widget_states	lib/nuklear/nuklear.h	/^enum nk_widget_states {$/;"	g
nk_widget_states	lib/nuklear/src/nuklear.h	/^enum nk_widget_states {$/;"	g
nk_widget_text	lib/nuklear/nuklear.h	/^nk_widget_text(struct nk_command_buffer *o, struct nk_rect b,$/;"	f
nk_widget_text	lib/nuklear/src/nuklear_text.c	/^nk_widget_text(struct nk_command_buffer *o, struct nk_rect b,$/;"	f
nk_widget_text_wrap	lib/nuklear/nuklear.h	/^nk_widget_text_wrap(struct nk_command_buffer *o, struct nk_rect b,$/;"	f
nk_widget_text_wrap	lib/nuklear/src/nuklear_text.c	/^nk_widget_text_wrap(struct nk_command_buffer *o, struct nk_rect b,$/;"	f
nk_widget_width	lib/nuklear/nuklear.h	/^nk_widget_width(struct nk_context *ctx)$/;"	f
nk_widget_width	lib/nuklear/src/nuklear_widget.c	/^nk_widget_width(struct nk_context *ctx)$/;"	f
nk_window	lib/nuklear/nuklear.h	/^struct nk_window {$/;"	s
nk_window	lib/nuklear/src/nuklear.h	/^struct nk_window {$/;"	s
nk_window_close	lib/nuklear/nuklear.h	/^nk_window_close(struct nk_context *ctx, const char *name)$/;"	f
nk_window_close	lib/nuklear/src/nuklear_window.c	/^nk_window_close(struct nk_context *ctx, const char *name)$/;"	f
nk_window_collapse	lib/nuklear/nuklear.h	/^nk_window_collapse(struct nk_context *ctx, const char *name,$/;"	f
nk_window_collapse	lib/nuklear/src/nuklear_window.c	/^nk_window_collapse(struct nk_context *ctx, const char *name,$/;"	f
nk_window_collapse_if	lib/nuklear/nuklear.h	/^nk_window_collapse_if(struct nk_context *ctx, const char *name,$/;"	f
nk_window_collapse_if	lib/nuklear/src/nuklear_window.c	/^nk_window_collapse_if(struct nk_context *ctx, const char *name,$/;"	f
nk_window_find	lib/nuklear/nuklear.h	/^nk_window_find(struct nk_context *ctx, const char *name)$/;"	f
nk_window_find	lib/nuklear/src/nuklear_window.c	/^nk_window_find(struct nk_context *ctx, const char *name)$/;"	f
nk_window_flags	lib/nuklear/nuklear.h	/^enum nk_window_flags {$/;"	g
nk_window_flags	lib/nuklear/src/nuklear.h	/^enum nk_window_flags {$/;"	g
nk_window_get_bounds	lib/nuklear/nuklear.h	/^nk_window_get_bounds(const struct nk_context *ctx)$/;"	f
nk_window_get_bounds	lib/nuklear/src/nuklear_window.c	/^nk_window_get_bounds(const struct nk_context *ctx)$/;"	f
nk_window_get_canvas	lib/nuklear/nuklear.h	/^nk_window_get_canvas(struct nk_context *ctx)$/;"	f
nk_window_get_canvas	lib/nuklear/src/nuklear_window.c	/^nk_window_get_canvas(struct nk_context *ctx)$/;"	f
nk_window_get_content_region	lib/nuklear/nuklear.h	/^nk_window_get_content_region(struct nk_context *ctx)$/;"	f
nk_window_get_content_region	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_max	lib/nuklear/nuklear.h	/^nk_window_get_content_region_max(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_max	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region_max(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_min	lib/nuklear/nuklear.h	/^nk_window_get_content_region_min(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_min	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region_min(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_size	lib/nuklear/nuklear.h	/^nk_window_get_content_region_size(struct nk_context *ctx)$/;"	f
nk_window_get_content_region_size	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region_size(struct nk_context *ctx)$/;"	f
nk_window_get_height	lib/nuklear/nuklear.h	/^nk_window_get_height(const struct nk_context *ctx)$/;"	f
nk_window_get_height	lib/nuklear/src/nuklear_window.c	/^nk_window_get_height(const struct nk_context *ctx)$/;"	f
nk_window_get_panel	lib/nuklear/nuklear.h	/^nk_window_get_panel(struct nk_context *ctx)$/;"	f
nk_window_get_panel	lib/nuklear/src/nuklear_window.c	/^nk_window_get_panel(struct nk_context *ctx)$/;"	f
nk_window_get_position	lib/nuklear/nuklear.h	/^nk_window_get_position(const struct nk_context *ctx)$/;"	f
nk_window_get_position	lib/nuklear/src/nuklear_window.c	/^nk_window_get_position(const struct nk_context *ctx)$/;"	f
nk_window_get_scroll	lib/nuklear/nuklear.h	/^nk_window_get_scroll(struct nk_context *ctx, nk_uint *offset_x, nk_uint *offset_y)$/;"	f
nk_window_get_scroll	lib/nuklear/src/nuklear_window.c	/^nk_window_get_scroll(struct nk_context *ctx, nk_uint *offset_x, nk_uint *offset_y)$/;"	f
nk_window_get_size	lib/nuklear/nuklear.h	/^nk_window_get_size(const struct nk_context *ctx)$/;"	f
nk_window_get_size	lib/nuklear/src/nuklear_window.c	/^nk_window_get_size(const struct nk_context *ctx)$/;"	f
nk_window_get_width	lib/nuklear/nuklear.h	/^nk_window_get_width(const struct nk_context *ctx)$/;"	f
nk_window_get_width	lib/nuklear/src/nuklear_window.c	/^nk_window_get_width(const struct nk_context *ctx)$/;"	f
nk_window_has_focus	lib/nuklear/nuklear.h	/^nk_window_has_focus(const struct nk_context *ctx)$/;"	f
nk_window_has_focus	lib/nuklear/src/nuklear_window.c	/^nk_window_has_focus(const struct nk_context *ctx)$/;"	f
nk_window_insert_location	lib/nuklear/nuklear.h	/^enum nk_window_insert_location {$/;"	g
nk_window_insert_location	lib/nuklear/src/nuklear_internal.h	/^enum nk_window_insert_location {$/;"	g
nk_window_is_active	lib/nuklear/nuklear.h	/^nk_window_is_active(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_active	lib/nuklear/src/nuklear_window.c	/^nk_window_is_active(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_any_hovered	lib/nuklear/nuklear.h	/^nk_window_is_any_hovered(struct nk_context *ctx)$/;"	f
nk_window_is_any_hovered	lib/nuklear/src/nuklear_window.c	/^nk_window_is_any_hovered(struct nk_context *ctx)$/;"	f
nk_window_is_closed	lib/nuklear/nuklear.h	/^nk_window_is_closed(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_closed	lib/nuklear/src/nuklear_window.c	/^nk_window_is_closed(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_collapsed	lib/nuklear/nuklear.h	/^nk_window_is_collapsed(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_collapsed	lib/nuklear/src/nuklear_window.c	/^nk_window_is_collapsed(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_hidden	lib/nuklear/nuklear.h	/^nk_window_is_hidden(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_hidden	lib/nuklear/src/nuklear_window.c	/^nk_window_is_hidden(struct nk_context *ctx, const char *name)$/;"	f
nk_window_is_hovered	lib/nuklear/nuklear.h	/^nk_window_is_hovered(struct nk_context *ctx)$/;"	f
nk_window_is_hovered	lib/nuklear/src/nuklear_window.c	/^nk_window_is_hovered(struct nk_context *ctx)$/;"	f
nk_window_set_bounds	lib/nuklear/nuklear.h	/^nk_window_set_bounds(struct nk_context *ctx,$/;"	f
nk_window_set_bounds	lib/nuklear/src/nuklear_window.c	/^nk_window_set_bounds(struct nk_context *ctx,$/;"	f
nk_window_set_focus	lib/nuklear/nuklear.h	/^nk_window_set_focus(struct nk_context *ctx, const char *name)$/;"	f
nk_window_set_focus	lib/nuklear/src/nuklear_window.c	/^nk_window_set_focus(struct nk_context *ctx, const char *name)$/;"	f
nk_window_set_position	lib/nuklear/nuklear.h	/^nk_window_set_position(struct nk_context *ctx,$/;"	f
nk_window_set_position	lib/nuklear/src/nuklear_window.c	/^nk_window_set_position(struct nk_context *ctx,$/;"	f
nk_window_set_scroll	lib/nuklear/nuklear.h	/^nk_window_set_scroll(struct nk_context *ctx, nk_uint offset_x, nk_uint offset_y)$/;"	f
nk_window_set_scroll	lib/nuklear/src/nuklear_window.c	/^nk_window_set_scroll(struct nk_context *ctx, nk_uint offset_x, nk_uint offset_y)$/;"	f
nk_window_set_size	lib/nuklear/nuklear.h	/^nk_window_set_size(struct nk_context *ctx,$/;"	f
nk_window_set_size	lib/nuklear/src/nuklear_window.c	/^nk_window_set_size(struct nk_context *ctx,$/;"	f
nk_window_show	lib/nuklear/nuklear.h	/^nk_window_show(struct nk_context *ctx, const char *name, enum nk_show_states s)$/;"	f
nk_window_show	lib/nuklear/src/nuklear_window.c	/^nk_window_show(struct nk_context *ctx, const char *name, enum nk_show_states s)$/;"	f
nk_window_show_if	lib/nuklear/nuklear.h	/^nk_window_show_if(struct nk_context *ctx, const char *name,$/;"	f
nk_window_show_if	lib/nuklear/src/nuklear_window.c	/^nk_window_show_if(struct nk_context *ctx, const char *name,$/;"	f
nk_wmask	lib/nuklear/nuklear.h	6347;"	d
nk_wmask	lib/nuklear/nuklear.h	6386;"	d
nk_wmask	lib/nuklear/nuklear.h	6397;"	d
nk_wmask	lib/nuklear/nuklear.h	6441;"	d
nk_wmask	lib/nuklear/src/nuklear_util.c	121;"	d	file:
nk_wmask	lib/nuklear/src/nuklear_util.c	27;"	d	file:
nk_wmask	lib/nuklear/src/nuklear_util.c	66;"	d	file:
nk_wmask	lib/nuklear/src/nuklear_util.c	77;"	d	file:
nk_word	lib/nuklear/nuklear.h	6345;"	d
nk_word	lib/nuklear/nuklear.h	6384;"	d
nk_word	lib/nuklear/nuklear.h	6395;"	d
nk_word	lib/nuklear/nuklear.h	6439;"	d
nk_word	lib/nuklear/src/nuklear_util.c	119;"	d	file:
nk_word	lib/nuklear/src/nuklear_util.c	25;"	d	file:
nk_word	lib/nuklear/src/nuklear_util.c	64;"	d	file:
nk_word	lib/nuklear/src/nuklear_util.c	75;"	d	file:
nk_wsize	lib/nuklear/nuklear.h	6346;"	d
nk_wsize	lib/nuklear/nuklear.h	6385;"	d
nk_wsize	lib/nuklear/nuklear.h	6396;"	d
nk_wsize	lib/nuklear/nuklear.h	6440;"	d
nk_wsize	lib/nuklear/src/nuklear_util.c	120;"	d	file:
nk_wsize	lib/nuklear/src/nuklear_util.c	26;"	d	file:
nk_wsize	lib/nuklear/src/nuklear_util.c	65;"	d	file:
nk_wsize	lib/nuklear/src/nuklear_util.c	76;"	d	file:
nk_x11	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^static struct nk_x11 {$/;"	s
nk_x11	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static struct nk_x11 {$/;"	s
nk_x11_check_extension	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_check_extension(struct opengl_info *GL, const char *ext)$/;"	f
nk_x11_device	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^struct nk_x11_device {$/;"	s
nk_x11_device	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^struct nk_x11_device {$/;"	s
nk_x11_device_create	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_device_create(void)$/;"	f
nk_x11_device_destroy	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_device_destroy(void)$/;"	f
nk_x11_device_upload_atlas	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_x11_device_upload_atlas	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_device_upload_atlas(const void *image, int width, int height)$/;"	f
nk_x11_font_stash_begin	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_x11_font_stash_begin	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f
nk_x11_font_stash_end	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_font_stash_end(void)$/;"	f
nk_x11_font_stash_end	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_font_stash_end(void)$/;"	f
nk_x11_handle_event	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_handle_event(XEvent *evt)$/;"	f
nk_x11_handle_event	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_handle_event(XEvent *evt)$/;"	f
nk_x11_init	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_init(Display *dpy, Window win)$/;"	f
nk_x11_init	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_init(Display *dpy, Window win)$/;"	f
nk_x11_render	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f
nk_x11_render	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f
nk_x11_shutdown	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_shutdown(void)$/;"	f
nk_x11_shutdown	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_shutdown(void)$/;"	f
nk_x11_stricmpn	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_stricmpn(const char *a, const char *b, int len)$/;"	f
nk_x11_vertex	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^struct nk_x11_vertex {$/;"	s
nk_x11_vertex	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^struct nk_x11_vertex {$/;"	s
nk_xfont_create	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xfont_create(Display *dpy, const char *name)$/;"	f
nk_xfont_create	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xfont_create(Display *dpy, const char *name)$/;"	f
nk_xfont_del	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xfont_del(Display *dpy, XFont *font)$/;"	f
nk_xfont_del	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xfont_del(Display *dpy, XFont *font)$/;"	f
nk_xfont_get_text_width	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xfont_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_xfont_get_text_width	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xfont_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f
nk_xlib_copy	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_copy(nk_handle handle, const char* str, int len)$/;"	f
nk_xlib_copy	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_copy(nk_handle handle, const char* str, int len)$/;"	f
nk_xlib_handle_event	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_handle_event(Display *dpy, int screen, Window win, XEvent *evt)$/;"	f
nk_xlib_handle_event	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_handle_event(Display *dpy, int screen, Window win, XEvent *evt, struct rawfb_context *rawfb)$/;"	f
nk_xlib_handle_event	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_handle_event(Display *dpy, int screen, Window win, XEvent *evt)$/;"	f
nk_xlib_init	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_init(XFont *xfont, Display *dpy, int screen, Window root,$/;"	f
nk_xlib_init	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_init(Display *dpy, Visual *vis, int screen, Window root,$/;"	f
nk_xlib_init	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_init(XFont *xfont, Display *dpy, int screen, Window root,$/;"	f
nk_xlib_paste	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_paste(nk_handle handle, struct nk_text_edit* edit)$/;"	f
nk_xlib_paste	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_paste(nk_handle handle, struct nk_text_edit* edit)$/;"	f
nk_xlib_push_font	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_push_font(XFont *xfont)$/;"	f
nk_xlib_push_font	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_push_font(XFont *xfont)$/;"	f
nk_xlib_render	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_render(Drawable screen, struct nk_color clear)$/;"	f
nk_xlib_render	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_render(Drawable screen)$/;"	f
nk_xlib_render	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_render(Drawable screen, struct nk_color clear)$/;"	f
nk_xlib_set_font	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_set_font(XFont *xfont)$/;"	f
nk_xlib_set_font	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_set_font(XFont *xfont)$/;"	f
nk_xlib_shutdown	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_shutdown(void)$/;"	f
nk_xlib_shutdown	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_shutdown(void)$/;"	f
nk_xlib_shutdown	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xlib_shutdown(void)$/;"	f
nk_xsurf_blit	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_blit(Drawable target, XSurface *surf, unsigned int w, unsigned int h)$/;"	f
nk_xsurf_blit	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_blit(Drawable target, XSurface *surf, unsigned int w, unsigned int h)$/;"	f
nk_xsurf_clear	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_clear(XSurface *surf, unsigned long color)$/;"	f
nk_xsurf_clear	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_clear(XSurface *surf, unsigned long color)$/;"	f
nk_xsurf_create	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_create(int screen, unsigned int w, unsigned int h)$/;"	f
nk_xsurf_create	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_create(int screen, unsigned int w, unsigned int h)$/;"	f
nk_xsurf_del	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_del(XSurface *surf)$/;"	f
nk_xsurf_del	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_del(XSurface *surf)$/;"	f
nk_xsurf_draw_image	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_draw_image(XSurface *surf, short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_xsurf_draw_image	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_draw_image(XSurface *surf, short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_xsurf_draw_text	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_draw_text(XSurface *surf, short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_xsurf_draw_text	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_draw_text(XSurface *surf, short x, short y, unsigned short w, unsigned short h,$/;"	f
nk_xsurf_fill_circle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_circle(XSurface *surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_fill_circle	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_fill_circle(XSurface *surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_fill_polygon	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_polygon(XSurface *surf,  const struct nk_vec2i *pnts, int count,$/;"	f
nk_xsurf_fill_polygon	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_fill_polygon(XSurface *surf,  const struct nk_vec2i *pnts, int count,$/;"	f
nk_xsurf_fill_rect	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_rect(XSurface* surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_fill_rect	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_fill_rect(XSurface* surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_fill_triangle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_triangle(XSurface *surf, short x0, short y0, short x1,$/;"	f
nk_xsurf_fill_triangle	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_fill_triangle(XSurface *surf, short x0, short y0, short x1,$/;"	f
nk_xsurf_image_free	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_image_free(struct nk_image* image)$/;"	f
nk_xsurf_image_free	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_image_free(struct nk_image* image)$/;"	f
nk_xsurf_load_image_from_file	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_load_image_from_file(char const *filename)$/;"	f
nk_xsurf_load_image_from_file	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_load_image_from_file(char const *filename)$/;"	f
nk_xsurf_load_image_from_memory	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_load_image_from_memory(const void *membuf, nk_uint membufSize)$/;"	f
nk_xsurf_load_image_from_memory	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_load_image_from_memory(const void *membuf, nk_uint membufSize)$/;"	f
nk_xsurf_resize	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_resize(XSurface *surf, unsigned int w, unsigned int h)$/;"	f
nk_xsurf_resize	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_resize(XSurface *surf, unsigned int w, unsigned int h)$/;"	f
nk_xsurf_scissor	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_scissor(XSurface *surf, float x, float y, float w, float h)$/;"	f
nk_xsurf_scissor	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_scissor(XSurface *surf, float x, float y, float w, float h)$/;"	f
nk_xsurf_stroke_circle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_circle(XSurface *surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_stroke_circle	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_stroke_circle(XSurface *surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_stroke_curve	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_curve(XSurface *surf, struct nk_vec2i p1,$/;"	f
nk_xsurf_stroke_curve	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_stroke_curve(XSurface *surf, struct nk_vec2i p1,$/;"	f
nk_xsurf_stroke_line	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_line(XSurface *surf, short x0, short y0, short x1,$/;"	f
nk_xsurf_stroke_line	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_stroke_line(XSurface *surf, short x0, short y0, short x1,$/;"	f
nk_xsurf_stroke_polygon	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_polygon(XSurface *surf, const struct nk_vec2i *pnts, int count,$/;"	f
nk_xsurf_stroke_polygon	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_stroke_polygon(XSurface *surf, const struct nk_vec2i *pnts, int count,$/;"	f
nk_xsurf_stroke_polyline	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_polyline(XSurface *surf, const struct nk_vec2i *pnts,$/;"	f
nk_xsurf_stroke_polyline	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_stroke_polyline(XSurface *surf, const struct nk_vec2i *pnts,$/;"	f
nk_xsurf_stroke_rect	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_rect(XSurface* surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_stroke_rect	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_stroke_rect(XSurface* surf, short x, short y, unsigned short w,$/;"	f
nk_xsurf_stroke_triangle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_triangle(XSurface *surf, short x0, short y0, short x1,$/;"	f
nk_xsurf_stroke_triangle	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^nk_xsurf_stroke_triangle(XSurface *surf, short x0, short y0, short x1,$/;"	f
nk_yellow	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_yellow = {255,255,0,255};$/;"	v	typeref:struct:nk_color
nk_yellow	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_yellow = {255,255,0,255};$/;"	v	typeref:struct:nk_color
nk_zero	lib/nuklear/nuklear.h	/^nk_zero(void *ptr, nk_size size)$/;"	f
nk_zero	lib/nuklear/src/nuklear_util.c	/^nk_zero(void *ptr, nk_size size)$/;"	f
nk_zero_struct	lib/nuklear/nuklear.h	5636;"	d
nk_zero_struct	lib/nuklear/src/nuklear.h	5417;"	d
nkglAttachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglAttachShader)(GLuint, GLuint);$/;"	t
nkglBindBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglBindBuffer)(GLenum, GLuint);$/;"	t
nkglBindVertexArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void (*nkglBindVertexArray)(GLuint);$/;"	t
nkglBufferData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglBufferData)(GLenum, GLsizeiptr, const GLvoid*, GLenum);$/;"	t
nkglBufferSubData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglBufferSubData)(GLenum, GLintptr, GLsizeiptr, const GLvoid*);$/;"	t
nkglCompileShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglCompileShader)(GLuint);$/;"	t
nkglCreateProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLuint(*nkglCreateProgram)(void);$/;"	t
nkglCreateShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLuint(*nkglCreateShader)(GLenum);$/;"	t
nkglDeleteBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDeleteBuffers)(GLsizei, GLuint*);$/;"	t
nkglDeleteProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDeleteProgram)(GLuint);$/;"	t
nkglDeleteShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDeleteShader)(GLuint);$/;"	t
nkglDeleteVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void (*nkglDeleteVertexArrays)(GLsizei, const GLuint*);$/;"	t
nkglDetachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDetachShader)(GLuint, GLuint);$/;"	t
nkglDisableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDisableVertexAttribArray)(GLuint);$/;"	t
nkglEnableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglEnableVertexAttribArray)(GLuint);$/;"	t
nkglGenBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGenBuffers)(GLsizei, GLuint*);$/;"	t
nkglGenVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void (*nkglGenVertexArrays)(GLsizei, GLuint*);$/;"	t
nkglGenerateMipmap	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGenerateMipmap)(GLenum target);$/;"	t
nkglGetAttribLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLint(*nkglGetAttribLocation)(GLuint, const GLchar*);$/;"	t
nkglGetProgramInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);$/;"	t
nkglGetProgramiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetProgramiv)(GLuint, GLenum, GLint*);$/;"	t
nkglGetShaderInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);$/;"	t
nkglGetShaderiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetShaderiv)(GLuint, GLenum, GLint*);$/;"	t
nkglGetUniformLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLint(*nkglGetUniformLocation)(GLuint, const GLchar*);$/;"	t
nkglLinkProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglLinkProgram)(GLuint);$/;"	t
nkglMapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void*(*nkglMapBuffer)(GLenum, GLenum);$/;"	t
nkglShaderSource	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglShaderSource)(GLuint, GLsizei, const GLchar**, const GLint*);$/;"	t
nkglUniform1f	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniform1f)(GLint, GLfloat);$/;"	t
nkglUniform1i	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniform1i)(GLint, GLint);$/;"	t
nkglUniformMatrix3fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniformMatrix3fv)(GLint, GLsizei, GLboolean, const GLfloat*);$/;"	t
nkglUniformMatrix4fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniformMatrix4fv)(GLint, GLsizei, GLboolean, const GLfloat*);$/;"	t
nkglUnmapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLboolean(*nkglUnmapBuffer)(GLenum);$/;"	t
nkglUseProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUseProgram)(GLuint);$/;"	t
nkglVertexAttribPointer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid*);$/;"	t
no_reconnect	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s
node	lib/klib/knhx.c	/^	knhx1_t *node;$/;"	m	struct:__anon41	file:
node	lib/nuklear/demo/node_editor.c	/^    struct node *node;$/;"	m	struct:node_linking	typeref:struct:node_linking::node	file:
node	lib/nuklear/demo/node_editor.c	/^struct node {$/;"	s	file:
nodeEditor	lib/nuklear/demo/node_editor.c	/^static struct node_editor nodeEditor;$/;"	v	typeref:struct:node_editor	file:
node_buf	lib/nuklear/demo/node_editor.c	/^    struct node node_buf[32];$/;"	m	struct:node_editor	typeref:struct:node_editor::node	file:
node_count	lib/nuklear/demo/node_editor.c	/^    int node_count;$/;"	m	struct:node_editor	file:
node_editor	lib/nuklear/demo/node_editor.c	/^node_editor(struct nk_context *ctx)$/;"	f	file:
node_editor	lib/nuklear/demo/node_editor.c	/^struct node_editor {$/;"	s	file:
node_editor_add	lib/nuklear/demo/node_editor.c	/^node_editor_add(struct node_editor *editor, const char *name, struct nk_rect bounds,$/;"	f	file:
node_editor_find	lib/nuklear/demo/node_editor.c	/^node_editor_find(struct node_editor *editor, int ID)$/;"	f	file:
node_editor_init	lib/nuklear/demo/node_editor.c	/^node_editor_init(struct node_editor *editor)$/;"	f	file:
node_editor_link	lib/nuklear/demo/node_editor.c	/^node_editor_link(struct node_editor *editor, int in_id, int in_slot,$/;"	f	file:
node_editor_pop	lib/nuklear/demo/node_editor.c	/^node_editor_pop(struct node_editor *editor, struct node *node)$/;"	f	file:
node_editor_push	lib/nuklear/demo/node_editor.c	/^node_editor_push(struct node_editor *editor, struct node *node)$/;"	f	file:
node_link	lib/nuklear/demo/node_editor.c	/^struct node_link {$/;"	s	file:
node_linking	lib/nuklear/demo/node_editor.c	/^struct node_linking {$/;"	s	file:
node_maximize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button node_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
node_maximize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button node_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
node_minimize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button node_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
node_minimize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button node_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
nodes	lib/cimgui/imgui/imstb_truetype.h	/^   void  *nodes;$/;"	m	struct:stbtt_pack_context
nodes	lib/nuklear/nuklear.h	/^    void  *nodes;$/;"	m	struct:nk_tt_pack_context
nodes	lib/nuklear/src/nuklear_font.c	/^    void  *nodes;$/;"	m	struct:nk_tt_pack_context	file:
nomore	lib/nuklear/example/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anon149
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_style_item
normal_active	lib/nuklear/nuklear.h	/^    struct nk_style_item normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
normal_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
notzero	src/data.h	/^    float* notzero;       \/\/ notzero count$/;"	m	struct:__anon1
null	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:__anon174	typeref:struct:__anon174::nk_draw_null_texture
null	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:__anon173	typeref:struct:__anon173::nk_draw_null_texture
null	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_draw_null_texture
null	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_draw_null_texture
null	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_draw_null_texture
null	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_sdl_device::nk_draw_null_texture
null	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_sdl_device::nk_draw_null_texture
null	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_sdl_device::nk_draw_null_texture
null	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_sfml_device::nk_draw_null_texture
null	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_sfml_device::nk_draw_null_texture
null	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_x11_device	typeref:struct:nk_x11_device::nk_draw_null_texture
null	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_x11_device	typeref:struct:nk_x11_device::nk_draw_null_texture
null	lib/nuklear/example/canvas.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:device::nk_draw_null_texture	file:
null	lib/nuklear/example/extended.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:device::nk_draw_null_texture	file:
null	lib/nuklear/example/file_browser.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:device::nk_draw_null_texture	file:
null	lib/nuklear/example/skinning.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:device::nk_draw_null_texture	file:
null	lib/nuklear/nuklear.h	/^    struct nk_draw_null_texture null; \/* handle to texture with a white pixel for shape drawing *\/$/;"	m	struct:nk_convert_config	typeref:struct:nk_convert_config::nk_draw_null_texture
null	lib/nuklear/src/nuklear.h	/^    struct nk_draw_null_texture null; \/* handle to texture with a white pixel for shape drawing *\/$/;"	m	struct:nk_convert_config	typeref:struct:nk_convert_config::nk_draw_null_texture
numGlyphs	lib/cimgui/imgui/imstb_truetype.h	/^   int numGlyphs;                     \/\/ number of glyphs, needed for range checking$/;"	m	struct:stbtt_fontinfo
numGlyphs	lib/nuklear/nuklear.h	/^    int numGlyphs;\/* number of glyphs, needed for range checking *\/$/;"	m	struct:nk_tt_fontinfo
numGlyphs	lib/nuklear/src/nuklear_font.c	/^    int numGlyphs;\/* number of glyphs, needed for range checking *\/$/;"	m	struct:nk_tt_fontinfo	file:
num_bits	lib/nuklear/example/stb_image.h	/^   int num_bits;$/;"	m	struct:__anon153
num_chars	lib/cimgui/imgui/imstb_textedit.h	/^   int num_chars;$/;"	m	struct:__anon110
num_chars	lib/cimgui/imgui/imstb_truetype.h	/^   int num_chars;$/;"	m	struct:__anon117
num_chars	lib/nuklear/nuklear.h	/^    int num_chars;$/;"	m	struct:nk_tt_pack_range
num_chars	lib/nuklear/nuklear.h	/^   int num_chars;$/;"	m	struct:nk_text_edit_row
num_chars	lib/nuklear/src/nuklear_font.c	/^    int num_chars;$/;"	m	struct:nk_tt_pack_range	file:
num_chars	lib/nuklear/src/nuklear_text_editor.c	/^   int num_chars;$/;"	m	struct:nk_text_edit_row	file:
num_nodes	lib/cimgui/imgui/imstb_rectpack.h	/^   int num_nodes;$/;"	m	struct:stbrp_context
num_nodes	lib/nuklear/nuklear.h	/^    int num_nodes;$/;"	m	struct:nk_rp_context
num_nodes	lib/nuklear/src/nuklear_font.c	/^    int num_nodes;$/;"	m	struct:nk_rp_context	file:
num_remaining_in_head_chunk	lib/cimgui/imgui/imstb_truetype.h	/^   int    num_remaining_in_head_chunk;$/;"	m	struct:stbtt__hheap
num_remaining_in_head_chunk	lib/nuklear/nuklear.h	/^    int    num_remaining_in_head_chunk;$/;"	m	struct:nk_tt__hheap
num_remaining_in_head_chunk	lib/nuklear/src/nuklear_font.c	/^    int    num_remaining_in_head_chunk;$/;"	m	struct:nk_tt__hheap	file:
num_vertices	lib/cimgui/imgui/imstb_truetype.h	/^   int num_vertices;$/;"	m	struct:__anon127
obj_cloud	src/obj.c	/^obj_cloud() {$/;"	f
obj_ctor	src/obj.c	/^obj_ctor() {$/;"	f
obj_dtor	src/obj.c	/^obj_dtor(obj_p obj) {$/;"	f
obj_p	src/obj.h	/^typedef obj_t* obj_p;$/;"	t
obj_render	src/obj.c	/^obj_render(obj_p obj) {$/;"	f
obj_t	src/obj.h	/^typedef struct obj_t {$/;"	s
obj_t	src/obj.h	/^} obj_t;$/;"	t	typeref:struct:obj_t
objects	src/scene.h	/^    objects_v objects;$/;"	m	struct:scene_t
objects_v	src/scene.h	/^typedef kvec_t(obj_p) objects_v;$/;"	t
obs	lib/klib/khmm.h	/^	int l, *obs;$/;"	m	struct:__anon23
occupied	lib/klib/cpp/khashl.hpp	/^	inline bool occupied(khint_t x) const { return (__kh_used(used, x) != 0); }$/;"	f	class:klib::KHashSet
off	src/shader.h	/^	GLuint off; \/\/ u axis offset$/;"	m	struct:__anon2
off0	lib/klib/kurl.c	/^	off_t off0;   \/\/ offset of the first byte in the buffer; the actual file offset equals off0 + p_buf$/;"	m	struct:kurl_t	file:
offset	lib/klib/knetfile.h	/^	int64_t offset;$/;"	m	struct:knetFile_s
offset	lib/nuklear/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_buffer_marker
offset	lib/nuklear/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_draw_vertex_layout_element
offset	lib/nuklear/nuklear.h	/^    struct nk_scroll offset;$/;"	m	struct:nk_menu_state	typeref:struct:nk_menu_state::nk_scroll
offset	lib/nuklear/nuklear.h	/^    struct nk_vec2 offset;$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_user_font_glyph::nk_vec2
offset	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::
offset	lib/nuklear/src/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_buffer_marker
offset	lib/nuklear/src/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_draw_vertex_layout_element
offset	lib/nuklear/src/nuklear.h	/^    struct nk_scroll offset;$/;"	m	struct:nk_menu_state	typeref:struct:nk_menu_state::nk_scroll
offset	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 offset;$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_user_font_glyph::nk_vec2
offset	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::
offset_from_ptr	lib/cimgui/imgui/imgui_internal.h	/^    int     offset_from_ptr(const T* p) { IM_ASSERT(p >= begin() && p < end()); const ptrdiff_t off = (const char*)p - Buf.Data; return (int)off; }$/;"	f	struct:ImChunkStream
offset_x	lib/nuklear/nuklear.h	/^    nk_uint *offset_x;$/;"	m	struct:nk_panel
offset_x	lib/nuklear/src/nuklear.h	/^    nk_uint *offset_x;$/;"	m	struct:nk_panel
offset_y	lib/nuklear/nuklear.h	/^    nk_uint *offset_y;$/;"	m	struct:nk_panel
offset_y	lib/nuklear/src/nuklear.h	/^    nk_uint *offset_y;$/;"	m	struct:nk_panel
ogl	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_glfw_device
ogl	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_glfw_device
ogl	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_glfw_device
ogl	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_sdl_device ogl;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_sdl_device
ogl	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_sdl_device ogl;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_sdl_device
ogl	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_sdl_device ogl;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl::nk_sdl_device
ogl	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_sfml_device ogl;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml::nk_sfml_device
ogl	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_sfml_device ogl;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml::nk_sfml_device
ogl	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_x11_device ogl;$/;"	m	struct:nk_x11	typeref:struct:nk_x11::nk_x11_device
ogl	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_x11_device ogl;$/;"	m	struct:nk_x11	typeref:struct:nk_x11::nk_x11_device
old	lib/nuklear/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_edit_state
old	lib/nuklear/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_property_state
old	lib/nuklear/src/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_edit_state
old	lib/nuklear/src/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_property_state
old_out	lib/nuklear/example/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon159
omit_includes	lib/nuklear/src/build.py	/^def omit_includes(str, files):$/;"	f
op	lib/klib/kexpr.c	/^	int32_t op:8, n_args:24; \/\/ op: operator, n_args: number of arguments$/;"	m	struct:ke1_s	file:
open_libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void open_libgl(void)$/;"	f	file:
open_libgl	lib/gl3w/GL/gl3w.c	/^static void open_libgl(void)$/;"	f	file:
open_mode	lib/klib/bgzf.h	/^    int open_mode:8, compress_level:8, errcode:16;$/;"	m	struct:__anon31
opengl_info	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^struct opengl_info {$/;"	s
operator ()	lib/klib/cpp/khashl.hpp	/^struct KHashCachedEq { bool operator() (const T &a, const T &b) const { return a.hash == b.hash && Eq()(a.key, b.key); } };$/;"	f	struct:klib::KHashCachedEq
operator ()	lib/klib/cpp/khashl.hpp	/^struct KHashCachedHash { khint_t operator() (const T &a) const { return a.hash; } };$/;"	f	struct:klib::KHashCachedHash
operator ()	lib/klib/cpp/khashl.hpp	/^struct KHashMapEq { bool operator() (const T &a, const T &b) const { return Eq()(a.key, b.key); } };$/;"	f	struct:klib::KHashMapEq
operator ()	lib/klib/cpp/khashl.hpp	/^struct KHashMapHash { khint_t operator() (const T &a) const { return Hash()(a.key); } };$/;"	f	struct:klib::KHashMapHash
operator ()	lib/klib/test/ksort_test.cc	/^	inline int operator() (int a, int b) const {$/;"	f	struct:intcmp_t
operator *	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator*(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x*rhs.x, lhs.y*rhs.y); }$/;"	f
operator *	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator*(const ImVec2& lhs, const float rhs)              { return ImVec2(lhs.x*rhs, lhs.y*rhs); }$/;"	f
operator *	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 operator*(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(lhs.x*rhs.x, lhs.y*rhs.y, lhs.z*rhs.z, lhs.w*rhs.w); }$/;"	f
operator *=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator*=(ImVec2& lhs, const float rhs)                  { lhs.x *= rhs; lhs.y *= rhs; return lhs; }$/;"	f
operator +	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator+(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x+rhs.x, lhs.y+rhs.y); }$/;"	f
operator +	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 operator+(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(lhs.x+rhs.x, lhs.y+rhs.y, lhs.z+rhs.z, lhs.w+rhs.w); }$/;"	f
operator +=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator+=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x += rhs.x; lhs.y += rhs.y; return lhs; }$/;"	f
operator -	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator-(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x-rhs.x, lhs.y-rhs.y); }$/;"	f
operator -	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 operator-(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(lhs.x-rhs.x, lhs.y-rhs.y, lhs.z-rhs.z, lhs.w-rhs.w); }$/;"	f
operator -=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator-=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x -= rhs.x; lhs.y -= rhs.y; return lhs; }$/;"	f
operator /	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator\/(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(lhs.x\/rhs.x, lhs.y\/rhs.y); }$/;"	f
operator /	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator\/(const ImVec2& lhs, const float rhs)              { return ImVec2(lhs.x\/rhs, lhs.y\/rhs); }$/;"	f
operator /=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator\/=(ImVec2& lhs, const float rhs)                  { lhs.x \/= rhs; lhs.y \/= rhs; return lhs; }$/;"	f
operator =	lib/cimgui/imgui/imgui.h	/^    inline ImVector<T>& operator=(const ImVector<T>& src)   { clear(); resize(src.Size); memcpy(Data, src.Data, (size_t)Size * sizeof(T)); return *this; }$/;"	f	struct:ImVector
operator ImU32	lib/cimgui/imgui/imgui.h	/^    inline operator ImU32() const                                   { return ImGui::ColorConvertFloat4ToU32(Value); }$/;"	f	struct:ImColor
operator ImVec4	lib/cimgui/imgui/imgui.h	/^    inline operator ImVec4() const                                  { return Value; }$/;"	f	struct:ImColor
operator []	lib/cimgui/imgui/imgui.h	/^    float  operator[] (size_t idx) const { IM_ASSERT(idx <= 1); return (&x)[idx]; }    \/\/ We very rarely use this [] operator, the assert overhead is fine.$/;"	f	struct:ImVec2
operator []	lib/cimgui/imgui/imgui.h	/^    float& operator[] (size_t idx)       { IM_ASSERT(idx <= 1); return (&x)[idx]; }    \/\/ We very rarely use this [] operator, the assert overhead is fine.$/;"	f	struct:ImVec2
operator []	lib/cimgui/imgui/imgui.h	/^    inline T&           operator[](int i)                   { IM_ASSERT(i < Size); return Data[i]; }$/;"	f	struct:ImVector
operator []	lib/cimgui/imgui/imgui.h	/^    inline char         operator[](int i) const { IM_ASSERT(Buf.Data != NULL); return Buf.Data[i]; }$/;"	f	struct:ImGuiTextBuffer
operator []	lib/cimgui/imgui/imgui.h	/^    inline const T&     operator[](int i) const             { IM_ASSERT(i < Size); return Data[i]; }$/;"	f	struct:ImVector
operator []	lib/klib/cpp/khashl.hpp	/^	inline VType &operator[] (const KType &key) {$/;"	f	class:klib::KHashMap
operator []	lib/klib/cpp/khashl.hpp	/^	inline VType &operator[] (const KType &key) {$/;"	f	class:klib::KHashMapCached
operator bool	lib/cimgui/imgui/imgui.h	/^    operator bool() const { int current_frame = ImGui::GetFrameCount(); if (RefFrame == current_frame) return false; RefFrame = current_frame; return true; }$/;"	f	struct:ImGuiOnceUponAFrame
operator delete	lib/cimgui/imgui/imgui.h	/^inline void  operator delete(void*, ImNewDummy, void*)   {} \/\/ This is only required so we can use the symmetrical new()$/;"	f
operator new	lib/cimgui/imgui/imgui.h	/^inline void* operator new(size_t, ImNewDummy, void* ptr) { return ptr; }$/;"	f
opt	lib/klib/ketopt.h	/^	int opt;   \/* equivalent to optopt *\/$/;"	m	struct:__anon29
option	lib/nuklear/example/skinning.c	/^    struct nk_image option;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
option	lib/nuklear/nuklear.h	/^    struct nk_style_toggle option;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_toggle
option	lib/nuklear/src/nuklear.h	/^    struct nk_style_toggle option;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_toggle
option_cursor	lib/nuklear/example/skinning.c	/^    struct nk_image option_cursor;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
order	lib/nuklear/example/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon149
os.getopt	lib/klib/lua/klib.lua	/^function os.getopt(args, ostr)$/;"	f
out	lib/nuklear/demo/node_editor.c	/^    struct nk_vec2 out;$/;"	m	struct:node_link	typeref:struct:node_link::nk_vec2	file:
out	lib/nuklear/example/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anon155
out	lib/nuklear/example/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anon159
outliterals	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void outliterals(stb_uchar *in, int numlit)$/;"	f	file:
output_count	lib/nuklear/demo/node_editor.c	/^    int output_count;$/;"	m	struct:node	file:
output_id	lib/nuklear/demo/node_editor.c	/^    int output_id;$/;"	m	struct:node_link	file:
output_slot	lib/nuklear/demo/node_editor.c	/^    int output_slot;$/;"	m	struct:node_link	file:
outro_files	lib/nuklear/src/build.py	/^        outro_files = parse_files(sys.argv[cur_arg])$/;"	v
outro_files	lib/nuklear/src/build.py	/^outro_files = []$/;"	v
overlay	lib/nuklear/nuklear.h	/^    struct nk_command_buffer overlay;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_command_buffer
overlay	lib/nuklear/src/nuklear.h	/^    struct nk_command_buffer overlay;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_command_buffer
oversample_h	lib/nuklear/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config
oversample_h	lib/nuklear/src/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config
oversample_v	lib/nuklear/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config
oversample_v	lib/nuklear/src/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config
overview	lib/nuklear/demo/overview.c	/^overview(struct nk_context *ctx)$/;"	f	file:
p	lib/klib/cpp/kavl.hpp	/^		Node *p[2];$/;"	m	struct:klib::Avl::Node
p	lib/klib/kbtree.h	/^	kbpos_t stack[KB_MAX_DEPTH], *p;$/;"	m	struct:__anon6
p	lib/klib/khmm.h	/^	int *p; \/\/ posterior decoding$/;"	m	struct:__anon21
p	lib/klib/kstring.h	/^	const char *p; \/\/ end of the current token$/;"	m	struct:__anon19
p	lib/nuklear/nuklear.h	/^    struct nk_font_config *p;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_font_config
p	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *p;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_font_config
p	src/scene.h	/^    mat4x4 p,v;$/;"	m	struct:scene_t
p_buf	lib/klib/kurl.c	/^	int p_buf;    \/\/ file position in the buffer; p_buf <= l_buf$/;"	m	struct:kurl_t	file:
packInt16	lib/klib/bgzf.c	/^static inline void packInt16(uint8_t *buffer, uint16_t value)$/;"	f	file:
packInt32	lib/klib/bgzf.c	/^static inline void packInt32(uint8_t *buffer, uint32_t value)$/;"	f	file:
pack_info	lib/cimgui/imgui/imstb_truetype.h	/^   void *pack_info;$/;"	m	struct:stbtt_pack_context
pack_info	lib/nuklear/nuklear.h	/^    void *pack_info;$/;"	m	struct:nk_tt_pack_context
pack_info	lib/nuklear/src/nuklear_font.c	/^    void *pack_info;$/;"	m	struct:nk_tt_pack_context	file:
packed_chars	lib/nuklear/nuklear.h	/^    struct nk_tt_packedchar *packed_chars;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_packedchar
packed_chars	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_packedchar *packed_chars;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_packedchar	file:
padding	lib/cimgui/imgui/imstb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon119
padding	lib/cimgui/imgui/imstb_truetype.h	/^   int   padding;$/;"	m	struct:stbtt_pack_context
padding	lib/nuklear/nuklear.h	/^    int   padding;$/;"	m	struct:nk_tt_pack_context
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_text	typeref:struct:nk_style_text::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_vec2
padding	lib/nuklear/nuklear.h	/^    unsigned char padding[3];$/;"	m	struct:nk_font_config
padding	lib/nuklear/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_progress::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_property::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_scrollbar::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_text	typeref:struct:nk_style_text::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    unsigned char padding[3];$/;"	m	struct:nk_font_config
padding	lib/nuklear/src/nuklear_font.c	/^    int   padding;$/;"	m	struct:nk_tt_pack_context	file:
padding	lib/nuklear/src/nuklear_font.c	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	file:
padding	lib/nuklear/src/nuklear_internal.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_vec2
padding1	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anon109
padding1	lib/nuklear/nuklear.h	/^    unsigned char padding1;$/;"	m	struct:nk_text_edit
padding1	lib/nuklear/src/nuklear.h	/^    unsigned char padding1;$/;"	m	struct:nk_text_edit
padding2	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anon109
padding3	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anon109
page_count	lib/nuklear/nuklear.h	/^    unsigned int page_count;$/;"	m	struct:nk_pool
page_count	lib/nuklear/src/nuklear.h	/^    unsigned int page_count;$/;"	m	struct:nk_pool
pages	lib/nuklear/nuklear.h	/^    struct nk_page *pages;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_page
pages	lib/nuklear/src/nuklear.h	/^    struct nk_page *pages;$/;"	m	struct:nk_pool	typeref:struct:nk_pool::nk_page
painter	lib/nuklear/example/canvas.c	/^    struct nk_command_buffer *painter;$/;"	m	struct:nk_canvas	typeref:struct:nk_canvas::nk_command_buffer	file:
pal	lib/nuklear/example/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anon159
pan	lib/nuklear/nuklear.h	/^    struct nk_panel pan;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_panel
pan	lib/nuklear/src/nuklear.h	/^    struct nk_panel pan;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_panel
panel_padding	lib/nuklear/example/canvas.c	/^    struct nk_vec2 panel_padding;$/;"	m	struct:nk_canvas	typeref:struct:nk_canvas::nk_vec2	file:
panic	lib/klib/kalloc.c	/^static void panic(const char *s)$/;"	f	file:
par.getCname	lib/cimgui/generator/cpp2ffi.lua	/^	function par.getCname(stname,funcname)$/;"	f
par.getCname_overload	lib/cimgui/generator/cpp2ffi.lua	/^	function par.getCname_overload(stname,funcname,signature)$/;"	f
par.get_manuals	lib/cimgui/generator/cpp2ffi.lua	/^	function par.get_manuals(def)$/;"	f
par:clean_struct	lib/cimgui/generator/cpp2ffi.lua	/^	function par:clean_struct(stru)$/;"	f
par:compute_overloads	lib/cimgui/generator/cpp2ffi.lua	/^    function par:compute_overloads()$/;"	f
par:compute_templated	lib/cimgui/generator/cpp2ffi.lua	/^	function par:compute_templated()$/;"	f
par:do_parse	lib/cimgui/generator/cpp2ffi.lua	/^	function par:do_parse()$/;"	f
par:dump_alltypes	lib/cimgui/generator/cpp2ffi.lua	/^    function par:dump_alltypes()$/;"	f
par:gen_structs_and_enums	lib/cimgui/generator/cpp2ffi.lua	/^	function par:gen_structs_and_enums()$/;"	f
par:gen_structs_and_enums_table	lib/cimgui/generator/cpp2ffi.lua	/^	function par:gen_structs_and_enums_table()$/;"	f
par:insert	lib/cimgui/generator/cpp2ffi.lua	/^	function par:insert(line)$/;"	f
par:parseFunctions	lib/cimgui/generator/cpp2ffi.lua	/^	function par:parseFunctions()$/;"	f
par:parseItems	lib/cimgui/generator/cpp2ffi.lua	/^	function par:parseItems()$/;"	f
par:parse_struct_line	lib/cimgui/generator/cpp2ffi.lua	/^	function par:parse_struct_line(line,outtab)$/;"	f
par:printItems	lib/cimgui/generator/cpp2ffi.lua	/^	function par:printItems()$/;"	f
parent	lib/klib/knhx.h	/^	int parent, n;$/;"	m	struct:__anon33
parent	lib/nuklear/nuklear.h	/^    nk_size parent;$/;"	m	struct:nk_popup_buffer
parent	lib/nuklear/nuklear.h	/^    struct nk_panel *parent;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_panel
parent	lib/nuklear/nuklear.h	/^    struct nk_window *parent;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
parent	lib/nuklear/src/nuklear.h	/^    nk_size parent;$/;"	m	struct:nk_popup_buffer
parent	lib/nuklear/src/nuklear.h	/^    struct nk_panel *parent;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_panel
parent	lib/nuklear/src/nuklear.h	/^    struct nk_window *parent;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
parse	lib/nuklear/example/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon159
parse 	lib/cimgui/generator/json.lua	/^parse = function(str, idx)$/;"	f
parseFunction	lib/cimgui/generator/cpp2ffi.lua	/^local function parseFunction(self,stname,lineorig,namespace)$/;"	f
parseImGuiHeader	lib/cimgui/generator/generator.lua	/^local function parseImGuiHeader(header,names)$/;"	f
parseItems	lib/cimgui/generator/cpp2ffi.lua	/^local function parseItems(txt,dumpit)$/;"	f
parse_array	lib/cimgui/generator/json.lua	/^local function parse_array(str, i)$/;"	f
parse_clusters	src/data.c	/^static void parse_clusters(data_t* data) {$/;"	f	file:
parse_files	lib/nuklear/src/build.py	/^def parse_files(arg):$/;"	f
parse_header	src/data.c	/^static void parse_header(data_t* data, char* header) {$/;"	f	file:
parse_literal	lib/cimgui/generator/json.lua	/^local function parse_literal(str, i)$/;"	f
parse_number	lib/cimgui/generator/json.lua	/^local function parse_number(str, i)$/;"	f
parse_object	lib/cimgui/generator/json.lua	/^local function parse_object(str, i)$/;"	f
parse_string	lib/cimgui/generator/json.lua	/^local function parse_string(str, i)$/;"	f
parse_unicode_escape	lib/cimgui/generator/json.lua	/^local function parse_unicode_escape(s)$/;"	f
parse_version	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static int parse_version(void)$/;"	f	file:
parse_version	lib/gl3w/GL/gl3w.c	/^static int parse_version(void)$/;"	f	file:
parser.getCname 	lib/cimgui/generator/generator.lua	/^	parser.getCname = function(stname,funcname)$/;"	f
paste	lib/nuklear/nuklear.h	/^    nk_plugin_paste paste;$/;"	m	struct:nk_clipboard
paste	lib/nuklear/src/nuklear.h	/^    nk_plugin_paste paste;$/;"	m	struct:nk_clipboard
pasv_ip	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s
pasv_port	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s
pat_len	lib/klib/test/kstring_bench2.c	/^static int pat_len = 30;$/;"	v	file:
path	lib/klib/knetfile.h	/^	char *path, *http_host;$/;"	m	struct:knetFile_s
path_count	lib/nuklear/nuklear.h	/^    unsigned int path_count;$/;"	m	struct:nk_draw_list
path_count	lib/nuklear/src/nuklear.h	/^    unsigned int path_count;$/;"	m	struct:nk_draw_list
path_offset	lib/nuklear/nuklear.h	/^    unsigned int path_offset;$/;"	m	struct:nk_draw_list
path_offset	lib/nuklear/src/nuklear.h	/^    unsigned int path_offset;$/;"	m	struct:nk_draw_list
pause	lib/nuklear/example/extended.c	/^    struct nk_image pause;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
pen	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpPen *pen;$/;"	m	struct:__anon189
pen	lib/nuklear/example/extended.c	/^    struct nk_image pen;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
permanent	lib/nuklear/nuklear.h	/^    struct nk_allocator permanent;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_allocator
permanent	lib/nuklear/src/nuklear.h	/^    struct nk_allocator permanent;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_allocator
pid	lib/klib/kopen.c	/^	pid_t pid;$/;"	m	struct:__anon35	file:
pipeline_t	lib/klib/test/kthread_test2.c	/^} pipeline_t;$/;"	t	typeref:struct:__anon14	file:
pitch	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    int w, h, pitch;$/;"	m	struct:rawfb_image
pixel	lib/nuklear/nuklear.h	/^    void *pixel;$/;"	m	struct:nk_font_atlas
pixel	lib/nuklear/src/nuklear.h	/^    void *pixel;$/;"	m	struct:nk_font_atlas
pixel_shader	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11PixelShader *pixel_shader;$/;"	m	struct:__anon174
pixel_snap	lib/nuklear/nuklear.h	/^    unsigned char pixel_snap;$/;"	m	struct:nk_font_config
pixel_snap	lib/nuklear/src/nuklear.h	/^    unsigned char pixel_snap;$/;"	m	struct:nk_font_config
pixels	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned char* pixels;$/;"	m	struct:GLFWimage
pixels	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:__anon120
pixels	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:stbtt_pack_context
pixels	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    void *pixels;$/;"	m	struct:rawfb_image
pixels	lib/nuklear/nuklear.h	/^    unsigned char *pixels;$/;"	m	struct:nk_tt_pack_context
pixels	lib/nuklear/nuklear.h	/^   unsigned char *pixels;$/;"	m	struct:nk_tt__bitmap
pixels	lib/nuklear/src/nuklear_font.c	/^    unsigned char *pixels;$/;"	m	struct:nk_tt_pack_context	file:
pixels	lib/nuklear/src/nuklear_font.c	/^   unsigned char *pixels;$/;"	m	struct:nk_tt__bitmap	file:
pl	lib/klib/kthread.c	/^	struct ktp_t *pl;$/;"	m	struct:__anon38	typeref:struct:__anon38::ktp_t	file:
pl	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    rawfb_pl pl;$/;"	m	struct:rawfb_image
play	lib/nuklear/example/extended.c	/^    struct nk_image play;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
point_count	lib/nuklear/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon
point_count	lib/nuklear/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon_filled
point_count	lib/nuklear/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polyline
point_count	lib/nuklear/src/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon
point_count	lib/nuklear/src/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon_filled
point_count	lib/nuklear/src/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polyline
point_size	src/shader.h	/^	GLuint point_size; \/\/ size of point$/;"	m	struct:__anon2
points	lib/nuklear/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_vec2i
points	lib/nuklear/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_vec2i
points	lib/nuklear/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_vec2i
points	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command_polygon::nk_vec2i
points	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command_polygon_filled::nk_vec2i
points	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command_polyline::nk_vec2i
pool	lib/nuklear/nuklear.h	/^    struct nk_allocator pool;$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_allocator
pool	lib/nuklear/nuklear.h	/^    struct nk_pool pool;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_pool
pool	lib/nuklear/src/nuklear.h	/^    struct nk_allocator pool;$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer::nk_allocator
pool	lib/nuklear/src/nuklear.h	/^    struct nk_pool pool;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_pool
pop_back	lib/cimgui/imgui/imgui.h	/^    inline void         pop_back()                          { IM_ASSERT(Size > 0); Size--; }$/;"	f	struct:ImVector
popup	lib/nuklear/nuklear.h	/^    struct nk_popup_state popup;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_popup_state
popup	lib/nuklear/src/nuklear.h	/^    struct nk_popup_state popup;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_popup_state
popup_border	lib/nuklear/nuklear.h	/^    float popup_border;$/;"	m	struct:nk_style_window
popup_border	lib/nuklear/src/nuklear.h	/^    float popup_border;$/;"	m	struct:nk_style_window
popup_border_color	lib/nuklear/nuklear.h	/^    struct nk_color popup_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
popup_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color popup_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
popup_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 popup_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
popup_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 popup_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
port	lib/klib/knetfile.h	/^	char *host, *port;$/;"	m	struct:knetFile_s
pos	lib/cimgui/cimgui.h	/^    ImVec2 pos;$/;"	m	struct:ImDrawVert
pos	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 pos;$/;"	m	struct:ImDrawVert
pos	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^    ImVec2 pos;$/;"	m	struct:ImDrawVertAllegro	file:
pos	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^    float    pos[3];$/;"	m	struct:CUSTOMVERTEX	file:
pos	lib/cimgui/imgui/imgui.h	/^    ImVec2  pos;$/;"	m	struct:ImDrawVert
pos	lib/klib/ketopt.h	/^	int i, pos, n_args;$/;"	m	struct:__anon29
pos	lib/nuklear/nuklear.h	/^    struct nk_vec2 pos;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
pos	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 pos;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
position	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    float position[2];$/;"	m	struct:nk_d3d11_vertex
position	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    float position[3];$/;"	m	struct:nk_d3d9_vertex
position	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex
position	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex
position	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex
position	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    float position[2];$/;"	m	struct:nk_sdl_vertex
position	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    float position[2];$/;"	m	struct:nk_sdl_vertex
position	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLfloat position[2];$/;"	m	struct:nk_sdl_vertex
position	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    float position[2];$/;"	m	struct:nk_sfml_vertex
position	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    float position[2];$/;"	m	struct:nk_sfml_vertex
position	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    float position[2];$/;"	m	struct:nk_x11_vertex
position	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    float position[2];$/;"	m	struct:nk_x11_vertex
position	lib/nuklear/example/canvas.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	file:
position	lib/nuklear/example/extended.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	file:
position	lib/nuklear/example/file_browser.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	file:
position	lib/nuklear/example/skinning.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	file:
preferred_x	lib/cimgui/imgui/imstb_textedit.h	/^   float preferred_x; \/\/ this determines where the cursor up\/down tries to seek to along x$/;"	m	struct:__anon109
preferred_x	lib/nuklear/nuklear.h	/^    float preferred_x;$/;"	m	struct:nk_text_edit
preferred_x	lib/nuklear/src/nuklear.h	/^    float preferred_x;$/;"	m	struct:nk_text_edit
prefix	lib/nuklear/example/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anon158
prepare	lib/klib/kurl.c	/^static int prepare(kurl_t *ku, int do_seek)$/;"	f	file:
prepro_boolif	lib/cimgui/generator/generator.lua	/^    local function prepro_boolif(pre,cond)$/;"	f
prepro_boolif	lib/cimgui/generator/generator_old.lua	/^    local function prepro_boolif(pre,cond)$/;"	f
present	lib/nuklear/demo/d3d9/main.c	/^static D3DPRESENT_PARAMETERS present;$/;"	v	file:
pressed	lib/nuklear/nuklear.h	/^    struct nk_style_item pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
pressed	lib/nuklear/src/nuklear.h	/^    struct nk_style_item pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
pressed_active	lib/nuklear/nuklear.h	/^    struct nk_style_item pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
pressed_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_style_item
prev	lib/nuklear/demo/node_editor.c	/^    struct node *prev;$/;"	m	struct:node	typeref:struct:node::node	file:
prev	lib/nuklear/example/extended.c	/^    struct nk_image prev;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
prev	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state
prev	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state
prev	lib/nuklear/nuklear.h	/^    struct nk_page_element *prev;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element::nk_page_element
prev	lib/nuklear/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table::
prev	lib/nuklear/nuklear.h	/^    struct nk_vec2 prev;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
prev	lib/nuklear/nuklear.h	/^    struct nk_window *prev;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
prev	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state
prev	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state
prev	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *prev;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element::nk_page_element
prev	lib/nuklear/src/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table::
prev	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 prev;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
prev	lib/nuklear/src/nuklear.h	/^    struct nk_window *prev;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_window
prev_first	lib/cimgui/imgui/imstb_textedit.h	/^   int prev_first;  \/\/ first char of previous row$/;"	m	struct:__anon111
prev_first	lib/nuklear/nuklear.h	/^   int prev_first;  \/*_ first char of previous row *\/$/;"	m	struct:nk_text_find
prev_first	lib/nuklear/src/nuklear_text_editor.c	/^   int prev_first;  \/*_ first char of previous row *\/$/;"	m	struct:nk_text_find	file:
prev_link	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_node **prev_link;$/;"	m	struct:__anon99
prev_link	lib/nuklear/nuklear.h	/^    struct nk_rp_node **prev_link;$/;"	m	struct:nk_rp__findresult	typeref:struct:nk_rp__findresult::nk_rp_node
prev_link	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node **prev_link;$/;"	m	struct:nk_rp__findresult	typeref:struct:nk_rp__findresult::nk_rp_node	file:
printItems	lib/cimgui/generator/cpp2ffi.lua	/^local function printItems(items)$/;"	f
printItemsKind	lib/cimgui/generator/cpp2ffi.lua	/^	local function printItemsKind(items,kind)$/;"	f
print_cmd	lib/klib/test/ketopt_test.c	/^static void print_cmd(int argc, char *argv[], int ind)$/;"	f	file:
print_help	lib/nuklear/src/build.py	/^def print_help():$/;"	f
print_tree	lib/klib/test/krmq_test.c	/^int print_tree(const struct my_node *p)$/;"	f
priv_files	lib/nuklear/src/build.py	/^        priv_files = parse_files(sys.argv[cur_arg])$/;"	v
priv_files	lib/nuklear/src/build.py	/^priv_files = []$/;"	v
prog	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_glfw_device
prog	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint prog;$/;"	m	struct:nk_glfw_device
prog	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_sdl_device
prog	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint prog;$/;"	m	struct:nk_sdl_device
prog	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_sfml_device
prog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_x11_device
prog	lib/nuklear/example/canvas.c	/^    GLuint prog;$/;"	m	struct:device	file:
prog	lib/nuklear/example/extended.c	/^    GLuint prog;$/;"	m	struct:device	file:
prog	lib/nuklear/example/file_browser.c	/^    GLuint prog;$/;"	m	struct:device	file:
prog	lib/nuklear/example/skinning.c	/^    GLuint prog;$/;"	m	struct:device	file:
prog	src/shader.h	/^	GLuint prog; \/\/ shader id$/;"	m	struct:__anon2
proggy_clean_ttf_compressed_data_base85	lib/cimgui/imgui/imgui_draw.cpp	/^static const char proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v	file:
progress	lib/nuklear/nuklear.h	/^    struct nk_style_progress progress;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_progress
progress	lib/nuklear/src/nuklear.h	/^    struct nk_style_progress progress;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_progress
progressive	lib/nuklear/example/stb_image.h	/^   int            progressive;$/;"	m	struct:__anon149
projection	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    D3DMATRIX projection;$/;"	m	struct:__anon173
property	lib/nuklear/nuklear.h	/^    struct nk_property_state property;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_property_state
property	lib/nuklear/nuklear.h	/^    struct nk_style_property property;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_property
property	lib/nuklear/src/nuklear.h	/^    struct nk_property_state property;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_property_state
property	lib/nuklear/src/nuklear.h	/^    struct nk_style_property property;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_property
ptr	lib/klib/kalloc.c	/^	struct header_t *ptr;$/;"	m	struct:header_t	typeref:struct:header_t::header_t	file:
ptr	lib/nuklear/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory
ptr	lib/nuklear/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon132
ptr	lib/nuklear/src/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory
ptr	lib/nuklear/src/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon161
ptr_from_offset	lib/cimgui/imgui/imgui_internal.h	/^    T*      ptr_from_offset(int off)    { IM_ASSERT(off >= 4 && off < Buf.Size); return (T*)(void*)(Buf.Data + off); }$/;"	f	struct:ImChunkStream
pub_files	lib/nuklear/src/build.py	/^        pub_files = parse_files(sys.argv[cur_arg])$/;"	v
pub_files	lib/nuklear/src/build.py	/^pub_files = []$/;"	v
pump_input	lib/nuklear/example/canvas.c	/^pump_input(struct nk_context *ctx, GLFWwindow *win)$/;"	f	file:
push_back	lib/cimgui/imgui/imgui.h	/^    inline void         push_back(const T& v)               { if (Size == Capacity) reserve(_grow_capacity(Size + 1)); memcpy(&Data[Size], &v, sizeof(v)); Size++; }$/;"	f	struct:ImVector
push_back	lib/klib/kexpr.c	/^static inline ke1_t *push_back(ke1_t **a, int *n, int *m)$/;"	f	file:
push_cigar	lib/klib/ksw.c	/^static inline uint32_t *push_cigar(int *n_cigar, int *m_cigar, uint32_t *cigar, int op, int len)$/;"	f	file:
push_front	lib/cimgui/imgui/imgui.h	/^    inline void         push_front(const T& v)              { if (Size == 0) push_back(v); else insert(Data, v); }$/;"	f	struct:ImVector
put	lib/klib/cpp/khash.hpp	/^	khint_t put(const T &key, int *ret) {$/;"	f	class:klib::KHash
put	lib/klib/cpp/khashl.hpp	/^	khint_t put(const KType &key, int *absent) {$/;"	f	class:klib::KHashMap
put	lib/klib/cpp/khashl.hpp	/^	khint_t put(const KType &key, int *absent) {$/;"	f	class:klib::KHashMapCached
put	lib/klib/cpp/khashl.hpp	/^	khint_t put(const KType &key, int *absent) {$/;"	f	class:klib::KHashSetCached
put	lib/klib/cpp/khashl.hpp	/^	khint_t put(const T &key, int *absent_ = 0) {$/;"	f	class:klib::KHashSet
pvertices	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt_vertex *pvertices;$/;"	m	struct:__anon127
qb	lib/klib/ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon39
qe	lib/klib/ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon39
qlen	lib/klib/ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	file:
qnxnto	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.13.4/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qp	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
quat	lib/linmath/linmath.h	/^typedef float quat[4];$/;"	t	typeref:typename:float[4]
quat_add	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_add(quat r, quat a, quat b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat r,quat a,quat b)
quat_conj	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_conj(quat r, quat q)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat r,quat q)
quat_from_mat4x4	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_from_mat4x4(quat q, mat4x4 M)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat q,mat4x4 M)
quat_identity	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_identity(quat q)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat q)
quat_inner_product	lib/linmath/linmath.h	/^LINMATH_H_FUNC float quat_inner_product(quat a, quat b)$/;"	f	typeref:typename:LINMATH_H_FUNC float	signature:(quat a,quat b)
quat_mul	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_mul(quat r, quat p, quat q)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat r,quat p,quat q)
quat_mul_vec3	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_mul_vec3(vec3 r, quat q, vec3 v)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec3 r,quat q,vec3 v)
quat_norm	lib/linmath/linmath.h	/^#define quat_norm /;"	d
quat_rotate	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_rotate(quat r, float angle, vec3 axis) {$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat r,float angle,vec3 axis)
quat_scale	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_scale(quat r, quat v, float s)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat r,quat v,float s)
quat_sub	lib/linmath/linmath.h	/^LINMATH_H_FUNC void quat_sub(quat r, quat a, quat b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(quat r,quat a,quat b)
query	lib/nuklear/nuklear.h	/^    nk_query_font_glyph_f query;$/;"	m	struct:nk_user_font
query	lib/nuklear/src/nuklear.h	/^    nk_query_font_glyph_f query;$/;"	m	struct:nk_user_font
quickSort	lib/klib/test/ksort_test.cc	/^void quickSort (int numbers[], int qty) {$/;"	f
quickSortRecurse	lib/klib/test/ksort_test.cc	/^static void quickSortRecurse (int * numbers, int left, int right) {$/;"	f	file:
r	lib/klib/kexpr.c	/^	double r;$/;"	m	struct:ke1_s	file:
r	lib/nuklear/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc
r	lib/nuklear/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc_filled
r	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
r	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
r	lib/nuklear/src/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc
r	lib/nuklear/src/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc_filled
r	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color
r	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf
radix_sort	lib/klib/test/ksort_test.cc	/^void radix_sort(unsigned *array, int offset, int end, int shift) {$/;"	f
range	lib/nuklear/nuklear.h	/^    const nk_rune *range;$/;"	m	struct:nk_font_config
range	lib/nuklear/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
range	lib/nuklear/src/nuklear.h	/^    const nk_rune *range;$/;"	m	struct:nk_font_config
range	lib/nuklear/src/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot
range_count	lib/nuklear/nuklear.h	/^    nk_rune range_count;$/;"	m	struct:nk_font_bake_data
range_count	lib/nuklear/src/nuklear_font.c	/^    nk_rune range_count;$/;"	m	struct:nk_font_bake_data	file:
ranges	lib/nuklear/nuklear.h	/^    const nk_rune *ranges;$/;"	m	struct:nk_baked_font
ranges	lib/nuklear/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_tt_pack_range
ranges	lib/nuklear/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_pack_range
ranges	lib/nuklear/src/nuklear.h	/^    const nk_rune *ranges;$/;"	m	struct:nk_baked_font
ranges	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_tt_pack_range	file:
ranges	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_pack_range	file:
rasterizer_state	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11RasterizerState *rasterizer_state;$/;"	m	struct:__anon174
ratio	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon159
ratio	lib/nuklear/nuklear.h	/^    const float *ratio;$/;"	m	struct:nk_row_layout
ratio	lib/nuklear/src/nuklear.h	/^    const float *ratio;$/;"	m	struct:nk_row_layout
ratio	src/bbgl.h	/^float ratio;$/;"	v
raw_coeff	lib/nuklear/example/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon149::__anon150
raw_data	lib/nuklear/example/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anon149::__anon150
rawfb_context	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^struct rawfb_context {$/;"	s
rawfb_image	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^struct rawfb_image {$/;"	s
rawfb_pixel_layout	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^typedef enum rawfb_pixel_layout {$/;"	g
rawfb_pl	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^rawfb_pl;$/;"	t	typeref:enum:rawfb_pixel_layout
re) and not line:match	lib/cimgui/generator/generator_old.lua	/^        if line:match(function_re) and not line:match("typedef.*%b().*%b().*") then$/;"	f
re) or line:match	lib/cimgui/generator/generator_old.lua	/^        if (line:match(function_re) or line:match(operator_re)) and not line:match("typedef.*%b().*%b().*") $/;"	f
read	lib/nuklear/example/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  return number of bytes actually read$/;"	m	struct:__anon145
read_data	lib/cimgui/generator/cpp2ffi.lua	/^local function  read_data(filename)$/;"	f
read_from_callbacks	lib/nuklear/example/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anon146
readseq	lib/klib/lua/bio.lua	/^local function readseq(fp)$/;"	f
real_func1	lib/klib/kexpr.c	/^		double (*real_func1)(double);$/;"	m	union:ke1_s::__anon24	file:
real_func2	lib/klib/kexpr.c	/^		double (*real_func2)(double, double);$/;"	m	union:ke1_s::__anon24	file:
rect_height_compare	lib/cimgui/imgui/imstb_rectpack.h	/^static int STBRP__CDECL rect_height_compare(const void *a, const void *b)$/;"	f
rect_original_order	lib/cimgui/imgui/imstb_rectpack.h	/^static int STBRP__CDECL rect_original_order(const void *a, const void *b)$/;"	f
rects	lib/nuklear/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_rp_rect
rects	lib/nuklear/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_rp_rect
rects	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_font_bake_data::nk_rp_rect	file:
rects	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_rp_rect	file:
red	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned short* red;$/;"	m	struct:GLFWgammaramp
redBits	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int redBits;$/;"	m	struct:GLFWvidmode
redo_char_point	lib/cimgui/imgui/imstb_textedit.h	/^   int undo_char_point, redo_char_point;$/;"	m	struct:__anon108
redo_char_point	lib/nuklear/nuklear.h	/^   short redo_char_point;$/;"	m	struct:nk_text_undo_state
redo_char_point	lib/nuklear/src/nuklear.h	/^   short redo_char_point;$/;"	m	struct:nk_text_undo_state
redo_point	lib/cimgui/imgui/imstb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anon108
redo_point	lib/nuklear/nuklear.h	/^   short redo_point;$/;"	m	struct:nk_text_undo_state
redo_point	lib/nuklear/src/nuklear.h	/^   short redo_point;$/;"	m	struct:nk_text_undo_state
refreshRate	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int refreshRate;$/;"	m	struct:GLFWvidmode
region	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
region	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
renderer_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *renderer_str;$/;"	m	struct:opengl_info
repeat	lib/klib/test/kstring_bench2.c	/^static int repeat = 50;$/;"	v	file:
resample	lib/nuklear/example/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anon151
resample_row_1	lib/nuklear/example/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
resample_row_func	lib/nuklear/example/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t
resample_row_hv_2_kernel	lib/nuklear/example/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs);$/;"	m	struct:__anon149
reserve	lib/cimgui/imgui/imgui.h	/^    inline void         reserve(int new_capacity)           { if (new_capacity <= Capacity) return; T* new_data = (T*)IM_ALLOC((size_t)new_capacity * sizeof(T)); if (Data) { memcpy(new_data, Data, (size_t)Size * sizeof(T)); IM_FREE(Data); } Data = new_data; Capacity = new_capacity; }$/;"	f	struct:ImVector
reserve	lib/cimgui/imgui/imgui.h	/^    void                reserve(int capacity)   { Buf.reserve(capacity); }$/;"	f	struct:ImGuiTextBuffer
resize	lib/cimgui/imgui/imgui.h	/^    inline void         resize(int new_size)                { if (new_size > Capacity) reserve(_grow_capacity(new_size)); Size = new_size; }$/;"	f	struct:ImVector
resize	lib/cimgui/imgui/imgui.h	/^    inline void         resize(int new_size, const T& v)    { if (new_size > Capacity) reserve(_grow_capacity(new_size)); if (new_size > Size) for (int n = Size; n < new_size; n++) memcpy(&Data[n], &v, sizeof(v)); Size = new_size; }$/;"	f	struct:ImVector
resize	lib/klib/cpp/khash.hpp	/^	int resize(khint_t new_n_buckets) {$/;"	f	class:klib::KHash
resize	lib/klib/cpp/khashl.hpp	/^	int resize(khint_t new_nb) {$/;"	f	class:klib::KHashSet
resize_grip_def	lib/cimgui/imgui/imgui.cpp	/^static const ImGuiResizeGripDef resize_grip_def[4] =$/;"	v	file:
response	lib/klib/knetfile.h	/^	char *response, *retr, *size_cmd;$/;"	m	struct:knetFile_s
response	lib/klib/kopen.c	/^	char *response;$/;"	m	struct:__anon34	file:
restart_interval	lib/nuklear/example/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon149
retr	lib/klib/knetfile.h	/^	char *response, *retr, *size_cmd;$/;"	m	struct:knetFile_s
revseq	lib/klib/ksw.c	/^static void revseq(int l, uint8_t *s)$/;"	f	file:
right	lib/klib/ksort.h	/^	void *left, *right;$/;"	m	struct:__anon32
right	lib/nuklear/nuklear.h	/^    struct nk_color right;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
right	lib/nuklear/src/nuklear.h	/^    struct nk_color right;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
rocket	lib/nuklear/example/extended.c	/^    struct nk_image rocket;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
rol32	lib/klib/kurl.c	325;"	d	file:
root	lib/klib/cpp/kavl.hpp	/^	Node *root;$/;"	m	class:klib::Avl
root	lib/klib/kson.h	/^	kson_node_t *root;$/;"	m	struct:__anon10
root	lib/nuklear/demo/x11/main.c	/^    Window root;$/;"	m	struct:XWindow	file:
root	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Window root;$/;"	m	struct:XSurface
root	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Window root;$/;"	m	struct:__anon191
root	lib/nuklear/demo/x11_rawfb/main.c	/^    Window root;$/;"	m	struct:XWindow	file:
root	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    Window root;$/;"	m	struct:__anon175
root	lib/nuklear/demo/x11_xft/main.c	/^    Window root;$/;"	m	struct:XWindow	file:
root	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Window root;$/;"	m	struct:XSurface
root	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Window root;$/;"	m	struct:__anon190
rot	src/scene.h	/^    mat4x4 rot;$/;"	m	struct:scene_t
rot	src/shader.h	/^	GLuint rot; \/\/ rotation matrix$/;"	m	struct:__anon2
rotate1	lib/klib/cpp/kavl.hpp	/^	inline Node *rotate1(Node *p, int dir) { \/\/ dir=0 to left; dir=1 to right$/;"	f	class:klib::Avl
rotate2	lib/klib/cpp/kavl.hpp	/^	inline Node *rotate2(Node *p, int dir) {$/;"	f	class:klib::Avl
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_button
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_chart
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_combo
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_edit
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_progress
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_property
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_scrollbar
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_selectable
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_slider
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_tab
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_window
rounding	lib/nuklear/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect
rounding	lib/nuklear/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect_filled
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_button
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_chart
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_combo
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_edit
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_progress
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_property
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_scrollbar
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_selectable
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_slider
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_tab
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_window
rounding	lib/nuklear/src/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect
rounding	lib/nuklear/src/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect_filled
rounding_cursor	lib/nuklear/nuklear.h	/^    float rounding_cursor;$/;"	m	struct:nk_style_scrollbar
rounding_cursor	lib/nuklear/src/nuklear.h	/^    float rounding_cursor;$/;"	m	struct:nk_style_scrollbar
row	lib/nuklear/nuklear.h	/^    struct nk_row_layout row;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_row_layout
row	lib/nuklear/src/nuklear.h	/^    struct nk_row_layout row;$/;"	m	struct:nk_panel	typeref:struct:nk_panel::nk_row_layout
row_padding	lib/nuklear/nuklear.h	/^    float row_padding;$/;"	m	struct:nk_style_edit
row_padding	lib/nuklear/src/nuklear.h	/^    float row_padding;$/;"	m	struct:nk_style_edit
rows	src/data.h	/^    unsigned int rows;    \/\/ number of rows$/;"	m	struct:__anon1
rows	src/obj.h	/^    size_t rows;$/;"	m	struct:obj_t
rs_insertsort	lib/klib/test/ksort_test.cc	/^static inline void rs_insertsort(rstype_t *s, rstype_t *t)$/;"	f	file:
rs_sort	lib/klib/test/ksort_test.cc	/^void rs_sort(rstype_t *beg, rstype_t *end, int n_bits, int s)$/;"	f
rsbucket_t	lib/klib/test/ksort_test.cc	/^} rsbucket_t;$/;"	t	typeref:struct:__anon16	file:
rskey	lib/klib/test/ksort_test.cc	576;"	d	file:
rstype_t	lib/klib/test/ksort_test.cc	575;"	d	file:
rt_view	lib/nuklear/demo/d3d11/main.c	/^static ID3D11RenderTargetView* rt_view;$/;"	v	file:
running	lib/nuklear/demo/sdl_opengles2/main.c	/^int running = nk_true;$/;"	v
s	lib/klib/bgzf.h	/^	char *s;$/;"	m	struct:__kstring_t
s	lib/klib/kexpr.c	/^	char *s;$/;"	m	struct:ke1_s	file:
s	lib/klib/khmm.h	/^	FLOAT **f, **b, *s;$/;"	m	struct:__anon21
s	lib/klib/knhx.h	/^	char *s;$/;"	m	struct:__kstring_t
s	lib/klib/krng.h	/^	uint64_t s[2];$/;"	m	struct:__anon8
s	lib/klib/kseq.h	/^	char *s;$/;"	m	struct:__kstring_t
s	lib/klib/kstring.h	/^	char *s;$/;"	m	struct:__kstring_t
s	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	m	struct:__anon28	file:
s	lib/nuklear/example/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon149
s	lib/nuklear/example/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anon155
s0	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon115
s0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
s0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	file:
s1	lib/cimgui/imgui/imstb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon115
s1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
s1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	file:
s3_parse	lib/klib/kurl.c	/^s3aux_t s3_parse(const char *url, const char *_id, const char *_secret, const char *fn_secret)$/;"	f
s3_read_awssecret	lib/klib/kurl.c	/^static char *s3_read_awssecret(const char *fn)$/;"	f	file:
s3_sign	lib/klib/kurl.c	/^static void s3_sign(const char *key, const char *data, char out[29])$/;"	f	file:
s3aux_t	lib/klib/kurl.c	/^} s3aux_t;$/;"	t	typeref:struct:__anon25	file:
s3key_fn	lib/klib/kurl.h	/^	const char *s3key_fn;$/;"	m	struct:__anon42
s3keyid	lib/klib/kurl.h	/^	const char *s3keyid;$/;"	m	struct:__anon42
s3secretkey	lib/klib/kurl.h	/^	const char *s3secretkey;$/;"	m	struct:__anon42
sAddString	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddString(uSynergyContext *context, const char *string)$/;"	f	file:
sAddUInt16	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddUInt16(uSynergyContext *context, uint16_t value)$/;"	f	file:
sAddUInt32	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddUInt32(uSynergyContext *context, uint32_t value)$/;"	f	file:
sAddUInt8	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddUInt8(uSynergyContext *context, uint8_t value)$/;"	f	file:
sNetToNative16	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static int16_t sNetToNative16(const unsigned char *value)$/;"	f	file:
sNetToNative32	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static int32_t sNetToNative32(const unsigned char *value)$/;"	f	file:
sProcessMessage	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sProcessMessage(uSynergyContext *context, const uint8_t *message)$/;"	f	file:
sSendJoystickCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSendJoystickCallback(uSynergyContext *context, uint8_t joyNum)$/;"	f	file:
sSendKeyboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSendKeyboardCallback(uSynergyContext *context, uint16_t key, uint16_t modifiers, uSynergyBool down, uSynergyBool repeat)$/;"	f	file:
sSendMouseCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSendMouseCallback(uSynergyContext *context)$/;"	f	file:
sSendReply	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static uSynergyBool sSendReply(uSynergyContext *context)$/;"	f	file:
sSetDisconnected	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSetDisconnected(uSynergyContext *context)$/;"	f	file:
sTrace	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sTrace(uSynergyContext *context, const char* text)$/;"	f	file:
sUpdateContext	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sUpdateContext(uSynergyContext *context)$/;"	f	file:
saint_t	lib/klib/ksa.c	/^typedef int saint_t;$/;"	t	file:
saint_t	lib/klib/ksa.c	/^typedef int64_t saint_t;$/;"	t	file:
sampler_state	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11SamplerState *sampler_state;$/;"	m	struct:__anon174
save_data	lib/cimgui/generator/cpp2ffi.lua	/^local function save_data(filename,...)$/;"	f
save_data	lib/cimgui/generator/generator_old.lua	/^local function save_data(filename,...)$/;"	f
scale	lib/nuklear/nuklear.h	/^    float scale;$/;"	m	struct:nk_font
scale	lib/nuklear/src/nuklear.h	/^    float scale;$/;"	m	struct:nk_font
scaler	lib/nuklear/nuklear.h	/^    struct nk_style_item scaler;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_item
scaler	lib/nuklear/src/nuklear.h	/^    struct nk_style_item scaler;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_style_item
scan_n	lib/nuklear/example/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anon149
scene	src/bbgl.c	/^scene_p scene;$/;"	v
scene_add_obj	src/scene.c	/^scene_add_obj(scene_p scene, obj_p obj) {$/;"	f
scene_ctor	src/scene.c	/^scene_ctor() {$/;"	f
scene_dtor	src/scene.c	/^scene_dtor(scene_p scene) { $/;"	f
scene_p	src/scene.h	/^typedef scene_t* scene_p;$/;"	t
scene_render	src/scene.c	/^scene_render(scene_p scene) {$/;"	f
scene_t	src/gui.h	/^typedef struct scene_t scene_t;$/;"	t	typeref:struct:scene_t
scene_t	src/scene.h	/^typedef struct scene_t {$/;"	s
scene_t	src/scene.h	/^} scene_t;$/;"	t	typeref:struct:scene_t
scissors	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct nk_rect scissors;$/;"	m	struct:rawfb_context	typeref:struct:rawfb_context::nk_rect
score	lib/klib/ksw.h	/^	int score; \/\/ best score$/;"	m	struct:__anon39
score2	lib/klib/ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon39
screen	lib/nuklear/demo/x11/main.c	/^    int screen;$/;"	m	struct:XWindow	file:
screen	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int screen;$/;"	m	struct:XSurface
screen	lib/nuklear/demo/x11_rawfb/main.c	/^    int screen;$/;"	m	struct:XWindow	file:
screen	lib/nuklear/demo/x11_xft/main.c	/^    int screen;$/;"	m	struct:XWindow	file:
screen	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    int screen;$/;"	m	struct:XSurface
scroll	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_vec2 scroll;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
scroll	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_vec2 scroll;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
scroll	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_vec2 scroll;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw::nk_vec2
scroll_delta	lib/nuklear/nuklear.h	/^    struct nk_vec2 scroll_delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
scroll_delta	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scroll_delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse::nk_vec2
scroll_input	lib/nuklear/example/canvas.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	file:
scroll_input	lib/nuklear/example/extended.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	file:
scroll_input	lib/nuklear/example/file_browser.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	file:
scroll_input	lib/nuklear/example/skinning.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	file:
scroll_pointer	lib/nuklear/nuklear.h	/^    nk_uint *scroll_pointer;$/;"	m	struct:nk_list_view
scroll_pointer	lib/nuklear/src/nuklear.h	/^    nk_uint *scroll_pointer;$/;"	m	struct:nk_list_view
scroll_value	lib/nuklear/nuklear.h	/^    nk_uint scroll_value;$/;"	m	struct:nk_list_view
scroll_value	lib/nuklear/src/nuklear.h	/^    nk_uint scroll_value;$/;"	m	struct:nk_list_view
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_edit_state	typeref:struct:nk_edit_state::nk_scroll
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_scroll
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_style_scrollbar scrollbar;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_scrollbar
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_vec2 scrollbar;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_vec2
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_edit_state	typeref:struct:nk_edit_state::nk_scroll
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_scroll
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_style_scrollbar scrollbar;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_style_scrollbar
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scrollbar;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_vec2
scrollbar_dec_button	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_dec_button;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
scrollbar_dec_button_hover	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_dec_button_hover;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
scrollbar_hiding_timer	lib/nuklear/nuklear.h	/^    float scrollbar_hiding_timer;$/;"	m	struct:nk_window
scrollbar_hiding_timer	lib/nuklear/src/nuklear.h	/^    float scrollbar_hiding_timer;$/;"	m	struct:nk_window
scrollbar_inc_button	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_inc_button;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
scrollbar_inc_button_hover	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_inc_button_hover;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
scrollbar_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_vec2
scrollbar_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
scrollbar_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_vec2
scrollbar_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
scrolled	lib/nuklear/nuklear.h	/^    unsigned int scrolled;$/;"	m	struct:nk_window
scrolled	lib/nuklear/src/nuklear.h	/^    unsigned int scrolled;$/;"	m	struct:nk_window
scrollh	lib/nuklear/nuklear.h	/^    struct nk_style_scrollbar scrollh;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_scrollbar
scrollh	lib/nuklear/src/nuklear.h	/^    struct nk_style_scrollbar scrollh;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_scrollbar
scrolling	lib/nuklear/demo/node_editor.c	/^    struct nk_vec2 scrolling;$/;"	m	struct:node_editor	typeref:struct:node_editor::nk_vec2	file:
scrollv	lib/nuklear/nuklear.h	/^    struct nk_style_scrollbar scrollv;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_scrollbar
scrollv	lib/nuklear/src/nuklear.h	/^    struct nk_style_scrollbar scrollv;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_scrollbar
sdl	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^} sdl;$/;"	v	typeref:struct:nk_sdl
sdl	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^} sdl;$/;"	v	typeref:struct:nk_sdl
sdl	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^} sdl;$/;"	v	typeref:struct:nk_sdl
seek_offset	lib/klib/knetfile.h	/^	int64_t seek_offset; \/\/ for lazy seek$/;"	m	struct:knetFile_s
sel_end	lib/nuklear/nuklear.h	/^    int sel_end;$/;"	m	struct:nk_edit_state
sel_end	lib/nuklear/src/nuklear.h	/^    int sel_end;$/;"	m	struct:nk_edit_state
sel_start	lib/nuklear/nuklear.h	/^    int sel_start;$/;"	m	struct:nk_edit_state
sel_start	lib/nuklear/src/nuklear.h	/^    int sel_start;$/;"	m	struct:nk_edit_state
select_end	lib/cimgui/imgui/imstb_textedit.h	/^   int select_end;$/;"	m	struct:__anon109
select_end	lib/nuklear/nuklear.h	/^    int select_end;$/;"	m	struct:nk_property_state
select_end	lib/nuklear/nuklear.h	/^    int select_end;$/;"	m	struct:nk_text_edit
select_end	lib/nuklear/src/nuklear.h	/^    int select_end;$/;"	m	struct:nk_property_state
select_end	lib/nuklear/src/nuklear.h	/^    int select_end;$/;"	m	struct:nk_text_edit
select_start	lib/cimgui/imgui/imstb_textedit.h	/^   int select_start;          \/\/ selection start point$/;"	m	struct:__anon109
select_start	lib/nuklear/nuklear.h	/^    int select_start;$/;"	m	struct:nk_property_state
select_start	lib/nuklear/nuklear.h	/^    int select_start;$/;"	m	struct:nk_text_edit
select_start	lib/nuklear/src/nuklear.h	/^    int select_start;$/;"	m	struct:nk_property_state
select_start	lib/nuklear/src/nuklear.h	/^    int select_start;$/;"	m	struct:nk_text_edit
selectable	lib/nuklear/nuklear.h	/^    struct nk_style_selectable selectable;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_selectable
selectable	lib/nuklear/src/nuklear.h	/^    struct nk_style_selectable selectable;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_selectable
selected	lib/nuklear/demo/node_editor.c	/^    struct node *selected;$/;"	m	struct:node_editor	typeref:struct:node_editor::node	file:
selected_color	lib/nuklear/nuklear.h	/^    struct nk_color selected_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
selected_color	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_chart::nk_color
selected_hover	lib/nuklear/nuklear.h	/^    struct nk_color selected_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_normal	lib/nuklear/nuklear.h	/^    struct nk_color selected_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_text_hover	lib/nuklear/nuklear.h	/^    struct nk_color selected_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_text_normal	lib/nuklear/nuklear.h	/^    struct nk_color selected_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
selected_text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
sep	lib/klib/kstring.h	/^	int sep, finished;$/;"	m	struct:__anon19
seq	lib/klib/khmm.h	/^	char *seq;$/;"	m	struct:__anon21
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_context
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_edit_state
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_property_state
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_table
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_window
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_context
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_edit_state
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_property_state
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_table
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_window
serializeTable	lib/cimgui/generator/cpp2ffi.lua	/^local function serializeTable(name, value, saved)$/;"	f
serializeTable	lib/cimgui/generator/generator_old.lua	/^local function serializeTable(name, value, saved)$/;"	f
set	lib/nuklear/demo/x11/nuklear_xlib.h	/^    XFontSet set;$/;"	m	struct:XFont
set	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    XFontSet set;$/;"	m	struct:XFont
set_defines	lib/cimgui/generator/generator.lua	/^local function set_defines(fdefs)$/;"	f
set_defines	lib/cimgui/generator/generator_old.lua	/^local function set_defines(fdefs)$/;"	f
set_style	lib/nuklear/demo/style.c	/^set_style(struct nk_context *ctx, enum theme theme)$/;"	f	file:
set_swap_chain_size	lib/nuklear/demo/d3d11/main.c	/^set_swap_chain_size(int width, int height)$/;"	f	file:
sfml	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^} sfml;$/;"	v	typeref:struct:nk_sfml
sfml	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^} sfml;$/;"	v	typeref:struct:nk_sfml
sha1_add	lib/klib/kurl.c	/^static inline void sha1_add(sha1nfo *s, uint8_t data)$/;"	f	file:
sha1_final	lib/klib/kurl.c	/^const uint8_t *sha1_final(sha1nfo *s)$/;"	f
sha1_final_hmac	lib/klib/kurl.c	/^const uint8_t *sha1_final_hmac(sha1nfo *s)$/;"	f
sha1_hashBlock	lib/klib/kurl.c	/^static void sha1_hashBlock(sha1nfo *s)$/;"	f	file:
sha1_init	lib/klib/kurl.c	/^void sha1_init(sha1nfo *s)$/;"	f
sha1_init_hmac	lib/klib/kurl.c	/^void sha1_init_hmac(sha1nfo *s, const uint8_t* key, int l_key)$/;"	f
sha1_write	lib/klib/kurl.c	/^void sha1_write(sha1nfo *s, const char *data, size_t len)$/;"	f
sha1_write1	lib/klib/kurl.c	/^void sha1_write1(sha1nfo *s, uint8_t data)$/;"	f
sha1nfo	lib/klib/kurl.c	/^typedef struct sha1nfo {$/;"	s	file:
sha1nfo	lib/klib/kurl.c	/^} sha1nfo;$/;"	t	typeref:struct:sha1nfo	file:
shader	src/scene.c	/^shader_p shader;$/;"	v
shader_ctor	src/shader.c	/^shader_ctor(char* shader_name) {$/;"	f
shader_dtor	src/shader.c	/^shader_dtor(shader_p shader) {$/;"	f
shader_p	src/shader.h	/^typedef shader_t* shader_p;$/;"	t
shader_start	src/shader.c	/^shader_start(shader_p shader) {$/;"	f
shader_stop	src/shader.c	/^shader_stop(shader_p shader) {$/;"	f
shader_t	src/shader.h	/^} shader_t;$/;"	t	typeref:struct:__anon2
shape_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing shape_AA; \/* shape anti-aliasing flag can be turned off if you are tight on memory *\/$/;"	m	struct:nk_convert_config	typeref:enum:nk_convert_config::nk_anti_aliasing
shape_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing shape_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_draw_list::nk_anti_aliasing
shape_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing shape_AA; \/* shape anti-aliasing flag can be turned off if you are tight on memory *\/$/;"	m	struct:nk_convert_config	typeref:enum:nk_convert_config::nk_anti_aliasing
shape_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing shape_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_draw_list::nk_anti_aliasing
shared	lib/klib/kthread.c	/^	void *shared;$/;"	m	struct:ktp_t	file:
shift	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
show_another_window	lib/cimgui/imgui/examples/example_glut_opengl2/main.cpp	/^static bool show_another_window = false;$/;"	v	file:
show_buttons	lib/nuklear/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_scrollbar
show_buttons	lib/nuklear/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_slider
show_buttons	lib/nuklear/src/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_scrollbar
show_buttons	lib/nuklear/src/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_slider
show_demo_window	lib/cimgui/imgui/examples/example_glut_opengl2/main.cpp	/^static bool show_demo_window = true;$/;"	v	file:
show_grid	lib/nuklear/demo/node_editor.c	/^    int show_grid;$/;"	m	struct:node_editor	file:
shrink	lib/cimgui/imgui/imgui.h	/^    inline void         shrink(int new_size)                { IM_ASSERT(new_size <= Size); Size = new_size; } \/\/ Resize a vector to a smaller size, guaranteed not to cause a reallocation$/;"	f	struct:ImVector
shuffle	lib/klib/test/kavl_test.c	/^void shuffle(int n, char a[])$/;"	f
shuffle	lib/klib/test/krmq_test.c	/^void shuffle(int n, char a[])$/;"	f
siftDown	lib/klib/test/ksort_test.cc	/^static void siftDown (int numbers[], int top, int last) {$/;"	f	file:
siftDown0	lib/klib/test/ksort_test.cc	/^static void siftDown0 (int numbers[], int last) {$/;"	f	file:
single_line	lib/cimgui/imgui/imstb_textedit.h	/^   unsigned char single_line;$/;"	m	struct:__anon109
single_line	lib/nuklear/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_edit_state
single_line	lib/nuklear/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_text_edit
single_line	lib/nuklear/src/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_edit_state
single_line	lib/nuklear/src/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_text_edit
size	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned int size;$/;"	m	struct:GLFWgammaramp
size	lib/cimgui/imgui/imgui.h	/^    inline int          size() const                        { return Size; }$/;"	f	struct:ImVector
size	lib/cimgui/imgui/imgui.h	/^    int                 size() const            { return Buf.Size ? Buf.Size - 1 : 0; }$/;"	f	struct:ImGuiTextBuffer
size	lib/cimgui/imgui/imgui_internal.h	/^    int     size() const                { return Buf.Size; }$/;"	f	struct:ImChunkStream
size	lib/cimgui/imgui/imstb_truetype.h	/^   int size;$/;"	m	struct:__anon113
size	lib/klib/bgzf.c	/^	int size;$/;"	m	struct:__anon40	file:
size	lib/klib/cpp/kavl.hpp	/^		unsigned size;$/;"	m	struct:klib::Avl::Node
size	lib/klib/cpp/kavl.hpp	/^	unsigned size() const { return root? root->size : 0; }$/;"	f	class:klib::Avl
size	lib/klib/cpp/khash.hpp	/^	khint_t size(void) const { return count; };$/;"	f	class:klib::KHash
size	lib/klib/cpp/khashl.hpp	/^	inline khint_t size() const { return count; }$/;"	f	class:klib::KHashSet
size	lib/klib/kalloc.c	/^	size_t size;$/;"	m	struct:header_t	file:
size	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
size	lib/nuklear/example/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anon148
size	lib/nuklear/example/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anon152
size	lib/nuklear/example/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon157
size	lib/nuklear/nuklear.h	/^    float size;$/;"	m	struct:nk_font_config
size	lib/nuklear/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_buffer
size	lib/nuklear/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_memory_status
size	lib/nuklear/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_pool
size	lib/nuklear/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_page
size	lib/nuklear/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_table
size	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::nk_vec2
size	lib/nuklear/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory
size	lib/nuklear/src/nuklear.h	/^    float size;$/;"	m	struct:nk_font_config
size	lib/nuklear/src/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_buffer
size	lib/nuklear/src/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_memory_status
size	lib/nuklear/src/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_pool
size	lib/nuklear/src/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_page
size	lib/nuklear/src/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_table
size	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_cursor::nk_vec2
size	lib/nuklear/src/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory
size_cmd	lib/klib/knetfile.h	/^	char *response, *retr, *size_cmd;$/;"	m	struct:knetFile_s
size_in_bytes	lib/cimgui/imgui/imgui.h	/^    inline int          size_in_bytes() const               { return Size * (int)sizeof(T); }$/;"	f	struct:ImVector
sizeof	lib/nuklear/nuklear.h	/^NK_STATIC_ASSERT(sizeof(nk_ptr) == sizeof(void*));$/;"	v
sizeof	lib/nuklear/src/nuklear_internal.h	/^NK_STATIC_ASSERT(sizeof(nk_ptr) == sizeof(void*));$/;"	v
skin	lib/nuklear/example/skinning.c	/^    GLint skin;$/;"	m	struct:media	file:
skip	lib/nuklear/example/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget' the last -n bytes if negative$/;"	m	struct:__anon145
skip_missing	lib/cimgui/imgui/imstb_truetype.h	/^   int   skip_missing;$/;"	m	struct:stbtt_pack_context
sleep_for	lib/nuklear/demo/x11/main.c	/^sleep_for(long t)$/;"	f	file:
sleep_for	lib/nuklear/demo/x11_rawfb/main.c	/^sleep_for(long t)$/;"	f	file:
sleep_for	lib/nuklear/demo/x11_xft/main.c	/^sleep_for(long t)$/;"	f	file:
slen	lib/klib/ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	file:
slider	lib/nuklear/example/skinning.c	/^    struct nk_image slider;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
slider	lib/nuklear/nuklear.h	/^    struct nk_style_slider slider;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_slider
slider	lib/nuklear/src/nuklear.h	/^    struct nk_style_slider slider;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_slider
slider_active	lib/nuklear/example/skinning.c	/^    struct nk_image slider_active;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
slider_hover	lib/nuklear/example/skinning.c	/^    struct nk_image slider_hover;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
slot	lib/nuklear/nuklear.h	/^    int slot;$/;"	m	struct:nk_chart
slot	lib/nuklear/src/nuklear.h	/^    int slot;$/;"	m	struct:nk_chart
slots	lib/nuklear/nuklear.h	/^    struct nk_chart_slot slots[NK_CHART_MAX_SLOT];$/;"	m	struct:nk_chart	typeref:struct:nk_chart::nk_chart_slot
slots	lib/nuklear/src/nuklear.h	/^    struct nk_chart_slot slots[NK_CHART_MAX_SLOT];$/;"	m	struct:nk_chart	typeref:struct:nk_chart::nk_chart_slot
snprintf	lib/cimgui/cimgui.h	14;"	d
snprintf	lib/cimgui/generator/cimgui_template.h	12;"	d
snprintf	lib/cimgui/generator/output/cimgui.h	14;"	d
snprintf	lib/cimgui/imgui/imgui_demo.cpp	117;"	d	file:
socket_connect	lib/klib/knetfile.c	/^static SOCKET socket_connect(const char *host, const char *port)$/;"	f	file:
socket_connect	lib/klib/knetfile.c	/^static int socket_connect(const char *host, const char *port)$/;"	f	file:
socket_connect	lib/klib/kopen.c	/^static int socket_connect(const char *host, const char *port)$/;"	f	file:
socket_wait	lib/klib/knetfile.c	/^static int socket_wait(int fd, int is_read)$/;"	f	file:
socket_wait	lib/klib/kopen.c	/^static int socket_wait(int fd, int is_read)$/;"	f	file:
sort2	lib/klib/test/ksort_test.cc	/^static inline void sort2 (int * numbers) {$/;"	f	file:
sort3	lib/klib/test/ksort_test.cc	/^static inline void sort3 (int * numbers) {$/;"	f	file:
sort4	lib/klib/test/ksort_test.cc	/^static inline void sort4 (int * num) {$/;"	f	file:
sortAlt2	lib/klib/test/ksort_test.cc	/^static inline void sortAlt2 (int * numbers, int * altNumbers) {$/;"	f	file:
sortAlt3	lib/klib/test/ksort_test.cc	/^static inline void sortAlt3 (int * numbers, int * altNumbers) {$/;"	f	file:
sorter	lib/cimgui/generator/cpp2ffi.lua	/^            local function sorter(a,b)$/;"	f
sorter	lib/cimgui/generator/generator_old.lua	/^            local function sorter(a,b)$/;"	f
spacing	lib/nuklear/nuklear.h	/^    float spacing;$/;"	m	struct:nk_style_toggle
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    float spacing;$/;"	m	struct:nk_style_toggle
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config::nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_slider::nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_window_header::nk_vec2
spc	lib/nuklear/nuklear.h	/^    struct nk_tt_pack_context spc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_pack_context
spc	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_pack_context spc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_baker::nk_tt_pack_context	file:
spec_end	lib/nuklear/example/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anon149
spec_start	lib/nuklear/example/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anon149
split	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextFilter::ImGuiTextRange::split(char separator, ImVector<ImGuiTextRange>* out) const$/;"	f	class:ImGuiTextFilter::ImGuiTextRange
split_comment	lib/cimgui/generator/cpp2ffi.lua	/^local function split_comment(line)$/;"	f
split_comment	lib/cimgui/generator/generator_old.lua	/^local function split_comment(line)$/;"	f
sse2_bit_count32	lib/klib/test/kbit_test.c	/^static uint32_t sse2_bit_count32(const __m128i* block, const __m128i* block_end)$/;"	f	file:
stack	lib/klib/kbtree.h	/^	kbpos_t stack[KB_MAX_DEPTH], *p;$/;"	m	struct:__anon6
stacks	lib/nuklear/nuklear.h	/^    struct nk_configuration_stacks stacks;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_configuration_stacks
stacks	lib/nuklear/src/nuklear.h	/^    struct nk_configuration_stacks stacks;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_configuration_stacks
start_x	lib/nuklear/example/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon159
start_y	lib/nuklear/example/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anon159
started	lib/cimgui/imgui/imstb_truetype.h	/^   int started;$/;"	m	struct:__anon127
state	lib/klib/kurl.c	/^	union { uint8_t b[HASH_LENGTH]; uint32_t w[HASH_LENGTH\/4]; } state;$/;"	m	struct:sha1nfo	typeref:union:sha1nfo::__anon27	file:
state	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    IDirect3DStateBlock9 *state;$/;"	m	struct:__anon173
state	lib/nuklear/nuklear.h	/^    int state;$/;"	m	struct:nk_property_state
state	lib/nuklear/src/nuklear.h	/^    int state;$/;"	m	struct:nk_property_state
status	lib/klib/khmm.h	/^	unsigned status;$/;"	m	struct:__anon21
stb__barrier_in_b	lib/cimgui/imgui/imgui_draw.cpp	/^static const unsigned char *stb__barrier_in_b;$/;"	v	file:
stb__barrier_out_b	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;$/;"	v	file:
stb__barrier_out_e	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;$/;"	v	file:
stb__dout	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned char *stb__dout;$/;"	v	file:
stb__hashsize	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static  stb_uint stb__hashsize = 32768;$/;"	v	file:
stb__hc	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	230;"	d	file:
stb__hc2	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	231;"	d	file:
stb__hc3	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	232;"	d	file:
stb__in2	lib/cimgui/imgui/imgui_draw.cpp	3284;"	d	file:
stb__in3	lib/cimgui/imgui/imgui_draw.cpp	3285;"	d	file:
stb__in4	lib/cimgui/imgui/imgui_draw.cpp	3286;"	d	file:
stb__lit	lib/cimgui/imgui/imgui_draw.cpp	/^static void stb__lit(const unsigned char *data, unsigned int length)$/;"	f	file:
stb__match	lib/cimgui/imgui/imgui_draw.cpp	/^static void stb__match(const unsigned char *data, unsigned int length)$/;"	f	file:
stb__nc	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	266;"	d	file:
stb__out	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static stb_uchar *stb__out;$/;"	v	file:
stb__outbytes	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static stb_uint   stb__outbytes;$/;"	v	file:
stb__outfile	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static FILE      *stb__outfile;$/;"	v	file:
stb__running_adler	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static unsigned int stb__running_adler;$/;"	v	file:
stb__window	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb__window = 0x40000; \/\/ 256K$/;"	v	file:
stb__write	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb__write(unsigned char v)$/;"	f	file:
stb_adler32	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f	file:
stb_adler32	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static stb_uint stb_adler32(stb_uint adler32, stb_uchar *buffer, stb_uint buflen)$/;"	f	file:
stb_compress	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^stb_uint stb_compress(stb_uchar *out, stb_uchar *input, stb_uint length)$/;"	f
stb_compress_chunk	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb_compress_chunk(stb_uchar *history,$/;"	f	file:
stb_compress_inner	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb_compress_inner(stb_uchar *input, stb_uint length)$/;"	f	file:
stb_decompress	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int stb_decompress(unsigned char *output, const unsigned char *i, unsigned int \/*length*\/)$/;"	f	file:
stb_decompress_length	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int stb_decompress_length(const unsigned char *input)$/;"	f	file:
stb_decompress_token	lib/cimgui/imgui/imgui_draw.cpp	/^static const unsigned char *stb_decompress_token(const unsigned char *i)$/;"	f	file:
stb_matchlen	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static unsigned int stb_matchlen(stb_uchar *m1, stb_uchar *m2, stb_uint maxlen)$/;"	f	file:
stb_not_crap	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb_not_crap(int best, int dist)$/;"	f	file:
stb_out	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	191;"	d	file:
stb_out2	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb_out2(stb_uint v) { stb_out(v >> 8); stb_out(v); }$/;"	f	file:
stb_out3	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb_out3(stb_uint v) { stb_out(v >> 16); stb_out(v >> 8); stb_out(v); }$/;"	f	file:
stb_out4	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb_out4(stb_uint v) { stb_out(v >> 24); stb_out(v >> 16); stb_out(v >> 8 ); stb_out(v); }$/;"	f	file:
stb_text_create_undo_record	lib/cimgui/imgui/imstb_textedit.h	/^static StbUndoRecord *stb_text_create_undo_record(StbUndoState *state, int numchars)$/;"	f
stb_text_createundo	lib/cimgui/imgui/imstb_textedit.h	/^static STB_TEXTEDIT_CHARTYPE *stb_text_createundo(StbUndoState *state, int pos, int insert_len, int delete_len)$/;"	f
stb_text_locate_coord	lib/cimgui/imgui/imstb_textedit.h	/^static int stb_text_locate_coord(STB_TEXTEDIT_STRING *str, float x, float y)$/;"	f
stb_text_makeundo_delete	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_text_makeundo_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, int length)$/;"	f
stb_text_makeundo_insert	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_text_makeundo_insert(STB_TexteditState *state, int where, int length)$/;"	f
stb_text_makeundo_replace	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_text_makeundo_replace(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, int old_length, int new_length)$/;"	f
stb_text_redo	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_text_redo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_text_undo	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_text_undo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_clamp	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_clamp(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_clear_state	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_clear_state(STB_TexteditState *state, int is_single_line)$/;"	f
stb_textedit_click	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_click(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, float y)$/;"	f
stb_textedit_cut	lib/cimgui/imgui/imstb_textedit.h	/^static int stb_textedit_cut(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_delete	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, int len)$/;"	f
stb_textedit_delete_selection	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_delete_selection(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_discard_redo	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_discard_redo(StbUndoState *state)$/;"	f
stb_textedit_discard_undo	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_discard_undo(StbUndoState *state)$/;"	f
stb_textedit_drag	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_drag(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, float y)$/;"	f
stb_textedit_find_charpos	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_find_charpos(StbFindState *find, STB_TEXTEDIT_STRING *str, int n, int single_line)$/;"	f
stb_textedit_flush_redo	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_flush_redo(StbUndoState *state)$/;"	f
stb_textedit_initialize_state	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_initialize_state(STB_TexteditState *state, int is_single_line)$/;"	f
stb_textedit_key	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_key(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_KEYTYPE key)$/;"	f
stb_textedit_move_to_first	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_move_to_first(STB_TexteditState *state)$/;"	f
stb_textedit_move_to_last	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_move_to_last(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f
stb_textedit_move_to_word_next	lib/cimgui/imgui/imstb_textedit.h	/^static int stb_textedit_move_to_word_next( STB_TEXTEDIT_STRING *str, int c )$/;"	f
stb_textedit_move_to_word_previous	lib/cimgui/imgui/imstb_textedit.h	/^static int stb_textedit_move_to_word_previous( STB_TEXTEDIT_STRING *str, int c )$/;"	f
stb_textedit_paste	lib/cimgui/imgui/imstb_textedit.h	/^static int stb_textedit_paste(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_CHARTYPE const *ctext, int len)$/;"	f
stb_textedit_paste_internal	lib/cimgui/imgui/imstb_textedit.h	/^static int stb_textedit_paste_internal(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_CHARTYPE *text, int len)$/;"	f
stb_textedit_prep_selection_at_cursor	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_prep_selection_at_cursor(STB_TexteditState *state)$/;"	f
stb_textedit_replace	lib/cimgui/imgui/imgui_widgets.cpp	/^static void stb_textedit_replace(STB_TEXTEDIT_STRING* str, STB_TexteditState* state, const STB_TEXTEDIT_CHARTYPE* text, int text_len)$/;"	f	namespace:ImStb
stb_textedit_sortselection	lib/cimgui/imgui/imstb_textedit.h	/^static void stb_textedit_sortselection(STB_TexteditState *state)$/;"	f
stb_uchar	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^typedef unsigned char stb_uchar;$/;"	t	file:
stb_uint	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^typedef unsigned int stb_uint;$/;"	t	file:
stbi__DNL	lib/nuklear/example/stb_image.h	2787;"	d
stbi__EOI	lib/nuklear/example/stb_image.h	2789;"	d
stbi__SOF	lib/nuklear/example/stb_image.h	2790;"	d
stbi__SOF_progressive	lib/nuklear/example/stb_image.h	2793;"	d
stbi__SOI	lib/nuklear/example/stb_image.h	2788;"	d
stbi__SOS	lib/nuklear/example/stb_image.h	2791;"	d
stbi__YCbCr_to_RGB_row	lib/nuklear/example/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc *pcr, int count, int step)$/;"	f
stbi__YCbCr_to_RGB_simd	lib/nuklear/example/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc const *pcr, int count, int step)$/;"	f
stbi__at_eof	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f
stbi__bit_reverse	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f
stbi__bitcount	lib/nuklear/example/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f
stbi__bitreverse16	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f
stbi__bmask	lib/nuklear/example/stb_image.h	/^static stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535};$/;"	v
stbi__bmp_info	lib/nuklear/example/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__bmp_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__bmp_test	lib/nuklear/example/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f
stbi__bmp_test_raw	lib/nuklear/example/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f
stbi__build_fast_ac	lib/nuklear/example/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f
stbi__build_huffman	lib/nuklear/example/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f
stbi__check_png_header	lib/nuklear/example/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f
stbi__clamp	lib/nuklear/example/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f
stbi__cleanup_jpeg	lib/nuklear/example/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f
stbi__compute_huffman_codes	lib/nuklear/example/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f
stbi__compute_transparency	lib/nuklear/example/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f
stbi__compute_y	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f
stbi__context	lib/nuklear/example/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anon146
stbi__convert_format	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigned int x, unsigned int y)$/;"	f
stbi__copyval	lib/nuklear/example/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f
stbi__cpuid3	lib/nuklear/example/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f
stbi__create_png_image	lib/nuklear/example/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len, int out_n, int depth, int color, int interlaced)$/;"	f
stbi__create_png_image_raw	lib/nuklear/example/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_n, stbi__uint32 x, stbi__uint32 y, int depth, int color)$/;"	f
stbi__de_iphone	lib/nuklear/example/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f
stbi__de_iphone_flag	lib/nuklear/example/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v
stbi__decode_jpeg_header	lib/nuklear/example/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f
stbi__decode_jpeg_image	lib/nuklear/example/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f
stbi__depth_scale_table	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v
stbi__div16	lib/nuklear/example/stb_image.h	2909;"	d
stbi__div4	lib/nuklear/example/stb_image.h	2860;"	d
stbi__do_png	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp)$/;"	f
stbi__do_zlib	lib/nuklear/example/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f
stbi__err	lib/nuklear/example/stb_image.h	/^static int stbi__err(const char *str)$/;"	f
stbi__err	lib/nuklear/example/stb_image.h	910;"	d
stbi__err	lib/nuklear/example/stb_image.h	912;"	d
stbi__err	lib/nuklear/example/stb_image.h	914;"	d
stbi__errpf	lib/nuklear/example/stb_image.h	917;"	d
stbi__errpuc	lib/nuklear/example/stb_image.h	918;"	d
stbi__expand_png_palette	lib/nuklear/example/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f
stbi__extend_receive	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f
stbi__f2f	lib/nuklear/example/stb_image.h	1928;"	d
stbi__fill_bits	lib/nuklear/example/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f
stbi__fill_gif_background	lib/nuklear/example/stb_image.h	/^static void stbi__fill_gif_background(stbi__gif *g, int x0, int y0, int x1, int y1)$/;"	f
stbi__float2int	lib/nuklear/example/stb_image.h	1406;"	d
stbi__float_postprocess	lib/nuklear/example/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__fopen	lib/nuklear/example/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f
stbi__fsh	lib/nuklear/example/stb_image.h	1929;"	d
stbi__g_failure_reason	lib/nuklear/example/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v
stbi__get16be	lib/nuklear/example/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f
stbi__get16le	lib/nuklear/example/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f
stbi__get32be	lib/nuklear/example/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f
stbi__get32le	lib/nuklear/example/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f
stbi__get8	lib/nuklear/example/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f
stbi__get_chunk_header	lib/nuklear/example/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f
stbi__get_marker	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f
stbi__getn	lib/nuklear/example/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f
stbi__gif	lib/nuklear/example/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anon159
stbi__gif_header	lib/nuklear/example/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f
stbi__gif_info	lib/nuklear/example/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_info_raw	lib/nuklear/example/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__gif_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__gif_load_next	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp)$/;"	f
stbi__gif_lzw	lib/nuklear/example/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anon158
stbi__gif_parse_colortable	lib/nuklear/example/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, int transp)$/;"	f
stbi__gif_test	lib/nuklear/example/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f
stbi__gif_test_raw	lib/nuklear/example/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f
stbi__grow_buffer_unsafe	lib/nuklear/example/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f
stbi__h2l_gamma_i	lib/nuklear/example/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__h2l_scale_i	lib/nuklear/example/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v
stbi__hdr_convert	lib/nuklear/example/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f
stbi__hdr_gettoken	lib/nuklear/example/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f
stbi__hdr_info	lib/nuklear/example/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__hdr_load	lib/nuklear/example/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__hdr_test	lib/nuklear/example/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f
stbi__hdr_test_core	lib/nuklear/example/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s)$/;"	f
stbi__hdr_to_ldr	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f
stbi__high_bit	lib/nuklear/example/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f
stbi__huffman	lib/nuklear/example/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anon148
stbi__idct_block	lib/nuklear/example/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__idct_simd	lib/nuklear/example/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f
stbi__info_main	lib/nuklear/example/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__init_zdefaults	lib/nuklear/example/stb_image.h	/^static void stbi__init_zdefaults(void)$/;"	f
stbi__int16	lib/nuklear/example/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t
stbi__int16	lib/nuklear/example/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t
stbi__int32	lib/nuklear/example/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t
stbi__int32	lib/nuklear/example/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t
stbi__jbias	lib/nuklear/example/stb_image.h	/^static int const stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-8191,-16383,-32767};$/;"	v
stbi__jpeg	lib/nuklear/example/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anon149
stbi__jpeg_decode_block	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huffman *hac, stbi__int16 *fac, int b, stbi_uc *dequant)$/;"	f
stbi__jpeg_decode_block_prog_ac	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, stbi__int16 *fac)$/;"	f
stbi__jpeg_decode_block_prog_dc	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, int b)$/;"	f
stbi__jpeg_dequantize	lib/nuklear/example/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi_uc *dequant)$/;"	f
stbi__jpeg_dezigzag	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v
stbi__jpeg_finish	lib/nuklear/example/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f
stbi__jpeg_get_bit	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f
stbi__jpeg_get_bits	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f
stbi__jpeg_huff_decode	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f
stbi__jpeg_info	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_info_raw	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f
stbi__jpeg_load	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__jpeg_reset	lib/nuklear/example/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f
stbi__jpeg_test	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f
stbi__l2h_gamma	lib/nuklear/example/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__l2h_scale	lib/nuklear/example/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v
stbi__ldr_to_hdr	lib/nuklear/example/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f
stbi__load_flip	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__load_flip(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__load_main	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__loadf_main	lib/nuklear/example/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__malloc	lib/nuklear/example/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f
stbi__out_gif_code	lib/nuklear/example/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f
stbi__paeth	lib/nuklear/example/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f
stbi__parse_entropy_coded_data	lib/nuklear/example/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f
stbi__parse_huffman_block	lib/nuklear/example/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f
stbi__parse_png_file	lib/nuklear/example/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f
stbi__parse_uncomperssed_block	lib/nuklear/example/stb_image.h	/^static int stbi__parse_uncomperssed_block(stbi__zbuf *a)$/;"	f
stbi__parse_zlib	lib/nuklear/example/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f
stbi__parse_zlib_header	lib/nuklear/example/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f
stbi__pic_info	lib/nuklear/example/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pic_is4	lib/nuklear/example/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f
stbi__pic_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp)$/;"	f
stbi__pic_load_core	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *result)$/;"	f
stbi__pic_packet	lib/nuklear/example/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anon157
stbi__pic_test	lib/nuklear/example/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f
stbi__pic_test_core	lib/nuklear/example/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f
stbi__png	lib/nuklear/example/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anon155
stbi__png_info	lib/nuklear/example/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__png_info_raw	lib/nuklear/example/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f
stbi__png_load	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__png_test	lib/nuklear/example/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f
stbi__pngchunk	lib/nuklear/example/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anon154
stbi__pnm_getinteger	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f
stbi__pnm_info	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__pnm_isdigit	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f
stbi__pnm_isspace	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f
stbi__pnm_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__pnm_skip_whitespace	lib/nuklear/example/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f
stbi__pnm_test	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f
stbi__process_frame_header	lib/nuklear/example/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f
stbi__process_gif_raster	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f
stbi__process_marker	lib/nuklear/example/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f
stbi__process_scan_header	lib/nuklear/example/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f
stbi__psd_info	lib/nuklear/example/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__psd_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__psd_test	lib/nuklear/example/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f
stbi__readval	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f
stbi__refill_buffer	lib/nuklear/example/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f
stbi__resample	lib/nuklear/example/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anon151
stbi__resample_row_generic	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_h_2	lib/nuklear/example/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_hv_2_simd	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__resample_row_v_2	lib/nuklear/example/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f
stbi__rewind	lib/nuklear/example/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f
stbi__setup_jpeg	lib/nuklear/example/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f
stbi__shiftsigned	lib/nuklear/example/stb_image.h	/^static int stbi__shiftsigned(int v, int shift, int bits)$/;"	f
stbi__skip	lib/nuklear/example/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f
stbi__sse2_available	lib/nuklear/example/stb_image.h	/^static int stbi__sse2_available()$/;"	f
stbi__start_callbacks	lib/nuklear/example/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f
stbi__start_file	lib/nuklear/example/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f
stbi__start_mem	lib/nuklear/example/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f
stbi__stdio_callbacks	lib/nuklear/example/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v
stbi__stdio_eof	lib/nuklear/example/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f
stbi__stdio_read	lib/nuklear/example/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f
stbi__stdio_skip	lib/nuklear/example/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f
stbi__tga_info	lib/nuklear/example/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f
stbi__tga_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi__tga_test	lib/nuklear/example/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f
stbi__uint16	lib/nuklear/example/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t
stbi__uint16	lib/nuklear/example/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t
stbi__uint32	lib/nuklear/example/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t
stbi__uint32	lib/nuklear/example/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t
stbi__unpremultiply_on_load	lib/nuklear/example/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v
stbi__vertically_flip_on_load	lib/nuklear/example/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v
stbi__zbuf	lib/nuklear/example/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anon153
stbi__zbuild_huffman	lib/nuklear/example/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, stbi_uc *sizelist, int num)$/;"	f
stbi__zdefault_distance	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdefault_length	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v
stbi__zdist_base	lib/nuklear/example/stb_image.h	/^static int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v
stbi__zdist_extra	lib/nuklear/example/stb_image.h	/^static int stbi__zdist_extra[32] =$/;"	v
stbi__zexpand	lib/nuklear/example/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f
stbi__zget8	lib/nuklear/example/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f
stbi__zhuffman	lib/nuklear/example/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anon152
stbi__zhuffman_decode	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zhuffman_decode_slowpath	lib/nuklear/example/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f
stbi__zlength_base	lib/nuklear/example/stb_image.h	/^static int stbi__zlength_base[31] = {$/;"	v
stbi__zlength_extra	lib/nuklear/example/stb_image.h	/^static int stbi__zlength_extra[31]=$/;"	v
stbi__zreceive	lib/nuklear/example/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f
stbi_convert_iphone_png_to_rgb	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f
stbi_failure_reason	lib/nuklear/example/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f
stbi_hdr_to_ldr_gamma	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f
stbi_hdr_to_ldr_scale	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f
stbi_image_free	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f
stbi_info	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f
stbi_info_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int *comp)$/;"	f
stbi_info_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f
stbi_info_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f
stbi_inline	lib/nuklear/example/stb_image.h	592;"	d
stbi_inline	lib/nuklear/example/stb_image.h	594;"	d
stbi_inline	lib/nuklear/example/stb_image.h	597;"	d
stbi_io_callbacks	lib/nuklear/example/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anon145
stbi_is_hdr	lib/nuklear/example/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f
stbi_is_hdr_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f
stbi_is_hdr_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_file(FILE *f)$/;"	f
stbi_is_hdr_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f
stbi_ldr_to_hdr_gamma	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f
stbi_ldr_to_hdr_scale	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f
stbi_load	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_load_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_loadf_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp, int req_comp)$/;"	f
stbi_lrot	lib/nuklear/example/stb_image.h	628;"	d
stbi_lrot	lib/nuklear/example/stb_image.h	630;"	d
stbi_set_flip_vertically_on_load	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f
stbi_set_unpremultiply_on_load	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f
stbi_uc	lib/nuklear/example/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t
stbi_zlib_decode_buffer	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_malloc	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, int *outlen)$/;"	f
stbi_zlib_decode_malloc_guesssize_headerflag	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int initial_size, int *outlen, int parse_header)$/;"	f
stbi_zlib_decode_noheader_buffer	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int ilen)$/;"	f
stbi_zlib_decode_noheader_malloc	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f
stbrp__findresult	lib/cimgui/imgui/imstb_rectpack.h	/^} stbrp__findresult;$/;"	t	typeref:struct:__anon99
stbrp__skyline_find_best_pos	lib/cimgui/imgui/imstb_rectpack.h	/^static stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context *c, int width, int height)$/;"	f
stbrp__skyline_find_min_y	lib/cimgui/imgui/imstb_rectpack.h	/^static int stbrp__skyline_find_min_y(stbrp_context *c, stbrp_node *first, int x0, int width, int *pwaste)$/;"	f
stbrp__skyline_pack_rectangle	lib/cimgui/imgui/imstb_rectpack.h	/^static stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context *context, int width, int height)$/;"	f
stbrp_context	lib/cimgui/imgui/imstb_rectpack.h	/^struct stbrp_context$/;"	s
stbrp_context	lib/cimgui/imgui/imstb_rectpack.h	/^typedef struct stbrp_context stbrp_context;$/;"	t	typeref:struct:stbrp_context
stbrp_context	lib/cimgui/imgui/imstb_truetype.h	/^} stbrp_context;$/;"	t	typeref:struct:__anon129
stbrp_coord	lib/cimgui/imgui/imstb_rectpack.h	/^typedef int            stbrp_coord;$/;"	t
stbrp_coord	lib/cimgui/imgui/imstb_rectpack.h	/^typedef unsigned short stbrp_coord;$/;"	t
stbrp_coord	lib/cimgui/imgui/imstb_truetype.h	/^typedef int stbrp_coord;$/;"	t
stbrp_init_target	lib/cimgui/imgui/imstb_rectpack.h	/^STBRP_DEF void stbrp_init_target(stbrp_context *context, int width, int height, stbrp_node *nodes, int num_nodes)$/;"	f
stbrp_init_target	lib/cimgui/imgui/imstb_truetype.h	/^static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nodes)$/;"	f
stbrp_node	lib/cimgui/imgui/imstb_rectpack.h	/^struct stbrp_node$/;"	s
stbrp_node	lib/cimgui/imgui/imstb_rectpack.h	/^typedef struct stbrp_node    stbrp_node;$/;"	t	typeref:struct:stbrp_node
stbrp_node	lib/cimgui/imgui/imstb_truetype.h	/^} stbrp_node;$/;"	t	typeref:struct:__anon130
stbrp_pack_rects	lib/cimgui/imgui/imstb_rectpack.h	/^STBRP_DEF int stbrp_pack_rects(stbrp_context *context, stbrp_rect *rects, int num_rects)$/;"	f
stbrp_pack_rects	lib/cimgui/imgui/imstb_truetype.h	/^static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)$/;"	f
stbrp_rect	lib/cimgui/imgui/imstb_rectpack.h	/^struct stbrp_rect$/;"	s
stbrp_rect	lib/cimgui/imgui/imstb_rectpack.h	/^typedef struct stbrp_rect    stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_rect	lib/cimgui/imgui/imstb_truetype.h	/^struct stbrp_rect$/;"	s
stbrp_rect	lib/cimgui/imgui/imstb_truetype.h	/^typedef struct stbrp_rect stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_setup_allow_out_of_mem	lib/cimgui/imgui/imstb_rectpack.h	/^STBRP_DEF void stbrp_setup_allow_out_of_mem(stbrp_context *context, int allow_out_of_mem)$/;"	f
stbrp_setup_heuristic	lib/cimgui/imgui/imstb_rectpack.h	/^STBRP_DEF void stbrp_setup_heuristic(stbrp_context *context, int heuristic)$/;"	f
stbtt_BakeFontBitmap	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,$/;"	f
stbtt_BakeFontBitmap_internal	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  \/\/ font location (use offset=0 for plain .ttf)$/;"	f
stbtt_CompareUTF8toUTF16_bigendian	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int len2)$/;"	f
stbtt_CompareUTF8toUTF16_bigendian_internal	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2) $/;"	f
stbtt_FindGlyphIndex	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)$/;"	f
stbtt_FindMatchingFont	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)$/;"	f
stbtt_FindMatchingFont_internal	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbtt_int32 flags)$/;"	f
stbtt_FlattenCurves	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_flatness, int **contour_lengths, int *num_contours, void *userdata)$/;"	f
stbtt_FreeBitmap	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)$/;"	f
stbtt_FreeSDF	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_FreeSDF(unsigned char *bitmap, void *userdata)$/;"	f
stbtt_FreeShape	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)$/;"	f
stbtt_GetBakedQuad	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetBakedQuad(const stbtt_bakedchar *chardata, int pw, int ph, int char_index, float *xpos, float *ypos, stbtt_aligned_quad *q, int opengl_fillrule)$/;"	f
stbtt_GetCodepointBitmap	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, float scale_y, int codepoint, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetCodepointBitmapBox	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetCodepointBitmapBoxSubpixel	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, float scale_x, float scale_y, float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetCodepointBitmapSubpixel	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetCodepointBox	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt_GetCodepointHMetrics	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advanceWidth, int *leftSideBearing)$/;"	f
stbtt_GetCodepointKernAdvance	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)$/;"	f
stbtt_GetCodepointSDF	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetCodepointSDF(const stbtt_fontinfo *info, float scale, int codepoint, int padding, unsigned char onedge_value, float pixel_dist_scale, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetCodepointShape	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_vertex **vertices)$/;"	f
stbtt_GetFontBoundingBox	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt_GetFontNameString	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platformID, int encodingID, int languageID, int nameID)$/;"	f
stbtt_GetFontOffsetForIndex	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)$/;"	f
stbtt_GetFontOffsetForIndex_internal	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)$/;"	f
stbtt_GetFontVMetrics	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int *lineGap)$/;"	f
stbtt_GetFontVMetricsOS2	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int  stbtt_GetFontVMetricsOS2(const stbtt_fontinfo *info, int *typoAscent, int *typoDescent, int *typoLineGap)$/;"	f
stbtt_GetGlyphBitmap	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float scale_y, int glyph, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetGlyphBitmapBox	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, float scale_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetGlyphBitmapBoxSubpixel	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scale_x, float scale_y,float shift_x, float shift_y, int *ix0, int *iy0, int *ix1, int *iy1)$/;"	f
stbtt_GetGlyphBitmapSubpixel	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x, float scale_y, float shift_x, float shift_y, int glyph, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetGlyphBox	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt_GetGlyphHMetrics	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceWidth, int *leftSideBearing)$/;"	f
stbtt_GetGlyphKernAdvance	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)$/;"	f
stbtt_GetGlyphSDF	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetGlyphSDF(const stbtt_fontinfo *info, float scale, int glyph, int padding, unsigned char onedge_value, float pixel_dist_scale, int *width, int *height, int *xoff, int *yoff)$/;"	f
stbtt_GetGlyphShape	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)$/;"	f
stbtt_GetNumberOfFonts	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)$/;"	f
stbtt_GetNumberOfFonts_internal	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)$/;"	f
stbtt_GetPackedQuad	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetPackedQuad(const stbtt_packedchar *chardata, int pw, int ph, int char_index, float *xpos, float *ypos, stbtt_aligned_quad *q, int align_to_integer)$/;"	f
stbtt_GetScaledFontVMetrics	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_GetScaledFontVMetrics(const unsigned char *fontdata, int index, float size, float *ascent, float *descent, float *lineGap)$/;"	f
stbtt_InitFont	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)$/;"	f
stbtt_InitFont_internal	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)$/;"	f
stbtt_IsGlyphEmpty	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)$/;"	f
stbtt_MakeCodepointBitmap	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int codepoint)$/;"	f
stbtt_MakeCodepointBitmapSubpixel	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int codepoint)$/;"	f
stbtt_MakeCodepointBitmapSubpixelPrefilter	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int oversample_x, int oversample_y, float *sub_x, float *sub_y, int codepoint)$/;"	f
stbtt_MakeGlyphBitmap	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, int glyph)$/;"	f
stbtt_MakeGlyphBitmapSubpixel	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int glyph)$/;"	f
stbtt_MakeGlyphBitmapSubpixelPrefilter	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char *output, int out_w, int out_h, int out_stride, float scale_x, float scale_y, float shift_x, float shift_y, int prefilter_x, int prefilter_y, float *sub_x, float *sub_y, int glyph)$/;"	f
stbtt_PackBegin	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, int stride_in_bytes, int padding, void *alloc_context)$/;"	f
stbtt_PackEnd	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)$/;"	f
stbtt_PackFontRange	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, const unsigned char *fontdata, int font_index, float font_size,$/;"	f
stbtt_PackFontRanges	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, const unsigned char *fontdata, int font_index, stbtt_pack_range *ranges, int num_ranges)$/;"	f
stbtt_PackFontRangesGatherRects	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)$/;"	f
stbtt_PackFontRangesPackRects	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int num_rects)$/;"	f
stbtt_PackFontRangesRenderIntoRects	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo *info, stbtt_pack_range *ranges, int num_ranges, stbrp_rect *rects)$/;"	f
stbtt_PackSetOversampling	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, unsigned int v_oversample)$/;"	f
stbtt_PackSetSkipMissingCodepoints	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_PackSetSkipMissingCodepoints(stbtt_pack_context *spc, int skip)$/;"	f
stbtt_Rasterize	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *vertices, int num_verts, float scale_x, float scale_y, float shift_x, float shift_y, int x_off, int y_off, int invert, void *userdata)$/;"	f
stbtt_ScaleForMappingEmToPixels	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)$/;"	f
stbtt_ScaleForPixelHeight	lib/cimgui/imgui/imstb_truetype.h	/^STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)$/;"	f
stbtt__CompareUTF8toUTF16_bigendian_prefix	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1, stbtt_uint8 *s2, stbtt_int32 len2) $/;"	f
stbtt__GetCoverageIndex	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_int32  stbtt__GetCoverageIndex(stbtt_uint8 *coverageTable, int glyph)$/;"	f
stbtt__GetGlyfOffset	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)$/;"	f
stbtt__GetGlyphClass	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_int32  stbtt__GetGlyphClass(stbtt_uint8 *classDefTable, int glyph)$/;"	f
stbtt__GetGlyphGPOSInfoAdvance	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_int32  stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)$/;"	f
stbtt__GetGlyphInfoT2	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, int *x1, int *y1)$/;"	f
stbtt__GetGlyphKernInfoAdvance	lib/cimgui/imgui/imstb_truetype.h	/^static int  stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)$/;"	f
stbtt__GetGlyphShapeT2	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)$/;"	f
stbtt__GetGlyphShapeTT	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pvertices)$/;"	f
stbtt__active_edge	lib/cimgui/imgui/imstb_truetype.h	/^typedef struct stbtt__active_edge$/;"	s
stbtt__active_edge	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__active_edge;$/;"	t	typeref:struct:stbtt__active_edge
stbtt__add_point	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__add_point(stbtt__point *points, int n, float x, float y)$/;"	f
stbtt__bitmap	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__bitmap;$/;"	t	typeref:struct:__anon120
stbtt__buf	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__buf;$/;"	t	typeref:struct:__anon113
stbtt__buf_get	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)$/;"	f
stbtt__buf_get16	lib/cimgui/imgui/imstb_truetype.h	1161;"	d
stbtt__buf_get32	lib/cimgui/imgui/imstb_truetype.h	1162;"	d
stbtt__buf_get8	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)$/;"	f
stbtt__buf_peek8	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)$/;"	f
stbtt__buf_range	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)$/;"	f
stbtt__buf_seek	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__buf_seek(stbtt__buf *b, int o)$/;"	f
stbtt__buf_skip	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__buf_skip(stbtt__buf *b, int o)$/;"	f
stbtt__cff_get_index	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)$/;"	f
stbtt__cff_index_count	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__cff_index_count(stbtt__buf *b)$/;"	f
stbtt__cff_index_get	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)$/;"	f
stbtt__cff_int	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)$/;"	f
stbtt__cff_skip_operand	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__cff_skip_operand(stbtt__buf *b) {$/;"	f
stbtt__check_size16	lib/cimgui/imgui/imstb_truetype.h	/^   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];$/;"	t
stbtt__check_size32	lib/cimgui/imgui/imstb_truetype.h	/^   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];$/;"	t
stbtt__cid_get_glyph_subrs	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)$/;"	f
stbtt__close_shape	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_off,$/;"	f
stbtt__compute_crossings_x	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__compute_crossings_x(float x, float y, int nverts, stbtt_vertex *verts)$/;"	f
stbtt__csctx	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__csctx;$/;"	t	typeref:struct:__anon127
stbtt__csctx_close_shape	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__csctx_close_shape(stbtt__csctx *ctx)$/;"	f
stbtt__csctx_rccurve_to	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dy2, float dx3, float dy3)$/;"	f
stbtt__csctx_rline_to	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f
stbtt__csctx_rmove_to	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f
stbtt__csctx_v	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtt_int32 cx, stbtt_int32 cy, stbtt_int32 cx1, stbtt_int32 cy1)$/;"	f
stbtt__cuberoot	lib/cimgui/imgui/imstb_truetype.h	/^static float stbtt__cuberoot( float x )$/;"	f
stbtt__dict_get	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)$/;"	f
stbtt__dict_get_ints	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)$/;"	f
stbtt__edge	lib/cimgui/imgui/imstb_truetype.h	/^typedef struct stbtt__edge {$/;"	s
stbtt__edge	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__edge;$/;"	t	typeref:struct:stbtt__edge
stbtt__fill_active_edges	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, int max_weight)$/;"	f
stbtt__fill_active_edges_new	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__active_edge *e, float y_top)$/;"	f
stbtt__find_table	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tag)$/;"	f
stbtt__get_subr	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)$/;"	f
stbtt__get_subrs	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)$/;"	f
stbtt__h_prefilter	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)$/;"	f
stbtt__handle_clipped_edge	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, float y0, float x1, float y1)$/;"	f
stbtt__hheap	lib/cimgui/imgui/imstb_truetype.h	/^typedef struct stbtt__hheap$/;"	s
stbtt__hheap	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__hheap;$/;"	t	typeref:struct:stbtt__hheap
stbtt__hheap_alloc	lib/cimgui/imgui/imstb_truetype.h	/^static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)$/;"	f
stbtt__hheap_chunk	lib/cimgui/imgui/imstb_truetype.h	/^typedef struct stbtt__hheap_chunk$/;"	s
stbtt__hheap_chunk	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__hheap_chunk;$/;"	t	typeref:struct:stbtt__hheap_chunk
stbtt__hheap_cleanup	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)$/;"	f
stbtt__hheap_free	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__hheap_free(stbtt__hheap *hh, void *p)$/;"	f
stbtt__isfont	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__isfont(stbtt_uint8 *font)$/;"	f
stbtt__matches	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 flags)$/;"	f
stbtt__matchpair	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nlen, stbtt_int32 target_id, stbtt_int32 next_id)$/;"	f
stbtt__new_active	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float start_point, void *userdata)$/;"	f
stbtt__new_buf	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt__buf stbtt__new_buf(const void *p, size_t size)$/;"	f
stbtt__oversample_shift	lib/cimgui/imgui/imstb_truetype.h	/^static float stbtt__oversample_shift(int oversample)$/;"	f
stbtt__point	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt__point;$/;"	t	typeref:struct:__anon128
stbtt__rasterize	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windings, float scale_x, float scale_y, float shift_x, float shift_y, int off_x, int off_y, int invert, void *userdata)$/;"	f
stbtt__rasterize_sorted_edges	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsubsample, int off_x, int off_y, void *userdata)$/;"	f
stbtt__ray_intersect_bezier	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__ray_intersect_bezier(float orig[2], float ray[2], float q0[2], float q1[2], float q2[2], float hits[2][2])$/;"	f
stbtt__run_charstring	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)$/;"	f
stbtt__solve_cubic	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__solve_cubic(float a, float b, float c, float* r)$/;"	f
stbtt__sort_edges	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__sort_edges(stbtt__edge *p, int n)$/;"	f
stbtt__sort_edges_ins_sort	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)$/;"	f
stbtt__sort_edges_quicksort	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)$/;"	f
stbtt__tesselate_cubic	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, float x1, float y1, float x2, float y2, float x3, float y3, float objspace_flatness_squared, int n)$/;"	f
stbtt__tesselate_curve	lib/cimgui/imgui/imstb_truetype.h	/^static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, float x1, float y1, float x2, float y2, float objspace_flatness_squared, int n)$/;"	f
stbtt__test_oversample_pow2	lib/cimgui/imgui/imstb_truetype.h	/^typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ? 1 : -1];$/;"	t
stbtt__track_vertex	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)$/;"	f
stbtt__v_prefilter	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigned int kernel_width)$/;"	f
stbtt_aligned_quad	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt_aligned_quad;$/;"	t	typeref:struct:__anon115
stbtt_bakedchar	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt_bakedchar;$/;"	t	typeref:struct:__anon114
stbtt_fontinfo	lib/cimgui/imgui/imstb_truetype.h	/^struct stbtt_fontinfo$/;"	s
stbtt_fontinfo	lib/cimgui/imgui/imstb_truetype.h	/^typedef struct stbtt_fontinfo stbtt_fontinfo;$/;"	t	typeref:struct:stbtt_fontinfo
stbtt_int16	lib/cimgui/imgui/imstb_truetype.h	/^   typedef signed   short  stbtt_int16;$/;"	t
stbtt_int32	lib/cimgui/imgui/imstb_truetype.h	/^   typedef signed   int    stbtt_int32;$/;"	t
stbtt_int8	lib/cimgui/imgui/imstb_truetype.h	/^   typedef signed   char   stbtt_int8;$/;"	t
stbtt_pack_context	lib/cimgui/imgui/imstb_truetype.h	/^struct stbtt_pack_context {$/;"	s
stbtt_pack_context	lib/cimgui/imgui/imstb_truetype.h	/^typedef struct stbtt_pack_context stbtt_pack_context;$/;"	t	typeref:struct:stbtt_pack_context
stbtt_pack_range	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt_pack_range;$/;"	t	typeref:struct:__anon117
stbtt_packedchar	lib/cimgui/imgui/imstb_truetype.h	/^} stbtt_packedchar;$/;"	t	typeref:struct:__anon116
stbtt_setvertex	lib/cimgui/imgui/imstb_truetype.h	/^static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbtt_int32 cx, stbtt_int32 cy)$/;"	f
stbtt_tag	lib/cimgui/imgui/imstb_truetype.h	1275;"	d
stbtt_tag4	lib/cimgui/imgui/imstb_truetype.h	1274;"	d
stbtt_uint16	lib/cimgui/imgui/imstb_truetype.h	/^   typedef unsigned short  stbtt_uint16;$/;"	t
stbtt_uint32	lib/cimgui/imgui/imstb_truetype.h	/^   typedef unsigned int    stbtt_uint32;$/;"	t
stbtt_uint8	lib/cimgui/imgui/imstb_truetype.h	/^   typedef unsigned char   stbtt_uint8;$/;"	t
stbtt_vertex	lib/cimgui/imgui/imstb_truetype.h	/^   } stbtt_vertex;$/;"	t	typeref:struct:__anon119
stbtt_vertex_type	lib/cimgui/imgui/imstb_truetype.h	823;"	d
steal_work	lib/klib/kthread.c	/^static inline long steal_work(kt_for_t *t)$/;"	f	file:
step	lib/klib/kthread.c	/^	int step;$/;"	m	struct:__anon38	file:
step	lib/nuklear/example/stb_image.h	/^   int parse, step;$/;"	m	struct:__anon159
step	lib/nuklear/nuklear.h	/^    union nk_property step;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
step	lib/nuklear/src/nuklear_internal.h	/^    union nk_property step;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
step_t	lib/klib/test/kthread_test2.c	/^} step_t;$/;"	t	typeref:struct:__anon15	file:
stop	lib/nuklear/example/extended.c	/^    struct nk_image stop;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
str	lib/klib/kson.h	/^		char *str;$/;"	m	union:kson_node_s::__anon9
str_data	lib/klib/test/kbtree_test.c	/^static char **str_data;$/;"	v	file:
str_data	lib/klib/test/khash_test.c	/^static char **str_data;$/;"	v	file:
str_duplicate	lib/nuklear/example/file_browser.c	/^str_duplicate(const char *src)$/;"	f	file:
str_len	lib/klib/test/kstring_bench2.c	/^static int str_len = 1024*1024*128;$/;"	v	file:
str_split	lib/cimgui/generator/cpp2ffi.lua	/^local function str_split(str, pat)$/;"	f
str_t	lib/klib/test/kbtree_test.c	/^typedef const char *str_t;$/;"	t	file:
stride	lib/cimgui/imgui/imstb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon120
stride	lib/nuklear/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap
stride	lib/nuklear/src/nuklear_font.c	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	file:
stride_in_bytes	lib/cimgui/imgui/imstb_truetype.h	/^   int   stride_in_bytes;$/;"	m	struct:stbtt_pack_context
stride_in_bytes	lib/nuklear/nuklear.h	/^    int   stride_in_bytes;$/;"	m	struct:nk_tt_pack_context
stride_in_bytes	lib/nuklear/src/nuklear_font.c	/^    int   stride_in_bytes;$/;"	m	struct:nk_tt_pack_context	file:
string	lib/nuklear/nuklear.h	/^    char string[1];$/;"	m	struct:nk_command_text
string	lib/nuklear/nuklear.h	/^    struct nk_str string;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_str
string	lib/nuklear/src/nuklear.h	/^    char string[1];$/;"	m	struct:nk_command_text
string	lib/nuklear/src/nuklear.h	/^    struct nk_str string;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_str
string:split	lib/klib/lua/klib.lua	/^function string:split(sep, n)$/;"	f
strip	lib/cimgui/generator/cpp2ffi.lua	/^local function strip(cad)$/;"	f
strip	lib/cimgui/generator/generator_old.lua	/^local function strip(cad)$/;"	f
strip_end	lib/cimgui/generator/cpp2ffi.lua	/^local function strip_end(cad)$/;"	f
strsplit	lib/cimgui/generator/cpp2ffi.lua	/^function strsplit(str, pat)$/;"	f
strsplit	lib/cimgui/generator/generator_old.lua	/^function strsplit(str, pat)$/;"	f
strtoint64	lib/klib/knetfile.c	/^int64_t strtoint64(const char *buf)$/;"	f
struct_f_implementation	lib/cimgui/generator/generator.lua	/^local function struct_f_implementation(outtab,def)$/;"	f
struct_f_implementation	lib/cimgui/generator/generator_old.lua	/^local function struct_f_implementation(outtab,def)$/;"	f
struct_parser	lib/cimgui/generator/generator_old.lua	/^local function struct_parser()$/;"	f
style	lib/nuklear/nuklear.h	/^    struct nk_style style;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_style
style	lib/nuklear/src/nuklear.h	/^    struct nk_style style;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_style
style_items	lib/nuklear/nuklear.h	/^    struct nk_config_stack_style_item style_items;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_style_item
style_items	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_style_item style_items;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_style_item
subrs	lib/cimgui/imgui/imstb_truetype.h	/^   stbtt__buf subrs;                  \/\/ private charstring subroutines index$/;"	m	struct:stbtt_fontinfo
succ_high	lib/nuklear/example/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anon149
succ_low	lib/nuklear/example/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anon149
suffix	lib/nuklear/example/file_browser.c	/^    const char *suffix;$/;"	m	struct:file	file:
suffix	lib/nuklear/example/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anon158
sum	src/data.h	/^    float   sum;         \/\/ cluster categorie sum$/;"	m	struct:cluster_stat_t
sum	src/data.h	/^    float sum;$/;"	m	struct:cat_stat_t
sum	src/data.h	/^    float* sum;           \/\/ col sum$/;"	m	struct:__anon1
surf	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct XSurface *surf;$/;"	m	struct:__anon191	typeref:struct:__anon191::XSurface
surf	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    struct XSurface *surf;$/;"	m	struct:__anon175	typeref:struct:__anon175::XSurface
surf	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    struct XSurface *surf;$/;"	m	struct:__anon190	typeref:struct:__anon190::XSurface
swa	lib/nuklear/demo/x11/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	file:
swa	lib/nuklear/demo/x11_opengl2/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	file:
swa	lib/nuklear/demo/x11_opengl3/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	file:
swa	lib/nuklear/demo/x11_rawfb/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	file:
swa	lib/nuklear/demo/x11_xft/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	file:
swap	lib/cimgui/imgui/imgui.h	/^    inline void         swap(ImVector<T>& rhs)              { int rhs_size = rhs.Size; rhs.Size = Size; Size = rhs_size; int rhs_cap = rhs.Capacity; rhs.Capacity = Capacity; Capacity = rhs_cap; T* rhs_data = rhs.Data; rhs.Data = Data; Data = rhs_data; }$/;"	f	struct:ImVector
swap_chain	lib/nuklear/demo/d3d11/main.c	/^static IDXGISwapChain *swap_chain;$/;"	v	file:
sy	lib/cimgui/imgui/imstb_truetype.h	/^   float sy;$/;"	m	struct:stbtt__active_edge
sy	lib/nuklear/nuklear.h	/^    float sy;$/;"	m	struct:nk_tt__active_edge
sy	lib/nuklear/src/nuklear_font.c	/^    float sy;$/;"	m	struct:nk_tt__active_edge	file:
sym_active	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_active;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_active	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_active;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_hover	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_hover;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_hover	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_hover;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_left	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_left;$/;"	m	struct:nk_style_property	typeref:enum:nk_style_property::nk_symbol_type
sym_left	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_left;$/;"	m	struct:nk_style_property	typeref:enum:nk_style_property::nk_symbol_type
sym_maximize	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_maximize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_style_tab::nk_symbol_type
sym_maximize	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_maximize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_style_tab::nk_symbol_type
sym_minimize	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_minimize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_style_tab::nk_symbol_type
sym_minimize	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_minimize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_style_tab::nk_symbol_type
sym_normal	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_normal;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_normal	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_normal;$/;"	m	struct:nk_style_combo	typeref:enum:nk_style_combo::nk_symbol_type
sym_right	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_right;$/;"	m	struct:nk_style_property	typeref:enum:nk_style_property::nk_symbol_type
sym_right	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_right;$/;"	m	struct:nk_style_property	typeref:enum:nk_style_property::nk_symbol_type
symbol_active	lib/nuklear/nuklear.h	/^    struct nk_color symbol_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
symbol_active	lib/nuklear/src/nuklear.h	/^    struct nk_color symbol_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
symbol_hover	lib/nuklear/nuklear.h	/^    struct nk_color symbol_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
symbol_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color symbol_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
symbol_normal	lib/nuklear/nuklear.h	/^    struct nk_color symbol_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
symbol_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color symbol_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_combo::nk_color
t	lib/klib/kthread.c	/^	struct kt_for_t *t;$/;"	m	struct:__anon36	typeref:struct:__anon36::kt_for_t	file:
t	lib/klib/kthread.c	/^	struct kt_forpool_t *t;$/;"	m	struct:__anon37	typeref:struct:__anon37::kt_forpool_t	file:
t0	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon115
t0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
t0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	file:
t1	lib/cimgui/imgui/imstb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon115
t1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
t1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	file:
tab	lib/klib/kstring.h	/^	uint64_t tab[4];$/;"	m	struct:__anon19
tab	lib/nuklear/nuklear.h	/^    struct nk_style_tab tab;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_tab
tab	lib/nuklear/src/nuklear.h	/^    struct nk_style_tab tab;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_tab
tab_maximize	lib/nuklear/example/skinning.c	/^    struct nk_image tab_maximize;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
tab_maximize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button tab_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
tab_maximize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button tab_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
tab_minimize	lib/nuklear/example/skinning.c	/^    struct nk_image tab_minimize;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
tab_minimize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button tab_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
tab_minimize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button tab_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_style_button
table.ksmall	lib/klib/lua/klib.lua	/^function table.ksmall(arr, k)$/;"	f
table.shuffle	lib/klib/lua/klib.lua	/^function table.shuffle(a)$/;"	f
table_count	lib/nuklear/nuklear.h	/^    unsigned int table_count;$/;"	m	struct:nk_window
table_count	lib/nuklear/src/nuklear.h	/^    unsigned int table_count;$/;"	m	struct:nk_window
tables	lib/nuklear/nuklear.h	/^    struct nk_table *tables;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_table
tables	lib/nuklear/src/nuklear.h	/^    struct nk_table *tables;$/;"	m	struct:nk_window	typeref:struct:nk_window::nk_table
tb	lib/klib/ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon39
tbl	lib/nuklear/nuklear.h	/^    struct nk_table tbl;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_table
tbl	lib/nuklear/src/nuklear.h	/^    struct nk_table tbl;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_table
te	lib/klib/ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon39
te2	lib/klib/ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon39
temp_bitmap	lib/cimgui/imgui/imstb_truetype.h	/^unsigned char temp_bitmap[512*512];$/;"	v
templates	lib/nuklear/nuklear.h	/^    float templates[NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS];$/;"	m	struct:nk_row_layout
templates	lib/nuklear/src/nuklear.h	/^    float templates[NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS];$/;"	m	struct:nk_row_layout
temporary	lib/nuklear/nuklear.h	/^    struct nk_allocator temporary;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_allocator
temporary	lib/nuklear/src/nuklear.h	/^    struct nk_allocator temporary;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_atlas::nk_allocator
test_getopt	lib/klib/test/ketopt_test.c	/^static void test_getopt(int argc, char *argv[])$/;"	f	file:
test_ketopt	lib/klib/test/ketopt_test.c	/^static void test_ketopt(int argc, char *argv[])$/;"	f	file:
test_kgetline	lib/klib/test/kstring_test.c	/^void test_kgetline(kstring_t *ks, const char *text, ...)$/;"	f
test_kputl	lib/klib/test/kstring_test.c	/^void test_kputl(kstring_t *ks, long n)$/;"	f
test_kputw	lib/klib/test/kstring_test.c	/^void test_kputw(kstring_t *ks, int n)$/;"	f
test_opt	lib/klib/test/ketopt_test.c	/^static void test_opt(int c, int opt, const char *arg)$/;"	f	file:
tex_handles	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint64 tex_handles[NK_GLFW_MAX_TEXTURES];$/;"	m	struct:nk_glfw_device
tex_height	lib/nuklear/nuklear.h	/^    int tex_height;$/;"	m	struct:nk_font_atlas
tex_height	lib/nuklear/src/nuklear.h	/^    int tex_height;$/;"	m	struct:nk_font_atlas
tex_ids	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint tex_ids[NK_GLFW_MAX_TEXTURES];$/;"	m	struct:nk_glfw_device
tex_width	lib/nuklear/nuklear.h	/^    int tex_width;$/;"	m	struct:nk_font_atlas
tex_width	lib/nuklear/src/nuklear.h	/^    int tex_width;$/;"	m	struct:nk_font_atlas
text	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw
text	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw
text	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw
text	lib/nuklear/nuklear.h	/^    char text[NK_INPUT_MAX];$/;"	m	struct:nk_keyboard
text	lib/nuklear/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_color
text	lib/nuklear/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_color
text	lib/nuklear/nuklear.h	/^    struct nk_style_text text;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_text
text	lib/nuklear/src/nuklear.h	/^    char text[NK_INPUT_MAX];$/;"	m	struct:nk_keyboard
text	lib/nuklear/src/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_tab::nk_color
text	lib/nuklear/src/nuklear.h	/^    struct nk_style_text text;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_text
text	lib/nuklear/src/nuklear_internal.h	/^    struct nk_color text;$/;"	m	struct:nk_text	typeref:struct:nk_text::nk_color
text_active	lib/nuklear/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_active	lib/nuklear/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_active	lib/nuklear/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_alignment	lib/nuklear/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_button
text_alignment	lib/nuklear/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_selectable
text_alignment	lib/nuklear/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_toggle
text_alignment	lib/nuklear/src/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_button
text_alignment	lib/nuklear/src/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_selectable
text_alignment	lib/nuklear/src/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_toggle
text_background	lib/nuklear/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_background	lib/nuklear/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_background	lib/nuklear/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_background	lib/nuklear/src/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_background	lib/nuklear/src/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_background	lib/nuklear/src/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_edit	lib/nuklear/nuklear.h	/^    struct nk_text_edit text_edit;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_text_edit
text_edit	lib/nuklear/src/nuklear.h	/^    struct nk_text_edit text_edit;$/;"	m	struct:nk_context	typeref:struct:nk_context::nk_text_edit
text_file	lib/nuklear/example/file_browser.c	/^    struct nk_image text_file;$/;"	m	struct:icons	typeref:struct:icons::nk_image	file:
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_hover_active	lib/nuklear/nuklear.h	/^    struct nk_color text_hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_hover_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_input	lib/nuklear/example/canvas.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	file:
text_input	lib/nuklear/example/extended.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	file:
text_input	lib/nuklear/example/file_browser.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	file:
text_input	lib/nuklear/example/skinning.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	file:
text_len	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int text_len;$/;"	m	struct:nk_glfw
text_len	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int text_len;$/;"	m	struct:nk_glfw
text_len	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int text_len;$/;"	m	struct:nk_glfw
text_len	lib/nuklear/nuklear.h	/^    int text_len;$/;"	m	struct:nk_keyboard
text_len	lib/nuklear/src/nuklear.h	/^    int text_len;$/;"	m	struct:nk_keyboard
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_edit::nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_color
text_normal_active	lib/nuklear/nuklear.h	/^    struct nk_color text_normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_normal_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_pressed	lib/nuklear/nuklear.h	/^    struct nk_color text_pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_pressed	lib/nuklear/src/nuklear.h	/^    struct nk_color text_pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_pressed_active	lib/nuklear/nuklear.h	/^    struct nk_color text_pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
text_pressed_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_color
texture	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    IDirect3DTexture9 *texture;$/;"	m	struct:__anon173
texture	lib/nuklear/nuklear.h	/^    nk_handle texture; \/* texture handle to a texture with a white pixel *\/$/;"	m	struct:nk_draw_null_texture
texture	lib/nuklear/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_draw_command
texture	lib/nuklear/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_font
texture	lib/nuklear/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_user_font
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture; \/* texture handle to a texture with a white pixel *\/$/;"	m	struct:nk_draw_null_texture
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_draw_command
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_font
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_user_font
theme	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	g	file:
thr	lib/klib/khmm.h	/^	FLOAT *thr;$/;"	m	struct:__anon23
tid	lib/klib/kthread.c	/^	pthread_t *tid;$/;"	m	struct:kt_forpool_t	file:
timestamp	lib/nuklear/demo/x11/main.c	/^timestamp(void)$/;"	f	file:
timestamp	lib/nuklear/demo/x11_rawfb/main.c	/^timestamp(void)$/;"	f	file:
timestamp	lib/nuklear/demo/x11_xft/main.c	/^timestamp(void)$/;"	f	file:
todo	lib/nuklear/example/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anon149
token	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    ULONG_PTR token;$/;"	m	struct:__anon189
tools	lib/nuklear/example/extended.c	/^    struct nk_image tools;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
tooltip_border	lib/nuklear/nuklear.h	/^    float tooltip_border;$/;"	m	struct:nk_style_window
tooltip_border	lib/nuklear/src/nuklear.h	/^    float tooltip_border;$/;"	m	struct:nk_style_window
tooltip_border_color	lib/nuklear/nuklear.h	/^    struct nk_color tooltip_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
tooltip_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color tooltip_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_color
tooltip_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 tooltip_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
tooltip_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 tooltip_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window::nk_vec2
top	lib/nuklear/nuklear.h	/^    struct nk_color top;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
top	lib/nuklear/src/nuklear.h	/^    struct nk_color top;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command_rect_multi_color::nk_color
total_height	lib/nuklear/nuklear.h	/^    int total_height;$/;"	m	struct:nk_list_view
total_height	lib/nuklear/src/nuklear.h	/^    int total_height;$/;"	m	struct:nk_list_view
touch_down_id	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    int touch_down_id;$/;"	m	struct:nk_allegro5
touch_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
touch_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
touch_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_vec2
touch_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_button::nk_vec2
touch_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_selectable::nk_vec2
touch_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_toggle::nk_vec2
tq	lib/nuklear/example/stb_image.h	/^      int tq;$/;"	m	struct:__anon149::__anon150
transparent	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anon159
traverse_f	lib/klib/test/kbtree_test.c	58;"	d	file:
tree_depth	lib/nuklear/nuklear.h	/^    int tree_depth;$/;"	m	struct:nk_row_layout
tree_depth	lib/nuklear/src/nuklear.h	/^    int tree_depth;$/;"	m	struct:nk_row_layout
ttBYTE	lib/cimgui/imgui/imstb_truetype.h	1265;"	d
ttCHAR	lib/cimgui/imgui/imstb_truetype.h	1266;"	d
ttFixed	lib/cimgui/imgui/imstb_truetype.h	1267;"	d
ttLONG	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]; }$/;"	f
ttSHORT	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }$/;"	f
ttULONG	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]; }$/;"	f
ttUSHORT	lib/cimgui/imgui/imstb_truetype.h	/^static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }$/;"	f
ttf_blob	lib/nuklear/nuklear.h	/^    void *ttf_blob;$/;"	m	struct:nk_font_config
ttf_blob	lib/nuklear/src/nuklear.h	/^    void *ttf_blob;$/;"	m	struct:nk_font_config
ttf_buffer	lib/cimgui/imgui/imstb_truetype.h	/^char ttf_buffer[1<<25];$/;"	v
ttf_buffer	lib/cimgui/imgui/imstb_truetype.h	/^unsigned char ttf_buffer[1<<20];$/;"	v
ttf_data_owned_by_atlas	lib/nuklear/nuklear.h	/^    unsigned char ttf_data_owned_by_atlas;$/;"	m	struct:nk_font_config
ttf_data_owned_by_atlas	lib/nuklear/src/nuklear.h	/^    unsigned char ttf_data_owned_by_atlas;$/;"	m	struct:nk_font_config
ttf_size	lib/nuklear/nuklear.h	/^    nk_size ttf_size;$/;"	m	struct:nk_font_config
ttf_size	lib/nuklear/src/nuklear.h	/^    nk_size ttf_size;$/;"	m	struct:nk_font_config
ttype	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	file:
type	lib/cimgui/imgui/imstb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anon119
type	lib/klib/knetfile.h	/^	int type, fd;$/;"	m	struct:knetFile_s
type	lib/klib/kopen.c	/^	int type, fd;$/;"	m	struct:__anon35	file:
type	lib/klib/kson.h	/^	unsigned long long type:3, n:61;$/;"	m	struct:kson_node_s
type	lib/nuklear/example/file_browser.c	/^    enum file_types type;$/;"	m	struct:file	typeref:enum:file::file_types	file:
type	lib/nuklear/example/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anon154
type	lib/nuklear/example/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anon157
type	lib/nuklear/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_buffer	typeref:enum:nk_buffer::nk_allocation_type
type	lib/nuklear/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_pool	typeref:enum:nk_pool::nk_allocation_type
type	lib/nuklear/nuklear.h	/^    enum nk_chart_type type;$/;"	m	struct:nk_chart_slot	typeref:enum:nk_chart_slot::nk_chart_type
type	lib/nuklear/nuklear.h	/^    enum nk_command_type type;$/;"	m	struct:nk_command	typeref:enum:nk_command::nk_command_type
type	lib/nuklear/nuklear.h	/^    enum nk_panel_row_layout_type type;$/;"	m	struct:nk_row_layout	typeref:enum:nk_row_layout::nk_panel_row_layout_type
type	lib/nuklear/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_panel	typeref:enum:nk_panel::nk_panel_type
type	lib/nuklear/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_popup_state	typeref:enum:nk_popup_state::nk_panel_type
type	lib/nuklear/nuklear.h	/^    enum nk_style_item_type type;$/;"	m	struct:nk_style_item	typeref:enum:nk_style_item::nk_style_item_type
type	lib/nuklear/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex
type	lib/nuklear/nuklear.h	/^    unsigned int type;$/;"	m	struct:nk_memory_status
type	lib/nuklear/src/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_buffer	typeref:enum:nk_buffer::nk_allocation_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_pool	typeref:enum:nk_pool::nk_allocation_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_chart_type type;$/;"	m	struct:nk_chart_slot	typeref:enum:nk_chart_slot::nk_chart_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_command_type type;$/;"	m	struct:nk_command	typeref:enum:nk_command::nk_command_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_panel_row_layout_type type;$/;"	m	struct:nk_row_layout	typeref:enum:nk_row_layout::nk_panel_row_layout_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_panel	typeref:enum:nk_panel::nk_panel_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_popup_state	typeref:enum:nk_popup_state::nk_panel_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_style_item_type type;$/;"	m	struct:nk_style_item	typeref:enum:nk_style_item::nk_style_item_type
type	lib/nuklear/src/nuklear.h	/^    unsigned int type;$/;"	m	struct:nk_memory_status
type	lib/nuklear/src/nuklear_font.c	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	file:
typename_gsub	lib/cimgui/generator/cpp2ffi.lua	/^	local function typename_gsub(cad,typename,tname)$/;"	f
typetoStr	lib/cimgui/generator/cpp2ffi.lua	/^local function typetoStr(typ)$/;"	f
typetoStr	lib/cimgui/generator/generator_old.lua	/^local function typetoStr(typ)$/;"	f
u0	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
u0	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
u1	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
u1	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
uSynergyBool	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef int			uSynergyBool;$/;"	t
uSynergyClipboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyClipboardCallback)(uSynergyCookie cookie, enum uSynergyClipboardFormat format, const uint8_t *data, uint32_t size);$/;"	t
uSynergyClipboardFormat	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^enum uSynergyClipboardFormat$/;"	g
uSynergyConnectFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uSynergyBool (*uSynergyConnectFunc)(uSynergyCookie cookie);$/;"	t
uSynergyContext	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^} uSynergyContext;$/;"	t	typeref:struct:__anon104
uSynergyCookie	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef struct { int ignored; } *					uSynergyCookie;$/;"	t	typeref:struct:__anon103
uSynergyGetTimeFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uint32_t	(*uSynergyGetTimeFunc)();$/;"	t
uSynergyInit	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^void uSynergyInit(uSynergyContext *context)$/;"	f
uSynergyJoystickCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyJoystickCallback)(uSynergyCookie cookie, uint8_t joyNum, uint16_t buttons, int8_t leftStickX, int8_t leftStickY, int8_t rightStickX, int8_t rightStickY);$/;"	t
uSynergyKeyboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyKeyboardCallback)(uSynergyCookie cookie, uint16_t key, uint16_t modifiers, uSynergyBool down, uSynergyBool repeat);$/;"	t
uSynergyMouseCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyMouseCallback)(uSynergyCookie cookie, uint16_t x, uint16_t y, int16_t wheelX, int16_t wheelY, uSynergyBool buttonLeft, uSynergyBool buttonRight, uSynergyBool buttonMiddle);$/;"	t
uSynergyReceiveFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uSynergyBool (*uSynergyReceiveFunc)(uSynergyCookie cookie, uint8_t *buffer, int maxLength, int* outLength);$/;"	t
uSynergyScreenActiveCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyScreenActiveCallback)(uSynergyCookie cookie, uSynergyBool active);$/;"	t
uSynergySendClipboard	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^void uSynergySendClipboard(uSynergyContext *context, const char *text)$/;"	f
uSynergySendFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uSynergyBool (*uSynergySendFunc)(uSynergyCookie cookie, const uint8_t *buffer, int length);$/;"	t
uSynergySleepFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergySleepFunc)(uSynergyCookie cookie, int timeMs);$/;"	t
uSynergyTraceFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyTraceFunc)(uSynergyCookie cookie, const char *text);$/;"	t
uSynergyUpdate	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^void uSynergyUpdate(uSynergyContext *context)$/;"	f
ubyte_t	lib/klib/kstring.c	/^typedef unsigned char ubyte_t;$/;"	t	file:
ui_header	lib/nuklear/example/extended.c	/^ui_header(struct nk_context *ctx, struct media *media, const char *title)$/;"	f	file:
ui_piemenu	lib/nuklear/example/extended.c	/^ui_piemenu(struct nk_context *ctx, struct nk_vec2 pos, float radius,$/;"	f	file:
ui_widget	lib/nuklear/example/extended.c	/^ui_widget(struct nk_context *ctx, struct media *media, float height)$/;"	f	file:
ui_widget_centered	lib/nuklear/example/extended.c	/^ui_widget_centered(struct nk_context *ctx, struct media *media, float height)$/;"	f	file:
uint64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned long long int uint64_t;$/;"	t
uint64_t	lib/gl3w/GL/glcorearb.h	/^typedef unsigned __int64 uint64_t;$/;"	t
uint64_t	lib/gl3w/GL/glcorearb.h	/^typedef unsigned long int uint64_t;$/;"	t
uint64_t	lib/gl3w/GL/glcorearb.h	/^typedef unsigned long long int uint64_t;$/;"	t
unchecked	lib/nuklear/example/extended.c	/^    struct nk_image unchecked;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
uncompressed_block	lib/klib/bgzf.h	/^    void *uncompressed_block, *compressed_block;$/;"	m	struct:__anon31
undo	lib/nuklear/nuklear.h	/^    struct nk_text_undo_state undo;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_text_undo_state
undo	lib/nuklear/src/nuklear.h	/^    struct nk_text_undo_state undo;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_edit::nk_text_undo_state
undo_char	lib/cimgui/imgui/imstb_textedit.h	/^   STB_TEXTEDIT_CHARTYPE  undo_char[STB_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:__anon108
undo_char	lib/nuklear/nuklear.h	/^   nk_rune undo_char[NK_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:nk_text_undo_state
undo_char	lib/nuklear/src/nuklear.h	/^   nk_rune undo_char[NK_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:nk_text_undo_state
undo_char_point	lib/cimgui/imgui/imstb_textedit.h	/^   int undo_char_point, redo_char_point;$/;"	m	struct:__anon108
undo_char_point	lib/nuklear/nuklear.h	/^   short undo_char_point;$/;"	m	struct:nk_text_undo_state
undo_char_point	lib/nuklear/src/nuklear.h	/^   short undo_char_point;$/;"	m	struct:nk_text_undo_state
undo_point	lib/cimgui/imgui/imstb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anon108
undo_point	lib/nuklear/nuklear.h	/^   short undo_point;$/;"	m	struct:nk_text_undo_state
undo_point	lib/nuklear/src/nuklear.h	/^   short undo_point;$/;"	m	struct:nk_text_undo_state
undo_rec	lib/cimgui/imgui/imstb_textedit.h	/^   StbUndoRecord          undo_rec [STB_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:__anon108
undo_rec	lib/nuklear/nuklear.h	/^   struct nk_text_undo_record undo_rec[NK_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:nk_text_undo_state	typeref:struct:nk_text_undo_state::nk_text_undo_record
undo_rec	lib/nuklear/src/nuklear.h	/^   struct nk_text_undo_record undo_rec[NK_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:nk_text_undo_state	typeref:struct:nk_text_undo_state::nk_text_undo_record
undostate	lib/cimgui/imgui/imstb_textedit.h	/^   StbUndoState undostate;$/;"	m	struct:__anon109
ungrab	lib/nuklear/nuklear.h	/^    unsigned char ungrab;$/;"	m	struct:nk_mouse
ungrab	lib/nuklear/src/nuklear.h	/^    unsigned char ungrab;$/;"	m	struct:nk_mouse
uniform_proj	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_glfw_device
uniform_proj	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint uniform_proj;$/;"	m	struct:nk_glfw_device
uniform_proj	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_sdl_device
uniform_proj	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint uniform_proj;$/;"	m	struct:nk_sdl_device
uniform_proj	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_sfml_device
uniform_proj	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_x11_device
uniform_proj	lib/nuklear/example/canvas.c	/^    GLint uniform_proj;$/;"	m	struct:device	file:
uniform_proj	lib/nuklear/example/extended.c	/^    GLint uniform_proj;$/;"	m	struct:device	file:
uniform_proj	lib/nuklear/example/file_browser.c	/^    GLint uniform_proj;$/;"	m	struct:device	file:
uniform_proj	lib/nuklear/example/skinning.c	/^    GLint uniform_proj;$/;"	m	struct:device	file:
uniform_tex	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_glfw_device
uniform_tex	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint uniform_tex;$/;"	m	struct:nk_glfw_device
uniform_tex	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_sdl_device
uniform_tex	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint uniform_tex;$/;"	m	struct:nk_sdl_device
uniform_tex	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_sfml_device
uniform_tex	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_x11_device
uniform_tex	lib/nuklear/example/canvas.c	/^    GLint uniform_tex;$/;"	m	struct:device	file:
uniform_tex	lib/nuklear/example/extended.c	/^    GLint uniform_tex;$/;"	m	struct:device	file:
uniform_tex	lib/nuklear/example/file_browser.c	/^    GLint uniform_tex;$/;"	m	struct:device	file:
uniform_tex	lib/nuklear/example/skinning.c	/^    GLint uniform_tex;$/;"	m	struct:device	file:
unpackInt16	lib/klib/bgzf.c	/^static inline int unpackInt16(const uint8_t *buffer)$/;"	f	file:
upper_bound	lib/klib/cpp/khash.hpp	/^	khint_t n_buckets, count, n_occupied, upper_bound;$/;"	m	class:klib::KHash
url	lib/klib/kurl.c	/^	char *url, *date, *auth;$/;"	m	struct:__anon25	file:
usage	src/main.c	/^int usage() {$/;"	f
use_clipping	lib/nuklear/nuklear.h	/^    int use_clipping;$/;"	m	struct:nk_command_buffer
use_clipping	lib/nuklear/src/nuklear.h	/^    int use_clipping;$/;"	m	struct:nk_command_buffer
use_pool	lib/nuklear/nuklear.h	/^    int use_pool;$/;"	m	struct:nk_context
use_pool	lib/nuklear/src/nuklear.h	/^    int use_pool;$/;"	m	struct:nk_context
used	lib/klib/cpp/khashl.hpp	/^	uint32_t *used;$/;"	m	class:klib::KHashSet
user_allocator_context	lib/cimgui/imgui/imstb_truetype.h	/^   void *user_allocator_context;$/;"	m	struct:stbtt_pack_context
user_func	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	file:
userdata	lib/cimgui/imgui/imstb_truetype.h	/^   void           * userdata;$/;"	m	struct:stbtt_fontinfo
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_allocator
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_clipboard
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command_buffer
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_context
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_command
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_list
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_button
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_progress
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_property
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_scrollbar
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_selectable
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_slider
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_toggle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_user_font
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_allocator
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_clipboard
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command_buffer
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_context
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_command
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_list
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_button
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_progress
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_property
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_scrollbar
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_selectable
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_slider
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_toggle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_user_font
uv	lib/cimgui/cimgui.h	/^    ImVec2 uv;$/;"	m	struct:ImDrawVert
uv	lib/cimgui/generator/output/cimgui.h	/^    ImVec2 uv;$/;"	m	struct:ImDrawVert
uv	lib/cimgui/imgui/examples/imgui_impl_allegro5.cpp	/^    ImVec2 uv;$/;"	m	struct:ImDrawVertAllegro	file:
uv	lib/cimgui/imgui/examples/imgui_impl_dx9.cpp	/^    float    uv[2];$/;"	m	struct:CUSTOMVERTEX	file:
uv	lib/cimgui/imgui/imgui.h	/^    ImVec2  uv;$/;"	m	struct:ImDrawVert
uv	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    float uv[2];$/;"	m	struct:nk_d3d11_vertex
uv	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    float uv[2];$/;"	m	struct:nk_d3d9_vertex
uv	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex
uv	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex
uv	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex
uv	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    float uv[2];$/;"	m	struct:nk_sdl_vertex
uv	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    float uv[2];$/;"	m	struct:nk_sdl_vertex
uv	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLfloat uv[2];$/;"	m	struct:nk_sdl_vertex
uv	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    float uv[2];$/;"	m	struct:nk_sfml_vertex
uv	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    float uv[2];$/;"	m	struct:nk_sfml_vertex
uv	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    float uv[2];$/;"	m	struct:nk_x11_vertex
uv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    float uv[2];$/;"	m	struct:nk_x11_vertex
uv	lib/nuklear/example/canvas.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	file:
uv	lib/nuklear/example/extended.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	file:
uv	lib/nuklear/example/file_browser.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	file:
uv	lib/nuklear/example/skinning.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	file:
uv	lib/nuklear/nuklear.h	/^    struct nk_vec2 uv; \/* coordinates to a white pixel in the texture  *\/$/;"	m	struct:nk_draw_null_texture	typeref:struct:nk_draw_null_texture::nk_vec2
uv	lib/nuklear/nuklear.h	/^    struct nk_vec2 uv[2];$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_user_font_glyph::nk_vec2
uv	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 uv; \/* coordinates to a white pixel in the texture  *\/$/;"	m	struct:nk_draw_null_texture	typeref:struct:nk_draw_null_texture::nk_vec2
uv	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 uv[2];$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_user_font_glyph::nk_vec2
v	lib/klib/khmm.h	/^	int *v; \/\/ Viterbi path$/;"	m	struct:__anon21
v	lib/klib/kson.h	/^	} v;$/;"	m	struct:kson_node_s	typeref:union:kson_node_s::__anon9
v	lib/nuklear/example/stb_image.h	/^      int h,v;$/;"	m	struct:__anon149::__anon150
v	src/scene.h	/^    mat4x4 p,v;$/;"	m	struct:scene_t
v0	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
v0	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
v1	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
v1	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph
v_oversample	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anon117
v_oversample	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context
v_oversample	lib/nuklear/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range
v_oversample	lib/nuklear/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context
v_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	file:
v_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	file:
va_copy	lib/cimgui/imgui/imgui.cpp	2065;"	d	file:
va_copy	lib/cimgui/imgui/imgui.cpp	2067;"	d	file:
val	lib/klib/cpp/khashl.hpp	/^struct KHashMapBucket { KType key; VType val; };$/;"	m	struct:klib::KHashMapBucket
val	lib/klib/cpp/khashl.hpp	/^struct KHashMapCachedBucket { KType key; VType val; khint_t hash; };$/;"	m	struct:klib::KHashMapCachedBucket
val	lib/klib/ketopt.h	/^	int val;$/;"	m	struct:__anon30
val	lib/klib/test/khash_test.c	/^	unsigned char val;$/;"	m	struct:__anon11	file:
val	lib/klib/test/khash_test.c	/^	unsigned char val;$/;"	m	struct:__anon12	file:
val	lib/klib/test/krmq_test.c	/^	int val;$/;"	m	struct:my_node	file:
val_f	lib/cimgui/cimgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStoragePair::__anon96
val_f	lib/cimgui/generator/output/cimgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStoragePair::__anon70
val_f	lib/cimgui/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::ImGuiStoragePair::__anon106
val_i	lib/cimgui/cimgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStoragePair::__anon96
val_i	lib/cimgui/generator/output/cimgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStoragePair::__anon70
val_i	lib/cimgui/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::ImGuiStoragePair::__anon106
val_p	lib/cimgui/cimgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStoragePair::__anon96
val_p	lib/cimgui/generator/output/cimgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStoragePair::__anon70
val_p	lib/cimgui/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::ImGuiStoragePair::__anon106
validate_uint32	lib/nuklear/example/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t
value	lib/klib/cpp/khashl.hpp	/^	inline VType &value(khint_t i) { return hashset_t::key(i).val; }$/;"	f	class:klib::KHashMap
value	lib/klib/cpp/khashl.hpp	/^	inline VType &value(khint_t i) { return hashset_t::key(i).val; }$/;"	f	class:klib::KHashMapCached
value	lib/nuklear/demo/node_editor.c	/^    float value;$/;"	m	struct:node	file:
value	lib/nuklear/example/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anon152
value	lib/nuklear/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon135
value	lib/nuklear/nuklear.h	/^    union nk_property value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
value	lib/nuklear/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	e	enum:nk_helper::__anon133
value	lib/nuklear/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	e	enum:nk_helper::__anon134
value	lib/nuklear/src/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon164
value	lib/nuklear/src/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	e	enum:nk_helper::__anon162
value	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	e	enum:nk_helper::__anon163
value	lib/nuklear/src/nuklear_internal.h	/^    union nk_property value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property_variant::nk_property
value_type	lib/cimgui/imgui/imgui.h	/^    typedef T                   value_type;$/;"	t	struct:ImVector
values	lib/nuklear/example/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anon148
values	lib/nuklear/nuklear.h	/^    nk_uint values[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table
values	lib/nuklear/src/nuklear.h	/^    nk_uint values[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table
vao	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device
vao	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device
vao	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sdl_device
vao	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sfml_device
vao	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_x11_device
vao	lib/nuklear/example/canvas.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vao	lib/nuklear/example/extended.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vao	lib/nuklear/example/file_browser.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vao	lib/nuklear/example/skinning.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vao	src/obj.h	/^    GLuint vao;$/;"	m	struct:obj_t
vbo	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device
vbo	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device
vbo	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sdl_device
vbo	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint vbo, ebo;$/;"	m	struct:nk_sdl_device
vbo	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sfml_device
vbo	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_x11_device
vbo	lib/nuklear/example/canvas.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vbo	lib/nuklear/example/extended.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vbo	lib/nuklear/example/file_browser.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vbo	lib/nuklear/example/skinning.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	file:
vbo	src/obj.h	/^    GLuint vbo;$/;"	m	struct:obj_t
vc	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    size_t vp, vt, vc;$/;"	m	struct:nk_sdl_device
vec2_set	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec2_set(vec2 r, float x, float y) $/;"	f	signature:(vec2 r,float x,float y)
vec3_mul_cross	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec3_mul_cross(vec3 r, vec3 const a, vec3 const b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec3 r,vec3 const a,vec3 const b)
vec3_reflect	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec3_reflect(vec3 r, vec3 const v, vec3 const n)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec3 r,vec3 const v,vec3 const n)
vec3_set	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec3_set(vec3 r, float x, float y, float z) $/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec3 r,float x,float y,float z)
vec4_mul_cross	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec4_mul_cross(vec4 r, vec4 a, vec4 b)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,vec4 a,vec4 b)
vec4_project	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec4_project(vec4 r, mat4x4 VP, vec4 p, float w, float h) {$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,mat4x4 VP,vec4 p,float w,float h)
vec4_reflect	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec4_reflect(vec4 r, vec4 v, vec4 n)$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,vec4 v,vec4 n)
vec4_set	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec4_set(vec4 r, float x, float y, float z, float w) $/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,float x,float y,float z,float w)
vec4_unproject	lib/linmath/linmath.h	/^LINMATH_H_FUNC void vec4_unproject(vec4 r, mat4x4 VP, vec4 p, float w, float h) {$/;"	f	typeref:typename:LINMATH_H_FUNC void	signature:(vec4 r,mat4x4 VP,vec4 p,float w,float h)
vectors	lib/nuklear/nuklear.h	/^    struct nk_config_stack_vec2 vectors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_vec2
vectors	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_vec2 vectors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_configuration_stacks::nk_config_stack_vec2
vendor	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    enum graphics_card_vendors vendor;$/;"	m	struct:opengl_info	typeref:enum:opengl_info::graphics_card_vendors
vendor_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *vendor_str;$/;"	m	struct:opengl_info
version	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^} version;$/;"	v	typeref:struct:__anon102	file:
version	lib/gl3w/GL/gl3w.c	/^} version;$/;"	v	typeref:struct:__anon44	file:
version	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    float version;$/;"	m	struct:opengl_info
version_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *version_str;$/;"	m	struct:opengl_info
vert_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_glfw_vertex *vert_buffer;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_device::nk_glfw_vertex
vert_shdr	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_glfw_device
vert_shdr	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_glfw_device
vert_shdr	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_sdl_device
vert_shdr	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_sdl_device
vert_shdr	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_sfml_device
vert_shdr	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_x11_device
vert_shdr	lib/nuklear/example/canvas.c	/^    GLuint vert_shdr;$/;"	m	struct:device	file:
vert_shdr	lib/nuklear/example/extended.c	/^    GLuint vert_shdr;$/;"	m	struct:device	file:
vert_shdr	lib/nuklear/example/file_browser.c	/^    GLuint vert_shdr;$/;"	m	struct:device	file:
vert_shdr	lib/nuklear/example/skinning.c	/^    GLuint vert_shdr;$/;"	m	struct:device	file:
vertex_alignment	lib/nuklear/nuklear.h	/^    nk_size vertex_alignment; \/* vertex alignment: Can be obtained by NK_ALIGNOF *\/$/;"	m	struct:nk_convert_config
vertex_alignment	lib/nuklear/src/nuklear.h	/^    nk_size vertex_alignment; \/* vertex alignment: Can be obtained by NK_ALIGNOF *\/$/;"	m	struct:nk_convert_config
vertex_array_obj_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int vertex_array_obj_available;$/;"	m	struct:opengl_info
vertex_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Buffer *vertex_buffer;$/;"	m	struct:__anon174
vertex_buffer_obj_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int vertex_buffer_obj_available;$/;"	m	struct:opengl_info
vertex_count	lib/nuklear/nuklear.h	/^    unsigned int vertex_count;$/;"	m	struct:nk_draw_list
vertex_count	lib/nuklear/src/nuklear.h	/^    unsigned int vertex_count;$/;"	m	struct:nk_draw_list
vertex_layout	lib/nuklear/nuklear.h	/^    const struct nk_draw_vertex_layout_element *vertex_layout; \/* describes the vertex output format and packing *\/$/;"	m	struct:nk_convert_config	typeref:struct:nk_convert_config::nk_draw_vertex_layout_element
vertex_layout	lib/nuklear/src/nuklear.h	/^    const struct nk_draw_vertex_layout_element *vertex_layout; \/* describes the vertex output format and packing *\/$/;"	m	struct:nk_convert_config	typeref:struct:nk_convert_config::nk_draw_vertex_layout_element
vertex_shader	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11VertexShader *vertex_shader;$/;"	m	struct:__anon174
vertex_size	lib/nuklear/nuklear.h	/^    nk_size vertex_size; \/* sizeof one vertex for vertex packing *\/$/;"	m	struct:nk_convert_config
vertex_size	lib/nuklear/src/nuklear.h	/^    nk_size vertex_size; \/* sizeof one vertex for vertex packing *\/$/;"	m	struct:nk_convert_config
vertex_t	lib/klib/test/kgraph_test.c	/^} vertex_t;$/;"	t	typeref:struct:__anon13	file:
vertices	lib/nuklear/nuklear.h	/^    struct nk_buffer *vertices;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
vertices	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *vertices;$/;"	m	struct:nk_draw_list	typeref:struct:nk_draw_list::nk_buffer
viewport	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    D3D11_VIEWPORT viewport;$/;"	m	struct:__anon174
viewport	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    D3DVIEWPORT9 viewport;$/;"	m	struct:__anon173
vis	lib/nuklear/demo/x11/main.c	/^    Visual *vis;$/;"	m	struct:XWindow	file:
vis	lib/nuklear/demo/x11_opengl2/main.c	/^    XVisualInfo *vis;$/;"	m	struct:XWindow	file:
vis	lib/nuklear/demo/x11_opengl3/main.c	/^    XVisualInfo *vis;$/;"	m	struct:XWindow	file:
vis	lib/nuklear/demo/x11_rawfb/main.c	/^    Visual *vis;$/;"	m	struct:XWindow	file:
vis	lib/nuklear/demo/x11_xft/main.c	/^    Visual *vis;$/;"	m	struct:XWindow	file:
vis	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Visual *vis;$/;"	m	struct:__anon190
volatile	build/CMakeFiles/3.13.4/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
vp	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    size_t vp, vt, vc;$/;"	m	struct:nk_sdl_device
vs	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLsizei vs;$/;"	m	struct:nk_sdl_device
vs	lib/nuklear/example/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anon151
vsnprintf	lib/cimgui/imgui/imgui.cpp	1370;"	d	file:
vsnprintf	lib/cimgui/imgui/imgui_demo.cpp	120;"	d	file:
vt	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    size_t vp, vt, vc;$/;"	m	struct:nk_sdl_device
vtype	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	file:
w	lib/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
w	lib/cimgui/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
w	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
w	lib/cimgui/generator/output/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
w	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
w	lib/cimgui/imgui/imgui.h	/^    float     x, y, z, w;$/;"	m	struct:ImVec4
w	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect
w	lib/cimgui/imgui/imstb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
w	lib/cimgui/imgui/imstb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anon120
w	lib/klib/kthread.c	/^	ktf_worker_t *w;$/;"	m	struct:kt_for_t	file:
w	lib/klib/kthread.c	/^	kto_worker_t *w;$/;"	m	struct:kt_forpool_t	file:
w	lib/klib/kurl.c	/^	union { uint8_t b[BLOCK_LENGTH]; uint32_t w[BLOCK_LENGTH\/4]; } buf;$/;"	m	union:sha1nfo::__anon26	file:
w	lib/klib/kurl.c	/^	union { uint8_t b[HASH_LENGTH]; uint32_t w[HASH_LENGTH\/4]; } state;$/;"	m	union:sha1nfo::__anon27	file:
w	lib/klib/test/kthread_test.c	/^	int max_iter, w, h;$/;"	m	struct:__anon17	file:
w	lib/nuklear/demo/x11/nuklear_xlib.h	/^    unsigned int w, h;$/;"	m	struct:XSurface
w	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    int w, h, pitch;$/;"	m	struct:rawfb_image
w	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    unsigned int w, h;$/;"	m	struct:XSurface
w	lib/nuklear/example/stb_image.h	/^   int w,h;$/;"	m	struct:__anon159
w	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
w	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
w	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
w	lib/nuklear/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text
w	lib/nuklear/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap
w	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
w	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
w	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
w	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
w	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
w	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text
w	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image
w	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
w	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
w	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	file:
w	lib/nuklear/src/nuklear_font.c	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	file:
w2	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon149::__anon150
w_lores	lib/nuklear/example/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anon151
was_packed	lib/cimgui/imgui/imstb_rectpack.h	/^   int            was_packed;  \/\/ non-zero if valid packing$/;"	m	struct:stbrp_rect
was_packed	lib/cimgui/imgui/imstb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect
was_packed	lib/nuklear/nuklear.h	/^    int was_packed;$/;"	m	struct:nk_rp_rect
was_packed	lib/nuklear/src/nuklear_font.c	/^    int was_packed;$/;"	m	struct:nk_rp_rect	file:
where	lib/cimgui/imgui/imstb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  where;$/;"	m	struct:__anon107
where	lib/nuklear/nuklear.h	/^   int where;$/;"	m	struct:nk_text_undo_record
where	lib/nuklear/src/nuklear.h	/^   int where;$/;"	m	struct:nk_text_undo_record
width	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWimage
width	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWvidmode
width	lib/cimgui/imgui/imstb_rectpack.h	/^   int width;$/;"	m	struct:stbrp_context
width	lib/cimgui/imgui/imstb_truetype.h	/^   int   width;$/;"	m	struct:stbtt_pack_context
width	lib/cimgui/imgui/imstb_truetype.h	/^   int width,height;$/;"	m	struct:__anon129
width	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    unsigned int width;$/;"	m	struct:nk_allegro5
width	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    unsigned int width;$/;"	m	struct:__anon176
width	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw
width	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int width, height;$/;"	m	struct:nk_glfw
width	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int width, height;$/;"	m	struct:nk_glfw
width	lib/nuklear/demo/x11/main.c	/^    unsigned int width;$/;"	m	struct:XWindow	file:
width	lib/nuklear/demo/x11_opengl2/main.c	/^    int width, height;$/;"	m	struct:XWindow	file:
width	lib/nuklear/demo/x11_opengl3/main.c	/^    int width, height;$/;"	m	struct:XWindow	file:
width	lib/nuklear/demo/x11_rawfb/main.c	/^    unsigned int width;$/;"	m	struct:XWindow	file:
width	lib/nuklear/demo/x11_xft/main.c	/^    unsigned int width;$/;"	m	struct:XWindow	file:
width	lib/nuklear/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph
width	lib/nuklear/nuklear.h	/^    int   width;$/;"	m	struct:nk_tt_pack_context
width	lib/nuklear/nuklear.h	/^    int width;$/;"	m	struct:nk_rp_context
width	lib/nuklear/nuklear.h	/^    nk_text_width_f width;$/;"	m	struct:nk_user_font
width	lib/nuklear/src/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph
width	lib/nuklear/src/nuklear.h	/^    nk_text_width_f width;$/;"	m	struct:nk_user_font
width	lib/nuklear/src/nuklear_font.c	/^    int   width;$/;"	m	struct:nk_tt_pack_context	file:
width	lib/nuklear/src/nuklear_font.c	/^    int width;$/;"	m	struct:nk_rp_context	file:
width	src/bbgl.c	/^int width = 0, height = 0;$/;"	v
width	src/bbgl.h	/^int width;$/;"	v
win	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw
win	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw
win	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw
win	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    SDL_Window *win;$/;"	m	struct:nk_sdl
win	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    SDL_Window *win;$/;"	m	struct:nk_sdl
win	lib/nuklear/demo/sdl_opengles2/main.c	/^SDL_Window *win;$/;"	v
win	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    SDL_Window *win;$/;"	m	struct:nk_sdl
win	lib/nuklear/demo/x11/main.c	/^    Window win;$/;"	m	struct:XWindow	file:
win	lib/nuklear/demo/x11_opengl2/main.c	/^    Window win;$/;"	m	struct:XWindow	file:
win	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    Window win;$/;"	m	struct:nk_x11
win	lib/nuklear/demo/x11_opengl3/main.c	/^    Window win;$/;"	m	struct:XWindow	file:
win	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    Window win;$/;"	m	struct:nk_x11
win	lib/nuklear/demo/x11_rawfb/main.c	/^    Window win;$/;"	m	struct:XWindow	file:
win	lib/nuklear/demo/x11_xft/main.c	/^    Window win;$/;"	m	struct:XWindow	file:
win	lib/nuklear/nuklear.h	/^    struct nk_page_element win[1];$/;"	m	struct:nk_page	typeref:struct:nk_page::nk_page_element
win	lib/nuklear/nuklear.h	/^    struct nk_window *win;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_window
win	lib/nuklear/nuklear.h	/^    struct nk_window win;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_window
win	lib/nuklear/src/nuklear.h	/^    struct nk_page_element win[1];$/;"	m	struct:nk_page	typeref:struct:nk_page::nk_page_element
win	lib/nuklear/src/nuklear.h	/^    struct nk_window *win;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_state::nk_window
win	lib/nuklear/src/nuklear.h	/^    struct nk_window win;$/;"	m	union:nk_page_data	typeref:struct:nk_page_data::nk_window
win	src/bbgl.c	/^static GLFWwindow *win;$/;"	v	file:
window	lib/cimgui/imgui/examples/example_apple_metal/Shared/AppDelegate.h	/^@property (strong, nonatomic) UIWindow *window;$/;"	v
window	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpGraphics *window;$/;"	m	struct:__anon189
window	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    sf::Window* window;$/;"	m	struct:nk_sfml
window	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    sf::Window* window;$/;"	m	struct:nk_sfml
window	lib/nuklear/example/skinning.c	/^    struct nk_image window;$/;"	m	struct:media	typeref:struct:media::nk_image	file:
window	lib/nuklear/nuklear.h	/^    struct nk_style_window window;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_window
window	lib/nuklear/src/nuklear.h	/^    struct nk_style_window window;$/;"	m	struct:nk_style	typeref:struct:nk_style::nk_style_window
window_background	lib/nuklear/example/canvas.c	/^    struct nk_style_item window_background;$/;"	m	struct:nk_canvas	typeref:struct:nk_canvas::nk_style_item	file:
window_dc	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HDC window_dc;$/;"	m	struct:__anon176
wm_delete_window	lib/nuklear/demo/x11/main.c	/^    Atom wm_delete_window;$/;"	m	struct:XWindow	file:
wm_delete_window	lib/nuklear/demo/x11_opengl2/main.c	/^    Atom wm_delete_window;$/;"	m	struct:XWindow	file:
wm_delete_window	lib/nuklear/demo/x11_opengl3/main.c	/^    Atom wm_delete_window;$/;"	m	struct:XWindow	file:
wm_delete_window	lib/nuklear/demo/x11_xft/main.c	/^    Atom wm_delete_window;$/;"	m	struct:XWindow	file:
worker_for	lib/klib/test/kthread_test2.c	/^static void worker_for(void *_data, long i, int tid) \/\/ kt_for() callback$/;"	f	file:
worker_pipeline	lib/klib/test/kthread_test2.c	/^static void *worker_pipeline(void *shared, int step, void *in) \/\/ kt_pipeline() callback$/;"	f	file:
workers	lib/klib/kthread.c	/^	ktp_worker_t *workers;$/;"	m	struct:ktp_t	file:
write_cb	lib/klib/kurl.c	/^static size_t write_cb(char *ptr, size_t size, size_t nmemb, void *data) \/\/ callback required by cURL$/;"	f	file:
x	lib/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
x	lib/cimgui/cimgui.h	/^    float x, y;$/;"	m	struct:ImVec2
x	lib/cimgui/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	m	struct:ImVec2_Simple
x	lib/cimgui/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
x	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	m	struct:ImVec2_Simple
x	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
x	lib/cimgui/generator/output/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
x	lib/cimgui/generator/output/cimgui.h	/^    float x, y;$/;"	m	struct:ImVec2
x	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	m	struct:ImVec2_Simple
x	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
x	lib/cimgui/imgui/imgui.h	/^    float     x, y, z, w;$/;"	m	struct:ImVec4
x	lib/cimgui/imgui/imgui.h	/^    float     x, y;$/;"	m	struct:ImVec2
x	lib/cimgui/imgui/imgui_internal.h	/^    float   x;$/;"	m	struct:ImVec1
x	lib/cimgui/imgui/imgui_internal.h	/^    short   x, y;$/;"	m	struct:ImVec2ih
x	lib/cimgui/imgui/imstb_rectpack.h	/^   int x,y;$/;"	m	struct:__anon99
x	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect
x	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node
x	lib/cimgui/imgui/imstb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anon111
x	lib/cimgui/imgui/imstb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon119
x	lib/cimgui/imgui/imstb_truetype.h	/^   float x, y;$/;"	m	struct:__anon127
x	lib/cimgui/imgui/imstb_truetype.h	/^   float x,y;$/;"	m	struct:__anon128
x	lib/cimgui/imgui/imstb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge
x	lib/cimgui/imgui/imstb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon129
x	lib/cimgui/imgui/imstb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect
x	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned char x;$/;"	m	struct:__anon130
x	lib/klib/kbtree.h	/^	kbnode_t *x;$/;"	m	struct:__anon5
x	lib/klib/kbtree.h	/^	kbnode_t *x;$/;"	m	struct:__anon7
x	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon149::__anon150
x	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
x	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
x	lib/nuklear/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult
x	lib/nuklear/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node
x	lib/nuklear/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text
x	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
x	lib/nuklear/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find
x	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
x	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
x	lib/nuklear/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll
x	lib/nuklear/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point
x	lib/nuklear/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2
x	lib/nuklear/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i
x	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big
x	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
x	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text
x	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
x	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
x	lib/nuklear/src/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll
x	lib/nuklear/src/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2
x	lib/nuklear/src/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i
x	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big
x	lib/nuklear/src/nuklear_font.c	/^    int x,y;$/;"	m	struct:nk_rp__findresult	file:
x	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	file:
x	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	file:
x	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	file:
x	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	file:
x	lib/nuklear/src/nuklear_text_editor.c	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	file:
x) return x:gsub	lib/cimgui/generator/cpp2ffi.lua	/^            for typec in signature:gsub("(%(.-%))", function(x) return x:gsub(",","\\0") end):gmatch(".-([^,]+),?") do$/;"	f
x) return x:gsub	lib/cimgui/generator/cpp2ffi.lua	/^        for typec in signature:gsub("(%(.-%))", function(x) return x:gsub(",","\\0") end):gmatch(".-([^,]+),?") do$/;"	f
x) return x:gsub	lib/cimgui/generator/generator_old.lua	/^            for typec in signature:gsub("(%(.-%))", function(x) return x:gsub(",","\\0") end):gmatch(".-([^,]+),?") do$/;"	f
x) return x:gsub	lib/cimgui/generator/generator_old.lua	/^        for typec in signature:gsub("(%(.-%))", function(x) return x:gsub(",","\\0") end):gmatch(".-([^,]+),?") do$/;"	f
x0	lib/cimgui/imgui/imstb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, etc)$/;"	m	struct:__anon110
x0	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
x0	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon115
x0	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon114
x0	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon116
x0	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
x0	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
x0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
x0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
x0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
x0	lib/nuklear/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row
x0	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
x0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	file:
x0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	file:
x0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	file:
x0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	file:
x0	lib/nuklear/src/nuklear_text_editor.c	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	file:
x1	lib/cimgui/imgui/imstb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, etc)$/;"	m	struct:__anon110
x1	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
x1	lib/cimgui/imgui/imstb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon115
x1	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon114
x1	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon116
x1	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
x1	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
x1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
x1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
x1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
x1	lib/nuklear/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row
x1	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
x1	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	file:
x1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	file:
x1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	file:
x1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	file:
x1	lib/nuklear/src/nuklear_text_editor.c	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	file:
x11	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^} x11;$/;"	v	typeref:struct:nk_x11
x11	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^} x11;$/;"	v	typeref:struct:nk_x11
xa_clipboard	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_clipboard;$/;"	m	struct:__anon191
xa_clipboard	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Atom xa_clipboard;$/;"	m	struct:__anon190
xa_targets	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_targets;$/;"	m	struct:__anon191
xa_targets	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Atom xa_targets;$/;"	m	struct:__anon190
xa_text	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_text;$/;"	m	struct:__anon191
xa_text	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Atom xa_text;$/;"	m	struct:__anon190
xa_utf8_string	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_utf8_string;$/;"	m	struct:__anon191
xa_utf8_string	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    Atom xa_utf8_string;$/;"	m	struct:__anon190
xadvance	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon114
xadvance	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon116
xadvance	lib/nuklear/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_font_glyph
xadvance	lib/nuklear/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_user_font_glyph
xadvance	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar
xadvance	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar
xadvance	lib/nuklear/src/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_font_glyph
xadvance	lib/nuklear/src/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_user_font_glyph
xadvance	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	file:
xadvance	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	file:
xfont	lib/nuklear/demo/x11/nuklear_xlib.h	/^    XFontStruct *xfont;$/;"	m	struct:XFont
xfont	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    XFontStruct *xfont;$/;"	m	struct:XFont
ximage	lib/nuklear/demo/x11/nuklear_xlib.h	/^    XImage* ximage;$/;"	m	struct:XImageWithAlpha
ximage	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^    XImage* ximage;$/;"	m	struct:XImageWithAlpha
ximg	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    XImage *ximg;$/;"	m	struct:__anon175
xlib	lib/nuklear/demo/x11/nuklear_xlib.h	/^} xlib;$/;"	v	typeref:struct:__anon191
xlib	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^} xlib;$/;"	v	typeref:struct:__anon175
xlib	lib/nuklear/demo/x11_xft/nuklear_xlib.h	/^} xlib;$/;"	v	typeref:struct:__anon190
xmax	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anon17	file:
xmin	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anon17	file:
xoff	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon114
xoff	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon116
xoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar
xoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar
xoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	file:
xoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	file:
xoff2	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon116
xoff2	lib/nuklear/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar
xoff2	lib/nuklear/src/nuklear_font.c	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	file:
xsi	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    XShmSegmentInfo xsi;$/;"	m	struct:__anon175
y	lib/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
y	lib/cimgui/cimgui.h	/^    float x, y;$/;"	m	struct:ImVec2
y	lib/cimgui/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	m	struct:ImVec2_Simple
y	lib/cimgui/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
y	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	m	struct:ImVec2_Simple
y	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
y	lib/cimgui/generator/output/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
y	lib/cimgui/generator/output/cimgui.h	/^    float x, y;$/;"	m	struct:ImVec2
y	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec2_Simple { float x; float y; } ImVec2_Simple;$/;"	m	struct:ImVec2_Simple
y	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
y	lib/cimgui/imgui/imgui.h	/^    float     x, y, z, w;$/;"	m	struct:ImVec4
y	lib/cimgui/imgui/imgui.h	/^    float     x, y;$/;"	m	struct:ImVec2
y	lib/cimgui/imgui/imgui_internal.h	/^    short   x, y;$/;"	m	struct:ImVec2ih
y	lib/cimgui/imgui/imstb_rectpack.h	/^   int x,y;$/;"	m	struct:__anon99
y	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect
y	lib/cimgui/imgui/imstb_rectpack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node
y	lib/cimgui/imgui/imstb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anon111
y	lib/cimgui/imgui/imstb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anon119
y	lib/cimgui/imgui/imstb_truetype.h	/^   float x, y;$/;"	m	struct:__anon127
y	lib/cimgui/imgui/imstb_truetype.h	/^   float x,y;$/;"	m	struct:__anon128
y	lib/cimgui/imgui/imstb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anon129
y	lib/cimgui/imgui/imstb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect
y	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anon149::__anon150
y	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
y	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
y	lib/nuklear/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult
y	lib/nuklear/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node
y	lib/nuklear/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text
y	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex
y	lib/nuklear/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find
y	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
y	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
y	lib/nuklear/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll
y	lib/nuklear/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point
y	lib/nuklear/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2
y	lib/nuklear/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i
y	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart
y	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text
y	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect
y	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti
y	lib/nuklear/src/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll
y	lib/nuklear/src/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2
y	lib/nuklear/src/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i
y	lib/nuklear/src/nuklear_font.c	/^    int x,y;$/;"	m	struct:nk_rp__findresult	file:
y	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	file:
y	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	file:
y	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	file:
y	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	file:
y	lib/nuklear/src/nuklear_text_editor.c	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	file:
y0	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
y0	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anon115
y0	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon114
y0	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon116
y0	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
y0	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
y0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad
y0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
y0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
y0	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
y0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	file:
y0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	file:
y0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	file:
y0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	file:
y1	lib/cimgui/imgui/imstb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge
y1	lib/cimgui/imgui/imstb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anon115
y1	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon114
y1	lib/cimgui/imgui/imstb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anon116
y1	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
y1	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge
y1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad
y1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar
y1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar
y1	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph
y1	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	file:
y1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	file:
y1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	file:
y1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	file:
ymax	lib/cimgui/imgui/imstb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anon110
ymax	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anon17	file:
ymax	lib/nuklear/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row
ymax	lib/nuklear/src/nuklear_text_editor.c	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	file:
ymin	lib/cimgui/imgui/imstb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anon110
ymin	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anon17	file:
ymin	lib/nuklear/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row
ymin	lib/nuklear/src/nuklear_text_editor.c	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	file:
yoff	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon114
yoff	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anon116
yoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar
yoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar
yoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	file:
yoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	file:
yoff2	lib/cimgui/imgui/imstb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anon116
yoff2	lib/nuklear/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar
yoff2	lib/nuklear/src/nuklear_font.c	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	file:
ypos	lib/nuklear/example/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anon151
ystep	lib/nuklear/example/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anon151
z	lib/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
z	lib/cimgui/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
z	lib/cimgui/generator/cimgui_template.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
z	lib/cimgui/generator/output/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4
z	lib/cimgui/generator/output/cimgui.h	/^typedef struct ImVec4_Simple { float x; float y; float z; float w;} ImVec4_Simple;$/;"	m	struct:ImVec4_Simple
z	lib/cimgui/imgui/imgui.h	/^    float     x, y, z, w;$/;"	m	struct:ImVec4
z_distance	lib/nuklear/example/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon153
z_expandable	lib/nuklear/example/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anon153
z_length	lib/nuklear/example/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anon153
zbuffer	lib/nuklear/example/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon153
zbuffer_end	lib/nuklear/example/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anon153
zout	lib/nuklear/example/stb_image.h	/^   char *zout;$/;"	m	struct:__anon153
zout_end	lib/nuklear/example/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anon153
zout_start	lib/nuklear/example/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anon153
~Avl	lib/klib/cpp/kavl.hpp	/^	~Avl() { destroy(root); };$/;"	f	class:klib::Avl
~ExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^    ~ExampleAppConsole()$/;"	f	struct:ExampleAppConsole
~FreeTypeFont	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        ~FreeTypeFont()         { CloseFont(); }$/;"	f	struct:__anon112::FreeTypeFont
~ImDrawData	lib/cimgui/imgui/imgui.h	/^    ~ImDrawData()   { Clear(); }$/;"	f	struct:ImDrawData
~ImDrawList	lib/cimgui/imgui/imgui.h	/^    ~ImDrawList() { ClearFreeMemory(); }$/;"	f	struct:ImDrawList
~ImDrawListSplitter	lib/cimgui/imgui/imgui.h	/^    inline ~ImDrawListSplitter() { ClearFreeMemory(); }$/;"	f	struct:ImDrawListSplitter
~ImFont	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont::~ImFont()$/;"	f	class:ImFont
~ImFontAtlas	lib/cimgui/imgui/imgui_draw.cpp	/^ImFontAtlas::~ImFontAtlas()$/;"	f	class:ImFontAtlas
~ImGuiListClipper	lib/cimgui/imgui/imgui.h	/^    ~ImGuiListClipper()                                                 { IM_ASSERT(ItemsCount == -1); }      \/\/ Assert if user forgot to call End() or Step() until false.$/;"	f	struct:ImGuiListClipper
~ImGuiWindow	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow::~ImGuiWindow()$/;"	f	class:ImGuiWindow
~ImPool	lib/cimgui/imgui/imgui_internal.h	/^    ~ImPool()   { Clear(); }$/;"	f	struct:ImPool
~ImVector	lib/cimgui/imgui/imgui.h	/^    inline ~ImVector()                                      { if (Data) IM_FREE(Data); }$/;"	f	struct:ImVector
~KHash	lib/klib/cpp/khash.hpp	/^	~KHash() { std::free(flags); std::free(keys); };$/;"	f	class:klib::KHash
~KHashSet	lib/klib/cpp/khashl.hpp	/^	~KHashSet() { std::free(used); std::free(keys); };$/;"	f	class:klib::KHashSet
