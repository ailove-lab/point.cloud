!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/c37967d5/
$(BIN)	lib/nuklear/demo/allegro5/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/glfw_opengl2/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/glfw_opengl3/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/glfw_opengl4/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/sdl_opengl2/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/sdl_opengl3/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/sdl_opengles2/Makefile	/^$(BIN): prepare$/;"	t
$(BIN)	lib/nuklear/demo/sfml_opengl2/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/sfml_opengl3/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/x11/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/x11_opengl2/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/x11_opengl3/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/demo/x11_rawfb/Makefile	/^$(BIN):$/;"	t
$(BIN)	lib/nuklear/doc/Makefile	/^$(BIN):$/;"	t
$(EXE)	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^$(EXE): $(OBJS)$/;"	t
$(EXE)	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^$(EXE): $(OBJS)$/;"	t
$(EXE)	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^$(EXE): $(OBJS)$/;"	t
$(EXE)	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^$(EXE): $(OBJS)$/;"	t
$(VERBOSE).SILENT	build/Makefile	/^$(VERBOSE).SILENT:$/;"	t
%.o	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^%.o:%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^%.o:..\/..\/%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^%.o:%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^%.o:..\/..\/%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^%.o:..\/libs\/gl3w\/GL\/%.c$/;"	t
%.o	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^%.o:%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^%.o:..\/..\/%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^%.o:%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^%.o:..\/..\/%.cpp$/;"	t
%.o	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^%.o:..\/libs\/gl3w\/GL\/%.c$/;"	t
.cpp.o	lib/cimgui/cimgui/Makefile	/^.cpp.o:$/;"	t
0	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
0	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
0	lib/nuklear/package.json	/^  "keywords": ["gl", "ui", "toolkit"],$/;"	s	array:keywords
0	lib/nuklear/package.json	/^  "src": ["nuklear.h"]$/;"	s	array:src
1	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
1	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
1	lib/nuklear/package.json	/^  "keywords": ["gl", "ui", "toolkit"],$/;"	s	array:keywords
10	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
10	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
11	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
12	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
2	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
2	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
2	lib/nuklear/package.json	/^  "keywords": ["gl", "ui", "toolkit"],$/;"	s	array:keywords
3	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
3	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
4	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
4	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
5	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
5	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
6	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
6	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
7	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
7	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
8	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
8	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
9	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
9	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    {$/;"	o	array:images
A	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anonf542711f0308	typeref:typename:FLOAT **
A	lib/nuklear/demo/overview.c	/^            enum options {A,B,C};$/;"	e	enum:overview::options	file:
A0	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anonf542711f0308	typeref:typename:FLOAT *****
AApp	src/App.c	/^struct AApp AApp[1] = {{$/;"	v	typeref:struct:AApp[1]
AApp	src/App.h	/^struct AApp {$/;"	s
AC_KGRAPH_H	lib/klib/kgraph.h	/^#define AC_KGRAPH_H$/;"	d
AC_KMATH_H	lib/klib/kmath.h	/^#define AC_KMATH_H$/;"	d
AC_KSEQ_H	lib/klib/kseq.h	/^#define AC_KSEQ_H$/;"	d
AC_KSORT_H	lib/klib/ksort.h	/^#define AC_KSORT_H$/;"	d
AC_KVEC_H	lib/klib/kvec.h	/^#define AC_KVEC_H$/;"	d
AC_SCHMM_H_	lib/klib/khmm.h	/^#define AC_SCHMM_H_$/;"	d
AC_VERSION_KHASH_H	lib/klib/khash.h	/^#define AC_VERSION_KHASH_H /;"	d
ADrawable	src/Drawable.c	/^struct ADrawable ADrawable[1] = {{$/;"	v	typeref:struct:ADrawable[1]
ADrawable	src/Drawable.h	/^struct ADrawable {$/;"	s
AGui	src/Gui.c	/^struct AGui AGui[1] = {{$/;"	v	typeref:struct:AGui[1]
AGui	src/Gui.h	/^struct AGui {$/;"	s
API	lib/cimgui/cimgui/cimgui.h	/^#define API /;"	d
API	lib/cimgui/cimgui/cimgui.h	/^#define API$/;"	d
APIENTRY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define APIENTRY$/;"	d
APIENTRY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^  #define APIENTRY /;"	d
APIENTRY	lib/gl3w/GL/glcorearb.h	/^#define APIENTRY$/;"	d
APIENTRYP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define APIENTRYP /;"	d
APIENTRYP	lib/gl3w/GL/glcorearb.h	/^#define APIENTRYP /;"	d
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID /;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define ARCHITECTURE_ID$/;"	d	file:
ARGB	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef DWORD ARGB;$/;"	t	typeref:typename:DWORD
AScene	src/Scene.c	/^struct AScene AScene[1] = {{$/;"	v	typeref:struct:AScene[1]
AScene	src/Scene.h	/^struct AScene {$/;"	s
AShader	src/Shader.c	/^struct AShader AShader[1] = {{$/;"	v	typeref:struct:AShader[1]
AShader	src/Shader.h	/^struct AShader {$/;"	s
AShape	src/Shape.c	/^struct AShape AShape[1] = {{$/;"	v	typeref:struct:AShape[1]
AShape	src/Shape.h	/^struct AShape {$/;"	s
AcceptDragDropPayload	lib/cimgui/imgui/imgui.cpp	/^const ImGuiPayload* ImGui::AcceptDragDropPayload(const char* type, ImGuiDragDropFlags flags)$/;"	f	class:ImGui	typeref:typename:const ImGuiPayload *
ActivateItem	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ActivateItem(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:void
Active	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Active;                             \/\/ Set to true on Begin(), unl/;"	m	struct:ImGuiWindow	typeref:typename:bool
ActiveId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ActiveId;                           \/\/ Active widget$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
ActiveIdAllowNavDirFlags	lib/cimgui/imgui/imgui_internal.h	/^    int                     ActiveIdAllowNavDirFlags;           \/\/ Active widget allows using /;"	m	struct:ImGuiContext	typeref:typename:int
ActiveIdAllowOverlap	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdAllowOverlap;               \/\/ Active widget allows anothe/;"	m	struct:ImGuiContext	typeref:typename:bool
ActiveIdClickOffset	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ActiveIdClickOffset;                \/\/ Clicked offset from upper-l/;"	m	struct:ImGuiContext	typeref:typename:ImVec2
ActiveIdIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdIsAlive;                    \/\/ Active widget has been seen/;"	m	struct:ImGuiContext	typeref:typename:bool
ActiveIdIsJustActivated	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ActiveIdIsJustActivated;            \/\/ Set at the time of activati/;"	m	struct:ImGuiContext	typeref:typename:bool
ActiveIdPreviousFrame	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ActiveIdPreviousFrame;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
ActiveIdSource	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource        ActiveIdSource;                     \/\/ Activating with mouse or na/;"	m	struct:ImGuiContext	typeref:typename:ImGuiInputSource
ActiveIdTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   ActiveIdTimer;$/;"	m	struct:ImGuiContext	typeref:typename:float
ActiveIdWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            ActiveIdWindow;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiWindow *
Add	lib/cimgui/imgui/imgui_internal.h	/^    void        Add(const ImRect& r)                { if (Min.x > r.Min.x) Min.x = r.Min.x; if (/;"	f	struct:ImRect	typeref:typename:void
Add	lib/cimgui/imgui/imgui_internal.h	/^    void        Add(const ImVec2& p)                { if (Min.x > p.x)     Min.x = p.x;     if (/;"	f	struct:ImRect	typeref:typename:void
AddBezierCurve	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddBezierCurve(const ImVec2& pos0, const ImVec2& cp0, const ImVec2& cp1, const /;"	f	class:ImDrawList	typeref:typename:void
AddCallback	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddCallback(ImDrawCallback callback, void* callback_data)$/;"	f	class:ImDrawList	typeref:typename:void
AddChar	lib/cimgui/imgui/imgui.h	/^        void           AddChar(ImWchar c)   { SetBit(c); }                          \/\/ Add cha/;"	f	struct:ImFontAtlas::GlyphRangesBuilder	typeref:typename:void
AddCircle	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddCircle(const ImVec2& centre, float radius, ImU32 col, int num_segments, floa/;"	f	class:ImDrawList	typeref:typename:void
AddCircleFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddCircleFilled(const ImVec2& centre, float radius, ImU32 col, int num_segments/;"	f	class:ImDrawList	typeref:typename:void
AddConvexPolyFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddConvexPolyFilled(const ImVec2* points, const int points_count, ImU32 col)$/;"	f	class:ImDrawList	typeref:typename:void
AddCustomRectFontGlyph	lib/cimgui/imgui/imgui_draw.cpp	/^int ImFontAtlas::AddCustomRectFontGlyph(ImFont* font, ImWchar id, int width, int height, float a/;"	f	class:ImFontAtlas	typeref:typename:int
AddCustomRectRegular	lib/cimgui/imgui/imgui_draw.cpp	/^int ImFontAtlas::AddCustomRectRegular(unsigned int id, int width, int height)$/;"	f	class:ImFontAtlas	typeref:typename:int
AddDrawCmd	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddDrawCmd()$/;"	f	class:ImDrawList	typeref:typename:void
AddDrawListToDrawData	lib/cimgui/imgui/imgui.cpp	/^static void AddDrawListToDrawData(ImVector<ImDrawList*>* out_render_list, ImDrawList* draw_list)$/;"	f	typeref:typename:void	file:
AddFont	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFont(const ImFontConfig* font_cfg)$/;"	f	class:ImFontAtlas	typeref:typename:ImFont *
AddFontDefault	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontDefault(const ImFontConfig* font_cfg_template)$/;"	f	class:ImFontAtlas	typeref:typename:ImFont *
AddFontFromFileTTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromFileTTF(const char* filename, float size_pixels, const ImFontCon/;"	f	class:ImFontAtlas	typeref:typename:ImFont *
AddFontFromMemoryCompressedBase85TTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryCompressedBase85TTF(const char* compressed_ttf_data_base85/;"	f	class:ImFontAtlas	typeref:typename:ImFont *
AddFontFromMemoryCompressedTTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryCompressedTTF(const void* compressed_ttf_data, int compres/;"	f	class:ImFontAtlas	typeref:typename:ImFont *
AddFontFromMemoryTTF	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont* ImFontAtlas::AddFontFromMemoryTTF(void* ttf_data, int ttf_size, float size_pixels, const/;"	f	class:ImFontAtlas	typeref:typename:ImFont *
AddGlyph	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::AddGlyph(ImWchar codepoint, float x0, float y0, float x1, float y1, float u0, float/;"	f	class:ImFont	typeref:typename:void
AddImage	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddImage(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, const I/;"	f	class:ImDrawList	typeref:typename:void
AddImageQuad	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddImageQuad(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, con/;"	f	class:ImDrawList	typeref:typename:void
AddImageRounded	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddImageRounded(ImTextureID user_texture_id, const ImVec2& a, const ImVec2& b, /;"	f	class:ImDrawList	typeref:typename:void
AddInputCharacter	lib/cimgui/imgui/imgui.cpp	/^void ImGuiIO::AddInputCharacter(ImWchar c)$/;"	f	class:ImGuiIO	typeref:typename:void
AddInputCharactersUTF8	lib/cimgui/imgui/imgui.cpp	/^void ImGuiIO::AddInputCharactersUTF8(const char* utf8_chars)$/;"	f	class:ImGuiIO	typeref:typename:void
AddLine	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddLine(const ImVec2& a, const ImVec2& b, ImU32 col, float thickness)$/;"	f	class:ImDrawList	typeref:typename:void
AddLog	lib/cimgui/imgui/imgui_demo.cpp	/^    void    AddLog(const char* fmt, ...) IM_FMTARGS(2)$/;"	f	struct:ExampleAppConsole	typeref:typename:void	file:
AddLog	lib/cimgui/imgui/imgui_demo.cpp	/^    void    AddLog(const char* fmt, ...) IM_FMTARGS(2)$/;"	f	struct:ExampleAppLog	typeref:typename:void	file:
AddObject	src/Scene.c	/^AddObject(Scene* scene, Drawable* d) {$/;"	f	typeref:typename:void	file:
AddObject	src/Scene.h	/^	void   (*AddObject)(Scene*, Drawable*);$/;"	m	struct:AScene	typeref:typename:void (*)(Scene *,Drawable *)
AddPolyline	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddPolyline(const ImVec2* points, const int points_count, ImU32 col, bool close/;"	f	class:ImDrawList	typeref:typename:void
AddQuad	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddQuad(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, ImU/;"	f	class:ImDrawList	typeref:typename:void
AddQuadFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddQuadFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& /;"	f	class:ImDrawList	typeref:typename:void
AddRanges	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlas::GlyphRangesBuilder::AddRanges(const ImWchar* ranges)$/;"	f	class:ImFontAtlas::GlyphRangesBuilder	typeref:typename:void
AddRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddRect(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int roundi/;"	f	class:ImDrawList	typeref:typename:void
AddRectFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddRectFilled(const ImVec2& a, const ImVec2& b, ImU32 col, float rounding, int /;"	f	class:ImDrawList	typeref:typename:void
AddRectFilledMultiColor	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddRectFilledMultiColor(const ImVec2& a, const ImVec2& c, ImU32 col_upr_left, I/;"	f	class:ImDrawList	typeref:typename:void
AddRemapChar	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::AddRemapChar(ImWchar dst, ImWchar src, bool overwrite_dst)$/;"	f	class:ImFont	typeref:typename:void
AddText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddText(const ImFont* font, float font_size, const ImVec2& pos, ImU32 col, cons/;"	f	class:ImDrawList	typeref:typename:void
AddText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddText(const ImVec2& pos, ImU32 col, const char* text_begin, const char* text_/;"	f	class:ImDrawList	typeref:typename:void
AddText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlas::GlyphRangesBuilder::AddText(const char* text, const char* text_end)$/;"	f	class:ImFontAtlas::GlyphRangesBuilder	typeref:typename:void
AddTriangle	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddTriangle(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col, float/;"	f	class:ImDrawList	typeref:typename:void
AddTriangleFilled	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::AddTriangleFilled(const ImVec2& a, const ImVec2& b, const ImVec2& c, ImU32 col)$/;"	f	class:ImDrawList	typeref:typename:void
AddWindowSettings	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindowSettings* AddWindowSettings(const char* name)$/;"	f	typeref:typename:ImGuiWindowSettings *	file:
AddWindowToDrawData	lib/cimgui/imgui/imgui.cpp	/^static void AddWindowToDrawData(ImVector<ImDrawList*>* out_render_list, ImGuiWindow* window)$/;"	f	typeref:typename:void	file:
AddWindowToDrawDataSelectLayer	lib/cimgui/imgui/imgui.cpp	/^static void AddWindowToDrawDataSelectLayer(ImGuiWindow* window)$/;"	f	typeref:typename:void	file:
AddWindowToSortedBuffer	lib/cimgui/imgui/imgui.cpp	/^static void AddWindowToSortedBuffer(ImVector<ImGuiWindow*>* out_sorted_windows, ImGuiWindow* win/;"	f	typeref:typename:void	file:
AdvanceCursor	lib/cimgui/imgui/imgui_internal.h	/^    bool        AdvanceCursor;$/;"	m	struct:ImGuiGroupData	typeref:typename:bool
AdvanceX	lib/cimgui/imgui/imgui.h	/^    float           AdvanceX;           \/\/ Distance to next character (= data from font + ImFo/;"	m	struct:ImFontGlyph	typeref:typename:float
AdvanceX	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float AdvanceX;		\/\/ The distance from the origin to the origin of the next glyph. This/;"	m	struct:__anon71f5b57f0110::GlyphInfo	typeref:typename:float	file:
AlignFirstTextHeightToWidgets	lib/cimgui/imgui/imgui.h	/^    static inline void  AlignFirstTextHeightToWidgets()       { AlignTextToFramePadding(); }$/;"	f	namespace:ImGui	typeref:typename:void
AlignTextToFramePadding	lib/cimgui/imgui/imgui.cpp	/^void ImGui::AlignTextToFramePadding()$/;"	f	class:ImGui	typeref:typename:void
Alpha	lib/cimgui/cimgui/cimgui.h	/^    float Alpha;$/;"	m	struct:ImGuiStyle	typeref:typename:float
Alpha	lib/cimgui/imgui/imgui.h	/^    float       Alpha;                      \/\/ Global alpha applies to everything in ImGui.$/;"	m	struct:ImGuiStyle	typeref:typename:float
AngleMax12	lib/cimgui/imgui/imgui.cpp	/^    int              AngleMin12, AngleMax12;$/;"	m	struct:ImGuiResizeGripDef	typeref:typename:int	file:
AngleMin12	lib/cimgui/imgui/imgui.cpp	/^    int              AngleMin12, AngleMax12;$/;"	m	struct:ImGuiResizeGripDef	typeref:typename:int	file:
AntiAliasedFill	lib/cimgui/cimgui/cimgui.h	/^    bool AntiAliasedFill;$/;"	m	struct:ImGuiStyle	typeref:typename:bool
AntiAliasedFill	lib/cimgui/imgui/imgui.h	/^    bool        AntiAliasedFill;            \/\/ Enable anti-aliasing on filled shapes (rounded /;"	m	struct:ImGuiStyle	typeref:typename:bool
AntiAliasedLines	lib/cimgui/cimgui/cimgui.h	/^    bool AntiAliasedLines;$/;"	m	struct:ImGuiStyle	typeref:typename:bool
AntiAliasedLines	lib/cimgui/imgui/imgui.h	/^    bool        AntiAliasedLines;           \/\/ Enable anti-aliasing on lines\/borders. Disable/;"	m	struct:ImGuiStyle	typeref:typename:bool
AppDelegate	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.h	/^@interface AppDelegate : UIResponder <UIApplicationDelegate>$/;"	i
AppDelegate	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^@implementation AppDelegate$/;"	I
AppDelegate	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^@interface AppDelegate ()$/;"	i
AppDelegate	lib/cimgui/imgui/examples/apple_example/imguiex-osx/AppDelegate.h	/^@interface AppDelegate : NSObject <NSApplicationDelegate>$/;"	i
AppDelegate	lib/cimgui/imgui/examples/apple_example/imguiex-osx/AppDelegate.m	/^@implementation AppDelegate$/;"	I
AppDelegate	lib/cimgui/imgui/examples/apple_example/imguiex-osx/AppDelegate.m	/^@interface AppDelegate ()$/;"	i
Appearing	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Appearing;                          \/\/ Set during the frame where /;"	m	struct:ImGuiWindow	typeref:typename:bool
ArrowButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ArrowButton(const char* str_id, ImGuiDir dir)$/;"	f	class:ImGui	typeref:typename:bool
Ascender	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       Ascender;           \/\/ The pixel extents above the baseline in pixels (typ/;"	m	struct:__anon71f5b57f0110::FontInfo	typeref:typename:float	file:
Ascent	lib/cimgui/imgui/imgui.h	/^    float                       Ascent, Descent;    \/\/              \/\/ Ascent: distance from/;"	m	struct:ImFont	typeref:typename:float
AutoFitChildAxises	lib/cimgui/imgui/imgui_internal.h	/^    int                     AutoFitChildAxises;$/;"	m	struct:ImGuiWindow	typeref:typename:int
AutoFitFramesX	lib/cimgui/imgui/imgui_internal.h	/^    int                     AutoFitFramesX, AutoFitFramesY;$/;"	m	struct:ImGuiWindow	typeref:typename:int
AutoFitFramesY	lib/cimgui/imgui/imgui_internal.h	/^    int                     AutoFitFramesX, AutoFitFramesY;$/;"	m	struct:ImGuiWindow	typeref:typename:int
AutoFitOnlyGrows	lib/cimgui/imgui/imgui_internal.h	/^    bool                    AutoFitOnlyGrows;$/;"	m	struct:ImGuiWindow	typeref:typename:bool
AutoPosLastDirection	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDir                AutoPosLastDirection;$/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiDir
B	lib/nuklear/demo/overview.c	/^            enum options {A,B,C};$/;"	e	enum:overview::options	file:
BACKUP_DX10_STATE	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^    struct BACKUP_DX10_STATE$/;"	s	function:ImGui_ImplDX10_RenderDrawData	file:
BACKUP_DX11_STATE	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^    struct BACKUP_DX11_STATE$/;"	s	function:ImGui_ImplDX11_RenderDrawData	file:
BGZF	lib/klib/bgzf.h	/^} BGZF;$/;"	t	typeref:struct:__anone038ee1b0108
BGZF_BLOCK_SIZE	lib/klib/bgzf.h	/^#define BGZF_BLOCK_SIZE /;"	d
BGZF_ERR_HEADER	lib/klib/bgzf.h	/^#define BGZF_ERR_HEADER /;"	d
BGZF_ERR_IO	lib/klib/bgzf.h	/^#define BGZF_ERR_IO /;"	d
BGZF_ERR_MISUSE	lib/klib/bgzf.h	/^#define BGZF_ERR_MISUSE /;"	d
BGZF_ERR_ZLIB	lib/klib/bgzf.h	/^#define BGZF_ERR_ZLIB /;"	d
BGZF_MAX_BLOCK_SIZE	lib/klib/bgzf.h	/^#define BGZF_MAX_BLOCK_SIZE /;"	d
BIN	lib/nuklear/demo/allegro5/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/glfw_opengl2/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/glfw_opengl2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/glfw_opengl3/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/glfw_opengl3/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/glfw_opengl4/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/glfw_opengl4/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sdl_opengl2/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/sdl_opengl2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sdl_opengl3/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/sdl_opengl3/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sdl_opengles2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/sfml_opengl2/Makefile	/^	BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/sfml_opengl3/Makefile	/^	BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/demo/x11/Makefile	/^BIN = zahnrad$/;"	m
BIN	lib/nuklear/demo/x11_opengl2/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/x11_opengl3/Makefile	/^BIN = demo$/;"	m
BIN	lib/nuklear/demo/x11_rawfb/Makefile	/^BIN = zahnrad$/;"	m
BIN	lib/nuklear/doc/Makefile	/^BIN := $(BIN).exe$/;"	m
BIN	lib/nuklear/doc/Makefile	/^BIN = doc$/;"	m
BIN	lib/nuklear/example/Makefile	/^BIN := $(BIN).exe$/;"	m
BLOCK_FOOTER_LENGTH	lib/klib/bgzf.c	/^#define BLOCK_FOOTER_LENGTH /;"	d	file:
BLOCK_HEADER_LENGTH	lib/klib/bgzf.c	/^#define BLOCK_HEADER_LENGTH /;"	d	file:
BLOCK_LENGTH	lib/klib/kurl.c	/^#define BLOCK_LENGTH /;"	d	file:
BLOCK_SIZE	lib/klib/test/khash_keith.c	/^#define BLOCK_SIZE /;"	d	file:
BUFFER_OFFSET	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^#define BUFFER_OFFSET(i) ((char *)NULL + (i))$/;"	M
BUF_SIZE	lib/klib/kopen.c	/^#define BUF_SIZE /;"	d	file:
BUF_SIZE	lib/klib/test/kseq_bench.c	/^#define BUF_SIZE /;"	d	file:
BUF_SIZE	lib/klib/test/kseq_bench2.c	/^#define BUF_SIZE /;"	d	file:
BackendFlags	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags  BackendFlags;        \/\/ = 0                  \/\/ Set ImGuiBackendFlags/;"	m	struct:ImGuiIO	typeref:typename:ImGuiBackendFlags
Backup	lib/cimgui/imgui/imgui_internal.h	/^    void Backup()        { ImGuiWindow* window = GImGui->CurrentWindow; LastItemId = window->DC./;"	f	struct:ImGuiItemHoveredDataBackup	typeref:typename:void
BackupActiveIdIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    bool        BackupActiveIdIsAlive;$/;"	m	struct:ImGuiGroupData	typeref:typename:bool
BackupCurrentLineHeight	lib/cimgui/imgui/imgui_internal.h	/^    float       BackupCurrentLineHeight;$/;"	m	struct:ImGuiGroupData	typeref:typename:float
BackupCurrentLineTextBaseOffset	lib/cimgui/imgui/imgui_internal.h	/^    float       BackupCurrentLineTextBaseOffset;$/;"	m	struct:ImGuiGroupData	typeref:typename:float
BackupCursorMaxPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      BackupCursorMaxPos;$/;"	m	struct:ImGuiGroupData	typeref:typename:ImVec2
BackupCursorPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      BackupCursorPos;$/;"	m	struct:ImGuiGroupData	typeref:typename:ImVec2
BackupFloat	lib/cimgui/imgui/imgui_internal.h	/^    union           { int BackupInt[2]; float BackupFloat[2]; };$/;"	m	union:ImGuiStyleMod::__anoned4859cf010a	typeref:typename:float[2]
BackupGroupOffsetX	lib/cimgui/imgui/imgui_internal.h	/^    float       BackupGroupOffsetX;$/;"	m	struct:ImGuiGroupData	typeref:typename:float
BackupIndentX	lib/cimgui/imgui/imgui_internal.h	/^    float       BackupIndentX;$/;"	m	struct:ImGuiGroupData	typeref:typename:float
BackupInt	lib/cimgui/imgui/imgui_internal.h	/^    union           { int BackupInt[2]; float BackupFloat[2]; };$/;"	m	union:ImGuiStyleMod::__anoned4859cf010a	typeref:typename:int[2]
BackupLogLinePosY	lib/cimgui/imgui/imgui_internal.h	/^    float       BackupLogLinePosY;$/;"	m	struct:ImGuiGroupData	typeref:typename:float
BackupValue	lib/cimgui/imgui/imgui_internal.h	/^    ImVec4      BackupValue;$/;"	m	struct:ImGuiColMod	typeref:typename:ImVec4
Begin	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Begin(const char* name, bool* p_open, ImGuiWindowFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
Begin	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Begin(const char* name, bool* p_open, const ImVec2& size_first_use, float bg_alpha_o/;"	f	class:ImGui	typeref:typename:bool
Begin	lib/cimgui/imgui/imgui.cpp	/^void ImGuiListClipper::Begin(int count, float items_height)$/;"	f	class:ImGuiListClipper	typeref:typename:void
BeginChild	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginChild(ImGuiID id, const ImVec2& size_arg, bool border, ImGuiWindowFlags extra_f/;"	f	class:ImGui	typeref:typename:bool
BeginChild	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginChild(const char* str_id, const ImVec2& size_arg, bool border, ImGuiWindowFlags/;"	f	class:ImGui	typeref:typename:bool
BeginChildEx	lib/cimgui/imgui/imgui.cpp	/^static bool BeginChildEx(const char* name, ImGuiID id, const ImVec2& size_arg, bool border, ImGu/;"	f	typeref:typename:bool	file:
BeginChildFrame	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginChildFrame(ImGuiID id, const ImVec2& size, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui	typeref:typename:bool
BeginColumns	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BeginColumns(const char* str_id, int columns_count, ImGuiColumnsFlags flags)$/;"	f	class:ImGui	typeref:typename:void
BeginCombo	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginCombo(const char* label, const char* preview_value, ImGuiComboFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
BeginCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     BeginCount;                         \/\/ Number of Begin() during th/;"	m	struct:ImGuiWindow	typeref:typename:int
BeginDragDropSource	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginDragDropSource(ImGuiDragDropFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
BeginDragDropTarget	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginDragDropTarget()$/;"	f	class:ImGui	typeref:typename:bool
BeginDragDropTargetCustom	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginDragDropTargetCustom(const ImRect& bb, ImGuiID id)$/;"	f	class:ImGui	typeref:typename:bool
BeginGroup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BeginGroup()$/;"	f	class:ImGui	typeref:typename:void
BeginMainMenuBar	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginMainMenuBar()$/;"	f	class:ImGui	typeref:typename:bool
BeginMenu	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginMenu(const char* label, bool enabled)$/;"	f	class:ImGui	typeref:typename:bool
BeginMenuBar	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginMenuBar()$/;"	f	class:ImGui	typeref:typename:bool
BeginOrderWithinContext	lib/cimgui/imgui/imgui_internal.h	/^    int                     BeginOrderWithinContext;            \/\/ Order within entire imgui c/;"	m	struct:ImGuiWindow	typeref:typename:int
BeginOrderWithinParent	lib/cimgui/imgui/imgui_internal.h	/^    int                     BeginOrderWithinParent;             \/\/ Order within immediate pare/;"	m	struct:ImGuiWindow	typeref:typename:int
BeginPopup	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopup(const char* str_id, ImGuiWindowFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
BeginPopupContextItem	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupContextItem(const char* str_id, int mouse_button)$/;"	f	class:ImGui	typeref:typename:bool
BeginPopupContextVoid	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupContextVoid(const char* str_id, int mouse_button)$/;"	f	class:ImGui	typeref:typename:bool
BeginPopupContextWindow	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupContextWindow(const char* str_id, int mouse_button, bool also_over_items)$/;"	f	class:ImGui	typeref:typename:bool
BeginPopupEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupEx(ImGuiID id, ImGuiWindowFlags extra_flags)$/;"	f	class:ImGui	typeref:typename:bool
BeginPopupModal	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::BeginPopupModal(const char* name, bool* p_open, ImGuiWindowFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
BeginTooltip	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BeginTooltip()$/;"	f	class:ImGui	typeref:typename:void
BeginTooltipEx	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BeginTooltipEx(ImGuiWindowFlags extra_flags, bool override_previous_tooltip)$/;"	f	class:ImGui	typeref:typename:void
BgAlphaCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               BgAlphaCond;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiCond
BgAlphaVal	lib/cimgui/imgui/imgui_internal.h	/^    float                   BgAlphaVal;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:float
Big	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s	struct:nk_alignof
Big	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s	struct:nk_alignof
BlendFactor	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        FLOAT                       BlendFactor[4];$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:FLOAT[4]	file:
BlendFactor	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        FLOAT                       BlendFactor[4];$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:FLOAT[4]	file:
BlendState	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10BlendState*           BlendState;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10BlendState *	file:
BlendState	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11BlendState*           BlendState;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11BlendState *	file:
BlitGlyph	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    void FreeTypeFont::BlitGlyph(FT_BitmapGlyph ft_bitmap, uint8_t* dst, uint32_t dst_pitch, uns/;"	f	class:__anon71f5b57f0110::FreeTypeFont	typeref:typename:void
Bold	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        Bold            = 1 << 5,   \/\/ Styling: Should we artificially embolden the font?$/;"	e	enum:ImGuiFreeType::RasterizerFlags
BoyerMoore	lib/klib/test/kstring_bench2.c	/^char *BoyerMoore( unsigned char *data, unsigned int dataLength, unsigned char *string, unsigned /;"	f	typeref:typename:char *
BringWindowToBack	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BringWindowToBack(ImGuiWindow* window)$/;"	f	class:ImGui	typeref:typename:void
BringWindowToFront	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BringWindowToFront(ImGuiWindow* window)$/;"	f	class:ImGui	typeref:typename:void
Buf	lib/cimgui/cimgui/cimgui.h	/^    char *Buf;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:char *
Buf	lib/cimgui/imgui/imgui.h	/^    ImVector<char>      Buf;$/;"	m	struct:ImGuiTextBuffer	typeref:typename:ImVector<char>
Buf	lib/cimgui/imgui/imgui.h	/^    char*               Buf;            \/\/ Current text buffer                  \/\/ Read-writ/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:char *
Buf	lib/cimgui/imgui/imgui_demo.cpp	/^    ImGuiTextBuffer     Buf;$/;"	m	struct:ExampleAppLog	typeref:typename:ImGuiTextBuffer	file:
BufDirty	lib/cimgui/cimgui/cimgui.h	/^    bool BufDirty;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:bool
BufDirty	lib/cimgui/imgui/imgui.h	/^    bool                BufDirty;       \/\/ Set if you modify Buf\/BufTextLen!!   \/\/ Write$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:bool
BufSize	lib/cimgui/cimgui/cimgui.h	/^    int BufSize;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
BufSize	lib/cimgui/imgui/imgui.h	/^    int                 BufSize;        \/\/ Maximum text length in bytes         \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
BufSizeA	lib/cimgui/imgui/imgui_internal.h	/^    int                 BufSizeA;                   \/\/ end-user buffer size$/;"	m	struct:ImGuiTextEditState	typeref:typename:int
BufTextLen	lib/cimgui/cimgui/cimgui.h	/^    int BufTextLen;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
BufTextLen	lib/cimgui/imgui/imgui.h	/^    int                 BufTextLen;     \/\/ Current text length in bytes         \/\/ Read-writ/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
Build	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextFilter::Build()$/;"	f	class:ImGuiTextFilter	typeref:typename:void
Build	lib/cimgui/imgui/imgui_draw.cpp	/^bool    ImFontAtlas::Build()$/;"	f	class:ImFontAtlas	typeref:typename:bool
BuildFontAtlas	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^bool ImGuiFreeType::BuildFontAtlas(ImFontAtlas* atlas, unsigned int extra_flags)$/;"	f	class:ImGuiFreeType	typeref:typename:bool
BuildLookupTable	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::BuildLookupTable()$/;"	f	class:ImFont	typeref:typename:void
BuildRanges	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlas::GlyphRangesBuilder::BuildRanges(ImVector<ImWchar>* out_ranges)$/;"	f	class:ImFontAtlas::GlyphRangesBuilder	typeref:typename:void
BuildSortByKey	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::BuildSortByKey()$/;"	f	class:ImGuiStorage	typeref:typename:void
Bullet	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Bullet()$/;"	f	class:ImGui	typeref:typename:void
BulletText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BulletText(const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
BulletTextV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::BulletTextV(const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:void
Button	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Button(const char* label, const ImVec2& size_arg)$/;"	f	class:ImGui	typeref:typename:bool
ButtonBehavior	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ButtonBehavior(const ImRect& bb, ImGuiID id, bool* out_hovered, bool* out_held, ImGu/;"	f	class:ImGui	typeref:typename:bool
ButtonEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ButtonEx(const char* label, const ImVec2& size_arg, ImGuiButtonFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
ButtonTextAlign	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 ButtonTextAlign;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
ButtonTextAlign	lib/cimgui/imgui/imgui.h	/^    ImVec2      ButtonTextAlign;            \/\/ Alignment of button text when button is larger /;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
C	lib/nuklear/demo/overview.c	/^            enum options {A,B,C};$/;"	e	enum:overview::options	file:
CALLBACK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^ #define CALLBACK /;"	d
CALLOC	lib/klib/test/kavl_test.c	/^#define CALLOC(/;"	d	file:
CASE	lib/nuklear/example/stb_image.h	/^         #define CASE(/;"	d
CASE	lib/nuklear/example/stb_image.h	/^      #define CASE(/;"	d
CC	lib/klib/test/Makefile	/^CC=gcc$/;"	m
CC	lib/nuklear/demo/sfml_opengl2/Makefile	/^CC = g++$/;"	m
CC	lib/nuklear/demo/sfml_opengl3/Makefile	/^CC = g++$/;"	m
CC	lib/nuklear/demo/x11_opengl2/Makefile	/^CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl2/Makefile	/^clang: CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl2/Makefile	/^gcc: CC = gcc$/;"	m
CC	lib/nuklear/demo/x11_opengl3/Makefile	/^CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl3/Makefile	/^clang: CC = clang$/;"	m
CC	lib/nuklear/demo/x11_opengl3/Makefile	/^gcc: CC = gcc$/;"	m
CFBundleDevelopmentRegion	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleDevelopmentRegion<\/key>$/;"	k
CFBundleDevelopmentRegion	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleDevelopmentRegion<\/key>$/;"	k
CFBundleExecutable	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleExecutable<\/key>$/;"	k
CFBundleExecutable	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleExecutable<\/key>$/;"	k
CFBundleIconFile	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleIconFile<\/key>$/;"	k
CFBundleIdentifier	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleIdentifier<\/key>$/;"	k
CFBundleIdentifier	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleIdentifier<\/key>$/;"	k
CFBundleInfoDictionaryVersion	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleInfoDictionaryVersion<\/key>$/;"	k
CFBundleInfoDictionaryVersion	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleInfoDictionaryVersion<\/key>$/;"	k
CFBundleName	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleName<\/key>$/;"	k
CFBundleName	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleName<\/key>$/;"	k
CFBundlePackageType	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundlePackageType<\/key>$/;"	k
CFBundlePackageType	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundlePackageType<\/key>$/;"	k
CFBundleShortVersionString	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleShortVersionString<\/key>$/;"	k
CFBundleShortVersionString	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleShortVersionString<\/key>$/;"	k
CFBundleSignature	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleSignature<\/key>$/;"	k
CFBundleSignature	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleSignature<\/key>$/;"	k
CFBundleVersion	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>CFBundleVersion<\/key>$/;"	k
CFBundleVersion	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>CFBundleVersion<\/key>$/;"	k
CFLAGS	lib/cimgui/cimgui/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^   CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^   CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^   CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^	CFLAGS = $(CXXFLAGS)$/;"	m
CFLAGS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^   CFLAGS = $(CXXFLAGS)$/;"	m
CHART_HISTO	lib/nuklear/demo/overview.c	/^                enum chart_type {CHART_LINE, CHART_HISTO, CHART_MIXED};$/;"	e	enum:overview::chart_type	file:
CHART_LINE	lib/nuklear/demo/overview.c	/^                enum chart_type {CHART_LINE, CHART_HISTO, CHART_MIXED};$/;"	e	enum:overview::chart_type	file:
CHART_MIXED	lib/nuklear/demo/overview.c	/^                enum chart_type {CHART_LINE, CHART_HISTO, CHART_MIXED};$/;"	e	enum:overview::chart_type	file:
CIMGUI_API	lib/cimgui/cimgui/cimgui.h	/^#define CIMGUI_API /;"	d
CIMGUI_DEFINE_ENUMS_AND_STRUCTS	src/Gui.c	/^#define CIMGUI_DEFINE_ENUMS_AND_STRUCTS$/;"	d	file:
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/peko\/lab\/bbgl\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/peko\/lab\/bbgl$/;"	m
COBJMACROS	lib/nuklear/demo/d3d11/main.c	/^#define COBJMACROS$/;"	d	file:
COBJMACROS	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^#define COBJMACROS$/;"	d
COBJMACROS	lib/nuklear/demo/d3d9/main.c	/^#define COBJMACROS$/;"	d	file:
COBJMACROS	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^#define COBJMACROS$/;"	d
COL_HSV	lib/nuklear/demo/overview.c	/^                    enum color_mode {COL_RGB, COL_HSV};$/;"	e	enum:overview::color_mode	file:
COL_RGB	lib/nuklear/demo/overview.c	/^                    enum color_mode {COL_RGB, COL_HSV};$/;"	e	enum:overview::color_mode	file:
COMBO	lib/nuklear/example/stb_image.h	/^      #define COMBO(/;"	d
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_ID /;"	d	file:
COMPILER_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_ID /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_INTERNAL	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_INTERNAL /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MAJOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_MINOR /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^  # define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#   define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_PATCH /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define COMPILER_VERSION_TWEAK /;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define COMPILER_VERSION_TWEAK /;"	d	file:
CONST	lib/cimgui/cimgui/cimgui.h	/^#define CONST /;"	d
CUSTOMVERTEX	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^struct CUSTOMVERTEX$/;"	s	file:
CXX	lib/klib/test/Makefile	/^CXX=g++$/;"	m
CXXFLAGS	lib/cimgui/cimgui/Makefile	/^CXXFLAGS=-O2$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^	CXXFLAGS = -I..\/..\/ -I\/usr\/local\/include$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^	CXXFLAGS = -I..\/..\/ `pkg-config --cflags glfw3`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^   CXXFLAGS = -I..\/..\/ -I..\/libs\/gl3w `pkg-config --cflags glfw3`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^	CXXFLAGS = -I..\/..\/ -I..\/libs\/gl3w -I\/usr\/local\/include$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^	CXXFLAGS = -I..\/..\/ -I..\/libs\/gl3w `pkg-config --cflags glfw3`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^   CXXFLAGS = -I..\/..\/ -I..\/libs\/gl3w `pkg-config --cflags glfw3`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^	CXXFLAGS = -I..\/..\/  `sdl2-config --cflags`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^	CXXFLAGS = -I..\/..\/ -I\/usr\/local\/include `sdl2-config --cflags`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^   CXXFLAGS = -I..\/..\/ `pkg-config --cflags sdl2`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^	CXXFLAGS = -I..\/..\/ -I..\/libs\/gl3w -I\/usr\/local\/include `sdl2-config --cflags`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^	CXXFLAGS = -I..\/..\/ -I..\/libs\/gl3w `sdl2-config --cflags`$/;"	m
CXXFLAGS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^   CXXFLAGS = -I..\/..\/ -I..\/libs\/gl3w `pkg-config --cflags sdl2`$/;"	m
CXXFLAGS	lib/klib/test/Makefile	/^CXXFLAGS=$(CFLAGS)$/;"	m
CXX_STD	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define CXX_STD /;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT /;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define C_DIALECT$/;"	d	file:
C_DIALECT	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define C_DIALECT /;"	d	file:
CalcCustomRectUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlas::CalcCustomRectUV(const CustomRect* rect, ImVec2* out_uv_min, ImVec2* out_uv_ma/;"	f	class:ImFontAtlas	typeref:typename:void
CalcExtraSpace	lib/cimgui/imgui/imgui.cpp	/^float ImGuiMenuColumns::CalcExtraSpace(float avail_w)$/;"	f	class:ImGuiMenuColumns	typeref:typename:float
CalcFontSize	lib/cimgui/imgui/imgui_internal.h	/^    float       CalcFontSize() const                    { return GImGui->FontBaseSize * FontWind/;"	f	struct:ImGuiWindow	typeref:typename:float
CalcGlyphInfo	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    bool FreeTypeFont::CalcGlyphInfo(uint32_t codepoint, GlyphInfo &glyph_info, FT_Glyph& ft_gly/;"	f	class:__anon71f5b57f0110::FreeTypeFont	typeref:typename:bool
CalcItemRectClosestPoint	lib/cimgui/imgui/imgui.h	/^    static inline ImVec2 CalcItemRectClosestPoint(const ImVec2& pos, bool on_edge = false, float/;"	f	namespace:ImGui	typeref:typename:ImVec2
CalcItemSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::CalcItemSize(ImVec2 size, float default_x, float default_y)$/;"	f	class:ImGui	typeref:typename:ImVec2
CalcItemWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::CalcItemWidth()$/;"	f	class:ImGui	typeref:typename:float
CalcListClipping	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CalcListClipping(int items_count, float items_height, int* out_items_display_start, /;"	f	class:ImGui	typeref:typename:void
CalcMaxPopupHeightFromItemCount	lib/cimgui/imgui/imgui.cpp	/^static float CalcMaxPopupHeightFromItemCount(int items_count)$/;"	f	typeref:typename:float	file:
CalcNextScrollFromScrollTargetAndClamp	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcNextScrollFromScrollTargetAndClamp(ImGuiWindow* window)$/;"	f	typeref:typename:ImVec2	file:
CalcResizePosSizeFromAnyCorner	lib/cimgui/imgui/imgui.cpp	/^static void CalcResizePosSizeFromAnyCorner(ImGuiWindow* window, const ImVec2& corner_target, con/;"	f	typeref:typename:void	file:
CalcSizeAfterConstraint	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcSizeAfterConstraint(ImGuiWindow* window, ImVec2 new_size)$/;"	f	typeref:typename:ImVec2	file:
CalcSizeAutoFit	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcSizeAutoFit(ImGuiWindow* window, const ImVec2& size_contents)$/;"	f	typeref:typename:ImVec2	file:
CalcSizeContents	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 CalcSizeContents(ImGuiWindow* window)$/;"	f	typeref:typename:ImVec2	file:
CalcTextSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::CalcTextSize(const char* text, const char* text_end, bool hide_text_after_double_h/;"	f	class:ImGui	typeref:typename:ImVec2
CalcTextSizeA	lib/cimgui/imgui/imgui_draw.cpp	/^ImVec2 ImFont::CalcTextSizeA(float size, float max_width, float wrap_width, const char* text_beg/;"	f	class:ImFont	typeref:typename:ImVec2
CalcTypematicPressedRepeatAmount	lib/cimgui/imgui/imgui.cpp	/^int ImGui::CalcTypematicPressedRepeatAmount(float t, float t_prev, float repeat_delay, float rep/;"	f	class:ImGui	typeref:typename:int
CalcWordWrapPositionA	lib/cimgui/imgui/imgui_draw.cpp	/^const char* ImFont::CalcWordWrapPositionA(float scale, const char* text, const char* text_end, f/;"	f	class:ImFont	typeref:typename:const char *
CalcWrapWidthForPos	lib/cimgui/imgui/imgui.cpp	/^float ImGui::CalcWrapWidthForPos(const ImVec2& pos, float wrap_pos_x)$/;"	f	class:ImGui	typeref:typename:float
Capacity	lib/cimgui/imgui/imgui.h	/^    int                         Capacity;$/;"	m	class:ImVector	typeref:typename:int
CaptureKeyboardFromApp	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CaptureKeyboardFromApp(bool capture)$/;"	f	class:ImGui	typeref:typename:void
CaptureMouseFromApp	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CaptureMouseFromApp(bool capture)$/;"	f	class:ImGui	typeref:typename:void
ChannelsMerge	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::ChannelsMerge()$/;"	f	class:ImDrawList	typeref:typename:void
ChannelsSetCurrent	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::ChannelsSetCurrent(int idx)$/;"	f	class:ImDrawList	typeref:typename:void
ChannelsSplit	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::ChannelsSplit(int channels_count)$/;"	f	class:ImDrawList	typeref:typename:void
CheckStacksSize	lib/cimgui/imgui/imgui.cpp	/^static void CheckStacksSize(ImGuiWindow* window, bool write)$/;"	f	typeref:typename:void	file:
Checkbox	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Checkbox(const char* label, bool* v)$/;"	f	class:ImGui	typeref:typename:bool
CheckboxFlags	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::CheckboxFlags(const char* label, unsigned int* flags, unsigned int flags_value)$/;"	f	class:ImGui	typeref:typename:bool
ChildBorderSize	lib/cimgui/cimgui/cimgui.h	/^    float ChildBorderSize;$/;"	m	struct:ImGuiStyle	typeref:typename:float
ChildBorderSize	lib/cimgui/imgui/imgui.h	/^    float       ChildBorderSize;            \/\/ Thickness of border around child windows. Gener/;"	m	struct:ImGuiStyle	typeref:typename:float
ChildId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ChildId;                            \/\/ Id of corresponding item in/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiID
ChildRounding	lib/cimgui/cimgui/cimgui.h	/^    float ChildRounding;$/;"	m	struct:ImGuiStyle	typeref:typename:float
ChildRounding	lib/cimgui/imgui/imgui.h	/^    float       ChildRounding;              \/\/ Radius of child window corners rounding. Set to/;"	m	struct:ImGuiStyle	typeref:typename:float
ChildWindowComparer	lib/cimgui/imgui/imgui.cpp	/^static int IMGUI_CDECL ChildWindowComparer(const void* lhs, const void* rhs)$/;"	f	typeref:typename:int IMGUI_CDECL	file:
ChildWindows	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  ChildWindows;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVector<ImGuiWindow * >
CircleVtx12	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2          CircleVtx12[12];$/;"	m	struct:ImDrawListSharedData	typeref:typename:ImVec2[12]
CleanupDeviceD3D	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^void CleanupDeviceD3D()$/;"	f	typeref:typename:void
CleanupDeviceD3D	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^void CleanupDeviceD3D()$/;"	f	typeref:typename:void
CleanupDeviceD3D	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^void CleanupDeviceD3D()$/;"	f	typeref:typename:void
CleanupRenderTarget	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^void CleanupRenderTarget()$/;"	f	typeref:typename:void
CleanupRenderTarget	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^void CleanupRenderTarget()$/;"	f	typeref:typename:void
CleanupRenderTarget	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^void CleanupRenderTarget()$/;"	f	typeref:typename:void
Clear	lib/cimgui/imgui/imgui.h	/^    void                Clear() { Data.clear(); }$/;"	f	struct:ImGuiStorage	typeref:typename:void
Clear	lib/cimgui/imgui/imgui.h	/^    void                Clear() { InputBuf[0] = 0; Build(); }$/;"	f	struct:ImGuiTextFilter	typeref:typename:void
Clear	lib/cimgui/imgui/imgui.h	/^    void Clear()    { SourceId = SourceParentId = 0; Data = NULL; DataSize = 0; memset(DataType,/;"	f	struct:ImGuiPayload	typeref:typename:void
Clear	lib/cimgui/imgui/imgui.h	/^    void Clear()    { Valid = false; CmdLists = NULL; CmdListsCount = TotalVtxCount = TotalIdxCo/;"	f	struct:ImDrawData	typeref:typename:void
Clear	lib/cimgui/imgui/imgui_demo.cpp	/^    void    Clear()     { Buf.clear(); LineOffsets.clear(); }$/;"	f	struct:ExampleAppLog	typeref:typename:void	file:
Clear	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::Clear()$/;"	f	class:ImFontAtlas	typeref:typename:void
Clear	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::Clear()$/;"	f	class:ImDrawList	typeref:typename:void
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void    Clear()$/;"	f	struct:ImGuiNextWindowData	typeref:typename:void
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void Clear()            { for (int n = 0; n < IM_ARRAYSIZE(Layers); n++) Layers[n].resize(0)/;"	f	struct:ImDrawDataBuilder	typeref:typename:void
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void Clear()         { ID = ParentID = 0; Window = NULL; DistBox = DistCenter = DistAxial = /;"	f	struct:ImGuiNavMoveResult	typeref:typename:void
Clear	lib/cimgui/imgui/imgui_internal.h	/^    void Clear()$/;"	f	struct:ImGuiColumnsSet	typeref:typename:void
ClearActiveID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClearActiveID()$/;"	f	class:ImGui	typeref:typename:void
ClearDragDrop	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClearDragDrop()$/;"	f	class:ImGui	typeref:typename:void
ClearFonts	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::ClearFonts()$/;"	f	class:ImFontAtlas	typeref:typename:void
ClearFreeMemory	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::ClearFreeMemory()$/;"	f	class:ImDrawList	typeref:typename:void
ClearFreeMemory	lib/cimgui/imgui/imgui_internal.h	/^    void ClearFreeMemory()  { for (int n = 0; n < IM_ARRAYSIZE(Layers); n++) Layers[n].clear(); /;"	f	struct:ImDrawDataBuilder	typeref:typename:void
ClearInputCharacters	lib/cimgui/imgui/imgui.h	/^    inline void    ClearInputCharacters() { InputCharacters[0] = 0; }   \/\/ Clear the text inpu/;"	f	struct:ImGuiIO	typeref:typename:void
ClearInputData	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::ClearInputData()$/;"	f	class:ImFontAtlas	typeref:typename:void
ClearLog	lib/cimgui/imgui/imgui_demo.cpp	/^    void    ClearLog()$/;"	f	struct:ExampleAppConsole	typeref:typename:void	file:
ClearOutputData	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFont::ClearOutputData()$/;"	f	class:ImFont	typeref:typename:void
ClearSelection	lib/cimgui/imgui/imgui_internal.h	/^    void                ClearSelection()            { StbState.select_start = StbState.select_en/;"	f	struct:ImGuiTextEditState	typeref:typename:void
ClearTexData	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::ClearTexData()$/;"	f	class:ImFontAtlas	typeref:typename:void
ClipRect	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec4 ClipRect;$/;"	m	struct:ImDrawCmd	typeref:struct:ImVec4
ClipRect	lib/cimgui/imgui/imgui.h	/^    ImVec4          ClipRect;               \/\/ Clipping rectangle (x1, y1, x2, y2)$/;"	m	struct:ImDrawCmd	typeref:typename:ImVec4
ClipRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  ClipRect;                           \/\/ = DrawList->clip_rect_stack/;"	m	struct:ImGuiWindow	typeref:typename:ImRect
ClipRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect              ClipRect;$/;"	m	struct:ImGuiColumnData	typeref:typename:ImRect
ClipRectFullscreen	lib/cimgui/imgui/imgui_internal.h	/^    ImVec4          ClipRectFullscreen;         \/\/ Value for PushClipRectFullscreen()$/;"	m	struct:ImDrawListSharedData	typeref:typename:ImVec4
ClipWith	lib/cimgui/imgui/imgui_internal.h	/^    void        ClipWith(const ImRect& r)           { Min = ImMax(Min, r.Min); Max = ImMin(Max, /;"	f	struct:ImRect	typeref:typename:void
ClipWithFull	lib/cimgui/imgui/imgui_internal.h	/^    void        ClipWithFull(const ImRect& r)       { Min = ImClamp(Min, r.Min, r.Max); Max = Im/;"	f	struct:ImRect	typeref:typename:void
ClipboardUserData	lib/cimgui/cimgui/cimgui.h	/^    void *ClipboardUserData;$/;"	m	struct:ImGuiIO	typeref:typename:void *
ClipboardUserData	lib/cimgui/imgui/imgui.h	/^    void*       ClipboardUserData;$/;"	m	struct:ImGuiIO	typeref:typename:void *
CloneOutput	lib/cimgui/imgui/imgui_draw.cpp	/^ImDrawList* ImDrawList::CloneOutput() const$/;"	f	class:ImDrawList	typeref:typename:ImDrawList *
CloseButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::CloseButton(ImGuiID id, const ImVec2& pos, float radius)$/;"	f	class:ImGui	typeref:typename:bool
CloseButton	lib/cimgui/imgui/imgui_internal.h	/^    bool                    CloseButton;                        \/\/ Set when the window has a c/;"	m	struct:ImGuiWindow	typeref:typename:bool
CloseCurrentPopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::CloseCurrentPopup()$/;"	f	class:ImGui	typeref:typename:void
ClosePopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClosePopup(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:void
ClosePopupToLevel	lib/cimgui/imgui/imgui.cpp	/^static void ClosePopupToLevel(int remaining)$/;"	f	typeref:typename:void	file:
ClosePopupsOverWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ClosePopupsOverWindow(ImGuiWindow* ref_window)$/;"	f	class:ImGui	typeref:typename:void
CmdBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawCmd>     CmdBuffer;          \/\/ Draw commands. Typically 1 command = 1 GPU /;"	m	struct:ImDrawList	typeref:typename:ImVector<ImDrawCmd>
CmdBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawCmd>     CmdBuffer;$/;"	m	struct:ImDrawChannel	typeref:typename:ImVector<ImDrawCmd>
CmdLists	lib/cimgui/cimgui/cimgui.h	/^    struct ImDrawList **CmdLists;$/;"	m	struct:ImDrawData	typeref:struct:ImDrawList **
CmdLists	lib/cimgui/imgui/imgui.h	/^    ImDrawList**    CmdLists;               \/\/ Array of ImDrawList* to render. The ImDrawList /;"	m	struct:ImDrawData	typeref:typename:ImDrawList **
CmdListsCount	lib/cimgui/cimgui/cimgui.h	/^    int CmdListsCount;$/;"	m	struct:ImDrawData	typeref:typename:int
CmdListsCount	lib/cimgui/imgui/imgui.h	/^    int             CmdListsCount;          \/\/ Number of ImDrawList* to render$/;"	m	struct:ImDrawData	typeref:typename:int
Codepoint	lib/cimgui/imgui/imgui.h	/^    ImWchar         Codepoint;          \/\/ 0x0000..0xFFFF$/;"	m	struct:ImFontGlyph	typeref:typename:ImWchar
Col	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCol    Col;$/;"	m	struct:ImGuiColMod	typeref:typename:ImGuiCol
CollapseToggleWanted	lib/cimgui/imgui/imgui_internal.h	/^    bool                    CollapseToggleWanted;$/;"	m	struct:ImGuiWindow	typeref:typename:bool
Collapsed	bin/imgui.ini	/^Collapsed=0$/;"	k	section:Window
Collapsed	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Collapsed;                          \/\/ Set when collapsing window /;"	m	struct:ImGuiWindow	typeref:typename:bool
Collapsed	lib/cimgui/imgui/imgui_internal.h	/^    bool        Collapsed;$/;"	m	struct:ImGuiWindowSettings	typeref:typename:bool
CollapsedCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               CollapsedCond;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiCond
CollapsedVal	lib/cimgui/imgui/imgui_internal.h	/^    bool                    CollapsedVal;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:bool
CollapsingHeader	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::CollapsingHeader(const char* label, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
CollapsingHeader	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::CollapsingHeader(const char* label, bool* p_open, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
CollapsingHeader	lib/cimgui/imgui/imgui.h	/^    static inline bool  CollapsingHeader(const char* label, const char* str_id, bool framed = tr/;"	f	namespace:ImGui	typeref:typename:bool
ColorButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ColorButton(const char* desc_id, const ImVec4& col, ImGuiColorEditFlags flags, ImVec/;"	f	class:ImGui	typeref:typename:bool
ColorConvertFloat4ToU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::ColorConvertFloat4ToU32(const ImVec4& in)$/;"	f	class:ImGui	typeref:typename:ImU32
ColorConvertHSVtoRGB	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ColorConvertHSVtoRGB(float h, float s, float v, float& out_r, float& out_g, float& o/;"	f	class:ImGui	typeref:typename:void
ColorConvertRGBtoHSV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ColorConvertRGBtoHSV(float r, float g, float b, float& out_h, float& out_s, float& o/;"	f	class:ImGui	typeref:typename:void
ColorConvertU32ToFloat4	lib/cimgui/imgui/imgui.cpp	/^ImVec4 ImGui::ColorConvertU32ToFloat4(ImU32 in)$/;"	f	class:ImGui	typeref:typename:ImVec4
ColorEdit3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ColorEdit3(const char* label, float col[3], ImGuiColorEditFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
ColorEdit4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ColorEdit4(const char* label, float col[4], ImGuiColorEditFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
ColorEditOptions	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColorEditFlags     ColorEditOptions;                   \/\/ Store user options for colo/;"	m	struct:ImGuiContext	typeref:typename:ImGuiColorEditFlags
ColorEditOptionsPopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ColorEditOptionsPopup(const float* col, ImGuiColorEditFlags flags)$/;"	f	class:ImGui	typeref:typename:void
ColorModifiers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiColMod>   ColorModifiers;                     \/\/ Stack for PushStyleColor()\//;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiColMod>
ColorPicker3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ColorPicker3(const char* label, float col[3], ImGuiColorEditFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
ColorPicker4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ColorPicker4(const char* label, float col[4], ImGuiColorEditFlags flags, const float/;"	f	class:ImGui	typeref:typename:bool
ColorPickerOptionsPopup	lib/cimgui/imgui/imgui.cpp	/^static void ColorPickerOptionsPopup(ImGuiColorEditFlags flags, const float* ref_col)$/;"	f	typeref:typename:void	file:
ColorPickerRef	lib/cimgui/imgui/imgui_internal.h	/^    ImVec4                  ColorPickerRef;$/;"	m	struct:ImGuiContext	typeref:typename:ImVec4
ColorTooltip	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ColorTooltip(const char* text, const float* col, ImGuiColorEditFlags flags)$/;"	f	class:ImGui	typeref:typename:void
Colors	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec4 Colors[ImGuiCol_COUNT];$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec4[]
Colors	lib/cimgui/imgui/imgui.h	/^    ImVec4      Colors[ImGuiCol_COUNT];$/;"	m	struct:ImGuiStyle	typeref:typename:ImVec4[]
Columns	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Columns(int columns_count, const char* id, bool border)$/;"	f	class:ImGui	typeref:typename:void
Columns	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiColumnData> Columns;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:ImVector<ImGuiColumnData>
ColumnsMinSpacing	lib/cimgui/cimgui/cimgui.h	/^    float ColumnsMinSpacing;$/;"	m	struct:ImGuiStyle	typeref:typename:float
ColumnsMinSpacing	lib/cimgui/imgui/imgui.h	/^    float       ColumnsMinSpacing;          \/\/ Minimum horizontal spacing between two columns.$/;"	m	struct:ImGuiStyle	typeref:typename:float
ColumnsOffsetX	lib/cimgui/imgui/imgui_internal.h	/^    float                   ColumnsOffsetX;         \/\/ Offset to the current column (if Column/;"	m	struct:ImGuiDrawContext	typeref:typename:float
ColumnsSet	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsSet*        ColumnsSet;             \/\/ Current columns set$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImGuiColumnsSet *
ColumnsStorage	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiColumnsSet> ColumnsStorage;$/;"	m	struct:ImGuiWindow	typeref:typename:ImVector<ImGuiColumnsSet>
CombineMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} CombineMode;$/;"	t	typeref:enum:__anon66f154fe0703
CombineModeComplement	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeComplement$/;"	e	enum:__anon66f154fe0703
CombineModeExclude	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeExclude,$/;"	e	enum:__anon66f154fe0703
CombineModeIntersect	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeIntersect,$/;"	e	enum:__anon66f154fe0703
CombineModeReplace	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeReplace,$/;"	e	enum:__anon66f154fe0703
CombineModeUnion	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeUnion,$/;"	e	enum:__anon66f154fe0703
CombineModeXor	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    CombineModeXor,$/;"	e	enum:__anon66f154fe0703
Combo	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Combo(const char* label, int* current_item, bool (*items_getter)(void*, int, const c/;"	f	class:ImGui	typeref:typename:bool
Combo	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Combo(const char* label, int* current_item, const char* const items[], int items_cou/;"	f	class:ImGui	typeref:typename:bool
Combo	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Combo(const char* label, int* current_item, const char* items_separated_by_zeros, in/;"	f	class:ImGui	typeref:typename:bool
CommandAllocator	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^    ID3D12CommandAllocator* CommandAllocator;$/;"	m	struct:FrameContext	typeref:typename:ID3D12CommandAllocator *	file:
Commands	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<const char*> Commands;$/;"	m	struct:ExampleAppConsole	typeref:typename:ImVector<const char * >	file:
ConfigData	lib/cimgui/imgui/imgui.h	/^    ImFontConfig*               ConfigData;         \/\/              \/\/ Pointer within Contai/;"	m	struct:ImFont	typeref:typename:ImFontConfig *
ConfigData	lib/cimgui/imgui/imgui.h	/^    ImVector<ImFontConfig>      ConfigData;         \/\/ Internal data$/;"	m	struct:ImFontAtlas	typeref:typename:ImVector<ImFontConfig>
ConfigDataCount	lib/cimgui/imgui/imgui.h	/^    short                       ConfigDataCount;    \/\/ ~ 1          \/\/ Number of ImFontConfi/;"	m	struct:ImFont	typeref:typename:short
ConfigFlags	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags   ConfigFlags;         \/\/ = 0                  \/\/ See ImGuiConfigFlags_/;"	m	struct:ImGuiIO	typeref:typename:ImGuiConfigFlags
ContainerAtlas	lib/cimgui/imgui/imgui.h	/^    ImFontAtlas*                ContainerAtlas;     \/\/              \/\/ What we has been load/;"	m	struct:ImFont	typeref:typename:ImFontAtlas *
Contains	lib/cimgui/imgui/imgui_internal.h	/^    bool        Contains(const ImRect& r) const     { return r.Min.x >= Min.x && r.Min.y >= Min./;"	f	struct:ImRect	typeref:typename:bool
Contains	lib/cimgui/imgui/imgui_internal.h	/^    bool        Contains(const ImVec2& p) const     { return p.x     >= Min.x && p.y     >= Min./;"	f	struct:ImRect	typeref:typename:bool
ContentSizeCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               ContentSizeCond;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiCond
ContentSizeVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ContentSizeVal;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImVec2
ContentsRegionRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  ContentsRegionRect;                 \/\/ Maximum visible content pos/;"	m	struct:ImGuiWindow	typeref:typename:ImRect
CornerPos	lib/cimgui/imgui/imgui.cpp	/^    ImVec2           CornerPos;$/;"	m	struct:ImGuiResizeGripDef	typeref:typename:ImVec2	file:
Count	lib/cimgui/imgui/imgui.cpp	/^    ImU32           Count;$/;"	m	struct:ImGuiStyleVarInfo	typeref:typename:ImU32	file:
Count	lib/cimgui/imgui/imgui_internal.h	/^    int                 Count;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:int
Count	lib/cimgui/imgui/imgui_internal.h	/^    int         Count;$/;"	m	struct:ImGuiMenuColumns	typeref:typename:int
CountGrep	lib/cimgui/imgui/imgui.h	/^    int                 CountGrep;$/;"	m	struct:ImGuiTextFilter	typeref:typename:int
Create	src/Drawable.c	/^Create() {$/;"	f	typeref:typename:Drawable *	file:
Create	src/Drawable.h	/^	Drawable* (*Create)();$/;"	m	struct:ADrawable	typeref:typename:Drawable * (*)()
Create	src/Scene.c	/^Create() {$/;"	f	typeref:typename:Scene *	file:
Create	src/Scene.h	/^	Scene* (*Create   )();$/;"	m	struct:AScene	typeref:typename:Scene * (*)()
Create	src/Shader.c	/^Create(char* name) {$/;"	f	typeref:typename:Shader *	file:
Create	src/Shader.h	/^   Shader* (*Create )(char*);$/;"	m	struct:AShader	typeref:typename:Shader * (*)(char *)
Create	src/Shape.c	/^Create() {$/;"	f	typeref:typename:Shape *	file:
Create	src/Shape.h	/^	Shape* (*Create )();$/;"	m	struct:AShape	typeref:typename:Shape * (*)()
CreateContext	lib/cimgui/imgui/imgui.cpp	/^ImGuiContext* ImGui::CreateContext(ImFontAtlas* shared_font_atlas)$/;"	f	class:ImGui	typeref:typename:ImGuiContext *
CreateDeviceD3D	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^HRESULT CreateDeviceD3D(HWND hWnd)$/;"	f	typeref:typename:HRESULT
CreateDeviceD3D	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^HRESULT CreateDeviceD3D(HWND hWnd)$/;"	f	typeref:typename:HRESULT
CreateDeviceD3D	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^HRESULT CreateDeviceD3D(HWND hWnd)$/;"	f	typeref:typename:HRESULT
CreateNewWindow	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* CreateNewWindow(const char* name, ImVec2 size, ImGuiWindowFlags flags)$/;"	f	typeref:typename:ImGuiWindow *	file:
CreateRenderTarget	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^void CreateRenderTarget()$/;"	f	typeref:typename:void
CreateRenderTarget	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^void CreateRenderTarget()$/;"	f	typeref:typename:void
CreateRenderTarget	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^void CreateRenderTarget()$/;"	f	typeref:typename:void
CurLenA	lib/cimgui/imgui/imgui_internal.h	/^    int                 CurLenA, CurLenW;           \/\/ we need to maintain our buffer length i/;"	m	struct:ImGuiTextEditState	typeref:typename:int
CurLenW	lib/cimgui/imgui/imgui_internal.h	/^    int                 CurLenA, CurLenW;           \/\/ we need to maintain our buffer length i/;"	m	struct:ImGuiTextEditState	typeref:typename:int
Current	lib/cimgui/imgui/imgui_internal.h	/^    int                 Current;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:int
CurrentLineHeight	lib/cimgui/imgui/imgui_internal.h	/^    float                   CurrentLineHeight;$/;"	m	struct:ImGuiDrawContext	typeref:typename:float
CurrentLineTextBaseOffset	lib/cimgui/imgui/imgui_internal.h	/^    float                   CurrentLineTextBaseOffset;$/;"	m	struct:ImGuiDrawContext	typeref:typename:float
CurrentPopupStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiPopupRef> CurrentPopupStack;                  \/\/ Which level of BeginPopup()/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiPopupRef>
CurrentSize	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 CurrentSize;$/;"	m	struct:ImGuiSizeCallbackData	typeref:struct:ImVec2
CurrentSize	lib/cimgui/imgui/imgui.h	/^    ImVec2  CurrentSize;    \/\/ Read-only.   Current window size.$/;"	m	struct:ImGuiSizeCallbackData	typeref:typename:ImVec2
CurrentWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            CurrentWindow;                      \/\/ Being drawn into$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiWindow *
CurrentWindowStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  CurrentWindowStack;$/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiWindow * >
CursorAnim	lib/cimgui/imgui/imgui_internal.h	/^    float               CursorAnim;$/;"	m	struct:ImGuiTextEditState	typeref:typename:float
CursorAnimReset	lib/cimgui/imgui/imgui_internal.h	/^    void                CursorAnimReset()           { CursorAnim = -0.30f; }                    /;"	f	struct:ImGuiTextEditState	typeref:typename:void
CursorClamp	lib/cimgui/imgui/imgui_internal.h	/^    void                CursorClamp()               { StbState.cursor = ImMin(StbState.cursor, C/;"	f	struct:ImGuiTextEditState	typeref:typename:void
CursorFollow	lib/cimgui/imgui/imgui_internal.h	/^    bool                CursorFollow;$/;"	m	struct:ImGuiTextEditState	typeref:typename:bool
CursorMaxPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorMaxPos;           \/\/ Used to implicitly calculate the size o/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVec2
CursorPos	lib/cimgui/cimgui/cimgui.h	/^    int CursorPos;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
CursorPos	lib/cimgui/imgui/imgui.h	/^    int                 CursorPos;      \/\/                                      \/\/ Read-writ/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
CursorPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorPos;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVec2
CursorPosPrevLine	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorPosPrevLine;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVec2
CursorStartPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  CursorStartPos;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVec2
CurveTessellationTol	lib/cimgui/cimgui/cimgui.h	/^    float CurveTessellationTol;$/;"	m	struct:ImGuiStyle	typeref:typename:float
CurveTessellationTol	lib/cimgui/imgui/imgui.h	/^    float       CurveTessellationTol;       \/\/ Tessellation tolerance when using PathBezierCur/;"	m	struct:ImGuiStyle	typeref:typename:float
CurveTessellationTol	lib/cimgui/imgui/imgui_internal.h	/^    float           CurveTessellationTol;$/;"	m	struct:ImDrawListSharedData	typeref:typename:float
CustomConstraints	lib/cimgui/imgui/imgui_demo.cpp	/^    struct CustomConstraints \/\/ Helper functions to demonstrate programmatic constraints$/;"	s	function:ShowExampleAppConstrainedResize	file:
CustomRect	lib/cimgui/imgui/imgui.h	/^        CustomRect()            { ID = 0xFFFFFFFF; Width = Height = 0; X = Y = 0xFFFF; GlyphAdva/;"	f	struct:ImFontAtlas::CustomRect
CustomRect	lib/cimgui/imgui/imgui.h	/^    struct CustomRect$/;"	s	struct:ImFontAtlas
CustomRectIds	lib/cimgui/imgui/imgui.h	/^    int                         CustomRectIds[1];   \/\/ Identifiers of custom texture rectangle/;"	m	struct:ImFontAtlas	typeref:typename:int[1]
CustomRects	lib/cimgui/imgui/imgui.h	/^    ImVector<CustomRect>        CustomRects;        \/\/ Rectangles for packing custom texture d/;"	m	struct:ImFontAtlas	typeref:typename:ImVector<CustomRect>
D3DFVF_CUSTOMVERTEX	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^#define D3DFVF_CUSTOMVERTEX /;"	d	file:
DC	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDrawContext        DC;                                 \/\/ Temporary per-window data, /;"	m	struct:ImGuiWindow	typeref:typename:ImGuiDrawContext
DCC	lib/nuklear/demo/x11_opengl2/Makefile	/^DCC = gcc$/;"	m
DCC	lib/nuklear/demo/x11_opengl3/Makefile	/^DCC = gcc$/;"	m
DEC	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#define DEC(/;"	d	file:
DEC	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define DEC(/;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^#define DIRECTINPUT_VERSION /;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^#define DIRECTINPUT_VERSION /;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^#define DIRECTINPUT_VERSION /;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^#define DIRECTINPUT_VERSION /;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^#define DIRECTINPUT_VERSION /;"	d	file:
DIRECTINPUT_VERSION	lib/cimgui/imgui/examples/directx9_example/main.cpp	/^#define DIRECTINPUT_VERSION /;"	d	file:
DTIME	lib/nuklear/demo/x11/main.c	/^#define DTIME /;"	d	file:
DTIME	lib/nuklear/demo/x11_rawfb/main.c	/^#define DTIME /;"	d	file:
DX12_ENABLE_DEBUG_LAYER	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^#define DX12_ENABLE_DEBUG_LAYER /;"	d	file:
Data	lib/cimgui/cimgui/cimgui.h	/^    CONST void *Data;$/;"	m	struct:ImGuiPayload	typeref:typename:CONST void *
Data	lib/cimgui/imgui/imgui.h	/^    ImVector<Pair>      Data;$/;"	m	struct:ImGuiStorage	typeref:typename:ImVector<Pair>
Data	lib/cimgui/imgui/imgui.h	/^    T*                          Data;$/;"	m	class:ImVector	typeref:typename:T *
Data	lib/cimgui/imgui/imgui.h	/^    const void*     Data;               \/\/ Data (copied and owned by dear imgui)$/;"	m	struct:ImGuiPayload	typeref:typename:const void *
DataFrameCount	lib/cimgui/cimgui/cimgui.h	/^    int DataFrameCount;$/;"	m	struct:ImGuiPayload	typeref:typename:int
DataFrameCount	lib/cimgui/imgui/imgui.h	/^    int             DataFrameCount;     \/\/ Data timestamp$/;"	m	struct:ImGuiPayload	typeref:typename:int
DataSize	lib/cimgui/cimgui/cimgui.h	/^    int DataSize;$/;"	m	struct:ImGuiPayload	typeref:typename:int
DataSize	lib/cimgui/imgui/imgui.h	/^    int             DataSize;           \/\/ Data size$/;"	m	struct:ImGuiPayload	typeref:typename:int
DataType	lib/cimgui/cimgui/cimgui.h	/^    char DataType[8 + 1];$/;"	m	struct:ImGuiPayload	typeref:typename:char[]
DataType	lib/cimgui/imgui/imgui.h	/^    char            DataType[32+1];     \/\/ Data type tag (short user-supplied string, 32 chara/;"	m	struct:ImGuiPayload	typeref:typename:char[]
DataTypeApplyOp	lib/cimgui/imgui/imgui.cpp	/^static void DataTypeApplyOp(ImGuiDataType data_type, int op, void* output, void* arg1, const voi/;"	f	typeref:typename:void	file:
DataTypeApplyOpFromText	lib/cimgui/imgui/imgui.cpp	/^static bool DataTypeApplyOpFromText(const char* buf, const char* initial_value_buf, ImGuiDataTyp/;"	f	typeref:typename:bool	file:
DataTypeFormatString	lib/cimgui/imgui/imgui.cpp	/^static inline void DataTypeFormatString(ImGuiDataType data_type, void* data_ptr, const char* dis/;"	f	typeref:typename:void	file:
DataTypeFormatString	lib/cimgui/imgui/imgui.cpp	/^static inline void DataTypeFormatString(ImGuiDataType data_type, void* data_ptr, int decimal_pre/;"	f	typeref:typename:void	file:
DeIndexAllBuffers	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawData::DeIndexAllBuffers()$/;"	f	class:ImDrawData	typeref:typename:void
DebugEventCallback	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    DebugEventProc DebugEventCallback;$/;"	m	struct:__anon66f154fe0b08	typeref:typename:DebugEventProc
DebugEventLevel	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} DebugEventLevel;$/;"	t	typeref:enum:__anon66f154fe0a03
DebugEventLevelFatal	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    DebugEventLevelFatal,$/;"	e	enum:__anon66f154fe0a03
DebugEventLevelWarning	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    DebugEventLevelWarning$/;"	e	enum:__anon66f154fe0a03
DebugEventProc	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef VOID (WINAPI *DebugEventProc)(DebugEventLevel level, CHAR *message);$/;"	t	typeref:typename:VOID (WINAPI *)(DebugEventLevel level,CHAR * message)
DebugHUD	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^typedef struct DebugHUD$/;"	s
DebugHUD	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^} DebugHUD;$/;"	t	typeref:struct:DebugHUD
DebugHUD_DoInterface	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.cpp	/^void DebugHUD_DoInterface(DebugHUD *hud)$/;"	f	typeref:typename:void
DebugHUD_InitDefaults	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.cpp	/^void DebugHUD_InitDefaults( DebugHUD *hud )$/;"	f	typeref:typename:void
DeclColumns	lib/cimgui/imgui/imgui.cpp	/^float ImGuiMenuColumns::DeclColumns(float w0, float w1, float w2) \/\/ not using va_arg because /;"	f	class:ImGuiMenuColumns	typeref:typename:float
Decode85	lib/cimgui/imgui/imgui_draw.cpp	/^static void         Decode85(const unsigned char* src, unsigned char* dst)$/;"	f	typeref:typename:void	file:
Decode85Byte	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int Decode85Byte(char c)                                    { return c >= '\\\\'/;"	f	typeref:typename:unsigned int	file:
DeleteChars	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextEditCallbackData::DeleteChars(int pos, int bytes_count)$/;"	f	class:ImGuiTextEditCallbackData	typeref:typename:void
Delivery	lib/cimgui/cimgui/cimgui.h	/^    bool Delivery;$/;"	m	struct:ImGuiPayload	typeref:typename:bool
Delivery	lib/cimgui/imgui/imgui.h	/^    bool            Delivery;           \/\/ Set when AcceptDragDropPayload() was called and mou/;"	m	struct:ImGuiPayload	typeref:typename:bool
DeltaTime	lib/cimgui/cimgui/cimgui.h	/^    float DeltaTime;$/;"	m	struct:ImGuiIO	typeref:typename:float
DeltaTime	lib/cimgui/imgui/imgui.h	/^    float         DeltaTime;                \/\/ = 1.0f\/60.0f         \/\/ Time elapsed since l/;"	m	struct:ImGuiIO	typeref:typename:float
DepthStencilState	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10DepthStencilState*    DepthStencilState;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10DepthStencilState *	file:
DepthStencilState	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11DepthStencilState*    DepthStencilState;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11DepthStencilState *	file:
Descender	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       Descender;          \/\/ The extents below the baseline in pixels (typically/;"	m	struct:__anon71f5b57f0110::FontInfo	typeref:typename:float	file:
Descent	lib/cimgui/imgui/imgui.h	/^    float                       Ascent, Descent;    \/\/              \/\/ Ascent: distance from/;"	m	struct:ImFont	typeref:typename:float
DesiredSize	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 DesiredSize;$/;"	m	struct:ImGuiSizeCallbackData	typeref:struct:ImVec2
DesiredSize	lib/cimgui/imgui/imgui.h	/^    ImVec2  DesiredSize;    \/\/ Read-write.  Desired size, based on user's mouse position. Writ/;"	m	struct:ImGuiSizeCallbackData	typeref:typename:ImVec2
DestroyContext	lib/cimgui/imgui/imgui.cpp	/^void ImGui::DestroyContext(ImGuiContext* ctx)$/;"	f	class:ImGui	typeref:typename:void
DirtyLookupTables	lib/cimgui/imgui/imgui.h	/^    bool                        DirtyLookupTables;$/;"	m	struct:ImFont	typeref:typename:bool
DisplayEnd	lib/cimgui/cimgui/cimgui.h	/^    int ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
DisplayEnd	lib/cimgui/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
DisplayFramebufferScale	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 DisplayFramebufferScale;$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2
DisplayFramebufferScale	lib/cimgui/imgui/imgui.h	/^    ImVec2        DisplayFramebufferScale;  \/\/ = (1.0f,1.0f)        \/\/ For retina display or/;"	m	struct:ImGuiIO	typeref:typename:ImVec2
DisplayOffset	lib/cimgui/imgui/imgui.h	/^    ImVec2                      DisplayOffset;      \/\/ = (0.f,0.f)  \/\/ Offset font rendering/;"	m	struct:ImFont	typeref:typename:ImVec2
DisplaySafeAreaPadding	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 DisplaySafeAreaPadding;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
DisplaySafeAreaPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      DisplaySafeAreaPadding;     \/\/ If you cannot see the edge of your screen (e.g./;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
DisplaySize	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 DisplaySize;$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2
DisplaySize	lib/cimgui/imgui/imgui.h	/^    ImVec2        DisplaySize;              \/\/ <unset>              \/\/ Display size, in pixe/;"	m	struct:ImGuiIO	typeref:typename:ImVec2
DisplayStart	lib/cimgui/cimgui/cimgui.h	/^    int ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
DisplayStart	lib/cimgui/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
DisplayVisibleMax	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 DisplayVisibleMax;$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2
DisplayVisibleMax	lib/cimgui/imgui/imgui.h	/^    ImVec2        DisplayVisibleMax;        \/\/ <unset> (0.0f,0.0f)  \/\/ If the values are the/;"	m	struct:ImGuiIO	typeref:typename:ImVec2
DisplayVisibleMin	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 DisplayVisibleMin;$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2
DisplayVisibleMin	lib/cimgui/imgui/imgui.h	/^    ImVec2        DisplayVisibleMin;        \/\/ <unset> (0.0f,0.0f)  \/\/ If you use DisplaySiz/;"	m	struct:ImGuiIO	typeref:typename:ImVec2
DisplayWindowPadding	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 DisplayWindowPadding;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
DisplayWindowPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      DisplayWindowPadding;       \/\/ Window positions are clamped to be visible with/;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
DistAxial	lib/cimgui/imgui/imgui_internal.h	/^    float         DistAxial;$/;"	m	struct:ImGuiNavMoveResult	typeref:typename:float
DistBox	lib/cimgui/imgui/imgui_internal.h	/^    float         DistBox;      \/\/ Best candidate box distance to current NavId$/;"	m	struct:ImGuiNavMoveResult	typeref:typename:float
DistCenter	lib/cimgui/imgui/imgui_internal.h	/^    float         DistCenter;   \/\/ Best candidate center distance to current NavId$/;"	m	struct:ImGuiNavMoveResult	typeref:typename:float
DragBehavior	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragBehavior(const ImRect& frame_bb, ImGuiID id, float* v, float v_speed, float v_mi/;"	f	class:ImGui	typeref:typename:bool
DragCurrentValue	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragCurrentValue;                   \/\/ Currently dragged value, al/;"	m	struct:ImGuiContext	typeref:typename:float
DragDropAcceptFrameCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     DragDropAcceptFrameCount;           \/\/ Last time a target expresse/;"	m	struct:ImGuiContext	typeref:typename:int
DragDropAcceptIdCurr	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 DragDropAcceptIdCurr;               \/\/ Target item id (set at the /;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
DragDropAcceptIdCurrRectSurface	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragDropAcceptIdCurrRectSurface;$/;"	m	struct:ImGuiContext	typeref:typename:float
DragDropAcceptIdPrev	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 DragDropAcceptIdPrev;               \/\/ Target item id from previou/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
DragDropActive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    DragDropActive;$/;"	m	struct:ImGuiContext	typeref:typename:bool
DragDropMouseButton	lib/cimgui/imgui/imgui_internal.h	/^    int                     DragDropMouseButton;$/;"	m	struct:ImGuiContext	typeref:typename:int
DragDropPayload	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPayload            DragDropPayload;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiPayload
DragDropPayloadBufHeap	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<unsigned char> DragDropPayloadBufHeap;             \/\/ We don't expose the ImVecto/;"	m	struct:ImGuiContext	typeref:typename:ImVector<unsigned char>
DragDropPayloadBufLocal	lib/cimgui/imgui/imgui_internal.h	/^    unsigned char           DragDropPayloadBufLocal[8];         \/\/ Local buffer for small payl/;"	m	struct:ImGuiContext	typeref:typename:unsigned char[8]
DragDropSourceFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDragDropFlags      DragDropSourceFlags;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiDragDropFlags
DragDropTargetId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 DragDropTargetId;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
DragDropTargetRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  DragDropTargetRect;$/;"	m	struct:ImGuiContext	typeref:typename:ImRect
DragFloat	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragFloat(const char* label, float* v, float v_speed, float v_min, float v_max, cons/;"	f	class:ImGui	typeref:typename:bool
DragFloat2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragFloat2(const char* label, float v[2], float v_speed, float v_min, float v_max, c/;"	f	class:ImGui	typeref:typename:bool
DragFloat3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragFloat3(const char* label, float v[3], float v_speed, float v_min, float v_max, c/;"	f	class:ImGui	typeref:typename:bool
DragFloat4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragFloat4(const char* label, float v[4], float v_speed, float v_min, float v_max, c/;"	f	class:ImGui	typeref:typename:bool
DragFloatN	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragFloatN(const char* label, float* v, int components, float v_speed, float v_min, /;"	f	class:ImGui	typeref:typename:bool
DragFloatRange2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragFloatRange2(const char* label, float* v_current_min, float* v_current_max, float/;"	f	class:ImGui	typeref:typename:bool
DragInt	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragInt(const char* label, int* v, float v_speed, int v_min, int v_max, const char* /;"	f	class:ImGui	typeref:typename:bool
DragInt2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragInt2(const char* label, int v[2], float v_speed, int v_min, int v_max, const cha/;"	f	class:ImGui	typeref:typename:bool
DragInt3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragInt3(const char* label, int v[3], float v_speed, int v_min, int v_max, const cha/;"	f	class:ImGui	typeref:typename:bool
DragInt4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragInt4(const char* label, int v[4], float v_speed, int v_min, int v_max, const cha/;"	f	class:ImGui	typeref:typename:bool
DragIntN	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragIntN(const char* label, int* v, int components, float v_speed, int v_min, int v_/;"	f	class:ImGui	typeref:typename:bool
DragIntRange2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::DragIntRange2(const char* label, int* v_current_min, int* v_current_max, float v_spe/;"	f	class:ImGui	typeref:typename:bool
DragLastMouseDelta	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  DragLastMouseDelta;$/;"	m	struct:ImGuiContext	typeref:typename:ImVec2
DragSpeedDefaultRatio	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragSpeedDefaultRatio;              \/\/ If speed == 0.0f, uses (max/;"	m	struct:ImGuiContext	typeref:typename:float
DragSpeedScaleFast	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragSpeedScaleFast;$/;"	m	struct:ImGuiContext	typeref:typename:float
DragSpeedScaleSlow	lib/cimgui/imgui/imgui_internal.h	/^    float                   DragSpeedScaleSlow;$/;"	m	struct:ImGuiContext	typeref:typename:float
Draw	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiTextFilter::Draw(const char* label, float width)$/;"	f	class:ImGuiTextFilter	typeref:typename:bool
Draw	lib/cimgui/imgui/imgui_demo.cpp	/^    void    Draw(const char* title, bool* p_open = NULL)$/;"	f	struct:ExampleAppLog	typeref:typename:void	file:
Draw	lib/cimgui/imgui/imgui_demo.cpp	/^    void    Draw(const char* title, bool* p_open)$/;"	f	struct:ExampleAppConsole	typeref:typename:void	file:
DrawData	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawData              DrawData;                           \/\/ Main ImDrawData instance to/;"	m	struct:ImGuiContext	typeref:typename:ImDrawData
DrawDataBuilder	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawDataBuilder       DrawDataBuilder;$/;"	m	struct:ImGuiContext	typeref:typename:ImDrawDataBuilder
DrawList	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawList*             DrawList;$/;"	m	struct:ImGuiWindow	typeref:typename:ImDrawList *
DrawListSharedData	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawListSharedData    DrawListSharedData;$/;"	m	struct:ImGuiContext	typeref:typename:ImDrawListSharedData
Drawable	src/Drawable.h	/^struct Drawable {$/;"	s
Drawable	src/Drawable.h	/^typedef struct Drawable Drawable;$/;"	t	typeref:struct:Drawable
DstFont	lib/cimgui/cimgui/cimgui.h	/^    struct ImFont *DstFont;$/;"	m	struct:ImFontConfig	typeref:struct:ImFont *
DstFont	lib/cimgui/imgui/imgui.h	/^    ImFont*         DstFont;$/;"	m	struct:ImFontConfig	typeref:typename:ImFont *
Dummy	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Dummy(const ImVec2& size)$/;"	f	class:ImGui	typeref:typename:void
E	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anonf542711f0308	typeref:typename:FLOAT ****
E	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	typeref:typename:__m128i ****	file:
EASY	lib/nuklear/demo/allegro5/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon09a7c4200103	file:
EASY	lib/nuklear/demo/d3d11/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anondbb16f820103	file:
EASY	lib/nuklear/demo/d3d9/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon3f85d5f90103	file:
EASY	lib/nuklear/demo/gdi/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonabf5b9790103	file:
EASY	lib/nuklear/demo/gdip/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon9e34ae690103	file:
EASY	lib/nuklear/demo/glfw_opengl2/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon3d2da44b0103	file:
EASY	lib/nuklear/demo/glfw_opengl3/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon296f792c0103	file:
EASY	lib/nuklear/demo/glfw_opengl4/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon15b14e0d0203	file:
EASY	lib/nuklear/demo/sdl_opengl2/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon5ca2565e0103	file:
EASY	lib/nuklear/demo/sdl_opengl3/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon48e42b3f0103	file:
EASY	lib/nuklear/demo/sdl_opengles2/main.c	/^        enum {EASY, HARD};$/;"	e	enum:MainLoop::__anon5a3859960103	file:
EASY	lib/nuklear/demo/sfml_opengl2/main.cpp	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonddddee0d0103	file:
EASY	lib/nuklear/demo/sfml_opengl3/main.cpp	/^            enum {EASY, HARD};$/;"	e	enum:main::__anone1e87f2e0103	file:
EASY	lib/nuklear/demo/x11/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon0d78483f0103	file:
EASY	lib/nuklear/demo/x11_opengl2/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonf1693ff50103	file:
EASY	lib/nuklear/demo/x11_opengl3/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonddab14d60103	file:
EASY	lib/nuklear/demo/x11_rawfb/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon654a28500103	file:
ECHO_MESSAGE	lib/cimgui/cimgui/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/cimgui/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/cimgui/Makefile	/^	ECHO_MESSAGE = "Windows"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^   ECHO_MESSAGE = "Windows"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^   ECHO_MESSAGE = "Windows"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^   ECHO_MESSAGE = "Windows"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^	ECHO_MESSAGE = "Linux"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^	ECHO_MESSAGE = "Mac OS X"$/;"	m
ECHO_MESSAGE	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^   ECHO_MESSAGE = "Windows"$/;"	m
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
EXE	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^EXE = opengl2_example$/;"	m
EXE	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^EXE = opengl3_example$/;"	m
EXE	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^EXE = sdl_opengl2_example$/;"	m
EXE	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^EXE = sdl_opengl3_example$/;"	m
EXTERN	lib/cimgui/cimgui/cimgui.h	/^#define EXTERN /;"	d
ElemCount	lib/cimgui/cimgui/cimgui.h	/^    unsigned int ElemCount;$/;"	m	struct:ImDrawCmd	typeref:typename:unsigned int
ElemCount	lib/cimgui/imgui/imgui.h	/^    unsigned int    ElemCount;              \/\/ Number of indices (multiple of 3) to be rendere/;"	m	struct:ImDrawCmd	typeref:typename:unsigned int
Encode85Byte	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^char Encode85Byte(unsigned int x) $/;"	f	typeref:typename:char
End	lib/cimgui/imgui/imgui.cpp	/^void ImGui::End()$/;"	f	class:ImGui	typeref:typename:void
End	lib/cimgui/imgui/imgui.cpp	/^void ImGuiListClipper::End()$/;"	f	class:ImGuiListClipper	typeref:typename:void
EndChild	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndChild()$/;"	f	class:ImGui	typeref:typename:void
EndChildFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndChildFrame()$/;"	f	class:ImGui	typeref:typename:void
EndColumns	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndColumns()$/;"	f	class:ImGui	typeref:typename:void
EndCombo	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndCombo()$/;"	f	class:ImGui	typeref:typename:void
EndDragDropSource	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndDragDropSource()$/;"	f	class:ImGui	typeref:typename:void
EndDragDropTarget	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndDragDropTarget()$/;"	f	class:ImGui	typeref:typename:void
EndFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndFrame()$/;"	f	class:ImGui	typeref:typename:void
EndGroup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndGroup()$/;"	f	class:ImGui	typeref:typename:void
EndMainMenuBar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndMainMenuBar()$/;"	f	class:ImGui	typeref:typename:void
EndMenu	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndMenu()$/;"	f	class:ImGui	typeref:typename:void
EndMenuBar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndMenuBar()$/;"	f	class:ImGui	typeref:typename:void
EndPopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndPopup()$/;"	f	class:ImGui	typeref:typename:void
EndTooltip	lib/cimgui/imgui/imgui.cpp	/^void ImGui::EndTooltip()$/;"	f	class:ImGui	typeref:typename:void
EventChar	lib/cimgui/cimgui/cimgui.h	/^    ImWchar EventChar;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImWchar
EventChar	lib/cimgui/imgui/imgui.h	/^    ImWchar             EventChar;      \/\/ Character input                      \/\/ Read-writ/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImWchar
EventFlag	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags EventFlag;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImGuiInputTextFlags
EventFlag	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags EventFlag;      \/\/ One of ImGuiInputTextFlags_Callback* \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImGuiInputTextFlags
EventKey	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey EventKey;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImGuiKey
EventKey	lib/cimgui/imgui/imgui.h	/^    ImGuiKey            EventKey;       \/\/ Key pressed (Up\/Down\/TAB)            \/\/ Read-on/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImGuiKey
ExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^    ExampleAppConsole()$/;"	f	struct:ExampleAppConsole	file:
ExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^struct ExampleAppConsole$/;"	s	file:
ExampleAppLog	lib/cimgui/imgui/imgui_demo.cpp	/^struct ExampleAppLog$/;"	s	file:
ExecCommand	lib/cimgui/imgui/imgui_demo.cpp	/^    void    ExecCommand(const char* command_line)$/;"	f	struct:ExampleAppConsole	typeref:typename:void	file:
Expand	lib/cimgui/imgui/imgui_internal.h	/^    void        Expand(const ImVec2& amount)        { Min.x -= amount.x; Min.y -= amount.y; Max./;"	f	struct:ImRect	typeref:typename:void
Expand	lib/cimgui/imgui/imgui_internal.h	/^    void        Expand(const float amount)          { Min.x -= amount;   Min.y -= amount;   Max./;"	f	struct:ImRect	typeref:typename:void
FAST_BITS	lib/nuklear/example/stb_image.h	/^#define FAST_BITS /;"	d
FILE_BMP	lib/nuklear/example/file_browser.c	/^    FILE_BMP,$/;"	e	enum:file_types	file:
FILE_CPP_HEADER	lib/nuklear/example/file_browser.c	/^    FILE_CPP_HEADER,$/;"	e	enum:file_types	file:
FILE_CPP_SOURCE	lib/nuklear/example/file_browser.c	/^    FILE_CPP_SOURCE,$/;"	e	enum:file_types	file:
FILE_C_SOURCE	lib/nuklear/example/file_browser.c	/^    FILE_C_SOURCE,$/;"	e	enum:file_types	file:
FILE_DEF	lib/nuklear/example/file_browser.c	/^FILE_DEF(enum file_types type, const char *suffix, enum file_groups group)$/;"	f	typeref:struct:file	file:
FILE_DEFAULT	lib/nuklear/example/file_browser.c	/^    FILE_DEFAULT,$/;"	e	enum:file_types	file:
FILE_GIF	lib/nuklear/example/file_browser.c	/^    FILE_GIF,$/;"	e	enum:file_types	file:
FILE_GROUP	lib/nuklear/example/file_browser.c	/^FILE_GROUP(enum file_groups group, const char *name, struct nk_image *icon)$/;"	f	typeref:struct:file_group	file:
FILE_GROUP_DEFAULT	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_DEFAULT,$/;"	e	enum:file_groups	file:
FILE_GROUP_FONT	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_FONT,$/;"	e	enum:file_groups	file:
FILE_GROUP_IMAGE	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_IMAGE,$/;"	e	enum:file_groups	file:
FILE_GROUP_MAX	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_MAX$/;"	e	enum:file_groups	file:
FILE_GROUP_MOVIE	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_MOVIE,$/;"	e	enum:file_groups	file:
FILE_GROUP_MUSIC	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_MUSIC,$/;"	e	enum:file_groups	file:
FILE_GROUP_TEXT	lib/nuklear/example/file_browser.c	/^    FILE_GROUP_TEXT,$/;"	e	enum:file_groups	file:
FILE_HEADER	lib/nuklear/example/file_browser.c	/^    FILE_HEADER,$/;"	e	enum:file_types	file:
FILE_JPEG	lib/nuklear/example/file_browser.c	/^    FILE_JPEG,$/;"	e	enum:file_types	file:
FILE_MAX	lib/nuklear/example/file_browser.c	/^    FILE_MAX$/;"	e	enum:file_types	file:
FILE_MP3	lib/nuklear/example/file_browser.c	/^    FILE_MP3,$/;"	e	enum:file_types	file:
FILE_OGG	lib/nuklear/example/file_browser.c	/^    FILE_OGG,$/;"	e	enum:file_types	file:
FILE_PCX	lib/nuklear/example/file_browser.c	/^    FILE_PCX,$/;"	e	enum:file_types	file:
FILE_PNG	lib/nuklear/example/file_browser.c	/^    FILE_PNG,$/;"	e	enum:file_types	file:
FILE_TEXT	lib/nuklear/example/file_browser.c	/^    FILE_TEXT,$/;"	e	enum:file_types	file:
FILE_TGA	lib/nuklear/example/file_browser.c	/^    FILE_TGA,$/;"	e	enum:file_types	file:
FILE_TTF	lib/nuklear/example/file_browser.c	/^    FILE_TTF,$/;"	e	enum:file_types	file:
FILE_WAV	lib/nuklear/example/file_browser.c	/^    FILE_WAV,$/;"	e	enum:file_types	file:
FLOAT	lib/klib/khmm.h	/^#define FLOAT /;"	d
FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA	lib/cimgui/imgui/imgui_draw.cpp	/^static const ImVec2 FONT_ATLAS_DEFAULT_TEX_CURSOR_DATA[ImGuiMouseCursor_COUNT][3] =$/;"	v	typeref:typename:const ImVec2[][3]	file:
FONT_ATLAS_DEFAULT_TEX_DATA_H	lib/cimgui/imgui/imgui_draw.cpp	/^const int FONT_ATLAS_DEFAULT_TEX_DATA_H      = 27;$/;"	v	typeref:typename:const int
FONT_ATLAS_DEFAULT_TEX_DATA_ID	lib/cimgui/imgui/imgui_draw.cpp	/^const unsigned int FONT_ATLAS_DEFAULT_TEX_DATA_ID = 0x80000000;$/;"	v	typeref:typename:const unsigned int
FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS	lib/cimgui/imgui/imgui_draw.cpp	/^static const char FONT_ATLAS_DEFAULT_TEX_DATA_PIXELS[FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF * FONT_A/;"	v	typeref:typename:const char[]	file:
FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF	lib/cimgui/imgui/imgui_draw.cpp	/^const int FONT_ATLAS_DEFAULT_TEX_DATA_W_HALF = 90;$/;"	v	typeref:typename:const int
FT_CEIL	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    #define FT_CEIL(/;"	d	file:
FallbackAdvanceX	lib/cimgui/imgui/imgui.h	/^    float                       FallbackAdvanceX;   \/\/ == FallbackGlyph->AdvanceX$/;"	m	struct:ImFont	typeref:typename:float
FallbackChar	lib/cimgui/imgui/imgui.h	/^    ImWchar                     FallbackChar;       \/\/ = '?'        \/\/ Replacement glyph if /;"	m	struct:ImFont	typeref:typename:ImWchar
FallbackGlyph	lib/cimgui/imgui/imgui.h	/^    const ImFontGlyph*          FallbackGlyph;      \/\/ == FindGlyph(FontFallbackChar)$/;"	m	struct:ImFont	typeref:typename:const ImFontGlyph *
FenceValue	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^    UINT64                  FenceValue;$/;"	m	struct:FrameContext	typeref:typename:UINT64	file:
FillMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} FillMode;$/;"	t	typeref:enum:__anon66f154fe0603
FillModeAlternate	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FillModeAlternate,$/;"	e	enum:__anon66f154fe0603
FillModeWinding	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FillModeWinding$/;"	e	enum:__anon66f154fe0603
Filter	lib/cimgui/imgui/imgui_demo.cpp	/^    ImGuiTextFilter     Filter;$/;"	m	struct:ExampleAppLog	typeref:typename:ImGuiTextFilter	file:
FilterImGuiLetters	lib/cimgui/imgui/imgui_demo.cpp	/^            struct TextFilters { static int FilterImGuiLetters(ImGuiTextEditCallbackData* data) /;"	f	struct:ImGui::ShowDemoWindow::TextFilters	typeref:typename:int	file:
Filters	lib/cimgui/imgui/imgui.h	/^    ImVector<TextRange> Filters;$/;"	m	struct:ImGuiTextFilter	typeref:typename:ImVector<TextRange>
FindBestWindowPosForPopup	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 FindBestWindowPosForPopup(const ImVec2& ref_pos, const ImVec2& size, ImGuiDir* las/;"	f	typeref:typename:ImVec2	file:
FindGlyph	lib/cimgui/imgui/imgui_draw.cpp	/^const ImFontGlyph* ImFont::FindGlyph(ImWchar c) const$/;"	f	class:ImFont	typeref:typename:const ImFontGlyph *
FindGlyphNoFallback	lib/cimgui/imgui/imgui_draw.cpp	/^const ImFontGlyph* ImFont::FindGlyphNoFallback(ImWchar c) const$/;"	f	class:ImFont	typeref:typename:const ImFontGlyph *
FindHoveredWindow	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* FindHoveredWindow()$/;"	f	typeref:typename:ImGuiWindow *	file:
FindOrAddColumnsSet	lib/cimgui/imgui/imgui.cpp	/^static ImGuiColumnsSet* FindOrAddColumnsSet(ImGuiWindow* window, ImGuiID id)$/;"	f	typeref:typename:ImGuiColumnsSet *	file:
FindRenderedTextEnd	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::FindRenderedTextEnd(const char* text, const char* text_end)$/;"	f	class:ImGui	typeref:typename:const char *
FindSettingsHandler	lib/cimgui/imgui/imgui.cpp	/^ImGuiSettingsHandler* ImGui::FindSettingsHandler(const char* type_name)$/;"	f	class:ImGui	typeref:typename:ImGuiSettingsHandler *
FindWindowByName	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow* ImGui::FindWindowByName(const char* name)$/;"	f	class:ImGui	typeref:typename:ImGuiWindow *
FindWindowIndex	lib/cimgui/imgui/imgui.cpp	/^static int FindWindowIndex(ImGuiWindow* window) \/\/ FIXME-OPT O(N)$/;"	f	typeref:typename:int	file:
FindWindowNavigable	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* FindWindowNavigable(int i_start, int i_stop, int dir) \/\/ FIXME-OPT O(N)$/;"	f	typeref:typename:ImGuiWindow *	file:
FindWindowSettings	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindowSettings* ImGui::FindWindowSettings(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:ImGuiWindowSettings *
FixInverted	lib/cimgui/imgui/imgui_internal.h	/^    void        FixInverted()                       { if (Min.x > Max.x) ImSwap(Min.x, Max.x); i/;"	f	struct:ImRect	typeref:typename:void
Flags	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags Flags;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImGuiInputTextFlags
Flags	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags         Flags;              \/\/ Flags, you may poke into these to adjust an/;"	m	struct:ImDrawList	typeref:typename:ImDrawListFlags
Flags	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasFlags            Flags;              \/\/ Build flags (see ImFontAtlasFlags_)$/;"	m	struct:ImFontAtlas	typeref:typename:ImFontAtlasFlags
Flags	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags Flags;          \/\/ What user passed to InputText()      \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:ImGuiInputTextFlags
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags   Flags;              \/\/ Not exposed$/;"	m	struct:ImGuiColumnData	typeref:typename:ImGuiColumnsFlags
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags   Flags;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:ImGuiColumnsFlags
Flags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindowFlags        Flags;                              \/\/ See enum ImGuiWindowFlags_$/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiWindowFlags
FlattenIntoSingleLayer	lib/cimgui/imgui/imgui.cpp	/^void ImDrawDataBuilder::FlattenIntoSingleLayer()$/;"	f	class:ImDrawDataBuilder	typeref:typename:void
Floor	lib/cimgui/imgui/imgui_internal.h	/^    void        Floor()                             { Min.x = (float)(int)Min.x; Min.y = (float)/;"	f	struct:ImRect	typeref:typename:void
FocusCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               FocusCond;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiCond
FocusFrontMostActiveWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::FocusFrontMostActiveWindow(ImGuiWindow* ignore_window)$/;"	f	class:ImGui	typeref:typename:void
FocusIdxAllCounter	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusIdxAllCounter;                 \/\/ Start at -1 and increase as/;"	m	struct:ImGuiWindow	typeref:typename:int
FocusIdxAllRequestCurrent	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusIdxAllRequestCurrent;          \/\/ Item being requested for fo/;"	m	struct:ImGuiWindow	typeref:typename:int
FocusIdxAllRequestNext	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusIdxAllRequestNext;             \/\/ Item being requested for fo/;"	m	struct:ImGuiWindow	typeref:typename:int
FocusIdxTabCounter	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusIdxTabCounter;                 \/\/ (same, but only count widge/;"	m	struct:ImGuiWindow	typeref:typename:int
FocusIdxTabRequestCurrent	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusIdxTabRequestCurrent;          \/\/ Tab-able item being request/;"	m	struct:ImGuiWindow	typeref:typename:int
FocusIdxTabRequestNext	lib/cimgui/imgui/imgui_internal.h	/^    int                     FocusIdxTabRequestNext;             \/\/ "$/;"	m	struct:ImGuiWindow	typeref:typename:int
FocusWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::FocusWindow(ImGuiWindow* window)$/;"	f	class:ImGui	typeref:typename:void
FocusableItemRegister	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::FocusableItemRegister(ImGuiWindow* window, ImGuiID id, bool tab_stop)$/;"	f	class:ImGui	typeref:typename:bool
FocusableItemUnregister	lib/cimgui/imgui/imgui.cpp	/^void ImGui::FocusableItemUnregister(ImGuiWindow* window)$/;"	f	class:ImGui	typeref:typename:void
Font	lib/cimgui/imgui/imgui.h	/^        ImFont*         Font;           \/\/ Input    \/\/ For custom font glyphs only (ID<0x100/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:ImFont *
Font	lib/cimgui/imgui/imgui_internal.h	/^    ImFont*                 Font;                               \/\/ (Shortcut) == FontStack.emp/;"	m	struct:ImGuiContext	typeref:typename:ImFont *
Font	lib/cimgui/imgui/imgui_internal.h	/^    ImFont*         Font;                       \/\/ Current\/default font (optional, for simpli/;"	m	struct:ImDrawListSharedData	typeref:typename:ImFont *
FontAllowUserScaling	lib/cimgui/cimgui/cimgui.h	/^    bool FontAllowUserScaling;$/;"	m	struct:ImGuiIO	typeref:typename:bool
FontAllowUserScaling	lib/cimgui/imgui/imgui.h	/^    bool          FontAllowUserScaling;     \/\/ = false              \/\/ Allow user scaling te/;"	m	struct:ImGuiIO	typeref:typename:bool
FontAtlasOwnedByContext	lib/cimgui/imgui/imgui_internal.h	/^    bool                    FontAtlasOwnedByContext;            \/\/ Io.Fonts-> is owned by the /;"	m	struct:ImGuiContext	typeref:typename:bool
FontBaseSize	lib/cimgui/imgui/imgui_internal.h	/^    float                   FontBaseSize;                       \/\/ (Shortcut) == IO.FontGlobal/;"	m	struct:ImGuiContext	typeref:typename:float
FontData	lib/cimgui/cimgui/cimgui.h	/^    void *FontData;$/;"	m	struct:ImFontConfig	typeref:typename:void *
FontData	lib/cimgui/imgui/imgui.h	/^    void*           FontData;               \/\/          \/\/ TTF\/OTF data$/;"	m	struct:ImFontConfig	typeref:typename:void *
FontDataOwnedByAtlas	lib/cimgui/cimgui/cimgui.h	/^    bool FontDataOwnedByAtlas;$/;"	m	struct:ImFontConfig	typeref:typename:bool
FontDataOwnedByAtlas	lib/cimgui/imgui/imgui.h	/^    bool            FontDataOwnedByAtlas;   \/\/ true     \/\/ TTF\/OTF data ownership taken by /;"	m	struct:ImFontConfig	typeref:typename:bool
FontDataSize	lib/cimgui/cimgui/cimgui.h	/^    int FontDataSize;$/;"	m	struct:ImFontConfig	typeref:typename:int
FontDataSize	lib/cimgui/imgui/imgui.h	/^    int             FontDataSize;           \/\/          \/\/ TTF\/OTF data size$/;"	m	struct:ImFontConfig	typeref:typename:int
FontDefault	lib/cimgui/cimgui/cimgui.h	/^    struct ImFont *FontDefault;$/;"	m	struct:ImGuiIO	typeref:struct:ImFont *
FontDefault	lib/cimgui/imgui/imgui.h	/^    ImFont*       FontDefault;              \/\/ = NULL               \/\/ Font to use on NewFra/;"	m	struct:ImGuiIO	typeref:typename:ImFont *
FontGlobalScale	lib/cimgui/cimgui/cimgui.h	/^    float FontGlobalScale;$/;"	m	struct:ImGuiIO	typeref:typename:float
FontGlobalScale	lib/cimgui/imgui/imgui.h	/^    float         FontGlobalScale;          \/\/ = 1.0f               \/\/ Global scale all font/;"	m	struct:ImGuiIO	typeref:typename:float
FontInfo	lib/cimgui/imgui/imgui_draw.cpp	/^        stbtt_fontinfo      FontInfo;$/;"	m	struct:ImFontAtlasBuildWithStbTruetype::ImFontTempBuildData	typeref:typename:stbtt_fontinfo	file:
FontInfo	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    struct FontInfo $/;"	s	namespace:__anon71f5b57f0110	file:
FontNo	lib/cimgui/cimgui/cimgui.h	/^    int FontNo;$/;"	m	struct:ImFontConfig	typeref:typename:int
FontNo	lib/cimgui/imgui/imgui.h	/^    int             FontNo;                 \/\/ 0        \/\/ Index of font within TTF\/OTF fil/;"	m	struct:ImFontConfig	typeref:typename:int
FontSize	lib/cimgui/imgui/imgui.h	/^    float                       FontSize;           \/\/ <user set>   \/\/ Height of characters,/;"	m	struct:ImFont	typeref:typename:float
FontSize	lib/cimgui/imgui/imgui_internal.h	/^    float                   FontSize;                           \/\/ (Shortcut) == FontBaseSize /;"	m	struct:ImGuiContext	typeref:typename:float
FontSize	lib/cimgui/imgui/imgui_internal.h	/^    float           FontSize;                   \/\/ Current\/default font size (optional, for s/;"	m	struct:ImDrawListSharedData	typeref:typename:float
FontStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImFont*>       FontStack;                          \/\/ Stack for PushFont()\/PopFo/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImFont * >
FontStyle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} FontStyle;$/;"	t	typeref:enum:__anon66f154fe0503
FontStyleBold	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleBold       = 1,$/;"	e	enum:__anon66f154fe0503
FontStyleBoldItalic	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleBoldItalic = 3,$/;"	e	enum:__anon66f154fe0503
FontStyleItalic	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleItalic     = 2,$/;"	e	enum:__anon66f154fe0503
FontStyleRegular	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleRegular    = 0,$/;"	e	enum:__anon66f154fe0503
FontStyleStrikeout	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleStrikeout  = 8$/;"	e	enum:__anon66f154fe0503
FontStyleUnderline	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FontStyleUnderline  = 4,$/;"	e	enum:__anon66f154fe0503
FontWindowScale	lib/cimgui/imgui/imgui_internal.h	/^    float                   FontWindowScale;                    \/\/ Scale multiplier per-window$/;"	m	struct:ImGuiWindow	typeref:typename:float
Fonts	lib/cimgui/cimgui/cimgui.h	/^    struct ImFontAtlas *Fonts;$/;"	m	struct:ImGuiIO	typeref:struct:ImFontAtlas *
Fonts	lib/cimgui/imgui/imgui.h	/^    ImFontAtlas*  Fonts;                    \/\/ <auto>               \/\/ Load and assemble one/;"	m	struct:ImGuiIO	typeref:typename:ImFontAtlas *
Fonts	lib/cimgui/imgui/imgui.h	/^    ImVector<ImFont*>           Fonts;              \/\/ Hold all the fonts returned by AddFont*/;"	m	struct:ImFontAtlas	typeref:typename:ImVector<ImFont * >
ForceAutoHint	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        ForceAutoHint   = 1 << 2,   \/\/ Indicates that the auto-hinter is preferred over the fo/;"	e	enum:ImGuiFreeType::RasterizerFlags
FrameBorderSize	lib/cimgui/cimgui/cimgui.h	/^    float FrameBorderSize;$/;"	m	struct:ImGuiStyle	typeref:typename:float
FrameBorderSize	lib/cimgui/imgui/imgui.h	/^    float       FrameBorderSize;            \/\/ Thickness of border around frames. Generally se/;"	m	struct:ImGuiStyle	typeref:typename:float
FrameContext	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^struct FrameContext$/;"	s	file:
FrameCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     FrameCount;$/;"	m	struct:ImGuiContext	typeref:typename:int
FrameCountEnded	lib/cimgui/imgui/imgui_internal.h	/^    int                     FrameCountEnded;$/;"	m	struct:ImGuiContext	typeref:typename:int
FrameCountRendered	lib/cimgui/imgui/imgui_internal.h	/^    int                     FrameCountRendered;$/;"	m	struct:ImGuiContext	typeref:typename:int
FramePadding	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 FramePadding;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
FramePadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      FramePadding;               \/\/ Padding within a framed rectangle (used by most/;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
FrameResources	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^struct FrameResources$/;"	s	file:
FrameRounding	lib/cimgui/cimgui/cimgui.h	/^    float FrameRounding;$/;"	m	struct:ImGuiStyle	typeref:typename:float
FrameRounding	lib/cimgui/imgui/imgui.h	/^    float       FrameRounding;              \/\/ Radius of frame corners rounding. Set to 0.0f t/;"	m	struct:ImGuiStyle	typeref:typename:float
Framerate	lib/cimgui/cimgui/cimgui.h	/^    float Framerate;$/;"	m	struct:ImGuiIO	typeref:typename:float
Framerate	lib/cimgui/imgui/imgui.h	/^    float       Framerate;                  \/\/ Application framerate estimation, in frame per /;"	m	struct:ImGuiIO	typeref:typename:float
FramerateSecPerFrame	lib/cimgui/imgui/imgui_internal.h	/^    float                   FramerateSecPerFrame[120];          \/\/ calculate estimate of frame/;"	m	struct:ImGuiContext	typeref:typename:float[120]
FramerateSecPerFrameAccum	lib/cimgui/imgui/imgui_internal.h	/^    float                   FramerateSecPerFrameAccum;$/;"	m	struct:ImGuiContext	typeref:typename:float
FramerateSecPerFrameIdx	lib/cimgui/imgui/imgui_internal.h	/^    int                     FramerateSecPerFrameIdx;$/;"	m	struct:ImGuiContext	typeref:typename:int
FreeTypeFont	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    struct FreeTypeFont$/;"	s	namespace:__anon71f5b57f0110	file:
FreeWrapper	lib/cimgui/imgui/imgui.cpp	/^static void    FreeWrapper(void* ptr, void* user_data)        { (void)user_data; (void)ptr; IM_A/;"	f	typeref:typename:void	file:
FreeWrapper	lib/cimgui/imgui/imgui.cpp	/^static void    FreeWrapper(void* ptr, void* user_data)        { (void)user_data; free(ptr); }$/;"	f	typeref:typename:void	file:
FreetypeFace	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Face         FreetypeFace;$/;"	m	struct:__anon71f5b57f0110::FreeTypeFont	typeref:typename:FT_Face	file:
FreetypeLibrary	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Library      FreetypeLibrary;$/;"	m	struct:__anon71f5b57f0110::FreeTypeFont	typeref:typename:FT_Library	file:
FreetypeLoadFlags	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FT_Int32        FreetypeLoadFlags;$/;"	m	struct:__anon71f5b57f0110::FreeTypeFont	typeref:typename:FT_Int32	file:
FuncHolder	lib/cimgui/imgui/imgui_demo.cpp	/^            struct FuncHolder { static bool ItemGetter(void* data, int idx, const char** out_str/;"	s	function:ImGui::ShowDemoWindow	file:
Funcs	lib/cimgui/imgui/imgui.cpp	/^        struct Funcs$/;"	s	function:ImGui::ShowMetricsWindow	file:
Funcs	lib/cimgui/imgui/imgui_demo.cpp	/^            struct Funcs$/;"	s	function:ImGui::ShowDemoWindow	file:
GDIPCONST	lib/nuklear/demo/gdip/nuklear_gdip.h	/^#define GDIPCONST /;"	d
GDataTypeSize	lib/cimgui/imgui/imgui.cpp	/^static size_t GDataTypeSize[ImGuiDataType_COUNT] =$/;"	v	typeref:typename:size_t[]	file:
GImAllocatorActiveAllocationsCount	lib/cimgui/imgui/imgui.cpp	/^static size_t   GImAllocatorActiveAllocationsCount = 0;$/;"	v	typeref:typename:size_t	file:
GImAllocatorAllocFunc	lib/cimgui/imgui/imgui.cpp	/^static void*  (*GImAllocatorAllocFunc)(size_t size, void* user_data) = MallocWrapper;$/;"	v	typeref:typename:void * (*)(size_t size,void * user_data)	file:
GImAllocatorFreeFunc	lib/cimgui/imgui/imgui.cpp	/^static void   (*GImAllocatorFreeFunc)(void* ptr, void* user_data) = FreeWrapper;$/;"	v	typeref:typename:void (*)(void * ptr,void * user_data)	file:
GImAllocatorUserData	lib/cimgui/imgui/imgui.cpp	/^static void*    GImAllocatorUserData = NULL;$/;"	v	typeref:typename:void *	file:
GImGui	lib/cimgui/imgui/imgui.cpp	/^ImGuiContext*   GImGui = NULL;$/;"	v	typeref:typename:ImGuiContext *
GLAD_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	GLAD_DIR = C:\/Users\/Ricky\/MinGW-Libs\/GLAD$/;"	m
GLAD_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	GLAD_DIR = \/home\/ricky\/Libraries\/GLAD$/;"	m
GLAD_INC	lib/nuklear/demo/sfml_opengl3/Makefile	/^GLAD_INC = -I $(GLAD_DIR)\/include$/;"	m
GLAD_SRC	lib/nuklear/demo/sfml_opengl3/Makefile	/^GLAD_SRC = $(GLAD_DIR)\/src\/glad.c$/;"	m
GLAPI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GLAPI /;"	d
GLAPI	lib/gl3w/GL/glcorearb.h	/^#define GLAPI /;"	d
GLDEBUGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,GLvoid * userParam)
GLDEBUGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROC)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,GLvoid * userParam)
GLDEBUGPROCAMD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length/;"	t	typeref:typename:void (APIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,GLvoid * userParam)
GLDEBUGPROCAMD	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCAMD)(GLuint id,GLenum category,GLenum severity,GLsizei length/;"	t	typeref:typename:void (APIENTRY *)(GLuint id,GLenum category,GLenum severity,GLsizei length,const GLchar * message,GLvoid * userParam)
GLDEBUGPROCARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsi/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,GLvoid * userParam)
GLDEBUGPROCARB	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRY *GLDEBUGPROCARB)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsi/;"	t	typeref:typename:void (APIENTRY *)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * message,GLvoid * userParam)
GLEXT_64_TYPES_DEFINED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GLEXT_64_TYPES_DEFINED	lib/gl3w/GL/glcorearb.h	/^#define GLEXT_64_TYPES_DEFINED$/;"	d
GLFW3	lib/nuklear/demo/glfw_opengl3/Makefile	/^	GLFW3 := $(shell pkg-config --libs glfw3)$/;"	m
GLFW3	lib/nuklear/demo/glfw_opengl4/Makefile	/^	GLFW3 := $(shell pkg-config --libs glfw3)$/;"	m
GLFW3	lib/nuklear/example/Makefile	/^	GLFW3 := $(shell pkg-config --libs glfw3)$/;"	m
GLFWAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^ #define GLFWAPI /;"	d
GLFW_ACCUM_ALPHA_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ACCUM_ALPHA_BITS /;"	d
GLFW_ACCUM_BLUE_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ACCUM_BLUE_BITS /;"	d
GLFW_ACCUM_GREEN_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ACCUM_GREEN_BITS /;"	d
GLFW_ACCUM_RED_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ACCUM_RED_BITS /;"	d
GLFW_ALPHA_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ALPHA_BITS /;"	d
GLFW_ANY_RELEASE_BEHAVIOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ANY_RELEASE_BEHAVIOR /;"	d
GLFW_API_UNAVAILABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_API_UNAVAILABLE /;"	d
GLFW_ARROW_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ARROW_CURSOR /;"	d
GLFW_AUTO_ICONIFY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_AUTO_ICONIFY /;"	d
GLFW_AUX_BUFFERS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_AUX_BUFFERS /;"	d
GLFW_BLUE_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_BLUE_BITS /;"	d
GLFW_CALLBACK_DEFINED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^ #define GLFW_CALLBACK_DEFINED$/;"	d
GLFW_CLIENT_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CLIENT_API /;"	d
GLFW_CONNECTED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CONNECTED /;"	d
GLFW_CONTEXT_NO_ERROR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_NO_ERROR /;"	d
GLFW_CONTEXT_RELEASE_BEHAVIOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_RELEASE_BEHAVIOR /;"	d
GLFW_CONTEXT_REVISION	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_REVISION /;"	d
GLFW_CONTEXT_ROBUSTNESS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_ROBUSTNESS /;"	d
GLFW_CONTEXT_VERSION_MAJOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_VERSION_MAJOR /;"	d
GLFW_CONTEXT_VERSION_MINOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CONTEXT_VERSION_MINOR /;"	d
GLFW_CROSSHAIR_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CROSSHAIR_CURSOR /;"	d
GLFW_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CURSOR /;"	d
GLFW_CURSOR_DISABLED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CURSOR_DISABLED /;"	d
GLFW_CURSOR_HIDDEN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CURSOR_HIDDEN /;"	d
GLFW_CURSOR_NORMAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_CURSOR_NORMAL /;"	d
GLFW_DECORATED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_DECORATED /;"	d
GLFW_DEPTH_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_DEPTH_BITS /;"	d
GLFW_DISCONNECTED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_DISCONNECTED /;"	d
GLFW_DONT_CARE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_DONT_CARE /;"	d
GLFW_DOUBLEBUFFER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_DOUBLEBUFFER /;"	d
GLFW_EXPOSE_NATIVE_WGL	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^#define GLFW_EXPOSE_NATIVE_WGL$/;"	d	file:
GLFW_EXPOSE_NATIVE_WGL	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^#define GLFW_EXPOSE_NATIVE_WGL$/;"	d	file:
GLFW_EXPOSE_NATIVE_WGL	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^#define GLFW_EXPOSE_NATIVE_WGL$/;"	d	file:
GLFW_EXPOSE_NATIVE_WGL	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^#define GLFW_EXPOSE_NATIVE_WGL$/;"	d	file:
GLFW_EXPOSE_NATIVE_WIN32	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^#define GLFW_EXPOSE_NATIVE_WIN32$/;"	d	file:
GLFW_EXPOSE_NATIVE_WIN32	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^#define GLFW_EXPOSE_NATIVE_WIN32$/;"	d	file:
GLFW_EXPOSE_NATIVE_WIN32	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^#define GLFW_EXPOSE_NATIVE_WIN32$/;"	d	file:
GLFW_EXPOSE_NATIVE_WIN32	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^#define GLFW_EXPOSE_NATIVE_WIN32$/;"	d	file:
GLFW_FALSE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_FALSE /;"	d
GLFW_FLOATING	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_FLOATING /;"	d
GLFW_FOCUSED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_FOCUSED /;"	d
GLFW_FORMAT_UNAVAILABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_FORMAT_UNAVAILABLE /;"	d
GLFW_GREEN_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_GREEN_BITS /;"	d
GLFW_HAND_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_HAND_CURSOR /;"	d
GLFW_HRESIZE_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_HRESIZE_CURSOR /;"	d
GLFW_IBEAM_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_IBEAM_CURSOR /;"	d
GLFW_ICONIFIED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_ICONIFIED /;"	d
GLFW_INCLUDE_NONE	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_NONE	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^#define GLFW_INCLUDE_NONE$/;"	d	file:
GLFW_INCLUDE_VULKAN	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^#define GLFW_INCLUDE_VULKAN$/;"	d	file:
GLFW_INCLUDE_VULKAN	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^#define GLFW_INCLUDE_VULKAN$/;"	d	file:
GLFW_INVALID_ENUM	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_INVALID_ENUM /;"	d
GLFW_INVALID_VALUE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_INVALID_VALUE /;"	d
GLFW_JOYSTICK_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_1 /;"	d
GLFW_JOYSTICK_10	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_10 /;"	d
GLFW_JOYSTICK_11	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_11 /;"	d
GLFW_JOYSTICK_12	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_12 /;"	d
GLFW_JOYSTICK_13	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_13 /;"	d
GLFW_JOYSTICK_14	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_14 /;"	d
GLFW_JOYSTICK_15	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_15 /;"	d
GLFW_JOYSTICK_16	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_16 /;"	d
GLFW_JOYSTICK_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_2 /;"	d
GLFW_JOYSTICK_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_3 /;"	d
GLFW_JOYSTICK_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_4 /;"	d
GLFW_JOYSTICK_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_5 /;"	d
GLFW_JOYSTICK_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_6 /;"	d
GLFW_JOYSTICK_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_7 /;"	d
GLFW_JOYSTICK_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_8 /;"	d
GLFW_JOYSTICK_9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_9 /;"	d
GLFW_JOYSTICK_LAST	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_JOYSTICK_LAST /;"	d
GLFW_KEY_0	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_0 /;"	d
GLFW_KEY_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_1 /;"	d
GLFW_KEY_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_2 /;"	d
GLFW_KEY_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_3 /;"	d
GLFW_KEY_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_4 /;"	d
GLFW_KEY_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_5 /;"	d
GLFW_KEY_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_6 /;"	d
GLFW_KEY_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_7 /;"	d
GLFW_KEY_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_8 /;"	d
GLFW_KEY_9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_9 /;"	d
GLFW_KEY_A	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_A /;"	d
GLFW_KEY_APOSTROPHE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_APOSTROPHE /;"	d
GLFW_KEY_B	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_B /;"	d
GLFW_KEY_BACKSLASH	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_BACKSLASH /;"	d
GLFW_KEY_BACKSPACE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_BACKSPACE /;"	d
GLFW_KEY_C	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_C /;"	d
GLFW_KEY_CAPS_LOCK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_CAPS_LOCK /;"	d
GLFW_KEY_COMMA	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_COMMA /;"	d
GLFW_KEY_D	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_D /;"	d
GLFW_KEY_DELETE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_DELETE /;"	d
GLFW_KEY_DOWN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_DOWN /;"	d
GLFW_KEY_E	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_E /;"	d
GLFW_KEY_END	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_END /;"	d
GLFW_KEY_ENTER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_ENTER /;"	d
GLFW_KEY_EQUAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_EQUAL /;"	d
GLFW_KEY_ESCAPE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_ESCAPE /;"	d
GLFW_KEY_F	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F /;"	d
GLFW_KEY_F1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F1 /;"	d
GLFW_KEY_F10	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F10 /;"	d
GLFW_KEY_F11	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F11 /;"	d
GLFW_KEY_F12	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F12 /;"	d
GLFW_KEY_F13	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F13 /;"	d
GLFW_KEY_F14	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F14 /;"	d
GLFW_KEY_F15	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F15 /;"	d
GLFW_KEY_F16	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F16 /;"	d
GLFW_KEY_F17	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F17 /;"	d
GLFW_KEY_F18	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F18 /;"	d
GLFW_KEY_F19	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F19 /;"	d
GLFW_KEY_F2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F2 /;"	d
GLFW_KEY_F20	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F20 /;"	d
GLFW_KEY_F21	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F21 /;"	d
GLFW_KEY_F22	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F22 /;"	d
GLFW_KEY_F23	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F23 /;"	d
GLFW_KEY_F24	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F24 /;"	d
GLFW_KEY_F25	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F25 /;"	d
GLFW_KEY_F3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F3 /;"	d
GLFW_KEY_F4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F4 /;"	d
GLFW_KEY_F5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F5 /;"	d
GLFW_KEY_F6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F6 /;"	d
GLFW_KEY_F7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F7 /;"	d
GLFW_KEY_F8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F8 /;"	d
GLFW_KEY_F9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_F9 /;"	d
GLFW_KEY_G	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_G /;"	d
GLFW_KEY_GRAVE_ACCENT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_GRAVE_ACCENT /;"	d
GLFW_KEY_H	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_H /;"	d
GLFW_KEY_HOME	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_HOME /;"	d
GLFW_KEY_I	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_I /;"	d
GLFW_KEY_INSERT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_INSERT /;"	d
GLFW_KEY_J	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_J /;"	d
GLFW_KEY_K	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_K /;"	d
GLFW_KEY_KP_0	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_0 /;"	d
GLFW_KEY_KP_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_1 /;"	d
GLFW_KEY_KP_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_2 /;"	d
GLFW_KEY_KP_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_3 /;"	d
GLFW_KEY_KP_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_4 /;"	d
GLFW_KEY_KP_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_5 /;"	d
GLFW_KEY_KP_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_6 /;"	d
GLFW_KEY_KP_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_7 /;"	d
GLFW_KEY_KP_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_8 /;"	d
GLFW_KEY_KP_9	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_9 /;"	d
GLFW_KEY_KP_ADD	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_ADD /;"	d
GLFW_KEY_KP_DECIMAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_DECIMAL /;"	d
GLFW_KEY_KP_DIVIDE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_DIVIDE /;"	d
GLFW_KEY_KP_ENTER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_ENTER /;"	d
GLFW_KEY_KP_EQUAL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_EQUAL /;"	d
GLFW_KEY_KP_MULTIPLY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_MULTIPLY /;"	d
GLFW_KEY_KP_SUBTRACT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_KP_SUBTRACT /;"	d
GLFW_KEY_L	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_L /;"	d
GLFW_KEY_LAST	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_LAST /;"	d
GLFW_KEY_LEFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT /;"	d
GLFW_KEY_LEFT_ALT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_ALT /;"	d
GLFW_KEY_LEFT_BRACKET	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_BRACKET /;"	d
GLFW_KEY_LEFT_CONTROL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_CONTROL /;"	d
GLFW_KEY_LEFT_SHIFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_SHIFT /;"	d
GLFW_KEY_LEFT_SUPER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_LEFT_SUPER /;"	d
GLFW_KEY_M	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_M /;"	d
GLFW_KEY_MENU	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_MENU /;"	d
GLFW_KEY_MINUS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_MINUS /;"	d
GLFW_KEY_N	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_N /;"	d
GLFW_KEY_NUM_LOCK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_NUM_LOCK /;"	d
GLFW_KEY_O	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_O /;"	d
GLFW_KEY_P	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_P /;"	d
GLFW_KEY_PAGE_DOWN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_PAGE_DOWN /;"	d
GLFW_KEY_PAGE_UP	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_PAGE_UP /;"	d
GLFW_KEY_PAUSE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_PAUSE /;"	d
GLFW_KEY_PERIOD	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_PERIOD /;"	d
GLFW_KEY_PRINT_SCREEN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_PRINT_SCREEN /;"	d
GLFW_KEY_Q	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_Q /;"	d
GLFW_KEY_R	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_R /;"	d
GLFW_KEY_RIGHT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT /;"	d
GLFW_KEY_RIGHT_ALT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_ALT /;"	d
GLFW_KEY_RIGHT_BRACKET	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_BRACKET /;"	d
GLFW_KEY_RIGHT_CONTROL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_CONTROL /;"	d
GLFW_KEY_RIGHT_SHIFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_SHIFT /;"	d
GLFW_KEY_RIGHT_SUPER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_RIGHT_SUPER /;"	d
GLFW_KEY_S	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_S /;"	d
GLFW_KEY_SCROLL_LOCK	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_SCROLL_LOCK /;"	d
GLFW_KEY_SEMICOLON	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_SEMICOLON /;"	d
GLFW_KEY_SLASH	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_SLASH /;"	d
GLFW_KEY_SPACE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_SPACE /;"	d
GLFW_KEY_T	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_T /;"	d
GLFW_KEY_TAB	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_TAB /;"	d
GLFW_KEY_U	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_U /;"	d
GLFW_KEY_UNKNOWN	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_UNKNOWN /;"	d
GLFW_KEY_UP	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_UP /;"	d
GLFW_KEY_V	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_V /;"	d
GLFW_KEY_W	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_W /;"	d
GLFW_KEY_WORLD_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_WORLD_1 /;"	d
GLFW_KEY_WORLD_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_WORLD_2 /;"	d
GLFW_KEY_X	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_X /;"	d
GLFW_KEY_Y	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_Y /;"	d
GLFW_KEY_Z	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_KEY_Z /;"	d
GLFW_LOSE_CONTEXT_ON_RESET	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_LOSE_CONTEXT_ON_RESET /;"	d
GLFW_MAXIMIZED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MAXIMIZED /;"	d
GLFW_MOD_ALT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOD_ALT /;"	d
GLFW_MOD_CONTROL	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOD_CONTROL /;"	d
GLFW_MOD_SHIFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOD_SHIFT /;"	d
GLFW_MOD_SUPER	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOD_SUPER /;"	d
GLFW_MOUSE_BUTTON_1	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_1 /;"	d
GLFW_MOUSE_BUTTON_2	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_2 /;"	d
GLFW_MOUSE_BUTTON_3	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_3 /;"	d
GLFW_MOUSE_BUTTON_4	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_4 /;"	d
GLFW_MOUSE_BUTTON_5	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_5 /;"	d
GLFW_MOUSE_BUTTON_6	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_6 /;"	d
GLFW_MOUSE_BUTTON_7	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_7 /;"	d
GLFW_MOUSE_BUTTON_8	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_8 /;"	d
GLFW_MOUSE_BUTTON_LAST	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_LAST /;"	d
GLFW_MOUSE_BUTTON_LEFT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_LEFT /;"	d
GLFW_MOUSE_BUTTON_MIDDLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_MIDDLE /;"	d
GLFW_MOUSE_BUTTON_RIGHT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_MOUSE_BUTTON_RIGHT /;"	d
GLFW_NOT_INITIALIZED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_NOT_INITIALIZED /;"	d
GLFW_NO_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_NO_API /;"	d
GLFW_NO_CURRENT_CONTEXT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_NO_CURRENT_CONTEXT /;"	d
GLFW_NO_RESET_NOTIFICATION	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_NO_RESET_NOTIFICATION /;"	d
GLFW_NO_ROBUSTNESS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_NO_ROBUSTNESS /;"	d
GLFW_NO_WINDOW_CONTEXT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_NO_WINDOW_CONTEXT /;"	d
GLFW_OPENGL_ANY_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_ANY_PROFILE /;"	d
GLFW_OPENGL_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_API /;"	d
GLFW_OPENGL_COMPAT_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_COMPAT_PROFILE /;"	d
GLFW_OPENGL_CORE_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_CORE_PROFILE /;"	d
GLFW_OPENGL_DEBUG_CONTEXT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_DEBUG_CONTEXT /;"	d
GLFW_OPENGL_ES_API	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_ES_API /;"	d
GLFW_OPENGL_FORWARD_COMPAT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_FORWARD_COMPAT /;"	d
GLFW_OPENGL_PROFILE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OPENGL_PROFILE /;"	d
GLFW_OUT_OF_MEMORY	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_OUT_OF_MEMORY /;"	d
GLFW_PLATFORM_ERROR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_PLATFORM_ERROR /;"	d
GLFW_PRESS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_PRESS /;"	d
GLFW_RED_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_RED_BITS /;"	d
GLFW_REFRESH_RATE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_REFRESH_RATE /;"	d
GLFW_RELEASE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_RELEASE /;"	d
GLFW_RELEASE_BEHAVIOR_FLUSH	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_RELEASE_BEHAVIOR_FLUSH /;"	d
GLFW_RELEASE_BEHAVIOR_NONE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_RELEASE_BEHAVIOR_NONE /;"	d
GLFW_REPEAT	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_REPEAT /;"	d
GLFW_RESIZABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_RESIZABLE /;"	d
GLFW_SAMPLES	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_SAMPLES /;"	d
GLFW_SRGB_CAPABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_SRGB_CAPABLE /;"	d
GLFW_STENCIL_BITS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_STENCIL_BITS /;"	d
GLFW_STEREO	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_STEREO /;"	d
GLFW_STICKY_KEYS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_STICKY_KEYS /;"	d
GLFW_STICKY_MOUSE_BUTTONS	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_STICKY_MOUSE_BUTTONS /;"	d
GLFW_TRUE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_TRUE /;"	d
GLFW_VERSION_MAJOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_VERSION_MAJOR /;"	d
GLFW_VERSION_MINOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_VERSION_MINOR /;"	d
GLFW_VERSION_REVISION	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_VERSION_REVISION /;"	d
GLFW_VERSION_UNAVAILABLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_VERSION_UNAVAILABLE /;"	d
GLFW_VISIBLE	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_VISIBLE /;"	d
GLFW_VRESIZE_CURSOR	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define GLFW_VRESIZE_CURSOR /;"	d
GLFW_WINGDIAPI_DEFINED	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^ #define GLFW_WINGDIAPI_DEFINED$/;"	d
GLFWcharfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcharfun)(GLFWwindow*,unsigned int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,unsigned int)
GLFWcharmodsfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcharmodsfun)(GLFWwindow*,unsigned int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,unsigned int,int)
GLFWcursor	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWcursor GLFWcursor;$/;"	t	typeref:struct:GLFWcursor
GLFWcursorenterfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcursorenterfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWcursorposfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWcursorposfun)(GLFWwindow*,double,double);$/;"	t	typeref:typename:void (*)(GLFWwindow *,double,double)
GLFWdropfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWdropfun)(GLFWwindow*,int,const char**);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,const char **)
GLFWerrorfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWerrorfun)(int,const char*);$/;"	t	typeref:typename:void (*)(int,const char *)
GLFWframebuffersizefun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWframebuffersizefun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GLFWgammaramp	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWgammaramp$/;"	s
GLFWgammaramp	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^} GLFWgammaramp;$/;"	t	typeref:struct:GLFWgammaramp
GLFWglproc	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (*GLFWglproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLFWimage	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWimage$/;"	s
GLFWimage	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^} GLFWimage;$/;"	t	typeref:struct:GLFWimage
GLFWjoystickfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWjoystickfun)(int,int);$/;"	t	typeref:typename:void (*)(int,int)
GLFWkeyfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWkeyfun)(GLFWwindow*,int,int,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int,int,int)
GLFWmonitor	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWmonitor GLFWmonitor;$/;"	t	typeref:struct:GLFWmonitor
GLFWmonitorfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWmonitorfun)(GLFWmonitor*,int);$/;"	t	typeref:typename:void (*)(GLFWmonitor *,int)
GLFWmousebuttonfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWmousebuttonfun)(GLFWwindow*,int,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int,int)
GLFWscrollfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWscrollfun)(GLFWwindow*,double,double);$/;"	t	typeref:typename:void (*)(GLFWwindow *,double,double)
GLFWvidmode	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWvidmode$/;"	s
GLFWvidmode	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^} GLFWvidmode;$/;"	t	typeref:struct:GLFWvidmode
GLFWvkproc	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (*GLFWvkproc)(void);$/;"	t	typeref:typename:void (*)(void)
GLFWwindow	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef struct GLFWwindow GLFWwindow;$/;"	t	typeref:struct:GLFWwindow
GLFWwindowclosefun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowclosefun)(GLFWwindow*);$/;"	t	typeref:typename:void (*)(GLFWwindow *)
GLFWwindowfocusfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowfocusfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWwindowiconifyfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowiconifyfun)(GLFWwindow*,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int)
GLFWwindowposfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowposfun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GLFWwindowrefreshfun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowrefreshfun)(GLFWwindow*);$/;"	t	typeref:typename:void (*)(GLFWwindow *)
GLFWwindowsizefun	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^typedef void (* GLFWwindowsizefun)(GLFWwindow*,int,int);$/;"	t	typeref:typename:void (*)(GLFWwindow *,int,int)
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_ACTIVE_ATTRIBUTES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTES	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTES /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_ATTRIBUTE_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_ATTRIBUTE_MAX_LENGTH /;"	d
GL_ACTIVE_PROGRAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_PROGRAM	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_PROGRAM /;"	d
GL_ACTIVE_RESOURCES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_RESOURCES	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_RESOURCES /;"	d
GL_ACTIVE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINES /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORMS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_SUBROUTINE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_TEXTURE /;"	d
GL_ACTIVE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORMS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCKS /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_BLOCK_MAX_NAME_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_UNIFORM_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_UNIFORM_MAX_LENGTH /;"	d
GL_ACTIVE_VARIABLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ACTIVE_VARIABLES	lib/gl3w/GL/glcorearb.h	/^#define GL_ACTIVE_VARIABLES /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALIASED_LINE_WIDTH_RANGE	lib/gl3w/GL/glcorearb.h	/^#define GL_ALIASED_LINE_WIDTH_RANGE /;"	d
GL_ALL_BARRIER_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_BARRIER_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_ALL_BARRIER_BITS /;"	d
GL_ALL_SHADER_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALL_SHADER_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_ALL_SHADER_BITS /;"	d
GL_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ALPHA /;"	d
GL_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_ALPHA /;"	d
GL_ALREADY_SIGNALED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALREADY_SIGNALED	lib/gl3w/GL/glcorearb.h	/^#define GL_ALREADY_SIGNALED /;"	d
GL_ALWAYS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ALWAYS /;"	d
GL_ALWAYS	lib/gl3w/GL/glcorearb.h	/^#define GL_ALWAYS /;"	d
GL_AND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_AND /;"	d
GL_AND	lib/gl3w/GL/glcorearb.h	/^#define GL_AND /;"	d
GL_AND_INVERTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_AND_INVERTED /;"	d
GL_AND_INVERTED	lib/gl3w/GL/glcorearb.h	/^#define GL_AND_INVERTED /;"	d
GL_AND_REVERSE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_AND_REVERSE /;"	d
GL_AND_REVERSE	lib/gl3w/GL/glcorearb.h	/^#define GL_AND_REVERSE /;"	d
GL_ANY_SAMPLES_PASSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED	lib/gl3w/GL/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_ANY_SAMPLES_PASSED_CONSERVATIVE	lib/gl3w/GL/glcorearb.h	/^#define GL_ANY_SAMPLES_PASSED_CONSERVATIVE /;"	d
GL_ARB_ES2_compatibility	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES2_compatibility	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_ES2_compatibility /;"	d
GL_ARB_ES3_compatibility	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_ES3_compatibility	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_ES3_compatibility /;"	d
GL_ARB_arrays_of_arrays	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_arrays_of_arrays	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_arrays_of_arrays /;"	d
GL_ARB_base_instance	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_base_instance	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_base_instance /;"	d
GL_ARB_blend_func_extended	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_blend_func_extended	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_blend_func_extended /;"	d
GL_ARB_cl_event	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_cl_event	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_cl_event /;"	d
GL_ARB_clear_buffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_clear_buffer_object	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_clear_buffer_object /;"	d
GL_ARB_compressed_texture_pixel_storage	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compressed_texture_pixel_storage	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_compressed_texture_pixel_storage /;"	d
GL_ARB_compute_shader	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_compute_shader	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_compute_shader /;"	d
GL_ARB_conservative_depth	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_conservative_depth	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_conservative_depth /;"	d
GL_ARB_copy_buffer	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_buffer	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_copy_buffer /;"	d
GL_ARB_copy_image	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_copy_image	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_copy_image /;"	d
GL_ARB_debug_output	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_debug_output	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_debug_output /;"	d
GL_ARB_depth_buffer_float	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_buffer_float	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_depth_buffer_float /;"	d
GL_ARB_depth_clamp	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_depth_clamp	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_depth_clamp /;"	d
GL_ARB_draw_buffers_blend	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_buffers_blend	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_draw_buffers_blend /;"	d
GL_ARB_draw_elements_base_vertex	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_elements_base_vertex	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_draw_elements_base_vertex /;"	d
GL_ARB_draw_indirect	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_draw_indirect	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_draw_indirect /;"	d
GL_ARB_explicit_attrib_location	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_attrib_location	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_explicit_attrib_location /;"	d
GL_ARB_explicit_uniform_location	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_explicit_uniform_location	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_explicit_uniform_location /;"	d
GL_ARB_fragment_coord_conventions	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_coord_conventions	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_fragment_coord_conventions /;"	d
GL_ARB_fragment_layer_viewport	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_fragment_layer_viewport	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_fragment_layer_viewport /;"	d
GL_ARB_framebuffer_no_attachments	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_no_attachments	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_framebuffer_no_attachments /;"	d
GL_ARB_framebuffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_object	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_framebuffer_object /;"	d
GL_ARB_framebuffer_sRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_framebuffer_sRGB	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_framebuffer_sRGB /;"	d
GL_ARB_get_program_binary	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_get_program_binary	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_get_program_binary /;"	d
GL_ARB_gpu_shader5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader5	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_gpu_shader5 /;"	d
GL_ARB_gpu_shader_fp64	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_gpu_shader_fp64	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_gpu_shader_fp64 /;"	d
GL_ARB_half_float_vertex	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_half_float_vertex	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_half_float_vertex /;"	d
GL_ARB_internalformat_query	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_internalformat_query /;"	d
GL_ARB_internalformat_query2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_internalformat_query2	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_internalformat_query2 /;"	d
GL_ARB_invalidate_subdata	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_invalidate_subdata	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_invalidate_subdata /;"	d
GL_ARB_map_buffer_alignment	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_alignment	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_map_buffer_alignment /;"	d
GL_ARB_map_buffer_range	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_map_buffer_range	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_map_buffer_range /;"	d
GL_ARB_multi_draw_indirect	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_multi_draw_indirect	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_multi_draw_indirect /;"	d
GL_ARB_occlusion_query2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_occlusion_query2	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_occlusion_query2 /;"	d
GL_ARB_program_interface_query	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_program_interface_query	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_program_interface_query /;"	d
GL_ARB_provoking_vertex	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_provoking_vertex	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_provoking_vertex /;"	d
GL_ARB_robust_buffer_access_behavior	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robust_buffer_access_behavior	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_robust_buffer_access_behavior /;"	d
GL_ARB_robustness	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_robustness /;"	d
GL_ARB_robustness_isolation	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_robustness_isolation	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_robustness_isolation /;"	d
GL_ARB_sample_shading	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sample_shading	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_sample_shading /;"	d
GL_ARB_sampler_objects	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_sampler_objects	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_sampler_objects /;"	d
GL_ARB_seamless_cube_map	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_seamless_cube_map	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_seamless_cube_map /;"	d
GL_ARB_separate_shader_objects	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_separate_shader_objects	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_separate_shader_objects /;"	d
GL_ARB_shader_atomic_counters	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_atomic_counters	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_atomic_counters /;"	d
GL_ARB_shader_bit_encoding	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_bit_encoding	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_bit_encoding /;"	d
GL_ARB_shader_image_load_store	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_load_store	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_image_load_store /;"	d
GL_ARB_shader_image_size	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_image_size	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_image_size /;"	d
GL_ARB_shader_stencil_export	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_stencil_export	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_stencil_export /;"	d
GL_ARB_shader_storage_buffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_storage_buffer_object	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_storage_buffer_object /;"	d
GL_ARB_shader_subroutine	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shader_subroutine	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shader_subroutine /;"	d
GL_ARB_shading_language_420pack	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_420pack	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shading_language_420pack /;"	d
GL_ARB_shading_language_include	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_include	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shading_language_include /;"	d
GL_ARB_shading_language_packing	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_shading_language_packing	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_shading_language_packing /;"	d
GL_ARB_stencil_texturing	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_stencil_texturing	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_stencil_texturing /;"	d
GL_ARB_sync	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_sync /;"	d
GL_ARB_sync	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_sync /;"	d
GL_ARB_tessellation_shader	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_tessellation_shader	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_tessellation_shader /;"	d
GL_ARB_texture_buffer_object_rgb32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_object_rgb32	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_buffer_object_rgb32 /;"	d
GL_ARB_texture_buffer_range	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_buffer_range	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_buffer_range /;"	d
GL_ARB_texture_compression_bptc	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_bptc	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_compression_bptc /;"	d
GL_ARB_texture_compression_rgtc	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_compression_rgtc	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_compression_rgtc /;"	d
GL_ARB_texture_cube_map_array	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_cube_map_array	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_cube_map_array /;"	d
GL_ARB_texture_gather	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_gather	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_gather /;"	d
GL_ARB_texture_multisample	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_multisample	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_multisample /;"	d
GL_ARB_texture_query_levels	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_levels	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_query_levels /;"	d
GL_ARB_texture_query_lod	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_query_lod	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_query_lod /;"	d
GL_ARB_texture_rg	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rg	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_rg /;"	d
GL_ARB_texture_rgb10_a2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_rgb10_a2ui	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_rgb10_a2ui /;"	d
GL_ARB_texture_storage	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_storage /;"	d
GL_ARB_texture_storage_multisample	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_storage_multisample	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_storage_multisample /;"	d
GL_ARB_texture_swizzle	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_swizzle	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_swizzle /;"	d
GL_ARB_texture_view	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_texture_view	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_texture_view /;"	d
GL_ARB_timer_query	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_timer_query	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_timer_query /;"	d
GL_ARB_transform_feedback2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback2	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_transform_feedback2 /;"	d
GL_ARB_transform_feedback3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback3	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_transform_feedback3 /;"	d
GL_ARB_transform_feedback_instanced	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_transform_feedback_instanced	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_transform_feedback_instanced /;"	d
GL_ARB_uniform_buffer_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_uniform_buffer_object	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_uniform_buffer_object /;"	d
GL_ARB_vertex_array_bgra	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_bgra	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_array_bgra /;"	d
GL_ARB_vertex_array_object	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_array_object	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_array_object /;"	d
GL_ARB_vertex_attrib_64bit	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_64bit	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_attrib_64bit /;"	d
GL_ARB_vertex_attrib_binding	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_attrib_binding	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_attrib_binding /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_vertex_type_2_10_10_10_rev	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_vertex_type_2_10_10_10_rev /;"	d
GL_ARB_viewport_array	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARB_viewport_array	lib/gl3w/GL/glcorearb.h	/^#define GL_ARB_viewport_array /;"	d
GL_ARRAY_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_BUFFER /;"	d
GL_ARRAY_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_BUFFER_BINDING /;"	d
GL_ARRAY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_SIZE /;"	d
GL_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	/^#define GL_ARRAY_STRIDE /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BARRIER_BIT /;"	d
GL_ATOMIC_COUNTER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTERS /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_ACTIVE_ATOMIC_COUNTER_INDICES /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_BINDING /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_DATA_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATOMIC_COUNTER_BUFFER_START	lib/gl3w/GL/glcorearb.h	/^#define GL_ATOMIC_COUNTER_BUFFER_START /;"	d
GL_ATTACHED_SHADERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_ATTACHED_SHADERS	lib/gl3w/GL/glcorearb.h	/^#define GL_ATTACHED_SHADERS /;"	d
GL_AUTO_GENERATE_MIPMAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_AUTO_GENERATE_MIPMAP	lib/gl3w/GL/glcorearb.h	/^#define GL_AUTO_GENERATE_MIPMAP /;"	d
GL_BACK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BACK /;"	d
GL_BACK	lib/gl3w/GL/glcorearb.h	/^#define GL_BACK /;"	d
GL_BACK_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BACK_LEFT /;"	d
GL_BACK_LEFT	lib/gl3w/GL/glcorearb.h	/^#define GL_BACK_LEFT /;"	d
GL_BACK_RIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BACK_RIGHT /;"	d
GL_BACK_RIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_BACK_RIGHT /;"	d
GL_BGR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BGR /;"	d
GL_BGR	lib/gl3w/GL/glcorearb.h	/^#define GL_BGR /;"	d
GL_BGRA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BGRA /;"	d
GL_BGRA	lib/gl3w/GL/glcorearb.h	/^#define GL_BGRA /;"	d
GL_BGRA_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGRA_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_BGRA_INTEGER /;"	d
GL_BGR_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BGR_INTEGER /;"	d
GL_BGR_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_BGR_INTEGER /;"	d
GL_BLEND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND /;"	d
GL_BLEND	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND /;"	d
GL_BLEND_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_COLOR /;"	d
GL_BLEND_DST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_DST /;"	d
GL_BLEND_DST	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_DST /;"	d
GL_BLEND_DST_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_DST_ALPHA /;"	d
GL_BLEND_DST_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_DST_RGB	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_DST_RGB /;"	d
GL_BLEND_EQUATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_EQUATION /;"	d
GL_BLEND_EQUATION_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_EQUATION_ALPHA /;"	d
GL_BLEND_EQUATION_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_EQUATION_RGB	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_EQUATION_RGB /;"	d
GL_BLEND_SRC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_SRC /;"	d
GL_BLEND_SRC_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_SRC_ALPHA /;"	d
GL_BLEND_SRC_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLEND_SRC_RGB	lib/gl3w/GL/glcorearb.h	/^#define GL_BLEND_SRC_RGB /;"	d
GL_BLOCK_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLOCK_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_BLOCK_INDEX /;"	d
GL_BLUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLUE /;"	d
GL_BLUE	lib/gl3w/GL/glcorearb.h	/^#define GL_BLUE /;"	d
GL_BLUE_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BLUE_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_BLUE_INTEGER /;"	d
GL_BOOL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BOOL /;"	d
GL_BOOL	lib/gl3w/GL/glcorearb.h	/^#define GL_BOOL /;"	d
GL_BOOL_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC2	lib/gl3w/GL/glcorearb.h	/^#define GL_BOOL_VEC2 /;"	d
GL_BOOL_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC3	lib/gl3w/GL/glcorearb.h	/^#define GL_BOOL_VEC3 /;"	d
GL_BOOL_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BOOL_VEC4	lib/gl3w/GL/glcorearb.h	/^#define GL_BOOL_VEC4 /;"	d
GL_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER /;"	d
GL_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER /;"	d
GL_BUFFER_ACCESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_ACCESS /;"	d
GL_BUFFER_ACCESS_FLAGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_ACCESS_FLAGS	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_ACCESS_FLAGS /;"	d
GL_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_BINDING /;"	d
GL_BUFFER_DATA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_DATA_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_DATA_SIZE /;"	d
GL_BUFFER_MAPPED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAPPED	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAPPED /;"	d
GL_BUFFER_MAP_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAP_LENGTH /;"	d
GL_BUFFER_MAP_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAP_OFFSET /;"	d
GL_BUFFER_MAP_POINTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_MAP_POINTER	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_MAP_POINTER /;"	d
GL_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_SIZE /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_UPDATE_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_UPDATE_BARRIER_BIT /;"	d
GL_BUFFER_USAGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_USAGE	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_USAGE /;"	d
GL_BUFFER_VARIABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BUFFER_VARIABLE	lib/gl3w/GL/glcorearb.h	/^#define GL_BUFFER_VARIABLE /;"	d
GL_BYTE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_BYTE /;"	d
GL_BYTE	lib/gl3w/GL/glcorearb.h	/^#define GL_BYTE /;"	d
GL_CAVEAT_SUPPORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CAVEAT_SUPPORT	lib/gl3w/GL/glcorearb.h	/^#define GL_CAVEAT_SUPPORT /;"	d
GL_CCW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CCW /;"	d
GL_CCW	lib/gl3w/GL/glcorearb.h	/^#define GL_CCW /;"	d
GL_CLAMP_READ_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_READ_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_CLAMP_READ_COLOR /;"	d
GL_CLAMP_TO_BORDER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_BORDER	lib/gl3w/GL/glcorearb.h	/^#define GL_CLAMP_TO_BORDER /;"	d
GL_CLAMP_TO_EDGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLAMP_TO_EDGE	lib/gl3w/GL/glcorearb.h	/^#define GL_CLAMP_TO_EDGE /;"	d
GL_CLEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLEAR /;"	d
GL_CLEAR	lib/gl3w/GL/glcorearb.h	/^#define GL_CLEAR /;"	d
GL_CLEAR_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLEAR_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_CLEAR_BUFFER /;"	d
GL_CLIP_DISTANCE0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE0	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE0 /;"	d
GL_CLIP_DISTANCE1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE1	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE1 /;"	d
GL_CLIP_DISTANCE2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE2	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE2 /;"	d
GL_CLIP_DISTANCE3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE3	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE3 /;"	d
GL_CLIP_DISTANCE4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE4	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE4 /;"	d
GL_CLIP_DISTANCE5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE5	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE5 /;"	d
GL_CLIP_DISTANCE6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE6	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE6 /;"	d
GL_CLIP_DISTANCE7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_CLIP_DISTANCE7	lib/gl3w/GL/glcorearb.h	/^#define GL_CLIP_DISTANCE7 /;"	d
GL_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR /;"	d
GL_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR /;"	d
GL_COLOR_ATTACHMENT0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT0	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT0 /;"	d
GL_COLOR_ATTACHMENT1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT1	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT1 /;"	d
GL_COLOR_ATTACHMENT10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT10	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT10 /;"	d
GL_COLOR_ATTACHMENT11	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT11	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT11 /;"	d
GL_COLOR_ATTACHMENT12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT12	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT12 /;"	d
GL_COLOR_ATTACHMENT13	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT13	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT13 /;"	d
GL_COLOR_ATTACHMENT14	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT14	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT14 /;"	d
GL_COLOR_ATTACHMENT15	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT15	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT15 /;"	d
GL_COLOR_ATTACHMENT2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT2	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT2 /;"	d
GL_COLOR_ATTACHMENT3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT3	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT3 /;"	d
GL_COLOR_ATTACHMENT4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT4	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT4 /;"	d
GL_COLOR_ATTACHMENT5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT5	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT5 /;"	d
GL_COLOR_ATTACHMENT6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT6	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT6 /;"	d
GL_COLOR_ATTACHMENT7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT7	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT7 /;"	d
GL_COLOR_ATTACHMENT8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT8	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT8 /;"	d
GL_COLOR_ATTACHMENT9	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_ATTACHMENT9	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ATTACHMENT9 /;"	d
GL_COLOR_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_BUFFER_BIT /;"	d
GL_COLOR_CLEAR_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_CLEAR_VALUE	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_CLEAR_VALUE /;"	d
GL_COLOR_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_COMPONENTS /;"	d
GL_COLOR_ENCODING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_ENCODING	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_ENCODING /;"	d
GL_COLOR_LOGIC_OP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_LOGIC_OP	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_LOGIC_OP /;"	d
GL_COLOR_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_RENDERABLE	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_RENDERABLE /;"	d
GL_COLOR_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COLOR_WRITEMASK	lib/gl3w/GL/glcorearb.h	/^#define GL_COLOR_WRITEMASK /;"	d
GL_COMMAND_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMMAND_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_COMMAND_BARRIER_BIT /;"	d
GL_COMPARE_REF_TO_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPARE_REF_TO_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPARE_REF_TO_TEXTURE /;"	d
GL_COMPATIBLE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPATIBLE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPATIBLE_SUBROUTINES /;"	d
GL_COMPILE_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPILE_STATUS	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPILE_STATUS /;"	d
GL_COMPRESSED_R11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_R11_EAC	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_R11_EAC /;"	d
GL_COMPRESSED_RED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RED /;"	d
GL_COMPRESSED_RED_RGTC1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RED_RGTC1	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RED_RGTC1 /;"	d
GL_COMPRESSED_RG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RG /;"	d
GL_COMPRESSED_RG11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RG11_EAC	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RG11_EAC /;"	d
GL_COMPRESSED_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB /;"	d
GL_COMPRESSED_RGB8_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_ETC2	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB8_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA8_ETC2_EAC	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA8_ETC2_EAC /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x10_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x6_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_10x8_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x10_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_12x12_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_4x4_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x4_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_5x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_6x6_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x6_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_ASTC_8x8_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGBA_BPTC_UNORM_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGBA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_SIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_ARB /;"	d
GL_COMPRESSED_RG_RGTC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_RG_RGTC2	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_R11_EAC	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_R11_EAC /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RED_RGTC1	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RED_RGTC1 /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG11_EAC	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG11_EAC /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SIGNED_RG_RGTC2	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SIGNED_RG_RGTC2 /;"	d
GL_COMPRESSED_SRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ALPHA8_ETC2_EAC /;"	d
GL_COMPRESSED_SRGB8_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_ETC2	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 /;"	d
GL_COMPRESSED_SRGB_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_SRGB_ALPHA_BPTC_UNORM_ARB /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPRESSED_TEXTURE_FORMATS	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_COMPUTE_LOCAL_WORK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_LOCAL_WORK_SIZE /;"	d
GL_COMPUTE_LOCAL_WORK_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_LOCAL_WORK_SIZE /;"	d
GL_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SHADER /;"	d
GL_COMPUTE_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SHADER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SHADER_BIT /;"	d
GL_COMPUTE_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_SUBROUTINE_UNIFORM /;"	d
GL_COMPUTE_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_COMPUTE_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_COMPUTE_TEXTURE /;"	d
GL_CONDITION_SATISFIED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONDITION_SATISFIED	lib/gl3w/GL/glcorearb.h	/^#define GL_CONDITION_SATISFIED /;"	d
GL_CONSTANT_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_CONSTANT_ALPHA /;"	d
GL_CONSTANT_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONSTANT_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_CONSTANT_COLOR /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_COMPATIBILITY_PROFILE_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_COMPATIBILITY_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_CORE_PROFILE_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_CORE_PROFILE_BIT /;"	d
GL_CONTEXT_FLAGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAGS	lib/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAGS /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_DEBUG_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_DEBUG_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_FORWARD_COMPATIBLE_BIT /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_FLAG_ROBUST_ACCESS_BIT_ARB /;"	d
GL_CONTEXT_PROFILE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_CONTEXT_PROFILE_MASK	lib/gl3w/GL/glcorearb.h	/^#define GL_CONTEXT_PROFILE_MASK /;"	d
GL_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COPY /;"	d
GL_COPY	lib/gl3w/GL/glcorearb.h	/^#define GL_COPY /;"	d
GL_COPY_INVERTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COPY_INVERTED /;"	d
GL_COPY_INVERTED	lib/gl3w/GL/glcorearb.h	/^#define GL_COPY_INVERTED /;"	d
GL_COPY_READ_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_COPY_READ_BUFFER /;"	d
GL_COPY_READ_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_READ_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_COPY_READ_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER /;"	d
GL_COPY_WRITE_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_COPY_WRITE_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_COPY_WRITE_BUFFER_BINDING /;"	d
GL_CULL_FACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE	lib/gl3w/GL/glcorearb.h	/^#define GL_CULL_FACE /;"	d
GL_CULL_FACE_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CULL_FACE_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_CULL_FACE_MODE /;"	d
GL_CURRENT_PROGRAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_PROGRAM	lib/gl3w/GL/glcorearb.h	/^#define GL_CURRENT_PROGRAM /;"	d
GL_CURRENT_QUERY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_QUERY	lib/gl3w/GL/glcorearb.h	/^#define GL_CURRENT_QUERY /;"	d
GL_CURRENT_VERTEX_ATTRIB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CURRENT_VERTEX_ATTRIB	lib/gl3w/GL/glcorearb.h	/^#define GL_CURRENT_VERTEX_ATTRIB /;"	d
GL_CW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_CW /;"	d
GL_CW	lib/gl3w/GL/glcorearb.h	/^#define GL_CW /;"	d
GL_DEBUG_CALLBACK_FUNCTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_FUNCTION_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_FUNCTION_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_CALLBACK_USER_PARAM_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_CALLBACK_USER_PARAM_ARB /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_GROUP_STACK_DEPTH	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_DEBUG_LOGGED_MESSAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_LOGGED_MESSAGES_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_NEXT_LOGGED_MESSAGE_LENGTH_ARB /;"	d
GL_DEBUG_OUTPUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_OUTPUT_SYNCHRONOUS_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_HIGH_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_HIGH_ARB /;"	d
GL_DEBUG_SEVERITY_LOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_LOW_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_LOW_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_MEDIUM_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_MEDIUM_ARB /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SEVERITY_NOTIFICATION	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SEVERITY_NOTIFICATION /;"	d
GL_DEBUG_SOURCE_API	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_API /;"	d
GL_DEBUG_SOURCE_API_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_API_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_API_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_APPLICATION_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_APPLICATION_ARB /;"	d
GL_DEBUG_SOURCE_OTHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_OTHER_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_OTHER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_SHADER_COMPILER_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_SHADER_COMPILER_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_THIRD_PARTY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_THIRD_PARTY_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_SOURCE_WINDOW_SYSTEM_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_DEPRECATED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_ERROR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR /;"	d
GL_DEBUG_TYPE_ERROR_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_ERROR_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_ERROR_ARB /;"	d
GL_DEBUG_TYPE_MARKER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_MARKER	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_MARKER /;"	d
GL_DEBUG_TYPE_OTHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER /;"	d
GL_DEBUG_TYPE_OTHER_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_OTHER_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_OTHER_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_PERFORMANCE_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PERFORMANCE_ARB /;"	d
GL_DEBUG_TYPE_POP_GROUP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_POP_GROUP	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_POP_GROUP /;"	d
GL_DEBUG_TYPE_PORTABILITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PORTABILITY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PORTABILITY_ARB /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_PUSH_GROUP	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_PUSH_GROUP /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_DEBUG_TYPE_UNDEFINED_BEHAVIOR_ARB /;"	d
GL_DECR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DECR /;"	d
GL_DECR	lib/gl3w/GL/glcorearb.h	/^#define GL_DECR /;"	d
GL_DECR_WRAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DECR_WRAP /;"	d
GL_DECR_WRAP	lib/gl3w/GL/glcorearb.h	/^#define GL_DECR_WRAP /;"	d
GL_DELETE_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DELETE_STATUS /;"	d
GL_DELETE_STATUS	lib/gl3w/GL/glcorearb.h	/^#define GL_DELETE_STATUS /;"	d
GL_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH /;"	d
GL_DEPTH	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH /;"	d
GL_DEPTH24_STENCIL8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH24_STENCIL8	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH24_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH32F_STENCIL8	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH32F_STENCIL8 /;"	d
GL_DEPTH_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_ATTACHMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_ATTACHMENT /;"	d
GL_DEPTH_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_BUFFER_BIT /;"	d
GL_DEPTH_CLAMP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLAMP	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_CLAMP /;"	d
GL_DEPTH_CLEAR_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_CLEAR_VALUE	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_CLEAR_VALUE /;"	d
GL_DEPTH_COMPONENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT /;"	d
GL_DEPTH_COMPONENT16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT16	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT16 /;"	d
GL_DEPTH_COMPONENT24	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT24	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT24 /;"	d
GL_DEPTH_COMPONENT32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT32 /;"	d
GL_DEPTH_COMPONENT32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENT32F	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENT32F /;"	d
GL_DEPTH_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_COMPONENTS /;"	d
GL_DEPTH_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_FUNC	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_FUNC /;"	d
GL_DEPTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_RANGE	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_RANGE /;"	d
GL_DEPTH_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_RENDERABLE	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_RENDERABLE /;"	d
GL_DEPTH_STENCIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_ATTACHMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL_ATTACHMENT /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_STENCIL_TEXTURE_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_STENCIL_TEXTURE_MODE /;"	d
GL_DEPTH_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_TEST	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_TEST /;"	d
GL_DEPTH_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DEPTH_WRITEMASK	lib/gl3w/GL/glcorearb.h	/^#define GL_DEPTH_WRITEMASK /;"	d
GL_DISPATCH_INDIRECT_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPATCH_INDIRECT_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_DISPATCH_INDIRECT_BUFFER_BINDING /;"	d
GL_DISPLAY_LIST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DISPLAY_LIST	lib/gl3w/GL/glcorearb.h	/^#define GL_DISPLAY_LIST /;"	d
GL_DITHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DITHER /;"	d
GL_DITHER	lib/gl3w/GL/glcorearb.h	/^#define GL_DITHER /;"	d
GL_DONT_CARE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DONT_CARE /;"	d
GL_DONT_CARE	lib/gl3w/GL/glcorearb.h	/^#define GL_DONT_CARE /;"	d
GL_DOUBLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE /;"	d
GL_DOUBLE	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE /;"	d
GL_DOUBLEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLEBUFFER /;"	d
GL_DOUBLEBUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLEBUFFER /;"	d
GL_DOUBLE_MAT2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2 /;"	d
GL_DOUBLE_MAT2x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x3	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2x3 /;"	d
GL_DOUBLE_MAT2x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT2x4	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT2x4 /;"	d
GL_DOUBLE_MAT3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3 /;"	d
GL_DOUBLE_MAT3x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x2	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3x2 /;"	d
GL_DOUBLE_MAT3x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT3x4	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT3x4 /;"	d
GL_DOUBLE_MAT4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4 /;"	d
GL_DOUBLE_MAT4x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x2	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4x2 /;"	d
GL_DOUBLE_MAT4x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_MAT4x3	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_MAT4x3 /;"	d
GL_DOUBLE_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC2	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_VEC2 /;"	d
GL_DOUBLE_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC3	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_VEC3 /;"	d
GL_DOUBLE_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DOUBLE_VEC4	lib/gl3w/GL/glcorearb.h	/^#define GL_DOUBLE_VEC4 /;"	d
GL_DRAW_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER /;"	d
GL_DRAW_BUFFER0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER0	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER0 /;"	d
GL_DRAW_BUFFER1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER1	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER1 /;"	d
GL_DRAW_BUFFER10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER10	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER10 /;"	d
GL_DRAW_BUFFER11	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER11	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER11 /;"	d
GL_DRAW_BUFFER12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER12	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER12 /;"	d
GL_DRAW_BUFFER13	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER13	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER13 /;"	d
GL_DRAW_BUFFER14	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER14	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER14 /;"	d
GL_DRAW_BUFFER15	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER15	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER15 /;"	d
GL_DRAW_BUFFER2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER2	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER2 /;"	d
GL_DRAW_BUFFER3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER3	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER3 /;"	d
GL_DRAW_BUFFER4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER4	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER4 /;"	d
GL_DRAW_BUFFER5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER5	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER5 /;"	d
GL_DRAW_BUFFER6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER6	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER6 /;"	d
GL_DRAW_BUFFER7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER7	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER7 /;"	d
GL_DRAW_BUFFER8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER8	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER8 /;"	d
GL_DRAW_BUFFER9	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_BUFFER9	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_BUFFER9 /;"	d
GL_DRAW_FRAMEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_FRAMEBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_FRAMEBUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DRAW_INDIRECT_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_DRAW_INDIRECT_BUFFER_BINDING /;"	d
GL_DST_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_DST_ALPHA /;"	d
GL_DST_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DST_COLOR /;"	d
GL_DST_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_DST_COLOR /;"	d
GL_DYNAMIC_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_COPY	lib/gl3w/GL/glcorearb.h	/^#define GL_DYNAMIC_COPY /;"	d
GL_DYNAMIC_DRAW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_DRAW	lib/gl3w/GL/glcorearb.h	/^#define GL_DYNAMIC_DRAW /;"	d
GL_DYNAMIC_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_DYNAMIC_READ /;"	d
GL_DYNAMIC_READ	lib/gl3w/GL/glcorearb.h	/^#define GL_DYNAMIC_READ /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BARRIER_BIT /;"	d
GL_ELEMENT_ARRAY_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_ELEMENT_ARRAY_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_ELEMENT_ARRAY_BUFFER_BINDING /;"	d
GL_EQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_EQUAL /;"	d
GL_EQUAL	lib/gl3w/GL/glcorearb.h	/^#define GL_EQUAL /;"	d
GL_EQUIV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_EQUIV /;"	d
GL_EQUIV	lib/gl3w/GL/glcorearb.h	/^#define GL_EQUIV /;"	d
GL_EXT	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^#define GL_EXT(/;"	d
GL_EXTENSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_EXTENSIONS /;"	d
GL_EXTENSIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_EXTENSIONS /;"	d
GL_FALSE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FALSE /;"	d
GL_FALSE	lib/gl3w/GL/glcorearb.h	/^#define GL_FALSE /;"	d
GL_FASTEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FASTEST /;"	d
GL_FASTEST	lib/gl3w/GL/glcorearb.h	/^#define GL_FASTEST /;"	d
GL_FILL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FILL /;"	d
GL_FILL	lib/gl3w/GL/glcorearb.h	/^#define GL_FILL /;"	d
GL_FILTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FILTER /;"	d
GL_FILTER	lib/gl3w/GL/glcorearb.h	/^#define GL_FILTER /;"	d
GL_FIRST_VERTEX_CONVENTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIRST_VERTEX_CONVENTION	lib/gl3w/GL/glcorearb.h	/^#define GL_FIRST_VERTEX_CONVENTION /;"	d
GL_FIXED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FIXED /;"	d
GL_FIXED	lib/gl3w/GL/glcorearb.h	/^#define GL_FIXED /;"	d
GL_FIXED_ONLY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FIXED_ONLY /;"	d
GL_FIXED_ONLY	lib/gl3w/GL/glcorearb.h	/^#define GL_FIXED_ONLY /;"	d
GL_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT /;"	d
GL_FLOAT	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_32_UNSIGNED_INT_24_8_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_32_UNSIGNED_INT_24_8_REV /;"	d
GL_FLOAT_MAT2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT2 /;"	d
GL_FLOAT_MAT2x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x3	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT2x3 /;"	d
GL_FLOAT_MAT2x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT2x4	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT2x4 /;"	d
GL_FLOAT_MAT3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT3 /;"	d
GL_FLOAT_MAT3x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x2	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT3x2 /;"	d
GL_FLOAT_MAT3x4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT3x4	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT3x4 /;"	d
GL_FLOAT_MAT4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT4 /;"	d
GL_FLOAT_MAT4x2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x2	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT4x2 /;"	d
GL_FLOAT_MAT4x3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_MAT4x3	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_MAT4x3 /;"	d
GL_FLOAT_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC2	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_VEC2 /;"	d
GL_FLOAT_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC3	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_VEC3 /;"	d
GL_FLOAT_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FLOAT_VEC4	lib/gl3w/GL/glcorearb.h	/^#define GL_FLOAT_VEC4 /;"	d
GL_FRACTIONAL_EVEN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_EVEN	lib/gl3w/GL/glcorearb.h	/^#define GL_FRACTIONAL_EVEN /;"	d
GL_FRACTIONAL_ODD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRACTIONAL_ODD	lib/gl3w/GL/glcorearb.h	/^#define GL_FRACTIONAL_ODD /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_INTERPOLATION_OFFSET_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_INTERPOLATION_OFFSET_BITS /;"	d
GL_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER /;"	d
GL_FRAGMENT_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER_BIT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SHADER_DERIVATIVE_HINT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SHADER_DERIVATIVE_HINT /;"	d
GL_FRAGMENT_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_SUBROUTINE_UNIFORM /;"	d
GL_FRAGMENT_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAGMENT_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAGMENT_TEXTURE /;"	d
GL_FRAMEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_BLUE_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_GREEN_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_LAYERED	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_LAYERED /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_NAME /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_RED_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BARRIER_BIT /;"	d
GL_FRAMEBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BINDING /;"	d
GL_FRAMEBUFFER_BLEND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_BLEND	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_BLEND /;"	d
GL_FRAMEBUFFER_COMPLETE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_COMPLETE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_COMPLETE /;"	d
GL_FRAMEBUFFER_DEFAULT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_FIXED_SAMPLE_LOCATIONS /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_HEIGHT /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_LAYERS	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_LAYERS /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_SAMPLES /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_DEFAULT_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_DEFAULT_WIDTH /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_DRAW_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_LAYER_TARGETS /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_MULTISAMPLE /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_INCOMPLETE_READ_BUFFER /;"	d
GL_FRAMEBUFFER_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_RENDERABLE_LAYERED	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_RENDERABLE_LAYERED /;"	d
GL_FRAMEBUFFER_SRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_SRGB	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_SRGB /;"	d
GL_FRAMEBUFFER_UNDEFINED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNDEFINED	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_UNDEFINED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRAMEBUFFER_UNSUPPORTED	lib/gl3w/GL/glcorearb.h	/^#define GL_FRAMEBUFFER_UNSUPPORTED /;"	d
GL_FRONT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRONT /;"	d
GL_FRONT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRONT /;"	d
GL_FRONT_AND_BACK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_AND_BACK	lib/gl3w/GL/glcorearb.h	/^#define GL_FRONT_AND_BACK /;"	d
GL_FRONT_FACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_FACE	lib/gl3w/GL/glcorearb.h	/^#define GL_FRONT_FACE /;"	d
GL_FRONT_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRONT_LEFT /;"	d
GL_FRONT_LEFT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRONT_LEFT /;"	d
GL_FRONT_RIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FRONT_RIGHT /;"	d
GL_FRONT_RIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_FRONT_RIGHT /;"	d
GL_FULL_SUPPORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FULL_SUPPORT	lib/gl3w/GL/glcorearb.h	/^#define GL_FULL_SUPPORT /;"	d
GL_FUNC_ADD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_ADD	lib/gl3w/GL/glcorearb.h	/^#define GL_FUNC_ADD /;"	d
GL_FUNC_REVERSE_SUBTRACT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_REVERSE_SUBTRACT	lib/gl3w/GL/glcorearb.h	/^#define GL_FUNC_REVERSE_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_FUNC_SUBTRACT	lib/gl3w/GL/glcorearb.h	/^#define GL_FUNC_SUBTRACT /;"	d
GL_GEOMETRY_INPUT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_INPUT_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_INPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_OUTPUT_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_OUTPUT_TYPE /;"	d
GL_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER /;"	d
GL_GEOMETRY_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER_BIT /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SHADER_INVOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_GEOMETRY_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_SUBROUTINE_UNIFORM /;"	d
GL_GEOMETRY_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_TEXTURE /;"	d
GL_GEOMETRY_VERTICES_OUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEOMETRY_VERTICES_OUT	lib/gl3w/GL/glcorearb.h	/^#define GL_GEOMETRY_VERTICES_OUT /;"	d
GL_GEQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GEQUAL /;"	d
GL_GEQUAL	lib/gl3w/GL/glcorearb.h	/^#define GL_GEQUAL /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_FORMAT /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GET_TEXTURE_IMAGE_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_GET_TEXTURE_IMAGE_TYPE /;"	d
GL_GREATER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GREATER /;"	d
GL_GREATER	lib/gl3w/GL/glcorearb.h	/^#define GL_GREATER /;"	d
GL_GREEN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GREEN /;"	d
GL_GREEN	lib/gl3w/GL/glcorearb.h	/^#define GL_GREEN /;"	d
GL_GREEN_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GREEN_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_GREEN_INTEGER /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_GUILTY_CONTEXT_RESET_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_GUILTY_CONTEXT_RESET_ARB /;"	d
GL_HALF_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_HALF_FLOAT /;"	d
GL_HALF_FLOAT	lib/gl3w/GL/glcorearb.h	/^#define GL_HALF_FLOAT /;"	d
GL_HIGH_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_FLOAT	lib/gl3w/GL/glcorearb.h	/^#define GL_HIGH_FLOAT /;"	d
GL_HIGH_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_HIGH_INT /;"	d
GL_HIGH_INT	lib/gl3w/GL/glcorearb.h	/^#define GL_HIGH_INT /;"	d
GL_IMAGE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_1D /;"	d
GL_IMAGE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_1D_ARRAY /;"	d
GL_IMAGE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D /;"	d
GL_IMAGE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_IMAGE_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_2D_RECT	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_2D_RECT /;"	d
GL_IMAGE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_3D /;"	d
GL_IMAGE_BINDING_ACCESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_ACCESS	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_ACCESS /;"	d
GL_IMAGE_BINDING_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_FORMAT /;"	d
GL_IMAGE_BINDING_LAYER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYER	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYER /;"	d
GL_IMAGE_BINDING_LAYERED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LAYERED	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LAYERED /;"	d
GL_IMAGE_BINDING_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_LEVEL /;"	d
GL_IMAGE_BINDING_NAME	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BINDING_NAME	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BINDING_NAME /;"	d
GL_IMAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_BUFFER /;"	d
GL_IMAGE_CLASS_10_10_10_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_10_10_10_2	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_10_10_10_2 /;"	d
GL_IMAGE_CLASS_11_11_10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_11_11_10	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_11_11_10 /;"	d
GL_IMAGE_CLASS_1_X_16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_16	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_16 /;"	d
GL_IMAGE_CLASS_1_X_32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_32	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_32 /;"	d
GL_IMAGE_CLASS_1_X_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_1_X_8	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_1_X_8 /;"	d
GL_IMAGE_CLASS_2_X_16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_16	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_16 /;"	d
GL_IMAGE_CLASS_2_X_32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_32	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_32 /;"	d
GL_IMAGE_CLASS_2_X_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_2_X_8	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_2_X_8 /;"	d
GL_IMAGE_CLASS_4_X_16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_16	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_16 /;"	d
GL_IMAGE_CLASS_4_X_32	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_32	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_32 /;"	d
GL_IMAGE_CLASS_4_X_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_CLASS_4_X_8	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CLASS_4_X_8 /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_COMPATIBILITY_CLASS	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_COMPATIBILITY_CLASS /;"	d
GL_IMAGE_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CUBE /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_CLASS /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_BY_SIZE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_FORMAT_COMPATIBILITY_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_FORMAT_COMPATIBILITY_TYPE /;"	d
GL_IMAGE_PIXEL_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_PIXEL_FORMAT /;"	d
GL_IMAGE_PIXEL_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_PIXEL_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_PIXEL_TYPE /;"	d
GL_IMAGE_TEXEL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMAGE_TEXEL_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_IMAGE_TEXEL_SIZE /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_FORMAT /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_IMPLEMENTATION_COLOR_READ_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_IMPLEMENTATION_COLOR_READ_TYPE /;"	d
GL_INCR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INCR /;"	d
GL_INCR	lib/gl3w/GL/glcorearb.h	/^#define GL_INCR /;"	d
GL_INCR_WRAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INCR_WRAP /;"	d
GL_INCR_WRAP	lib/gl3w/GL/glcorearb.h	/^#define GL_INCR_WRAP /;"	d
GL_INFO_LOG_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INFO_LOG_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_INFO_LOG_LENGTH /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INNOCENT_CONTEXT_RESET_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_INNOCENT_CONTEXT_RESET_ARB /;"	d
GL_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT /;"	d
GL_INT	lib/gl3w/GL/glcorearb.h	/^#define GL_INT /;"	d
GL_INTERLEAVED_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERLEAVED_ATTRIBS	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERLEAVED_ATTRIBS /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_SIZE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_ALPHA_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_ALPHA_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_SIZE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_BLUE_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_BLUE_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_SIZE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_DEPTH_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_DEPTH_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_SIZE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_GREEN_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_GREEN_TYPE /;"	d
GL_INTERNALFORMAT_PREFERRED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_PREFERRED	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_PREFERRED /;"	d
GL_INTERNALFORMAT_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_SIZE /;"	d
GL_INTERNALFORMAT_RED_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_RED_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_RED_TYPE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_SHARED_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_SHARED_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_SIZE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_STENCIL_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_STENCIL_TYPE /;"	d
GL_INTERNALFORMAT_SUPPORTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INTERNALFORMAT_SUPPORTED	lib/gl3w/GL/glcorearb.h	/^#define GL_INTERNALFORMAT_SUPPORTED /;"	d
GL_INT_2_10_10_10_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_2_10_10_10_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_2_10_10_10_REV /;"	d
GL_INT_IMAGE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_1D /;"	d
GL_INT_IMAGE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_1D_ARRAY /;"	d
GL_INT_IMAGE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D /;"	d
GL_INT_IMAGE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_IMAGE_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_2D_RECT	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_2D_RECT /;"	d
GL_INT_IMAGE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_3D /;"	d
GL_INT_IMAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_BUFFER /;"	d
GL_INT_IMAGE_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_CUBE /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_IMAGE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_1D /;"	d
GL_INT_SAMPLER_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_1D_ARRAY /;"	d
GL_INT_SAMPLER_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D /;"	d
GL_INT_SAMPLER_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_ARRAY /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_INT_SAMPLER_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_2D_RECT	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_2D_RECT /;"	d
GL_INT_SAMPLER_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_3D /;"	d
GL_INT_SAMPLER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_BUFFER /;"	d
GL_INT_SAMPLER_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_INT_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC2	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_VEC2 /;"	d
GL_INT_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC3	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_VEC3 /;"	d
GL_INT_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INT_VEC4 /;"	d
GL_INT_VEC4	lib/gl3w/GL/glcorearb.h	/^#define GL_INT_VEC4 /;"	d
GL_INVALID_ENUM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_ENUM	lib/gl3w/GL/glcorearb.h	/^#define GL_INVALID_ENUM /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_FRAMEBUFFER_OPERATION	lib/gl3w/GL/glcorearb.h	/^#define GL_INVALID_FRAMEBUFFER_OPERATION /;"	d
GL_INVALID_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_INVALID_INDEX /;"	d
GL_INVALID_OPERATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_OPERATION	lib/gl3w/GL/glcorearb.h	/^#define GL_INVALID_OPERATION /;"	d
GL_INVALID_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVALID_VALUE	lib/gl3w/GL/glcorearb.h	/^#define GL_INVALID_VALUE /;"	d
GL_INVERT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_INVERT /;"	d
GL_INVERT	lib/gl3w/GL/glcorearb.h	/^#define GL_INVERT /;"	d
GL_ISOLINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ISOLINES /;"	d
GL_ISOLINES	lib/gl3w/GL/glcorearb.h	/^#define GL_ISOLINES /;"	d
GL_IS_PER_PATCH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_PER_PATCH	lib/gl3w/GL/glcorearb.h	/^#define GL_IS_PER_PATCH /;"	d
GL_IS_ROW_MAJOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_IS_ROW_MAJOR	lib/gl3w/GL/glcorearb.h	/^#define GL_IS_ROW_MAJOR /;"	d
GL_KEEP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_KEEP /;"	d
GL_KEEP	lib/gl3w/GL/glcorearb.h	/^#define GL_KEEP /;"	d
GL_KHR_debug	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_KHR_debug /;"	d
GL_KHR_debug	lib/gl3w/GL/glcorearb.h	/^#define GL_KHR_debug /;"	d
GL_KHR_texture_compression_astc_ldr	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_KHR_texture_compression_astc_ldr	lib/gl3w/GL/glcorearb.h	/^#define GL_KHR_texture_compression_astc_ldr /;"	d
GL_LAST_VERTEX_CONVENTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAST_VERTEX_CONVENTION	lib/gl3w/GL/glcorearb.h	/^#define GL_LAST_VERTEX_CONVENTION /;"	d
GL_LAYER_PROVOKING_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LAYER_PROVOKING_VERTEX	lib/gl3w/GL/glcorearb.h	/^#define GL_LAYER_PROVOKING_VERTEX /;"	d
GL_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LEFT /;"	d
GL_LEFT	lib/gl3w/GL/glcorearb.h	/^#define GL_LEFT /;"	d
GL_LEQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LEQUAL /;"	d
GL_LEQUAL	lib/gl3w/GL/glcorearb.h	/^#define GL_LEQUAL /;"	d
GL_LESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LESS /;"	d
GL_LESS	lib/gl3w/GL/glcorearb.h	/^#define GL_LESS /;"	d
GL_LINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE /;"	d
GL_LINE	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE /;"	d
GL_LINEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINEAR /;"	d
GL_LINEAR	lib/gl3w/GL/glcorearb.h	/^#define GL_LINEAR /;"	d
GL_LINEAR_MIPMAP_LINEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_LINEAR	lib/gl3w/GL/glcorearb.h	/^#define GL_LINEAR_MIPMAP_LINEAR /;"	d
GL_LINEAR_MIPMAP_NEAREST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINEAR_MIPMAP_NEAREST	lib/gl3w/GL/glcorearb.h	/^#define GL_LINEAR_MIPMAP_NEAREST /;"	d
GL_LINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINES /;"	d
GL_LINES	lib/gl3w/GL/glcorearb.h	/^#define GL_LINES /;"	d
GL_LINES_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINES_ADJACENCY	lib/gl3w/GL/glcorearb.h	/^#define GL_LINES_ADJACENCY /;"	d
GL_LINE_LOOP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_LOOP	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_LOOP /;"	d
GL_LINE_SMOOTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_SMOOTH /;"	d
GL_LINE_SMOOTH_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_SMOOTH_HINT	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_SMOOTH_HINT /;"	d
GL_LINE_STRIP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_STRIP /;"	d
GL_LINE_STRIP_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_STRIP_ADJACENCY	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_STRIP_ADJACENCY /;"	d
GL_LINE_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_WIDTH /;"	d
GL_LINE_WIDTH_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_GRANULARITY	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_WIDTH_GRANULARITY /;"	d
GL_LINE_WIDTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINE_WIDTH_RANGE	lib/gl3w/GL/glcorearb.h	/^#define GL_LINE_WIDTH_RANGE /;"	d
GL_LINK_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LINK_STATUS /;"	d
GL_LINK_STATUS	lib/gl3w/GL/glcorearb.h	/^#define GL_LINK_STATUS /;"	d
GL_LOCATION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LOCATION /;"	d
GL_LOCATION	lib/gl3w/GL/glcorearb.h	/^#define GL_LOCATION /;"	d
GL_LOCATION_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOCATION_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_LOCATION_INDEX /;"	d
GL_LOGIC_OP_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LOGIC_OP_MODE /;"	d
GL_LOGIC_OP_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_LOGIC_OP_MODE /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOSE_CONTEXT_ON_RESET_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_LOSE_CONTEXT_ON_RESET_ARB /;"	d
GL_LOWER_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOWER_LEFT	lib/gl3w/GL/glcorearb.h	/^#define GL_LOWER_LEFT /;"	d
GL_LOW_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_FLOAT	lib/gl3w/GL/glcorearb.h	/^#define GL_LOW_FLOAT /;"	d
GL_LOW_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_LOW_INT /;"	d
GL_LOW_INT	lib/gl3w/GL/glcorearb.h	/^#define GL_LOW_INT /;"	d
GL_MAJOR_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MAJOR_VERSION	lib/gl3w/GL/glcorearb.h	/^#define GL_MAJOR_VERSION /;"	d
GL_MANUAL_GENERATE_MIPMAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MANUAL_GENERATE_MIPMAP	lib/gl3w/GL/glcorearb.h	/^#define GL_MANUAL_GENERATE_MIPMAP /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_FLUSH_EXPLICIT_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAP_FLUSH_EXPLICIT_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAP_INVALIDATE_BUFFER_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_INVALIDATE_RANGE_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAP_INVALIDATE_RANGE_BIT /;"	d
GL_MAP_READ_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_READ_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAP_READ_BIT /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_UNSYNCHRONIZED_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAP_UNSYNCHRONIZED_BIT /;"	d
GL_MAP_WRITE_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MAP_WRITE_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAP_WRITE_BIT /;"	d
GL_MATRIX_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MATRIX_STRIDE	lib/gl3w/GL/glcorearb.h	/^#define GL_MATRIX_STRIDE /;"	d
GL_MAX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX /;"	d
GL_MAX	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX /;"	d
GL_MAX_3D_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_3D_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_3D_TEXTURE_SIZE /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ARRAY_TEXTURE_LAYERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_ARRAY_TEXTURE_LAYERS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_BINDINGS /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_ATOMIC_COUNTER_BUFFER_SIZE /;"	d
GL_MAX_CLIP_DISTANCES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_CLIP_DISTANCES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_CLIP_DISTANCES /;"	d
GL_MAX_COLOR_ATTACHMENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_ATTACHMENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COLOR_ATTACHMENTS /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COLOR_TEXTURE_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COLOR_TEXTURE_SAMPLES /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_DIMENSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_DIMENSIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_DIMENSIONS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNIFORMS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_IMAGE_UNITS_AND_FRAGMENT_OUTPUTS /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_OUTPUT_RESOURCES /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_UNIFORM_BLOCKS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_IMAGE_UNIFORMS /;"	d
GL_MAX_COMPUTE_LOCAL_INVOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_LOCAL_INVOCATIONS /;"	d
GL_MAX_COMPUTE_LOCAL_INVOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_LOCAL_INVOCATIONS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_SHARED_MEMORY_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_SHARED_MEMORY_SIZE /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_BLOCKS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_UNIFORM_COMPONENTS /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_COUNT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_COUNT /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_COMPUTE_WORK_GROUP_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_COMPUTE_WORK_GROUP_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_CUBE_MAP_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_CUBE_MAP_TEXTURE_SIZE /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_GROUP_STACK_DEPTH	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_GROUP_STACK_DEPTH /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_LOGGED_MESSAGES_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_LOGGED_MESSAGES_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEBUG_MESSAGE_LENGTH_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEBUG_MESSAGE_LENGTH_ARB /;"	d
GL_MAX_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEPTH /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DEPTH_TEXTURE_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DEPTH_TEXTURE_SAMPLES /;"	d
GL_MAX_DRAW_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DRAW_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DRAW_BUFFERS /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_DUAL_SOURCE_DRAW_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_DUAL_SOURCE_DRAW_BUFFERS /;"	d
GL_MAX_ELEMENTS_INDICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_INDICES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_ELEMENTS_INDICES /;"	d
GL_MAX_ELEMENTS_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENTS_VERTICES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_ELEMENTS_VERTICES /;"	d
GL_MAX_ELEMENT_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_ELEMENT_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_ELEMENT_INDEX /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_IMAGE_UNIFORMS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_INPUT_COMPONENTS /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_INTERPOLATION_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_BLOCKS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_COMPONENTS /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAGMENT_UNIFORM_VECTORS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAGMENT_UNIFORM_VECTORS /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_HEIGHT /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_LAYERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_LAYERS /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_SAMPLES /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_FRAMEBUFFER_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_FRAMEBUFFER_WIDTH /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_IMAGE_UNIFORMS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_INPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_OUTPUT_VERTICES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_OUTPUT_VERTICES /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_INVOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_INVOCATIONS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_BLOCKS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_GEOMETRY_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_GEOMETRY_UNIFORM_COMPONENTS /;"	d
GL_MAX_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_HEIGHT /;"	d
GL_MAX_IMAGE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_IMAGE_SAMPLES /;"	d
GL_MAX_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_IMAGE_UNITS /;"	d
GL_MAX_INTEGER_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_INTEGER_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_INTEGER_SAMPLES /;"	d
GL_MAX_LABEL_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LABEL_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_LABEL_LENGTH /;"	d
GL_MAX_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_LAYERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_LAYERS /;"	d
GL_MAX_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_NAME_LENGTH /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_ACTIVE_VARIABLES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_NUM_ACTIVE_VARIABLES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_NUM_COMPATIBLE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_MAX_PATCH_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PATCH_VERTICES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_PATCH_VERTICES /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXEL_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXEL_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_COMPONENTS_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RECTANGLE_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_RECTANGLE_TEXTURE_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_RENDERBUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_RENDERBUFFER_SIZE /;"	d
GL_MAX_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_SAMPLES /;"	d
GL_MAX_SAMPLE_MASK_WORDS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SAMPLE_MASK_WORDS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_SAMPLE_MASK_WORDS /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SERVER_WAIT_TIMEOUT	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_SERVER_WAIT_TIMEOUT /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BLOCK_SIZE /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_SHADER_STORAGE_BUFFER_BINDINGS /;"	d
GL_MAX_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINES	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_SUBROUTINES /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_SUBROUTINE_UNIFORM_LOCATIONS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_TOTAL_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_CONTROL_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_IMAGE_UNIFORMS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_INPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_OUTPUT_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_BLOCKS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_EVALUATION_UNIFORM_COMPONENTS /;"	d
GL_MAX_TESS_GEN_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_GEN_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_GEN_LEVEL /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TESS_PATCH_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TESS_PATCH_COMPONENTS /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_BUFFER_SIZE /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_TEXTURE_LOD_BIAS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_LOD_BIAS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_LOD_BIAS /;"	d
GL_MAX_TEXTURE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TEXTURE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TEXTURE_SIZE /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_BUFFERS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_BLOCK_SIZE /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_BUFFER_BINDINGS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_BUFFER_BINDINGS /;"	d
GL_MAX_UNIFORM_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_UNIFORM_LOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_UNIFORM_LOCATIONS /;"	d
GL_MAX_VARYING_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VARYING_COMPONENTS /;"	d
GL_MAX_VARYING_FLOATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_FLOATS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VARYING_FLOATS /;"	d
GL_MAX_VARYING_VECTORS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VARYING_VECTORS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VARYING_VECTORS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATOMIC_COUNTER_BUFFERS /;"	d
GL_MAX_VERTEX_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIBS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIBS /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_BINDINGS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_BINDINGS /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_IMAGE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_IMAGE_UNIFORMS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_OUTPUT_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_OUTPUT_COMPONENTS /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_SHADER_STORAGE_BLOCKS /;"	d
GL_MAX_VERTEX_STREAMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_STREAMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_STREAMS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_BLOCKS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_BLOCKS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_COMPONENTS /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VERTEX_UNIFORM_VECTORS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VERTEX_UNIFORM_VECTORS /;"	d
GL_MAX_VIEWPORTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWPORTS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VIEWPORTS /;"	d
GL_MAX_VIEWPORT_DIMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MAX_VIEWPORT_DIMS	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_VIEWPORT_DIMS /;"	d
GL_MAX_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MAX_WIDTH /;"	d
GL_MAX_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_MAX_WIDTH /;"	d
GL_MEDIUM_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_FLOAT	lib/gl3w/GL/glcorearb.h	/^#define GL_MEDIUM_FLOAT /;"	d
GL_MEDIUM_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MEDIUM_INT /;"	d
GL_MEDIUM_INT	lib/gl3w/GL/glcorearb.h	/^#define GL_MEDIUM_INT /;"	d
GL_MIN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN /;"	d
GL_MIN	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN /;"	d
GL_MINOR_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MINOR_VERSION /;"	d
GL_MINOR_VERSION	lib/gl3w/GL/glcorearb.h	/^#define GL_MINOR_VERSION /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_FRAGMENT_INTERPOLATION_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN_FRAGMENT_INTERPOLATION_OFFSET /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_MAP_BUFFER_ALIGNMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN_MAP_BUFFER_ALIGNMENT /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXEL_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXEL_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN_PROGRAM_TEXTURE_GATHER_OFFSET_ARB /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIN_SAMPLE_SHADING_VALUE_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_MIN_SAMPLE_SHADING_VALUE_ARB /;"	d
GL_MIPMAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIPMAP /;"	d
GL_MIPMAP	lib/gl3w/GL/glcorearb.h	/^#define GL_MIPMAP /;"	d
GL_MIRRORED_REPEAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MIRRORED_REPEAT	lib/gl3w/GL/glcorearb.h	/^#define GL_MIRRORED_REPEAT /;"	d
GL_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_MULTISAMPLE /;"	d
GL_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_MULTISAMPLE /;"	d
GL_NAMED_STRING_LENGTH_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_LENGTH_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_NAMED_STRING_LENGTH_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAMED_STRING_TYPE_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_NAMED_STRING_TYPE_ARB /;"	d
GL_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NAME_LENGTH /;"	d
GL_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_NAME_LENGTH /;"	d
GL_NAND	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NAND /;"	d
GL_NAND	lib/gl3w/GL/glcorearb.h	/^#define GL_NAND /;"	d
GL_NEAREST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NEAREST /;"	d
GL_NEAREST	lib/gl3w/GL/glcorearb.h	/^#define GL_NEAREST /;"	d
GL_NEAREST_MIPMAP_LINEAR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_LINEAR	lib/gl3w/GL/glcorearb.h	/^#define GL_NEAREST_MIPMAP_LINEAR /;"	d
GL_NEAREST_MIPMAP_NEAREST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEAREST_MIPMAP_NEAREST	lib/gl3w/GL/glcorearb.h	/^#define GL_NEAREST_MIPMAP_NEAREST /;"	d
GL_NEVER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NEVER /;"	d
GL_NEVER	lib/gl3w/GL/glcorearb.h	/^#define GL_NEVER /;"	d
GL_NICEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NICEST /;"	d
GL_NICEST	lib/gl3w/GL/glcorearb.h	/^#define GL_NICEST /;"	d
GL_NONE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NONE /;"	d
GL_NONE	lib/gl3w/GL/glcorearb.h	/^#define GL_NONE /;"	d
GL_NOOP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NOOP /;"	d
GL_NOOP	lib/gl3w/GL/glcorearb.h	/^#define GL_NOOP /;"	d
GL_NOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NOR /;"	d
GL_NOR	lib/gl3w/GL/glcorearb.h	/^#define GL_NOR /;"	d
GL_NOTEQUAL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NOTEQUAL /;"	d
GL_NOTEQUAL	lib/gl3w/GL/glcorearb.h	/^#define GL_NOTEQUAL /;"	d
GL_NO_ERROR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NO_ERROR /;"	d
GL_NO_ERROR	lib/gl3w/GL/glcorearb.h	/^#define GL_NO_ERROR /;"	d
GL_NO_RESET_NOTIFICATION_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NO_RESET_NOTIFICATION_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_NO_RESET_NOTIFICATION_ARB /;"	d
GL_NUM_ACTIVE_VARIABLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_ACTIVE_VARIABLES	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_ACTIVE_VARIABLES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPATIBLE_SUBROUTINES	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_COMPATIBLE_SUBROUTINES /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_COMPRESSED_TEXTURE_FORMATS	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_COMPRESSED_TEXTURE_FORMATS /;"	d
GL_NUM_EXTENSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_EXTENSIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_EXTENSIONS /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_PROGRAM_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_PROGRAM_BINARY_FORMATS /;"	d
GL_NUM_SAMPLE_COUNTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SAMPLE_COUNTS	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_SAMPLE_COUNTS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADER_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_SHADER_BINARY_FORMATS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_NUM_SHADING_LANGUAGE_VERSIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_NUM_SHADING_LANGUAGE_VERSIONS /;"	d
GL_OBJECT_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OBJECT_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_OBJECT_TYPE /;"	d
GL_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_OFFSET /;"	d
GL_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_OFFSET /;"	d
GL_ONE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE /;"	d
GL_ONE	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_ALPHA /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_CONSTANT_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_CONSTANT_COLOR /;"	d
GL_ONE_MINUS_DST_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_DST_ALPHA /;"	d
GL_ONE_MINUS_DST_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_DST_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_DST_COLOR /;"	d
GL_ONE_MINUS_SRC1_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_ALPHA /;"	d
GL_ONE_MINUS_SRC1_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC1_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC1_COLOR /;"	d
GL_ONE_MINUS_SRC_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC_ALPHA /;"	d
GL_ONE_MINUS_SRC_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_ONE_MINUS_SRC_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_ONE_MINUS_SRC_COLOR /;"	d
GL_OR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_OR /;"	d
GL_OR	lib/gl3w/GL/glcorearb.h	/^#define GL_OR /;"	d
GL_OR_INVERTED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_OR_INVERTED /;"	d
GL_OR_INVERTED	lib/gl3w/GL/glcorearb.h	/^#define GL_OR_INVERTED /;"	d
GL_OR_REVERSE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_OR_REVERSE /;"	d
GL_OR_REVERSE	lib/gl3w/GL/glcorearb.h	/^#define GL_OR_REVERSE /;"	d
GL_OUT_OF_MEMORY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_OUT_OF_MEMORY	lib/gl3w/GL/glcorearb.h	/^#define GL_OUT_OF_MEMORY /;"	d
GL_PACK_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_ALIGNMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_ALIGNMENT /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_DEPTH	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_COMPRESSED_BLOCK_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_PACK_IMAGE_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_IMAGE_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_IMAGE_HEIGHT /;"	d
GL_PACK_LSB_FIRST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_LSB_FIRST	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_LSB_FIRST /;"	d
GL_PACK_ROW_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_ROW_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_ROW_LENGTH /;"	d
GL_PACK_SKIP_IMAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_IMAGES	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_SKIP_IMAGES /;"	d
GL_PACK_SKIP_PIXELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_PIXELS	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_SKIP_PIXELS /;"	d
GL_PACK_SKIP_ROWS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SKIP_ROWS	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_SKIP_ROWS /;"	d
GL_PACK_SWAP_BYTES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PACK_SWAP_BYTES /;"	d
GL_PACK_SWAP_BYTES	lib/gl3w/GL/glcorearb.h	/^#define GL_PACK_SWAP_BYTES /;"	d
GL_PATCHES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PATCHES /;"	d
GL_PATCHES	lib/gl3w/GL/glcorearb.h	/^#define GL_PATCHES /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_INNER_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_PATCH_DEFAULT_INNER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_DEFAULT_OUTER_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_PATCH_DEFAULT_OUTER_LEVEL /;"	d
GL_PATCH_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PATCH_VERTICES	lib/gl3w/GL/glcorearb.h	/^#define GL_PATCH_VERTICES /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_BUFFER_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_BUFFER_BARRIER_BIT /;"	d
GL_PIXEL_PACK_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_PACK_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_PACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_PIXEL_UNPACK_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_PIXEL_UNPACK_BUFFER_BINDING /;"	d
GL_POINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POINT /;"	d
GL_POINT	lib/gl3w/GL/glcorearb.h	/^#define GL_POINT /;"	d
GL_POINTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POINTS /;"	d
GL_POINTS	lib/gl3w/GL/glcorearb.h	/^#define GL_POINTS /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_FADE_THRESHOLD_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_POINT_FADE_THRESHOLD_SIZE /;"	d
GL_POINT_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_POINT_SIZE /;"	d
GL_POINT_SIZE_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_GRANULARITY	lib/gl3w/GL/glcorearb.h	/^#define GL_POINT_SIZE_GRANULARITY /;"	d
GL_POINT_SIZE_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SIZE_RANGE	lib/gl3w/GL/glcorearb.h	/^#define GL_POINT_SIZE_RANGE /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POINT_SPRITE_COORD_ORIGIN	lib/gl3w/GL/glcorearb.h	/^#define GL_POINT_SPRITE_COORD_ORIGIN /;"	d
GL_POLYGON_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_MODE /;"	d
GL_POLYGON_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_MODE /;"	d
GL_POLYGON_OFFSET_FACTOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FACTOR	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_FACTOR /;"	d
GL_POLYGON_OFFSET_FILL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_FILL	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_FILL /;"	d
GL_POLYGON_OFFSET_LINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_LINE	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_LINE /;"	d
GL_POLYGON_OFFSET_POINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_POINT	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_POINT /;"	d
GL_POLYGON_OFFSET_UNITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_OFFSET_UNITS	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_OFFSET_UNITS /;"	d
GL_POLYGON_SMOOTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_SMOOTH /;"	d
GL_POLYGON_SMOOTH_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_POLYGON_SMOOTH_HINT	lib/gl3w/GL/glcorearb.h	/^#define GL_POLYGON_SMOOTH_HINT /;"	d
GL_PRIMITIVES_GENERATED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVES_GENERATED	lib/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVES_GENERATED /;"	d
GL_PRIMITIVE_RESTART	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART	lib/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_FIXED_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_FIXED_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PRIMITIVE_RESTART_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_PRIMITIVE_RESTART_INDEX /;"	d
GL_PROGRAM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM /;"	d
GL_PROGRAM_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_FORMATS /;"	d
GL_PROGRAM_BINARY_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_LENGTH /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_BINARY_RETRIEVABLE_HINT	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_BINARY_RETRIEVABLE_HINT /;"	d
GL_PROGRAM_INPUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_INPUT	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_INPUT /;"	d
GL_PROGRAM_OUTPUT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_OUTPUT	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_OUTPUT /;"	d
GL_PROGRAM_PIPELINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_PIPELINE /;"	d
GL_PROGRAM_PIPELINE_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_PIPELINE_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_PIPELINE_BINDING /;"	d
GL_PROGRAM_POINT_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_POINT_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_POINT_SIZE /;"	d
GL_PROGRAM_SEPARABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROGRAM_SEPARABLE	lib/gl3w/GL/glcorearb.h	/^#define GL_PROGRAM_SEPARABLE /;"	d
GL_PROVOKING_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROVOKING_VERTEX	lib/gl3w/GL/glcorearb.h	/^#define GL_PROVOKING_VERTEX /;"	d
GL_PROXY_TEXTURE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_1D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_PROXY_TEXTURE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_3D /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_PROXY_TEXTURE_RECTANGLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_PROXY_TEXTURE_RECTANGLE	lib/gl3w/GL/glcorearb.h	/^#define GL_PROXY_TEXTURE_RECTANGLE /;"	d
GL_QUADS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUADS /;"	d
GL_QUADS	lib/gl3w/GL/glcorearb.h	/^#define GL_QUADS /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION	lib/gl3w/GL/glcorearb.h	/^#define GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION /;"	d
GL_QUERY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY /;"	d
GL_QUERY	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY /;"	d
GL_QUERY_BY_REGION_NO_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_NO_WAIT	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_NO_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_BY_REGION_WAIT	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY_BY_REGION_WAIT /;"	d
GL_QUERY_COUNTER_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_COUNTER_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY_COUNTER_BITS /;"	d
GL_QUERY_NO_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_NO_WAIT	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY_NO_WAIT /;"	d
GL_QUERY_RESULT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY_RESULT /;"	d
GL_QUERY_RESULT_AVAILABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_RESULT_AVAILABLE	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY_RESULT_AVAILABLE /;"	d
GL_QUERY_WAIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_QUERY_WAIT /;"	d
GL_QUERY_WAIT	lib/gl3w/GL/glcorearb.h	/^#define GL_QUERY_WAIT /;"	d
GL_R11F_G11F_B10F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R11F_G11F_B10F	lib/gl3w/GL/glcorearb.h	/^#define GL_R11F_G11F_B10F /;"	d
GL_R16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R16 /;"	d
GL_R16	lib/gl3w/GL/glcorearb.h	/^#define GL_R16 /;"	d
GL_R16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R16F /;"	d
GL_R16F	lib/gl3w/GL/glcorearb.h	/^#define GL_R16F /;"	d
GL_R16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R16I /;"	d
GL_R16I	lib/gl3w/GL/glcorearb.h	/^#define GL_R16I /;"	d
GL_R16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R16UI /;"	d
GL_R16UI	lib/gl3w/GL/glcorearb.h	/^#define GL_R16UI /;"	d
GL_R16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R16_SNORM /;"	d
GL_R16_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_R16_SNORM /;"	d
GL_R32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R32F /;"	d
GL_R32F	lib/gl3w/GL/glcorearb.h	/^#define GL_R32F /;"	d
GL_R32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R32I /;"	d
GL_R32I	lib/gl3w/GL/glcorearb.h	/^#define GL_R32I /;"	d
GL_R32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R32UI /;"	d
GL_R32UI	lib/gl3w/GL/glcorearb.h	/^#define GL_R32UI /;"	d
GL_R3_G3_B2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R3_G3_B2 /;"	d
GL_R3_G3_B2	lib/gl3w/GL/glcorearb.h	/^#define GL_R3_G3_B2 /;"	d
GL_R8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R8 /;"	d
GL_R8	lib/gl3w/GL/glcorearb.h	/^#define GL_R8 /;"	d
GL_R8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R8I /;"	d
GL_R8I	lib/gl3w/GL/glcorearb.h	/^#define GL_R8I /;"	d
GL_R8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R8UI /;"	d
GL_R8UI	lib/gl3w/GL/glcorearb.h	/^#define GL_R8UI /;"	d
GL_R8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_R8_SNORM /;"	d
GL_R8_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_R8_SNORM /;"	d
GL_RASTERIZER_DISCARD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_RASTERIZER_DISCARD	lib/gl3w/GL/glcorearb.h	/^#define GL_RASTERIZER_DISCARD /;"	d
GL_READ_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_BUFFER /;"	d
GL_READ_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_BUFFER /;"	d
GL_READ_FRAMEBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_FRAMEBUFFER /;"	d
GL_READ_FRAMEBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_FRAMEBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_FRAMEBUFFER_BINDING /;"	d
GL_READ_ONLY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_ONLY /;"	d
GL_READ_ONLY	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_ONLY /;"	d
GL_READ_PIXELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_PIXELS /;"	d
GL_READ_PIXELS_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_PIXELS_FORMAT /;"	d
GL_READ_PIXELS_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_PIXELS_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_PIXELS_TYPE /;"	d
GL_READ_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_READ_WRITE /;"	d
GL_READ_WRITE	lib/gl3w/GL/glcorearb.h	/^#define GL_READ_WRITE /;"	d
GL_RED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RED /;"	d
GL_RED	lib/gl3w/GL/glcorearb.h	/^#define GL_RED /;"	d
GL_RED_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_RED_INTEGER /;"	d
GL_RED_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RED_SNORM /;"	d
GL_RED_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RED_SNORM /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_REFERENCED_BY_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_RENDERBUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_ALPHA_SIZE /;"	d
GL_RENDERBUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_BINDING /;"	d
GL_RENDERBUFFER_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_BLUE_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_DEPTH_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_GREEN_SIZE /;"	d
GL_RENDERBUFFER_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_HEIGHT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_INTERNAL_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_INTERNAL_FORMAT /;"	d
GL_RENDERBUFFER_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_RED_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_RED_SIZE /;"	d
GL_RENDERBUFFER_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_SAMPLES /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_STENCIL_SIZE /;"	d
GL_RENDERBUFFER_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERBUFFER_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERBUFFER_WIDTH /;"	d
GL_RENDERER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RENDERER /;"	d
GL_RENDERER	lib/gl3w/GL/glcorearb.h	/^#define GL_RENDERER /;"	d
GL_REPEAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REPEAT /;"	d
GL_REPEAT	lib/gl3w/GL/glcorearb.h	/^#define GL_REPEAT /;"	d
GL_REPLACE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_REPLACE /;"	d
GL_REPLACE	lib/gl3w/GL/glcorearb.h	/^#define GL_REPLACE /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RESET_NOTIFICATION_STRATEGY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_RESET_NOTIFICATION_STRATEGY_ARB /;"	d
GL_RG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG /;"	d
GL_RG	lib/gl3w/GL/glcorearb.h	/^#define GL_RG /;"	d
GL_RG16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG16 /;"	d
GL_RG16	lib/gl3w/GL/glcorearb.h	/^#define GL_RG16 /;"	d
GL_RG16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG16F /;"	d
GL_RG16F	lib/gl3w/GL/glcorearb.h	/^#define GL_RG16F /;"	d
GL_RG16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG16I /;"	d
GL_RG16I	lib/gl3w/GL/glcorearb.h	/^#define GL_RG16I /;"	d
GL_RG16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG16UI /;"	d
GL_RG16UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RG16UI /;"	d
GL_RG16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG16_SNORM /;"	d
GL_RG16_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RG16_SNORM /;"	d
GL_RG32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG32F /;"	d
GL_RG32F	lib/gl3w/GL/glcorearb.h	/^#define GL_RG32F /;"	d
GL_RG32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG32I /;"	d
GL_RG32I	lib/gl3w/GL/glcorearb.h	/^#define GL_RG32I /;"	d
GL_RG32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG32UI /;"	d
GL_RG32UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RG32UI /;"	d
GL_RG8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG8 /;"	d
GL_RG8	lib/gl3w/GL/glcorearb.h	/^#define GL_RG8 /;"	d
GL_RG8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG8I /;"	d
GL_RG8I	lib/gl3w/GL/glcorearb.h	/^#define GL_RG8I /;"	d
GL_RG8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG8UI /;"	d
GL_RG8UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RG8UI /;"	d
GL_RG8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG8_SNORM /;"	d
GL_RG8_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RG8_SNORM /;"	d
GL_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB /;"	d
GL_RGB	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB /;"	d
GL_RGB10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB10 /;"	d
GL_RGB10	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB10 /;"	d
GL_RGB10_A2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB10_A2 /;"	d
GL_RGB10_A2	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB10_A2 /;"	d
GL_RGB10_A2UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB10_A2UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB10_A2UI /;"	d
GL_RGB12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB12 /;"	d
GL_RGB12	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB12 /;"	d
GL_RGB16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB16 /;"	d
GL_RGB16	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB16 /;"	d
GL_RGB16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB16F /;"	d
GL_RGB16F	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB16F /;"	d
GL_RGB16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB16I /;"	d
GL_RGB16I	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB16I /;"	d
GL_RGB16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB16UI /;"	d
GL_RGB16UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB16UI /;"	d
GL_RGB16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB16_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB16_SNORM /;"	d
GL_RGB32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB32F /;"	d
GL_RGB32F	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB32F /;"	d
GL_RGB32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB32I /;"	d
GL_RGB32I	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB32I /;"	d
GL_RGB32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB32UI /;"	d
GL_RGB32UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB32UI /;"	d
GL_RGB4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB4 /;"	d
GL_RGB4	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB4 /;"	d
GL_RGB5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB5 /;"	d
GL_RGB5	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB5 /;"	d
GL_RGB565	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB565 /;"	d
GL_RGB565	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB565 /;"	d
GL_RGB5_A1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB5_A1	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB5_A1 /;"	d
GL_RGB8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB8 /;"	d
GL_RGB8	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB8 /;"	d
GL_RGB8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB8I /;"	d
GL_RGB8I	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB8I /;"	d
GL_RGB8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB8UI /;"	d
GL_RGB8UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB8UI /;"	d
GL_RGB8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB8_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB8_SNORM /;"	d
GL_RGB9_E5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB9_E5 /;"	d
GL_RGB9_E5	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB9_E5 /;"	d
GL_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA /;"	d
GL_RGBA	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA /;"	d
GL_RGBA12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA12 /;"	d
GL_RGBA12	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA12 /;"	d
GL_RGBA16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA16 /;"	d
GL_RGBA16	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA16 /;"	d
GL_RGBA16F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16F	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA16F /;"	d
GL_RGBA16I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16I	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA16I /;"	d
GL_RGBA16UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA16UI /;"	d
GL_RGBA16_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA16_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA16_SNORM /;"	d
GL_RGBA2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA2 /;"	d
GL_RGBA2	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA2 /;"	d
GL_RGBA32F	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32F	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA32F /;"	d
GL_RGBA32I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32I	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA32I /;"	d
GL_RGBA32UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA32UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA32UI /;"	d
GL_RGBA4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA4 /;"	d
GL_RGBA4	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA4 /;"	d
GL_RGBA8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA8 /;"	d
GL_RGBA8	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA8 /;"	d
GL_RGBA8I	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8I	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA8I /;"	d
GL_RGBA8UI	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8UI	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA8UI /;"	d
GL_RGBA8_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA8_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA8_SNORM /;"	d
GL_RGBA_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA_INTEGER /;"	d
GL_RGBA_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGBA_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RGBA_SNORM /;"	d
GL_RGB_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB_INTEGER /;"	d
GL_RGB_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RGB_SNORM /;"	d
GL_RGB_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RGB_SNORM /;"	d
GL_RG_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_RG_INTEGER /;"	d
GL_RG_SNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RG_SNORM /;"	d
GL_RG_SNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_RG_SNORM /;"	d
GL_RIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_RIGHT /;"	d
GL_RIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_RIGHT /;"	d
GL_SAMPLER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER /;"	d
GL_SAMPLER_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D /;"	d
GL_SAMPLER_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_ARRAY_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D_ARRAY_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_1D_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_1D_SHADOW /;"	d
GL_SAMPLER_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D /;"	d
GL_SAMPLER_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_ARRAY_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_ARRAY_SHADOW /;"	d
GL_SAMPLER_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_SAMPLER_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_RECT /;"	d
GL_SAMPLER_2D_RECT_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_RECT_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_RECT_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_2D_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_2D_SHADOW /;"	d
GL_SAMPLER_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_3D /;"	d
GL_SAMPLER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_BINDING /;"	d
GL_SAMPLER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_BUFFER /;"	d
GL_SAMPLER_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_MAP_ARRAY_SHADOW_ARB /;"	d
GL_SAMPLER_CUBE_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLER_CUBE_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLER_CUBE_SHADOW /;"	d
GL_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLES /;"	d
GL_SAMPLES_PASSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLES_PASSED	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLES_PASSED /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_COVERAGE	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_COVERAGE /;"	d
GL_SAMPLE_ALPHA_TO_ONE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_ALPHA_TO_ONE	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_ALPHA_TO_ONE /;"	d
GL_SAMPLE_BUFFERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_BUFFERS	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_BUFFERS /;"	d
GL_SAMPLE_COVERAGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE /;"	d
GL_SAMPLE_COVERAGE_INVERT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_INVERT	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_INVERT /;"	d
GL_SAMPLE_COVERAGE_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_COVERAGE_VALUE	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_COVERAGE_VALUE /;"	d
GL_SAMPLE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_MASK /;"	d
GL_SAMPLE_MASK_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_MASK_VALUE	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_MASK_VALUE /;"	d
GL_SAMPLE_POSITION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_POSITION	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_POSITION /;"	d
GL_SAMPLE_SHADING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_SHADING /;"	d
GL_SAMPLE_SHADING_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SAMPLE_SHADING_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_SAMPLE_SHADING_ARB /;"	d
GL_SCISSOR_BOX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_BOX	lib/gl3w/GL/glcorearb.h	/^#define GL_SCISSOR_BOX /;"	d
GL_SCISSOR_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SCISSOR_TEST	lib/gl3w/GL/glcorearb.h	/^#define GL_SCISSOR_TEST /;"	d
GL_SEPARATE_ATTRIBS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SEPARATE_ATTRIBS	lib/gl3w/GL/glcorearb.h	/^#define GL_SEPARATE_ATTRIBS /;"	d
GL_SET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SET /;"	d
GL_SET	lib/gl3w/GL/glcorearb.h	/^#define GL_SET /;"	d
GL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER /;"	d
GL_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER /;"	d
GL_SHADER_BINARY_FORMATS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_BINARY_FORMATS	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_BINARY_FORMATS /;"	d
GL_SHADER_COMPILER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_COMPILER	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_COMPILER /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ACCESS_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_ACCESS_BARRIER_BIT /;"	d
GL_SHADER_IMAGE_ATOMIC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_ATOMIC	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_ATOMIC /;"	d
GL_SHADER_IMAGE_LOAD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_LOAD	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_LOAD /;"	d
GL_SHADER_IMAGE_STORE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_IMAGE_STORE	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_IMAGE_STORE /;"	d
GL_SHADER_INCLUDE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_INCLUDE_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_INCLUDE_ARB /;"	d
GL_SHADER_SOURCE_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_SOURCE_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_SOURCE_LENGTH /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BARRIER_BIT /;"	d
GL_SHADER_STORAGE_BLOCK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BLOCK	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BLOCK /;"	d
GL_SHADER_STORAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_BINDING /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_SIZE /;"	d
GL_SHADER_STORAGE_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_STORAGE_BUFFER_START	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_STORAGE_BUFFER_START /;"	d
GL_SHADER_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADER_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADER_TYPE /;"	d
GL_SHADING_LANGUAGE_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHADING_LANGUAGE_VERSION	lib/gl3w/GL/glcorearb.h	/^#define GL_SHADING_LANGUAGE_VERSION /;"	d
GL_SHORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SHORT /;"	d
GL_SHORT	lib/gl3w/GL/glcorearb.h	/^#define GL_SHORT /;"	d
GL_SIGNALED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SIGNALED /;"	d
GL_SIGNALED	lib/gl3w/GL/glcorearb.h	/^#define GL_SIGNALED /;"	d
GL_SIGNED_NORMALIZED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIGNED_NORMALIZED	lib/gl3w/GL/glcorearb.h	/^#define GL_SIGNED_NORMALIZED /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST	lib/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE	lib/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_DEPTH_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST	lib/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_TEST /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE	lib/gl3w/GL/glcorearb.h	/^#define GL_SIMULTANEOUS_TEXTURE_AND_STENCIL_WRITE /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_GRANULARITY	lib/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_GRANULARITY /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_LINE_WIDTH_RANGE	lib/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_LINE_WIDTH_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_GRANULARITY	lib/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_GRANULARITY /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SMOOTH_POINT_SIZE_RANGE	lib/gl3w/GL/glcorearb.h	/^#define GL_SMOOTH_POINT_SIZE_RANGE /;"	d
GL_SRC1_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_SRC1_ALPHA /;"	d
GL_SRC1_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC1_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_SRC1_COLOR /;"	d
GL_SRC_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_SRC_ALPHA /;"	d
GL_SRC_ALPHA_SATURATE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_ALPHA_SATURATE	lib/gl3w/GL/glcorearb.h	/^#define GL_SRC_ALPHA_SATURATE /;"	d
GL_SRC_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRC_COLOR /;"	d
GL_SRC_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_SRC_COLOR /;"	d
GL_SRGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRGB /;"	d
GL_SRGB	lib/gl3w/GL/glcorearb.h	/^#define GL_SRGB /;"	d
GL_SRGB8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8	lib/gl3w/GL/glcorearb.h	/^#define GL_SRGB8 /;"	d
GL_SRGB8_ALPHA8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB8_ALPHA8	lib/gl3w/GL/glcorearb.h	/^#define GL_SRGB8_ALPHA8 /;"	d
GL_SRGB_ALPHA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_ALPHA	lib/gl3w/GL/glcorearb.h	/^#define GL_SRGB_ALPHA /;"	d
GL_SRGB_DECODE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_DECODE_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_SRGB_DECODE_ARB /;"	d
GL_SRGB_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_READ	lib/gl3w/GL/glcorearb.h	/^#define GL_SRGB_READ /;"	d
GL_SRGB_WRITE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SRGB_WRITE /;"	d
GL_SRGB_WRITE	lib/gl3w/GL/glcorearb.h	/^#define GL_SRGB_WRITE /;"	d
GL_STACK_OVERFLOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STACK_OVERFLOW /;"	d
GL_STACK_OVERFLOW	lib/gl3w/GL/glcorearb.h	/^#define GL_STACK_OVERFLOW /;"	d
GL_STACK_UNDERFLOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STACK_UNDERFLOW /;"	d
GL_STACK_UNDERFLOW	lib/gl3w/GL/glcorearb.h	/^#define GL_STACK_UNDERFLOW /;"	d
GL_STATIC_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_COPY	lib/gl3w/GL/glcorearb.h	/^#define GL_STATIC_COPY /;"	d
GL_STATIC_DRAW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_DRAW	lib/gl3w/GL/glcorearb.h	/^#define GL_STATIC_DRAW /;"	d
GL_STATIC_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STATIC_READ /;"	d
GL_STATIC_READ	lib/gl3w/GL/glcorearb.h	/^#define GL_STATIC_READ /;"	d
GL_STENCIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL /;"	d
GL_STENCIL	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL /;"	d
GL_STENCIL_ATTACHMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_ATTACHMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_ATTACHMENT /;"	d
GL_STENCIL_BACK_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FAIL	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_FAIL /;"	d
GL_STENCIL_BACK_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_FUNC	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_FUNC /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_FAIL	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_PASS_DEPTH_PASS	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_PASS_DEPTH_PASS /;"	d
GL_STENCIL_BACK_REF	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_REF	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_REF /;"	d
GL_STENCIL_BACK_VALUE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_VALUE_MASK	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_VALUE_MASK /;"	d
GL_STENCIL_BACK_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BACK_WRITEMASK	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BACK_WRITEMASK /;"	d
GL_STENCIL_BUFFER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_BUFFER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_BUFFER_BIT /;"	d
GL_STENCIL_CLEAR_VALUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_CLEAR_VALUE	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_CLEAR_VALUE /;"	d
GL_STENCIL_COMPONENTS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_COMPONENTS	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_COMPONENTS /;"	d
GL_STENCIL_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FAIL	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_FAIL /;"	d
GL_STENCIL_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_FUNC	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_FUNC /;"	d
GL_STENCIL_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX /;"	d
GL_STENCIL_INDEX1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX1	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX1 /;"	d
GL_STENCIL_INDEX16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX16	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX16 /;"	d
GL_STENCIL_INDEX4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX4	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX4 /;"	d
GL_STENCIL_INDEX8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_INDEX8	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_INDEX8 /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_FAIL	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_FAIL /;"	d
GL_STENCIL_PASS_DEPTH_PASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_PASS_DEPTH_PASS	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_PASS_DEPTH_PASS /;"	d
GL_STENCIL_REF	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_REF	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_REF /;"	d
GL_STENCIL_RENDERABLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_RENDERABLE	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_RENDERABLE /;"	d
GL_STENCIL_TEST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_TEST	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_TEST /;"	d
GL_STENCIL_VALUE_MASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_VALUE_MASK	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_VALUE_MASK /;"	d
GL_STENCIL_WRITEMASK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STENCIL_WRITEMASK	lib/gl3w/GL/glcorearb.h	/^#define GL_STENCIL_WRITEMASK /;"	d
GL_STEREO	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STEREO /;"	d
GL_STEREO	lib/gl3w/GL/glcorearb.h	/^#define GL_STEREO /;"	d
GL_STREAM_COPY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_COPY	lib/gl3w/GL/glcorearb.h	/^#define GL_STREAM_COPY /;"	d
GL_STREAM_DRAW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_DRAW	lib/gl3w/GL/glcorearb.h	/^#define GL_STREAM_DRAW /;"	d
GL_STREAM_READ	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_STREAM_READ /;"	d
GL_STREAM_READ	lib/gl3w/GL/glcorearb.h	/^#define GL_STREAM_READ /;"	d
GL_SUBPIXEL_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SUBPIXEL_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_SUBPIXEL_BITS /;"	d
GL_SYNC_CL_EVENT_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_CL_EVENT_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CL_EVENT_COMPLETE_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_CL_EVENT_COMPLETE_ARB /;"	d
GL_SYNC_CONDITION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_CONDITION	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_CONDITION /;"	d
GL_SYNC_FENCE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FENCE	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_FENCE /;"	d
GL_SYNC_FLAGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLAGS	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_FLAGS /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_FLUSH_COMMANDS_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_FLUSH_COMMANDS_BIT /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_GPU_COMMANDS_COMPLETE	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_GPU_COMMANDS_COMPLETE /;"	d
GL_SYNC_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_SYNC_STATUS /;"	d
GL_SYNC_STATUS	lib/gl3w/GL/glcorearb.h	/^#define GL_SYNC_STATUS /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_OUTPUT_VERTICES	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_OUTPUT_VERTICES /;"	d
GL_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER /;"	d
GL_TESS_CONTROL_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SHADER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SHADER_BIT /;"	d
GL_TESS_CONTROL_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_SUBROUTINE_UNIFORM /;"	d
GL_TESS_CONTROL_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_CONTROL_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_CONTROL_TEXTURE /;"	d
GL_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER /;"	d
GL_TESS_EVALUATION_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SHADER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SHADER_BIT /;"	d
GL_TESS_EVALUATION_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_SUBROUTINE_UNIFORM /;"	d
GL_TESS_EVALUATION_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_EVALUATION_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_EVALUATION_TEXTURE /;"	d
GL_TESS_GEN_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_MODE /;"	d
GL_TESS_GEN_POINT_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_POINT_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_POINT_MODE /;"	d
GL_TESS_GEN_SPACING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_SPACING	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_SPACING /;"	d
GL_TESS_GEN_VERTEX_ORDER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TESS_GEN_VERTEX_ORDER	lib/gl3w/GL/glcorearb.h	/^#define GL_TESS_GEN_VERTEX_ORDER /;"	d
GL_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE /;"	d
GL_TEXTURE0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE0	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE0 /;"	d
GL_TEXTURE1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE1	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE1 /;"	d
GL_TEXTURE10	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE10	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE10 /;"	d
GL_TEXTURE11	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE11	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE11 /;"	d
GL_TEXTURE12	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE12	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE12 /;"	d
GL_TEXTURE13	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE13	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE13 /;"	d
GL_TEXTURE14	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE14	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE14 /;"	d
GL_TEXTURE15	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE15	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE15 /;"	d
GL_TEXTURE16	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE16	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE16 /;"	d
GL_TEXTURE17	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE17	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE17 /;"	d
GL_TEXTURE18	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE18	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE18 /;"	d
GL_TEXTURE19	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE19	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE19 /;"	d
GL_TEXTURE2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE2	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE2 /;"	d
GL_TEXTURE20	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE20	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE20 /;"	d
GL_TEXTURE21	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE21	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE21 /;"	d
GL_TEXTURE22	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE22	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE22 /;"	d
GL_TEXTURE23	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE23	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE23 /;"	d
GL_TEXTURE24	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE24	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE24 /;"	d
GL_TEXTURE25	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE25	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE25 /;"	d
GL_TEXTURE26	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE26	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE26 /;"	d
GL_TEXTURE27	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE27	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE27 /;"	d
GL_TEXTURE28	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE28	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE28 /;"	d
GL_TEXTURE29	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE29	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE29 /;"	d
GL_TEXTURE3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE3	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE3 /;"	d
GL_TEXTURE30	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE30	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE30 /;"	d
GL_TEXTURE31	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE31	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE31 /;"	d
GL_TEXTURE4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE4	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE4 /;"	d
GL_TEXTURE5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE5	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE5 /;"	d
GL_TEXTURE6	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE6	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE6 /;"	d
GL_TEXTURE7	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE7	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE7 /;"	d
GL_TEXTURE8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE8	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE8 /;"	d
GL_TEXTURE9	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE9	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE9 /;"	d
GL_TEXTURE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_1D /;"	d
GL_TEXTURE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_1D_ARRAY /;"	d
GL_TEXTURE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D /;"	d
GL_TEXTURE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D_ARRAY /;"	d
GL_TEXTURE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_3D /;"	d
GL_TEXTURE_ALPHA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_ALPHA_SIZE /;"	d
GL_TEXTURE_ALPHA_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_ALPHA_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_ALPHA_TYPE /;"	d
GL_TEXTURE_BASE_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BASE_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BASE_LEVEL /;"	d
GL_TEXTURE_BINDING_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_1D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_2D_MULTISAMPLE_ARRAY /;"	d
GL_TEXTURE_BINDING_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_3D /;"	d
GL_TEXTURE_BINDING_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_BUFFER /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_BINDING_RECTANGLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BINDING_RECTANGLE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BINDING_RECTANGLE /;"	d
GL_TEXTURE_BLUE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BLUE_SIZE /;"	d
GL_TEXTURE_BLUE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BLUE_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BLUE_TYPE /;"	d
GL_TEXTURE_BORDER_COLOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BORDER_COLOR	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BORDER_COLOR /;"	d
GL_TEXTURE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_DATA_STORE_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_DATA_STORE_BINDING /;"	d
GL_TEXTURE_BUFFER_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_TEXTURE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_BUFFER_SIZE /;"	d
GL_TEXTURE_COMPARE_FUNC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_FUNC	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPARE_FUNC /;"	d
GL_TEXTURE_COMPARE_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPARE_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPARE_MODE /;"	d
GL_TEXTURE_COMPRESSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_SIZE /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_BLOCK_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_BLOCK_WIDTH /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSED_IMAGE_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSED_IMAGE_SIZE /;"	d
GL_TEXTURE_COMPRESSION_HINT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_COMPRESSION_HINT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_COMPRESSION_HINT /;"	d
GL_TEXTURE_CUBE_MAP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_ARRAY_ARB /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_X	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Y	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_NEGATIVE_Z	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_NEGATIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_X	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_X /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Y	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Y /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_POSITIVE_Z	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_POSITIVE_Z /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_CUBE_MAP_SEAMLESS	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_CUBE_MAP_SEAMLESS /;"	d
GL_TEXTURE_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH /;"	d
GL_TEXTURE_DEPTH_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH_SIZE /;"	d
GL_TEXTURE_DEPTH_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_DEPTH_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_DEPTH_TYPE /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FETCH_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_FETCH_BARRIER_BIT /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_FIXED_SAMPLE_LOCATIONS	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_FIXED_SAMPLE_LOCATIONS /;"	d
GL_TEXTURE_GATHER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GATHER /;"	d
GL_TEXTURE_GATHER_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GATHER_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GATHER_SHADOW /;"	d
GL_TEXTURE_GREEN_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GREEN_SIZE /;"	d
GL_TEXTURE_GREEN_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_GREEN_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_GREEN_TYPE /;"	d
GL_TEXTURE_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_HEIGHT /;"	d
GL_TEXTURE_IMAGE_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMAGE_FORMAT /;"	d
GL_TEXTURE_IMAGE_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMAGE_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMAGE_TYPE /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_FORMAT /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_IMMUTABLE_LEVELS	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_IMMUTABLE_LEVELS /;"	d
GL_TEXTURE_INTERNAL_FORMAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_INTERNAL_FORMAT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_INTERNAL_FORMAT /;"	d
GL_TEXTURE_LOD_BIAS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_LOD_BIAS	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_LOD_BIAS /;"	d
GL_TEXTURE_MAG_FILTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAG_FILTER	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MAG_FILTER /;"	d
GL_TEXTURE_MAX_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MAX_LEVEL /;"	d
GL_TEXTURE_MAX_LOD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MAX_LOD	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MAX_LOD /;"	d
GL_TEXTURE_MIN_FILTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_FILTER	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MIN_FILTER /;"	d
GL_TEXTURE_MIN_LOD	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_MIN_LOD	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_MIN_LOD /;"	d
GL_TEXTURE_RECTANGLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RECTANGLE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_RECTANGLE /;"	d
GL_TEXTURE_RED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_RED_SIZE /;"	d
GL_TEXTURE_RED_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_RED_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_RED_TYPE /;"	d
GL_TEXTURE_SAMPLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SAMPLES	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SAMPLES /;"	d
GL_TEXTURE_SHADOW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHADOW	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SHADOW /;"	d
GL_TEXTURE_SHARED_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_SHARED_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SHARED_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_STENCIL_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_STENCIL_SIZE /;"	d
GL_TEXTURE_SWIZZLE_A	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_A	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_A /;"	d
GL_TEXTURE_SWIZZLE_B	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_B	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_B /;"	d
GL_TEXTURE_SWIZZLE_G	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_G	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_G /;"	d
GL_TEXTURE_SWIZZLE_R	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_R	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_R /;"	d
GL_TEXTURE_SWIZZLE_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_SWIZZLE_RGBA	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_SWIZZLE_RGBA /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_UPDATE_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_UPDATE_BARRIER_BIT /;"	d
GL_TEXTURE_VIEW	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LAYER	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LAYER /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_MIN_LEVEL	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_MIN_LEVEL /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LAYERS	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LAYERS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_VIEW_NUM_LEVELS	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_VIEW_NUM_LEVELS /;"	d
GL_TEXTURE_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WIDTH /;"	d
GL_TEXTURE_WRAP_R	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_R	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_R /;"	d
GL_TEXTURE_WRAP_S	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_S	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_S /;"	d
GL_TEXTURE_WRAP_T	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TEXTURE_WRAP_T	lib/gl3w/GL/glcorearb.h	/^#define GL_TEXTURE_WRAP_T /;"	d
GL_TIMEOUT_EXPIRED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_EXPIRED	lib/gl3w/GL/glcorearb.h	/^#define GL_TIMEOUT_EXPIRED /;"	d
GL_TIMEOUT_IGNORED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMEOUT_IGNORED	lib/gl3w/GL/glcorearb.h	/^#define GL_TIMEOUT_IGNORED /;"	d
GL_TIMESTAMP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TIMESTAMP /;"	d
GL_TIMESTAMP	lib/gl3w/GL/glcorearb.h	/^#define GL_TIMESTAMP /;"	d
GL_TIME_ELAPSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TIME_ELAPSED	lib/gl3w/GL/glcorearb.h	/^#define GL_TIME_ELAPSED /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_SIZE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TOP_LEVEL_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	/^#define GL_TOP_LEVEL_ARRAY_STRIDE /;"	d
GL_TRANSFORM_FEEDBACK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_ACTIVE	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BARRIER_BIT /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_ACTIVE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_BINDING /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_MODE	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_MODE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_SIZE /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_BUFFER_START	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_BUFFER_START /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PAUSED	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PAUSED /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYING	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYINGS	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYINGS /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_TRANSFORM_FEEDBACK_VARYING_MAX_LENGTH /;"	d
GL_TRIANGLES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES	lib/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLES /;"	d
GL_TRIANGLES_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLES_ADJACENCY	lib/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLES_ADJACENCY /;"	d
GL_TRIANGLE_FAN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_FAN	lib/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLE_FAN /;"	d
GL_TRIANGLE_STRIP	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP	lib/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLE_STRIP /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRIANGLE_STRIP_ADJACENCY	lib/gl3w/GL/glcorearb.h	/^#define GL_TRIANGLE_STRIP_ADJACENCY /;"	d
GL_TRUE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TRUE /;"	d
GL_TRUE	lib/gl3w/GL/glcorearb.h	/^#define GL_TRUE /;"	d
GL_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_TYPE /;"	d
GL_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_TYPE /;"	d
GL_UNDEFINED_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNDEFINED_VERTEX	lib/gl3w/GL/glcorearb.h	/^#define GL_UNDEFINED_VERTEX /;"	d
GL_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM /;"	d
GL_UNIFORM_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_ARRAY_STRIDE /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_ATOMIC_COUNTER_BUFFER_INDEX /;"	d
GL_UNIFORM_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BARRIER_BIT /;"	d
GL_UNIFORM_BLOCK	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORMS /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES /;"	d
GL_UNIFORM_BLOCK_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_BINDING /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_DATA_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_DATA_SIZE /;"	d
GL_UNIFORM_BLOCK_INDEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_INDEX	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_INDEX /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_NAME_LENGTH /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_COMPUTE_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_GEOMETRY_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_CONTROL_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_TESS_EVALUATION_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER /;"	d
GL_UNIFORM_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER /;"	d
GL_UNIFORM_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_BINDING /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_OFFSET_ALIGNMENT /;"	d
GL_UNIFORM_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_SIZE /;"	d
GL_UNIFORM_BUFFER_START	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_BUFFER_START	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_BUFFER_START /;"	d
GL_UNIFORM_IS_ROW_MAJOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_IS_ROW_MAJOR	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_IS_ROW_MAJOR /;"	d
GL_UNIFORM_MATRIX_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_MATRIX_STRIDE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_MATRIX_STRIDE /;"	d
GL_UNIFORM_NAME_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_NAME_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_NAME_LENGTH /;"	d
GL_UNIFORM_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_OFFSET /;"	d
GL_UNIFORM_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_SIZE /;"	d
GL_UNIFORM_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNIFORM_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNIFORM_TYPE /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNKNOWN_CONTEXT_RESET_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_UNKNOWN_CONTEXT_RESET_ARB /;"	d
GL_UNPACK_ALIGNMENT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_ALIGNMENT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_ALIGNMENT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_DEPTH	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_DEPTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_HEIGHT /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_SIZE /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_COMPRESSED_BLOCK_WIDTH	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_COMPRESSED_BLOCK_WIDTH /;"	d
GL_UNPACK_IMAGE_HEIGHT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_IMAGE_HEIGHT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_IMAGE_HEIGHT /;"	d
GL_UNPACK_LSB_FIRST	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_LSB_FIRST	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_LSB_FIRST /;"	d
GL_UNPACK_ROW_LENGTH	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_ROW_LENGTH	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_ROW_LENGTH /;"	d
GL_UNPACK_SKIP_IMAGES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_IMAGES	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_IMAGES /;"	d
GL_UNPACK_SKIP_PIXELS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_PIXELS	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_PIXELS /;"	d
GL_UNPACK_SKIP_ROWS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SKIP_ROWS	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SKIP_ROWS /;"	d
GL_UNPACK_SWAP_BYTES	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNPACK_SWAP_BYTES	lib/gl3w/GL/glcorearb.h	/^#define GL_UNPACK_SWAP_BYTES /;"	d
GL_UNSIGNALED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNALED	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNALED /;"	d
GL_UNSIGNED_BYTE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_2_3_3_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE_2_3_3_REV /;"	d
GL_UNSIGNED_BYTE_3_3_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_BYTE_3_3_2	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_BYTE_3_3_2 /;"	d
GL_UNSIGNED_INT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10F_11F_11F_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_10F_11F_11F_REV /;"	d
GL_UNSIGNED_INT_10_10_10_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_10_10_10_2	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_10_10_10_2 /;"	d
GL_UNSIGNED_INT_24_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_24_8	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_24_8 /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_2_10_10_10_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_2_10_10_10_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_5_9_9_9_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_5_9_9_9_REV /;"	d
GL_UNSIGNED_INT_8_8_8_8	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8 /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_8_8_8_8_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_8_8_8_8_REV /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_ATOMIC_COUNTER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_ATOMIC_COUNTER /;"	d
GL_UNSIGNED_INT_IMAGE_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_1D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_2D_RECT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_2D_RECT /;"	d
GL_UNSIGNED_INT_IMAGE_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_3D /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_BUFFER /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_IMAGE_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_1D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_1D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_MULTISAMPLE_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_2D_RECT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_2D_RECT /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_3D	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_3D /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_BUFFER	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_BUFFER /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_SAMPLER_CUBE_MAP_ARRAY_ARB /;"	d
GL_UNSIGNED_INT_VEC2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC2	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC2 /;"	d
GL_UNSIGNED_INT_VEC3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC3	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC3 /;"	d
GL_UNSIGNED_INT_VEC4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_INT_VEC4	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_INT_VEC4 /;"	d
GL_UNSIGNED_NORMALIZED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_NORMALIZED	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_NORMALIZED /;"	d
GL_UNSIGNED_SHORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_1_5_5_5_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_1_5_5_5_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4 /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_4_4_4_4_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_4_4_4_4_REV /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_5_5_1	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_5_5_1 /;"	d
GL_UNSIGNED_SHORT_5_6_5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5 /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UNSIGNED_SHORT_5_6_5_REV	lib/gl3w/GL/glcorearb.h	/^#define GL_UNSIGNED_SHORT_5_6_5_REV /;"	d
GL_UPPER_LEFT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_UPPER_LEFT /;"	d
GL_UPPER_LEFT	lib/gl3w/GL/glcorearb.h	/^#define GL_UPPER_LEFT /;"	d
GL_VALIDATE_STATUS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VALIDATE_STATUS	lib/gl3w/GL/glcorearb.h	/^#define GL_VALIDATE_STATUS /;"	d
GL_VENDOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VENDOR /;"	d
GL_VENDOR	lib/gl3w/GL/glcorearb.h	/^#define GL_VENDOR /;"	d
GL_VERSION	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION /;"	d
GL_VERSION	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION /;"	d
GL_VERSION_1_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_0 /;"	d
GL_VERSION_1_0	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_0 /;"	d
GL_VERSION_1_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_1	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_1 /;"	d
GL_VERSION_1_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_2	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_2 /;"	d
GL_VERSION_1_3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_3	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_3 /;"	d
GL_VERSION_1_4	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_4	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_4 /;"	d
GL_VERSION_1_5	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_1_5	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_1_5 /;"	d
GL_VERSION_2_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_0	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_2_0 /;"	d
GL_VERSION_2_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_2_1	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_2_1 /;"	d
GL_VERSION_3_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_0	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_0 /;"	d
GL_VERSION_3_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_1	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_1 /;"	d
GL_VERSION_3_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_2	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_2 /;"	d
GL_VERSION_3_3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_3_3	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_3_3 /;"	d
GL_VERSION_4_0	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_0	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_0 /;"	d
GL_VERSION_4_1	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_1	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_1 /;"	d
GL_VERSION_4_2	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_2	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_2 /;"	d
GL_VERSION_4_3	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERSION_4_3	lib/gl3w/GL/glcorearb.h	/^#define GL_VERSION_4_3 /;"	d
GL_VERTEX_ARRAY_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ARRAY_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ARRAY_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BARRIER_BIT /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_DIVISOR	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_DIVISOR /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_ENABLED	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_ENABLED /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_INTEGER	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_INTEGER /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_LONG	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_LONG /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_NORMALIZED	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_NORMALIZED /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_POINTER	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_POINTER /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_SIZE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_STRIDE	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_STRIDE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_ARRAY_TYPE	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_ARRAY_TYPE /;"	d
GL_VERTEX_ATTRIB_BINDING	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_BINDING	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_BINDING /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_ATTRIB_RELATIVE_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_ATTRIB_RELATIVE_OFFSET /;"	d
GL_VERTEX_BINDING_DIVISOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_DIVISOR	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_DIVISOR /;"	d
GL_VERTEX_BINDING_OFFSET	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_OFFSET	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_OFFSET /;"	d
GL_VERTEX_BINDING_STRIDE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_BINDING_STRIDE	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_BINDING_STRIDE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_PROGRAM_POINT_SIZE	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_PROGRAM_POINT_SIZE /;"	d
GL_VERTEX_SHADER	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SHADER /;"	d
GL_VERTEX_SHADER_BIT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SHADER_BIT	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SHADER_BIT /;"	d
GL_VERTEX_SUBROUTINE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_SUBROUTINE_UNIFORM	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_SUBROUTINE_UNIFORM /;"	d
GL_VERTEX_TEXTURE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VERTEX_TEXTURE	lib/gl3w/GL/glcorearb.h	/^#define GL_VERTEX_TEXTURE /;"	d
GL_VIEWPORT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT /;"	d
GL_VIEWPORT_BOUNDS_RANGE	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_BOUNDS_RANGE	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT_BOUNDS_RANGE /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_INDEX_PROVOKING_VERTEX	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT_INDEX_PROVOKING_VERTEX /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEWPORT_SUBPIXEL_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEWPORT_SUBPIXEL_BITS /;"	d
GL_VIEW_CLASS_128_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_128_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_128_BITS /;"	d
GL_VIEW_CLASS_16_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_16_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_16_BITS /;"	d
GL_VIEW_CLASS_24_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_24_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_24_BITS /;"	d
GL_VIEW_CLASS_32_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_32_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_32_BITS /;"	d
GL_VIEW_CLASS_48_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_48_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_48_BITS /;"	d
GL_VIEW_CLASS_64_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_64_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_64_BITS /;"	d
GL_VIEW_CLASS_8_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_8_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_8_BITS /;"	d
GL_VIEW_CLASS_96_BITS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_96_BITS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_96_BITS /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_FLOAT	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_FLOAT /;"	d
GL_VIEW_CLASS_BPTC_UNORM	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_BPTC_UNORM	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_BPTC_UNORM /;"	d
GL_VIEW_CLASS_RGTC1_RED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC1_RED	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC1_RED /;"	d
GL_VIEW_CLASS_RGTC2_RG	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_RGTC2_RG	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_RGTC2_RG /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGB	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGB /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT1_RGBA	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT1_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT3_RGBA	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT3_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_CLASS_S3TC_DXT5_RGBA	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_CLASS_S3TC_DXT5_RGBA /;"	d
GL_VIEW_COMPATIBILITY_CLASS	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_VIEW_COMPATIBILITY_CLASS	lib/gl3w/GL/glcorearb.h	/^#define GL_VIEW_COMPATIBILITY_CLASS /;"	d
GL_WAIT_FAILED	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_WAIT_FAILED /;"	d
GL_WAIT_FAILED	lib/gl3w/GL/glcorearb.h	/^#define GL_WAIT_FAILED /;"	d
GL_WRITE_ONLY	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_WRITE_ONLY /;"	d
GL_WRITE_ONLY	lib/gl3w/GL/glcorearb.h	/^#define GL_WRITE_ONLY /;"	d
GL_XOR	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_XOR /;"	d
GL_XOR	lib/gl3w/GL/glcorearb.h	/^#define GL_XOR /;"	d
GL_ZERO	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define GL_ZERO /;"	d
GL_ZERO	lib/gl3w/GL/glcorearb.h	/^#define GL_ZERO /;"	d
GLbitfield	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLbitfield	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLbitfield;$/;"	t	typeref:typename:unsigned int
GLboolean	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLboolean	lib/gl3w/GL/glcorearb.h	/^typedef unsigned char GLboolean;$/;"	t	typeref:typename:unsigned char
GLbyte	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef signed char GLbyte;$/;"	t	typeref:typename:signed char
GLbyte	lib/gl3w/GL/glcorearb.h	/^typedef signed char GLbyte;$/;"	t	typeref:typename:signed char
GLchar	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLchar	lib/gl3w/GL/glcorearb.h	/^typedef char GLchar;$/;"	t	typeref:typename:char
GLcharARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLcharARB	lib/gl3w/GL/glcorearb.h	/^typedef char GLcharARB;$/;"	t	typeref:typename:char
GLclampd	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampd	lib/gl3w/GL/glcorearb.h	/^typedef double GLclampd;$/;"	t	typeref:typename:double
GLclampf	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef float GLclampf;$/;"	t	typeref:typename:float
GLclampf	lib/gl3w/GL/glcorearb.h	/^typedef float GLclampf;$/;"	t	typeref:typename:float
GLdouble	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef double GLdouble;$/;"	t	typeref:typename:double
GLdouble	lib/gl3w/GL/glcorearb.h	/^typedef double GLdouble;$/;"	t	typeref:typename:double
GLenum	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLenum	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLenum;$/;"	t	typeref:typename:unsigned int
GLfloat	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef float GLfloat;$/;"	t	typeref:typename:float
GLfloat	lib/gl3w/GL/glcorearb.h	/^typedef float GLfloat;$/;"	t	typeref:typename:float
GLhalf	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhalf	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalf;$/;"	t	typeref:typename:unsigned short
GLhalfARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfARB	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfARB;$/;"	t	typeref:typename:unsigned short
GLhalfNV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhalfNV	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLhalfNV;$/;"	t	typeref:typename:unsigned short
GLhandleARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLhandleARB	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLhandleARB;$/;"	t	typeref:typename:unsigned int
GLint	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint	lib/gl3w/GL/glcorearb.h	/^typedef int GLint;$/;"	t	typeref:typename:int
GLint64	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLint64	lib/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64;$/;"	t	typeref:typename:int64_t
GLint64EXT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLint64EXT	lib/gl3w/GL/glcorearb.h	/^typedef int64_t GLint64EXT;$/;"	t	typeref:typename:int64_t
GLintptr	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptr	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptr;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLintptrARB	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLintptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLshort	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef short GLshort;$/;"	t	typeref:typename:short
GLshort	lib/gl3w/GL/glcorearb.h	/^typedef short GLshort;$/;"	t	typeref:typename:short
GLsizei	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizei	lib/gl3w/GL/glcorearb.h	/^typedef int GLsizei;$/;"	t	typeref:typename:int
GLsizeiptr	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptr	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptr;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsizeiptrARB	lib/gl3w/GL/glcorearb.h	/^typedef ptrdiff_t GLsizeiptrARB;$/;"	t	typeref:typename:ptrdiff_t
GLsync	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLsync	lib/gl3w/GL/glcorearb.h	/^typedef struct __GLsync *GLsync;$/;"	t	typeref:struct:__GLsync *
GLubyte	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned char GLubyte;$/;"	t	typeref:typename:unsigned char
GLubyte	lib/gl3w/GL/glcorearb.h	/^typedef unsigned char GLubyte;$/;"	t	typeref:typename:unsigned char
GLuint	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint	lib/gl3w/GL/glcorearb.h	/^typedef unsigned int GLuint;$/;"	t	typeref:typename:unsigned int
GLuint64	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64	lib/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLuint64EXT	lib/gl3w/GL/glcorearb.h	/^typedef uint64_t GLuint64EXT;$/;"	t	typeref:typename:uint64_t
GLushort	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned short GLushort;$/;"	t	typeref:typename:unsigned short
GLushort	lib/gl3w/GL/glcorearb.h	/^typedef unsigned short GLushort;$/;"	t	typeref:typename:unsigned short
GLvdpauSurfaceNV	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GLvdpauSurfaceNV	lib/gl3w/GL/glcorearb.h	/^typedef GLintptr GLvdpauSurfaceNV;$/;"	t	typeref:typename:GLintptr
GLvoid	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void GLvoid;$/;"	t	typeref:typename:void
GLvoid	lib/gl3w/GL/glcorearb.h	/^typedef void GLvoid;$/;"	t	typeref:typename:void
GStyleVarInfo	lib/cimgui/imgui/imgui.cpp	/^static const ImGuiStyleVarInfo GStyleVarInfo[] =$/;"	v	typeref:typename:const ImGuiStyleVarInfo[]	file:
GameViewController	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.h	/^@interface GameViewController : GLKViewController$/;"	i
GameViewController	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^@implementation GameViewController$/;"	I
GameViewController	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^@interface GameViewController () <UIAlertViewDelegate>$/;"	i
GdiFont	lib/nuklear/demo/gdi/nuklear_gdi.h	/^struct GdiFont {$/;"	s
GdiFont	lib/nuklear/demo/gdi/nuklear_gdi.h	/^typedef struct GdiFont GdiFont;$/;"	t	typeref:struct:GdiFont
GdipFont	lib/nuklear/demo/gdip/nuklear_gdip.h	/^struct GdipFont$/;"	s
GdipFont	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GdipFont GdipFont;$/;"	t	typeref:struct:GdipFont
GdiplusStartupInput	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} GdiplusStartupInput;$/;"	t	typeref:struct:__anon66f154fe0b08
GdiplusStartupOutput	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} GdiplusStartupOutput;$/;"	t	typeref:struct:__anon66f154fe0c08
GdiplusVersion	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UINT32 GdiplusVersion;$/;"	m	struct:__anon66f154fe0b08	typeref:typename:UINT32
GetActiveID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetActiveID()$/;"	f	class:ImGui	typeref:typename:ImGuiID
GetBL	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetBL() const                       { return ImVec2(Min.x, Max.y); }  \/\/ Botto/;"	f	struct:ImRect	typeref:typename:ImVec2
GetBR	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetBR() const                       { return Max; }                   \/\/ Botto/;"	f	struct:ImRect	typeref:typename:ImVec2
GetBit	lib/cimgui/imgui/imgui.h	/^        bool           GetBit(int n)        { return (UsedChars[n >> 3] & (1 << (n & 7))) != 0; /;"	f	struct:ImFontAtlas::GlyphRangesBuilder	typeref:typename:bool
GetBool	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiStorage::GetBool(ImGuiID key, bool default_val) const$/;"	f	class:ImGuiStorage	typeref:typename:bool
GetBoolRef	lib/cimgui/imgui/imgui.cpp	/^bool* ImGuiStorage::GetBoolRef(ImGuiID key, bool default_val)$/;"	f	class:ImGuiStorage	typeref:typename:bool *
GetBorderRect	lib/cimgui/imgui/imgui.cpp	/^static ImRect GetBorderRect(ImGuiWindow* window, int border_n, float perp_padding, float thickne/;"	f	typeref:typename:ImRect	file:
GetCenter	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetCenter() const                   { return ImVec2((Min.x + Max.x) * 0.5f, (Min/;"	f	struct:ImRect	typeref:typename:ImVec2
GetCharAdvance	lib/cimgui/imgui/imgui.h	/^    float                       GetCharAdvance(ImWchar c) const     { return ((int)c < IndexAdva/;"	f	struct:ImFont	typeref:typename:float
GetClipRectMax	lib/cimgui/imgui/imgui.h	/^    inline ImVec2   GetClipRectMax() const { const ImVec4& cr = _ClipRectStack.back(); return Im/;"	f	struct:ImDrawList	typeref:typename:ImVec2
GetClipRectMin	lib/cimgui/imgui/imgui.h	/^    inline ImVec2   GetClipRectMin() const { const ImVec4& cr = _ClipRectStack.back(); return Im/;"	f	struct:ImDrawList	typeref:typename:ImVec2
GetClipboardText	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::GetClipboardText()$/;"	f	class:ImGui	typeref:typename:const char *
GetClipboardTextFn	lib/cimgui/cimgui/cimgui.h	/^    CONST char *(*GetClipboardTextFn)(void *user_data);$/;"	m	struct:ImGuiIO	typeref:typename:CONST char * (*)(void * user_data)
GetClipboardTextFn	lib/cimgui/imgui/imgui.h	/^    const char* (*GetClipboardTextFn)(void* user_data);$/;"	m	struct:ImGuiIO	typeref:typename:const char * (*)(void * user_data)
GetClipboardTextFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static const char* GetClipboardTextFn_DefaultImpl(void*)$/;"	f	typeref:typename:const char *	file:
GetColorU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::GetColorU32(ImGuiCol idx, float alpha_mul)  $/;"	f	class:ImGui	typeref:typename:ImU32
GetColorU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::GetColorU32(ImU32 col)$/;"	f	class:ImGui	typeref:typename:ImU32
GetColorU32	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImGui::GetColorU32(const ImVec4& col)$/;"	f	class:ImGui	typeref:typename:ImU32
GetColumnIndex	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetColumnIndex()$/;"	f	class:ImGui	typeref:typename:int
GetColumnOffset	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetColumnOffset(int column_index)$/;"	f	class:ImGui	typeref:typename:float
GetColumnWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetColumnWidth(int column_index)$/;"	f	class:ImGui	typeref:typename:float
GetColumnWidthEx	lib/cimgui/imgui/imgui.cpp	/^static float GetColumnWidthEx(ImGuiColumnsSet* columns, int column_index, bool before_resize = f/;"	f	typeref:typename:float	file:
GetColumnsCount	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetColumnsCount()$/;"	f	class:ImGui	typeref:typename:int
GetColumnsRectHalfWidth	lib/cimgui/imgui/imgui.cpp	/^static inline float GetColumnsRectHalfWidth() { return 4.0f; }$/;"	f	typeref:typename:float	file:
GetContentRegionAvail	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetContentRegionAvail()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetContentRegionAvailWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetContentRegionAvailWidth()$/;"	f	class:ImGui	typeref:typename:float
GetContentRegionMax	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetContentRegionMax()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetCurrentClipRect	lib/cimgui/imgui/imgui_draw.cpp	/^#define GetCurrentClipRect(/;"	d	file:
GetCurrentContext	lib/cimgui/imgui/imgui.cpp	/^ImGuiContext* ImGui::GetCurrentContext()$/;"	f	class:ImGui	typeref:typename:ImGuiContext *
GetCurrentTextureId	lib/cimgui/imgui/imgui_draw.cpp	/^#define GetCurrentTextureId(/;"	d	file:
GetCurrentWindow	lib/cimgui/imgui/imgui_internal.h	/^    inline    ImGuiWindow*  GetCurrentWindow()          { ImGuiContext& g = *GImGui; g.CurrentWi/;"	f	namespace:ImGui	typeref:typename:ImGuiWindow *
GetCurrentWindowRead	lib/cimgui/imgui/imgui_internal.h	/^    inline    ImGuiWindow*  GetCurrentWindowRead()      { ImGuiContext& g = *GImGui; return g.Cu/;"	f	namespace:ImGui	typeref:typename:ImGuiWindow *
GetCursorPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetCursorPos()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetCursorPosX	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetCursorPosX()$/;"	f	class:ImGui	typeref:typename:float
GetCursorPosY	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetCursorPosY()$/;"	f	class:ImGui	typeref:typename:float
GetCursorScreenPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetCursorScreenPos()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetCursorStartPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetCursorStartPos()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetCustomRectByIndex	lib/cimgui/imgui/imgui.h	/^    const CustomRect*   GetCustomRectByIndex(int index) const { if (index < 0) return NULL; retu/;"	f	struct:ImFontAtlas	typeref:typename:const CustomRect *
GetDebugName	lib/cimgui/imgui/imgui.h	/^    const char*                 GetDebugName() const                { return ConfigData ? Config/;"	f	struct:ImFont	typeref:typename:const char *
GetDefaultCompressedFontDataTTFBase85	lib/cimgui/imgui/imgui_draw.cpp	/^static const char* GetDefaultCompressedFontDataTTFBase85()$/;"	f	typeref:typename:const char *	file:
GetDefaultFont	lib/cimgui/imgui/imgui.cpp	/^static ImFont* GetDefaultFont()$/;"	f	typeref:typename:ImFont *	file:
GetDraggedColumnOffset	lib/cimgui/imgui/imgui.cpp	/^static float GetDraggedColumnOffset(ImGuiColumnsSet* columns, int column_index)$/;"	f	typeref:typename:float	file:
GetDrawData	lib/cimgui/imgui/imgui.cpp	/^ImDrawData* ImGui::GetDrawData()$/;"	f	class:ImGui	typeref:typename:ImDrawData *
GetDrawListSharedData	lib/cimgui/imgui/imgui.cpp	/^ImDrawListSharedData* ImGui::GetDrawListSharedData()$/;"	f	class:ImGui	typeref:typename:ImDrawListSharedData *
GetFloat	lib/cimgui/imgui/imgui.cpp	/^float ImGuiStorage::GetFloat(ImGuiID key, float default_val) const$/;"	f	class:ImGuiStorage	typeref:typename:float
GetFloatRef	lib/cimgui/imgui/imgui.cpp	/^float* ImGuiStorage::GetFloatRef(ImGuiID key, float default_val)$/;"	f	class:ImGuiStorage	typeref:typename:float *
GetFont	lib/cimgui/imgui/imgui.cpp	/^ImFont* ImGui::GetFont()$/;"	f	class:ImGui	typeref:typename:ImFont *
GetFontSize	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetFontSize()$/;"	f	class:ImGui	typeref:typename:float
GetFontTexUvWhitePixel	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetFontTexUvWhitePixel()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetFrameCount	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetFrameCount()$/;"	f	class:ImGui	typeref:typename:int
GetFrameHeight	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetFrameHeight()$/;"	f	class:ImGui	typeref:typename:float
GetFrameHeightWithSpacing	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetFrameHeightWithSpacing()$/;"	f	class:ImGui	typeref:typename:float
GetFrontMostModalRootWindow	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* GetFrontMostModalRootWindow()$/;"	f	typeref:typename:ImGuiWindow *	file:
GetGlyphRangesChinese	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesChinese()$/;"	f	class:ImFontAtlas	typeref:typename:const ImWchar *
GetGlyphRangesCyrillic	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesCyrillic()$/;"	f	class:ImFontAtlas	typeref:typename:const ImWchar *
GetGlyphRangesDefault	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*   ImFontAtlas::GetGlyphRangesDefault()$/;"	f	class:ImFontAtlas	typeref:typename:const ImWchar *
GetGlyphRangesJapanese	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesJapanese()$/;"	f	class:ImFontAtlas	typeref:typename:const ImWchar *
GetGlyphRangesKorean	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesKorean()$/;"	f	class:ImFontAtlas	typeref:typename:const ImWchar *
GetGlyphRangesThai	lib/cimgui/imgui/imgui_draw.cpp	/^const ImWchar*  ImFontAtlas::GetGlyphRangesThai()$/;"	f	class:ImFontAtlas	typeref:typename:const ImWchar *
GetHeight	lib/cimgui/imgui/imgui_internal.h	/^    float       GetHeight() const                   { return Max.y - Min.y; }$/;"	f	struct:ImRect	typeref:typename:float
GetHoveredID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetHoveredID()$/;"	f	class:ImGui	typeref:typename:ImGuiID
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetID(const char* str_id)$/;"	f	class:ImGui	typeref:typename:ImGuiID
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetID(const char* str_id_begin, const char* str_id_end)$/;"	f	class:ImGui	typeref:typename:ImGuiID
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGui::GetID(const void* ptr_id)$/;"	f	class:ImGui	typeref:typename:ImGuiID
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetID(const char* str, const char* str_end)$/;"	f	class:ImGuiWindow	typeref:typename:ImGuiID
GetID	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetID(const void* ptr)$/;"	f	class:ImGuiWindow	typeref:typename:ImGuiID
GetIDFromRectangle	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetIDFromRectangle(const ImRect& r_abs)$/;"	f	class:ImGuiWindow	typeref:typename:ImGuiID
GetIDNoKeepAlive	lib/cimgui/imgui/imgui.cpp	/^ImGuiID ImGuiWindow::GetIDNoKeepAlive(const char* str, const char* str_end)$/;"	f	class:ImGuiWindow	typeref:typename:ImGuiID
GetIO	lib/cimgui/imgui/imgui.cpp	/^ImGuiIO& ImGui::GetIO()$/;"	f	class:ImGui	typeref:typename:ImGuiIO &
GetInt	lib/cimgui/imgui/imgui.cpp	/^int ImGuiStorage::GetInt(ImGuiID key, int default_val) const$/;"	f	class:ImGuiStorage	typeref:typename:int
GetIntRef	lib/cimgui/imgui/imgui.cpp	/^int* ImGuiStorage::GetIntRef(ImGuiID key, int default_val)$/;"	f	class:ImGuiStorage	typeref:typename:int *
GetItemRectMax	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetItemRectMax()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetItemRectMin	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetItemRectMin()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetItemRectSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetItemRectSize()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetItemsLineHeightWithSpacing	lib/cimgui/imgui/imgui.h	/^    static inline float GetItemsLineHeightWithSpacing()       { return GetFrameHeightWithSpacing/;"	f	namespace:ImGui	typeref:typename:float
GetKeyIndex	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetKeyIndex(ImGuiKey imgui_key)$/;"	f	class:ImGui	typeref:typename:int
GetKeyPressedAmount	lib/cimgui/imgui/imgui.cpp	/^int ImGui::GetKeyPressedAmount(int key_index, float repeat_delay, float repeat_rate)$/;"	f	class:ImGui	typeref:typename:int
GetMinimumStepAtDecimalPrecision	lib/cimgui/imgui/imgui.cpp	/^static float GetMinimumStepAtDecimalPrecision(int decimal_precision)$/;"	f	typeref:typename:float	file:
GetMouseCursor	lib/cimgui/imgui/imgui.cpp	/^ImGuiMouseCursor ImGui::GetMouseCursor()$/;"	f	class:ImGui	typeref:typename:ImGuiMouseCursor
GetMouseCursorTexData	lib/cimgui/imgui/imgui_draw.cpp	/^bool ImFontAtlas::GetMouseCursorTexData(ImGuiMouseCursor cursor_type, ImVec2* out_offset, ImVec2/;"	f	class:ImFontAtlas	typeref:typename:bool
GetMouseDragDelta	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetMouseDragDelta(int button, float lock_threshold)$/;"	f	class:ImGui	typeref:typename:ImVec2
GetMousePos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetMousePos()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetMousePosOnOpeningCurrentPopup	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetMousePosOnOpeningCurrentPopup()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetNavInputAmount	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetNavInputAmount(ImGuiNavInput n, ImGuiInputReadMode mode)$/;"	f	class:ImGui	typeref:typename:float
GetNavInputAmount2d	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetNavInputAmount2d(ImGuiNavDirSourceFlags dir_sources, ImGuiInputReadMode mode, f/;"	f	class:ImGui	typeref:typename:ImVec2
GetOverlayDrawList	lib/cimgui/imgui/imgui.cpp	/^ImDrawList* ImGui::GetOverlayDrawList()$/;"	f	class:ImGui	typeref:typename:ImDrawList *
GetScrollMaxX	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollMaxX()$/;"	f	class:ImGui	typeref:typename:float
GetScrollMaxX	lib/cimgui/imgui/imgui.cpp	/^static float GetScrollMaxX(ImGuiWindow* window)$/;"	f	typeref:typename:float	file:
GetScrollMaxY	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollMaxY()$/;"	f	class:ImGui	typeref:typename:float
GetScrollMaxY	lib/cimgui/imgui/imgui.cpp	/^static float GetScrollMaxY(ImGuiWindow* window)$/;"	f	typeref:typename:float	file:
GetScrollX	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollX()$/;"	f	class:ImGui	typeref:typename:float
GetScrollY	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetScrollY()$/;"	f	class:ImGui	typeref:typename:float
GetSize	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetSize() const                     { return ImVec2(Max.x - Min.x, Max.y - Min.y/;"	f	struct:ImRect	typeref:typename:ImVec2
GetStateStorage	lib/cimgui/imgui/imgui.cpp	/^ImGuiStorage* ImGui::GetStateStorage()$/;"	f	class:ImGui	typeref:typename:ImGuiStorage *
GetStyle	lib/cimgui/imgui/imgui.cpp	/^ImGuiStyle& ImGui::GetStyle()$/;"	f	class:ImGui	typeref:typename:ImGuiStyle &
GetStyleColorName	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::GetStyleColorName(ImGuiCol idx)$/;"	f	class:ImGui	typeref:typename:const char *
GetStyleColorVec4	lib/cimgui/imgui/imgui.cpp	/^const ImVec4& ImGui::GetStyleColorVec4(ImGuiCol idx)$/;"	f	class:ImGui	typeref:typename:const ImVec4 &
GetStyleVarInfo	lib/cimgui/imgui/imgui.cpp	/^static const ImGuiStyleVarInfo* GetStyleVarInfo(ImGuiStyleVar idx)$/;"	f	typeref:typename:const ImGuiStyleVarInfo *	file:
GetTL	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetTL() const                       { return Min; }                   \/\/ Top-l/;"	f	struct:ImRect	typeref:typename:ImVec2
GetTR	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      GetTR() const                       { return ImVec2(Max.x, Min.y); }  \/\/ Top-r/;"	f	struct:ImRect	typeref:typename:ImVec2
GetTexDataAsAlpha8	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::GetTexDataAsAlpha8(unsigned char** out_pixels, int* out_width, int* out_hei/;"	f	class:ImFontAtlas	typeref:typename:void
GetTexDataAsRGBA32	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlas::GetTexDataAsRGBA32(unsigned char** out_pixels, int* out_width, int* out_hei/;"	f	class:ImFontAtlas	typeref:typename:void
GetTextLineHeight	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetTextLineHeight()$/;"	f	class:ImGui	typeref:typename:float
GetTextLineHeightWithSpacing	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetTextLineHeightWithSpacing()$/;"	f	class:ImGui	typeref:typename:float
GetTime	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetTime()$/;"	f	class:ImGui	typeref:typename:float
GetTreeNodeToLabelSpacing	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetTreeNodeToLabelSpacing()$/;"	f	class:ImGui	typeref:typename:float
GetVarPtr	lib/cimgui/imgui/imgui.cpp	/^    void*           GetVarPtr(ImGuiStyle* style) const { return (void*)((unsigned char*)style + /;"	f	struct:ImGuiStyleVarInfo	typeref:typename:void *	file:
GetVersion	lib/cimgui/imgui/imgui.cpp	/^const char* ImGui::GetVersion()$/;"	f	class:ImGui	typeref:typename:const char *
GetViewportRect	lib/cimgui/imgui/imgui.cpp	/^static ImRect GetViewportRect()$/;"	f	typeref:typename:ImRect	file:
GetVoidPtr	lib/cimgui/imgui/imgui.cpp	/^void* ImGuiStorage::GetVoidPtr(ImGuiID key) const$/;"	f	class:ImGuiStorage	typeref:typename:void *
GetVoidPtrRef	lib/cimgui/imgui/imgui.cpp	/^void** ImGuiStorage::GetVoidPtrRef(ImGuiID key, void* default_val)$/;"	f	class:ImGuiStorage	typeref:typename:void **
GetWidth	lib/cimgui/imgui/imgui_internal.h	/^    float       GetWidth() const                    { return Max.x - Min.x; }$/;"	f	struct:ImRect	typeref:typename:float
GetWindowBgColorIdxFromFlags	lib/cimgui/imgui/imgui.cpp	/^static ImGuiCol GetWindowBgColorIdxFromFlags(ImGuiWindowFlags flags)$/;"	f	typeref:typename:ImGuiCol	file:
GetWindowContentRegionMax	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowContentRegionMax()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetWindowContentRegionMin	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowContentRegionMin()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetWindowContentRegionWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetWindowContentRegionWidth()$/;"	f	class:ImGui	typeref:typename:float
GetWindowDrawList	lib/cimgui/imgui/imgui.cpp	/^ImDrawList* ImGui::GetWindowDrawList()$/;"	f	class:ImGui	typeref:typename:ImDrawList *
GetWindowHeight	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetWindowHeight()$/;"	f	class:ImGui	typeref:typename:float
GetWindowPos	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowPos()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetWindowSize	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImGui::GetWindowSize()$/;"	f	class:ImGui	typeref:typename:ImVec2
GetWindowWidth	lib/cimgui/imgui/imgui.cpp	/^float ImGui::GetWindowWidth()$/;"	f	class:ImGui	typeref:typename:float
Glyph	lib/cimgui/imgui/imgui.h	/^    typedef ImFontGlyph Glyph; \/\/ OBSOLETE 1.52+$/;"	t	struct:ImFont	typeref:typename:ImFontGlyph
GlyphAdvanceX	lib/cimgui/imgui/imgui.h	/^        float           GlyphAdvanceX;  \/\/ Input    \/\/ For custom font glyphs only (ID<0x100/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:float
GlyphExtraSpacing	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 GlyphExtraSpacing;$/;"	m	struct:ImFontConfig	typeref:struct:ImVec2
GlyphExtraSpacing	lib/cimgui/imgui/imgui.h	/^    ImVec2          GlyphExtraSpacing;      \/\/ 0, 0     \/\/ Extra spacing (in pixels) between/;"	m	struct:ImFontConfig	typeref:typename:ImVec2
GlyphInfo	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    struct GlyphInfo $/;"	s	namespace:__anon71f5b57f0110	file:
GlyphOffset	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 GlyphOffset;$/;"	m	struct:ImFontConfig	typeref:struct:ImVec2
GlyphOffset	lib/cimgui/imgui/imgui.h	/^        ImVec2          GlyphOffset;    \/\/ Input    \/\/ For custom font glyphs only (ID<0x100/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:ImVec2
GlyphOffset	lib/cimgui/imgui/imgui.h	/^    ImVec2          GlyphOffset;            \/\/ 0, 0     \/\/ Offset all glyphs from this font /;"	m	struct:ImFontConfig	typeref:typename:ImVec2
GlyphRanges	lib/cimgui/cimgui/cimgui.h	/^    CONST ImWchar *GlyphRanges;$/;"	m	struct:ImFontConfig	typeref:typename:CONST ImWchar *
GlyphRanges	lib/cimgui/imgui/imgui.h	/^    const ImWchar*  GlyphRanges;            \/\/ NULL     \/\/ Pointer to a user-provided list o/;"	m	struct:ImFontConfig	typeref:typename:const ImWchar *
GlyphRangesBuilder	lib/cimgui/imgui/imgui.h	/^        GlyphRangesBuilder()                { UsedChars.resize(0x10000 \/ 8); memset(UsedChars.D/;"	f	struct:ImFontAtlas::GlyphRangesBuilder
GlyphRangesBuilder	lib/cimgui/imgui/imgui.h	/^    struct GlyphRangesBuilder$/;"	s	struct:ImFontAtlas
Glyphs	lib/cimgui/imgui/imgui.h	/^    ImVector<ImFontGlyph>       Glyphs;             \/\/              \/\/ All glyphs.$/;"	m	struct:ImFont	typeref:typename:ImVector<ImFontGlyph>
GpBitmap	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef GpImage GpBitmap;$/;"	t	typeref:typename:GpImage
GpBrush	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpBrush GpBrush;$/;"	t	typeref:struct:GpBrush
GpFont	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpFont GpFont;$/;"	t	typeref:struct:GpFont
GpFontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpFontCollection GpFontCollection;$/;"	t	typeref:struct:GpFontCollection
GpFontFamily	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpFontFamily GpFontFamily;$/;"	t	typeref:struct:GpFontFamily
GpGraphics	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpGraphics GpGraphics;$/;"	t	typeref:struct:GpGraphics
GpImage	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpImage GpImage;$/;"	t	typeref:struct:GpImage
GpPen	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpPen GpPen;$/;"	t	typeref:struct:GpPen
GpPoint	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef POINT GpPoint;$/;"	t	typeref:typename:POINT
GpSolidFill	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef GpBrush GpSolidFill;$/;"	t	typeref:typename:GpBrush
GpStatus	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef Status GpStatus;$/;"	t	typeref:typename:Status
GpStringFormat	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct GpStringFormat GpStringFormat;$/;"	t	typeref:struct:GpStringFormat
GrabMinSize	lib/cimgui/cimgui/cimgui.h	/^    float GrabMinSize;$/;"	m	struct:ImGuiStyle	typeref:typename:float
GrabMinSize	lib/cimgui/imgui/imgui.h	/^    float       GrabMinSize;                \/\/ Minimum width\/height of a grab box for slider\//;"	m	struct:ImGuiStyle	typeref:typename:float
GrabRounding	lib/cimgui/cimgui/cimgui.h	/^    float GrabRounding;$/;"	m	struct:ImGuiStyle	typeref:typename:float
GrabRounding	lib/cimgui/imgui/imgui.h	/^    float       GrabRounding;               \/\/ Radius of grabs corners rounding. Set to 0.0f t/;"	m	struct:ImGuiStyle	typeref:typename:float
GroupOffsetX	lib/cimgui/imgui/imgui_internal.h	/^    float                   GroupOffsetX;$/;"	m	struct:ImGuiDrawContext	typeref:typename:float
GroupStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiGroupData>GroupStack;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVector<ImGuiGroupData>
GrowIndex	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::GrowIndex(int new_size)$/;"	f	class:ImFont	typeref:typename:void
H0	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	typeref:typename:__m128i **	file:
H1	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	typeref:typename:__m128i ***	file:
HARD	lib/nuklear/demo/allegro5/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon09a7c4200103	file:
HARD	lib/nuklear/demo/d3d11/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anondbb16f820103	file:
HARD	lib/nuklear/demo/d3d9/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon3f85d5f90103	file:
HARD	lib/nuklear/demo/gdi/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonabf5b9790103	file:
HARD	lib/nuklear/demo/gdip/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon9e34ae690103	file:
HARD	lib/nuklear/demo/glfw_opengl2/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon3d2da44b0103	file:
HARD	lib/nuklear/demo/glfw_opengl3/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon296f792c0103	file:
HARD	lib/nuklear/demo/glfw_opengl4/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon15b14e0d0203	file:
HARD	lib/nuklear/demo/sdl_opengl2/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon5ca2565e0103	file:
HARD	lib/nuklear/demo/sdl_opengl3/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon48e42b3f0103	file:
HARD	lib/nuklear/demo/sdl_opengles2/main.c	/^        enum {EASY, HARD};$/;"	e	enum:MainLoop::__anon5a3859960103	file:
HARD	lib/nuklear/demo/sfml_opengl2/main.cpp	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonddddee0d0103	file:
HARD	lib/nuklear/demo/sfml_opengl3/main.cpp	/^            enum {EASY, HARD};$/;"	e	enum:main::__anone1e87f2e0103	file:
HARD	lib/nuklear/demo/x11/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon0d78483f0103	file:
HARD	lib/nuklear/demo/x11_opengl2/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonf1693ff50103	file:
HARD	lib/nuklear/demo/x11_opengl3/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anonddab14d60103	file:
HARD	lib/nuklear/demo/x11_rawfb/main.c	/^            enum {EASY, HARD};$/;"	e	enum:main::__anon654a28500103	file:
HASH_LENGTH	lib/klib/kurl.c	/^#define HASH_LENGTH /;"	d	file:
HAVE_MEMMEM	lib/klib/test/kstring_bench2.c	/^#define HAVE_MEMMEM$/;"	d	file:
HAVE_STRNSTR	lib/klib/test/kstring_bench2.c	/^#define HAVE_STRNSTR$/;"	d	file:
HEX	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#define HEX(/;"	d	file:
HEX	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define HEX(/;"	d	file:
HMAC_IPAD	lib/klib/kurl.c	/^#define HMAC_IPAD /;"	d	file:
HMAC_OPAD	lib/klib/kurl.c	/^#define HMAC_OPAD /;"	d	file:
HMM_BACKWARD	lib/klib/khmm.h	/^#define HMM_BACKWARD /;"	d
HMM_FORWARD	lib/klib/khmm.h	/^#define HMM_FORWARD /;"	d
HMM_INF	lib/klib/khmm.h	/^#define HMM_INF /;"	d
HMM_POSTDEC	lib/klib/khmm.h	/^#define HMM_POSTDEC /;"	d
HMM_TINY	lib/klib/khmm.h	/^#define HMM_TINY /;"	d
HMM_VERSION	lib/klib/khmm.h	/^#define HMM_VERSION /;"	d
HMM_VITERBI	lib/klib/khmm.h	/^#define HMM_VITERBI /;"	d
HSV	lib/cimgui/imgui/imgui.h	/^    static ImColor HSV(float h, float s, float v, float a = 1.0f)   { float r,g,b; ImGui::ColorC/;"	f	struct:ImColor	typeref:typename:ImColor
HasSelection	lib/cimgui/imgui/imgui.h	/^    bool              HasSelection() const { return SelectionStart != SelectionEnd; }$/;"	f	struct:ImGuiTextEditCallbackData	typeref:typename:bool
HasSelection	lib/cimgui/imgui/imgui_internal.h	/^    bool                HasSelection() const        { return StbState.select_start != StbState.s/;"	f	struct:ImGuiTextEditState	typeref:typename:bool
Height	lib/cimgui/imgui/imgui.h	/^        unsigned short  Width, Height;  \/\/ Input    \/\/ Desired rectangle dimension$/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:unsigned short
Height	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float Height;		\/\/ Glyph's height in pixels.$/;"	m	struct:__anon71f5b57f0110::GlyphInfo	typeref:typename:float	file:
Height	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT Height;$/;"	m	struct:__anon66f154fe0908	typeref:typename:FLOAT
HiddenFrames	lib/cimgui/imgui/imgui_internal.h	/^    int                     HiddenFrames;$/;"	m	struct:ImGuiWindow	typeref:typename:int
History	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<char*>       History;$/;"	m	struct:ExampleAppConsole	typeref:typename:ImVector<char * >	file:
HistoryPos	lib/cimgui/imgui/imgui_demo.cpp	/^    int                   HistoryPos;    \/\/ -1: new line, 0..History.Size-1 browsing history.$/;"	m	struct:ExampleAppConsole	typeref:typename:int	file:
Hmax	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	typeref:typename:__m128i *****	file:
HoveredId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 HoveredId;                          \/\/ Hovered widget$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
HoveredIdAllowOverlap	lib/cimgui/imgui/imgui_internal.h	/^    bool                    HoveredIdAllowOverlap;$/;"	m	struct:ImGuiContext	typeref:typename:bool
HoveredIdPreviousFrame	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 HoveredIdPreviousFrame;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
HoveredIdTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   HoveredIdTimer;$/;"	m	struct:ImGuiContext	typeref:typename:float
HoveredRootWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            HoveredRootWindow;                  \/\/ Will catch mouse inputs (fo/;"	m	struct:ImGuiContext	typeref:typename:ImGuiWindow *
HoveredWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            HoveredWindow;                      \/\/ Will catch mouse inputs$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiWindow *
IB	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^    ID3D12Resource* IB;$/;"	m	struct:FrameResources	typeref:typename:ID3D12Resource *	file:
ID	lib/cimgui/imgui/imgui.h	/^        unsigned int    ID;             \/\/ Input    \/\/ User ID. Use <0x10000 to map into a f/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:unsigned int
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ID;                                 \/\/ == ImHash(Name)$/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiID
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             ID;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:ImGuiID
ID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID       ID;           \/\/ Best candidate$/;"	m	struct:ImGuiNavMoveResult	typeref:typename:ImGuiID
ID	lib/nuklear/demo/node_editor.c	/^    int ID;$/;"	m	struct:node	typeref:typename:int	file:
ID3D11Device	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^typedef struct ID3D11Device ID3D11Device;$/;"	t	typeref:struct:ID3D11Device
ID3D11DeviceContext	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^typedef struct ID3D11DeviceContext ID3D11DeviceContext;$/;"	t	typeref:struct:ID3D11DeviceContext
IDStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiID>       IDStack;                            \/\/ ID stack. ID are hashes see/;"	m	struct:ImGuiWindow	typeref:typename:ImVector<ImGuiID>
ID_VOID_MAIN	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define ID_VOID_MAIN$/;"	d	file:
IDirect3D9Ex	lib/nuklear/demo/d3d9/main.c	/^        typedef HRESULT WINAPI Direct3DCreate9ExPtr(UINT, IDirect3D9Ex**);$/;"	t	function:create_d3d9_device	typeref:typename:HRESULT WINAPI Direct3DCreate9ExPtr (UINT,**)	file:
IDirect3DDevice9	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^typedef struct IDirect3DDevice9 IDirect3DDevice9;$/;"	t	typeref:struct:IDirect3DDevice9
IMFONTGLYPH	lib/cimgui/cimgui/cimgui.h	/^#define IMFONTGLYPH /;"	d
IMGUI_API	lib/cimgui/imgui/imgui.h	/^#define IMGUI_API$/;"	d
IMGUI_CDECL	lib/cimgui/imgui/imgui.cpp	/^#define IMGUI_CDECL /;"	d	file:
IMGUI_CDECL	lib/cimgui/imgui/imgui.cpp	/^#define IMGUI_CDECL$/;"	d	file:
IMGUI_DEBUG_NAV_RECTS	lib/cimgui/imgui/imgui.cpp	/^#define IMGUI_DEBUG_NAV_RECTS /;"	d	file:
IMGUI_DEBUG_NAV_SCORING	lib/cimgui/imgui/imgui.cpp	/^#define IMGUI_DEBUG_NAV_SCORING /;"	d	file:
IMGUI_DEFINE_MATH_OPERATORS	lib/cimgui/imgui/imgui.cpp	/^#define IMGUI_DEFINE_MATH_OPERATORS$/;"	d	file:
IMGUI_DEFINE_MATH_OPERATORS	lib/cimgui/imgui/imgui_draw.cpp	/^#define IMGUI_DEFINE_MATH_OPERATORS$/;"	d	file:
IMGUI_DEFINE_PLACEMENT_NEW	lib/cimgui/cimgui/cimgui.cpp	/^#define IMGUI_DEFINE_PLACEMENT_NEW$/;"	d	file:
IMGUI_DISABLE_DEMO_WINDOWS	lib/cimgui/imgui/imgui_demo.cpp	/^#define IMGUI_DISABLE_DEMO_WINDOWS$/;"	d	file:
IMGUI_MAX_POSSIBLE_BACK_BUFFERS	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^#define IMGUI_MAX_POSSIBLE_BACK_BUFFERS /;"	d	file:
IMGUI_ONCE_UPON_A_FRAME	lib/cimgui/imgui/imgui.h	/^#define IMGUI_ONCE_UPON_A_FRAME /;"	d
IMGUI_PAYLOAD_TYPE_COLOR_3F	lib/cimgui/imgui/imgui.h	/^#define IMGUI_PAYLOAD_TYPE_COLOR_3F /;"	d
IMGUI_PAYLOAD_TYPE_COLOR_4F	lib/cimgui/imgui/imgui.h	/^#define IMGUI_PAYLOAD_TYPE_COLOR_4F /;"	d
IMGUI_STB_NAMESPACE	lib/cimgui/imgui/imgui_draw.cpp	/^namespace IMGUI_STB_NAMESPACE$/;"	n	file:
IMGUI_VERSION	lib/cimgui/imgui/imgui.h	/^#define IMGUI_VERSION /;"	d
IMGUI_VK_QUEUED_FRAMES	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^#define IMGUI_VK_QUEUED_FRAMES /;"	d
IMGUI_VULKAN_DEBUG_REPORT	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^#define IMGUI_VULKAN_DEBUG_REPORT$/;"	d	file:
IM_ARRAYSIZE	lib/cimgui/imgui/imgui.h	/^#define IM_ARRAYSIZE(/;"	d
IM_ASSERT	lib/cimgui/imgui/imgui.h	/^#define IM_ASSERT(/;"	d
IM_COL32	lib/cimgui/imgui/imgui.h	/^#define IM_COL32(/;"	d
IM_COL32_A_MASK	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_A_MASK /;"	d
IM_COL32_A_SHIFT	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_A_SHIFT /;"	d
IM_COL32_BLACK	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_BLACK /;"	d
IM_COL32_BLACK_TRANS	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_BLACK_TRANS /;"	d
IM_COL32_B_SHIFT	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_B_SHIFT /;"	d
IM_COL32_G_SHIFT	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_G_SHIFT /;"	d
IM_COL32_R_SHIFT	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_R_SHIFT /;"	d
IM_COL32_WHITE	lib/cimgui/imgui/imgui.h	/^#define IM_COL32_WHITE /;"	d
IM_DELETE	lib/cimgui/imgui/imgui.h	/^template<typename T> void IM_DELETE(T*& p)  { if (p) { p->~T(); ImGui::MemFree(p); p = NULL; } }$/;"	f	typeref:typename:void
IM_F32_TO_INT8_SAT	lib/cimgui/imgui/imgui.cpp	/^#define IM_F32_TO_INT8_SAT(/;"	d	file:
IM_F32_TO_INT8_UNBOUND	lib/cimgui/imgui/imgui.cpp	/^#define IM_F32_TO_INT8_UNBOUND(/;"	d	file:
IM_FMTARGS	lib/cimgui/imgui/imgui.h	/^#define IM_FMTARGS(/;"	d
IM_FMTLIST	lib/cimgui/imgui/imgui.h	/^#define IM_FMTLIST(/;"	d
IM_MAX	lib/cimgui/imgui/imgui_demo.cpp	/^#define IM_MAX(/;"	d	file:
IM_NEW	lib/cimgui/imgui/imgui.h	/^#define IM_NEW(/;"	d
IM_NEWLINE	lib/cimgui/imgui/imgui_demo.cpp	/^#define IM_NEWLINE /;"	d	file:
IM_NEWLINE	lib/cimgui/imgui/imgui_internal.h	/^#define IM_NEWLINE /;"	d
IM_OFFSETOF	lib/cimgui/imgui/imgui.h	/^#define IM_OFFSETOF(/;"	d
IM_PI	lib/cimgui/imgui/imgui_internal.h	/^#define IM_PI /;"	d
IM_PLACEMENT_NEW	lib/cimgui/imgui/imgui.h	/^#define IM_PLACEMENT_NEW(/;"	d
INCLUDE_CALCULATOR	lib/nuklear/demo/d3d11/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/d3d9/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/gdi/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/gdip/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/glfw_opengl2/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/glfw_opengl3/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/glfw_opengl4/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sdl_opengl2/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sdl_opengl3/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sfml_opengl2/main.cpp	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/sfml_opengl3/main.cpp	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11_opengl2/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11_opengl3/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_CALCULATOR	lib/nuklear/demo/x11_rawfb/main.c	/^  #define INCLUDE_CALCULATOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/d3d11/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/d3d9/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/gdi/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/gdip/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/glfw_opengl2/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/glfw_opengl3/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/glfw_opengl4/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sdl_opengl2/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sdl_opengl3/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sfml_opengl2/main.cpp	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/sfml_opengl3/main.cpp	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11_opengl2/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11_opengl3/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_NODE_EDITOR	lib/nuklear/demo/x11_rawfb/main.c	/^  #define INCLUDE_NODE_EDITOR$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/d3d11/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/d3d9/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/gdi/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/gdip/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl2/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl3/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/glfw_opengl4/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sdl_opengl2/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sdl_opengl3/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sfml_opengl2/main.cpp	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/sfml_opengl3/main.cpp	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11_opengl2/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11_opengl3/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_OVERVIEW	lib/nuklear/demo/x11_rawfb/main.c	/^  #define INCLUDE_OVERVIEW$/;"	d	file:
INCLUDE_STB_TEXTEDIT_H	lib/cimgui/imgui/stb_textedit.h	/^#define INCLUDE_STB_TEXTEDIT_H$/;"	d
INCLUDE_STYLE	lib/nuklear/demo/d3d11/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/d3d9/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/gdi/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/gdip/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/glfw_opengl2/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/glfw_opengl3/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/glfw_opengl4/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sdl_opengl2/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sdl_opengl3/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sfml_opengl2/main.cpp	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/sfml_opengl3/main.cpp	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11_opengl2/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11_opengl3/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
INCLUDE_STYLE	lib/nuklear/demo/x11_rawfb/main.c	/^  #define INCLUDE_STYLE$/;"	d	file:
IO	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiIO                 IO;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiIO
Id	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             Id;                         \/\/ widget id owning the text state$/;"	m	struct:ImGuiTextEditState	typeref:typename:ImGuiID
Id	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID     Id;$/;"	m	struct:ImGuiWindowSettings	typeref:typename:ImGuiID
IdxBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawIdx>     IdxBuffer;          \/\/ Index buffer. Each command consume ImDrawCm/;"	m	struct:ImDrawList	typeref:typename:ImVector<ImDrawIdx>
IdxBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawIdx>     IdxBuffer;$/;"	m	struct:ImDrawChannel	typeref:typename:ImVector<ImDrawIdx>
ImAcos01	lib/cimgui/imgui/imgui_draw.cpp	/^static inline float ImAcos01(float x)$/;"	f	typeref:typename:float	file:
ImAlphaBlendColor	lib/cimgui/imgui/imgui.cpp	/^static inline ImU32 ImAlphaBlendColor(ImU32 col_a, ImU32 col_b)$/;"	f	typeref:typename:ImU32	file:
ImAtoi	lib/cimgui/imgui/imgui.cpp	/^static const char* ImAtoi(const char* src, int* output)$/;"	f	typeref:typename:const char *	file:
ImCharIsSpace	lib/cimgui/imgui/imgui_internal.h	/^static inline bool      ImCharIsSpace(unsigned int c)   { return c == ' ' || c == '\\t' || c == /;"	f	typeref:typename:bool
ImClamp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImClamp(const ImVec2& f, const ImVec2& mn, ImVec2 mx)      { return ImVec2(/;"	f	typeref:typename:ImVec2
ImClamp	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImClamp(float v, float mn, float mx)                       { return (v < mn/;"	f	typeref:typename:float
ImClamp	lib/cimgui/imgui/imgui_internal.h	/^static inline int    ImClamp(int v, int mn, int mx)                             { return (v < mn/;"	f	typeref:typename:int
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor()                                                       { Value.x = Value.y = Value./;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(ImU32 rgba)                                             { float sc = 1.0f\/255.0f; V/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(const ImVec4& col)                                      { Value = col; }$/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(float r, float g, float b, float a = 1.0f)              { Value.x = r; Value.y = g; /;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^    ImColor(int r, int g, int b, int a = 255)                       { float sc = 1.0f\/255.0f; V/;"	f	struct:ImColor
ImColor	lib/cimgui/imgui/imgui.h	/^struct ImColor$/;"	s
ImDot	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImDot(const ImVec2& a, const ImVec2& b)                    { return a.x * b/;"	f	typeref:typename:float
ImDrawCallback	lib/cimgui/cimgui/cimgui.h	/^typedef void (*ImDrawCallback)(CONST struct ImDrawList *parent_list, CONST struct ImDrawCmd *cmd/;"	t	typeref:typename:void (*)(CONST struct ImDrawList * parent_list,CONST struct ImDrawCmd * cmd)
ImDrawCallback	lib/cimgui/imgui/imgui.h	/^typedef void (*ImDrawCallback)(const ImDrawList* parent_list, const ImDrawCmd* cmd);$/;"	t	typeref:typename:void (*)(const ImDrawList * parent_list,const ImDrawCmd * cmd)
ImDrawChannel	lib/cimgui/imgui/imgui.h	/^struct ImDrawChannel$/;"	s
ImDrawCmd	lib/cimgui/cimgui/cimgui.h	/^struct ImDrawCmd$/;"	s
ImDrawCmd	lib/cimgui/imgui/imgui.h	/^    ImDrawCmd() { ElemCount = 0; ClipRect.x = ClipRect.y = ClipRect.z = ClipRect.w = 0.0f; Textu/;"	f	struct:ImDrawCmd
ImDrawCmd	lib/cimgui/imgui/imgui.h	/^struct ImDrawCmd$/;"	s
ImDrawCornerFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImDrawCornerFlags;$/;"	t	typeref:typename:int
ImDrawCornerFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImDrawCornerFlags;      \/\/ flags: for ImDrawList::AddRect*() etc.   \/\/ enum ImDr/;"	t	typeref:typename:int
ImDrawCornerFlags_	lib/cimgui/cimgui/cimgui.h	/^enum ImDrawCornerFlags_$/;"	g
ImDrawCornerFlags_	lib/cimgui/imgui/imgui.h	/^enum ImDrawCornerFlags_$/;"	g
ImDrawCornerFlags_All	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_All = 0xF$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_All	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_All       = 0xF     \/\/ In your function calls you may use ~0 (= all bits/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Bot	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_Bot = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Bot	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Bot       = ImDrawCornerFlags_BotLeft | ImDrawCornerFlags_BotRight,   \/\//;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_BotLeft	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_BotLeft = 1 << 2,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_BotLeft	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_BotLeft   = 1 << 2, \/\/ 0x4$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_BotRight	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_BotRight = 1 << 3,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_BotRight	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_BotRight  = 1 << 3, \/\/ 0x8$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Left	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_Left = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Left	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Left      = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_BotLeft,    \/\//;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Right	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_Right = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRight,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Right	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Right     = ImDrawCornerFlags_TopRight | ImDrawCornerFlags_BotRight,  \/\//;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Top	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_Top = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_Top	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_Top       = ImDrawCornerFlags_TopLeft | ImDrawCornerFlags_TopRight,   \/\//;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_TopLeft	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_TopLeft = 1 << 0,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_TopLeft	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_TopLeft   = 1 << 0, \/\/ 0x1$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_TopRight	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCornerFlags_TopRight = 1 << 1,$/;"	e	enum:ImDrawCornerFlags_
ImDrawCornerFlags_TopRight	lib/cimgui/imgui/imgui.h	/^    ImDrawCornerFlags_TopRight  = 1 << 1, \/\/ 0x2$/;"	e	enum:ImDrawCornerFlags_
ImDrawData	lib/cimgui/cimgui/cimgui.h	/^struct ImDrawData$/;"	s
ImDrawData	lib/cimgui/imgui/imgui.h	/^    ImDrawData()    { Valid = false; Clear(); }$/;"	f	struct:ImDrawData
ImDrawData	lib/cimgui/imgui/imgui.h	/^struct ImDrawData$/;"	s
ImDrawDataBuilder	lib/cimgui/imgui/imgui_internal.h	/^struct ImDrawDataBuilder$/;"	s
ImDrawData_DeIndexAllBuffers	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawData_DeIndexAllBuffers(ImDrawData *drawData)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawData_ScaleClipRects	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawData_ScaleClipRects(ImDrawData *drawData, const struct ImVec2 sc)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawIdx	lib/cimgui/cimgui/cimgui.h	/^typedef unsigned short ImDrawIdx;$/;"	t	typeref:typename:unsigned short
ImDrawIdx	lib/cimgui/imgui/imgui.h	/^typedef unsigned short ImDrawIdx;$/;"	t	typeref:typename:unsigned short
ImDrawList	lib/cimgui/imgui/imgui.h	/^    ImDrawList(const ImDrawListSharedData* shared_data) { _Data = shared_data; _OwnerName = NULL/;"	f	struct:ImDrawList
ImDrawList	lib/cimgui/imgui/imgui.h	/^struct ImDrawList$/;"	s
ImDrawListFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImDrawListFlags;$/;"	t	typeref:typename:int
ImDrawListFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImDrawListFlags;        \/\/ flags: for ImDrawList                    \/\/ enum ImDr/;"	t	typeref:typename:int
ImDrawListFlags_	lib/cimgui/cimgui/cimgui.h	/^enum ImDrawListFlags_$/;"	g
ImDrawListFlags_	lib/cimgui/imgui/imgui.h	/^enum ImDrawListFlags_$/;"	g
ImDrawListFlags_AntiAliasedFill	lib/cimgui/cimgui/cimgui.h	/^    ImDrawListFlags_AntiAliasedFill = 1 << 1$/;"	e	enum:ImDrawListFlags_
ImDrawListFlags_AntiAliasedFill	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags_AntiAliasedFill  = 1 << 1$/;"	e	enum:ImDrawListFlags_
ImDrawListFlags_AntiAliasedLines	lib/cimgui/cimgui/cimgui.h	/^    ImDrawListFlags_AntiAliasedLines = 1 << 0,$/;"	e	enum:ImDrawListFlags_
ImDrawListFlags_AntiAliasedLines	lib/cimgui/imgui/imgui.h	/^    ImDrawListFlags_AntiAliasedLines = 1 << 0,$/;"	e	enum:ImDrawListFlags_
ImDrawListSharedData	lib/cimgui/imgui/imgui_draw.cpp	/^ImDrawListSharedData::ImDrawListSharedData()$/;"	f	class:ImDrawListSharedData
ImDrawListSharedData	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImDrawListSharedData$/;"	s
ImDrawList_AddBezierCurve	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddBezierCurve(ImDrawList *list, CONST struct ImVec2 pos0, CONST stru/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddCallback	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddCallback(ImDrawList *list, ImDrawCallback callback, void *callback/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddCircle	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddCircle(ImDrawList *list, CONST struct ImVec2 centre, float radius,/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddCircleFilled	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddCircleFilled(ImDrawList *list, CONST struct ImVec2 centre, float r/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddConvexPolyFilled	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddConvexPolyFilled(ImDrawList *list, CONST ImVec2 *points, CONST int/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddDrawCmd	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddDrawCmd(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddImage	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddImage(ImDrawList *list, ImTextureID user_texture_id, CONST struct /;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddImageQuad	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddImageQuad(struct ImDrawList *list, ImTextureID user_texture_id, CO/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddImageRounded	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddImageRounded(struct ImDrawList *list, ImTextureID user_texture_id,/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddLine	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddLine(ImDrawList *list, CONST struct ImVec2 a, CONST struct ImVec2 /;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddPolyline	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddPolyline(ImDrawList *list, CONST ImVec2 *points, CONST int num_poi/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddQuad	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddQuad(ImDrawList *list, CONST struct ImVec2 a, CONST struct ImVec2 /;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddQuadFilled	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddQuadFilled(ImDrawList *list, CONST struct ImVec2 a, CONST struct I/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddRect	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddRect(ImDrawList *list, CONST struct ImVec2 a, CONST struct ImVec2 /;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddRectFilled	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddRectFilled(ImDrawList *list, CONST struct ImVec2 a, CONST struct I/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddRectFilledMultiColor	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddRectFilledMultiColor(ImDrawList *list, CONST struct ImVec2 a, CONS/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddText	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddText(ImDrawList *list, CONST struct ImVec2 pos, ImU32 col, CONST c/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddTextExt	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddTextExt(ImDrawList *list, CONST ImFont *font, float font_size, CON/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddTriangle	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddTriangle(ImDrawList *list, CONST struct ImVec2 a, CONST struct ImV/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_AddTriangleFilled	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_AddTriangleFilled(ImDrawList *list, CONST struct ImVec2 a, CONST stru/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_ChannelsMerge	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_ChannelsMerge(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_ChannelsSetCurrent	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_ChannelsSetCurrent(ImDrawList *list, int channel_index)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_ChannelsSplit	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_ChannelsSplit(ImDrawList *list, int channels_count)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_Clear	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_Clear(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_ClearFreeMemory	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_ClearFreeMemory(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_GetClipRectMax	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_GetClipRectMax(ImVec2 *pOut, ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_GetClipRectMin	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_GetClipRectMin(ImVec2 *pOut, ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_GetCmdPtr	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API ImDrawCmd *ImDrawList_GetCmdPtr(ImDrawList *list, int n)$/;"	f	typeref:typename:CIMGUI_API ImDrawCmd *
ImDrawList_GetCmdSize	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API int ImDrawList_GetCmdSize(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API int
ImDrawList_GetIndexBufferSize	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API int ImDrawList_GetIndexBufferSize(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API int
ImDrawList_GetIndexPtr	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API ImDrawIdx *ImDrawList_GetIndexPtr(ImDrawList *list, int n)$/;"	f	typeref:typename:CIMGUI_API ImDrawIdx *
ImDrawList_GetVertexBufferSize	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API int ImDrawList_GetVertexBufferSize(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API int
ImDrawList_GetVertexPtr	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API ImDrawVert *ImDrawList_GetVertexPtr(ImDrawList *list, int n)$/;"	f	typeref:typename:CIMGUI_API ImDrawVert *
ImDrawList_PathArcTo	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathArcTo(ImDrawList *list, CONST struct ImVec2 centre, float radius,/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathArcToFast	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathArcToFast(ImDrawList *list, CONST struct ImVec2 centre, float rad/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathBezierCurveTo	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathBezierCurveTo(ImDrawList *list, CONST struct ImVec2 p1, CONST str/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathClear	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathClear(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathFillConvex	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathFillConvex(ImDrawList *list, ImU32 col)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathLineTo	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathLineTo(ImDrawList *list, CONST struct ImVec2 pos)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathLineToMergeDuplicate	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathLineToMergeDuplicate(ImDrawList *list, CONST struct ImVec2 pos)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathRect	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathRect(ImDrawList *list, CONST struct ImVec2 rect_min, CONST struct/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PathStroke	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PathStroke(ImDrawList *list, ImU32 col, bool closed, float thickness)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PopClipRect	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PopClipRect(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PopTextureID	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PopTextureID(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PrimQuadUV	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PrimQuadUV(ImDrawList *list, CONST struct ImVec2 a, CONST struct ImVe/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PrimRect	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PrimRect(ImDrawList *list, CONST struct ImVec2 a, CONST struct ImVec2/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PrimRectUV	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PrimRectUV(ImDrawList *list, CONST struct ImVec2 a, CONST struct ImVe/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PrimReserve	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PrimReserve(ImDrawList *list, int idx_count, int vtx_count)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PrimVtx	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PrimVtx(ImDrawList *list, CONST struct ImVec2 pos, CONST struct ImVec/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PrimWriteIdx	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PrimWriteIdx(ImDrawList *list, ImDrawIdx idx)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PrimWriteVtx	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PrimWriteVtx(ImDrawList *list, CONST struct ImVec2 pos, CONST struct /;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PushClipRect	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PushClipRect(ImDrawList *list, struct ImVec2 clip_rect_min, struct Im/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PushClipRectFullScreen	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PushClipRectFullScreen(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_PushTextureID	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_PushTextureID(ImDrawList *list, CONST ImTextureID texture_id)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_UpdateClipRect	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_UpdateClipRect(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawList_UpdateTextureID	lib/cimgui/cimgui/drawList.cpp	/^CIMGUI_API void ImDrawList_UpdateTextureID(ImDrawList *list)$/;"	f	typeref:typename:CIMGUI_API void
ImDrawVert	lib/cimgui/cimgui/cimgui.h	/^struct ImDrawVert$/;"	s
ImDrawVert	lib/cimgui/imgui/imgui.h	/^struct ImDrawVert$/;"	s
ImDrawVertAllegro	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^struct ImDrawVertAllegro$/;"	s	file:
ImFileLoadToMemory	lib/cimgui/imgui/imgui.cpp	/^void* ImFileLoadToMemory(const char* filename, const char* file_open_mode, int* out_file_size, i/;"	f	typeref:typename:void *
ImFileOpen	lib/cimgui/imgui/imgui.cpp	/^FILE* ImFileOpen(const char* filename, const char* mode)$/;"	f	typeref:typename:FILE *
ImFloor	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImFloor(const ImVec2& v)                                   { return ImVec2(/;"	f	typeref:typename:ImVec2
ImFloor	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImFloor(float f)                                           { return (float)/;"	f	typeref:typename:float
ImFont	lib/cimgui/imgui/imgui.h	/^struct ImFont$/;"	s
ImFont	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont::ImFont()$/;"	f	class:ImFont
ImFontAtlas	lib/cimgui/imgui/imgui.h	/^struct ImFontAtlas$/;"	s
ImFontAtlas	lib/cimgui/imgui/imgui_draw.cpp	/^ImFontAtlas::ImFontAtlas()$/;"	f	class:ImFontAtlas
ImFontAtlasBuildFinish	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildFinish(ImFontAtlas* atlas)$/;"	f	typeref:typename:void
ImFontAtlasBuildMultiplyCalcLookupTable	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlasBuildMultiplyCalcLookupTable(unsigned char out_table[256], float in_brighten_/;"	f	typeref:typename:void
ImFontAtlasBuildMultiplyRectAlpha8	lib/cimgui/imgui/imgui_draw.cpp	/^void    ImFontAtlasBuildMultiplyRectAlpha8(const unsigned char table[256], unsigned char* pixels/;"	f	typeref:typename:void
ImFontAtlasBuildPackCustomRects	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildPackCustomRects(ImFontAtlas* atlas, void* pack_context_opaque)$/;"	f	typeref:typename:void
ImFontAtlasBuildRegisterDefaultCustomRects	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildRegisterDefaultCustomRects(ImFontAtlas* atlas)$/;"	f	typeref:typename:void
ImFontAtlasBuildRenderDefaultTexData	lib/cimgui/imgui/imgui_draw.cpp	/^static void ImFontAtlasBuildRenderDefaultTexData(ImFontAtlas* atlas)$/;"	f	typeref:typename:void	file:
ImFontAtlasBuildSetupFont	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFontAtlasBuildSetupFont(ImFontAtlas* atlas, ImFont* font, ImFontConfig* font_config, floa/;"	f	typeref:typename:void
ImFontAtlasBuildWithStbTruetype	lib/cimgui/imgui/imgui_draw.cpp	/^bool    ImFontAtlasBuildWithStbTruetype(ImFontAtlas* atlas)$/;"	f	typeref:typename:bool
ImFontAtlasFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImFontAtlasFlags;       \/\/ flags: for ImFontAtlas                   \/\/ enum ImFo/;"	t	typeref:typename:int
ImFontAtlasFlags_	lib/cimgui/imgui/imgui.h	/^enum ImFontAtlasFlags_$/;"	g
ImFontAtlasFlags_NoMouseCursors	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasFlags_NoMouseCursors     = 1 << 1    \/\/ Don't build software mouse cursors into/;"	e	enum:ImFontAtlasFlags_
ImFontAtlasFlags_NoPowerOfTwoHeight	lib/cimgui/imgui/imgui.h	/^    ImFontAtlasFlags_NoPowerOfTwoHeight = 1 << 0,   \/\/ Don't round the height to next power of/;"	e	enum:ImFontAtlasFlags_
ImFontAtlas_AddFont	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImFont *ImFontAtlas_AddFont(ImFontAtlas *atlas, CONST ImFontConfig *font_cfg)$/;"	f	typeref:typename:CIMGUI_API ImFont *
ImFontAtlas_AddFontDefault	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImFont *ImFontAtlas_AddFontDefault(ImFontAtlas *atlas, CONST ImFontConfig *font_cfg)$/;"	f	typeref:typename:CIMGUI_API ImFont *
ImFontAtlas_AddFontFromFileTTF	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImFont *ImFontAtlas_AddFontFromFileTTF(ImFontAtlas *atlas, CONST char *filename, floa/;"	f	typeref:typename:CIMGUI_API ImFont *
ImFontAtlas_AddFontFromMemoryCompressedBase85TTF	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImFont *ImFontAtlas_AddFontFromMemoryCompressedBase85TTF(ImFontAtlas *atlas, CONST ch/;"	f	typeref:typename:CIMGUI_API ImFont *
ImFontAtlas_AddFontFromMemoryCompressedTTF	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImFont *ImFontAtlas_AddFontFromMemoryCompressedTTF(ImFontAtlas *atlas, CONST void *co/;"	f	typeref:typename:CIMGUI_API ImFont *
ImFontAtlas_AddFontFromMemoryTTF	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImFont *ImFontAtlas_AddFontFromMemoryTTF(ImFontAtlas *atlas, void *font_data, int fon/;"	f	typeref:typename:CIMGUI_API ImFont *
ImFontAtlas_Clear	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_Clear(ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_ClearFonts	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_ClearFonts(ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_ClearInputData	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_ClearInputData(ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_ClearTexData	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_ClearTexData(ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_Fonts_index	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImFont *ImFontAtlas_Fonts_index(struct ImFontAtlas *atlas, int index)$/;"	f	typeref:typename:CIMGUI_API ImFont *
ImFontAtlas_Fonts_size	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFontAtlas_Fonts_size(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API int
ImFontAtlas_GetGlyphRangesChinese	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST ImWchar *ImFontAtlas_GetGlyphRangesChinese(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API CONST ImWchar *
ImFontAtlas_GetGlyphRangesCyrillic	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST ImWchar *ImFontAtlas_GetGlyphRangesCyrillic(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API CONST ImWchar *
ImFontAtlas_GetGlyphRangesDefault	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST ImWchar *ImFontAtlas_GetGlyphRangesDefault(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API CONST ImWchar *
ImFontAtlas_GetGlyphRangesJapanese	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST ImWchar *ImFontAtlas_GetGlyphRangesJapanese(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API CONST ImWchar *
ImFontAtlas_GetGlyphRangesKorean	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST ImWchar *ImFontAtlas_GetGlyphRangesKorean(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API CONST ImWchar *
ImFontAtlas_GetGlyphRangesThai	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST ImWchar *ImFontAtlas_GetGlyphRangesThai(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API CONST ImWchar *
ImFontAtlas_GetTexDataAsAlpha8	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_GetTexDataAsAlpha8(ImFontAtlas *atlas, unsigned char **out_pixels, i/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_GetTexDataAsRGBA32	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_GetTexDataAsRGBA32(ImFontAtlas *atlas, unsigned char **out_pixels, i/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_GetTexDesiredWidth	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFontAtlas_GetTexDesiredWidth(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API int
ImFontAtlas_GetTexGlyphPadding	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFontAtlas_GetTexGlyphPadding(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API int
ImFontAtlas_GetTexHeight	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFontAtlas_GetTexHeight(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API int
ImFontAtlas_GetTexID	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImTextureID ImFontAtlas_GetTexID(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API ImTextureID
ImFontAtlas_GetTexPixelsAlpha8	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API unsigned char *ImFontAtlas_GetTexPixelsAlpha8(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API unsigned char *
ImFontAtlas_GetTexPixelsRGBA32	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API unsigned int *ImFontAtlas_GetTexPixelsRGBA32(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API unsigned int *
ImFontAtlas_GetTexUvWhitePixel	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_GetTexUvWhitePixel(struct ImFontAtlas *atlas, ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_GetTexWidth	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFontAtlas_GetTexWidth(struct ImFontAtlas *atlas)$/;"	f	typeref:typename:CIMGUI_API int
ImFontAtlas_SetTexDesiredWidth	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_SetTexDesiredWidth(struct ImFontAtlas *atlas, int TexDesiredWidth_)$/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_SetTexGlyphPadding	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_SetTexGlyphPadding(struct ImFontAtlas *atlas, int TexGlyphPadding_)$/;"	f	typeref:typename:CIMGUI_API void
ImFontAtlas_SetTexID	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontAtlas_SetTexID(ImFontAtlas *atlas, ImTextureID id)$/;"	f	typeref:typename:CIMGUI_API void
ImFontConfig	lib/cimgui/cimgui/cimgui.h	/^struct ImFontConfig$/;"	s
ImFontConfig	lib/cimgui/imgui/imgui.h	/^struct ImFontConfig$/;"	s
ImFontConfig	lib/cimgui/imgui/imgui_draw.cpp	/^ImFontConfig::ImFontConfig()$/;"	f	class:ImFontConfig
ImFontConfig_DefaultConstructor	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFontConfig_DefaultConstructor(ImFontConfig *config)$/;"	f	typeref:typename:CIMGUI_API void
ImFontGlyph	lib/cimgui/imgui/imgui.h	/^struct ImFontGlyph$/;"	s
ImFontTempBuildData	lib/cimgui/imgui/imgui_draw.cpp	/^    struct ImFontTempBuildData$/;"	s	function:ImFontAtlasBuildWithStbTruetype	file:
ImFont_BuildLookupTable	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_BuildLookupTable(struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API void
ImFont_CalcTextSizeA	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_CalcTextSizeA(CONST struct ImFont *font, ImVec2 *pOut, float size, float /;"	f	typeref:typename:CIMGUI_API void
ImFont_CalcWordWrapPositionA	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST char *ImFont_CalcWordWrapPositionA(CONST struct ImFont *font, float scale, CONS/;"	f	typeref:typename:CIMGUI_API CONST char *
ImFont_ClearOutputData	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_ClearOutputData(struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API void
ImFont_FindGlyph	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST struct IMFONTGLYPH *ImFont_FindGlyph(CONST struct ImFont *font, ImWchar c)$/;"	f	typeref:typename:CIMGUI_API CONST struct IMFONTGLYPH *
ImFont_GetAscent	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API float ImFont_GetAscent(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API float
ImFont_GetCharAdvance	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API float ImFont_GetCharAdvance(CONST struct ImFont *font, ImWchar c)$/;"	f	typeref:typename:CIMGUI_API float
ImFont_GetConfigData	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API struct ImFontConfig *ImFont_GetConfigData(struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API struct ImFontConfig *
ImFont_GetConfigDataCount	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API short ImFont_GetConfigDataCount(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API short
ImFont_GetContainerAtlas	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API struct ImFontAtlas *ImFont_GetContainerAtlas(struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API struct ImFontAtlas *
ImFont_GetDebugName	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST char *ImFont_GetDebugName(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API CONST char *
ImFont_GetDescent	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API float ImFont_GetDescent(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API float
ImFont_GetDisplayOffset	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_GetDisplayOffset(CONST struct ImFont *font, ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
ImFont_GetFallbackAdvanceX	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API float ImFont_GetFallbackAdvanceX(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API float
ImFont_GetFallbackChar	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API ImWchar ImFont_GetFallbackChar(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API ImWchar
ImFont_GetFallbackGlyph	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API CONST struct IMFONTGLYPH *ImFont_GetFallbackGlyph(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API CONST struct IMFONTGLYPH *
ImFont_GetFontSize	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API float ImFont_GetFontSize(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API float
ImFont_GetMetricsTotalSurface	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFont_GetMetricsTotalSurface(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API int
ImFont_GetScale	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API float ImFont_GetScale(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API float
ImFont_Glyphs_index	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API struct IMFONTGLYPH *ImFont_Glyphs_index(struct ImFont *font, int index)$/;"	f	typeref:typename:CIMGUI_API struct IMFONTGLYPH *
ImFont_Glyphs_size	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFont_Glyphs_size(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API int
ImFont_IndexLookup_index	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API unsigned short ImFont_IndexLookup_index(CONST struct ImFont *font, int index)$/;"	f	typeref:typename:CIMGUI_API unsigned short
ImFont_IndexLookup_size	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFont_IndexLookup_size(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API int
ImFont_IndexXAdvance_index	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API float ImFont_IndexXAdvance_index(CONST struct ImFont *font, int index)$/;"	f	typeref:typename:CIMGUI_API float
ImFont_IndexXAdvance_size	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API int ImFont_IndexXAdvance_size(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API int
ImFont_IsLoaded	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API bool ImFont_IsLoaded(CONST struct ImFont *font)$/;"	f	typeref:typename:CIMGUI_API bool
ImFont_RenderChar	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_RenderChar(CONST struct ImFont *font, ImDrawList *draw_list, float size, /;"	f	typeref:typename:CIMGUI_API void
ImFont_RenderText	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_RenderText(CONST struct ImFont *font, ImDrawList *draw_list, float size, /;"	f	typeref:typename:CIMGUI_API void
ImFont_SetFallbackChar	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_SetFallbackChar(struct ImFont *font, ImWchar c)$/;"	f	typeref:typename:CIMGUI_API void
ImFont_SetFallbackGlyph	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_SetFallbackGlyph(struct ImFont *font, CONST struct IMFONTGLYPH *FallbackG/;"	f	typeref:typename:CIMGUI_API void
ImFont_SetFontSize	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_SetFontSize(struct ImFont *font, float FontSize_)$/;"	f	typeref:typename:CIMGUI_API void
ImFont_SetScale	lib/cimgui/cimgui/fontAtlas.cpp	/^CIMGUI_API void ImFont_SetScale(struct ImFont *font, float Scale_)$/;"	f	typeref:typename:CIMGUI_API void
ImFormatString	lib/cimgui/imgui/imgui.cpp	/^int ImFormatString(char* buf, size_t buf_size, const char* fmt, ...)$/;"	f	typeref:typename:int
ImFormatStringV	lib/cimgui/imgui/imgui.cpp	/^int ImFormatStringV(char* buf, size_t buf_size, const char* fmt, va_list args)$/;"	f	typeref:typename:int
ImGui	lib/cimgui/imgui/imgui.cpp	/^namespace ImGui$/;"	n	file:
ImGui	lib/cimgui/imgui/imgui.h	/^namespace ImGui$/;"	n
ImGui	lib/cimgui/imgui/imgui_internal.h	/^namespace ImGui$/;"	n
ImGuiAxis	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiAxis$/;"	g
ImGuiAxis_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiAxis_None = -1,$/;"	e	enum:ImGuiAxis
ImGuiAxis_X	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiAxis_X = 0,$/;"	e	enum:ImGuiAxis
ImGuiAxis_Y	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiAxis_Y = 1$/;"	e	enum:ImGuiAxis
ImGuiBackendFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiBackendFlags;      \/\/ flags: for io.BackendFlags               \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiBackendFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiBackendFlags_$/;"	g
ImGuiBackendFlags_HasGamepad	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_HasGamepad            = 1 << 0,   \/\/ Back-end has a connected gamepad.$/;"	e	enum:ImGuiBackendFlags_
ImGuiBackendFlags_HasMouseCursors	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_HasMouseCursors       = 1 << 1,   \/\/ Back-end can honor GetMouseCursor()/;"	e	enum:ImGuiBackendFlags_
ImGuiBackendFlags_HasSetMousePos	lib/cimgui/imgui/imgui.h	/^    ImGuiBackendFlags_HasSetMousePos        = 1 << 2    \/\/ Back-end can honor io.WantSetMouseP/;"	e	enum:ImGuiBackendFlags_
ImGuiButtonFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiButtonFlags;       \/\/ flags: for ButtonEx(), ButtonBehavior()  \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiButtonFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiButtonFlags_$/;"	g
ImGuiButtonFlags_AlignTextBaseLine	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_AlignTextBaseLine      = 1 << 9,   \/\/ vertically align button to match te/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_AllowItemOverlap	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_AllowItemOverlap       = 1 << 6,   \/\/ require previous frame HoveredId to/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_Disabled	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_Disabled               = 1 << 8,   \/\/ disable interactions$/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_DontClosePopups	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_DontClosePopups        = 1 << 7,   \/\/ disable automatically closing paren/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_FlattenChildren	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_FlattenChildren        = 1 << 5,   \/\/ allow interactions even if a child /;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoHoldingActiveID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoHoldingActiveID      = 1 << 11,  \/\/ don't set ActiveId while holding th/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoKeyModifiers	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoKeyModifiers         = 1 << 10,  \/\/ disable interaction if a key modifi/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_NoNavFocus	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_NoNavFocus             = 1 << 13   \/\/ don't override navigation focus whe/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnClick	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnClick         = 1 << 2,   \/\/ return true on click (default requi/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnClickRelease	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnClickRelease  = 1 << 1,   \/\/ return true on click + release on s/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnDoubleClick	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnDoubleClick   = 1 << 4,   \/\/ return true on double-click (defaul/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnDragDropHold	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnDragDropHold  = 1 << 12,  \/\/ press when held into while we are d/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_PressedOnRelease	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_PressedOnRelease       = 1 << 3,   \/\/ return true on release (default req/;"	e	enum:ImGuiButtonFlags_
ImGuiButtonFlags_Repeat	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiButtonFlags_Repeat                 = 1 << 0,   \/\/ hold to repeat$/;"	e	enum:ImGuiButtonFlags_
ImGuiCol	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiCol;$/;"	t	typeref:typename:int
ImGuiCol	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiCol;               \/\/ enum: a color identifier for styling     \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiColMod	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiColMod$/;"	s
ImGuiCol_	lib/cimgui/imgui/imgui.h	/^enum ImGuiCol_$/;"	g
ImGuiCol_Border	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_Border,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_Border	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Border,$/;"	e	enum:ImGuiCol_
ImGuiCol_BorderShadow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_BorderShadow,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_BorderShadow	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_BorderShadow,$/;"	e	enum:ImGuiCol_
ImGuiCol_Button	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_Button,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_Button	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Button,$/;"	e	enum:ImGuiCol_
ImGuiCol_ButtonActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ButtonActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ButtonActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ButtonActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ButtonHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ButtonHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ButtonHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ButtonHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_COUNT	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_COUNT$/;"	e	enum:__anon98a3ef990603
ImGuiCol_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_COUNT$/;"	e	enum:ImGuiCol_
ImGuiCol_CheckMark	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_CheckMark,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_CheckMark	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_CheckMark,$/;"	e	enum:ImGuiCol_
ImGuiCol_ChildBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ChildBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ChildBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ChildBg,               \/\/ Background of child windows$/;"	e	enum:ImGuiCol_
ImGuiCol_ChildWindowBg	lib/cimgui/imgui/imgui.h	/^    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_/;"	e	enum:ImGuiCol_
ImGuiCol_CloseButton	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_CloseButton,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_CloseButtonActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_CloseButtonActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_CloseButtonHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_CloseButtonHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_Column	lib/cimgui/imgui/imgui.h	/^    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_/;"	e	enum:ImGuiCol_
ImGuiCol_ColumnActive	lib/cimgui/imgui/imgui.h	/^    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_/;"	e	enum:ImGuiCol_
ImGuiCol_ColumnHovered	lib/cimgui/imgui/imgui.h	/^    , ImGuiCol_ChildWindowBg = ImGuiCol_ChildBg, ImGuiCol_Column = ImGuiCol_Separator, ImGuiCol_/;"	e	enum:ImGuiCol_
ImGuiCol_DragDropTarget	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_DragDropTarget,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_DragDropTarget	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_DragDropTarget,$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_FrameBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_FrameBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_FrameBg,               \/\/ Background of checkbox, radio button, plot, slider, tex/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBgActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_FrameBgActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_FrameBgActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_FrameBgActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_FrameBgHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_FrameBgHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_FrameBgHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_FrameBgHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_Header	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_Header,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_Header	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Header,$/;"	e	enum:ImGuiCol_
ImGuiCol_HeaderActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_HeaderActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_HeaderActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_HeaderActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_HeaderHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_HeaderHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_HeaderHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_HeaderHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_MenuBarBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_MenuBarBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_MenuBarBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_MenuBarBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_ModalWindowDarkening	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ModalWindowDarkening,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ModalWindowDarkening	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ModalWindowDarkening,  \/\/ darken\/colorize entire screen behind a modal window, w/;"	e	enum:ImGuiCol_
ImGuiCol_NavHighlight	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_NavHighlight,          \/\/ gamepad\/keyboard: current highlighted item $/;"	e	enum:ImGuiCol_
ImGuiCol_NavWindowingHighlight	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_NavWindowingHighlight, \/\/ gamepad\/keyboard: when holding NavMenu to focus\/move\//;"	e	enum:ImGuiCol_
ImGuiCol_PlotHistogram	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_PlotHistogram,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_PlotHistogram	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotHistogram,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotHistogramHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_PlotHistogramHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_PlotHistogramHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotHistogramHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotLines	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_PlotLines,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_PlotLines	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotLines,$/;"	e	enum:ImGuiCol_
ImGuiCol_PlotLinesHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_PlotLinesHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_PlotLinesHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PlotLinesHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_PopupBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_PopupBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_PopupBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_PopupBg,               \/\/ Background of popups, menus, tooltips windows$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGrip	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ResizeGrip,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ResizeGrip	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ResizeGrip,$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGripActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ResizeGripActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ResizeGripActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ResizeGripActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ResizeGripHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ResizeGripHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ResizeGripHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ResizeGripHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ScrollbarBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrab	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarGrab,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ScrollbarGrab	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrab,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrabActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarGrabActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ScrollbarGrabActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrabActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_ScrollbarGrabHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_ScrollbarGrabHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_ScrollbarGrabHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_ScrollbarGrabHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_Separator	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_Separator,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_Separator	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Separator,$/;"	e	enum:ImGuiCol_
ImGuiCol_SeparatorActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_SeparatorActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_SeparatorActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SeparatorActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_SeparatorHovered	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_SeparatorHovered,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_SeparatorHovered	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SeparatorHovered,$/;"	e	enum:ImGuiCol_
ImGuiCol_SliderGrab	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_SliderGrab,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_SliderGrab	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SliderGrab,$/;"	e	enum:ImGuiCol_
ImGuiCol_SliderGrabActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_SliderGrabActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_SliderGrabActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_SliderGrabActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_Text	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_Text,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_Text	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_Text,$/;"	e	enum:ImGuiCol_
ImGuiCol_TextDisabled	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_TextDisabled,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_TextDisabled	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TextDisabled,$/;"	e	enum:ImGuiCol_
ImGuiCol_TextSelectedBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_TextSelectedBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_TextSelectedBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TextSelectedBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_TitleBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_TitleBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TitleBg,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBgActive	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_TitleBgActive,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_TitleBgActive	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TitleBgActive,$/;"	e	enum:ImGuiCol_
ImGuiCol_TitleBgCollapsed	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_TitleBgCollapsed,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_TitleBgCollapsed	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_TitleBgCollapsed,$/;"	e	enum:ImGuiCol_
ImGuiCol_WindowBg	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCol_WindowBg,$/;"	e	enum:__anon98a3ef990603
ImGuiCol_WindowBg	lib/cimgui/imgui/imgui.h	/^    ImGuiCol_WindowBg,              \/\/ Background of normal windows$/;"	e	enum:ImGuiCol_
ImGuiColorEditFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiColorEditFlags;$/;"	t	typeref:typename:int
ImGuiColorEditFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiColorEditFlags;    \/\/ flags: for ColorEdit*(), ColorPicker*()  \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiColorEditFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiColorEditFlags_$/;"	g
ImGuiColorEditFlags_AlphaBar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_AlphaBar = 1 << 9,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_AlphaBar	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_AlphaBar        = 1 << 9,   \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_AlphaPreview	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_AlphaPreview = 1 << 10,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_AlphaPreview	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_AlphaPreview    = 1 << 10,  \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_AlphaPreviewHalf	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_AlphaPreviewHalf = 1 << 11,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_AlphaPreviewHalf	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_AlphaPreviewHalf= 1 << 11,  \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_Float	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_Float = 1 << 17,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_Float	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_Float           = 1 << 17,  \/\/ [DataType]   \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_HDR	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_HDR = 1 << 12,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_HDR	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_HDR             = 1 << 12,  \/\/              \/\/ (WIP) ColorEdit: Curr/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_HEX	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_HEX = 1 << 15,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_HEX	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_HEX             = 1 << 15,  \/\/ [Inputs]     \/\/ "$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_HSV	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_HSV = 1 << 14,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_HSV	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_HSV             = 1 << 14,  \/\/ [Inputs]     \/\/ "$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoAlpha	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoAlpha = 1 << 1,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoAlpha	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoAlpha         = 1 << 1,   \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoInputs	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoInputs = 1 << 5,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoInputs	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoInputs        = 1 << 5,   \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoLabel	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoLabel = 1 << 7,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoLabel	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoLabel         = 1 << 7,   \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoOptions	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoOptions = 1 << 3,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoOptions	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoOptions       = 1 << 3,   \/\/              \/\/ ColorEdit: disable to/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoPicker	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoPicker = 1 << 2,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoPicker	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoPicker        = 1 << 2,   \/\/              \/\/ ColorEdit: disable pi/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoSidePreview	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoSidePreview = 1 << 8,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoSidePreview	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoSidePreview   = 1 << 8,   \/\/              \/\/ ColorPicker: disable /;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoSmallPreview	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoSmallPreview = 1 << 4,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoSmallPreview	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoSmallPreview  = 1 << 4,   \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_NoTooltip	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_NoTooltip = 1 << 6,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_NoTooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_NoTooltip       = 1 << 6,   \/\/              \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_PickerHueBar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_PickerHueBar = 1 << 18,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_PickerHueBar	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_PickerHueBar    = 1 << 18,  \/\/ [PickerMode] \/\/ ColorPicker: bar for /;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_PickerHueWheel	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_PickerHueWheel = 1 << 19$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_PickerHueWheel	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_PickerHueWheel  = 1 << 19,  \/\/ [PickerMode] \/\/ ColorPicker: wheel fo/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_RGB	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_RGB = 1 << 13,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_RGB	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_RGB             = 1 << 13,  \/\/ [Inputs]     \/\/ ColorEdit: choose one/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags_Uint8	lib/cimgui/cimgui/cimgui.h	/^    ImGuiColorEditFlags_Uint8 = 1 << 16,$/;"	e	enum:__anon98a3ef990803
ImGuiColorEditFlags_Uint8	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags_Uint8           = 1 << 16,  \/\/ [DataType]   \/\/ ColorEdit, ColorPicke/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__DataTypeMask	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__DataTypeMask   = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_Float,$/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__InputsMask	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__InputsMask     = ImGuiColorEditFlags_RGB|ImGuiColorEditFlags_HSV|ImGuiC/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__OptionsDefault	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__OptionsDefault = ImGuiColorEditFlags_Uint8|ImGuiColorEditFlags_RGB|ImGu/;"	e	enum:ImGuiColorEditFlags_
ImGuiColorEditFlags__PickerMask	lib/cimgui/imgui/imgui.h	/^    ImGuiColorEditFlags__PickerMask     = ImGuiColorEditFlags_PickerHueWheel|ImGuiColorEditFlags/;"	e	enum:ImGuiColorEditFlags_
ImGuiColumnData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnData()   { OffsetNorm = OffsetNormBeforeResize = 0.0f; Flags = 0; }$/;"	f	struct:ImGuiColumnData
ImGuiColumnData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiColumnData$/;"	s
ImGuiColumnsFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiColumnsFlags;$/;"	t	typeref:typename:int
ImGuiColumnsFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiColumnsFlags;      \/\/ flags: for *Columns*()                   \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiColumnsFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiColumnsFlags_$/;"	g
ImGuiColumnsFlags_GrowParentContentsSize	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_GrowParentContentsSize= 1 << 4    \/\/ (WIP) Restore pre-1.51 behavior of /;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoBorder	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoBorder              = 1 << 0,   \/\/ Disable column dividers$/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoForceWithinWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoForceWithinWindow   = 1 << 3,   \/\/ Disable forcing columns to fit with/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoPreserveWidths	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoPreserveWidths      = 1 << 2,   \/\/ Disable column width preservation w/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsFlags_NoResize	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsFlags_NoResize              = 1 << 1,   \/\/ Disable resizing columns when click/;"	e	enum:ImGuiColumnsFlags_
ImGuiColumnsSet	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiColumnsSet()   { Clear(); }$/;"	f	struct:ImGuiColumnsSet
ImGuiColumnsSet	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiColumnsSet$/;"	s
ImGuiComboFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiComboFlags;$/;"	t	typeref:typename:int
ImGuiComboFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiComboFlags;        \/\/ flags: for BeginCombo()                  \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiComboFlags_	lib/cimgui/cimgui/cimgui.h	/^enum ImGuiComboFlags_$/;"	g
ImGuiComboFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiComboFlags_$/;"	g
ImGuiComboFlags_HeightLarge	lib/cimgui/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightLarge = 1 << 3,$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightLarge	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightLarge             = 1 << 3,   \/\/ Max ~20 items visible$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightLargest	lib/cimgui/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightLargest = 1 << 4,$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightLargest	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightLargest           = 1 << 4,   \/\/ As many fitting items as possible$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightMask_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightMask_ = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_HeightRegular | /;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightMask_	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightMask_             = ImGuiComboFlags_HeightSmall | ImGuiComboFlags_Heig/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightRegular	lib/cimgui/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightRegular = 1 << 2,$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightRegular	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightRegular           = 1 << 2,   \/\/ Max ~8 items visible (default)$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightSmall	lib/cimgui/cimgui/cimgui.h	/^    ImGuiComboFlags_HeightSmall = 1 << 1,$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_HeightSmall	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_HeightSmall             = 1 << 1,   \/\/ Max ~4 items visible. Tip: If you w/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_NoArrowButton	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_NoArrowButton           = 1 << 5,   \/\/ Display on the preview box without /;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_NoPreview	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_NoPreview               = 1 << 6,   \/\/ Display only a square arrow button$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_PopupAlignLeft	lib/cimgui/cimgui/cimgui.h	/^    ImGuiComboFlags_PopupAlignLeft = 1 << 0,$/;"	e	enum:ImGuiComboFlags_
ImGuiComboFlags_PopupAlignLeft	lib/cimgui/imgui/imgui.h	/^    ImGuiComboFlags_PopupAlignLeft          = 1 << 0,   \/\/ Align the popup toward the left by /;"	e	enum:ImGuiComboFlags_
ImGuiCond	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiCond;$/;"	t	typeref:typename:int
ImGuiCond	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiCond;              \/\/ enum: a condition for Set*()             \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiCond_	lib/cimgui/imgui/imgui.h	/^enum ImGuiCond_$/;"	g
ImGuiCond_Always	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCond_Always = 1 << 0,$/;"	e	enum:__anon98a3ef990a03
ImGuiCond_Always	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_Always        = 1 << 0,   \/\/ Set the variable$/;"	e	enum:ImGuiCond_
ImGuiCond_Appearing	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCond_Appearing = 1 << 3$/;"	e	enum:__anon98a3ef990a03
ImGuiCond_Appearing	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_Appearing     = 1 << 3    \/\/ Set the variable if the object\/window is appearing/;"	e	enum:ImGuiCond_
ImGuiCond_FirstUseEver	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCond_FirstUseEver = 1 << 2,$/;"	e	enum:__anon98a3ef990a03
ImGuiCond_FirstUseEver	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_FirstUseEver  = 1 << 2,   \/\/ Set the variable if the object\/window has no persi/;"	e	enum:ImGuiCond_
ImGuiCond_Once	lib/cimgui/cimgui/cimgui.h	/^    ImGuiCond_Once = 1 << 1,$/;"	e	enum:__anon98a3ef990a03
ImGuiCond_Once	lib/cimgui/imgui/imgui.h	/^    ImGuiCond_Once          = 1 << 1,   \/\/ Set the variable once per runtime session (only the/;"	e	enum:ImGuiCond_
ImGuiConfigFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiConfigFlags;       \/\/ flags: for io.ConfigFlags                \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiConfigFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiConfigFlags_$/;"	g
ImGuiConfigFlags_IsSRGB	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_IsSRGB                 = 1 << 20,  \/\/ Application is SRGB-aware.$/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_IsTouchScreen	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_IsTouchScreen          = 1 << 21   \/\/ Application is using a touch screen/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavEnableGamepad	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavEnableGamepad       = 1 << 1,   \/\/ Master gamepad navigation enable fl/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavEnableKeyboard	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavEnableKeyboard      = 1 << 0,   \/\/ Master keyboard navigation enable f/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavEnableSetMousePos	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavEnableSetMousePos   = 1 << 2,   \/\/ Instruct navigation to move the mou/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NavNoCaptureKeyboard	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NavNoCaptureKeyboard   = 1 << 3,   \/\/ Instruct navigation to not set the /;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NoMouse	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NoMouse                = 1 << 4,   \/\/ Instruct imgui to clear mouse posit/;"	e	enum:ImGuiConfigFlags_
ImGuiConfigFlags_NoMouseCursorChange	lib/cimgui/imgui/imgui.h	/^    ImGuiConfigFlags_NoMouseCursorChange    = 1 << 5,   \/\/ Instruct back-end to not alter mous/;"	e	enum:ImGuiConfigFlags_
ImGuiContext	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiContext(ImFontAtlas* shared_font_atlas) : OverlayDrawList(NULL)$/;"	f	struct:ImGuiContext
ImGuiContext	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiContext$/;"	s
ImGuiDataType	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiDataType$/;"	g
ImGuiDataType_COUNT	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDataType_COUNT$/;"	e	enum:ImGuiDataType
ImGuiDataType_Double	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDataType_Double,$/;"	e	enum:ImGuiDataType
ImGuiDataType_Float	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDataType_Float,$/;"	e	enum:ImGuiDataType
ImGuiDataType_Int	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDataType_Int,$/;"	e	enum:ImGuiDataType
ImGuiDir	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiDir;               \/\/ enum: a cardinal direction               \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiDir_	lib/cimgui/imgui/imgui.h	/^enum ImGuiDir_$/;"	g
ImGuiDir_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_COUNT$/;"	e	enum:ImGuiDir_
ImGuiDir_Down	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Down    = 3,$/;"	e	enum:ImGuiDir_
ImGuiDir_Left	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Left    = 0,$/;"	e	enum:ImGuiDir_
ImGuiDir_None	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_None    = -1,$/;"	e	enum:ImGuiDir_
ImGuiDir_Right	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Right   = 1,$/;"	e	enum:ImGuiDir_
ImGuiDir_Up	lib/cimgui/imgui/imgui.h	/^    ImGuiDir_Up      = 2,$/;"	e	enum:ImGuiDir_
ImGuiDragDropFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiDragDropFlags;$/;"	t	typeref:typename:int
ImGuiDragDropFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiDragDropFlags;     \/\/ flags: for *DragDrop*()                  \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiDragDropFlags_	lib/cimgui/cimgui/cimgui.h	/^enum ImGuiDragDropFlags_$/;"	g
ImGuiDragDropFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiDragDropFlags_$/;"	g
ImGuiDragDropFlags_AcceptBeforeDelivery	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_AcceptBeforeDelivery = 1 << 10,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptBeforeDelivery	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_AcceptBeforeDelivery         = 1 << 10,  \/\/ AcceptDragDropPayload() wil/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptNoDrawDefaultRect	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_AcceptNoDrawDefaultRect = 1 << 11,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptNoDrawDefaultRect	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_AcceptNoDrawDefaultRect      = 1 << 11,  \/\/ Do not draw the default hig/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptPeekOnly	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_AcceptPeekOnly = ImGuiDragDropFlags_AcceptBeforeDelivery | ImGuiDragDropF/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_AcceptPeekOnly	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_AcceptPeekOnly               = ImGuiDragDropFlags_AcceptBeforeDelivery | /;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceAllowNullID	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceAllowNullID = 1 << 3,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceAllowNullID	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceAllowNullID            = 1 << 3,   \/\/ Allow items such as Text(),/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceExtern	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceExtern = 1 << 4,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceExtern	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceExtern                 = 1 << 4,   \/\/ External source (from outsi/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoDisableHover	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceNoDisableHover = 1 << 1,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoDisableHover	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceNoDisableHover         = 1 << 1,   \/\/ By default, when dragging w/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoHoldToOpenOthers	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceNoHoldToOpenOthers = 1 << 2,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoHoldToOpenOthers	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceNoHoldToOpenOthers     = 1 << 2,   \/\/ Disable the behavior that a/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoPreviewTooltip	lib/cimgui/cimgui/cimgui.h	/^    ImGuiDragDropFlags_SourceNoPreviewTooltip = 1 << 0,$/;"	e	enum:ImGuiDragDropFlags_
ImGuiDragDropFlags_SourceNoPreviewTooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiDragDropFlags_SourceNoPreviewTooltip       = 1 << 0,   \/\/ By default, a successful ca/;"	e	enum:ImGuiDragDropFlags_
ImGuiDrawContext	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDrawContext()$/;"	f	struct:ImGuiDrawContext
ImGuiDrawContext	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiDrawContext$/;"	s
ImGuiFocusedFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiFocusedFlags;$/;"	t	typeref:typename:int
ImGuiFocusedFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiFocusedFlags;      \/\/ flags: for IsWindowFocused()             \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiFocusedFlags_	lib/cimgui/cimgui/cimgui.h	/^enum ImGuiFocusedFlags_$/;"	g
ImGuiFocusedFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiFocusedFlags_$/;"	g
ImGuiFocusedFlags_AnyWindow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiFocusedFlags_AnyWindow                     = 1 << 2,   $/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_AnyWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_AnyWindow                     = 1 << 2,   \/\/ IsWindowFocused(): Return t/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_ChildWindows	lib/cimgui/cimgui/cimgui.h	/^    ImGuiFocusedFlags_ChildWindows                  = 1 << 0,   $/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_ChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_ChildWindows                  = 1 << 0,   \/\/ IsWindowFocused(): Return t/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_RootAndChildWindows	lib/cimgui/cimgui/cimgui.h	/^    ImGuiFocusedFlags_RootAndChildWindows           = ImGuiFocusedFlags_RootWindow | ImGuiFocuse/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_RootAndChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_RootAndChildWindows           = ImGuiFocusedFlags_RootWindow | ImGuiFocuse/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_RootWindow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiFocusedFlags_RootWindow                    = 1 << 1,   $/;"	e	enum:ImGuiFocusedFlags_
ImGuiFocusedFlags_RootWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiFocusedFlags_RootWindow                    = 1 << 1,   \/\/ IsWindowFocused(): Test fro/;"	e	enum:ImGuiFocusedFlags_
ImGuiFreeType	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^namespace ImGuiFreeType$/;"	n
ImGuiGroupData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiGroupData$/;"	s
ImGuiHelper	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.h	/^@interface ImGuiHelper : NSObject$/;"	i
ImGuiHelper	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^@implementation ImGuiHelper$/;"	I
ImGuiHelper	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^@interface ImGuiHelper ()$/;"	i
ImGuiHoveredFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiHoveredFlags;$/;"	t	typeref:typename:int
ImGuiHoveredFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiHoveredFlags;      \/\/ flags: for IsItemHovered() etc.          \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiHoveredFlags_	lib/cimgui/cimgui/cimgui.h	/^enum ImGuiHoveredFlags_$/;"	g
ImGuiHoveredFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiHoveredFlags_$/;"	g
ImGuiHoveredFlags_AllowWhenBlockedByActiveItem	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem  = 1 << 5,   $/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenBlockedByActiveItem	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByActiveItem  = 1 << 5,   \/\/ Return true even if an acti/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenBlockedByPopup	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByPopup       = 1 << 3,  $/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenBlockedByPopup	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AllowWhenBlockedByPopup       = 1 << 3,   \/\/ Return true even if a popup/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenOverlapped	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AllowWhenOverlapped           = 1 << 6,   $/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AllowWhenOverlapped	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AllowWhenOverlapped           = 1 << 6,   \/\/ Return true even if the pos/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AnyWindow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_AnyWindow                     = 1 << 2,   $/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_AnyWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_AnyWindow                     = 1 << 2,   \/\/ IsWindowHovered() only: Ret/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_ChildWindows	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_ChildWindows                  = 1 << 0,  $/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_ChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_ChildWindows                  = 1 << 0,   \/\/ IsWindowHovered() only: Ret/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_Default	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_Default                       = 0,     $/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_Default	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_Default                       = 0,        \/\/ Return true if directly ove/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RectOnly	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_RectOnly                      = ImGuiHoveredFlags_AllowWhenBlockedByPopup /;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RectOnly	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_RectOnly                      = ImGuiHoveredFlags_AllowWhenBlockedByPopup /;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RootAndChildWindows	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_RootAndChildWindows           = ImGuiHoveredFlags_RootWindow | ImGuiHovere/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RootAndChildWindows	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_RootAndChildWindows           = ImGuiHoveredFlags_RootWindow | ImGuiHovere/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RootWindow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiHoveredFlags_RootWindow                    = 1 << 1,   $/;"	e	enum:ImGuiHoveredFlags_
ImGuiHoveredFlags_RootWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiHoveredFlags_RootWindow                    = 1 << 1,   \/\/ IsWindowHovered() only: Tes/;"	e	enum:ImGuiHoveredFlags_
ImGuiID	lib/cimgui/cimgui/cimgui.h	/^typedef ImU32 ImGuiID;$/;"	t	typeref:typename:ImU32
ImGuiID	lib/cimgui/imgui/imgui.h	/^typedef unsigned int ImGuiID;       \/\/ Unique ID used by widgets (typically hashed from a stac/;"	t	typeref:typename:unsigned int
ImGuiIO	lib/cimgui/cimgui/cimgui.h	/^struct ImGuiIO$/;"	s
ImGuiIO	lib/cimgui/imgui/imgui.cpp	/^ImGuiIO::ImGuiIO()$/;"	f	class:ImGuiIO
ImGuiIO	lib/cimgui/imgui/imgui.h	/^struct ImGuiIO$/;"	s
ImGuiIO_AddInputCharacter	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiIO_AddInputCharacter(unsigned short c)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiIO_AddInputCharactersUTF8	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiIO_AddInputCharactersUTF8(CONST char *utf8_chars)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiIO_ClearInputCharacters	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiIO_ClearInputCharacters()$/;"	f	typeref:typename:CIMGUI_API void
ImGuiInputReadMode	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiInputReadMode$/;"	g
ImGuiInputReadMode_Down	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Down,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_Pressed	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Pressed,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_Released	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Released,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_Repeat	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_Repeat,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_RepeatFast	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_RepeatFast$/;"	e	enum:ImGuiInputReadMode
ImGuiInputReadMode_RepeatSlow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputReadMode_RepeatSlow,$/;"	e	enum:ImGuiInputReadMode
ImGuiInputSource	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiInputSource$/;"	g
ImGuiInputSource_COUNT	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_COUNT$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_Mouse	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_Mouse,$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_Nav	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_Nav,$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_NavGamepad	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_NavGamepad,    \/\/ "$/;"	e	enum:ImGuiInputSource
ImGuiInputSource_NavKeyboard	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_NavKeyboard,   \/\/ Only used occasionally for storage, not tested\/handled/;"	e	enum:ImGuiInputSource
ImGuiInputSource_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource_None = 0,$/;"	e	enum:ImGuiInputSource
ImGuiInputTextFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiInputTextFlags;$/;"	t	typeref:typename:int
ImGuiInputTextFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiInputTextFlags;    \/\/ flags: for InputText*()                  \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiInputTextFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiInputTextFlags_$/;"	g
ImGuiInputTextFlags_AllowTabInput	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_AllowTabInput = 1 << 10,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_AllowTabInput	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_AllowTabInput       = 1 << 10,  \/\/ Pressing TAB input a '\\t' characte/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_AlwaysInsertMode	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_AlwaysInsertMode = 1 << 13,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_AlwaysInsertMode	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_AlwaysInsertMode    = 1 << 13,  \/\/ Insert mode$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_AutoSelectAll	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_AutoSelectAll = 1 << 4,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_AutoSelectAll	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_AutoSelectAll       = 1 << 4,   \/\/ Select entire text when first takin/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackAlways	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackAlways = 1 << 8,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CallbackAlways	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackAlways      = 1 << 8,   \/\/ Call user function every time. User/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackCharFilter	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackCharFilter = 1 << 9,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CallbackCharFilter	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackCharFilter  = 1 << 9,   \/\/ Call user function to filter charac/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackCompletion	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackCompletion = 1 << 6,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CallbackCompletion	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackCompletion  = 1 << 6,   \/\/ Call user function on pressing TAB /;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CallbackHistory	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CallbackHistory = 1 << 7,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CallbackHistory	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CallbackHistory     = 1 << 7,   \/\/ Call user function on pressing Up\//;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsDecimal	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsDecimal = 1 << 0,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CharsDecimal	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsDecimal        = 1 << 0,   \/\/ Allow 0123456789.+-*\/$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsHexadecimal	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsHexadecimal = 1 << 1,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CharsHexadecimal	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsHexadecimal    = 1 << 1,   \/\/ Allow 0123456789ABCDEFabcdef$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsNoBlank	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsNoBlank = 1 << 3,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CharsNoBlank	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsNoBlank        = 1 << 3,   \/\/ Filter out spaces, tabs$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsScientific	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsScientific     = 1 << 17,  \/\/ Allow 0123456789.+-*\/eE (Scientifi/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CharsUppercase	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CharsUppercase = 1 << 2,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CharsUppercase	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CharsUppercase      = 1 << 2,   \/\/ Turn a..z into A..Z$/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_CtrlEnterForNewLine	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_CtrlEnterForNewLine	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_CtrlEnterForNewLine = 1 << 11,  \/\/ In multi-line mode, unfocus with En/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_EnterReturnsTrue	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_EnterReturnsTrue = 1 << 5,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_EnterReturnsTrue	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_EnterReturnsTrue    = 1 << 5,   \/\/ Return 'true' when Enter is pressed/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_Multiline	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_Multiline           = 1 << 20   \/\/ For internal use by InputTextMultil/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_NoHorizontalScroll	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_NoHorizontalScroll = 1 << 12,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_NoHorizontalScroll	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_NoHorizontalScroll  = 1 << 12,  \/\/ Disable following the cursor horizo/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_NoUndoRedo	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_NoUndoRedo = 1 << 16,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_NoUndoRedo	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_NoUndoRedo          = 1 << 16,  \/\/ Disable undo\/redo. Note that input/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_Password	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_Password = 1 << 15,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_Password	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_Password            = 1 << 15,  \/\/ Password mode, display all characte/;"	e	enum:ImGuiInputTextFlags_
ImGuiInputTextFlags_ReadOnly	lib/cimgui/cimgui/cimgui.h	/^    ImGuiInputTextFlags_ReadOnly = 1 << 14,$/;"	e	enum:__anon98a3ef990203
ImGuiInputTextFlags_ReadOnly	lib/cimgui/imgui/imgui.h	/^    ImGuiInputTextFlags_ReadOnly            = 1 << 14,  \/\/ Read-only mode$/;"	e	enum:ImGuiInputTextFlags_
ImGuiItemFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiItemFlags;         \/\/ flags: for PushItemFlag()                \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiItemFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiItemFlags_$/;"	g
ImGuiItemFlags_AllowKeyboardFocus	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_AllowKeyboardFocus           = 1 << 0,  \/\/ true$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_ButtonRepeat	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_ButtonRepeat                 = 1 << 1,  \/\/ false    \/\/ Button() will retu/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_Default_	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_Default_                     = ImGuiItemFlags_AllowKeyboardFocus$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_Disabled	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_Disabled                     = 1 << 2,  \/\/ false    \/\/ FIXME-WIP: Disable/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_NoNav	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_NoNav                        = 1 << 3,  \/\/ false$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_NoNavDefaultFocus	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_NoNavDefaultFocus            = 1 << 4,  \/\/ false$/;"	e	enum:ImGuiItemFlags_
ImGuiItemFlags_SelectableDontClosePopup	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags_SelectableDontClosePopup     = 1 << 5,  \/\/ false    \/\/ MenuItem\/Selectab/;"	e	enum:ImGuiItemFlags_
ImGuiItemHoveredDataBackup	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemHoveredDataBackup() { Backup(); }$/;"	f	struct:ImGuiItemHoveredDataBackup
ImGuiItemHoveredDataBackup	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiItemHoveredDataBackup$/;"	s
ImGuiItemStatusFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiItemStatusFlags;   \/\/ flags: storage for DC.LastItemXXX        \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiItemStatusFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiItemStatusFlags_$/;"	g
ImGuiItemStatusFlags_HasDisplayRect	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_HasDisplayRect     = 1 << 1$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiItemStatusFlags_HoveredRect	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags_HoveredRect        = 1 << 0,$/;"	e	enum:ImGuiItemStatusFlags_
ImGuiKey	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiKey;$/;"	t	typeref:typename:int
ImGuiKey	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiKey;               \/\/ enum: a key identifier (ImGui-side enum) \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiKey_	lib/cimgui/imgui/imgui.h	/^enum ImGuiKey_$/;"	g
ImGuiKey_A	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_A,         \/\/ for text edit CTRL+A: select all$/;"	e	enum:__anon98a3ef990503
ImGuiKey_A	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_A,         \/\/ for text edit CTRL+A: select all$/;"	e	enum:ImGuiKey_
ImGuiKey_Backspace	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Backspace,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Backspace	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Backspace,$/;"	e	enum:ImGuiKey_
ImGuiKey_C	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_C,         \/\/ for text edit CTRL+C: copy$/;"	e	enum:__anon98a3ef990503
ImGuiKey_C	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_C,         \/\/ for text edit CTRL+C: copy$/;"	e	enum:ImGuiKey_
ImGuiKey_COUNT	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_COUNT$/;"	e	enum:__anon98a3ef990503
ImGuiKey_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_COUNT$/;"	e	enum:ImGuiKey_
ImGuiKey_Delete	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Delete,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Delete	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Delete,$/;"	e	enum:ImGuiKey_
ImGuiKey_DownArrow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_DownArrow,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_DownArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_DownArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_End	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_End,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_End	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_End,$/;"	e	enum:ImGuiKey_
ImGuiKey_Enter	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Enter,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Enter	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Enter,$/;"	e	enum:ImGuiKey_
ImGuiKey_Escape	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Escape,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Escape	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Escape,$/;"	e	enum:ImGuiKey_
ImGuiKey_Home	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Home,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Home	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Home,$/;"	e	enum:ImGuiKey_
ImGuiKey_Insert	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Insert,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Insert	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Insert,$/;"	e	enum:ImGuiKey_
ImGuiKey_LeftArrow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_LeftArrow,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_LeftArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_LeftArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_PageDown	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_PageDown,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_PageDown	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_PageDown,$/;"	e	enum:ImGuiKey_
ImGuiKey_PageUp	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_PageUp,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_PageUp	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_PageUp,$/;"	e	enum:ImGuiKey_
ImGuiKey_RightArrow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_RightArrow,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_RightArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_RightArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_Space	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Space,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Space	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Space,$/;"	e	enum:ImGuiKey_
ImGuiKey_Tab	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Tab,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Tab	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Tab,$/;"	e	enum:ImGuiKey_
ImGuiKey_UpArrow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_UpArrow,$/;"	e	enum:__anon98a3ef990503
ImGuiKey_UpArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_UpArrow,$/;"	e	enum:ImGuiKey_
ImGuiKey_V	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_V,         \/\/ for text edit CTRL+V: paste$/;"	e	enum:__anon98a3ef990503
ImGuiKey_V	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_V,         \/\/ for text edit CTRL+V: paste$/;"	e	enum:ImGuiKey_
ImGuiKey_X	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_X,         \/\/ for text edit CTRL+X: cut$/;"	e	enum:__anon98a3ef990503
ImGuiKey_X	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_X,         \/\/ for text edit CTRL+X: cut$/;"	e	enum:ImGuiKey_
ImGuiKey_Y	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Y,         \/\/ for text edit CTRL+Y: redo$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Y	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Y,         \/\/ for text edit CTRL+Y: redo$/;"	e	enum:ImGuiKey_
ImGuiKey_Z	lib/cimgui/cimgui/cimgui.h	/^    ImGuiKey_Z,         \/\/ for text edit CTRL+Z: undo$/;"	e	enum:__anon98a3ef990503
ImGuiKey_Z	lib/cimgui/imgui/imgui.h	/^    ImGuiKey_Z,         \/\/ for text edit CTRL+Z: undo$/;"	e	enum:ImGuiKey_
ImGuiLayoutType	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiLayoutType;        \/\/ enum: horizontal or vertical             \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiLayoutType_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiLayoutType_$/;"	g
ImGuiLayoutType_Horizontal	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType_Horizontal$/;"	e	enum:ImGuiLayoutType_
ImGuiLayoutType_Vertical	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType_Vertical,$/;"	e	enum:ImGuiLayoutType_
ImGuiListClipper	lib/cimgui/cimgui/cimgui.h	/^struct ImGuiListClipper$/;"	s
ImGuiListClipper	lib/cimgui/imgui/imgui.h	/^    ImGuiListClipper(int items_count = -1, float items_height = -1.0f)  { Begin(items_count, ite/;"	f	struct:ImGuiListClipper
ImGuiListClipper	lib/cimgui/imgui/imgui.h	/^struct ImGuiListClipper$/;"	s
ImGuiListClipper_Begin	lib/cimgui/cimgui/listClipper.cpp	/^CIMGUI_API void ImGuiListClipper_Begin(ImGuiListClipper* clipper, int count, float items_height)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiListClipper_End	lib/cimgui/cimgui/listClipper.cpp	/^CIMGUI_API void ImGuiListClipper_End(ImGuiListClipper* clipper)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiListClipper_GetDisplayEnd	lib/cimgui/cimgui/listClipper.cpp	/^CIMGUI_API int ImGuiListClipper_GetDisplayEnd(ImGuiListClipper* clipper)$/;"	f	typeref:typename:CIMGUI_API int
ImGuiListClipper_GetDisplayStart	lib/cimgui/cimgui/listClipper.cpp	/^CIMGUI_API int ImGuiListClipper_GetDisplayStart(ImGuiListClipper* clipper)$/;"	f	typeref:typename:CIMGUI_API int
ImGuiListClipper_Step	lib/cimgui/cimgui/listClipper.cpp	/^CIMGUI_API bool ImGuiListClipper_Step(ImGuiListClipper* clipper)$/;"	f	typeref:typename:CIMGUI_API bool
ImGuiMenuColumns	lib/cimgui/imgui/imgui.cpp	/^ImGuiMenuColumns::ImGuiMenuColumns()$/;"	f	class:ImGuiMenuColumns
ImGuiMenuColumns	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiMenuColumns$/;"	s
ImGuiMouseCursor	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiMouseCursor;$/;"	t	typeref:typename:int
ImGuiMouseCursor	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiMouseCursor;       \/\/ enum: a mouse cursor identifier          \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiMouseCursor_	lib/cimgui/imgui/imgui.h	/^enum ImGuiMouseCursor_$/;"	g
ImGuiMouseCursor_Arrow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_Arrow = 0,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_Arrow	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_Arrow = 0,$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_COUNT$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_Count_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_Count_$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_Count_	lib/cimgui/imgui/imgui.h	/^    , ImGuiMouseCursor_Count_ = ImGuiMouseCursor_COUNT$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_Move	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_Move,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_None	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_None = -1,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_None	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_None = -1,$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeAll	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeAll,         \/\/ Unused by imgui functions$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeEW	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeEW,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_ResizeEW	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeEW,          \/\/ When hovering over a vertical border or a column$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNESW	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeNESW,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_ResizeNESW	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNESW,        \/\/ When hovering over the bottom-left corner of a wind/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNS	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeNS,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_ResizeNS	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNS,          \/\/ When hovering over an horizontal border$/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_ResizeNWSE	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_ResizeNWSE,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_ResizeNWSE	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_ResizeNWSE,        \/\/ When hovering over the bottom-right corner of a win/;"	e	enum:ImGuiMouseCursor_
ImGuiMouseCursor_TextInput	lib/cimgui/cimgui/cimgui.h	/^    ImGuiMouseCursor_TextInput,$/;"	e	enum:__anon98a3ef990903
ImGuiMouseCursor_TextInput	lib/cimgui/imgui/imgui.h	/^    ImGuiMouseCursor_TextInput,         \/\/ When hovering over InputText, etc.$/;"	e	enum:ImGuiMouseCursor_
ImGuiNavDirSourceFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiNavDirSourceFlags; \/\/ flags: for GetNavInputAmount2d()         \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiNavDirSourceFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavDirSourceFlags_$/;"	g
ImGuiNavDirSourceFlags_Keyboard	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavDirSourceFlags_Keyboard     = 1 << 0,$/;"	e	enum:ImGuiNavDirSourceFlags_
ImGuiNavDirSourceFlags_PadDPad	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavDirSourceFlags_PadDPad      = 1 << 1,$/;"	e	enum:ImGuiNavDirSourceFlags_
ImGuiNavDirSourceFlags_PadLStick	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavDirSourceFlags_PadLStick    = 1 << 2$/;"	e	enum:ImGuiNavDirSourceFlags_
ImGuiNavFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiNavFlags;$/;"	t	typeref:typename:int
ImGuiNavFlags_	lib/cimgui/cimgui/cimgui.h	/^enum ImGuiNavFlags_$/;"	g
ImGuiNavFlags_EnableGamepad	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavFlags_EnableGamepad     = 1 << 1,   \/\/ Master gamepad navigation enable flag. This/;"	e	enum:ImGuiNavFlags_
ImGuiNavFlags_EnableKeyboard	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavFlags_EnableKeyboard    = 1 << 0,   \/\/ Master keyboard navigation enable flag. New/;"	e	enum:ImGuiNavFlags_
ImGuiNavFlags_MoveMouse	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavFlags_MoveMouse         = 1 << 2,   \/\/ Request navigation to allow moving the mous/;"	e	enum:ImGuiNavFlags_
ImGuiNavFlags_NoCaptureKeyboard	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavFlags_NoCaptureKeyboard = 1 << 3    \/\/ Do not set the io.WantCaptureKeyboard flag /;"	e	enum:ImGuiNavFlags_
ImGuiNavForward	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavForward$/;"	g
ImGuiNavForward_ForwardActive	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward_ForwardActive$/;"	e	enum:ImGuiNavForward
ImGuiNavForward_ForwardQueued	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward_ForwardQueued,$/;"	e	enum:ImGuiNavForward
ImGuiNavForward_None	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward_None,$/;"	e	enum:ImGuiNavForward
ImGuiNavHighlightFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiNavHighlightFlags; \/\/ flags: for RenderNavHighlight()          \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiNavHighlightFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiNavHighlightFlags_$/;"	g
ImGuiNavHighlightFlags_AlwaysDraw	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_AlwaysDraw   = 1 << 2,$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavHighlightFlags_NoRounding	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_NoRounding   = 1 << 3$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavHighlightFlags_TypeDefault	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_TypeDefault  = 1 << 0,$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavHighlightFlags_TypeThin	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavHighlightFlags_TypeThin     = 1 << 1,$/;"	e	enum:ImGuiNavHighlightFlags_
ImGuiNavInput	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiNavInput;          \/\/ enum: an input identifier for navigation \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiNavInput_	lib/cimgui/cimgui/cimgui.h	/^enum ImGuiNavInput_$/;"	g
ImGuiNavInput_	lib/cimgui/imgui/imgui.h	/^enum ImGuiNavInput_$/;"	g
ImGuiNavInput_Activate	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_Activate,      \/\/ activate \/ open \/ toggle \/ tweak value       \/\/ e.g. /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Activate	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Activate,      \/\/ activate \/ open \/ toggle \/ tweak value       \/\/ e.g. /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_COUNT	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_COUNT,$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_COUNT,$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Cancel	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_Cancel,        \/\/ cancel \/ close \/ exit                        \/\/ e.g. C/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Cancel	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Cancel,        \/\/ cancel \/ close \/ exit                        \/\/ e.g. C/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadDown	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_DpadDown,      \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadDown	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadDown,      \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadLeft	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_DpadLeft,      \/\/ move \/ tweak \/ resize window (w\/ PadMenu)    \/\/ e.g. /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadLeft	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadLeft,      \/\/ move \/ tweak \/ resize window (w\/ PadMenu)    \/\/ e.g. /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadRight	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_DpadRight,     \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadRight	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadRight,     \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadUp	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_DpadUp,        \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_DpadUp	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_DpadUp,        \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_FocusNext	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_FocusNext,     \/\/ prev window (w\/ PadMenu)                     \/\/ e.g. R1/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_FocusNext	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_FocusNext,     \/\/ prev window (w\/ PadMenu)                     \/\/ e.g. R1/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_FocusPrev	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_FocusPrev,     \/\/ next window (w\/ PadMenu)                     \/\/ e.g. L1/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_FocusPrev	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_FocusPrev,     \/\/ next window (w\/ PadMenu)                     \/\/ e.g. L1/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Input	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_Input,         \/\/ text input \/ on-screen keyboard              \/\/ e.g. Tr/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Input	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Input,         \/\/ text input \/ on-screen keyboard              \/\/ e.g. Tr/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_InternalStart_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_InternalStart_ = ImGuiNavInput_KeyMenu_$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_InternalStart_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_InternalStart_ = ImGuiNavInput_KeyMenu_$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyDown_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_KeyDown_,      \/\/ move down$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyDown_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyDown_,      \/\/ move down$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyLeft_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_KeyLeft_,      \/\/ move left                                    \/\/ = Arrow /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyLeft_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyLeft_,      \/\/ move left                                    \/\/ = Arrow /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyMenu_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_KeyMenu_,      \/\/ toggle menu                                  \/\/ = io.Key/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyMenu_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyMenu_,      \/\/ toggle menu                                  \/\/ = io.Key/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyRight_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_KeyRight_,     \/\/ move right$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyRight_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyRight_,     \/\/ move right$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyUp_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_KeyUp_,        \/\/ move up$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_KeyUp_	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_KeyUp_,        \/\/ move up$/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickDown	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_LStickDown,    \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickDown	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickDown,    \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickLeft	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_LStickLeft,    \/\/ scroll \/ move window (w\/ PadMenu)            \/\/ e.g. L/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickLeft	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickLeft,    \/\/ scroll \/ move window (w\/ PadMenu)            \/\/ e.g. L/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickRight	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_LStickRight,   \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickRight	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickRight,   \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickUp	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_LStickUp,      \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_LStickUp	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_LStickUp,      \/\/ $/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Menu	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_Menu,          \/\/ tap: toggle menu \/ hold: focus, move, resize \/\/ e.g. Sq/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_Menu	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_Menu,          \/\/ tap: toggle menu \/ hold: focus, move, resize \/\/ e.g. Sq/;"	e	enum:ImGuiNavInput_
ImGuiNavInput_TweakFast	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_TweakFast,     \/\/ faster tweaks                                \/\/ e.g. R1 /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_TweakFast	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_TweakFast,     \/\/ faster tweaks                                \/\/ e.g. R1 /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_TweakSlow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiNavInput_TweakSlow,     \/\/ slower tweaks                                \/\/ e.g. L1 /;"	e	enum:ImGuiNavInput_
ImGuiNavInput_TweakSlow	lib/cimgui/imgui/imgui.h	/^    ImGuiNavInput_TweakSlow,     \/\/ slower tweaks                                \/\/ e.g. L1 /;"	e	enum:ImGuiNavInput_
ImGuiNavMoveResult	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveResult() { Clear(); }$/;"	f	struct:ImGuiNavMoveResult
ImGuiNavMoveResult	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiNavMoveResult$/;"	s
ImGuiNextWindowData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowData()$/;"	f	struct:ImGuiNextWindowData
ImGuiNextWindowData	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiNextWindowData$/;"	s
ImGuiOnceUponAFrame	lib/cimgui/imgui/imgui.h	/^    ImGuiOnceUponAFrame() { RefFrame = -1; }$/;"	f	struct:ImGuiOnceUponAFrame
ImGuiOnceUponAFrame	lib/cimgui/imgui/imgui.h	/^struct ImGuiOnceUponAFrame$/;"	s
ImGuiPayload	lib/cimgui/cimgui/cimgui.h	/^struct ImGuiPayload$/;"	s
ImGuiPayload	lib/cimgui/imgui/imgui.h	/^    ImGuiPayload()  { Clear(); }$/;"	f	struct:ImGuiPayload
ImGuiPayload	lib/cimgui/imgui/imgui.h	/^struct ImGuiPayload$/;"	s
ImGuiPlotArrayGetterData	lib/cimgui/imgui/imgui.cpp	/^    ImGuiPlotArrayGetterData(const float* values, int stride) { Values = values; Stride = stride/;"	f	struct:ImGuiPlotArrayGetterData	file:
ImGuiPlotArrayGetterData	lib/cimgui/imgui/imgui.cpp	/^struct ImGuiPlotArrayGetterData$/;"	s	file:
ImGuiPlotType	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiPlotType$/;"	g
ImGuiPlotType_Histogram	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPlotType_Histogram$/;"	e	enum:ImGuiPlotType
ImGuiPlotType_Lines	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiPlotType_Lines,$/;"	e	enum:ImGuiPlotType
ImGuiPopupPositionPolicy	lib/cimgui/imgui/imgui.cpp	/^enum ImGuiPopupPositionPolicy$/;"	g	file:
ImGuiPopupPositionPolicy_ComboBox	lib/cimgui/imgui/imgui.cpp	/^    ImGuiPopupPositionPolicy_ComboBox$/;"	e	enum:ImGuiPopupPositionPolicy	file:
ImGuiPopupPositionPolicy_Default	lib/cimgui/imgui/imgui.cpp	/^    ImGuiPopupPositionPolicy_Default,$/;"	e	enum:ImGuiPopupPositionPolicy	file:
ImGuiPopupRef	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiPopupRef$/;"	s
ImGuiResizeGripDef	lib/cimgui/imgui/imgui.cpp	/^struct ImGuiResizeGripDef$/;"	s	file:
ImGuiSelectableFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiSelectableFlags;$/;"	t	typeref:typename:int
ImGuiSelectableFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiSelectableFlags;   \/\/ flags: for Selectable()                  \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiSelectableFlagsPrivate_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiSelectableFlagsPrivate_$/;"	g
ImGuiSelectableFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiSelectableFlags_$/;"	g
ImGuiSelectableFlags_AllowDoubleClick	lib/cimgui/cimgui/cimgui.h	/^    ImGuiSelectableFlags_AllowDoubleClick = 1 << 2$/;"	e	enum:__anon98a3ef990403
ImGuiSelectableFlags_AllowDoubleClick	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_AllowDoubleClick   = 1 << 2    \/\/ Generate press events on double cli/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_Disabled	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_Disabled           = 1 << 5,$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_DontClosePopups	lib/cimgui/cimgui/cimgui.h	/^    ImGuiSelectableFlags_DontClosePopups = 1 << 0,$/;"	e	enum:__anon98a3ef990403
ImGuiSelectableFlags_DontClosePopups	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_DontClosePopups    = 1 << 0,   \/\/ Clicking this don't close parent po/;"	e	enum:ImGuiSelectableFlags_
ImGuiSelectableFlags_DrawFillAvailWidth	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_DrawFillAvailWidth = 1 << 6$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_Menu	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_Menu               = 1 << 3,   \/\/ -> PressedOnClick$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_MenuItem	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSelectableFlags_MenuItem           = 1 << 4,   \/\/ -> PressedOnRelease$/;"	e	enum:ImGuiSelectableFlagsPrivate_
ImGuiSelectableFlags_SpanAllColumns	lib/cimgui/cimgui/cimgui.h	/^    ImGuiSelectableFlags_SpanAllColumns = 1 << 1,$/;"	e	enum:__anon98a3ef990403
ImGuiSelectableFlags_SpanAllColumns	lib/cimgui/imgui/imgui.h	/^    ImGuiSelectableFlags_SpanAllColumns     = 1 << 1,   \/\/ Selectable frame can span all colum/;"	e	enum:ImGuiSelectableFlags_
ImGuiSeparatorFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiSeparatorFlags;    \/\/ flags: for Separator() - internal        \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiSeparatorFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiSeparatorFlags_$/;"	g
ImGuiSeparatorFlags_Horizontal	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSeparatorFlags_Horizontal          = 1 << 0,   \/\/ Axis default to current layout type/;"	e	enum:ImGuiSeparatorFlags_
ImGuiSeparatorFlags_Vertical	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSeparatorFlags_Vertical            = 1 << 1$/;"	e	enum:ImGuiSeparatorFlags_
ImGuiSetCond_Always	lib/cimgui/imgui/imgui.h	/^    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_F/;"	e	enum:ImGuiCond_
ImGuiSetCond_Appearing	lib/cimgui/imgui/imgui.h	/^    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_F/;"	e	enum:ImGuiCond_
ImGuiSetCond_FirstUseEver	lib/cimgui/imgui/imgui.h	/^    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_F/;"	e	enum:ImGuiCond_
ImGuiSetCond_Once	lib/cimgui/imgui/imgui.h	/^    , ImGuiSetCond_Always = ImGuiCond_Always, ImGuiSetCond_Once = ImGuiCond_Once, ImGuiSetCond_F/;"	e	enum:ImGuiCond_
ImGuiSettingsHandler	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSettingsHandler() { memset(this, 0, sizeof(*this)); }$/;"	f	struct:ImGuiSettingsHandler
ImGuiSettingsHandler	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiSettingsHandler$/;"	s
ImGuiSizeCallback	lib/cimgui/cimgui/cimgui.h	/^typedef void (*ImGuiSizeCallback)(struct ImGuiSizeCallbackData *data);$/;"	t	typeref:typename:void (*)(struct ImGuiSizeCallbackData * data)
ImGuiSizeCallback	lib/cimgui/imgui/imgui.h	/^typedef void (*ImGuiSizeCallback)(ImGuiSizeCallbackData* data);$/;"	t	typeref:typename:void (*)(ImGuiSizeCallbackData * data)
ImGuiSizeCallbackData	lib/cimgui/cimgui/cimgui.h	/^struct ImGuiSizeCallbackData$/;"	s
ImGuiSizeCallbackData	lib/cimgui/imgui/imgui.h	/^struct ImGuiSizeCallbackData$/;"	s
ImGuiSliderFlags	lib/cimgui/imgui/imgui_internal.h	/^typedef int ImGuiSliderFlags;       \/\/ flags: for SliderBehavior()              \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiSliderFlags_	lib/cimgui/imgui/imgui_internal.h	/^enum ImGuiSliderFlags_$/;"	g
ImGuiSliderFlags_Vertical	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSliderFlags_Vertical               = 1 << 0$/;"	e	enum:ImGuiSliderFlags_
ImGuiStb	lib/cimgui/imgui/imgui.cpp	/^namespace ImGuiStb$/;"	n	file:
ImGuiStb	lib/cimgui/imgui/imgui_internal.h	/^namespace ImGuiStb$/;"	n
ImGuiStorage	lib/cimgui/imgui/imgui.h	/^struct ImGuiStorage$/;"	s
ImGuiStorage_Clear	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_Clear(struct ImGuiStorage *storage)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiStorage_Create	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API struct ImGuiStorage *ImGuiStorage_Create()$/;"	f	typeref:typename:CIMGUI_API struct ImGuiStorage *
ImGuiStorage_Destroy	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_Destroy(struct ImGuiStorage *storage)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiStorage_GetBool	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiStorage_GetBool(struct ImGuiStorage *storage, ImGuiID key, bool default_val/;"	f	typeref:typename:CIMGUI_API bool
ImGuiStorage_GetBoolRef	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool *ImGuiStorage_GetBoolRef(struct ImGuiStorage *storage, ImGuiID key, bool default/;"	f	typeref:typename:CIMGUI_API bool *
ImGuiStorage_GetFloat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float ImGuiStorage_GetFloat(struct ImGuiStorage *storage, ImGuiID key, float default_/;"	f	typeref:typename:CIMGUI_API float
ImGuiStorage_GetFloatRef	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float *ImGuiStorage_GetFloatRef(struct ImGuiStorage *storage, ImGuiID key, float defa/;"	f	typeref:typename:CIMGUI_API float *
ImGuiStorage_GetInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int ImGuiStorage_GetInt(struct ImGuiStorage *storage, ImGuiID key, int default_val)$/;"	f	typeref:typename:CIMGUI_API int
ImGuiStorage_GetIntRef	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int *ImGuiStorage_GetIntRef(struct ImGuiStorage *storage, ImGuiID key, int default_va/;"	f	typeref:typename:CIMGUI_API int *
ImGuiStorage_GetVoidPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void *ImGuiStorage_GetVoidPtr(struct ImGuiStorage *storage, ImGuiID key)$/;"	f	typeref:typename:CIMGUI_API void *
ImGuiStorage_GetVoidPtrRef	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void **ImGuiStorage_GetVoidPtrRef(struct ImGuiStorage *storage, ImGuiID key, void *de/;"	f	typeref:typename:CIMGUI_API void **
ImGuiStorage_SetAllInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetAllInt(struct ImGuiStorage *storage, int val)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiStorage_SetBool	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetBool(struct ImGuiStorage *storage, ImGuiID key, bool val)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiStorage_SetFloat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetFloat(struct ImGuiStorage *storage, ImGuiID key, float val)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiStorage_SetInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetInt(struct ImGuiStorage *storage, ImGuiID key, int val)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiStorage_SetVoidPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiStorage_SetVoidPtr(struct ImGuiStorage *storage, ImGuiID key, void *val)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiStyle	lib/cimgui/cimgui/cimgui.h	/^struct ImGuiStyle$/;"	s
ImGuiStyle	lib/cimgui/imgui/imgui.cpp	/^ImGuiStyle::ImGuiStyle()$/;"	f	class:ImGuiStyle
ImGuiStyle	lib/cimgui/imgui/imgui.h	/^struct ImGuiStyle$/;"	s
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, ImVec2 v)  { VarIdx = idx; BackupFloat[0] = v.x; BackupFloa/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, float v)   { VarIdx = idx; BackupFloat[0] = v; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleMod(ImGuiStyleVar idx, int v)     { VarIdx = idx; BackupInt[0] = v; }$/;"	f	struct:ImGuiStyleMod
ImGuiStyleMod	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiStyleMod$/;"	s
ImGuiStyleVar	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiStyleVar;$/;"	t	typeref:typename:int
ImGuiStyleVar	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiStyleVar;          \/\/ enum: a variable identifier for styling  \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiStyleVarInfo	lib/cimgui/imgui/imgui.cpp	/^struct ImGuiStyleVarInfo$/;"	s	file:
ImGuiStyleVar_	lib/cimgui/imgui/imgui.h	/^enum ImGuiStyleVar_$/;"	g
ImGuiStyleVar_Alpha	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_Alpha,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_Alpha	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_Alpha,               \/\/ float     Alpha$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ButtonTextAlign	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_ButtonTextAlign,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_ButtonTextAlign	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ButtonTextAlign,     \/\/ ImVec2    ButtonTextAlign$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_COUNT	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_COUNT$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ChildBorderSize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_ChildBorderSize,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_ChildBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ChildBorderSize,     \/\/ float     ChildBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ChildRounding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_ChildRounding,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_ChildRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ChildRounding,       \/\/ float     ChildRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ChildWindowRounding	lib/cimgui/imgui/imgui.h	/^    , ImGuiStyleVar_Count_ = ImGuiStyleVar_COUNT, ImGuiStyleVar_ChildWindowRounding = ImGuiStyle/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_Count_	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_Count_$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_Count_	lib/cimgui/imgui/imgui.h	/^    , ImGuiStyleVar_Count_ = ImGuiStyleVar_COUNT, ImGuiStyleVar_ChildWindowRounding = ImGuiStyle/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FrameBorderSize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_FrameBorderSize,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_FrameBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_FrameBorderSize,     \/\/ float     FrameBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FramePadding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_FramePadding,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_FramePadding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_FramePadding,        \/\/ ImVec2    FramePadding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_FrameRounding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_FrameRounding,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_FrameRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_FrameRounding,       \/\/ float     FrameRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_GrabMinSize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_GrabMinSize,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_GrabMinSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_GrabMinSize,         \/\/ float     GrabMinSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_GrabRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_GrabRounding,        \/\/ float     GrabRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_IndentSpacing	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_IndentSpacing,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_IndentSpacing	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_IndentSpacing,       \/\/ float     IndentSpacing$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ItemInnerSpacing	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_ItemInnerSpacing,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_ItemInnerSpacing	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ItemInnerSpacing,    \/\/ ImVec2    ItemInnerSpacing$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ItemSpacing	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_ItemSpacing,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_ItemSpacing	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ItemSpacing,         \/\/ ImVec2    ItemSpacing$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_PopupBorderSize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_PopupBorderSize,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_PopupBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_PopupBorderSize,     \/\/ float     PopupBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_PopupRounding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_PopupRounding,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_PopupRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_PopupRounding,       \/\/ float     PopupRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ScrollbarRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ScrollbarRounding,   \/\/ float     ScrollbarRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_ScrollbarSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_ScrollbarSize,       \/\/ float     ScrollbarSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowBorderSize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowBorderSize,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_WindowBorderSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowBorderSize,    \/\/ float     WindowBorderSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowMinSize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowMinSize,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_WindowMinSize	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowMinSize,       \/\/ ImVec2    WindowMinSize$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowPadding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowPadding,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_WindowPadding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowPadding,       \/\/ ImVec2    WindowPadding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowRounding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiStyleVar_WindowRounding,$/;"	e	enum:__anon98a3ef990703
ImGuiStyleVar_WindowRounding	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowRounding,      \/\/ float     WindowRounding$/;"	e	enum:ImGuiStyleVar_
ImGuiStyleVar_WindowTitleAlign	lib/cimgui/imgui/imgui.h	/^    ImGuiStyleVar_WindowTitleAlign,    \/\/ ImVec2    WindowTitleAlign$/;"	e	enum:ImGuiStyleVar_
ImGuiTextBuffer	lib/cimgui/imgui/imgui.h	/^    ImGuiTextBuffer()   { Buf.push_back(0); }$/;"	f	struct:ImGuiTextBuffer
ImGuiTextBuffer	lib/cimgui/imgui/imgui.h	/^struct ImGuiTextBuffer$/;"	s
ImGuiTextBuffer_Create	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API struct ImGuiTextBuffer *ImGuiTextBuffer_Create()$/;"	f	typeref:typename:CIMGUI_API struct ImGuiTextBuffer *
ImGuiTextBuffer_Destroy	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_Destroy(struct ImGuiTextBuffer *buffer)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextBuffer_appendf	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_appendf(struct ImGuiTextBuffer *buffer, const char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextBuffer_appendfv	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_appendfv(struct ImGuiTextBuffer *buffer, const char *fmt, va_lis/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextBuffer_begin	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API const char *ImGuiTextBuffer_begin(const struct ImGuiTextBuffer *buffer)$/;"	f	typeref:typename:CIMGUI_API const char *
ImGuiTextBuffer_c_str	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API const char *ImGuiTextBuffer_c_str(const struct ImGuiTextBuffer *buffer)$/;"	f	typeref:typename:CIMGUI_API const char *
ImGuiTextBuffer_clear	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextBuffer_clear(struct ImGuiTextBuffer *buffer)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextBuffer_empty	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextBuffer_empty(struct ImGuiTextBuffer *buffer)$/;"	f	typeref:typename:CIMGUI_API bool
ImGuiTextBuffer_end	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API const char *ImGuiTextBuffer_end(const struct ImGuiTextBuffer *buffer)$/;"	f	typeref:typename:CIMGUI_API const char *
ImGuiTextBuffer_index	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API char ImGuiTextBuffer_index(struct ImGuiTextBuffer *buffer, int i)$/;"	f	typeref:typename:CIMGUI_API char
ImGuiTextBuffer_size	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int ImGuiTextBuffer_size(const struct ImGuiTextBuffer *buffer)$/;"	f	typeref:typename:CIMGUI_API int
ImGuiTextEditCallback	lib/cimgui/cimgui/cimgui.h	/^typedef int (*ImGuiTextEditCallback)(struct ImGuiTextEditCallbackData *data);$/;"	t	typeref:typename:int (*)(struct ImGuiTextEditCallbackData * data)
ImGuiTextEditCallback	lib/cimgui/imgui/imgui.h	/^typedef int (*ImGuiTextEditCallback)(ImGuiTextEditCallbackData *data);$/;"	t	typeref:typename:int (*)(ImGuiTextEditCallbackData * data)
ImGuiTextEditCallbackData	lib/cimgui/cimgui/cimgui.h	/^struct ImGuiTextEditCallbackData$/;"	s
ImGuiTextEditCallbackData	lib/cimgui/imgui/imgui.h	/^struct ImGuiTextEditCallbackData$/;"	s
ImGuiTextEditCallbackData_DeleteChars	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextEditCallbackData_DeleteChars(struct ImGuiTextEditCallbackData *data, in/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextEditCallbackData_HasSelection	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextEditCallbackData_HasSelection(struct ImGuiTextEditCallbackData *data)$/;"	f	typeref:typename:CIMGUI_API bool
ImGuiTextEditCallbackData_InsertChars	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextEditCallbackData_InsertChars(struct ImGuiTextEditCallbackData *data, in/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextEditState	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextEditState()                            { memset(this, 0, sizeof(*this)); }$/;"	f	struct:ImGuiTextEditState
ImGuiTextEditState	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiTextEditState$/;"	s
ImGuiTextFilter	lib/cimgui/imgui/imgui.cpp	/^ImGuiTextFilter::ImGuiTextFilter(const char* default_filter)$/;"	f	class:ImGuiTextFilter
ImGuiTextFilter	lib/cimgui/imgui/imgui.h	/^struct ImGuiTextFilter$/;"	s
ImGuiTextFilter_Build	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_Build(struct ImGuiTextFilter *filter)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextFilter_Clear	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_Clear(struct ImGuiTextFilter *filter)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextFilter_Create	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API struct ImGuiTextFilter *ImGuiTextFilter_Create(const char *default_filter)$/;"	f	typeref:typename:CIMGUI_API struct ImGuiTextFilter *
ImGuiTextFilter_Destroy	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void ImGuiTextFilter_Destroy(struct ImGuiTextFilter *filter)$/;"	f	typeref:typename:CIMGUI_API void
ImGuiTextFilter_Draw	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_Draw(struct ImGuiTextFilter *filter, const char *label, float wi/;"	f	typeref:typename:CIMGUI_API bool
ImGuiTextFilter_GetInputBuf	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API const char *ImGuiTextFilter_GetInputBuf(struct ImGuiTextFilter *filter)$/;"	f	typeref:typename:CIMGUI_API const char *
ImGuiTextFilter_IsActive	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_IsActive(const struct ImGuiTextFilter *filter)$/;"	f	typeref:typename:CIMGUI_API bool
ImGuiTextFilter_PassFilter	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool ImGuiTextFilter_PassFilter(const struct ImGuiTextFilter *filter, const char *tex/;"	f	typeref:typename:CIMGUI_API bool
ImGuiTreeNodeFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiTreeNodeFlags;$/;"	t	typeref:typename:int
ImGuiTreeNodeFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiTreeNodeFlags;     \/\/ flags: for TreeNode*(),CollapsingHeader()\/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiTreeNodeFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiTreeNodeFlags_$/;"	g
ImGuiTreeNodeFlags_AllowItemOverlap	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_AllowItemOverlap = 1 << 2,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_AllowItemOverlap	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_AllowItemOverlap     = 1 << 2,   \/\/ Hit testing to allow subsequent wid/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_AllowOverlapMode	lib/cimgui/imgui/imgui.h	/^    , ImGuiTreeNodeFlags_AllowOverlapMode = ImGuiTreeNodeFlags_AllowItemOverlap$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Bullet	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Bullet = 1 << 9,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_Bullet	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Bullet               = 1 << 9,   \/\/ Display a bullet instead of arrow$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_CollapsingHeader	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_CollapsingHeader = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoAutoO/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_CollapsingHeader	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_CollapsingHeader     = ImGuiTreeNodeFlags_Framed | ImGuiTreeNodeFlags_NoA/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_DefaultOpen	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_DefaultOpen = 1 << 5,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_DefaultOpen	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_DefaultOpen          = 1 << 5,   \/\/ Default node to be open$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_FramePadding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_FramePadding = 1 << 10,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_FramePadding	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_FramePadding         = 1 << 10,  \/\/ Use FramePadding (even for an unfra/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Framed	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Framed = 1 << 1,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_Framed	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Framed               = 1 << 1,   \/\/ Full colored frame (e.g. for Collap/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Leaf	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Leaf = 1 << 8,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_Leaf	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Leaf                 = 1 << 8,   \/\/ No collapsing, no arrow (use as a c/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NavLeftJumpsBackHere	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NavLeftJumpsBackHere = 1 << 13,  \/\/ (WIP) Nav: left direction may move /;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NoAutoOpenOnLog	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_NoAutoOpenOnLog = 1 << 4,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_NoAutoOpenOnLog	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NoAutoOpenOnLog      = 1 << 4,   \/\/ Don't automatically and temporarily/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_NoTreePushOnOpen	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_NoTreePushOnOpen = 1 << 3,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_NoTreePushOnOpen	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_NoTreePushOnOpen     = 1 << 3,   \/\/ Don't do a TreePush() when open (e./;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_OpenOnArrow	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_OpenOnArrow = 1 << 7,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_OpenOnArrow	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_OpenOnArrow          = 1 << 7,   \/\/ Only open when clicking on the arro/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_OpenOnDoubleClick	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_OpenOnDoubleClick = 1 << 6,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_OpenOnDoubleClick	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_OpenOnDoubleClick    = 1 << 6,   \/\/ Need double-click to open node$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiTreeNodeFlags_Selected	lib/cimgui/cimgui/cimgui.h	/^    ImGuiTreeNodeFlags_Selected = 1 << 0,$/;"	e	enum:__anon98a3ef990303
ImGuiTreeNodeFlags_Selected	lib/cimgui/imgui/imgui.h	/^    ImGuiTreeNodeFlags_Selected             = 1 << 0,   \/\/ Draw as selected$/;"	e	enum:ImGuiTreeNodeFlags_
ImGuiWindow	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow::ImGuiWindow(ImGuiContext* context, const char* name)$/;"	f	class:ImGuiWindow
ImGuiWindow	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImGuiWindow$/;"	s
ImGuiWindowFlags	lib/cimgui/cimgui/cimgui.h	/^typedef int ImGuiWindowFlags;$/;"	t	typeref:typename:int
ImGuiWindowFlags	lib/cimgui/imgui/imgui.h	/^typedef int ImGuiWindowFlags;       \/\/ flags: for Begin*()                      \/\/ enum ImGu/;"	t	typeref:typename:int
ImGuiWindowFlags_	lib/cimgui/imgui/imgui.h	/^enum ImGuiWindowFlags_$/;"	g
ImGuiWindowFlags_AlwaysAutoResize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysAutoResize = 1 << 6,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_AlwaysAutoResize	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysAutoResize       = 1 << 6,   \/\/ Resize every window to its content /;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysHorizontalScrollbar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysHorizontalScrollbar = 1 << 15,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_AlwaysHorizontalScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysHorizontalScrollbar=1<< 15,  \/\/ Always show horizontal scrollbar (e/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysUseWindowPadding	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_AlwaysUseWindowPadding	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysUseWindowPadding = 1 << 16,  \/\/ Ensure child windows without border/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_AlwaysVerticalScrollbar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_AlwaysVerticalScrollbar = 1 << 14,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_AlwaysVerticalScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_AlwaysVerticalScrollbar= 1 << 14,  \/\/ Always show vertical scrollbar (eve/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildMenu	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_ChildMenu              = 1 << 28   \/\/ Don't use! For internal use by Begi/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ChildWindow	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_ChildWindow            = 1 << 24,  \/\/ Don't use! For internal use by Begi/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_HorizontalScrollbar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_HorizontalScrollbar = 1 << 11,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_HorizontalScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_HorizontalScrollbar    = 1 << 11,  \/\/ Allow horizontal scrollbar to appea/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_MenuBar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_MenuBar = 1 << 10,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_MenuBar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_MenuBar                = 1 << 10,  \/\/ Has a menu-bar$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Modal	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_Modal                  = 1 << 27,  \/\/ Don't use! For internal use by Begi/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NavFlattened	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NavFlattened           = 1 << 23,  \/\/ [BETA] Allow gamepad\/keyboard navi/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoBringToFrontOnFocus	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoBringToFrontOnFocus = 1 << 13,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoBringToFrontOnFocus	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoBringToFrontOnFocus  = 1 << 13,  \/\/ Disable bringing window to front wh/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoCollapse	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoCollapse = 1 << 5,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoCollapse	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoCollapse             = 1 << 5,   \/\/ Disable user collapsing window by d/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoFocusOnAppearing	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoFocusOnAppearing = 1 << 12,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoFocusOnAppearing	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoFocusOnAppearing     = 1 << 12,  \/\/ Disable taking focus when transitio/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoInputs	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoInputs = 1 << 9,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoInputs	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoInputs               = 1 << 9,   \/\/ Disable catching mouse or keyboard /;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoMove	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoMove = 1 << 2,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoMove	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoMove                 = 1 << 2,   \/\/ Disable user moving the window$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoNav	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoNav                  = ImGuiWindowFlags_NoNavInputs | ImGuiWindowFlags_No/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoNavFocus	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoNavFocus             = 1 << 19,  \/\/ No focusing toward this window with/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoNavInputs	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoNavInputs            = 1 << 18,  \/\/ No gamepad\/keyboard navigation wit/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoResize	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoResize = 1 << 1,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoResize	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoResize               = 1 << 1,   \/\/ Disable user resizing with the lowe/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoSavedSettings	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoSavedSettings = 1 << 8,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoSavedSettings	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoSavedSettings        = 1 << 8,   \/\/ Never load\/save settings in .ini f/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoScrollWithMouse	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoScrollWithMouse = 1 << 4,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoScrollWithMouse	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoScrollWithMouse      = 1 << 4,   \/\/ Disable user vertically scrolling w/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoScrollbar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoScrollbar = 1 << 3,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoScrollbar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoScrollbar            = 1 << 3,   \/\/ Disable scrollbars (window can stil/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_NoTitleBar	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_NoTitleBar = 1 << 0,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_NoTitleBar	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_NoTitleBar             = 1 << 0,   \/\/ Disable title-bar$/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Popup	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_Popup                  = 1 << 26,  \/\/ Don't use! For internal use by Begi/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_ResizeFromAnySide	lib/cimgui/cimgui/cimgui.h	/^    ImGuiWindowFlags_ResizeFromAnySide = 1 << 17,$/;"	e	enum:__anon98a3ef990103
ImGuiWindowFlags_ResizeFromAnySide	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_ResizeFromAnySide      = 1 << 17,  \/\/ [BETA] Enable resize from any corne/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowFlags_Tooltip	lib/cimgui/imgui/imgui.h	/^    ImGuiWindowFlags_Tooltip                = 1 << 25,  \/\/ Don't use! For internal use by Begi/;"	e	enum:ImGuiWindowFlags_
ImGuiWindowSettings	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindowSettings() { Name = NULL; Id = 0; Pos = Size = ImVec2(0,0); Collapsed = false; }$/;"	f	struct:ImGuiWindowSettings
ImGuiWindowSettings	lib/cimgui/imgui/imgui_internal.h	/^struct ImGuiWindowSettings$/;"	s
ImGui_ClipboardCallback	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_ClipboardCallback(uSynergyCookie cookie, enum uSynergyClipboardFormat format, const u/;"	f
ImGui_ConnectFunc	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^uSynergyBool ImGui_ConnectFunc(uSynergyCookie cookie)$/;"	f
ImGui_GetTimeFunc	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^uint32_t ImGui_GetTimeFunc()$/;"	f
ImGui_ImplA5_Init	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^bool ImGui_ImplA5_Init(ALLEGRO_DISPLAY* display)$/;"	f	typeref:typename:bool
ImGui_ImplA5_InvalidateDeviceObjects	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^void ImGui_ImplA5_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplA5_NewFrame	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^void ImGui_ImplA5_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplA5_ProcessEvent	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^bool ImGui_ImplA5_ProcessEvent(ALLEGRO_EVENT *ev)$/;"	f	typeref:typename:bool
ImGui_ImplA5_RenderDrawData	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^void ImGui_ImplA5_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplA5_Shutdown	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^void ImGui_ImplA5_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplDX10_CreateDeviceObjects	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^bool    ImGui_ImplDX10_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplDX10_CreateFontsTexture	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static void ImGui_ImplDX10_CreateFontsTexture()$/;"	f	typeref:typename:void	file:
ImGui_ImplDX10_Init	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^bool    ImGui_ImplDX10_Init(void* hwnd, ID3D10Device* device)$/;"	f	typeref:typename:bool
ImGui_ImplDX10_InvalidateDeviceObjects	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^void    ImGui_ImplDX10_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplDX10_NewFrame	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^void ImGui_ImplDX10_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplDX10_RenderDrawData	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^void ImGui_ImplDX10_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplDX10_Shutdown	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^void ImGui_ImplDX10_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplDX11_CreateDeviceObjects	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^bool    ImGui_ImplDX11_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplDX11_CreateFontsTexture	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static void ImGui_ImplDX11_CreateFontsTexture()$/;"	f	typeref:typename:void	file:
ImGui_ImplDX11_Init	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^bool    ImGui_ImplDX11_Init(void* hwnd, ID3D11Device* device, ID3D11DeviceContext* device_contex/;"	f	typeref:typename:bool
ImGui_ImplDX11_InvalidateDeviceObjects	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^void    ImGui_ImplDX11_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplDX11_NewFrame	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^void ImGui_ImplDX11_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplDX11_RenderDrawData	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^void ImGui_ImplDX11_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplDX11_Shutdown	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^void ImGui_ImplDX11_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplDX12_CreateDeviceObjects	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^bool    ImGui_ImplDX12_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplDX12_CreateFontsTexture	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static void ImGui_ImplDX12_CreateFontsTexture()$/;"	f	typeref:typename:void	file:
ImGui_ImplDX12_Init	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^bool    ImGui_ImplDX12_Init(void* hwnd, int num_frames_in_flight,$/;"	f	typeref:typename:bool
ImGui_ImplDX12_InvalidateDeviceObjects	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^void    ImGui_ImplDX12_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplDX12_NewFrame	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^void ImGui_ImplDX12_NewFrame(ID3D12GraphicsCommandList* command_list)$/;"	f	typeref:typename:void
ImGui_ImplDX12_RenderDrawData	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^void ImGui_ImplDX12_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplDX12_Shutdown	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^void ImGui_ImplDX12_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplDX9_CreateDeviceObjects	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^bool ImGui_ImplDX9_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplDX9_CreateFontsTexture	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static bool ImGui_ImplDX9_CreateFontsTexture()$/;"	f	typeref:typename:bool	file:
ImGui_ImplDX9_Init	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^bool    ImGui_ImplDX9_Init(void* hwnd, IDirect3DDevice9* device)$/;"	f	typeref:typename:bool
ImGui_ImplDX9_InvalidateDeviceObjects	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplDX9_NewFrame	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplDX9_RenderDrawData	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplDX9_Shutdown	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^void ImGui_ImplDX9_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL2_CreateDeviceObjects	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^bool ImGui_ImplGlfwGL2_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL2_GetClipboardText	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static const char* ImGui_ImplGlfwGL2_GetClipboardText(void* user_data)$/;"	f	typeref:typename:const char *	file:
ImGui_ImplGlfwGL2_Init	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^bool    ImGui_ImplGlfwGL2_Init(GLFWwindow* window, bool install_callbacks)$/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL2_InvalidateDeviceObjects	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void    ImGui_ImplGlfwGL2_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL2_NewFrame	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void ImGui_ImplGlfwGL2_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL2_RenderDrawData	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void ImGui_ImplGlfwGL2_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL2_SetClipboardText	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static void ImGui_ImplGlfwGL2_SetClipboardText(void* user_data, const char* text)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfwGL2_Shutdown	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void ImGui_ImplGlfwGL2_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_CreateDeviceObjects	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^bool ImGui_ImplGlfwGL3_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL3_CreateDeviceObjects	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^bool ImGui_ImplGlfwGL3_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL3_CreateFontsTexture	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^bool ImGui_ImplGlfwGL3_CreateFontsTexture()$/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL3_CreateFontsTexture	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^bool ImGui_ImplGlfwGL3_CreateFontsTexture()$/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL3_GetClipboardText	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static const char* ImGui_ImplGlfwGL3_GetClipboardText(void* user_data)$/;"	f	typeref:typename:const char *	file:
ImGui_ImplGlfwGL3_GetClipboardText	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static const char* ImGui_ImplGlfwGL3_GetClipboardText(void* user_data)$/;"	f	typeref:typename:const char *	file:
ImGui_ImplGlfwGL3_Init	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^bool    ImGui_ImplGlfwGL3_Init(GLFWwindow* window, bool install_callbacks, const char* glsl_vers/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL3_Init	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^bool    ImGui_ImplGlfwGL3_Init(GLFWwindow* window, bool install_callbacks, const char* glsl_vers/;"	f	typeref:typename:bool
ImGui_ImplGlfwGL3_InvalidateDeviceObjects	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void    ImGui_ImplGlfwGL3_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_InvalidateDeviceObjects	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void    ImGui_ImplGlfwGL3_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_NewFrame	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_NewFrame	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_RenderDrawData	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_RenderDrawData	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_SetClipboardText	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static void ImGui_ImplGlfwGL3_SetClipboardText(void* user_data, const char* text)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfwGL3_SetClipboardText	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static void ImGui_ImplGlfwGL3_SetClipboardText(void* user_data, const char* text)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfwGL3_Shutdown	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplGlfwGL3_Shutdown	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfwGL3_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplGlfwVulkan_CreateDeviceObjects	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^bool ImGui_ImplGlfwVulkan_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplGlfwVulkan_CreateFontsTexture	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^bool ImGui_ImplGlfwVulkan_CreateFontsTexture(VkCommandBuffer command_buffer)$/;"	f	typeref:typename:bool
ImGui_ImplGlfwVulkan_GetClipboardText	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static const char* ImGui_ImplGlfwVulkan_GetClipboardText(void* user_data)$/;"	f	typeref:typename:const char *	file:
ImGui_ImplGlfwVulkan_Init	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^bool    ImGui_ImplGlfwVulkan_Init(GLFWwindow* window, bool install_callbacks, ImGui_ImplGlfwVulk/;"	f	typeref:typename:bool
ImGui_ImplGlfwVulkan_Init_Data	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^struct ImGui_ImplGlfwVulkan_Init_Data$/;"	s
ImGui_ImplGlfwVulkan_InvalidateDeviceObjects	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void    ImGui_ImplGlfwVulkan_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplGlfwVulkan_InvalidateFontUploadObjects	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void    ImGui_ImplGlfwVulkan_InvalidateFontUploadObjects()$/;"	f	typeref:typename:void
ImGui_ImplGlfwVulkan_MemoryType	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static uint32_t ImGui_ImplGlfwVulkan_MemoryType(VkMemoryPropertyFlags properties, uint32_t type_/;"	f	typeref:typename:uint32_t	file:
ImGui_ImplGlfwVulkan_NewFrame	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfwVulkan_NewFrame()$/;"	f	typeref:typename:void
ImGui_ImplGlfwVulkan_Render	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfwVulkan_Render(VkCommandBuffer command_buffer)$/;"	f	typeref:typename:void
ImGui_ImplGlfwVulkan_RenderDrawData	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfwVulkan_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplGlfwVulkan_SetClipboardText	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static void ImGui_ImplGlfwVulkan_SetClipboardText(void* user_data, const char* text)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfwVulkan_Shutdown	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfwVulkan_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplGlfwVulkan_VkResult	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static void ImGui_ImplGlfwVulkan_VkResult(VkResult err)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfw_CharCallback	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void ImGui_ImplGlfw_CharCallback(GLFWwindow*, unsigned int c)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_CharCallback	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_CharCallback(GLFWwindow*, unsigned int c)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_CharCallback	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfw_CharCallback(GLFWwindow*, unsigned int c)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_CharCallback	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_CharCallback(GLFWwindow*, unsigned int c)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_InstallCallbacks	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static void ImGui_ImplGlfw_InstallCallbacks(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfw_InstallCallbacks	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static void ImGui_ImplGlfw_InstallCallbacks(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfw_InstallCallbacks	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static void ImGui_ImplGlfw_InstallCallbacks(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfw_InstallCallbacks	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static void ImGui_ImplGlfw_InstallCallbacks(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
ImGui_ImplGlfw_KeyCallback	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void ImGui_ImplGlfw_KeyCallback(GLFWwindow*, int key, int, int action, int mods)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_KeyCallback	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_KeyCallback(GLFWwindow*, int key, int, int action, int mods)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_KeyCallback	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfw_KeyCallback(GLFWwindow*, int key, int, int action, int mods)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_KeyCallback	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_KeyCallback(GLFWwindow*, int key, int, int action, int mods)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_MouseButtonCallback	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void ImGui_ImplGlfw_MouseButtonCallback(GLFWwindow*, int button, int action, int \/*mods*\/)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_MouseButtonCallback	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_MouseButtonCallback(GLFWwindow*, int button, int action, int \/*mods*\/)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_MouseButtonCallback	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfw_MouseButtonCallback(GLFWwindow*, int button, int action, int \/*mods*\/)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_MouseButtonCallback	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_MouseButtonCallback(GLFWwindow*, int button, int action, int \/*mods*\/)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_ScrollCallback	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^void ImGui_ImplGlfw_ScrollCallback(GLFWwindow*, double xoffset, double yoffset)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_ScrollCallback	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_ScrollCallback(GLFWwindow*, double xoffset, double yoffset)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_ScrollCallback	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^void ImGui_ImplGlfw_ScrollCallback(GLFWwindow*, double xoffset, double yoffset)$/;"	f	typeref:typename:void
ImGui_ImplGlfw_ScrollCallback	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^void ImGui_ImplGlfw_ScrollCallback(GLFWwindow*, double xoffset, double yoffset)$/;"	f	typeref:typename:void
ImGui_ImplIOS_CreateDeviceObjects	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^bool ImGui_ImplIOS_CreateDeviceObjects()$/;"	f
ImGui_ImplIOS_CreateDeviceObjects	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^bool ImGui_ImplIOS_CreateDeviceObjects();$/;"	f
ImGui_ImplIOS_CreateFontsTexture	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_ImplIOS_CreateFontsTexture()$/;"	f
ImGui_ImplIOS_RenderDrawLists	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^static void ImGui_ImplIOS_RenderDrawLists (ImDrawData *draw_data)$/;"	f
ImGui_ImplIOS_RenderDrawLists	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^static void ImGui_ImplIOS_RenderDrawLists (ImDrawData *draw_data);$/;"	f
ImGui_ImplSdlGL2_CreateDeviceObjects	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^bool ImGui_ImplSdlGL2_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplSdlGL2_GetClipboardText	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^static const char* ImGui_ImplSdlGL2_GetClipboardText(void*)$/;"	f	typeref:typename:const char *	file:
ImGui_ImplSdlGL2_Init	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^bool    ImGui_ImplSdlGL2_Init(SDL_Window* window)$/;"	f	typeref:typename:bool
ImGui_ImplSdlGL2_InvalidateDeviceObjects	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^void    ImGui_ImplSdlGL2_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplSdlGL2_NewFrame	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^void ImGui_ImplSdlGL2_NewFrame(SDL_Window *window)$/;"	f	typeref:typename:void
ImGui_ImplSdlGL2_ProcessEvent	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^bool ImGui_ImplSdlGL2_ProcessEvent(SDL_Event* event)$/;"	f	typeref:typename:bool
ImGui_ImplSdlGL2_RenderDrawData	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^void ImGui_ImplSdlGL2_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplSdlGL2_SetClipboardText	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^static void ImGui_ImplSdlGL2_SetClipboardText(void*, const char* text)$/;"	f	typeref:typename:void	file:
ImGui_ImplSdlGL2_Shutdown	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^void ImGui_ImplSdlGL2_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplSdlGL3_CreateDeviceObjects	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^bool ImGui_ImplSdlGL3_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_ImplSdlGL3_CreateFontsTexture	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^void ImGui_ImplSdlGL3_CreateFontsTexture()$/;"	f	typeref:typename:void
ImGui_ImplSdlGL3_GetClipboardText	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static const char* ImGui_ImplSdlGL3_GetClipboardText(void*)$/;"	f	typeref:typename:const char *	file:
ImGui_ImplSdlGL3_Init	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^bool    ImGui_ImplSdlGL3_Init(SDL_Window* window, const char* glsl_version)$/;"	f	typeref:typename:bool
ImGui_ImplSdlGL3_InvalidateDeviceObjects	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^void    ImGui_ImplSdlGL3_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_ImplSdlGL3_NewFrame	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^void ImGui_ImplSdlGL3_NewFrame(SDL_Window* window)$/;"	f	typeref:typename:void
ImGui_ImplSdlGL3_ProcessEvent	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^bool ImGui_ImplSdlGL3_ProcessEvent(SDL_Event* event)$/;"	f	typeref:typename:bool
ImGui_ImplSdlGL3_RenderDrawData	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^void ImGui_ImplSdlGL3_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_ImplSdlGL3_SetClipboardText	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static void ImGui_ImplSdlGL3_SetClipboardText(void*, const char* text)$/;"	f	typeref:typename:void	file:
ImGui_ImplSdlGL3_Shutdown	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^void ImGui_ImplSdlGL3_Shutdown()$/;"	f	typeref:typename:void
ImGui_ImplWin32_UpdateMouseCursor	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static bool ImGui_ImplWin32_UpdateMouseCursor()$/;"	f	typeref:typename:bool	file:
ImGui_ImplWin32_UpdateMouseCursor	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static bool ImGui_ImplWin32_UpdateMouseCursor()$/;"	f	typeref:typename:bool	file:
ImGui_ImplWin32_UpdateMouseCursor	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static bool ImGui_ImplWin32_UpdateMouseCursor()$/;"	f	typeref:typename:bool	file:
ImGui_ImplWin32_UpdateMouseCursor	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static bool ImGui_ImplWin32_UpdateMouseCursor()$/;"	f	typeref:typename:bool	file:
ImGui_ImplWin32_WndProcHandler	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^IMGUI_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lPar/;"	f	typeref:typename:IMGUI_API LRESULT
ImGui_ImplWin32_WndProcHandler	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^IMGUI_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lPar/;"	f	typeref:typename:IMGUI_API LRESULT
ImGui_ImplWin32_WndProcHandler	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^IMGUI_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lPar/;"	f	typeref:typename:IMGUI_API LRESULT
ImGui_ImplWin32_WndProcHandler	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^IMGUI_API LRESULT ImGui_ImplWin32_WndProcHandler(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lPar/;"	f	typeref:typename:IMGUI_API LRESULT
ImGui_JoystickCallback	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_JoystickCallback(uSynergyCookie cookie, uint8_t joyNum, uint16_t buttons, int8_t left/;"	f
ImGui_KeyboardCallback	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_KeyboardCallback(uSynergyCookie cookie, uint16_t key,$/;"	f
ImGui_Marmalade_CharCallback	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^int32 ImGui_Marmalade_CharCallback(void* SystemData, void* userData)$/;"	f	typeref:typename:int32
ImGui_Marmalade_CreateDeviceObjects	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^bool ImGui_Marmalade_CreateDeviceObjects()$/;"	f	typeref:typename:bool
ImGui_Marmalade_GetClipboardText	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static const char* ImGui_Marmalade_GetClipboardText(void* \/*user_data*\/)$/;"	f	typeref:typename:const char *	file:
ImGui_Marmalade_Init	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^bool    ImGui_Marmalade_Init(bool install_callbacks)$/;"	f	typeref:typename:bool
ImGui_Marmalade_InvalidateDeviceObjects	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^void    ImGui_Marmalade_InvalidateDeviceObjects()$/;"	f	typeref:typename:void
ImGui_Marmalade_KeyCallback	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^int32 ImGui_Marmalade_KeyCallback(void* SystemData, void* userData)$/;"	f	typeref:typename:int32
ImGui_Marmalade_NewFrame	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^void ImGui_Marmalade_NewFrame()$/;"	f	typeref:typename:void
ImGui_Marmalade_PointerButtonEventCallback	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^int32 ImGui_Marmalade_PointerButtonEventCallback(void* SystemData, void* pUserData)$/;"	f	typeref:typename:int32
ImGui_Marmalade_RenderDrawData	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^void ImGui_Marmalade_RenderDrawData(ImDrawData* draw_data)$/;"	f	typeref:typename:void
ImGui_Marmalade_SetClipboardText	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static void ImGui_Marmalade_SetClipboardText(void* \/*user_data*\/, const char* text)$/;"	f	typeref:typename:void	file:
ImGui_Marmalade_Shutdown	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^void ImGui_Marmalade_Shutdown()$/;"	f	typeref:typename:void
ImGui_MouseCallback	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_MouseCallback(uSynergyCookie cookie, uint16_t x, uint16_t y, int16_t wheelX, int16_t /;"	f
ImGui_RecvFunc	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^uSynergyBool ImGui_RecvFunc(uSynergyCookie cookie, uint8_t *buffer, int maxLength, int* outLengt/;"	f
ImGui_ScreenActiveCallback	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_ScreenActiveCallback(uSynergyCookie cookie, uSynergyBool active)$/;"	f
ImGui_SendFunc	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^uSynergyBool ImGui_SendFunc(uSynergyCookie cookie, const uint8_t *buffer, int length)$/;"	f
ImGui_SleepFunc	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_SleepFunc(uSynergyCookie cookie, int timeMs)$/;"	f
ImGui_TraceFunc	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^void ImGui_TraceFunc(uSynergyCookie cookie, const char *text)$/;"	f
ImHash	lib/cimgui/imgui/imgui.cpp	/^ImU32 ImHash(const void* data, int data_size, ImU32 seed)$/;"	f	typeref:typename:ImU32
ImInvLength	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImInvLength(const ImVec2& lhs, float fail_value)           { float d = lhs./;"	f	typeref:typename:float
ImIsPowerOfTwo	lib/cimgui/imgui/imgui_internal.h	/^static inline bool      ImIsPowerOfTwo(int v)           { return v != 0 && (v & (v - 1)) == 0; }$/;"	f	typeref:typename:bool
ImLengthSqr	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImLengthSqr(const ImVec2& lhs)                             { return lhs.x*l/;"	f	typeref:typename:float
ImLengthSqr	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImLengthSqr(const ImVec4& lhs)                             { return lhs.x*l/;"	f	typeref:typename:float
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, const ImVec2& t)  { return ImVec2(/;"	f	typeref:typename:ImVec2
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImLerp(const ImVec2& a, const ImVec2& b, float t)          { return ImVec2(/;"	f	typeref:typename:ImVec2
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 ImLerp(const ImVec4& a, const ImVec4& b, float t)          { return ImVec4(/;"	f	typeref:typename:ImVec4
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImLerp(float a, float b, float t)                          { return a + (b /;"	f	typeref:typename:float
ImLerp	lib/cimgui/imgui/imgui_internal.h	/^static inline int    ImLerp(int a, int b, float t)                              { return (int)(a/;"	f	typeref:typename:int
ImLineClosestPoint	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImLineClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& p)$/;"	f	typeref:typename:ImVec2
ImLinearSweep	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImLinearSweep(float current, float target, float speed)    { if (current < /;"	f	typeref:typename:float
ImMax	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImMax(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(/;"	f	typeref:typename:ImVec2
ImMax	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImMax(float lhs, float rhs)                                { return lhs >= /;"	f	typeref:typename:float
ImMax	lib/cimgui/imgui/imgui_internal.h	/^static inline int    ImMax(int lhs, int rhs)                                    { return lhs >= /;"	f	typeref:typename:int
ImMin	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImMin(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(/;"	f	typeref:typename:ImVec2
ImMin	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImMin(float lhs, float rhs)                                { return lhs < r/;"	f	typeref:typename:float
ImMin	lib/cimgui/imgui/imgui_internal.h	/^static inline int    ImMin(int lhs, int rhs)                                    { return lhs < r/;"	f	typeref:typename:int
ImMul	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImMul(const ImVec2& lhs, const ImVec2& rhs)                { return ImVec2(/;"	f	typeref:typename:ImVec2
ImNewDummy	lib/cimgui/imgui/imgui.h	/^struct ImNewDummy {};$/;"	s
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect()                                        : Min(FLT_MAX,FLT_MAX), Max(-FLT_MAX,-FLT_MA/;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect(const ImVec2& min, const ImVec2& max)    : Min(min), Max(max)                        /;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect(const ImVec4& v)                         : Min(v.x, v.y), Max(v.z, v.w)              /;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect(float x1, float y1, float x2, float y2)  : Min(x1, y1), Max(x2, y2)                  /;"	f	struct:ImRect
ImRect	lib/cimgui/imgui/imgui_internal.h	/^struct IMGUI_API ImRect$/;"	s
ImRotate	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 ImRotate(const ImVec2& v, float cos_a, float sin_a)        { return ImVec2(/;"	f	typeref:typename:ImVec2
ImSaturate	lib/cimgui/imgui/imgui_internal.h	/^static inline float  ImSaturate(float f)                                        { return (f < 0./;"	f	typeref:typename:float
ImStrbolW	lib/cimgui/imgui/imgui.cpp	/^const ImWchar* ImStrbolW(const ImWchar* buf_mid_line, const ImWchar* buf_begin) \/\/ find beginn/;"	f	typeref:typename:const ImWchar *
ImStrchrRange	lib/cimgui/imgui/imgui.cpp	/^const char* ImStrchrRange(const char* str, const char* str_end, char c)$/;"	f	typeref:typename:const char *
ImStrdup	lib/cimgui/imgui/imgui.cpp	/^char* ImStrdup(const char *str)$/;"	f	typeref:typename:char *
ImStricmp	lib/cimgui/imgui/imgui.cpp	/^int ImStricmp(const char* str1, const char* str2)$/;"	f	typeref:typename:int
ImStristr	lib/cimgui/imgui/imgui.cpp	/^const char* ImStristr(const char* haystack, const char* haystack_end, const char* needle, const /;"	f	typeref:typename:const char *
ImStrlenW	lib/cimgui/imgui/imgui.cpp	/^int ImStrlenW(const ImWchar* str)$/;"	f	typeref:typename:int
ImStrncpy	lib/cimgui/imgui/imgui.cpp	/^void ImStrncpy(char* dst, const char* src, size_t count)$/;"	f	typeref:typename:void
ImStrnicmp	lib/cimgui/imgui/imgui.cpp	/^int ImStrnicmp(const char* str1, const char* str2, size_t count)$/;"	f	typeref:typename:int
ImSwap	lib/cimgui/imgui/imgui_internal.h	/^static inline void   ImSwap(float& a, float& b)                                 { float tmp = a;/;"	f	typeref:typename:void
ImSwap	lib/cimgui/imgui/imgui_internal.h	/^static inline void   ImSwap(int& a, int& b)                                     { int tmp = a; a/;"	f	typeref:typename:void
ImTextCharFromUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextCharFromUtf8(unsigned int* out_char, const char* in_text, const char* in_text_end)$/;"	f	typeref:typename:int
ImTextCharToUtf8	lib/cimgui/imgui/imgui.cpp	/^static inline int ImTextCharToUtf8(char* buf, int buf_size, unsigned int c)$/;"	f	typeref:typename:int	file:
ImTextCountCharsFromUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextCountCharsFromUtf8(const char* in_text, const char* in_text_end)$/;"	f	typeref:typename:int
ImTextCountUtf8BytesFromChar	lib/cimgui/imgui/imgui.cpp	/^static inline int ImTextCountUtf8BytesFromChar(unsigned int c)$/;"	f	typeref:typename:int	file:
ImTextCountUtf8BytesFromStr	lib/cimgui/imgui/imgui.cpp	/^int ImTextCountUtf8BytesFromStr(const ImWchar* in_text, const ImWchar* in_text_end)$/;"	f	typeref:typename:int
ImTextStrFromUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextStrFromUtf8(ImWchar* buf, int buf_size, const char* in_text, const char* in_text_end, /;"	f	typeref:typename:int
ImTextStrToUtf8	lib/cimgui/imgui/imgui.cpp	/^int ImTextStrToUtf8(char* buf, int buf_size, const ImWchar* in_text, const ImWchar* in_text_end)$/;"	f	typeref:typename:int
ImTextureID	lib/cimgui/cimgui/cimgui.h	/^typedef void *ImTextureID;$/;"	t	typeref:typename:void *
ImTextureID	lib/cimgui/imgui/imgui.h	/^typedef void* ImTextureID;          \/\/ User data to identify a texture (this is whatever to yo/;"	t	typeref:typename:void *
ImTriangleBarycentricCoords	lib/cimgui/imgui/imgui.cpp	/^void ImTriangleBarycentricCoords(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2/;"	f	typeref:typename:void
ImTriangleClosestPoint	lib/cimgui/imgui/imgui.cpp	/^ImVec2 ImTriangleClosestPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p/;"	f	typeref:typename:ImVec2
ImTriangleContainsPoint	lib/cimgui/imgui/imgui.cpp	/^bool ImTriangleContainsPoint(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& p)$/;"	f	typeref:typename:bool
ImU32	lib/cimgui/cimgui/cimgui.h	/^typedef unsigned int ImU32;$/;"	t	typeref:typename:unsigned int
ImU32	lib/cimgui/imgui/imgui.h	/^typedef unsigned int ImU32;         \/\/ 32-bit unsigned integer (typically used to store packed/;"	t	typeref:typename:unsigned int
ImU64	lib/cimgui/cimgui/cimgui.h	/^typedef unsigned __int64 ImU64;$/;"	t	typeref:typename:unsigned __int64
ImU64	lib/cimgui/cimgui/cimgui.h	/^typedef unsigned long long ImU64;$/;"	t	typeref:typename:unsigned long long
ImU64	lib/cimgui/imgui/imgui.h	/^typedef unsigned __int64 ImU64;     \/\/ 64-bit unsigned integer$/;"	t	typeref:typename:unsigned __int64
ImU64	lib/cimgui/imgui/imgui.h	/^typedef unsigned long long ImU64;   \/\/ 64-bit unsigned integer$/;"	t	typeref:typename:unsigned long long
ImUpperPowerOfTwo	lib/cimgui/imgui/imgui_internal.h	/^static inline int       ImUpperPowerOfTwo(int v)        { v--; v |= v >> 1; v |= v >> 2; v |= v /;"	f	typeref:typename:int
ImVec2	lib/cimgui/cimgui/cimgui.h	/^struct ImVec2$/;"	s
ImVec2	lib/cimgui/imgui/imgui.h	/^    ImVec2() { x = y = 0.0f; }$/;"	f	struct:ImVec2
ImVec2	lib/cimgui/imgui/imgui.h	/^    ImVec2(float _x, float _y) { x = _x; y = _y; }$/;"	f	struct:ImVec2
ImVec2	lib/cimgui/imgui/imgui.h	/^struct ImVec2$/;"	s
ImVec4	lib/cimgui/cimgui/cimgui.h	/^struct ImVec4$/;"	s
ImVec4	lib/cimgui/imgui/imgui.h	/^    ImVec4() { x = y = z = w = 0.0f; }$/;"	f	struct:ImVec4
ImVec4	lib/cimgui/imgui/imgui.h	/^    ImVec4(float _x, float _y, float _z, float _w) { x = _x; y = _y; z = _z; w = _w; }$/;"	f	struct:ImVec4
ImVec4	lib/cimgui/imgui/imgui.h	/^struct ImVec4$/;"	s
ImVector	lib/cimgui/imgui/imgui.h	/^    inline ImVector()           { Size = Capacity = 0; Data = NULL; }$/;"	f	class:ImVector
ImVector	lib/cimgui/imgui/imgui.h	/^    inline ImVector(const ImVector<T>& src)                     { Size = Capacity = 0; Data = NU/;"	f	class:ImVector
ImVector	lib/cimgui/imgui/imgui.h	/^class ImVector$/;"	c
ImWchar	lib/cimgui/cimgui/cimgui.h	/^typedef unsigned short ImWchar;$/;"	t	typeref:typename:unsigned short
ImWchar	lib/cimgui/imgui/imgui.h	/^typedef unsigned short ImWchar;     \/\/ Character for keyboard input\/display$/;"	t	typeref:typename:unsigned short
Image	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Image(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, const ImVe/;"	f	class:ImGui	typeref:typename:void
ImageButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ImageButton(ImTextureID user_texture_id, const ImVec2& size, const ImVec2& uv0, cons/;"	f	class:ImGui	typeref:typename:bool
ImeSetInputScreenPosFn	lib/cimgui/cimgui/cimgui.h	/^    void (*ImeSetInputScreenPosFn)(int x, int y);$/;"	m	struct:ImGuiIO	typeref:typename:void (*)(int x,int y)
ImeSetInputScreenPosFn	lib/cimgui/imgui/imgui.h	/^    void        (*ImeSetInputScreenPosFn)(int x, int y);$/;"	m	struct:ImGuiIO	typeref:typename:void (*)(int x,int y)
ImeSetInputScreenPosFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static void ImeSetInputScreenPosFn_DefaultImpl(int x, int y)$/;"	f	typeref:typename:void	file:
ImeSetInputScreenPosFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static void ImeSetInputScreenPosFn_DefaultImpl(int, int) {}$/;"	f	typeref:typename:void	file:
ImeWindowHandle	lib/cimgui/cimgui/cimgui.h	/^    void *ImeWindowHandle;$/;"	m	struct:ImGuiIO	typeref:typename:void *
ImeWindowHandle	lib/cimgui/imgui/imgui.h	/^    void*       ImeWindowHandle;            \/\/ (Windows) Set this to your HWND to get automati/;"	m	struct:ImGuiIO	typeref:typename:void *
Imgui_ImplA5_CreateDeviceObjects	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^bool Imgui_ImplA5_CreateDeviceObjects()$/;"	f	typeref:typename:bool
Indent	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Indent(float indent_w)$/;"	f	class:ImGui	typeref:typename:void
IndentSpacing	lib/cimgui/cimgui/cimgui.h	/^    float IndentSpacing;$/;"	m	struct:ImGuiStyle	typeref:typename:float
IndentSpacing	lib/cimgui/imgui/imgui.h	/^    float       IndentSpacing;              \/\/ Horizontal indentation when e.g. entering a tre/;"	m	struct:ImGuiStyle	typeref:typename:float
IndentX	lib/cimgui/imgui/imgui_internal.h	/^    float                   IndentX;                \/\/ Indentation \/ start position from left/;"	m	struct:ImGuiDrawContext	typeref:typename:float
IndexAdvanceX	lib/cimgui/imgui/imgui.h	/^    ImVector<float>             IndexAdvanceX;      \/\/              \/\/ Sparse. Glyphs->Advan/;"	m	struct:ImFont	typeref:typename:ImVector<float>
IndexBuffer	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10Buffer *	file:
IndexBuffer	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11Buffer *	file:
IndexBufferFormat	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        DXGI_FORMAT                 IndexBufferFormat;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:DXGI_FORMAT	file:
IndexBufferFormat	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        DXGI_FORMAT                 IndexBufferFormat;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:DXGI_FORMAT	file:
IndexBufferOffset	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:UINT	file:
IndexBufferOffset	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
IndexBufferSize	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^    int IndexBufferSize;$/;"	m	struct:FrameResources	typeref:typename:int	file:
IndexLookup	lib/cimgui/imgui/imgui.h	/^    ImVector<unsigned short>    IndexLookup;        \/\/              \/\/ Sparse. Index glyphs /;"	m	struct:ImFont	typeref:typename:ImVector<unsigned short>
Info	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        FontInfo        Info;               \/\/ Font descriptor of the current font.$/;"	m	struct:__anon71f5b57f0110::FreeTypeFont	typeref:typename:FontInfo	file:
IniFilename	lib/cimgui/cimgui/cimgui.h	/^    CONST char *IniFilename;$/;"	m	struct:ImGuiIO	typeref:typename:CONST char *
IniFilename	lib/cimgui/imgui/imgui.h	/^    const char*   IniFilename;              \/\/ = "imgui.ini"        \/\/ Path to .ini file. NU/;"	m	struct:ImGuiIO	typeref:typename:const char *
IniSavingRate	lib/cimgui/cimgui/cimgui.h	/^    float IniSavingRate;$/;"	m	struct:ImGuiIO	typeref:typename:float
IniSavingRate	lib/cimgui/imgui/imgui.h	/^    float         IniSavingRate;            \/\/ = 5.0f               \/\/ Maximum time between /;"	m	struct:ImGuiIO	typeref:typename:float
Init	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    bool FreeTypeFont::Init(const ImFontConfig& cfg, unsigned int extra_user_flags)$/;"	f	class:__anon71f5b57f0110::FreeTypeFont	typeref:typename:bool
Init	src/App.c	/^Init() {$/;"	f	typeref:typename:void	file:
Init	src/App.h	/^	void (*Init)();$/;"	m	struct:AApp	typeref:typename:void (*)()
Init	src/Drawable.c	/^Init(Drawable *outDrawable) {$/;"	f	typeref:typename:void	file:
Init	src/Drawable.h	/^	void (*Init   )(Drawable* outDrawable);$/;"	m	struct:ADrawable	typeref:typename:void (*)(Drawable * outDrawable)
Init	src/Gui.c	/^Init(GLFWwindow* win) {$/;"	f	typeref:typename:void	file:
Init	src/Gui.h	/^	void (*Init   )();$/;"	m	struct:AGui	typeref:typename:void (*)()
Init	src/Scene.c	/^Init(Scene* outScene){$/;"	f	typeref:typename:void	file:
Init	src/Scene.h	/^	void   (*Init     )(Scene*);$/;"	m	struct:AScene	typeref:typename:void (*)(Scene *)
Init	src/Shader.c	/^Init(Shader* outShader, char* name) {$/;"	f	typeref:typename:void	file:
Init	src/Shader.h	/^   void    (*Init   )(Shader*, char*);$/;"	m	struct:AShader	typeref:typename:void (*)(Shader *,char *)
Init	src/Shape.c	/^Init(Shape* outShape) {$/;"	f	typeref:typename:void	file:
Init	src/Shape.h	/^	void   (*Init   )(Shape*);$/;"	m	struct:AShape	typeref:typename:void (*)(Shape *)
InitPlane	src/Shape.c	/^InitPlane(Shape* outShape) {$/;"	f	typeref:typename:void	file:
InitialText	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<char>      InitialText;                \/\/ backup of end-user buffer at the time o/;"	m	struct:ImGuiTextEditState	typeref:typename:ImVector<char>
Initialize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Initialize(ImGuiContext* context)$/;"	f	class:ImGui	typeref:typename:void
Initialized	lib/cimgui/imgui/imgui_internal.h	/^    bool                    Initialized;$/;"	m	struct:ImGuiContext	typeref:typename:bool
InnerClipRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  InnerRect, InnerClipRect;$/;"	m	struct:ImGuiWindow	typeref:typename:ImRect
InnerDir	lib/cimgui/imgui/imgui.cpp	/^    ImVec2           InnerDir;$/;"	m	struct:ImGuiResizeGripDef	typeref:typename:ImVec2	file:
InnerRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  InnerRect, InnerClipRect;$/;"	m	struct:ImGuiWindow	typeref:typename:ImRect
InputBuf	lib/cimgui/imgui/imgui.h	/^    char                InputBuf[256];$/;"	m	struct:ImGuiTextFilter	typeref:typename:char[256]
InputBuf	lib/cimgui/imgui/imgui_demo.cpp	/^    char                  InputBuf[256];$/;"	m	struct:ExampleAppConsole	typeref:typename:char[256]	file:
InputCharacters	lib/cimgui/cimgui/cimgui.h	/^    ImWchar InputCharacters[16 + 1];$/;"	m	struct:ImGuiIO	typeref:typename:ImWchar[]
InputCharacters	lib/cimgui/imgui/imgui.h	/^    ImWchar     InputCharacters[16+1];          \/\/ List of characters input (translated by use/;"	m	struct:ImGuiIO	typeref:typename:ImWchar[]
InputDouble	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputDouble(const char* label, double* v, double step, double step_fast, const char*/;"	f	class:ImGui	typeref:typename:bool
InputFloat	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputFloat(const char* label, float* v, float step, float step_fast, int decimal_pre/;"	f	class:ImGui	typeref:typename:bool
InputFloat2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputFloat2(const char* label, float v[2], int decimal_precision, ImGuiInputTextFlag/;"	f	class:ImGui	typeref:typename:bool
InputFloat3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputFloat3(const char* label, float v[3], int decimal_precision, ImGuiInputTextFlag/;"	f	class:ImGui	typeref:typename:bool
InputFloat4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputFloat4(const char* label, float v[4], int decimal_precision, ImGuiInputTextFlag/;"	f	class:ImGui	typeref:typename:bool
InputFloatN	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputFloatN(const char* label, float* v, int components, int decimal_precision, ImGu/;"	f	class:ImGui	typeref:typename:bool
InputInt	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputInt(const char* label, int* v, int step, int step_fast, ImGuiInputTextFlags ext/;"	f	class:ImGui	typeref:typename:bool
InputInt2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputInt2(const char* label, int v[2], ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui	typeref:typename:bool
InputInt3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputInt3(const char* label, int v[3], ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui	typeref:typename:bool
InputInt4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputInt4(const char* label, int v[4], ImGuiInputTextFlags extra_flags)$/;"	f	class:ImGui	typeref:typename:bool
InputIntN	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputIntN(const char* label, int* v, int components, ImGuiInputTextFlags extra_flags/;"	f	class:ImGui	typeref:typename:bool
InputLayout	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10InputLayout*          InputLayout;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10InputLayout *	file:
InputLayout	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11InputLayout*          InputLayout;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11InputLayout *	file:
InputScalarAsWidgetReplacement	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputScalarAsWidgetReplacement(const ImRect& aabb, const char* label, ImGuiDataType /;"	f	class:ImGui	typeref:typename:bool
InputScalarEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputScalarEx(const char* label, ImGuiDataType data_type, void* data_ptr, void* step/;"	f	class:ImGui	typeref:typename:bool
InputText	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputText(const char* label, char* buf, size_t buf_size, ImGuiInputTextFlags flags, /;"	f	class:ImGui	typeref:typename:bool
InputTextCalcTextLenAndLineCount	lib/cimgui/imgui/imgui.cpp	/^static int InputTextCalcTextLenAndLineCount(const char* text_begin, const char** out_text_end)$/;"	f	typeref:typename:int	file:
InputTextCalcTextSizeW	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 InputTextCalcTextSizeW(const ImWchar* text_begin, const ImWchar* text_end, const I/;"	f	typeref:typename:ImVec2	file:
InputTextEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputTextEx(const char* label, char* buf, int buf_size, const ImVec2& size_arg, ImGu/;"	f	class:ImGui	typeref:typename:bool
InputTextFilterCharacter	lib/cimgui/imgui/imgui.cpp	/^static bool InputTextFilterCharacter(unsigned int* p_char, ImGuiInputTextFlags flags, ImGuiTextE/;"	f	typeref:typename:bool	file:
InputTextMultiline	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InputTextMultiline(const char* label, char* buf, size_t buf_size, const ImVec2& size/;"	f	class:ImGui	typeref:typename:bool
InputTextPasswordFont	lib/cimgui/imgui/imgui_internal.h	/^    ImFont                  InputTextPasswordFont;$/;"	m	struct:ImGuiContext	typeref:typename:ImFont
InputTextState	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextEditState      InputTextState;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiTextEditState
InsertChars	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextEditCallbackData::InsertChars(int pos, const char* new_text, const char* new_text_/;"	f	class:ImGuiTextEditCallbackData	typeref:typename:void
InvisibleButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::InvisibleButton(const char* str_id, const ImVec2& size_arg)$/;"	f	class:ImGui	typeref:typename:bool
IsActive	lib/cimgui/imgui/imgui.h	/^    bool                IsActive() const { return !Filters.empty(); }$/;"	f	struct:ImGuiTextFilter	typeref:typename:bool
IsAnyItemActive	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyItemActive()$/;"	f	class:ImGui	typeref:typename:bool
IsAnyItemFocused	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyItemFocused()$/;"	f	class:ImGui	typeref:typename:bool
IsAnyItemHovered	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyItemHovered()$/;"	f	class:ImGui	typeref:typename:bool
IsAnyMouseDown	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsAnyMouseDown()$/;"	f	class:ImGui	typeref:typename:bool
IsAnyWindowFocused	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsAnyWindowFocused()                  { return IsWindowFocused(ImGuiFocu/;"	f	namespace:ImGui	typeref:typename:bool
IsAnyWindowHovered	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsAnyWindowHovered()                  { return IsWindowHovered(ImGuiHove/;"	f	namespace:ImGui	typeref:typename:bool
IsBeingResized	lib/cimgui/imgui/imgui_internal.h	/^    bool                IsBeingResized;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:bool
IsClippedEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsClippedEx(const ImRect& bb, ImGuiID id, bool clip_even_when_logged)$/;"	f	class:ImGui	typeref:typename:bool
IsDataType	lib/cimgui/imgui/imgui.h	/^    bool IsDataType(const char* type) const { return DataFrameCount != -1 && strcmp(type, DataTy/;"	f	struct:ImGuiPayload	typeref:typename:bool
IsDelivery	lib/cimgui/imgui/imgui.h	/^    bool IsDelivery() const                 { return Delivery; }$/;"	f	struct:ImGuiPayload	typeref:typename:bool
IsDragDropPayloadBeingAccepted	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsDragDropPayloadBeingAccepted()$/;"	f	class:ImGui	typeref:typename:bool
IsFirstFrame	lib/cimgui/imgui/imgui_internal.h	/^    bool                IsFirstFrame;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:bool
IsInverted	lib/cimgui/imgui/imgui_internal.h	/^    bool        IsInverted() const                  { return Min.x > Max.x || Min.y > Max.y; }$/;"	f	struct:ImRect	typeref:typename:bool
IsItemActive	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemActive()$/;"	f	class:ImGui	typeref:typename:bool
IsItemClicked	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemClicked(int mouse_button)$/;"	f	class:ImGui	typeref:typename:bool
IsItemFocused	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemFocused()$/;"	f	class:ImGui	typeref:typename:bool
IsItemHovered	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemHovered(ImGuiHoveredFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
IsItemHoveredRect	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsItemHoveredRect()                   { return IsItemHovered(ImGuiHovere/;"	f	namespace:ImGui	typeref:typename:bool
IsItemVisible	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsItemVisible()$/;"	f	class:ImGui	typeref:typename:bool
IsKeyDown	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsKeyDown(int user_key_index)$/;"	f	class:ImGui	typeref:typename:bool
IsKeyPressed	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsKeyPressed(int user_key_index, bool repeat)$/;"	f	class:ImGui	typeref:typename:bool
IsKeyPressedMap	lib/cimgui/imgui/imgui.cpp	/^static bool IsKeyPressedMap(ImGuiKey key, bool repeat)$/;"	f	typeref:typename:bool	file:
IsKeyReleased	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsKeyReleased(int user_key_index)$/;"	f	class:ImGui	typeref:typename:bool
IsLoaded	lib/cimgui/imgui/imgui.h	/^    bool                        IsLoaded() const                    { return ContainerAtlas != N/;"	f	struct:ImFont	typeref:typename:bool
IsMouseClicked	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseClicked(int button, bool repeat)$/;"	f	class:ImGui	typeref:typename:bool
IsMouseDoubleClicked	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseDoubleClicked(int button)$/;"	f	class:ImGui	typeref:typename:bool
IsMouseDown	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseDown(int button)$/;"	f	class:ImGui	typeref:typename:bool
IsMouseDragging	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseDragging(int button, float lock_threshold)$/;"	f	class:ImGui	typeref:typename:bool
IsMouseHoveringAnyWindow	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsMouseHoveringAnyWindow()            { return IsWindowHovered(ImGuiHove/;"	f	namespace:ImGui	typeref:typename:bool
IsMouseHoveringRect	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseHoveringRect(const ImVec2& r_min, const ImVec2& r_max, bool clip)$/;"	f	class:ImGui	typeref:typename:bool
IsMouseHoveringWindow	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsMouseHoveringWindow()               { return IsWindowHovered(ImGuiHove/;"	f	namespace:ImGui	typeref:typename:bool
IsMousePosValid	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMousePosValid(const ImVec2* mouse_pos)$/;"	f	class:ImGui	typeref:typename:bool
IsMouseReleased	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsMouseReleased(int button)$/;"	f	class:ImGui	typeref:typename:bool
IsNavInputDown	lib/cimgui/imgui/imgui.cpp	/^static bool IsNavInputDown(ImGuiNavInput n)$/;"	f	typeref:typename:bool	file:
IsNavInputPressed	lib/cimgui/imgui/imgui.cpp	/^static bool IsNavInputPressed(ImGuiNavInput n, ImGuiInputReadMode mode)$/;"	f	typeref:typename:bool	file:
IsNavInputPressedAnyOfTwo	lib/cimgui/imgui/imgui.cpp	/^static bool IsNavInputPressedAnyOfTwo(ImGuiNavInput n1, ImGuiNavInput n2, ImGuiInputReadMode mod/;"	f	typeref:typename:bool	file:
IsPacked	lib/cimgui/imgui/imgui.h	/^        bool IsPacked() const   { return X != 0xFFFF; }$/;"	f	struct:ImFontAtlas::CustomRect	typeref:typename:bool
IsPopupOpen	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsPopupOpen(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:bool
IsPopupOpen	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsPopupOpen(const char* str_id)$/;"	f	class:ImGui	typeref:typename:bool
IsPosHoveringAnyWindow	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsPosHoveringAnyWindow(const ImVec2&) { IM_ASSERT(0); return false; } \//;"	f	namespace:ImGui	typeref:typename:bool
IsPreview	lib/cimgui/imgui/imgui.h	/^    bool IsPreview() const                  { return Preview; }$/;"	f	struct:ImGuiPayload	typeref:typename:bool
IsRectVisible	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsRectVisible(const ImVec2& rect_min, const ImVec2& rect_max)$/;"	f	class:ImGui	typeref:typename:bool
IsRectVisible	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsRectVisible(const ImVec2& size)$/;"	f	class:ImGui	typeref:typename:bool
IsRootWindowFocused	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsRootWindowFocused()                 { return IsWindowFocused(ImGuiFocu/;"	f	namespace:ImGui	typeref:typename:bool
IsRootWindowOrAnyChildFocused	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsRootWindowOrAnyChildFocused()       { return IsWindowFocused(ImGuiFocu/;"	f	namespace:ImGui	typeref:typename:bool
IsRootWindowOrAnyChildHovered	lib/cimgui/imgui/imgui.h	/^    static inline bool  IsRootWindowOrAnyChildHovered()       { return IsWindowHovered(ImGuiHove/;"	f	namespace:ImGui	typeref:typename:bool
IsWindowAppearing	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowAppearing()$/;"	f	class:ImGui	typeref:typename:bool
IsWindowChildOf	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowChildOf(ImGuiWindow* window, ImGuiWindow* potential_parent)$/;"	f	class:ImGui	typeref:typename:bool
IsWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowCollapsed()$/;"	f	class:ImGui	typeref:typename:bool
IsWindowContentHoverable	lib/cimgui/imgui/imgui.cpp	/^static inline bool IsWindowContentHoverable(ImGuiWindow* window, ImGuiHoveredFlags flags)$/;"	f	typeref:typename:bool	file:
IsWindowFocused	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowFocused(ImGuiFocusedFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
IsWindowHovered	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowHovered(ImGuiHoveredFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
IsWindowNavFocusable	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::IsWindowNavFocusable(ImGuiWindow* window)$/;"	f	class:ImGui	typeref:typename:bool
ItemAdd	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ItemAdd(const ImRect& bb, ImGuiID id, const ImRect* nav_bb_arg)$/;"	f	class:ImGui	typeref:typename:bool
ItemFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemFlags          ItemFlags;              \/\/ == ItemFlagsStack.back() [empty == ImGu/;"	m	struct:ImGuiDrawContext	typeref:typename:ImGuiItemFlags
ItemFlagsStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiItemFlags>ItemFlagsStack;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVector<ImGuiItemFlags>
ItemGetter	lib/cimgui/imgui/imgui_demo.cpp	/^            struct FuncHolder { static bool ItemGetter(void* data, int idx, const char** out_str/;"	f	struct:ImGui::ShowDemoWindow::FuncHolder	typeref:typename:bool	file:
ItemHoverable	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ItemHoverable(const ImRect& bb, ImGuiID id)$/;"	f	class:ImGui	typeref:typename:bool
ItemInnerSpacing	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 ItemInnerSpacing;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
ItemInnerSpacing	lib/cimgui/imgui/imgui.h	/^    ImVec2      ItemInnerSpacing;           \/\/ Horizontal and vertical spacing between within /;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
ItemSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ItemSize(const ImRect& bb, float text_offset_y)$/;"	f	class:ImGui	typeref:typename:void
ItemSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ItemSize(const ImVec2& size, float text_offset_y)$/;"	f	class:ImGui	typeref:typename:void
ItemSpacing	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 ItemSpacing;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
ItemSpacing	lib/cimgui/imgui/imgui.h	/^    ImVec2      ItemSpacing;                \/\/ Horizontal and vertical spacing between widgets/;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
ItemWidth	lib/cimgui/imgui/imgui_internal.h	/^    float                   ItemWidth;              \/\/ == ItemWidthStack.back(). 0.0: default,/;"	m	struct:ImGuiDrawContext	typeref:typename:float
ItemWidthDefault	lib/cimgui/imgui/imgui_internal.h	/^    float                   ItemWidthDefault;$/;"	m	struct:ImGuiWindow	typeref:typename:float
ItemWidthStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<float>         ItemWidthStack;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVector<float>
Items	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<char*>       Items;$/;"	m	struct:ExampleAppConsole	typeref:typename:ImVector<char * >	file:
ItemsCount	lib/cimgui/cimgui/cimgui.h	/^    int ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
ItemsCount	lib/cimgui/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
ItemsHeight	lib/cimgui/cimgui/cimgui.h	/^    float ItemsHeight;$/;"	m	struct:ImGuiListClipper	typeref:typename:float
ItemsHeight	lib/cimgui/imgui/imgui.h	/^    float   ItemsHeight;$/;"	m	struct:ImGuiListClipper	typeref:typename:float
Items_ArrayGetter	lib/cimgui/imgui/imgui.cpp	/^static bool Items_ArrayGetter(void* data, int idx, const char** out_text)$/;"	f	typeref:typename:bool	file:
Items_SingleStringGetter	lib/cimgui/imgui/imgui.cpp	/^static bool Items_SingleStringGetter(void* data, int idx, const char** out_text)$/;"	f	typeref:typename:bool	file:
KAVL_H	lib/klib/kavl.h	/^#define KAVL_H$/;"	d
KAVL_HEAD	lib/klib/kavl.h	/^#define KAVL_HEAD(/;"	d
KAVL_INIT	lib/klib/kavl.h	/^#define KAVL_INIT(/;"	d
KAVL_INIT	lib/klib/test/kavl_test.c	/^KAVL_INIT(my, struct my_node, head, my_cmp)$/;"	f
KAVL_INIT2	lib/klib/kavl.h	/^#define KAVL_INIT2(/;"	d
KAVL_MAX_DEPTH	lib/klib/kavl.h	/^#define KAVL_MAX_DEPTH /;"	d
KBIT_H	lib/klib/kbit.h	/^#define KBIT_H$/;"	d
KBTREE_INIT	lib/klib/kbtree.h	/^#define KBTREE_INIT(/;"	d
KB_DEFAULT_SIZE	lib/klib/kbtree.h	/^#define KB_DEFAULT_SIZE /;"	d
KB_MAX_DEPTH	lib/klib/kbtree.h	/^#define KB_MAX_DEPTH /;"	d
KDQ_DECLARE	lib/klib/kdq.h	/^#define KDQ_DECLARE(/;"	d
KDQ_INIT	lib/klib/kdq.h	/^#define KDQ_INIT(/;"	d
KDQ_INIT2	lib/klib/kdq.h	/^#define KDQ_INIT2(/;"	d
KEE_ARG	lib/klib/kexpr.h	/^#define KEE_ARG /;"	d
KEE_FUNC	lib/klib/kexpr.h	/^#define KEE_FUNC /;"	d
KEE_NUM	lib/klib/kexpr.h	/^#define KEE_NUM /;"	d
KEE_UNFUNC	lib/klib/kexpr.h	/^#define KEE_UNFUNC /;"	d
KEE_UNLP	lib/klib/kexpr.h	/^#define KEE_UNLP /;"	d
KEE_UNOP	lib/klib/kexpr.h	/^#define KEE_UNOP /;"	d
KEE_UNQU	lib/klib/kexpr.h	/^#define KEE_UNQU /;"	d
KEE_UNRP	lib/klib/kexpr.h	/^#define KEE_UNRP /;"	d
KEE_UNVAR	lib/klib/kexpr.h	/^#define KEE_UNVAR /;"	d
KEF_NULL	lib/klib/kexpr.c	/^#define KEF_NULL /;"	d	file:
KEF_REAL	lib/klib/kexpr.c	/^#define KEF_REAL /;"	d	file:
KEIGEN_H	lib/klib/keigen.h	/^#define KEIGEN_H$/;"	d
KEO_ADD	lib/klib/kexpr.c	/^#define KEO_ADD /;"	d	file:
KEO_BAND	lib/klib/kexpr.c	/^#define KEO_BAND /;"	d	file:
KEO_BNOT	lib/klib/kexpr.c	/^#define KEO_BNOT /;"	d	file:
KEO_BOR	lib/klib/kexpr.c	/^#define KEO_BOR /;"	d	file:
KEO_BXOR	lib/klib/kexpr.c	/^#define KEO_BXOR /;"	d	file:
KEO_DIV	lib/klib/kexpr.c	/^#define KEO_DIV /;"	d	file:
KEO_EQ	lib/klib/kexpr.c	/^#define KEO_EQ /;"	d	file:
KEO_GE	lib/klib/kexpr.c	/^#define KEO_GE /;"	d	file:
KEO_GT	lib/klib/kexpr.c	/^#define KEO_GT /;"	d	file:
KEO_IDIV	lib/klib/kexpr.c	/^#define KEO_IDIV /;"	d	file:
KEO_LAND	lib/klib/kexpr.c	/^#define KEO_LAND /;"	d	file:
KEO_LE	lib/klib/kexpr.c	/^#define KEO_LE /;"	d	file:
KEO_LNOT	lib/klib/kexpr.c	/^#define KEO_LNOT /;"	d	file:
KEO_LOR	lib/klib/kexpr.c	/^#define KEO_LOR /;"	d	file:
KEO_LSH	lib/klib/kexpr.c	/^#define KEO_LSH /;"	d	file:
KEO_LT	lib/klib/kexpr.c	/^#define KEO_LT /;"	d	file:
KEO_MOD	lib/klib/kexpr.c	/^#define KEO_MOD /;"	d	file:
KEO_MUL	lib/klib/kexpr.c	/^#define KEO_MUL /;"	d	file:
KEO_NE	lib/klib/kexpr.c	/^#define KEO_NE /;"	d	file:
KEO_NEG	lib/klib/kexpr.c	/^#define KEO_NEG /;"	d	file:
KEO_NULL	lib/klib/kexpr.c	/^#define KEO_NULL /;"	d	file:
KEO_POS	lib/klib/kexpr.c	/^#define KEO_POS /;"	d	file:
KEO_POW	lib/klib/kexpr.c	/^#define KEO_POW /;"	d	file:
KEO_RSH	lib/klib/kexpr.c	/^#define KEO_RSH /;"	d	file:
KEO_SUB	lib/klib/kexpr.c	/^#define KEO_SUB /;"	d	file:
KET_FUNC	lib/klib/kexpr.c	/^#define KET_FUNC /;"	d	file:
KET_NULL	lib/klib/kexpr.c	/^#define KET_NULL /;"	d	file:
KET_OP	lib/klib/kexpr.c	/^#define KET_OP /;"	d	file:
KET_VAL	lib/klib/kexpr.c	/^#define KET_VAL /;"	d	file:
KEV_INT	lib/klib/kexpr.h	/^#define KEV_INT /;"	d
KEV_REAL	lib/klib/kexpr.h	/^#define KEV_REAL /;"	d
KEV_STR	lib/klib/kexpr.h	/^#define KEV_STR /;"	d
KEXPR_H	lib/klib/kexpr.h	/^#define KEXPR_H$/;"	d
KE_EXCESS_ITER	lib/klib/keigen.h	/^#define KE_EXCESS_ITER /;"	d
KE_GEN_BIN_BOTH	lib/klib/kexpr.c	/^#define KE_GEN_BIN_BOTH(/;"	d	file:
KE_GEN_BIN_INT	lib/klib/kexpr.c	/^#define KE_GEN_BIN_INT(/;"	d	file:
KE_GEN_CMP	lib/klib/kexpr.c	/^#define KE_GEN_CMP(/;"	d	file:
KF_GAMMA_EPS	lib/klib/kmath.c	/^#define KF_GAMMA_EPS /;"	d	file:
KF_TINY	lib/klib/kmath.c	/^#define KF_TINY /;"	d	file:
KGRAPH_INIT	lib/klib/kgraph.h	/^#define KGRAPH_INIT(/;"	d
KGRAPH_INIT	lib/klib/test/kgraph_test.c	/^KGRAPH_INIT(g, extern, vertex_t, int, e32)$/;"	f
KGRAPH_PRINT	lib/klib/kgraph.h	/^#define KGRAPH_PRINT(/;"	d
KHASH_DECLARE	lib/klib/khash.h	/^#define KHASH_DECLARE(/;"	d
KHASH_INIT	lib/klib/khash.h	/^#define KHASH_INIT(/;"	d
KHASH_INIT2	lib/klib/khash.h	/^#define KHASH_INIT2(/;"	d
KHASH_MAP_INIT_INT	lib/klib/khash.h	/^#define KHASH_MAP_INIT_INT(/;"	d
KHASH_MAP_INIT_INT64	lib/klib/bgzf.c	/^KHASH_MAP_INIT_INT64(cache, cache_t)$/;"	f	file:
KHASH_MAP_INIT_INT64	lib/klib/khash.h	/^#define KHASH_MAP_INIT_INT64(/;"	d
KHASH_MAP_INIT_STR	lib/klib/khash.h	/^#define KHASH_MAP_INIT_STR(/;"	d
KHASH_MAP_INIT_STR	lib/klib/test/khash_keith.c	/^KHASH_MAP_INIT_STR(str, int)$/;"	f
KHASH_MAP_INIT_STR	lib/klib/test/khash_keith2.c	/^KHASH_MAP_INIT_STR(str, int)$/;"	f
KHASH_SET_INIT_INT	lib/klib/khash.h	/^#define KHASH_SET_INIT_INT(/;"	d
KHASH_SET_INIT_INT64	lib/klib/khash.h	/^#define KHASH_SET_INIT_INT64(/;"	d
KHASH_SET_INIT_STR	lib/klib/khash.h	/^#define KHASH_SET_INIT_STR(/;"	d
KLIST_INIT	lib/klib/klist.h	/^#define KLIST_INIT(/;"	d
KLIST_INIT2	lib/klib/klist.h	/^#define KLIST_INIT2(/;"	d
KMEMPOOL_INIT	lib/klib/klist.h	/^#define KMEMPOOL_INIT(/;"	d
KMEMPOOL_INIT2	lib/klib/klist.h	/^#define KMEMPOOL_INIT2(/;"	d
KMIN_EPS	lib/klib/kmath.h	/^	#define KMIN_EPS /;"	d
KMIN_MAXCALL	lib/klib/kmath.h	/^	#define KMIN_MAXCALL /;"	d
KMIN_RADIUS	lib/klib/kmath.h	/^	#define KMIN_RADIUS /;"	d
KNERR_BRACKET	lib/klib/knhx.h	/^#define KNERR_BRACKET /;"	d
KNERR_COLON	lib/klib/knhx.h	/^#define KNERR_COLON /;"	d
KNERR_MISSING_LEFT	lib/klib/knhx.h	/^#define KNERR_MISSING_LEFT /;"	d
KNERR_MISSING_RGHT	lib/klib/knhx.h	/^#define KNERR_MISSING_RGHT /;"	d
KNETFILE_H	lib/klib/knetfile.h	/^#define KNETFILE_H$/;"	d
KNETFILE_H	lib/klib/kurl.h	/^#define KNETFILE_H$/;"	d
KNF_TYPE_FTP	lib/klib/knetfile.h	/^#define KNF_TYPE_FTP /;"	d
KNF_TYPE_HTTP	lib/klib/knetfile.h	/^#define KNF_TYPE_HTTP /;"	d
KNF_TYPE_LOCAL	lib/klib/knetfile.h	/^#define KNF_TYPE_LOCAL /;"	d
KNHX_H_	lib/klib/knhx.h	/^#define KNHX_H_$/;"	d
KO_FILE	lib/klib/kopen.c	/^#define KO_FILE /;"	d	file:
KO_FTP	lib/klib/kopen.c	/^#define KO_FTP /;"	d	file:
KO_HTTP	lib/klib/kopen.c	/^#define KO_HTTP /;"	d	file:
KO_PIPE	lib/klib/kopen.c	/^#define KO_PIPE /;"	d	file:
KO_STDIN	lib/klib/kopen.c	/^#define KO_STDIN /;"	d	file:
KR_LM	lib/klib/kmath.c	/^#define KR_LM /;"	d	file:
KR_MM	lib/klib/kmath.c	/^#define KR_MM /;"	d	file:
KR_NN	lib/klib/kmath.c	/^#define KR_NN /;"	d	file:
KR_UM	lib/klib/kmath.c	/^#define KR_UM /;"	d	file:
KSEQ_DECLARE	lib/klib/kseq.h	/^#define KSEQ_DECLARE(/;"	d
KSEQ_INIT	lib/klib/kseq.h	/^#define KSEQ_INIT(/;"	d
KSEQ_INIT	lib/klib/test/kseq_test.c	/^KSEQ_INIT(gzFile, gzread)$/;"	f
KSEQ_INIT2	lib/klib/kseq.h	/^#define KSEQ_INIT2(/;"	d
KSON_ERR_EXTRA_LEFT	lib/klib/kson.h	/^#define KSON_ERR_EXTRA_LEFT /;"	d
KSON_ERR_EXTRA_RIGHT	lib/klib/kson.h	/^#define KSON_ERR_EXTRA_RIGHT /;"	d
KSON_ERR_NO_KEY	lib/klib/kson.h	/^#define KSON_ERR_NO_KEY /;"	d
KSON_H	lib/klib/kson.h	/^#define KSON_H$/;"	d
KSON_OK	lib/klib/kson.h	/^#define KSON_OK /;"	d
KSON_TYPE_BRACE	lib/klib/kson.h	/^#define KSON_TYPE_BRACE /;"	d
KSON_TYPE_BRACKET	lib/klib/kson.h	/^#define KSON_TYPE_BRACKET /;"	d
KSON_TYPE_DBL_QUOTE	lib/klib/kson.h	/^#define KSON_TYPE_DBL_QUOTE /;"	d
KSON_TYPE_NO_QUOTE	lib/klib/kson.h	/^#define KSON_TYPE_NO_QUOTE /;"	d
KSON_TYPE_SGL_QUOTE	lib/klib/kson.h	/^#define KSON_TYPE_SGL_QUOTE /;"	d
KSORT_INIT	lib/klib/ksort.h	/^#define KSORT_INIT(/;"	d
KSORT_INIT_GENERIC	lib/klib/kmath.c	/^KSORT_INIT_GENERIC(double)$/;"	f
KSORT_INIT_GENERIC	lib/klib/ksort.h	/^#define KSORT_INIT_GENERIC(/;"	d
KSORT_INIT_GENERIC	lib/klib/test/ksort_test.c	/^KSORT_INIT_GENERIC(int)$/;"	f
KSORT_INIT_STR	lib/klib/ksort.h	/^#define KSORT_INIT_STR /;"	d
KSORT_SWAP	lib/klib/ksort.h	/^#define KSORT_SWAP(/;"	d
KSTREAM_INIT	lib/klib/kseq.h	/^#define KSTREAM_INIT(/;"	d
KSTREAM_INIT	lib/klib/test/kseq_bench.c	/^KSTREAM_INIT(gzFile, gzread, BUF_SIZE)$/;"	f
KSTRING_H	lib/klib/kstring.h	/^#define KSTRING_H$/;"	d
KSTRING_T	lib/klib/bgzf.h	/^#define KSTRING_T /;"	d
KSTRING_T	lib/klib/knhx.h	/^#define KSTRING_T /;"	d
KSTRING_T	lib/klib/kseq.h	/^#define KSTRING_T /;"	d
KSTRING_T	lib/klib/kstring.h	/^#define KSTRING_T /;"	d
KSW_XBYTE	lib/klib/ksw.h	/^#define KSW_XBYTE /;"	d
KSW_XSTART	lib/klib/ksw.h	/^#define KSW_XSTART /;"	d
KSW_XSTOP	lib/klib/ksw.h	/^#define KSW_XSTOP /;"	d
KSW_XSUBO	lib/klib/ksw.h	/^#define KSW_XSUBO /;"	d
KS_ATTR_PRINTF	lib/klib/kstring.h	/^#define KS_ATTR_PRINTF(/;"	d
KS_SEP_LINE	lib/klib/kseq.h	/^#define KS_SEP_LINE /;"	d
KS_SEP_MAX	lib/klib/kseq.h	/^#define KS_SEP_MAX /;"	d
KS_SEP_SPACE	lib/klib/kseq.h	/^#define KS_SEP_SPACE /;"	d
KS_SEP_TAB	lib/klib/kseq.h	/^#define KS_SEP_TAB /;"	d
KTHREAD_H	lib/klib/kthread.h	/^#define KTHREAD_H$/;"	d
KURL_H	lib/klib/kurl.h	/^#define KURL_H$/;"	d
KURL_INV_WHENCE	lib/klib/kurl.h	/^#define KURL_INV_WHENCE /;"	d
KURL_NO_AUTH	lib/klib/kurl.h	/^#define KURL_NO_AUTH /;"	d
KURL_NULL	lib/klib/kurl.h	/^#define KURL_NULL /;"	d
KURL_SEEK_OUT	lib/klib/kurl.h	/^#define KURL_SEEK_OUT /;"	d
KU_DEF_BUFLEN	lib/klib/kurl.c	/^#define KU_DEF_BUFLEN /;"	d	file:
KU_MAX_SKIP	lib/klib/kurl.c	/^#define KU_MAX_SKIP /;"	d	file:
KeepAliveID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::KeepAliveID(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:void
KeyAlt	lib/cimgui/cimgui/cimgui.h	/^    bool KeyAlt;$/;"	m	struct:ImGuiIO	typeref:typename:bool
KeyAlt	lib/cimgui/imgui/imgui.h	/^    bool        KeyAlt;                         \/\/ Keyboard modifier pressed: Alt$/;"	m	struct:ImGuiIO	typeref:typename:bool
KeyCtrl	lib/cimgui/cimgui/cimgui.h	/^    bool KeyCtrl;$/;"	m	struct:ImGuiIO	typeref:typename:bool
KeyCtrl	lib/cimgui/imgui/imgui.h	/^    bool        KeyCtrl;                        \/\/ Keyboard modifier pressed: Control$/;"	m	struct:ImGuiIO	typeref:typename:bool
KeyMap	lib/cimgui/cimgui/cimgui.h	/^    int KeyMap[ImGuiKey_COUNT];$/;"	m	struct:ImGuiIO	typeref:typename:int[]
KeyMap	lib/cimgui/imgui/imgui.h	/^    int           KeyMap[ImGuiKey_COUNT];   \/\/ <unset>              \/\/ Map of indices into t/;"	m	struct:ImGuiIO	typeref:typename:int[]
KeyRepeatDelay	lib/cimgui/cimgui/cimgui.h	/^    float KeyRepeatDelay;$/;"	m	struct:ImGuiIO	typeref:typename:float
KeyRepeatDelay	lib/cimgui/imgui/imgui.h	/^    float         KeyRepeatDelay;           \/\/ = 0.250f             \/\/ When holding a key\/b/;"	m	struct:ImGuiIO	typeref:typename:float
KeyRepeatRate	lib/cimgui/cimgui/cimgui.h	/^    float KeyRepeatRate;$/;"	m	struct:ImGuiIO	typeref:typename:float
KeyRepeatRate	lib/cimgui/imgui/imgui.h	/^    float         KeyRepeatRate;            \/\/ = 0.050f             \/\/ When holding a key\/b/;"	m	struct:ImGuiIO	typeref:typename:float
KeyShift	lib/cimgui/cimgui/cimgui.h	/^    bool KeyShift;$/;"	m	struct:ImGuiIO	typeref:typename:bool
KeyShift	lib/cimgui/imgui/imgui.h	/^    bool        KeyShift;                       \/\/ Keyboard modifier pressed: Shift$/;"	m	struct:ImGuiIO	typeref:typename:bool
KeySuper	lib/cimgui/cimgui/cimgui.h	/^    bool KeySuper;$/;"	m	struct:ImGuiIO	typeref:typename:bool
KeySuper	lib/cimgui/imgui/imgui.h	/^    bool        KeySuper;                       \/\/ Keyboard modifier pressed: Cmd\/Super\/Wind/;"	m	struct:ImGuiIO	typeref:typename:bool
KeyboardHandleriOS	lib/nuklear/demo/allegro5/KeyboardHandleriOS.h	/^@interface KeyboardHandleriOS : UIView <UIKeyInput>$/;"	i
KeyboardHandleriOS	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^@implementation KeyboardHandleriOS$/;"	I
KeyboardHandleriOS	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^@interface KeyboardHandleriOS()$/;"	i
KeysDown	lib/cimgui/cimgui/cimgui.h	/^    bool KeysDown[512];$/;"	m	struct:ImGuiIO	typeref:typename:bool[512]
KeysDown	lib/cimgui/imgui/imgui.h	/^    bool        KeysDown[512];                  \/\/ Keyboard keys that are pressed (ideally lef/;"	m	struct:ImGuiIO	typeref:typename:bool[512]
KeysDownDuration	lib/cimgui/cimgui/cimgui.h	/^    float KeysDownDuration[512];$/;"	m	struct:ImGuiIO	typeref:typename:float[512]
KeysDownDuration	lib/cimgui/imgui/imgui.h	/^    float       KeysDownDuration[512];      \/\/ Duration the keyboard key has been down (0.0f =/;"	m	struct:ImGuiIO	typeref:typename:float[512]
KeysDownDurationPrev	lib/cimgui/cimgui/cimgui.h	/^    float KeysDownDurationPrev[512];$/;"	m	struct:ImGuiIO	typeref:typename:float[512]
KeysDownDurationPrev	lib/cimgui/imgui/imgui.h	/^    float       KeysDownDurationPrev[512];  \/\/ Previous duration the key has been down$/;"	m	struct:ImGuiIO	typeref:typename:float[512]
L	lib/klib/khmm.h	/^	int L;$/;"	m	struct:__anonf542711f0208	typeref:typename:int
LEN	lib/nuklear/demo/allegro5/main.c	/^#define LEN(/;"	d	file:
LEN	lib/nuklear/demo/sdl_opengles2/main.c	/^#define LEN(/;"	d	file:
LEN	lib/nuklear/demo/x11_rawfb/main.c	/^#define LEN(/;"	d	file:
LEN	lib/nuklear/example/canvas.c	/^#define LEN(/;"	d	file:
LEN	lib/nuklear/example/extended.c	/^#define LEN(/;"	d	file:
LEN	lib/nuklear/example/file_browser.c	/^#define LEN(/;"	d	file:
LEN	lib/nuklear/example/skinning.c	/^#define LEN(/;"	d	file:
LIBS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^	LIBS = -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo$/;"	m
LIBS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^	LIBS = -lGL `pkg-config --static --libs glfw3`$/;"	m
LIBS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^   LIBS = -lglfw3 -lgdi32 -lopengl32 -limm32$/;"	m
LIBS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^	LIBS = -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo$/;"	m
LIBS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^	LIBS = -lGL `pkg-config --static --libs glfw3`$/;"	m
LIBS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^   LIBS = -lglfw3 -lgdi32 -lopengl32 -limm32$/;"	m
LIBS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^	LIBS = -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo `sdl2-config --/;"	m
LIBS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^	LIBS = -lGL -ldl `sdl2-config --libs`$/;"	m
LIBS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^   LIBS = -lgdi32 -lopengl32 -limm32 `pkg-config --static --libs sdl2`$/;"	m
LIBS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^	LIBS = -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo `sdl2-config --/;"	m
LIBS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^	LIBS = -lGL -ldl `sdl2-config --libs`$/;"	m
LIBS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^   LIBS = -lgdi32 -lopengl32 -limm32 `pkg-config --static --libs sdl2`$/;"	m
LIBS	lib/nuklear/demo/allegro5/Makefile	/^LIBS = -lallegro -lallegro_main -lallegro_image -lallegro_font \\$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl2/Makefile	/^		LIBS := -lglfw3 -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm -/;"	m
LIBS	lib/nuklear/demo/glfw_opengl2/Makefile	/^		LIBS = -lglfw -lGL -lm -lGLU$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl2/Makefile	/^LIBS = -lglfw3 -lopengl32 -lm -lGLU32$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl3/Makefile	/^		LIBS := $(GLFW3) -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm /;"	m
LIBS	lib/nuklear/demo/glfw_opengl3/Makefile	/^		LIBS = $(GLFW3) -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl3/Makefile	/^LIBS = -lglfw3 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl4/Makefile	/^		LIBS := $(GLFW3) -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm /;"	m
LIBS	lib/nuklear/demo/glfw_opengl4/Makefile	/^		LIBS = $(GLFW3) -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/demo/glfw_opengl4/Makefile	/^LIBS = -lglfw3 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl2/Makefile	/^		LIBS = -lSDL2 -framework OpenGL -lm$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl2/Makefile	/^		LIBS = -lSDL2 -lGL -lm -lGLU$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl2/Makefile	/^LIBS = -lmingw32 -lSDL2main -lSDL2 -lopengl32 -lm -lGLU32$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl3/Makefile	/^		LIBS = -lSDL2 -framework OpenGL -lm -lGLEW$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl3/Makefile	/^		LIBS = -lSDL2 -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/demo/sdl_opengl3/Makefile	/^LIBS = -lmingw32 -lSDL2main -lSDL2 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/demo/sdl_opengles2/Makefile	/^	LIBS = -lSDL2 -framework OpenGLES -lm$/;"	m
LIBS	lib/nuklear/demo/sdl_opengles2/Makefile	/^	LIBS = -lSDL2 -lGLESv2 -lm$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl2/Makefile	/^		LIBS = -DSFML_STATIC -lsfml-window-s -lsfml-system-s -pthread -ludev -lGL -lX11 -lXrandr$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl2/Makefile	/^		LIBS = -lsfml-window -lsfml-system -pthread -framework OpenGL$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl2/Makefile	/^	LIBS = -lmingw32 -DSFML_STATIC -lsfml-window-s -lsfml-system-s -lopengl32 -lwinmm -lgdi32$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl3/Makefile	/^		LIBS = -DSFML_STATIC -lsfml-window-s -lsfml-system-s -pthread -ludev -lGL -lX11 -lXrandr$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl3/Makefile	/^		LIBS = -lsfml-window -lsfml-system -pthread -framework OpenGL$/;"	m
LIBS	lib/nuklear/demo/sfml_opengl3/Makefile	/^	LIBS = -lmingw32 -DSFML_STATIC -lsfml-window-s -lsfml-system-s -lopengl32 -lwinmm -lgdi32$/;"	m
LIBS	lib/nuklear/doc/Makefile	/^		LIBS = $/;"	m
LIBS	lib/nuklear/doc/Makefile	/^		LIBS =$/;"	m
LIBS	lib/nuklear/doc/Makefile	/^LIBS =$/;"	m
LIBS	lib/nuklear/example/Makefile	/^		LIBS := $(GLFW3) -framework OpenGL -framework Cocoa -framework IOKit -framework CoreVideo -lm /;"	m
LIBS	lib/nuklear/example/Makefile	/^		LIBS := $(GLFW3) -lGL -lm -lGLU -lGLEW$/;"	m
LIBS	lib/nuklear/example/Makefile	/^	LIBS := -lglfw3 -lopengl32 -lm -lGLU32 -lGLEW32$/;"	m
LIBS	lib/nuklear/example/Makefile	/^LIBS :=$/;"	m
LIKELY	lib/klib/ksw.c	/^#define LIKELY(/;"	d	file:
LINKFLAGS	lib/cimgui/cimgui/Makefile	/^	LINKFLAGS = -dynamiclib$/;"	m
LINKFLAGS	lib/cimgui/cimgui/Makefile	/^	LINKFLAGS = -limm32$/;"	m
LINMATH_H	lib/linmath/linmath.h	/^#define LINMATH_H$/;"	d
LINMATH_H_DEFINE_VEC	lib/linmath/linmath.h	/^#define LINMATH_H_DEFINE_VEC(/;"	d
LSMinimumSystemVersion	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>LSMinimumSystemVersion<\/key>$/;"	k
LSRequiresIPhoneOS	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>LSRequiresIPhoneOS<\/key>$/;"	k
LabelText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LabelText(const char* label, const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
LabelTextV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LabelTextV(const char* label, const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:void
LastFrameActive	lib/cimgui/imgui/imgui_internal.h	/^    int                     LastFrameActive;$/;"	m	struct:ImGuiWindow	typeref:typename:int
LastItemDisplayRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemDisplayRect;    \/\/ End-user display rect (only valid if La/;"	m	struct:ImGuiDrawContext	typeref:typename:ImRect
LastItemDisplayRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemDisplayRect;$/;"	m	struct:ImGuiItemHoveredDataBackup	typeref:typename:ImRect
LastItemId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 LastItemId;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImGuiID
LastItemId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 LastItemId;$/;"	m	struct:ImGuiItemHoveredDataBackup	typeref:typename:ImGuiID
LastItemRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemRect;           \/\/ Interaction rect$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImRect
LastItemRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  LastItemRect;$/;"	m	struct:ImGuiItemHoveredDataBackup	typeref:typename:ImRect
LastItemStatusFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags    LastItemStatusFlags;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImGuiItemStatusFlags
LastItemStatusFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiItemStatusFlags    LastItemStatusFlags;$/;"	m	struct:ImGuiItemHoveredDataBackup	typeref:typename:ImGuiItemStatusFlags
Layers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImDrawList*>   Layers[2];           \/\/ Global layers for: regular, tooltip$/;"	m	struct:ImDrawDataBuilder	typeref:typename:ImVector<ImDrawList * >[2]
LayoutType	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType         LayoutType;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImGuiLayoutType
LightHinting	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        LightHinting    = 1 << 3,   \/\/ A lighter hinting algorithm for gray-level modes. Many /;"	e	enum:ImGuiFreeType::RasterizerFlags
LineGap	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       LineGap;            \/\/ The spacing in pixels between one row's descent and/;"	m	struct:__anon71f5b57f0110::FontInfo	typeref:typename:float	file:
LineMaxY	lib/cimgui/imgui/imgui_internal.h	/^    float               LineMinY, LineMaxY;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:float
LineMinY	lib/cimgui/imgui/imgui_internal.h	/^    float               LineMinY, LineMaxY;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:float
LineOffsets	lib/cimgui/imgui/imgui_demo.cpp	/^    ImVector<int>       LineOffsets;        \/\/ Index to lines offset$/;"	m	struct:ExampleAppLog	typeref:typename:ImVector<int>	file:
LineSpacing	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       LineSpacing;        \/\/ The baseline-to-baseline distance. Note that it usu/;"	m	struct:__anon71f5b57f0110::FontInfo	typeref:typename:float	file:
ListBox	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ListBox(const char* label, int* current_item, bool (*items_getter)(void*, int, const/;"	f	class:ImGui	typeref:typename:bool
ListBox	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ListBox(const char* label, int* current_item, const char* const items[], int items_c/;"	f	class:ImGui	typeref:typename:bool
ListBoxFooter	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ListBoxFooter()$/;"	f	class:ImGui	typeref:typename:void
ListBoxHeader	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ListBoxHeader(const char* label, const ImVec2& size_arg)$/;"	f	class:ImGui	typeref:typename:bool
ListBoxHeader	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::ListBoxHeader(const char* label, int items_count, int height_in_items)$/;"	f	class:ImGui	typeref:typename:bool
LoadIniSettingsFromDisk	lib/cimgui/imgui/imgui.cpp	/^static void LoadIniSettingsFromDisk(const char* ini_filename)$/;"	f	typeref:typename:void	file:
LoadIniSettingsFromMemory	lib/cimgui/imgui/imgui.cpp	/^static void LoadIniSettingsFromMemory(const char* buf_readonly)$/;"	f	typeref:typename:void	file:
LogAutoExpandMaxDepth	lib/cimgui/imgui/imgui_internal.h	/^    int                     LogAutoExpandMaxDepth;$/;"	m	struct:ImGuiContext	typeref:typename:int
LogButtons	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogButtons()$/;"	f	class:ImGui	typeref:typename:void
LogClipboard	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiTextBuffer*        LogClipboard;                       \/\/ Else log to clipboard. This/;"	m	struct:ImGuiContext	typeref:typename:ImGuiTextBuffer *
LogEnabled	lib/cimgui/imgui/imgui_internal.h	/^    bool                    LogEnabled;$/;"	m	struct:ImGuiContext	typeref:typename:bool
LogFile	lib/cimgui/imgui/imgui_internal.h	/^    FILE*                   LogFile;                            \/\/ If != NULL log to stdout\/ /;"	m	struct:ImGuiContext	typeref:typename:FILE *
LogFilename	lib/cimgui/cimgui/cimgui.h	/^    CONST char *LogFilename;$/;"	m	struct:ImGuiIO	typeref:typename:CONST char *
LogFilename	lib/cimgui/imgui/imgui.h	/^    const char*   LogFilename;              \/\/ = "imgui_log.txt"    \/\/ Path to .log file (de/;"	m	struct:ImGuiIO	typeref:typename:const char *
LogFinish	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogFinish()$/;"	f	class:ImGui	typeref:typename:void
LogLinePosY	lib/cimgui/imgui/imgui_internal.h	/^    float                   LogLinePosY;$/;"	m	struct:ImGuiDrawContext	typeref:typename:float
LogRenderedText	lib/cimgui/imgui/imgui.cpp	/^static void LogRenderedText(const ImVec2* ref_pos, const char* text, const char* text_end = NULL/;"	f	typeref:typename:void	file:
LogStartDepth	lib/cimgui/imgui/imgui_internal.h	/^    int                     LogStartDepth;$/;"	m	struct:ImGuiContext	typeref:typename:int
LogText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogText(const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
LogToClipboard	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogToClipboard(int max_depth)$/;"	f	class:ImGui	typeref:typename:void
LogToFile	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogToFile(int max_depth, const char* filename)$/;"	f	class:ImGui	typeref:typename:void
LogToTTY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::LogToTTY(int max_depth)$/;"	f	class:ImGui	typeref:typename:void
Loop	src/App.c	/^Loop() {$/;"	f	typeref:typename:void	file:
Loop	src/App.h	/^	void (*Loop)();$/;"	m	struct:AApp	typeref:typename:void (*)()
LowerBound	lib/cimgui/imgui/imgui.cpp	/^static ImVector<ImGuiStorage::Pair>::iterator LowerBound(ImVector<ImGuiStorage::Pair>& data, ImG/;"	f	typeref:typename:ImVector<ImGuiStorage::Pair>::iterator	file:
MALLOC	lib/klib/keigen.c	/^#define MALLOC(/;"	d	file:
MAP_ANALOG	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^        #define MAP_ANALOG(/;"	d	file:
MAP_ANALOG	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^        #define MAP_ANALOG(/;"	d	file:
MAP_BUTTON	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^        #define MAP_BUTTON(/;"	d	file:
MAP_BUTTON	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^        #define MAP_BUTTON(/;"	d	file:
MAX	lib/nuklear/demo/allegro5/main.c	/^#define MAX(/;"	d	file:
MAX	lib/nuklear/demo/sdl_opengles2/main.c	/^#define MAX(/;"	d	file:
MAX	lib/nuklear/demo/x11_rawfb/main.c	/^#define MAX(/;"	d	file:
MAX	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^#define MAX(/;"	d
MAX	lib/nuklear/example/canvas.c	/^#define MAX(/;"	d	file:
MAX	lib/nuklear/example/extended.c	/^#define MAX(/;"	d	file:
MAX	lib/nuklear/example/file_browser.c	/^#define MAX(/;"	d	file:
MAX	lib/nuklear/example/skinning.c	/^#define MAX(/;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/glfw_opengl3/main.c	/^#define MAX_ELEMENT_BUFFER /;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/glfw_opengl4/main.c	/^#define MAX_ELEMENT_BUFFER /;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define MAX_ELEMENT_BUFFER /;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/x11_opengl2/main.c	/^#define MAX_ELEMENT_BUFFER /;"	d	file:
MAX_ELEMENT_BUFFER	lib/nuklear/demo/x11_opengl3/main.c	/^#define MAX_ELEMENT_BUFFER /;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/demo/sdl_opengl3/main.c	/^#define MAX_ELEMENT_MEMORY /;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/demo/sdl_opengles2/main.c	/^#define MAX_ELEMENT_MEMORY /;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/canvas.c	/^#define MAX_ELEMENT_MEMORY /;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/extended.c	/^#define MAX_ELEMENT_MEMORY /;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/file_browser.c	/^#define MAX_ELEMENT_MEMORY /;"	d	file:
MAX_ELEMENT_MEMORY	lib/nuklear/example/skinning.c	/^#define MAX_ELEMENT_MEMORY /;"	d	file:
MAX_INDEX_BUFFER	lib/nuklear/demo/d3d11/main.c	/^#define MAX_INDEX_BUFFER /;"	d	file:
MAX_PATH_LEN	lib/nuklear/example/file_browser.c	/^#define MAX_PATH_LEN /;"	d	file:
MAX_POINTS	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    #define MAX_POINTS /;"	d
MAX_POINTS	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    #define MAX_POINTS /;"	d
MAX_POINTS	lib/nuklear/demo/x11/nuklear_xlib.h	/^    #define MAX_POINTS /;"	d
MAX_POINTS	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    #define MAX_POINTS /;"	d
MAX_VERTEX_BUFFER	lib/nuklear/demo/d3d11/main.c	/^#define MAX_VERTEX_BUFFER /;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/glfw_opengl3/main.c	/^#define MAX_VERTEX_BUFFER /;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/glfw_opengl4/main.c	/^#define MAX_VERTEX_BUFFER /;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define MAX_VERTEX_BUFFER /;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/x11_opengl2/main.c	/^#define MAX_VERTEX_BUFFER /;"	d	file:
MAX_VERTEX_BUFFER	lib/nuklear/demo/x11_opengl3/main.c	/^#define MAX_VERTEX_BUFFER /;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/demo/sdl_opengl3/main.c	/^#define MAX_VERTEX_MEMORY /;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/demo/sdl_opengles2/main.c	/^#define MAX_VERTEX_MEMORY /;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/canvas.c	/^#define MAX_VERTEX_MEMORY /;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/extended.c	/^#define MAX_VERTEX_MEMORY /;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/file_browser.c	/^#define MAX_VERTEX_MEMORY /;"	d	file:
MAX_VERTEX_MEMORY	lib/nuklear/example/skinning.c	/^#define MAX_VERTEX_MEMORY /;"	d	file:
MENU_CHART	lib/nuklear/demo/overview.c	/^                enum menu_state {MENU_NONE,MENU_FILE, MENU_EDIT,MENU_VIEW,MENU_CHART};$/;"	e	enum:overview::menu_state	file:
MENU_DEFAULT	lib/nuklear/demo/overview.c	/^            enum menu_states {MENU_DEFAULT, MENU_WINDOWS};$/;"	e	enum:overview::menu_states	file:
MENU_EDIT	lib/nuklear/demo/overview.c	/^                enum menu_state {MENU_NONE,MENU_FILE, MENU_EDIT,MENU_VIEW,MENU_CHART};$/;"	e	enum:overview::menu_state	file:
MENU_FILE	lib/nuklear/demo/overview.c	/^                enum menu_state {MENU_NONE,MENU_FILE, MENU_EDIT,MENU_VIEW,MENU_CHART};$/;"	e	enum:overview::menu_state	file:
MENU_NONE	lib/nuklear/demo/overview.c	/^                enum menu_state {MENU_NONE,MENU_FILE, MENU_EDIT,MENU_VIEW,MENU_CHART};$/;"	e	enum:overview::menu_state	file:
MENU_VIEW	lib/nuklear/demo/overview.c	/^                enum menu_state {MENU_NONE,MENU_FILE, MENU_EDIT,MENU_VIEW,MENU_CHART};$/;"	e	enum:overview::menu_state	file:
MENU_WINDOWS	lib/nuklear/demo/overview.c	/^            enum menu_states {MENU_DEFAULT, MENU_WINDOWS};$/;"	e	enum:overview::menu_states	file:
MIN	lib/nuklear/demo/allegro5/main.c	/^#define MIN(/;"	d	file:
MIN	lib/nuklear/demo/sdl_opengles2/main.c	/^#define MIN(/;"	d	file:
MIN	lib/nuklear/demo/x11_rawfb/main.c	/^#define MIN(/;"	d	file:
MIN	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^#define MIN(/;"	d
MIN	lib/nuklear/example/canvas.c	/^#define MIN(/;"	d	file:
MIN	lib/nuklear/example/extended.c	/^#define MIN(/;"	d	file:
MIN	lib/nuklear/example/file_browser.c	/^#define MIN(/;"	d	file:
MIN	lib/nuklear/example/skinning.c	/^#define MIN(/;"	d	file:
MINUS_INF	lib/klib/ksw.c	/^#define MINUS_INF /;"	d	file:
MIN_CORE_SIZE	lib/klib/kalloc.c	/^#define MIN_CORE_SIZE /;"	d	file:
MainLoop	lib/nuklear/demo/sdl_opengles2/main.c	/^MainLoop(void* loopArg){$/;"	f	typeref:typename:void	file:
MallocWrapper	lib/cimgui/imgui/imgui.cpp	/^static void*   MallocWrapper(size_t size, void* user_data)    { (void)user_data; (void)size; IM_/;"	f	typeref:typename:void *	file:
MallocWrapper	lib/cimgui/imgui/imgui.cpp	/^static void*   MallocWrapper(size_t size, void* user_data)    { (void)user_data; return malloc(s/;"	f	typeref:typename:void *	file:
MarkIniSettingsDirty	lib/cimgui/imgui/imgui.cpp	/^static void MarkIniSettingsDirty(ImGuiWindow* window)$/;"	f	typeref:typename:void	file:
MarkIniSettingsDirty	lib/cimgui/imgui/imgui.cpp	/^void ImGui::MarkIniSettingsDirty()$/;"	f	class:ImGui	typeref:typename:void
Max	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      Max;    \/\/ Lower-right$/;"	m	struct:ImRect	typeref:typename:ImVec2
MaxAdvanceWidth	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float       MaxAdvanceWidth;    \/\/ This field gives the maximum horizontal cursor adva/;"	m	struct:__anon71f5b57f0110::FontInfo	typeref:typename:float	file:
MaxX	lib/cimgui/imgui/imgui_internal.h	/^    float               MinX, MaxX;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:float
MemAlloc	lib/cimgui/imgui/imgui.cpp	/^void* ImGui::MemAlloc(size_t sz)$/;"	f	class:ImGui	typeref:typename:void *
MemFree	lib/cimgui/imgui/imgui.cpp	/^void ImGui::MemFree(void* ptr)$/;"	f	class:ImGui	typeref:typename:void
MenuBarAppending	lib/cimgui/imgui/imgui_internal.h	/^    bool                    MenuBarAppending;       \/\/ FIXME: Remove this$/;"	m	struct:ImGuiDrawContext	typeref:typename:bool
MenuBarHeight	lib/cimgui/imgui/imgui_internal.h	/^    float       MenuBarHeight() const                   { return (Flags & ImGuiWindowFlags_MenuB/;"	f	struct:ImGuiWindow	typeref:typename:float
MenuBarOffsetX	lib/cimgui/imgui/imgui_internal.h	/^    float                   MenuBarOffsetX;$/;"	m	struct:ImGuiDrawContext	typeref:typename:float
MenuBarRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect      MenuBarRect() const                     { float y1 = Pos.y + TitleBarHeight(); r/;"	f	struct:ImGuiWindow	typeref:typename:ImRect
MenuColumns	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiMenuColumns        MenuColumns;                        \/\/ Simplified columns storage /;"	m	struct:ImGuiWindow	typeref:typename:ImGuiMenuColumns
MenuItem	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::MenuItem(const char* label, const char* shortcut, bool selected, bool enabled)$/;"	f	class:ImGui	typeref:typename:bool
MenuItem	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::MenuItem(const char* label, const char* shortcut, bool* p_selected, bool enabled)$/;"	f	class:ImGui	typeref:typename:bool
MergeMode	lib/cimgui/cimgui/cimgui.h	/^    bool MergeMode;$/;"	m	struct:ImFontConfig	typeref:typename:bool
MergeMode	lib/cimgui/imgui/imgui.h	/^    bool            MergeMode;              \/\/ false    \/\/ Merge into previous ImFont, so yo/;"	m	struct:ImFontConfig	typeref:typename:bool
MetricsActiveWindows	lib/cimgui/cimgui/cimgui.h	/^    int MetricsActiveWindows;$/;"	m	struct:ImGuiIO	typeref:typename:int
MetricsActiveWindows	lib/cimgui/imgui/imgui.h	/^    int         MetricsActiveWindows;       \/\/ Number of visible root windows (exclude child w/;"	m	struct:ImGuiIO	typeref:typename:int
MetricsRenderIndices	lib/cimgui/cimgui/cimgui.h	/^    int MetricsRenderIndices;$/;"	m	struct:ImGuiIO	typeref:typename:int
MetricsRenderIndices	lib/cimgui/imgui/imgui.h	/^    int         MetricsRenderIndices;       \/\/ Indices output during last call to Render() = n/;"	m	struct:ImGuiIO	typeref:typename:int
MetricsRenderVertices	lib/cimgui/cimgui/cimgui.h	/^    int MetricsRenderVertices;$/;"	m	struct:ImGuiIO	typeref:typename:int
MetricsRenderVertices	lib/cimgui/imgui/imgui.h	/^    int         MetricsRenderVertices;      \/\/ Vertices output during last call to Render()$/;"	m	struct:ImGuiIO	typeref:typename:int
MetricsTotalSurface	lib/cimgui/imgui/imgui.h	/^    int                         MetricsTotalSurface;\/\/              \/\/ Total surface in pixe/;"	m	struct:ImFont	typeref:typename:int
Min	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      Min;    \/\/ Upper-left$/;"	m	struct:ImRect	typeref:typename:ImVec2
MinX	lib/cimgui/imgui/imgui_internal.h	/^    float               MinX, MaxX;$/;"	m	struct:ImGuiColumnsSet	typeref:typename:float
ModalWindowDarkeningRatio	lib/cimgui/imgui/imgui_internal.h	/^    float                   ModalWindowDarkeningRatio;$/;"	m	struct:ImGuiContext	typeref:typename:float
MonoHinting	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        MonoHinting     = 1 << 4,   \/\/ Strong hinting algorithm that should only be used for m/;"	e	enum:ImGuiFreeType::RasterizerFlags
MouseClicked	lib/cimgui/cimgui/cimgui.h	/^	bool MouseClicked[5];$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseClicked	lib/cimgui/imgui/imgui.h	/^    bool        MouseClicked[5];            \/\/ Mouse button went from !Down to Down$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseClickedPos	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 MouseClickedPos[5];$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2[5]
MouseClickedPos	lib/cimgui/imgui/imgui.h	/^    ImVec2      MouseClickedPos[5];         \/\/ Position at time of clicking$/;"	m	struct:ImGuiIO	typeref:typename:ImVec2[5]
MouseClickedTime	lib/cimgui/cimgui/cimgui.h	/^    float MouseClickedTime[5];$/;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseClickedTime	lib/cimgui/imgui/imgui.h	/^    float       MouseClickedTime[5];        \/\/ Time of last click (used to figure out double-c/;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseCursor	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiMouseCursor        MouseCursor;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiMouseCursor
MouseCursorScale	lib/cimgui/imgui/imgui.h	/^    float       MouseCursorScale;           \/\/ Scale software rendered mouse cursor (when io.M/;"	m	struct:ImGuiStyle	typeref:typename:float
MouseDelta	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 MouseDelta;$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2
MouseDelta	lib/cimgui/imgui/imgui.h	/^    ImVec2      MouseDelta;                 \/\/ Mouse delta. Note that this is zero if either c/;"	m	struct:ImGuiIO	typeref:typename:ImVec2
MouseDoubleClickMaxDist	lib/cimgui/cimgui/cimgui.h	/^    float MouseDoubleClickMaxDist;$/;"	m	struct:ImGuiIO	typeref:typename:float
MouseDoubleClickMaxDist	lib/cimgui/imgui/imgui.h	/^    float         MouseDoubleClickMaxDist;  \/\/ = 6.0f               \/\/ Distance threshold to/;"	m	struct:ImGuiIO	typeref:typename:float
MouseDoubleClickTime	lib/cimgui/cimgui/cimgui.h	/^    float MouseDoubleClickTime;$/;"	m	struct:ImGuiIO	typeref:typename:float
MouseDoubleClickTime	lib/cimgui/imgui/imgui.h	/^    float         MouseDoubleClickTime;     \/\/ = 0.30f              \/\/ Time for a double-cli/;"	m	struct:ImGuiIO	typeref:typename:float
MouseDoubleClicked	lib/cimgui/cimgui/cimgui.h	/^    bool MouseDoubleClicked[5];$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseDoubleClicked	lib/cimgui/imgui/imgui.h	/^    bool        MouseDoubleClicked[5];      \/\/ Has mouse button been double-clicked?$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseDown	lib/cimgui/cimgui/cimgui.h	/^    bool MouseDown[5];$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseDown	lib/cimgui/imgui/imgui.h	/^    bool        MouseDown[5];                   \/\/ Mouse buttons: left, right, middle + extras/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseDownDuration	lib/cimgui/cimgui/cimgui.h	/^    float MouseDownDuration[5];$/;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseDownDuration	lib/cimgui/imgui/imgui.h	/^    float       MouseDownDuration[5];       \/\/ Duration the mouse button has been down (0.0f =/;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseDownDurationPrev	lib/cimgui/cimgui/cimgui.h	/^    float MouseDownDurationPrev[5];$/;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseDownDurationPrev	lib/cimgui/imgui/imgui.h	/^    float       MouseDownDurationPrev[5];   \/\/ Previous time the mouse button has been down$/;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseDownOwned	lib/cimgui/cimgui/cimgui.h	/^    bool MouseDownOwned[5];$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseDownOwned	lib/cimgui/imgui/imgui.h	/^    bool        MouseDownOwned[5];          \/\/ Track if button was clicked inside a window. We/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseDragMaxDistanceAbs	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 MouseDragMaxDistanceAbs[5];$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2[5]
MouseDragMaxDistanceAbs	lib/cimgui/imgui/imgui.h	/^    ImVec2      MouseDragMaxDistanceAbs[5]; \/\/ Maximum distance, absolute, on each axis, of ho/;"	m	struct:ImGuiIO	typeref:typename:ImVec2[5]
MouseDragMaxDistanceSqr	lib/cimgui/cimgui/cimgui.h	/^    float MouseDragMaxDistanceSqr[5];$/;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseDragMaxDistanceSqr	lib/cimgui/imgui/imgui.h	/^    float       MouseDragMaxDistanceSqr[5]; \/\/ Squared maximum distance of how much mouse has /;"	m	struct:ImGuiIO	typeref:typename:float[5]
MouseDragThreshold	lib/cimgui/cimgui/cimgui.h	/^    float MouseDragThreshold;$/;"	m	struct:ImGuiIO	typeref:typename:float
MouseDragThreshold	lib/cimgui/imgui/imgui.h	/^    float         MouseDragThreshold;       \/\/ = 6.0f               \/\/ Distance threshold be/;"	m	struct:ImGuiIO	typeref:typename:float
MouseDrawCursor	lib/cimgui/cimgui/cimgui.h	/^    bool MouseDrawCursor;$/;"	m	struct:ImGuiIO	typeref:typename:bool
MouseDrawCursor	lib/cimgui/imgui/imgui.h	/^    bool        MouseDrawCursor;                \/\/ Request ImGui to draw a mouse cursor for yo/;"	m	struct:ImGuiIO	typeref:typename:bool
MousePos	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 MousePos;$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2
MousePos	lib/cimgui/imgui/imgui.h	/^    ImVec2      MousePos;                       \/\/ Mouse position, in pixels. Set to ImVec2(-F/;"	m	struct:ImGuiIO	typeref:typename:ImVec2
MousePosPrev	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 MousePosPrev;$/;"	m	struct:ImGuiIO	typeref:struct:ImVec2
MousePosPrev	lib/cimgui/imgui/imgui.h	/^    ImVec2      MousePosPrev;               \/\/ Previous mouse position temporary storage (nb: /;"	m	struct:ImGuiIO	typeref:typename:ImVec2
MouseReleased	lib/cimgui/cimgui/cimgui.h	/^    bool MouseReleased[5];$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseReleased	lib/cimgui/imgui/imgui.h	/^    bool        MouseReleased[5];           \/\/ Mouse button went from Down to !Down$/;"	m	struct:ImGuiIO	typeref:typename:bool[5]
MouseWheel	lib/cimgui/cimgui/cimgui.h	/^    float MouseWheel;$/;"	m	struct:ImGuiIO	typeref:typename:float
MouseWheel	lib/cimgui/imgui/imgui.h	/^    float       MouseWheel;                     \/\/ Mouse wheel: 1 unit scrolls about 5 lines t/;"	m	struct:ImGuiIO	typeref:typename:float
MouseWheelH	lib/cimgui/cimgui/cimgui.h	/^	float MouseWheelH;$/;"	m	struct:ImGuiIO	typeref:typename:float
MouseWheelH	lib/cimgui/imgui/imgui.h	/^    float       MouseWheelH;                    \/\/ Mouse wheel (Horizontal). Most users don't /;"	m	struct:ImGuiIO	typeref:typename:float
MoveId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 MoveId;                             \/\/ == window->GetID("#MOVE")$/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiID
MovingWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            MovingWindow;                       \/\/ Track the window we clicked/;"	m	struct:ImGuiContext	typeref:typename:ImGuiWindow *
N	lib/klib/test/kstring_bench.c	/^#define N /;"	d	file:
NAV_MAP_KEY	lib/cimgui/imgui/imgui.cpp	/^        #define NAV_MAP_KEY(/;"	d	file:
NK_ABS	lib/nuklear/nuklear.h	/^#define NK_ABS(/;"	d
NK_ABS	lib/nuklear/src/nuklear.h	/^#define NK_ABS(/;"	d
NK_ADJACENCY_BONUS	lib/nuklear/nuklear.h	/^    #define NK_ADJACENCY_BONUS /;"	d
NK_ADJACENCY_BONUS	lib/nuklear/src/nuklear_util.c	/^    #define NK_ADJACENCY_BONUS /;"	d	file:
NK_ALIGNOF	lib/nuklear/nuklear.h	/^#define NK_ALIGNOF(/;"	d
NK_ALIGNOF	lib/nuklear/src/nuklear.h	/^#define NK_ALIGNOF(/;"	d
NK_ALIGN_PTR	lib/nuklear/nuklear.h	/^#define NK_ALIGN_PTR(/;"	d
NK_ALIGN_PTR	lib/nuklear/src/nuklear.h	/^#define NK_ALIGN_PTR(/;"	d
NK_ALIGN_PTR_BACK	lib/nuklear/nuklear.h	/^#define NK_ALIGN_PTR_BACK(/;"	d
NK_ALIGN_PTR_BACK	lib/nuklear/src/nuklear.h	/^#define NK_ALIGN_PTR_BACK(/;"	d
NK_ALLEGRO5_H_	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^#define NK_ALLEGRO5_H_$/;"	d
NK_ALLEGRO5_IMPLEMENTATION	lib/nuklear/demo/allegro5/main.c	/^#define NK_ALLEGRO5_IMPLEMENTATION$/;"	d	file:
NK_ALLEGRO5_TEXT_MAX	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^#define NK_ALLEGRO5_TEXT_MAX /;"	d
NK_ANTI_ALIASING_OFF	lib/nuklear/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_OFF	lib/nuklear/src/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_ON	lib/nuklear/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_ANTI_ALIASING_ON	lib/nuklear/src/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	e	enum:nk_anti_aliasing
NK_API	lib/nuklear/nuklear.h	/^      #define NK_API /;"	d
NK_API	lib/nuklear/src/nuklear.h	/^      #define NK_API /;"	d
NK_ARG_FLAG_LEFT	lib/nuklear/nuklear.h	/^        NK_ARG_FLAG_LEFT = 0x01,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_LEFT	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_FLAG_LEFT = 0x01,$/;"	e	enum:nk_vsnprintf::nk_arg_flags	file:
NK_ARG_FLAG_NUM	lib/nuklear/nuklear.h	/^        NK_ARG_FLAG_NUM = 0x10,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_NUM	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_FLAG_NUM = 0x10,$/;"	e	enum:nk_vsnprintf::nk_arg_flags	file:
NK_ARG_FLAG_PLUS	lib/nuklear/nuklear.h	/^        NK_ARG_FLAG_PLUS = 0x02,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_PLUS	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_FLAG_PLUS = 0x02,$/;"	e	enum:nk_vsnprintf::nk_arg_flags	file:
NK_ARG_FLAG_SPACE	lib/nuklear/nuklear.h	/^        NK_ARG_FLAG_SPACE = 0x04,$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_SPACE	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_FLAG_SPACE = 0x04,$/;"	e	enum:nk_vsnprintf::nk_arg_flags	file:
NK_ARG_FLAG_ZERO	lib/nuklear/nuklear.h	/^        NK_ARG_FLAG_ZERO = 0x20$/;"	e	enum:nk_vsnprintf::nk_arg_flags
NK_ARG_FLAG_ZERO	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_FLAG_ZERO = 0x20$/;"	e	enum:nk_vsnprintf::nk_arg_flags	file:
NK_ARG_TYPE_CHAR	lib/nuklear/nuklear.h	/^        NK_ARG_TYPE_CHAR,$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ARG_TYPE_CHAR	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_TYPE_CHAR,$/;"	e	enum:nk_vsnprintf::nk_arg_type	file:
NK_ARG_TYPE_DEFAULT	lib/nuklear/nuklear.h	/^        NK_ARG_TYPE_DEFAULT,$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ARG_TYPE_DEFAULT	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_TYPE_DEFAULT,$/;"	e	enum:nk_vsnprintf::nk_arg_type	file:
NK_ARG_TYPE_LONG	lib/nuklear/nuklear.h	/^        NK_ARG_TYPE_LONG$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ARG_TYPE_LONG	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_TYPE_LONG$/;"	e	enum:nk_vsnprintf::nk_arg_type	file:
NK_ARG_TYPE_SHORT	lib/nuklear/nuklear.h	/^        NK_ARG_TYPE_SHORT,$/;"	e	enum:nk_vsnprintf::nk_arg_type
NK_ARG_TYPE_SHORT	lib/nuklear/src/nuklear_util.c	/^        NK_ARG_TYPE_SHORT,$/;"	e	enum:nk_vsnprintf::nk_arg_type	file:
NK_ASSERT	lib/nuklear/nuklear.h	/^#define NK_ASSERT(/;"	d
NK_ASSERT	lib/nuklear/src/nuklear_internal.h	/^#define NK_ASSERT(/;"	d
NK_BETWEEN	lib/nuklear/nuklear.h	/^#define NK_BETWEEN(/;"	d
NK_BETWEEN	lib/nuklear/src/nuklear.h	/^#define NK_BETWEEN(/;"	d
NK_BUFFER_BACK	lib/nuklear/nuklear.h	/^    NK_BUFFER_BACK,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_BACK	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_BACK,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_DEFAULT_INITIAL_SIZE	lib/nuklear/nuklear.h	/^#define NK_BUFFER_DEFAULT_INITIAL_SIZE /;"	d
NK_BUFFER_DEFAULT_INITIAL_SIZE	lib/nuklear/src/nuklear_internal.h	/^#define NK_BUFFER_DEFAULT_INITIAL_SIZE /;"	d
NK_BUFFER_DYNAMIC	lib/nuklear/nuklear.h	/^    NK_BUFFER_DYNAMIC$/;"	e	enum:nk_allocation_type
NK_BUFFER_DYNAMIC	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_DYNAMIC$/;"	e	enum:nk_allocation_type
NK_BUFFER_FIXED	lib/nuklear/nuklear.h	/^    NK_BUFFER_FIXED,$/;"	e	enum:nk_allocation_type
NK_BUFFER_FIXED	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_FIXED,$/;"	e	enum:nk_allocation_type
NK_BUFFER_FRONT	lib/nuklear/nuklear.h	/^    NK_BUFFER_FRONT,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_FRONT	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_FRONT,$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_MAX	lib/nuklear/nuklear.h	/^    NK_BUFFER_MAX$/;"	e	enum:nk_buffer_allocation_type
NK_BUFFER_MAX	lib/nuklear/src/nuklear.h	/^    NK_BUFFER_MAX$/;"	e	enum:nk_buffer_allocation_type
NK_BUTTON_BEHAVIOR_STACK_SIZE	lib/nuklear/nuklear.h	/^#define NK_BUTTON_BEHAVIOR_STACK_SIZE /;"	d
NK_BUTTON_BEHAVIOR_STACK_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_BUTTON_BEHAVIOR_STACK_SIZE /;"	d
NK_BUTTON_DEFAULT	lib/nuklear/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_DEFAULT	lib/nuklear/src/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_DOUBLE	lib/nuklear/nuklear.h	/^    NK_BUTTON_DOUBLE,$/;"	e	enum:nk_buttons
NK_BUTTON_DOUBLE	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_DOUBLE,$/;"	e	enum:nk_buttons
NK_BUTTON_LEFT	lib/nuklear/nuklear.h	/^    NK_BUTTON_LEFT,$/;"	e	enum:nk_buttons
NK_BUTTON_LEFT	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_LEFT,$/;"	e	enum:nk_buttons
NK_BUTTON_MAX	lib/nuklear/nuklear.h	/^    NK_BUTTON_MAX$/;"	e	enum:nk_buttons
NK_BUTTON_MAX	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_MAX$/;"	e	enum:nk_buttons
NK_BUTTON_MIDDLE	lib/nuklear/nuklear.h	/^    NK_BUTTON_MIDDLE,$/;"	e	enum:nk_buttons
NK_BUTTON_MIDDLE	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_MIDDLE,$/;"	e	enum:nk_buttons
NK_BUTTON_REPEATER	lib/nuklear/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_REPEATER	lib/nuklear/src/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	e	enum:nk_button_behavior
NK_BUTTON_RIGHT	lib/nuklear/nuklear.h	/^    NK_BUTTON_RIGHT,$/;"	e	enum:nk_buttons
NK_BUTTON_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_BUTTON_RIGHT,$/;"	e	enum:nk_buttons
NK_CAMEL_BONUS	lib/nuklear/nuklear.h	/^    #define NK_CAMEL_BONUS /;"	d
NK_CAMEL_BONUS	lib/nuklear/src/nuklear_util.c	/^    #define NK_CAMEL_BONUS /;"	d	file:
NK_CHART_CLICKED	lib/nuklear/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_CLICKED	lib/nuklear/src/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_COLUMN	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_COLUMN	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_HOVERING	lib/nuklear/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_HOVERING	lib/nuklear/src/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	e	enum:nk_chart_event
NK_CHART_LINES	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_LINES	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	e	enum:nk_chart_type
NK_CHART_MAX_SLOT	lib/nuklear/nuklear.h	/^#define NK_CHART_MAX_SLOT /;"	d
NK_CHART_MAX_SLOT	lib/nuklear/src/nuklear.h	/^#define NK_CHART_MAX_SLOT /;"	d
NK_CLAMP	lib/nuklear/nuklear.h	/^#define NK_CLAMP(/;"	d
NK_CLAMP	lib/nuklear/src/nuklear.h	/^#define NK_CLAMP(/;"	d
NK_CLIPPING_OFF	lib/nuklear/nuklear.h	/^    NK_CLIPPING_OFF = nk_false,$/;"	e	enum:nk_command_clipping
NK_CLIPPING_OFF	lib/nuklear/src/nuklear.h	/^    NK_CLIPPING_OFF = nk_false,$/;"	e	enum:nk_command_clipping
NK_CLIPPING_ON	lib/nuklear/nuklear.h	/^    NK_CLIPPING_ON = nk_true$/;"	e	enum:nk_command_clipping
NK_CLIPPING_ON	lib/nuklear/src/nuklear.h	/^    NK_CLIPPING_ON = nk_true$/;"	e	enum:nk_command_clipping
NK_COLOR	lib/nuklear/nuklear.h	/^#define NK_COLOR(/;"	d
NK_COLOR	lib/nuklear/src/nuklear_style.c	/^#define NK_COLOR(/;"	d	file:
NK_COLOR_BORDER	lib/nuklear/nuklear.h	/^    NK_COLOR_BORDER,$/;"	e	enum:nk_style_colors
NK_COLOR_BORDER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BORDER,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON	lib/nuklear/nuklear.h	/^    NK_COLOR_BUTTON,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BUTTON,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_BUTTON_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BUTTON_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_BUTTON_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_BUTTON_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_BUTTON_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART	lib/nuklear/nuklear.h	/^    NK_COLOR_CHART,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART	lib/nuklear/src/nuklear.h	/^    NK_COLOR_CHART,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR	lib/nuklear/nuklear.h	/^    NK_COLOR_CHART_COLOR,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_CHART_COLOR,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR_HIGHLIGHT	lib/nuklear/nuklear.h	/^    NK_COLOR_CHART_COLOR_HIGHLIGHT,$/;"	e	enum:nk_style_colors
NK_COLOR_CHART_COLOR_HIGHLIGHT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_CHART_COLOR_HIGHLIGHT,$/;"	e	enum:nk_style_colors
NK_COLOR_COMBO	lib/nuklear/nuklear.h	/^    NK_COLOR_COMBO,$/;"	e	enum:nk_style_colors
NK_COLOR_COMBO	lib/nuklear/src/nuklear.h	/^    NK_COLOR_COMBO,$/;"	e	enum:nk_style_colors
NK_COLOR_COUNT	lib/nuklear/nuklear.h	/^    NK_COLOR_COUNT$/;"	e	enum:nk_style_colors
NK_COLOR_COUNT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_COUNT$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT	lib/nuklear/nuklear.h	/^    NK_COLOR_EDIT,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_EDIT,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_EDIT_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_EDIT_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_EDIT_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_HEADER	lib/nuklear/nuklear.h	/^    NK_COLOR_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_HEADER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_MAP	lib/nuklear/nuklear.h	/^#define NK_COLOR_MAP(/;"	d
NK_COLOR_MAP	lib/nuklear/src/nuklear_style.c	/^#define NK_COLOR_MAP(/;"	d	file:
NK_COLOR_PROPERTY	lib/nuklear/nuklear.h	/^    NK_COLOR_PROPERTY,$/;"	e	enum:nk_style_colors
NK_COLOR_PROPERTY	lib/nuklear/src/nuklear.h	/^    NK_COLOR_PROPERTY,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SCROLLBAR_CURSOR_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SCROLLBAR_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT	lib/nuklear/nuklear.h	/^    NK_COLOR_SELECT,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SELECT,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_SELECT_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SELECT_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SELECT_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_ACTIVE	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_ACTIVE,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_SLIDER_CURSOR_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_SLIDER_CURSOR_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_STACK_SIZE	lib/nuklear/nuklear.h	/^#define NK_COLOR_STACK_SIZE /;"	d
NK_COLOR_STACK_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_COLOR_STACK_SIZE /;"	d
NK_COLOR_TAB_HEADER	lib/nuklear/nuklear.h	/^    NK_COLOR_TAB_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_TAB_HEADER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TAB_HEADER,$/;"	e	enum:nk_style_colors
NK_COLOR_TEXT	lib/nuklear/nuklear.h	/^    NK_COLOR_TEXT,$/;"	e	enum:nk_style_colors
NK_COLOR_TEXT	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TEXT,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE	lib/nuklear/nuklear.h	/^    NK_COLOR_TOGGLE,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TOGGLE,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_CURSOR	lib/nuklear/nuklear.h	/^    NK_COLOR_TOGGLE_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TOGGLE_CURSOR,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_HOVER	lib/nuklear/nuklear.h	/^    NK_COLOR_TOGGLE_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_TOGGLE_HOVER	lib/nuklear/src/nuklear.h	/^    NK_COLOR_TOGGLE_HOVER,$/;"	e	enum:nk_style_colors
NK_COLOR_WINDOW	lib/nuklear/nuklear.h	/^    NK_COLOR_WINDOW,$/;"	e	enum:nk_style_colors
NK_COLOR_WINDOW	lib/nuklear/src/nuklear.h	/^    NK_COLOR_WINDOW,$/;"	e	enum:nk_style_colors
NK_COMMAND_ARC	lib/nuklear/nuklear.h	/^    NK_COMMAND_ARC,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_ARC,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_ARC_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_ARC_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_ARC_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE	lib/nuklear/nuklear.h	/^    NK_COMMAND_CIRCLE,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CIRCLE,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_CIRCLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CIRCLE_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CIRCLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_CURVE	lib/nuklear/nuklear.h	/^    NK_COMMAND_CURVE,$/;"	e	enum:nk_command_type
NK_COMMAND_CURVE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CURVE,$/;"	e	enum:nk_command_type
NK_COMMAND_CUSTOM	lib/nuklear/nuklear.h	/^    NK_COMMAND_CUSTOM$/;"	e	enum:nk_command_type
NK_COMMAND_CUSTOM	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_CUSTOM$/;"	e	enum:nk_command_type
NK_COMMAND_IMAGE	lib/nuklear/nuklear.h	/^    NK_COMMAND_IMAGE,$/;"	e	enum:nk_command_type
NK_COMMAND_IMAGE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_IMAGE,$/;"	e	enum:nk_command_type
NK_COMMAND_LINE	lib/nuklear/nuklear.h	/^    NK_COMMAND_LINE,$/;"	e	enum:nk_command_type
NK_COMMAND_LINE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_LINE,$/;"	e	enum:nk_command_type
NK_COMMAND_NOP	lib/nuklear/nuklear.h	/^    NK_COMMAND_NOP,$/;"	e	enum:nk_command_type
NK_COMMAND_NOP	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_NOP,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON	lib/nuklear/nuklear.h	/^    NK_COMMAND_POLYGON,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_POLYGON,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_POLYGON_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYGON_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_POLYGON_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYLINE	lib/nuklear/nuklear.h	/^    NK_COMMAND_POLYLINE,$/;"	e	enum:nk_command_type
NK_COMMAND_POLYLINE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_POLYLINE,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT	lib/nuklear/nuklear.h	/^    NK_COMMAND_RECT,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_RECT,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_RECT_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_RECT_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_MULTI_COLOR	lib/nuklear/nuklear.h	/^    NK_COMMAND_RECT_MULTI_COLOR,$/;"	e	enum:nk_command_type
NK_COMMAND_RECT_MULTI_COLOR	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_RECT_MULTI_COLOR,$/;"	e	enum:nk_command_type
NK_COMMAND_SCISSOR	lib/nuklear/nuklear.h	/^    NK_COMMAND_SCISSOR,$/;"	e	enum:nk_command_type
NK_COMMAND_SCISSOR	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_SCISSOR,$/;"	e	enum:nk_command_type
NK_COMMAND_TEXT	lib/nuklear/nuklear.h	/^    NK_COMMAND_TEXT,$/;"	e	enum:nk_command_type
NK_COMMAND_TEXT	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_TEXT,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE	lib/nuklear/nuklear.h	/^    NK_COMMAND_TRIANGLE,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_TRIANGLE,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE_FILLED	lib/nuklear/nuklear.h	/^    NK_COMMAND_TRIANGLE_FILLED,$/;"	e	enum:nk_command_type
NK_COMMAND_TRIANGLE_FILLED	lib/nuklear/src/nuklear.h	/^    NK_COMMAND_TRIANGLE_FILLED,$/;"	e	enum:nk_command_type
NK_CONFIGURATION_STACK_TYPE	lib/nuklear/nuklear.h	/^#define NK_CONFIGURATION_STACK_TYPE(/;"	d
NK_CONFIGURATION_STACK_TYPE	lib/nuklear/src/nuklear.h	/^#define NK_CONFIGURATION_STACK_TYPE(/;"	d
NK_CONFIG_STACK	lib/nuklear/nuklear.h	/^#define NK_CONFIG_STACK(/;"	d
NK_CONFIG_STACK	lib/nuklear/src/nuklear.h	/^#define NK_CONFIG_STACK(/;"	d
NK_CONTAINER_OF	lib/nuklear/nuklear.h	/^#define NK_CONTAINER_OF(/;"	d
NK_CONTAINER_OF	lib/nuklear/src/nuklear.h	/^#define NK_CONTAINER_OF(/;"	d
NK_CONTAINS	lib/nuklear/nuklear.h	/^#define NK_CONTAINS(/;"	d
NK_CONTAINS	lib/nuklear/src/nuklear.h	/^#define NK_CONTAINS(/;"	d
NK_CONVERT_COMMAND_BUFFER_FULL	lib/nuklear/nuklear.h	/^    NK_CONVERT_COMMAND_BUFFER_FULL = NK_FLAG(1),$/;"	e	enum:nk_convert_result
NK_CONVERT_COMMAND_BUFFER_FULL	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_COMMAND_BUFFER_FULL = NK_FLAG(1),$/;"	e	enum:nk_convert_result
NK_CONVERT_ELEMENT_BUFFER_FULL	lib/nuklear/nuklear.h	/^    NK_CONVERT_ELEMENT_BUFFER_FULL = NK_FLAG(3)$/;"	e	enum:nk_convert_result
NK_CONVERT_ELEMENT_BUFFER_FULL	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_ELEMENT_BUFFER_FULL = NK_FLAG(3)$/;"	e	enum:nk_convert_result
NK_CONVERT_INVALID_PARAM	lib/nuklear/nuklear.h	/^    NK_CONVERT_INVALID_PARAM = 1,$/;"	e	enum:nk_convert_result
NK_CONVERT_INVALID_PARAM	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_INVALID_PARAM = 1,$/;"	e	enum:nk_convert_result
NK_CONVERT_SUCCESS	lib/nuklear/nuklear.h	/^    NK_CONVERT_SUCCESS = 0,$/;"	e	enum:nk_convert_result
NK_CONVERT_SUCCESS	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_SUCCESS = 0,$/;"	e	enum:nk_convert_result
NK_CONVERT_VERTEX_BUFFER_FULL	lib/nuklear/nuklear.h	/^    NK_CONVERT_VERTEX_BUFFER_FULL = NK_FLAG(2),$/;"	e	enum:nk_convert_result
NK_CONVERT_VERTEX_BUFFER_FULL	lib/nuklear/src/nuklear.h	/^    NK_CONVERT_VERTEX_BUFFER_FULL = NK_FLAG(2),$/;"	e	enum:nk_convert_result
NK_COORD_PIXEL	lib/nuklear/nuklear.h	/^    NK_COORD_PIXEL \/* texture coordinates inside font glyphs are in absolute pixel *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_PIXEL	lib/nuklear/src/nuklear.h	/^    NK_COORD_PIXEL \/* texture coordinates inside font glyphs are in absolute pixel *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_UV	lib/nuklear/nuklear.h	/^    NK_COORD_UV, \/* texture coordinates inside font glyphs are clamped between 0-1 *\/$/;"	e	enum:nk_font_coord_type
NK_COORD_UV	lib/nuklear/src/nuklear.h	/^    NK_COORD_UV, \/* texture coordinates inside font glyphs are clamped between 0-1 *\/$/;"	e	enum:nk_font_coord_type
NK_COS	lib/nuklear/nuklear.h	/^#define NK_COS /;"	d
NK_COS	lib/nuklear/src/nuklear_internal.h	/^#define NK_COS /;"	d
NK_CURSOR_ARROW	lib/nuklear/nuklear.h	/^    NK_CURSOR_ARROW,$/;"	e	enum:nk_style_cursor
NK_CURSOR_ARROW	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_ARROW,$/;"	e	enum:nk_style_cursor
NK_CURSOR_COUNT	lib/nuklear/nuklear.h	/^    NK_CURSOR_COUNT$/;"	e	enum:nk_style_cursor
NK_CURSOR_COUNT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_COUNT$/;"	e	enum:nk_style_cursor
NK_CURSOR_DATA_H	lib/nuklear/nuklear.h	/^#define NK_CURSOR_DATA_H /;"	d
NK_CURSOR_DATA_H	lib/nuklear/src/nuklear_font.c	/^#define NK_CURSOR_DATA_H /;"	d	file:
NK_CURSOR_DATA_W	lib/nuklear/nuklear.h	/^#define NK_CURSOR_DATA_W /;"	d
NK_CURSOR_DATA_W	lib/nuklear/src/nuklear_font.c	/^#define NK_CURSOR_DATA_W /;"	d	file:
NK_CURSOR_MOVE	lib/nuklear/nuklear.h	/^    NK_CURSOR_MOVE,$/;"	e	enum:nk_style_cursor
NK_CURSOR_MOVE	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_MOVE,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_HORIZONTAL	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_HORIZONTAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_HORIZONTAL	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_HORIZONTAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_LEFT_DOWN_RIGHT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_TOP_RIGHT_DOWN_LEFT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_VERTICAL	lib/nuklear/nuklear.h	/^    NK_CURSOR_RESIZE_VERTICAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_RESIZE_VERTICAL	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_RESIZE_VERTICAL,$/;"	e	enum:nk_style_cursor
NK_CURSOR_TEXT	lib/nuklear/nuklear.h	/^    NK_CURSOR_TEXT,$/;"	e	enum:nk_style_cursor
NK_CURSOR_TEXT	lib/nuklear/src/nuklear.h	/^    NK_CURSOR_TEXT,$/;"	e	enum:nk_style_cursor
NK_D3D11_H_	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^#define NK_D3D11_H_$/;"	d
NK_D3D11_IMPLEMENTATION	lib/nuklear/demo/d3d11/main.c	/^#define NK_D3D11_IMPLEMENTATION$/;"	d	file:
NK_D3D9_H_	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^#define NK_D3D9_H_$/;"	d
NK_D3D9_IMPLEMENTATION	lib/nuklear/demo/d3d9/main.c	/^#define NK_D3D9_IMPLEMENTATION$/;"	d	file:
NK_DEFAULT	lib/nuklear/nuklear.h	/^#define NK_DEFAULT /;"	d
NK_DEFAULT	lib/nuklear/src/nuklear_internal.h	/^#define NK_DEFAULT /;"	d
NK_DEFAULT_COMMAND_BUFFER_SIZE	lib/nuklear/nuklear.h	/^#define NK_DEFAULT_COMMAND_BUFFER_SIZE /;"	d
NK_DEFAULT_COMMAND_BUFFER_SIZE	lib/nuklear/src/nuklear_internal.h	/^#define NK_DEFAULT_COMMAND_BUFFER_SIZE /;"	d
NK_DOWN	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_DOWN	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_DO_NOT_STOP_ON_NEW_LINE	lib/nuklear/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anond7ed09940603
NK_DO_NOT_STOP_ON_NEW_LINE	lib/nuklear/src/nuklear_internal.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anonc61c00070103
NK_DTOA	lib/nuklear/nuklear.h	/^#define NK_DTOA /;"	d
NK_DTOA	lib/nuklear/src/nuklear_internal.h	/^#define NK_DTOA /;"	d
NK_DYNAMIC	lib/nuklear/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_DYNAMIC	lib/nuklear/src/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_EDIT_ACTIVATED	lib/nuklear/nuklear.h	/^    NK_EDIT_ACTIVATED   = NK_FLAG(2), \/* edit widget went from state inactive to state active */;"	e	enum:nk_edit_events
NK_EDIT_ACTIVATED	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ACTIVATED   = NK_FLAG(2), \/* edit widget went from state inactive to state active */;"	e	enum:nk_edit_events
NK_EDIT_ACTIVE	lib/nuklear/nuklear.h	/^    NK_EDIT_ACTIVE      = NK_FLAG(0), \/* edit widget is currently being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ACTIVE      = NK_FLAG(0), \/* edit widget is currently being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_ALLOW_TAB	lib/nuklear/nuklear.h	/^    NK_EDIT_ALLOW_TAB               = NK_FLAG(3),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALLOW_TAB	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ALLOW_TAB               = NK_FLAG(3),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALWAYS_INSERT_MODE	lib/nuklear/nuklear.h	/^    NK_EDIT_ALWAYS_INSERT_MODE      = NK_FLAG(9),$/;"	e	enum:nk_edit_flags
NK_EDIT_ALWAYS_INSERT_MODE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_ALWAYS_INSERT_MODE      = NK_FLAG(9),$/;"	e	enum:nk_edit_flags
NK_EDIT_AUTO_SELECT	lib/nuklear/nuklear.h	/^    NK_EDIT_AUTO_SELECT             = NK_FLAG(1),$/;"	e	enum:nk_edit_flags
NK_EDIT_AUTO_SELECT	lib/nuklear/src/nuklear.h	/^    NK_EDIT_AUTO_SELECT             = NK_FLAG(1),$/;"	e	enum:nk_edit_flags
NK_EDIT_BOX	lib/nuklear/nuklear.h	/^    NK_EDIT_BOX     = NK_EDIT_ALWAYS_INSERT_MODE| NK_EDIT_SELECTABLE| NK_EDIT_MULTILINE|NK_EDIT_/;"	e	enum:nk_edit_types
NK_EDIT_BOX	lib/nuklear/src/nuklear.h	/^    NK_EDIT_BOX     = NK_EDIT_ALWAYS_INSERT_MODE| NK_EDIT_SELECTABLE| NK_EDIT_MULTILINE|NK_EDIT_/;"	e	enum:nk_edit_types
NK_EDIT_CLIPBOARD	lib/nuklear/nuklear.h	/^    NK_EDIT_CLIPBOARD               = NK_FLAG(6),$/;"	e	enum:nk_edit_flags
NK_EDIT_CLIPBOARD	lib/nuklear/src/nuklear.h	/^    NK_EDIT_CLIPBOARD               = NK_FLAG(6),$/;"	e	enum:nk_edit_flags
NK_EDIT_COMMITED	lib/nuklear/nuklear.h	/^    NK_EDIT_COMMITED    = NK_FLAG(4) \/* edit widget has received an enter and lost focus *\/$/;"	e	enum:nk_edit_events
NK_EDIT_COMMITED	lib/nuklear/src/nuklear.h	/^    NK_EDIT_COMMITED    = NK_FLAG(4) \/* edit widget has received an enter and lost focus *\/$/;"	e	enum:nk_edit_events
NK_EDIT_CTRL_ENTER_NEWLINE	lib/nuklear/nuklear.h	/^    NK_EDIT_CTRL_ENTER_NEWLINE      = NK_FLAG(7),$/;"	e	enum:nk_edit_flags
NK_EDIT_CTRL_ENTER_NEWLINE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_CTRL_ENTER_NEWLINE      = NK_FLAG(7),$/;"	e	enum:nk_edit_flags
NK_EDIT_DEACTIVATED	lib/nuklear/nuklear.h	/^    NK_EDIT_DEACTIVATED = NK_FLAG(3), \/* edit widget went from state active to state inactive */;"	e	enum:nk_edit_events
NK_EDIT_DEACTIVATED	lib/nuklear/src/nuklear.h	/^    NK_EDIT_DEACTIVATED = NK_FLAG(3), \/* edit widget went from state active to state inactive */;"	e	enum:nk_edit_events
NK_EDIT_DEFAULT	lib/nuklear/nuklear.h	/^    NK_EDIT_DEFAULT                 = 0,$/;"	e	enum:nk_edit_flags
NK_EDIT_DEFAULT	lib/nuklear/src/nuklear.h	/^    NK_EDIT_DEFAULT                 = 0,$/;"	e	enum:nk_edit_flags
NK_EDIT_EDITOR	lib/nuklear/nuklear.h	/^    NK_EDIT_EDITOR  = NK_EDIT_SELECTABLE|NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB| NK_EDIT_CLIPBOARD$/;"	e	enum:nk_edit_types
NK_EDIT_EDITOR	lib/nuklear/src/nuklear.h	/^    NK_EDIT_EDITOR  = NK_EDIT_SELECTABLE|NK_EDIT_MULTILINE|NK_EDIT_ALLOW_TAB| NK_EDIT_CLIPBOARD$/;"	e	enum:nk_edit_types
NK_EDIT_FIELD	lib/nuklear/nuklear.h	/^    NK_EDIT_FIELD   = NK_EDIT_SIMPLE|NK_EDIT_SELECTABLE|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_FIELD	lib/nuklear/src/nuklear.h	/^    NK_EDIT_FIELD   = NK_EDIT_SIMPLE|NK_EDIT_SELECTABLE|NK_EDIT_CLIPBOARD,$/;"	e	enum:nk_edit_types
NK_EDIT_GOTO_END_ON_ACTIVATE	lib/nuklear/nuklear.h	/^    NK_EDIT_GOTO_END_ON_ACTIVATE    = NK_FLAG(11)$/;"	e	enum:nk_edit_flags
NK_EDIT_GOTO_END_ON_ACTIVATE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_GOTO_END_ON_ACTIVATE    = NK_FLAG(11)$/;"	e	enum:nk_edit_flags
NK_EDIT_INACTIVE	lib/nuklear/nuklear.h	/^    NK_EDIT_INACTIVE    = NK_FLAG(1), \/* edit widget is not active and is not being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_INACTIVE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_INACTIVE    = NK_FLAG(1), \/* edit widget is not active and is not being modified *\/$/;"	e	enum:nk_edit_events
NK_EDIT_MULTILINE	lib/nuklear/nuklear.h	/^    NK_EDIT_MULTILINE               = NK_FLAG(10),$/;"	e	enum:nk_edit_flags
NK_EDIT_MULTILINE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_MULTILINE               = NK_FLAG(10),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_CURSOR	lib/nuklear/nuklear.h	/^    NK_EDIT_NO_CURSOR               = NK_FLAG(4),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_CURSOR	lib/nuklear/src/nuklear.h	/^    NK_EDIT_NO_CURSOR               = NK_FLAG(4),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_HORIZONTAL_SCROLL	lib/nuklear/nuklear.h	/^    NK_EDIT_NO_HORIZONTAL_SCROLL    = NK_FLAG(8),$/;"	e	enum:nk_edit_flags
NK_EDIT_NO_HORIZONTAL_SCROLL	lib/nuklear/src/nuklear.h	/^    NK_EDIT_NO_HORIZONTAL_SCROLL    = NK_FLAG(8),$/;"	e	enum:nk_edit_flags
NK_EDIT_READ_ONLY	lib/nuklear/nuklear.h	/^    NK_EDIT_READ_ONLY               = NK_FLAG(0),$/;"	e	enum:nk_edit_flags
NK_EDIT_READ_ONLY	lib/nuklear/src/nuklear.h	/^    NK_EDIT_READ_ONLY               = NK_FLAG(0),$/;"	e	enum:nk_edit_flags
NK_EDIT_SELECTABLE	lib/nuklear/nuklear.h	/^    NK_EDIT_SELECTABLE              = NK_FLAG(5),$/;"	e	enum:nk_edit_flags
NK_EDIT_SELECTABLE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_SELECTABLE              = NK_FLAG(5),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIG_ENTER	lib/nuklear/nuklear.h	/^    NK_EDIT_SIG_ENTER               = NK_FLAG(2),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIG_ENTER	lib/nuklear/src/nuklear.h	/^    NK_EDIT_SIG_ENTER               = NK_FLAG(2),$/;"	e	enum:nk_edit_flags
NK_EDIT_SIMPLE	lib/nuklear/nuklear.h	/^    NK_EDIT_SIMPLE  = NK_EDIT_ALWAYS_INSERT_MODE,$/;"	e	enum:nk_edit_types
NK_EDIT_SIMPLE	lib/nuklear/src/nuklear.h	/^    NK_EDIT_SIMPLE  = NK_EDIT_ALWAYS_INSERT_MODE,$/;"	e	enum:nk_edit_types
NK_FILE_LINE	lib/nuklear/nuklear.h	/^  #define NK_FILE_LINE /;"	d
NK_FILE_LINE	lib/nuklear/src/nuklear.h	/^  #define NK_FILE_LINE /;"	d
NK_FILTER_FLOAT	lib/nuklear/nuklear.h	/^    NK_FILTER_FLOAT$/;"	e	enum:nk_property_filter
NK_FILTER_FLOAT	lib/nuklear/src/nuklear_internal.h	/^    NK_FILTER_FLOAT$/;"	e	enum:nk_property_filter
NK_FILTER_INT	lib/nuklear/nuklear.h	/^    NK_FILTER_INT,$/;"	e	enum:nk_property_filter
NK_FILTER_INT	lib/nuklear/src/nuklear_internal.h	/^    NK_FILTER_INT,$/;"	e	enum:nk_property_filter
NK_FIXED	lib/nuklear/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_FIXED	lib/nuklear/src/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_FLAG	lib/nuklear/nuklear.h	/^#define NK_FLAG(/;"	d
NK_FLAG	lib/nuklear/src/nuklear.h	/^#define NK_FLAG(/;"	d
NK_FLAGS_STACK_SIZE	lib/nuklear/nuklear.h	/^#define NK_FLAGS_STACK_SIZE /;"	d
NK_FLAGS_STACK_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_FLAGS_STACK_SIZE /;"	d
NK_FLOAT_PRECISION	lib/nuklear/nuklear.h	/^#define NK_FLOAT_PRECISION /;"	d
NK_FLOAT_PRECISION	lib/nuklear/src/nuklear_internal.h	/^#define NK_FLOAT_PRECISION /;"	d
NK_FLOAT_STACK_SIZE	lib/nuklear/nuklear.h	/^#define NK_FLOAT_STACK_SIZE /;"	d
NK_FLOAT_STACK_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_FLOAT_STACK_SIZE /;"	d
NK_FONT_ATLAS_ALPHA8	lib/nuklear/nuklear.h	/^    NK_FONT_ATLAS_ALPHA8,$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_ALPHA8	lib/nuklear/src/nuklear.h	/^    NK_FONT_ATLAS_ALPHA8,$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_RGBA32	lib/nuklear/nuklear.h	/^    NK_FONT_ATLAS_RGBA32$/;"	e	enum:nk_font_atlas_format
NK_FONT_ATLAS_RGBA32	lib/nuklear/src/nuklear.h	/^    NK_FONT_ATLAS_RGBA32$/;"	e	enum:nk_font_atlas_format
NK_FONT_STACK_SIZE	lib/nuklear/nuklear.h	/^#define NK_FONT_STACK_SIZE /;"	d
NK_FONT_STACK_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_FONT_STACK_SIZE /;"	d
NK_FORMAT_B8G8R8A8	lib/nuklear/nuklear.h	/^    NK_FORMAT_B8G8R8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_B8G8R8A8	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_B8G8R8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_BEGIN	lib/nuklear/nuklear.h	/^NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_BEGIN	lib/nuklear/src/nuklear.h	/^NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_END	lib/nuklear/nuklear.h	/^NK_FORMAT_COLOR_END = NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COLOR_END	lib/nuklear/src/nuklear.h	/^NK_FORMAT_COLOR_END = NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COUNT	lib/nuklear/nuklear.h	/^    NK_FORMAT_COUNT$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_COUNT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_COUNT$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_DOUBLE	lib/nuklear/nuklear.h	/^    NK_FORMAT_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_DOUBLE	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_FLOAT	lib/nuklear/nuklear.h	/^    NK_FORMAT_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_FLOAT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16	lib/nuklear/nuklear.h	/^    NK_FORMAT_R16G15B16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R16G15B16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16A16	lib/nuklear/nuklear.h	/^    NK_FORMAT_R16G15B16A16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R16G15B16A16	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R16G15B16A16,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32A32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32A32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_DOUBLE	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32A32_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_DOUBLE	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32A32_DOUBLE,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_FLOAT	lib/nuklear/nuklear.h	/^    NK_FORMAT_R32G32B32A32_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R32G32B32A32_FLOAT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R32G32B32A32_FLOAT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8	lib/nuklear/nuklear.h	/^    NK_FORMAT_R8G8B8 = NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R8G8B8 = NK_FORMAT_COLOR_BEGIN,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8A8	lib/nuklear/nuklear.h	/^    NK_FORMAT_R8G8B8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_R8G8B8A8	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_R8G8B8A8,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGB32	lib/nuklear/nuklear.h	/^    NK_FORMAT_RGB32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGB32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_RGB32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGBA32	lib/nuklear/nuklear.h	/^    NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_RGBA32	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_RGBA32,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SCHAR	lib/nuklear/nuklear.h	/^    NK_FORMAT_SCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SCHAR	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_SCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SINT	lib/nuklear/nuklear.h	/^    NK_FORMAT_SINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SINT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_SINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SSHORT	lib/nuklear/nuklear.h	/^    NK_FORMAT_SSHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_SSHORT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_SSHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UCHAR	lib/nuklear/nuklear.h	/^    NK_FORMAT_UCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UCHAR	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_UCHAR,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UINT	lib/nuklear/nuklear.h	/^    NK_FORMAT_UINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_UINT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_UINT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_USHORT	lib/nuklear/nuklear.h	/^    NK_FORMAT_USHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_FORMAT_USHORT	lib/nuklear/src/nuklear.h	/^    NK_FORMAT_USHORT,$/;"	e	enum:nk_draw_vertex_layout_format
NK_GDIP_H_	lib/nuklear/demo/gdip/nuklear_gdip.h	/^#define NK_GDIP_H_$/;"	d
NK_GDIP_IMPLEMENTATION	lib/nuklear/demo/gdip/main.c	/^#define NK_GDIP_IMPLEMENTATION$/;"	d	file:
NK_GDI_H_	lib/nuklear/demo/gdi/nuklear_gdi.h	/^#define NK_GDI_H_$/;"	d
NK_GDI_IMPLEMENTATION	lib/nuklear/demo/gdi/main.c	/^#define NK_GDI_IMPLEMENTATION$/;"	d	file:
NK_GLFW3_DEFAULT	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    NK_GLFW3_DEFAULT = 0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_DEFAULT	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    NK_GLFW3_DEFAULT=0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_DEFAULT	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    NK_GLFW3_DEFAULT = 0,$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW3_INSTALL_CALLBACKS	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    NK_GLFW3_INSTALL_CALLBACKS$/;"	e	enum:nk_glfw_init_state
NK_GLFW_DOUBLE_CLICK_HI	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^#define NK_GLFW_DOUBLE_CLICK_HI /;"	d
NK_GLFW_DOUBLE_CLICK_HI	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^#define NK_GLFW_DOUBLE_CLICK_HI /;"	d
NK_GLFW_DOUBLE_CLICK_HI	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_GLFW_DOUBLE_CLICK_HI /;"	d
NK_GLFW_DOUBLE_CLICK_LO	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^#define NK_GLFW_DOUBLE_CLICK_LO /;"	d
NK_GLFW_DOUBLE_CLICK_LO	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^#define NK_GLFW_DOUBLE_CLICK_LO /;"	d
NK_GLFW_DOUBLE_CLICK_LO	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_GLFW_DOUBLE_CLICK_LO /;"	d
NK_GLFW_GL2_H_	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^#define NK_GLFW_GL2_H_$/;"	d
NK_GLFW_GL2_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_GLFW_GL2_IMPLEMENTATION$/;"	d	file:
NK_GLFW_GL3_H_	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^#define NK_GLFW_GL3_H_$/;"	d
NK_GLFW_GL3_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_GLFW_GL3_IMPLEMENTATION$/;"	d	file:
NK_GLFW_GL4_H_	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_GLFW_GL4_H_$/;"	d
NK_GLFW_GL4_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_GLFW_GL4_IMPLEMENTATION$/;"	d	file:
NK_GLFW_MAX_TEXTURES	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_GLFW_MAX_TEXTURES /;"	d
NK_GLFW_TEXT_MAX	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^#define NK_GLFW_TEXT_MAX /;"	d
NK_GLFW_TEXT_MAX	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^#define NK_GLFW_TEXT_MAX /;"	d
NK_GLFW_TEXT_MAX	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_GLFW_TEXT_MAX /;"	d
NK_GLOBAL	lib/nuklear/nuklear.h	/^#define NK_GLOBAL /;"	d
NK_GLOBAL	lib/nuklear/src/nuklear.h	/^#define NK_GLOBAL /;"	d
NK_HEADER_LEFT	lib/nuklear/nuklear.h	/^    NK_HEADER_LEFT,$/;"	e	enum:nk_style_header_align
NK_HEADER_LEFT	lib/nuklear/src/nuklear.h	/^    NK_HEADER_LEFT,$/;"	e	enum:nk_style_header_align
NK_HEADER_RIGHT	lib/nuklear/nuklear.h	/^    NK_HEADER_RIGHT$/;"	e	enum:nk_style_header_align
NK_HEADER_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_HEADER_RIGHT$/;"	e	enum:nk_style_header_align
NK_HIDDEN	lib/nuklear/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_HIDDEN	lib/nuklear/src/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_HORIZONTAL	lib/nuklear/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_HORIZONTAL	lib/nuklear/src/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_IMPLEMENTATION	lib/nuklear/demo/allegro5/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/d3d11/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/d3d9/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/gdi/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/gdip/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/canvas.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/extended.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/file_browser.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_IMPLEMENTATION	lib/nuklear/example/skinning.c	/^#define NK_IMPLEMENTATION$/;"	d	file:
NK_INBOX	lib/nuklear/nuklear.h	/^#define NK_INBOX(/;"	d
NK_INBOX	lib/nuklear/src/nuklear.h	/^#define NK_INBOX(/;"	d
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/allegro5/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/d3d11/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/d3d9/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/gdi/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/gdip/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/canvas.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/extended.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/file_browser.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_ALLOCATOR	lib/nuklear/example/skinning.c	/^#define NK_INCLUDE_DEFAULT_ALLOCATOR$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/d3d11/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/d3d9/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/canvas.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/extended.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/file_browser.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_DEFAULT_FONT	lib/nuklear/example/skinning.c	/^#define NK_INCLUDE_DEFAULT_FONT$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/allegro5/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/d3d11/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/d3d9/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/gdi/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/gdip/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/canvas.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/extended.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/file_browser.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FIXED_TYPES	lib/nuklear/example/skinning.c	/^#define NK_INCLUDE_FIXED_TYPES$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/d3d11/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/d3d9/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/canvas.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/extended.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/file_browser.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_FONT_BAKING	lib/nuklear/example/skinning.c	/^#define NK_INCLUDE_FONT_BAKING$/;"	d	file:
NK_INCLUDE_SOFTWARE_FONT	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_INCLUDE_SOFTWARE_FONT$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/allegro5/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/d3d11/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/d3d9/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/gdi/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/gdip/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/canvas.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/extended.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/file_browser.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_IO	lib/nuklear/example/skinning.c	/^#define NK_INCLUDE_STANDARD_IO$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/allegro5/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/d3d11/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/d3d9/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/gdi/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/gdip/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_STANDARD_VARARGS	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_INCLUDE_STANDARD_VARARGS$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/d3d11/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/d3d9/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/glfw_opengl2/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/glfw_opengl3/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/glfw_opengl4/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/canvas.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/extended.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/file_browser.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INCLUDE_VERTEX_BUFFER_OUTPUT	lib/nuklear/example/skinning.c	/^#define NK_INCLUDE_VERTEX_BUFFER_OUTPUT$/;"	d	file:
NK_INPUT_MAX	lib/nuklear/nuklear.h	/^  #define NK_INPUT_MAX /;"	d
NK_INPUT_MAX	lib/nuklear/src/nuklear.h	/^  #define NK_INPUT_MAX /;"	d
NK_INSERT_BACK	lib/nuklear/nuklear.h	/^    NK_INSERT_BACK, \/* inserts window into the back of list (front of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_BACK	lib/nuklear/src/nuklear_internal.h	/^    NK_INSERT_BACK, \/* inserts window into the back of list (front of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_FRONT	lib/nuklear/nuklear.h	/^    NK_INSERT_FRONT \/* inserts window into the front of list (back of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INSERT_FRONT	lib/nuklear/src/nuklear_internal.h	/^    NK_INSERT_FRONT \/* inserts window into the front of list (back of screen) *\/$/;"	e	enum:nk_window_insert_location
NK_INT16	lib/nuklear/nuklear.h	/^ #define NK_INT16 /;"	d
NK_INT16	lib/nuklear/src/nuklear.h	/^ #define NK_INT16 /;"	d
NK_INT32	lib/nuklear/nuklear.h	/^ #define NK_INT32 /;"	d
NK_INT32	lib/nuklear/src/nuklear.h	/^ #define NK_INT32 /;"	d
NK_INT8	lib/nuklear/nuklear.h	/^ #define NK_INT8 /;"	d
NK_INT8	lib/nuklear/src/nuklear.h	/^ #define NK_INT8 /;"	d
NK_INTERN	lib/nuklear/nuklear.h	/^#define NK_INTERN /;"	d
NK_INTERN	lib/nuklear/src/nuklear.h	/^#define NK_INTERN /;"	d
NK_INTERNAL_H	lib/nuklear/nuklear.h	/^#define NK_INTERNAL_H$/;"	d
NK_INTERNAL_H	lib/nuklear/src/nuklear_internal.h	/^#define NK_INTERNAL_H$/;"	d
NK_INTERSECT	lib/nuklear/nuklear.h	/^#define NK_INTERSECT(/;"	d
NK_INTERSECT	lib/nuklear/src/nuklear.h	/^#define NK_INTERSECT(/;"	d
NK_KEY_BACKSPACE	lib/nuklear/nuklear.h	/^    NK_KEY_BACKSPACE,$/;"	e	enum:nk_keys
NK_KEY_BACKSPACE	lib/nuklear/src/nuklear.h	/^    NK_KEY_BACKSPACE,$/;"	e	enum:nk_keys
NK_KEY_COPY	lib/nuklear/nuklear.h	/^    NK_KEY_COPY,$/;"	e	enum:nk_keys
NK_KEY_COPY	lib/nuklear/src/nuklear.h	/^    NK_KEY_COPY,$/;"	e	enum:nk_keys
NK_KEY_CTRL	lib/nuklear/nuklear.h	/^    NK_KEY_CTRL,$/;"	e	enum:nk_keys
NK_KEY_CTRL	lib/nuklear/src/nuklear.h	/^    NK_KEY_CTRL,$/;"	e	enum:nk_keys
NK_KEY_CUT	lib/nuklear/nuklear.h	/^    NK_KEY_CUT,$/;"	e	enum:nk_keys
NK_KEY_CUT	lib/nuklear/src/nuklear.h	/^    NK_KEY_CUT,$/;"	e	enum:nk_keys
NK_KEY_DEL	lib/nuklear/nuklear.h	/^    NK_KEY_DEL,$/;"	e	enum:nk_keys
NK_KEY_DEL	lib/nuklear/src/nuklear.h	/^    NK_KEY_DEL,$/;"	e	enum:nk_keys
NK_KEY_DOWN	lib/nuklear/nuklear.h	/^    NK_KEY_DOWN,$/;"	e	enum:nk_keys
NK_KEY_DOWN	lib/nuklear/src/nuklear.h	/^    NK_KEY_DOWN,$/;"	e	enum:nk_keys
NK_KEY_ENTER	lib/nuklear/nuklear.h	/^    NK_KEY_ENTER,$/;"	e	enum:nk_keys
NK_KEY_ENTER	lib/nuklear/src/nuklear.h	/^    NK_KEY_ENTER,$/;"	e	enum:nk_keys
NK_KEY_LEFT	lib/nuklear/nuklear.h	/^    NK_KEY_LEFT,$/;"	e	enum:nk_keys
NK_KEY_LEFT	lib/nuklear/src/nuklear.h	/^    NK_KEY_LEFT,$/;"	e	enum:nk_keys
NK_KEY_MAX	lib/nuklear/nuklear.h	/^    NK_KEY_MAX$/;"	e	enum:nk_keys
NK_KEY_MAX	lib/nuklear/src/nuklear.h	/^    NK_KEY_MAX$/;"	e	enum:nk_keys
NK_KEY_NONE	lib/nuklear/nuklear.h	/^    NK_KEY_NONE,$/;"	e	enum:nk_keys
NK_KEY_NONE	lib/nuklear/src/nuklear.h	/^    NK_KEY_NONE,$/;"	e	enum:nk_keys
NK_KEY_PASTE	lib/nuklear/nuklear.h	/^    NK_KEY_PASTE,$/;"	e	enum:nk_keys
NK_KEY_PASTE	lib/nuklear/src/nuklear.h	/^    NK_KEY_PASTE,$/;"	e	enum:nk_keys
NK_KEY_RIGHT	lib/nuklear/nuklear.h	/^    NK_KEY_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_KEY_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_DOWN	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_DOWN,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_DOWN	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_DOWN,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_END	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_END,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_END	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_END,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_START	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_START,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_START	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_START,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_UP	lib/nuklear/nuklear.h	/^    NK_KEY_SCROLL_UP,$/;"	e	enum:nk_keys
NK_KEY_SCROLL_UP	lib/nuklear/src/nuklear.h	/^    NK_KEY_SCROLL_UP,$/;"	e	enum:nk_keys
NK_KEY_SHIFT	lib/nuklear/nuklear.h	/^    NK_KEY_SHIFT,$/;"	e	enum:nk_keys
NK_KEY_SHIFT	lib/nuklear/src/nuklear.h	/^    NK_KEY_SHIFT,$/;"	e	enum:nk_keys
NK_KEY_TAB	lib/nuklear/nuklear.h	/^    NK_KEY_TAB,$/;"	e	enum:nk_keys
NK_KEY_TAB	lib/nuklear/src/nuklear.h	/^    NK_KEY_TAB,$/;"	e	enum:nk_keys
NK_KEY_TEXT_END	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_END	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_INSERT_MODE	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_INSERT_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_INSERT_MODE	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_INSERT_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_END	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_LINE_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_END	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_LINE_END,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_START	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_LINE_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_LINE_START	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_LINE_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REDO	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_REDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REDO	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_REDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REPLACE_MODE	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_REPLACE_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_REPLACE_MODE	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_REPLACE_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_RESET_MODE	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_RESET_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_RESET_MODE	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_RESET_MODE,$/;"	e	enum:nk_keys
NK_KEY_TEXT_SELECT_ALL	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_SELECT_ALL,$/;"	e	enum:nk_keys
NK_KEY_TEXT_SELECT_ALL	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_SELECT_ALL,$/;"	e	enum:nk_keys
NK_KEY_TEXT_START	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_START	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_START,$/;"	e	enum:nk_keys
NK_KEY_TEXT_UNDO	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_UNDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_UNDO	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_UNDO,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_LEFT	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_WORD_LEFT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_LEFT	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_WORD_LEFT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_RIGHT	lib/nuklear/nuklear.h	/^    NK_KEY_TEXT_WORD_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_TEXT_WORD_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_KEY_TEXT_WORD_RIGHT,$/;"	e	enum:nk_keys
NK_KEY_UP	lib/nuklear/nuklear.h	/^    NK_KEY_UP,$/;"	e	enum:nk_keys
NK_KEY_UP	lib/nuklear/src/nuklear.h	/^    NK_KEY_UP,$/;"	e	enum:nk_keys
NK_LAYOUT_COUNT	lib/nuklear/nuklear.h	/^    NK_LAYOUT_COUNT$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_COUNT	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_COUNT$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FIXED	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FIXED = 0,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FIXED	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FIXED = 0,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FREE	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_FREE	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_ROW	lib/nuklear/nuklear.h	/^    NK_LAYOUT_DYNAMIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_DYNAMIC_ROW	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_DYNAMIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FIXED	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC_FIXED,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FIXED	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC_FIXED,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FREE	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_FREE	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC_FREE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_ROW	lib/nuklear/nuklear.h	/^    NK_LAYOUT_STATIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_STATIC_ROW	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_STATIC_ROW,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_TEMPLATE	lib/nuklear/nuklear.h	/^    NK_LAYOUT_TEMPLATE,$/;"	e	enum:nk_panel_row_layout_type
NK_LAYOUT_TEMPLATE	lib/nuklear/src/nuklear.h	/^    NK_LAYOUT_TEMPLATE,$/;"	e	enum:nk_panel_row_layout_type
NK_LEADING_LETTER_PENALTY	lib/nuklear/nuklear.h	/^    #define NK_LEADING_LETTER_PENALTY /;"	d
NK_LEADING_LETTER_PENALTY	lib/nuklear/src/nuklear_util.c	/^    #define NK_LEADING_LETTER_PENALTY /;"	d	file:
NK_LEFT	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_LEFT	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_LEN	lib/nuklear/nuklear.h	/^#define NK_LEN(/;"	d
NK_LEN	lib/nuklear/src/nuklear.h	/^#define NK_LEN(/;"	d
NK_LIB	lib/nuklear/nuklear.h	/^    #define NK_LIB /;"	d
NK_LIB	lib/nuklear/src/nuklear.h	/^    #define NK_LIB /;"	d
NK_MACRO_STRINGIFY	lib/nuklear/nuklear.h	/^#define NK_MACRO_STRINGIFY(/;"	d
NK_MACRO_STRINGIFY	lib/nuklear/src/nuklear.h	/^#define NK_MACRO_STRINGIFY(/;"	d
NK_MAX	lib/nuklear/nuklear.h	/^#define NK_MAX(/;"	d
NK_MAX	lib/nuklear/src/nuklear.h	/^#define NK_MAX(/;"	d
NK_MAXIMIZED	lib/nuklear/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MAXIMIZED	lib/nuklear/src/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MAX_FLOAT_PRECISION	lib/nuklear/nuklear.h	/^#define NK_MAX_FLOAT_PRECISION /;"	d
NK_MAX_FLOAT_PRECISION	lib/nuklear/src/nuklear.h	/^#define NK_MAX_FLOAT_PRECISION /;"	d
NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS	lib/nuklear/nuklear.h	/^#define NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS /;"	d
NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS	lib/nuklear/src/nuklear.h	/^#define NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS /;"	d
NK_MAX_LEADING_LETTER_PENALTY	lib/nuklear/nuklear.h	/^    #define NK_MAX_LEADING_LETTER_PENALTY /;"	d
NK_MAX_LEADING_LETTER_PENALTY	lib/nuklear/src/nuklear_util.c	/^    #define NK_MAX_LEADING_LETTER_PENALTY /;"	d	file:
NK_MAX_NUMBER_BUFFER	lib/nuklear/nuklear.h	/^  #define NK_MAX_NUMBER_BUFFER /;"	d
NK_MAX_NUMBER_BUFFER	lib/nuklear/src/nuklear.h	/^  #define NK_MAX_NUMBER_BUFFER /;"	d
NK_MAX_SORT_STACK	lib/nuklear/nuklear.h	/^    #define NK_MAX_SORT_STACK /;"	d
NK_MAX_SORT_STACK	lib/nuklear/src/nuklear_font.c	/^    #define NK_MAX_SORT_STACK /;"	d	file:
NK_MEMCPY	lib/nuklear/nuklear.h	/^#define NK_MEMCPY /;"	d
NK_MEMCPY	lib/nuklear/src/nuklear_internal.h	/^#define NK_MEMCPY /;"	d
NK_MEMSET	lib/nuklear/nuklear.h	/^#define NK_MEMSET /;"	d
NK_MEMSET	lib/nuklear/src/nuklear_internal.h	/^#define NK_MEMSET /;"	d
NK_MIN	lib/nuklear/nuklear.h	/^#define NK_MIN(/;"	d
NK_MIN	lib/nuklear/src/nuklear.h	/^#define NK_MIN(/;"	d
NK_MINIMIZED	lib/nuklear/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MINIMIZED	lib/nuklear/src/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	e	enum:nk_collapse_states
NK_MODIFIABLE	lib/nuklear/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_MODIFIABLE	lib/nuklear/src/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	e	enum:nk_modify
NK_NUKLEAR_H_	lib/nuklear/nuklear.h	/^#define NK_NUKLEAR_H_$/;"	d
NK_NUKLEAR_H_	lib/nuklear/src/nuklear.h	/^#define NK_NUKLEAR_H_$/;"	d
NK_OFFSETOF	lib/nuklear/nuklear.h	/^#define NK_OFFSETOF(/;"	d
NK_OFFSETOF	lib/nuklear/src/nuklear.h	/^#define NK_OFFSETOF(/;"	d
NK_PANEL_COMBO	lib/nuklear/nuklear.h	/^    NK_PANEL_COMBO      = NK_FLAG(5),$/;"	e	enum:nk_panel_type
NK_PANEL_COMBO	lib/nuklear/src/nuklear.h	/^    NK_PANEL_COMBO      = NK_FLAG(5),$/;"	e	enum:nk_panel_type
NK_PANEL_CONTEXTUAL	lib/nuklear/nuklear.h	/^    NK_PANEL_CONTEXTUAL = NK_FLAG(4),$/;"	e	enum:nk_panel_type
NK_PANEL_CONTEXTUAL	lib/nuklear/src/nuklear.h	/^    NK_PANEL_CONTEXTUAL = NK_FLAG(4),$/;"	e	enum:nk_panel_type
NK_PANEL_GROUP	lib/nuklear/nuklear.h	/^    NK_PANEL_GROUP      = NK_FLAG(1),$/;"	e	enum:nk_panel_type
NK_PANEL_GROUP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_GROUP      = NK_FLAG(1),$/;"	e	enum:nk_panel_type
NK_PANEL_MENU	lib/nuklear/nuklear.h	/^    NK_PANEL_MENU       = NK_FLAG(6),$/;"	e	enum:nk_panel_type
NK_PANEL_MENU	lib/nuklear/src/nuklear.h	/^    NK_PANEL_MENU       = NK_FLAG(6),$/;"	e	enum:nk_panel_type
NK_PANEL_NONE	lib/nuklear/nuklear.h	/^    NK_PANEL_NONE       = 0,$/;"	e	enum:nk_panel_type
NK_PANEL_NONE	lib/nuklear/src/nuklear.h	/^    NK_PANEL_NONE       = 0,$/;"	e	enum:nk_panel_type
NK_PANEL_POPUP	lib/nuklear/nuklear.h	/^    NK_PANEL_POPUP      = NK_FLAG(2),$/;"	e	enum:nk_panel_type
NK_PANEL_POPUP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_POPUP      = NK_FLAG(2),$/;"	e	enum:nk_panel_type
NK_PANEL_SET_NONBLOCK	lib/nuklear/nuklear.h	/^    NK_PANEL_SET_NONBLOCK = NK_PANEL_CONTEXTUAL|NK_PANEL_COMBO|NK_PANEL_MENU|NK_PANEL_TOOLTIP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_NONBLOCK	lib/nuklear/src/nuklear.h	/^    NK_PANEL_SET_NONBLOCK = NK_PANEL_CONTEXTUAL|NK_PANEL_COMBO|NK_PANEL_MENU|NK_PANEL_TOOLTIP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_POPUP	lib/nuklear/nuklear.h	/^    NK_PANEL_SET_POPUP = NK_PANEL_SET_NONBLOCK|NK_PANEL_POPUP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_POPUP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_SET_POPUP = NK_PANEL_SET_NONBLOCK|NK_PANEL_POPUP,$/;"	e	enum:nk_panel_set
NK_PANEL_SET_SUB	lib/nuklear/nuklear.h	/^    NK_PANEL_SET_SUB = NK_PANEL_SET_POPUP|NK_PANEL_GROUP$/;"	e	enum:nk_panel_set
NK_PANEL_SET_SUB	lib/nuklear/src/nuklear.h	/^    NK_PANEL_SET_SUB = NK_PANEL_SET_POPUP|NK_PANEL_GROUP$/;"	e	enum:nk_panel_set
NK_PANEL_TOOLTIP	lib/nuklear/nuklear.h	/^    NK_PANEL_TOOLTIP    = NK_FLAG(7)$/;"	e	enum:nk_panel_type
NK_PANEL_TOOLTIP	lib/nuklear/src/nuklear.h	/^    NK_PANEL_TOOLTIP    = NK_FLAG(7)$/;"	e	enum:nk_panel_type
NK_PANEL_WINDOW	lib/nuklear/nuklear.h	/^    NK_PANEL_WINDOW     = NK_FLAG(0),$/;"	e	enum:nk_panel_type
NK_PANEL_WINDOW	lib/nuklear/src/nuklear.h	/^    NK_PANEL_WINDOW     = NK_FLAG(0),$/;"	e	enum:nk_panel_type
NK_PI	lib/nuklear/nuklear.h	/^#define NK_PI /;"	d
NK_PI	lib/nuklear/src/nuklear.h	/^#define NK_PI /;"	d
NK_POINTER_TYPE	lib/nuklear/nuklear.h	/^ #define NK_POINTER_TYPE /;"	d
NK_POINTER_TYPE	lib/nuklear/src/nuklear.h	/^ #define NK_POINTER_TYPE /;"	d
NK_POOL_DEFAULT_CAPACITY	lib/nuklear/nuklear.h	/^#define NK_POOL_DEFAULT_CAPACITY /;"	d
NK_POOL_DEFAULT_CAPACITY	lib/nuklear/src/nuklear_internal.h	/^#define NK_POOL_DEFAULT_CAPACITY /;"	d
NK_POPUP_DYNAMIC	lib/nuklear/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_DYNAMIC	lib/nuklear/src/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_STATIC	lib/nuklear/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_POPUP_STATIC	lib/nuklear/src/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	e	enum:nk_popup_type
NK_PRINTF_FORMAT_STRING	lib/nuklear/nuklear.h	/^    #define NK_PRINTF_FORMAT_STRING /;"	d
NK_PRINTF_FORMAT_STRING	lib/nuklear/src/nuklear.h	/^    #define NK_PRINTF_FORMAT_STRING /;"	d
NK_PRINTF_VALIST_FUNC	lib/nuklear/nuklear.h	/^    #define NK_PRINTF_VALIST_FUNC(/;"	d
NK_PRINTF_VALIST_FUNC	lib/nuklear/src/nuklear.h	/^    #define NK_PRINTF_VALIST_FUNC(/;"	d
NK_PRINTF_VARARG_FUNC	lib/nuklear/nuklear.h	/^    #define NK_PRINTF_VARARG_FUNC(/;"	d
NK_PRINTF_VARARG_FUNC	lib/nuklear/src/nuklear.h	/^    #define NK_PRINTF_VARARG_FUNC(/;"	d
NK_PRIVATE	lib/nuklear/example/canvas.c	/^#define NK_PRIVATE$/;"	d	file:
NK_PROPERTY_DEFAULT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_DEFAULT,$/;"	e	enum:nk_property_status
NK_PROPERTY_DEFAULT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_DEFAULT,$/;"	e	enum:nk_property_status
NK_PROPERTY_DOUBLE	lib/nuklear/nuklear.h	/^    NK_PROPERTY_DOUBLE$/;"	e	enum:nk_property_kind
NK_PROPERTY_DOUBLE	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_DOUBLE$/;"	e	enum:nk_property_kind
NK_PROPERTY_DRAG	lib/nuklear/nuklear.h	/^    NK_PROPERTY_DRAG$/;"	e	enum:nk_property_status
NK_PROPERTY_DRAG	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_DRAG$/;"	e	enum:nk_property_status
NK_PROPERTY_EDIT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_EDIT,$/;"	e	enum:nk_property_status
NK_PROPERTY_EDIT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_EDIT,$/;"	e	enum:nk_property_status
NK_PROPERTY_FLOAT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_FLOAT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_FLOAT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_FLOAT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_INT	lib/nuklear/nuklear.h	/^    NK_PROPERTY_INT,$/;"	e	enum:nk_property_kind
NK_PROPERTY_INT	lib/nuklear/src/nuklear_internal.h	/^    NK_PROPERTY_INT,$/;"	e	enum:nk_property_kind
NK_PTR_TO_UINT	lib/nuklear/nuklear.h	/^# define NK_PTR_TO_UINT(/;"	d
NK_PTR_TO_UINT	lib/nuklear/src/nuklear.h	/^# define NK_PTR_TO_UINT(/;"	d
NK_RAWFB_H_	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^#define NK_RAWFB_H_$/;"	d
NK_RAWFB_IMPLEMENTATION	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_RAWFB_IMPLEMENTATION$/;"	d	file:
NK_RGB	lib/nuklear/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGB	lib/nuklear/src/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGBA	lib/nuklear/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RGBA	lib/nuklear/src/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	e	enum:nk_color_format
NK_RIGHT	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_RIGHT	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_ROTL	lib/nuklear/nuklear.h	/^    #define NK_ROTL(/;"	d
NK_ROTL	lib/nuklear/src/nuklear_util.c	/^    #define NK_ROTL(/;"	d	file:
NK_RP_HEURISTIC	lib/nuklear/nuklear.h	/^enum NK_RP_HEURISTIC {$/;"	g
NK_RP_HEURISTIC	lib/nuklear/src/nuklear_font.c	/^enum NK_RP_HEURISTIC {$/;"	g	file:
NK_RP_HEURISTIC_Skyline_BF_sortHeight	lib/nuklear/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_BF_sortHeight	lib/nuklear/src/nuklear_font.c	/^    NK_RP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:NK_RP_HEURISTIC	file:
NK_RP_HEURISTIC_Skyline_BL_sortHeight	lib/nuklear/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_BL_sortHeight = NK_RP_HEURISTIC_Skyline_default,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_BL_sortHeight	lib/nuklear/src/nuklear_font.c	/^    NK_RP_HEURISTIC_Skyline_BL_sortHeight = NK_RP_HEURISTIC_Skyline_default,$/;"	e	enum:NK_RP_HEURISTIC	file:
NK_RP_HEURISTIC_Skyline_default	lib/nuklear/nuklear.h	/^    NK_RP_HEURISTIC_Skyline_default=0,$/;"	e	enum:NK_RP_HEURISTIC
NK_RP_HEURISTIC_Skyline_default	lib/nuklear/src/nuklear_font.c	/^    NK_RP_HEURISTIC_Skyline_default=0,$/;"	e	enum:NK_RP_HEURISTIC	file:
NK_RP_INIT_STATE	lib/nuklear/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	g
NK_RP_INIT_STATE	lib/nuklear/src/nuklear_font.c	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	g	file:
NK_RP__INIT_skyline	lib/nuklear/nuklear.h	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	e	enum:NK_RP_INIT_STATE
NK_RP__INIT_skyline	lib/nuklear/src/nuklear_font.c	/^enum NK_RP_INIT_STATE{NK_RP__INIT_skyline = 1};$/;"	e	enum:NK_RP_INIT_STATE	file:
NK_RP__MAXVAL	lib/nuklear/nuklear.h	/^#define NK_RP__MAXVAL /;"	d
NK_RP__MAXVAL	lib/nuklear/src/nuklear_font.c	/^#define NK_RP__MAXVAL /;"	d	file:
NK_SATURATE	lib/nuklear/nuklear.h	/^#define NK_SATURATE(/;"	d
NK_SATURATE	lib/nuklear/src/nuklear.h	/^#define NK_SATURATE(/;"	d
NK_SCHAR_MAX	lib/nuklear/nuklear.h	/^#define NK_SCHAR_MAX /;"	d
NK_SCHAR_MAX	lib/nuklear/src/nuklear_internal.h	/^#define NK_SCHAR_MAX /;"	d
NK_SCHAR_MIN	lib/nuklear/nuklear.h	/^#define NK_SCHAR_MIN /;"	d
NK_SCHAR_MIN	lib/nuklear/src/nuklear_internal.h	/^#define NK_SCHAR_MIN /;"	d
NK_SCROLLBAR_HIDING_TIMEOUT	lib/nuklear/nuklear.h	/^  #define NK_SCROLLBAR_HIDING_TIMEOUT /;"	d
NK_SCROLLBAR_HIDING_TIMEOUT	lib/nuklear/src/nuklear.h	/^  #define NK_SCROLLBAR_HIDING_TIMEOUT /;"	d
NK_SDL_GL2_H_	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^#define NK_SDL_GL2_H_$/;"	d
NK_SDL_GL2_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl2/main.c	/^#define NK_SDL_GL2_IMPLEMENTATION$/;"	d	file:
NK_SDL_GL3_H_	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^#define NK_SDL_GL3_H_$/;"	d
NK_SDL_GL3_IMPLEMENTATION	lib/nuklear/demo/sdl_opengl3/main.c	/^#define NK_SDL_GL3_IMPLEMENTATION$/;"	d	file:
NK_SDL_GLES2_H_	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^#define NK_SDL_GLES2_H_$/;"	d
NK_SDL_GLES2_IMPLEMENTATION	lib/nuklear/demo/sdl_opengles2/main.c	/^#define NK_SDL_GLES2_IMPLEMENTATION$/;"	d	file:
NK_SEPARATOR_BONUS	lib/nuklear/nuklear.h	/^    #define NK_SEPARATOR_BONUS /;"	d
NK_SEPARATOR_BONUS	lib/nuklear/src/nuklear_util.c	/^    #define NK_SEPARATOR_BONUS /;"	d	file:
NK_SFML_GL2_H_	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^#define NK_SFML_GL2_H_$/;"	d
NK_SFML_GL2_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define NK_SFML_GL2_IMPLEMENTATION$/;"	d	file:
NK_SFML_GL3_H_	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^#define NK_SFML_GL3_H_$/;"	d
NK_SFML_GL3_IMPLEMENTATION	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define NK_SFML_GL3_IMPLEMENTATION$/;"	d	file:
NK_SHADER_64BIT	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_SHADER_64BIT /;"	d
NK_SHADER_BINDLESS	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_SHADER_BINDLESS /;"	d
NK_SHADER_VERSION	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^  #define NK_SHADER_VERSION /;"	d
NK_SHADER_VERSION	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^#define NK_SHADER_VERSION /;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^  #define NK_SHADER_VERSION /;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^#define NK_SHADER_VERSION /;"	d
NK_SHADER_VERSION	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^  #define NK_SHADER_VERSION /;"	d
NK_SHADER_VERSION	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^  #define NK_SHADER_VERSION /;"	d
NK_SHADER_VERSION	lib/nuklear/example/canvas.c	/^#define NK_SHADER_VERSION /;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/extended.c	/^  #define NK_SHADER_VERSION /;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/file_browser.c	/^  #define NK_SHADER_VERSION /;"	d	file:
NK_SHADER_VERSION	lib/nuklear/example/skinning.c	/^  #define NK_SHADER_VERSION /;"	d	file:
NK_SHOWN	lib/nuklear/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_SHOWN	lib/nuklear/src/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	e	enum:nk_show_states
NK_SIN	lib/nuklear/nuklear.h	/^#define NK_SIN /;"	d
NK_SIN	lib/nuklear/src/nuklear_internal.h	/^#define NK_SIN /;"	d
NK_SINGLE_FILE	lib/nuklear/nuklear.h	/^  #define NK_SINGLE_FILE$/;"	d
NK_SINT_MAX	lib/nuklear/nuklear.h	/^#define NK_SINT_MAX /;"	d
NK_SINT_MAX	lib/nuklear/src/nuklear_internal.h	/^#define NK_SINT_MAX /;"	d
NK_SINT_MIN	lib/nuklear/nuklear.h	/^#define NK_SINT_MIN /;"	d
NK_SINT_MIN	lib/nuklear/src/nuklear_internal.h	/^#define NK_SINT_MIN /;"	d
NK_SIZE_TYPE	lib/nuklear/nuklear.h	/^ #define NK_SIZE_TYPE /;"	d
NK_SIZE_TYPE	lib/nuklear/src/nuklear.h	/^ #define NK_SIZE_TYPE /;"	d
NK_SQRT	lib/nuklear/nuklear.h	/^#define NK_SQRT /;"	d
NK_SQRT	lib/nuklear/src/nuklear_internal.h	/^#define NK_SQRT /;"	d
NK_SSHORT_MAX	lib/nuklear/nuklear.h	/^#define NK_SSHORT_MAX /;"	d
NK_SSHORT_MAX	lib/nuklear/src/nuklear_internal.h	/^#define NK_SSHORT_MAX /;"	d
NK_SSHORT_MIN	lib/nuklear/nuklear.h	/^#define NK_SSHORT_MIN /;"	d
NK_SSHORT_MIN	lib/nuklear/src/nuklear_internal.h	/^#define NK_SSHORT_MIN /;"	d
NK_STATIC	lib/nuklear/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_STATIC	lib/nuklear/src/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	e	enum:nk_layout_format
NK_STATIC_ASSERT	lib/nuklear/nuklear.h	/^  #define NK_STATIC_ASSERT(/;"	d
NK_STATIC_ASSERT	lib/nuklear/src/nuklear.h	/^  #define NK_STATIC_ASSERT(/;"	d
NK_STOP_ON_NEW_LINE	lib/nuklear/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anond7ed09940603
NK_STOP_ON_NEW_LINE	lib/nuklear/src/nuklear_internal.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	e	enum:__anonc61c00070103
NK_STORAGE	lib/nuklear/nuklear.h	/^#define NK_STORAGE /;"	d
NK_STORAGE	lib/nuklear/src/nuklear.h	/^#define NK_STORAGE /;"	d
NK_STRINGIFY	lib/nuklear/nuklear.h	/^#define NK_STRINGIFY(/;"	d
NK_STRINGIFY	lib/nuklear/src/nuklear.h	/^#define NK_STRINGIFY(/;"	d
NK_STRING_JOIN	lib/nuklear/nuklear.h	/^#define NK_STRING_JOIN(/;"	d
NK_STRING_JOIN	lib/nuklear/src/nuklear.h	/^#define NK_STRING_JOIN(/;"	d
NK_STRING_JOIN_DELAY	lib/nuklear/nuklear.h	/^#define NK_STRING_JOIN_DELAY(/;"	d
NK_STRING_JOIN_DELAY	lib/nuklear/src/nuklear.h	/^#define NK_STRING_JOIN_DELAY(/;"	d
NK_STRING_JOIN_IMMEDIATE	lib/nuklear/nuklear.h	/^#define NK_STRING_JOIN_IMMEDIATE(/;"	d
NK_STRING_JOIN_IMMEDIATE	lib/nuklear/src/nuklear.h	/^#define NK_STRING_JOIN_IMMEDIATE(/;"	d
NK_STROKE_CLOSED	lib/nuklear/nuklear.h	/^    NK_STROKE_CLOSED = nk_true$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_CLOSED	lib/nuklear/src/nuklear.h	/^    NK_STROKE_CLOSED = nk_true$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_OPEN	lib/nuklear/nuklear.h	/^    NK_STROKE_OPEN = nk_false,$/;"	e	enum:nk_draw_list_stroke
NK_STROKE_OPEN	lib/nuklear/src/nuklear.h	/^    NK_STROKE_OPEN = nk_false,$/;"	e	enum:nk_draw_list_stroke
NK_STRTOD	lib/nuklear/nuklear.h	/^#define NK_STRTOD /;"	d
NK_STRTOD	lib/nuklear/src/nuklear_internal.h	/^#define NK_STRTOD /;"	d
NK_STYLE_ITEM_COLOR	lib/nuklear/nuklear.h	/^    NK_STYLE_ITEM_COLOR,$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_COLOR	lib/nuklear/src/nuklear.h	/^    NK_STYLE_ITEM_COLOR,$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_IMAGE	lib/nuklear/nuklear.h	/^    NK_STYLE_ITEM_IMAGE$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_IMAGE	lib/nuklear/src/nuklear.h	/^    NK_STYLE_ITEM_IMAGE$/;"	e	enum:nk_style_item_type
NK_STYLE_ITEM_STACK_SIZE	lib/nuklear/nuklear.h	/^#define NK_STYLE_ITEM_STACK_SIZE /;"	d
NK_STYLE_ITEM_STACK_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_STYLE_ITEM_STACK_SIZE /;"	d
NK_STYLE_POP_IMPLEMENATION	lib/nuklear/nuklear.h	/^#define NK_STYLE_POP_IMPLEMENATION(/;"	d
NK_STYLE_POP_IMPLEMENATION	lib/nuklear/src/nuklear_style.c	/^#define NK_STYLE_POP_IMPLEMENATION(/;"	d	file:
NK_STYLE_PUSH_IMPLEMENATION	lib/nuklear/nuklear.h	/^#define NK_STYLE_PUSH_IMPLEMENATION(/;"	d
NK_STYLE_PUSH_IMPLEMENATION	lib/nuklear/nuklear.h	/^NK_API int NK_STYLE_PUSH_IMPLEMENATION(struct nk, style_item, style_items)$/;"	f	typeref:typename:NK_API int
NK_STYLE_PUSH_IMPLEMENATION	lib/nuklear/src/nuklear_style.c	/^#define NK_STYLE_PUSH_IMPLEMENATION(/;"	d	file:
NK_STYLE_PUSH_IMPLEMENATION	lib/nuklear/src/nuklear_style.c	/^NK_API int NK_STYLE_PUSH_IMPLEMENATION(struct nk, style_item, style_items)$/;"	f	typeref:typename:NK_API int
NK_SYMBOL_CIRCLE_OUTLINE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_CIRCLE_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_OUTLINE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_CIRCLE_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_SOLID	lib/nuklear/nuklear.h	/^    NK_SYMBOL_CIRCLE_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_CIRCLE_SOLID	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_CIRCLE_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MAX	lib/nuklear/nuklear.h	/^    NK_SYMBOL_MAX$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MAX	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_MAX$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MINUS	lib/nuklear/nuklear.h	/^    NK_SYMBOL_MINUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_MINUS	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_MINUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_NONE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_NONE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_NONE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_NONE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_PLUS	lib/nuklear/nuklear.h	/^    NK_SYMBOL_PLUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_PLUS	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_PLUS,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_OUTLINE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_RECT_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_OUTLINE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_RECT_OUTLINE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_SOLID	lib/nuklear/nuklear.h	/^    NK_SYMBOL_RECT_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_RECT_SOLID	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_RECT_SOLID,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_DOWN	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_DOWN,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_DOWN	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_DOWN,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_LEFT	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_LEFT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_LEFT	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_LEFT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_RIGHT	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_RIGHT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_RIGHT,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_UP	lib/nuklear/nuklear.h	/^    NK_SYMBOL_TRIANGLE_UP,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_TRIANGLE_UP	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_TRIANGLE_UP,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_UNDERSCORE	lib/nuklear/nuklear.h	/^    NK_SYMBOL_UNDERSCORE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_UNDERSCORE	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_UNDERSCORE,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_X	lib/nuklear/nuklear.h	/^    NK_SYMBOL_X,$/;"	e	enum:nk_symbol_type
NK_SYMBOL_X	lib/nuklear/src/nuklear.h	/^    NK_SYMBOL_X,$/;"	e	enum:nk_symbol_type
NK_TEXTEDIT_UNDOCHARCOUNT	lib/nuklear/nuklear.h	/^#define NK_TEXTEDIT_UNDOCHARCOUNT /;"	d
NK_TEXTEDIT_UNDOCHARCOUNT	lib/nuklear/src/nuklear.h	/^#define NK_TEXTEDIT_UNDOCHARCOUNT /;"	d
NK_TEXTEDIT_UNDOSTATECOUNT	lib/nuklear/nuklear.h	/^#define NK_TEXTEDIT_UNDOSTATECOUNT /;"	d
NK_TEXTEDIT_UNDOSTATECOUNT	lib/nuklear/src/nuklear.h	/^#define NK_TEXTEDIT_UNDOSTATECOUNT /;"	d
NK_TEXT_ALIGN_BOTTOM	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_BOTTOM      = 0x20$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_BOTTOM	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_BOTTOM      = 0x20$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_CENTERED	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_CENTERED    = 0x02,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_CENTERED	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_CENTERED    = 0x02,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_LEFT	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_LEFT        = 0x01,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_LEFT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_LEFT        = 0x01,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_MIDDLE	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_MIDDLE      = 0x10,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_MIDDLE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_MIDDLE      = 0x10,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_RIGHT	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_RIGHT       = 0x04,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_RIGHT       = 0x04,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_TOP	lib/nuklear/nuklear.h	/^    NK_TEXT_ALIGN_TOP         = 0x08,$/;"	e	enum:nk_text_align
NK_TEXT_ALIGN_TOP	lib/nuklear/src/nuklear.h	/^    NK_TEXT_ALIGN_TOP         = 0x08,$/;"	e	enum:nk_text_align
NK_TEXT_CENTERED	lib/nuklear/nuklear.h	/^    NK_TEXT_CENTERED    = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_CENTERED,$/;"	e	enum:nk_text_alignment
NK_TEXT_CENTERED	lib/nuklear/src/nuklear.h	/^    NK_TEXT_CENTERED    = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_CENTERED,$/;"	e	enum:nk_text_alignment
NK_TEXT_EDIT_MODE_INSERT	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MODE_INSERT,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_INSERT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MODE_INSERT,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_REPLACE	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MODE_REPLACE$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_REPLACE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MODE_REPLACE$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_VIEW	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MODE_VIEW,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MODE_VIEW	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MODE_VIEW,$/;"	e	enum:nk_text_edit_mode
NK_TEXT_EDIT_MULTI_LINE	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_MULTI_LINE$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_MULTI_LINE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_MULTI_LINE$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_SINGLE_LINE	lib/nuklear/nuklear.h	/^    NK_TEXT_EDIT_SINGLE_LINE,$/;"	e	enum:nk_text_edit_type
NK_TEXT_EDIT_SINGLE_LINE	lib/nuklear/src/nuklear.h	/^    NK_TEXT_EDIT_SINGLE_LINE,$/;"	e	enum:nk_text_edit_type
NK_TEXT_HAS_SELECTION	lib/nuklear/nuklear.h	/^#define NK_TEXT_HAS_SELECTION(/;"	d
NK_TEXT_HAS_SELECTION	lib/nuklear/src/nuklear_text_editor.c	/^#define NK_TEXT_HAS_SELECTION(/;"	d	file:
NK_TEXT_LEFT	lib/nuklear/nuklear.h	/^    NK_TEXT_LEFT        = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_LEFT,$/;"	e	enum:nk_text_alignment
NK_TEXT_LEFT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_LEFT        = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_LEFT,$/;"	e	enum:nk_text_alignment
NK_TEXT_RIGHT	lib/nuklear/nuklear.h	/^    NK_TEXT_RIGHT       = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_RIGHT$/;"	e	enum:nk_text_alignment
NK_TEXT_RIGHT	lib/nuklear/src/nuklear.h	/^    NK_TEXT_RIGHT       = NK_TEXT_ALIGN_MIDDLE|NK_TEXT_ALIGN_RIGHT$/;"	e	enum:nk_text_alignment
NK_TLOOP	lib/nuklear/nuklear.h	/^    #define NK_TLOOP(/;"	d
NK_TLOOP	lib/nuklear/src/nuklear_util.c	/^    #define NK_TLOOP(/;"	d	file:
NK_TLOOP1	lib/nuklear/nuklear.h	/^    #define NK_TLOOP1(/;"	d
NK_TLOOP1	lib/nuklear/src/nuklear_util.c	/^    #define NK_TLOOP1(/;"	d	file:
NK_TOGGLE_CHECK	lib/nuklear/nuklear.h	/^    NK_TOGGLE_CHECK,$/;"	e	enum:nk_toggle_type
NK_TOGGLE_CHECK	lib/nuklear/src/nuklear_internal.h	/^    NK_TOGGLE_CHECK,$/;"	e	enum:nk_toggle_type
NK_TOGGLE_OPTION	lib/nuklear/nuklear.h	/^    NK_TOGGLE_OPTION$/;"	e	enum:nk_toggle_type
NK_TOGGLE_OPTION	lib/nuklear/src/nuklear_internal.h	/^    NK_TOGGLE_OPTION$/;"	e	enum:nk_toggle_type
NK_TO_HEX	lib/nuklear/nuklear.h	/^    #define NK_TO_HEX(/;"	d
NK_TO_HEX	lib/nuklear/src/nuklear_color.c	/^    #define NK_TO_HEX(/;"	d	file:
NK_TREE_NODE	lib/nuklear/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_NODE	lib/nuklear/src/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_TAB	lib/nuklear/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TREE_TAB	lib/nuklear/src/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	e	enum:nk_tree_type
NK_TT_MACSTYLE_BOLD	lib/nuklear/nuklear.h	/^#define NK_TT_MACSTYLE_BOLD /;"	d
NK_TT_MACSTYLE_BOLD	lib/nuklear/src/nuklear_font.c	/^#define NK_TT_MACSTYLE_BOLD /;"	d	file:
NK_TT_MACSTYLE_DONTCARE	lib/nuklear/nuklear.h	/^#define NK_TT_MACSTYLE_DONTCARE /;"	d
NK_TT_MACSTYLE_DONTCARE	lib/nuklear/src/nuklear_font.c	/^#define NK_TT_MACSTYLE_DONTCARE /;"	d	file:
NK_TT_MACSTYLE_ITALIC	lib/nuklear/nuklear.h	/^#define NK_TT_MACSTYLE_ITALIC /;"	d
NK_TT_MACSTYLE_ITALIC	lib/nuklear/src/nuklear_font.c	/^#define NK_TT_MACSTYLE_ITALIC /;"	d	file:
NK_TT_MACSTYLE_NONE	lib/nuklear/nuklear.h	/^#define NK_TT_MACSTYLE_NONE /;"	d
NK_TT_MACSTYLE_NONE	lib/nuklear/src/nuklear_font.c	/^#define NK_TT_MACSTYLE_NONE /;"	d	file:
NK_TT_MACSTYLE_UNDERSCORE	lib/nuklear/nuklear.h	/^#define NK_TT_MACSTYLE_UNDERSCORE /;"	d
NK_TT_MACSTYLE_UNDERSCORE	lib/nuklear/src/nuklear_font.c	/^#define NK_TT_MACSTYLE_UNDERSCORE /;"	d	file:
NK_TT_MAC_EID_ARABIC	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_ARABIC	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_EID_CHINESE_TRAD	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_CHINESE_TRAD	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_EID_GREEK	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_GREEK	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_CHINESE_TRAD =2,   NK_TT_MAC_EID_GREEK        =6,$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_EID_HEBREW	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_HEBREW	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_EID_JAPANESE	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_JAPANESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_JAPANESE     =1,   NK_TT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_EID_KOREAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_KOREAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_EID_ROMAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_ROMAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_ROMAN        =0,   NK_TT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_EID_RUSSIAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anond7ed09940d03
NK_TT_MAC_EID_RUSSIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_EID_KOREAN       =3,   NK_TT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anon7daa66dc0503	file:
NK_TT_MAC_LANG_ARABIC	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_ARABIC	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_CHINESE_SIMPLIFIED	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_CHINESE_SIMPLIFIED	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_CHINESE_TRAD	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_CHINESE_TRAD	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_DUTCH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_DUTCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_ENGLISH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_ENGLISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_FRENCH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_FRENCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_GERMAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_GERMAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_HEBREW	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_HEBREW	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_HEBREW       =10,   NK_TT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_ITALIAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_ITALIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ITALIAN      =3 ,   NK_TT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_JAPANESE	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_JAPANESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ENGLISH      =0 ,   NK_TT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_KOREAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_KOREAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_ARABIC       =12,   NK_TT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_RUSSIAN	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_RUSSIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_DUTCH        =4 ,   NK_TT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_SPANISH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_SPANISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_FRENCH       =1 ,   NK_TT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAC_LANG_SWEDISH	lib/nuklear/nuklear.h	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anond7ed09940f03
NK_TT_MAC_LANG_SWEDISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MAC_LANG_GERMAN       =2 ,   NK_TT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anon7daa66dc0703	file:
NK_TT_MAX_OVERSAMPLE	lib/nuklear/nuklear.h	/^#define NK_TT_MAX_OVERSAMPLE /;"	d
NK_TT_MAX_OVERSAMPLE	lib/nuklear/src/nuklear_font.c	/^#define NK_TT_MAX_OVERSAMPLE /;"	d	file:
NK_TT_MS_EID_SHIFTJIS	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anond7ed09940c03
NK_TT_MS_EID_SHIFTJIS	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anon7daa66dc0403	file:
NK_TT_MS_EID_SYMBOL	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anond7ed09940c03
NK_TT_MS_EID_SYMBOL	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anon7daa66dc0403	file:
NK_TT_MS_EID_UNICODE_BMP	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anond7ed09940c03
NK_TT_MS_EID_UNICODE_BMP	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anon7daa66dc0403	file:
NK_TT_MS_EID_UNICODE_FULL	lib/nuklear/nuklear.h	/^   NK_TT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anond7ed09940c03
NK_TT_MS_EID_UNICODE_FULL	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anon7daa66dc0403	file:
NK_TT_MS_LANG_CHINESE	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_CHINESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_DUTCH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_DUTCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_ENGLISH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_ENGLISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_FRENCH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_FRENCH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_GERMAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_GERMAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_HEBREW	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_HEBREW	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_ITALIAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_ITALIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_ENGLISH     =0x0409,   NK_TT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_JAPANESE	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_JAPANESE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_CHINESE     =0x0804,   NK_TT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_KOREAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_KOREAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_DUTCH       =0x0413,   NK_TT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_RUSSIAN	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_RUSSIAN	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_FRENCH      =0x040c,   NK_TT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_SPANISH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_SPANISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_GERMAN      =0x0407,   NK_TT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_MS_LANG_SWEDISH	lib/nuklear/nuklear.h	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anond7ed09940e03
NK_TT_MS_LANG_SWEDISH	lib/nuklear/src/nuklear_font.c	/^   NK_TT_MS_LANG_HEBREW      =0x040d,   NK_TT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anon7daa66dc0603	file:
NK_TT_PLATFORM_ID_ISO	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anond7ed09940a03
NK_TT_PLATFORM_ID_ISO	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anon7daa66dc0203	file:
NK_TT_PLATFORM_ID_MAC	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anond7ed09940a03
NK_TT_PLATFORM_ID_MAC	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anon7daa66dc0203	file:
NK_TT_PLATFORM_ID_MICROSOFT	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anond7ed09940a03
NK_TT_PLATFORM_ID_MICROSOFT	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anon7daa66dc0203	file:
NK_TT_PLATFORM_ID_UNICODE	lib/nuklear/nuklear.h	/^   NK_TT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anond7ed09940a03
NK_TT_PLATFORM_ID_UNICODE	lib/nuklear/src/nuklear_font.c	/^   NK_TT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anon7daa66dc0203	file:
NK_TT_UNICODE_EID_ISO_10646	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anond7ed09940b03
NK_TT_UNICODE_EID_ISO_10646	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anon7daa66dc0303	file:
NK_TT_UNICODE_EID_UNICODE_1_0	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anond7ed09940b03
NK_TT_UNICODE_EID_UNICODE_1_0	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anon7daa66dc0303	file:
NK_TT_UNICODE_EID_UNICODE_1_1	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anond7ed09940b03
NK_TT_UNICODE_EID_UNICODE_1_1	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anon7daa66dc0303	file:
NK_TT_UNICODE_EID_UNICODE_2_0_BMP	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anond7ed09940b03
NK_TT_UNICODE_EID_UNICODE_2_0_BMP	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anon7daa66dc0303	file:
NK_TT_UNICODE_EID_UNICODE_2_0_FULL	lib/nuklear/nuklear.h	/^   NK_TT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anond7ed09940b03
NK_TT_UNICODE_EID_UNICODE_2_0_FULL	lib/nuklear/src/nuklear_font.c	/^   NK_TT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anon7daa66dc0303	file:
NK_TT__COMPARE	lib/nuklear/nuklear.h	/^    #define NK_TT__COMPARE(/;"	d
NK_TT__COMPARE	lib/nuklear/src/nuklear_font.c	/^    #define NK_TT__COMPARE(/;"	d	file:
NK_TT__OVER_MASK	lib/nuklear/nuklear.h	/^#define NK_TT__OVER_MASK /;"	d
NK_TT__OVER_MASK	lib/nuklear/src/nuklear_font.c	/^#define NK_TT__OVER_MASK /;"	d	file:
NK_TT_vcurve	lib/nuklear/nuklear.h	/^  NK_TT_vcurve$/;"	e	enum:__anond7ed09940903
NK_TT_vcurve	lib/nuklear/src/nuklear_font.c	/^  NK_TT_vcurve$/;"	e	enum:__anon7daa66dc0103	file:
NK_TT_vline	lib/nuklear/nuklear.h	/^  NK_TT_vline,$/;"	e	enum:__anond7ed09940903
NK_TT_vline	lib/nuklear/src/nuklear_font.c	/^  NK_TT_vline,$/;"	e	enum:__anon7daa66dc0103	file:
NK_TT_vmove	lib/nuklear/nuklear.h	/^  NK_TT_vmove=1,$/;"	e	enum:__anond7ed09940903
NK_TT_vmove	lib/nuklear/src/nuklear_font.c	/^  NK_TT_vmove=1,$/;"	e	enum:__anon7daa66dc0103	file:
NK_UCHAR_MAX	lib/nuklear/nuklear.h	/^#define NK_UCHAR_MAX /;"	d
NK_UCHAR_MAX	lib/nuklear/src/nuklear_internal.h	/^#define NK_UCHAR_MAX /;"	d
NK_UCHAR_MIN	lib/nuklear/nuklear.h	/^#define NK_UCHAR_MIN /;"	d
NK_UCHAR_MIN	lib/nuklear/src/nuklear_internal.h	/^#define NK_UCHAR_MIN /;"	d
NK_UINT16	lib/nuklear/nuklear.h	/^ #define NK_UINT16 /;"	d
NK_UINT16	lib/nuklear/src/nuklear.h	/^ #define NK_UINT16 /;"	d
NK_UINT32	lib/nuklear/nuklear.h	/^ #define NK_UINT32 /;"	d
NK_UINT32	lib/nuklear/src/nuklear.h	/^ #define NK_UINT32 /;"	d
NK_UINT8	lib/nuklear/nuklear.h	/^ #define NK_UINT8 /;"	d
NK_UINT8	lib/nuklear/src/nuklear.h	/^ #define NK_UINT8 /;"	d
NK_UINT_MAX	lib/nuklear/nuklear.h	/^#define NK_UINT_MAX /;"	d
NK_UINT_MAX	lib/nuklear/src/nuklear_internal.h	/^#define NK_UINT_MAX /;"	d
NK_UINT_MIN	lib/nuklear/nuklear.h	/^#define NK_UINT_MIN /;"	d
NK_UINT_MIN	lib/nuklear/src/nuklear_internal.h	/^#define NK_UINT_MIN /;"	d
NK_UINT_TO_PTR	lib/nuklear/nuklear.h	/^# define NK_UINT_TO_PTR(/;"	d
NK_UINT_TO_PTR	lib/nuklear/src/nuklear.h	/^# define NK_UINT_TO_PTR(/;"	d
NK_UNDEFINED	lib/nuklear/nuklear.h	/^#define NK_UNDEFINED /;"	d
NK_UNDEFINED	lib/nuklear/src/nuklear.h	/^#define NK_UNDEFINED /;"	d
NK_UNIQUE_NAME	lib/nuklear/nuklear.h	/^  #define NK_UNIQUE_NAME(/;"	d
NK_UNIQUE_NAME	lib/nuklear/src/nuklear.h	/^  #define NK_UNIQUE_NAME(/;"	d
NK_UNMATCHED_LETTER_PENALTY	lib/nuklear/nuklear.h	/^    #define NK_UNMATCHED_LETTER_PENALTY /;"	d
NK_UNMATCHED_LETTER_PENALTY	lib/nuklear/src/nuklear_util.c	/^    #define NK_UNMATCHED_LETTER_PENALTY /;"	d	file:
NK_UNUSED	lib/nuklear/nuklear.h	/^#define NK_UNUSED(/;"	d
NK_UNUSED	lib/nuklear/src/nuklear.h	/^#define NK_UNUSED(/;"	d
NK_UP	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_UP	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	e	enum:nk_heading
NK_USHORT_MAX	lib/nuklear/nuklear.h	/^#define NK_USHORT_MAX /;"	d
NK_USHORT_MAX	lib/nuklear/src/nuklear_internal.h	/^#define NK_USHORT_MAX /;"	d
NK_USHORT_MIN	lib/nuklear/nuklear.h	/^#define NK_USHORT_MIN /;"	d
NK_USHORT_MIN	lib/nuklear/src/nuklear_internal.h	/^#define NK_USHORT_MIN /;"	d
NK_UTF_INVALID	lib/nuklear/nuklear.h	/^#define NK_UTF_INVALID /;"	d
NK_UTF_INVALID	lib/nuklear/src/nuklear.h	/^#define NK_UTF_INVALID /;"	d
NK_UTF_SIZE	lib/nuklear/nuklear.h	/^#define NK_UTF_SIZE /;"	d
NK_UTF_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_UTF_SIZE /;"	d
NK_VALUE_PAGE_CAPACITY	lib/nuklear/nuklear.h	/^#define NK_VALUE_PAGE_CAPACITY /;"	d
NK_VALUE_PAGE_CAPACITY	lib/nuklear/src/nuklear.h	/^#define NK_VALUE_PAGE_CAPACITY /;"	d
NK_VECTOR_STACK_SIZE	lib/nuklear/nuklear.h	/^#define NK_VECTOR_STACK_SIZE /;"	d
NK_VECTOR_STACK_SIZE	lib/nuklear/src/nuklear.h	/^#define NK_VECTOR_STACK_SIZE /;"	d
NK_VERTEX_ATTRIBUTE_COUNT	lib/nuklear/nuklear.h	/^    NK_VERTEX_ATTRIBUTE_COUNT$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_ATTRIBUTE_COUNT	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_ATTRIBUTE_COUNT$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_COLOR	lib/nuklear/nuklear.h	/^    NK_VERTEX_COLOR,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_COLOR	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_COLOR,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_LAYOUT_END	lib/nuklear/nuklear.h	/^#define NK_VERTEX_LAYOUT_END /;"	d
NK_VERTEX_LAYOUT_END	lib/nuklear/src/nuklear.h	/^#define NK_VERTEX_LAYOUT_END /;"	d
NK_VERTEX_POSITION	lib/nuklear/nuklear.h	/^    NK_VERTEX_POSITION,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_POSITION	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_POSITION,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_TEXCOORD	lib/nuklear/nuklear.h	/^    NK_VERTEX_TEXCOORD,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTEX_TEXCOORD	lib/nuklear/src/nuklear.h	/^    NK_VERTEX_TEXCOORD,$/;"	e	enum:nk_draw_vertex_layout_attribute
NK_VERTICAL	lib/nuklear/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_VERTICAL	lib/nuklear/src/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	e	enum:nk_orientation
NK_VSNPRINTF	lib/nuklear/nuklear.h	/^      #define NK_VSNPRINTF(/;"	d
NK_VSNPRINTF	lib/nuklear/nuklear.h	/^    #define NK_VSNPRINTF(/;"	d
NK_VSNPRINTF	lib/nuklear/src/nuklear_internal.h	/^      #define NK_VSNPRINTF(/;"	d
NK_VSNPRINTF	lib/nuklear/src/nuklear_internal.h	/^    #define NK_VSNPRINTF(/;"	d
NK_WIDGET_INVALID	lib/nuklear/nuklear.h	/^    NK_WIDGET_INVALID, \/* The widget cannot be seen and is completely out of view *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_INVALID	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_INVALID, \/* The widget cannot be seen and is completely out of view *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_ROM	lib/nuklear/nuklear.h	/^    NK_WIDGET_ROM \/* The widget is partially visible and cannot be updated *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_ROM	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_ROM \/* The widget is partially visible and cannot be updated *\/$/;"	e	enum:nk_widget_layout_states
NK_WIDGET_STATE_ACTIVE	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_ACTIVE      = NK_WIDGET_STATE_ACTIVED|NK_WIDGET_STATE_MODIFIED \/* widget is/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVE	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_ACTIVE      = NK_WIDGET_STATE_ACTIVED|NK_WIDGET_STATE_MODIFIED \/* widget is/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_ACTIVED     = NK_FLAG(5),\/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ACTIVED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_ACTIVED     = NK_FLAG(5),\/* widget is currently activated *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ENTERED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_ENTERED     = NK_FLAG(3), \/* widget has been hovered on the current frame */;"	e	enum:nk_widget_states
NK_WIDGET_STATE_ENTERED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_ENTERED     = NK_FLAG(3), \/* widget has been hovered on the current frame */;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVER	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_HOVER       = NK_FLAG(4), \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVER	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_HOVER       = NK_FLAG(4), \/* widget is being hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVERED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_HOVERED     = NK_WIDGET_STATE_HOVER|NK_WIDGET_STATE_MODIFIED, \/* widget is /;"	e	enum:nk_widget_states
NK_WIDGET_STATE_HOVERED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_HOVERED     = NK_WIDGET_STATE_HOVER|NK_WIDGET_STATE_MODIFIED, \/* widget is /;"	e	enum:nk_widget_states
NK_WIDGET_STATE_INACTIVE	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_INACTIVE    = NK_FLAG(2), \/* widget is neither active nor hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_INACTIVE	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_INACTIVE    = NK_FLAG(2), \/* widget is neither active nor hovered *\/$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_LEFT	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_LEFT        = NK_FLAG(6), \/* widget is from this frame on not hovered anymo/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_LEFT	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_LEFT        = NK_FLAG(6), \/* widget is from this frame on not hovered anymo/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_MODIFIED	lib/nuklear/nuklear.h	/^    NK_WIDGET_STATE_MODIFIED    = NK_FLAG(1),$/;"	e	enum:nk_widget_states
NK_WIDGET_STATE_MODIFIED	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_STATE_MODIFIED    = NK_FLAG(1),$/;"	e	enum:nk_widget_states
NK_WIDGET_VALID	lib/nuklear/nuklear.h	/^    NK_WIDGET_VALID, \/* The widget is completely inside the window and can be updated and drawn/;"	e	enum:nk_widget_layout_states
NK_WIDGET_VALID	lib/nuklear/src/nuklear.h	/^    NK_WIDGET_VALID, \/* The widget is completely inside the window and can be updated and drawn/;"	e	enum:nk_widget_layout_states
NK_WINDOW_BACKGROUND	lib/nuklear/nuklear.h	/^    NK_WINDOW_BACKGROUND        = NK_FLAG(8),$/;"	e	enum:nk_panel_flags
NK_WINDOW_BACKGROUND	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_BACKGROUND        = NK_FLAG(8),$/;"	e	enum:nk_panel_flags
NK_WINDOW_BORDER	lib/nuklear/nuklear.h	/^    NK_WINDOW_BORDER            = NK_FLAG(0),$/;"	e	enum:nk_panel_flags
NK_WINDOW_BORDER	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_BORDER            = NK_FLAG(0),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_CLOSABLE          = NK_FLAG(3),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_CLOSABLE          = NK_FLAG(3),$/;"	e	enum:nk_panel_flags
NK_WINDOW_CLOSED	lib/nuklear/nuklear.h	/^    NK_WINDOW_CLOSED        = NK_FLAG(14),$/;"	e	enum:nk_window_flags
NK_WINDOW_CLOSED	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_CLOSED        = NK_FLAG(14),$/;"	e	enum:nk_window_flags
NK_WINDOW_DYNAMIC	lib/nuklear/nuklear.h	/^    NK_WINDOW_DYNAMIC       = NK_WINDOW_PRIVATE,$/;"	e	enum:nk_window_flags
NK_WINDOW_DYNAMIC	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_DYNAMIC       = NK_WINDOW_PRIVATE,$/;"	e	enum:nk_window_flags
NK_WINDOW_HIDDEN	lib/nuklear/nuklear.h	/^    NK_WINDOW_HIDDEN        = NK_FLAG(13),$/;"	e	enum:nk_window_flags
NK_WINDOW_HIDDEN	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_HIDDEN        = NK_FLAG(13),$/;"	e	enum:nk_window_flags
NK_WINDOW_MAX_NAME	lib/nuklear/nuklear.h	/^#define NK_WINDOW_MAX_NAME /;"	d
NK_WINDOW_MAX_NAME	lib/nuklear/src/nuklear.h	/^#define NK_WINDOW_MAX_NAME /;"	d
NK_WINDOW_MINIMIZABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_MINIMIZABLE       = NK_FLAG(4),$/;"	e	enum:nk_panel_flags
NK_WINDOW_MINIMIZABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_MINIMIZABLE       = NK_FLAG(4),$/;"	e	enum:nk_panel_flags
NK_WINDOW_MINIMIZED	lib/nuklear/nuklear.h	/^    NK_WINDOW_MINIMIZED     = NK_FLAG(15),$/;"	e	enum:nk_window_flags
NK_WINDOW_MINIMIZED	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_MINIMIZED     = NK_FLAG(15),$/;"	e	enum:nk_window_flags
NK_WINDOW_MOVABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_MOVABLE           = NK_FLAG(1),$/;"	e	enum:nk_panel_flags
NK_WINDOW_MOVABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_MOVABLE           = NK_FLAG(1),$/;"	e	enum:nk_panel_flags
NK_WINDOW_NOT_INTERACTIVE	lib/nuklear/nuklear.h	/^    NK_WINDOW_NOT_INTERACTIVE = NK_WINDOW_ROM|NK_WINDOW_NO_INPUT,$/;"	e	enum:nk_window_flags
NK_WINDOW_NOT_INTERACTIVE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_NOT_INTERACTIVE = NK_WINDOW_ROM|NK_WINDOW_NO_INPUT,$/;"	e	enum:nk_window_flags
NK_WINDOW_NO_INPUT	lib/nuklear/nuklear.h	/^    NK_WINDOW_NO_INPUT          = NK_FLAG(10)$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_INPUT	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_NO_INPUT          = NK_FLAG(10)$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_SCROLLBAR	lib/nuklear/nuklear.h	/^    NK_WINDOW_NO_SCROLLBAR      = NK_FLAG(5),$/;"	e	enum:nk_panel_flags
NK_WINDOW_NO_SCROLLBAR	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_NO_SCROLLBAR      = NK_FLAG(5),$/;"	e	enum:nk_panel_flags
NK_WINDOW_PRIVATE	lib/nuklear/nuklear.h	/^    NK_WINDOW_PRIVATE       = NK_FLAG(11),$/;"	e	enum:nk_window_flags
NK_WINDOW_PRIVATE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_PRIVATE       = NK_FLAG(11),$/;"	e	enum:nk_window_flags
NK_WINDOW_REMOVE_ROM	lib/nuklear/nuklear.h	/^    NK_WINDOW_REMOVE_ROM    = NK_FLAG(16)$/;"	e	enum:nk_window_flags
NK_WINDOW_REMOVE_ROM	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_REMOVE_ROM    = NK_FLAG(16)$/;"	e	enum:nk_window_flags
NK_WINDOW_ROM	lib/nuklear/nuklear.h	/^    NK_WINDOW_ROM           = NK_FLAG(12),$/;"	e	enum:nk_window_flags
NK_WINDOW_ROM	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_ROM           = NK_FLAG(12),$/;"	e	enum:nk_window_flags
NK_WINDOW_SCALABLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_SCALABLE          = NK_FLAG(2),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALABLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_SCALABLE          = NK_FLAG(2),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALE_LEFT	lib/nuklear/nuklear.h	/^    NK_WINDOW_SCALE_LEFT        = NK_FLAG(9),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCALE_LEFT	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_SCALE_LEFT        = NK_FLAG(9),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCROLL_AUTO_HIDE	lib/nuklear/nuklear.h	/^    NK_WINDOW_SCROLL_AUTO_HIDE  = NK_FLAG(7),$/;"	e	enum:nk_panel_flags
NK_WINDOW_SCROLL_AUTO_HIDE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_SCROLL_AUTO_HIDE  = NK_FLAG(7),$/;"	e	enum:nk_panel_flags
NK_WINDOW_TITLE	lib/nuklear/nuklear.h	/^    NK_WINDOW_TITLE             = NK_FLAG(6),$/;"	e	enum:nk_panel_flags
NK_WINDOW_TITLE	lib/nuklear/src/nuklear.h	/^    NK_WINDOW_TITLE             = NK_FLAG(6),$/;"	e	enum:nk_panel_flags
NK_X11_DOUBLE_CLICK_HI	lib/nuklear/demo/x11/nuklear_xlib.h	/^#define NK_X11_DOUBLE_CLICK_HI /;"	d
NK_X11_DOUBLE_CLICK_HI	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^#define NK_X11_DOUBLE_CLICK_HI /;"	d
NK_X11_DOUBLE_CLICK_HI	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^#define NK_X11_DOUBLE_CLICK_HI /;"	d
NK_X11_DOUBLE_CLICK_LO	lib/nuklear/demo/x11/nuklear_xlib.h	/^#define NK_X11_DOUBLE_CLICK_LO /;"	d
NK_X11_DOUBLE_CLICK_LO	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^#define NK_X11_DOUBLE_CLICK_LO /;"	d
NK_X11_DOUBLE_CLICK_LO	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^#define NK_X11_DOUBLE_CLICK_LO /;"	d
NK_XLIBSHM_H_	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^#define NK_XLIBSHM_H_$/;"	d
NK_XLIBSHM_IMPLEMENTATION	lib/nuklear/demo/x11_rawfb/main.c	/^#define NK_XLIBSHM_IMPLEMENTATION$/;"	d	file:
NK_XLIB_GL2_H_	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^#define NK_XLIB_GL2_H_$/;"	d
NK_XLIB_GL2_IMPLEMENTATION	lib/nuklear/demo/x11_opengl2/main.c	/^#define NK_XLIB_GL2_IMPLEMENTATION$/;"	d	file:
NK_XLIB_GL3_H_	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^#define NK_XLIB_GL3_H_$/;"	d
NK_XLIB_GL3_IMPLEMENTATION	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_XLIB_GL3_IMPLEMENTATION$/;"	d	file:
NK_XLIB_H_	lib/nuklear/demo/x11/nuklear_xlib.h	/^#define NK_XLIB_H_$/;"	d
NK_XLIB_IMPLEMENTATION	lib/nuklear/demo/x11/main.c	/^#define NK_XLIB_IMPLEMENTATION$/;"	d	file:
NK_XLIB_LOAD_OPENGL_EXTENSIONS	lib/nuklear/demo/x11_opengl3/main.c	/^#define NK_XLIB_LOAD_OPENGL_EXTENSIONS$/;"	d	file:
NSHumanReadableCopyright	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>NSHumanReadableCopyright<\/key>$/;"	k
NSMainNibFile	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>NSMainNibFile<\/key>$/;"	k
NSPrincipalClass	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Info.plist	/^	<key>NSPrincipalClass<\/key>$/;"	k
NUM_BACK_BUFFERS	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static int const                    NUM_BACK_BUFFERS = 3;$/;"	v	typeref:typename:int const	file:
NUM_FRAMES_IN_FLIGHT	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static int const                    NUM_FRAMES_IN_FLIGHT = 3;$/;"	v	typeref:typename:int const	file:
Name	lib/cimgui/cimgui/cimgui.h	/^    char Name[32];$/;"	m	struct:ImFontConfig	typeref:typename:char[32]
Name	lib/cimgui/imgui/imgui.h	/^    char            Name[40];               \/\/ Name (strictly to ease debugging)$/;"	m	struct:ImFontConfig	typeref:typename:char[40]
Name	lib/cimgui/imgui/imgui_internal.h	/^    char*                   Name;$/;"	m	struct:ImGuiWindow	typeref:typename:char *
Name	lib/cimgui/imgui/imgui_internal.h	/^    char*       Name;$/;"	m	struct:ImGuiWindowSettings	typeref:typename:char *
NavActivateDownId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavActivateDownId;                  \/\/ ~~ IsNavInputDown(ImGuiNavI/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavActivateId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavActivateId;                      \/\/ ~~ (g.ActiveId == 0) && IsN/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavActivatePressedId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavActivatePressedId;               \/\/ ~~ IsNavInputPressed(ImGuiN/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavActive	lib/cimgui/cimgui/cimgui.h	/^	bool        NavActive;                  \/\/ Directional navigation is currently allowed (will /;"	m	struct:ImGuiIO	typeref:typename:bool
NavActive	lib/cimgui/imgui/imgui.h	/^    bool        NavActive;                  \/\/ Directional navigation is currently allowed (wi/;"	m	struct:ImGuiIO	typeref:typename:bool
NavAnyRequest	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavAnyRequest;                      \/\/ ~~ NavMoveRequest || NavIni/;"	m	struct:ImGuiContext	typeref:typename:bool
NavCalcPreferredMousePos	lib/cimgui/imgui/imgui.cpp	/^static ImVec2 NavCalcPreferredMousePos()$/;"	f	typeref:typename:ImVec2	file:
NavDisableHighlight	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavDisableHighlight;                \/\/ When user starts using mous/;"	m	struct:ImGuiContext	typeref:typename:bool
NavDisableMouseHover	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavDisableMouseHover;               \/\/ When user starts using game/;"	m	struct:ImGuiContext	typeref:typename:bool
NavFlags	lib/cimgui/cimgui/cimgui.h	/^	ImGuiNavFlags NavFlags;$/;"	m	struct:ImGuiIO	typeref:typename:ImGuiNavFlags
NavHasScroll	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavHasScroll;           \/\/ Set when scrolling can be used (ScrollM/;"	m	struct:ImGuiDrawContext	typeref:typename:bool
NavHideHighlightOneFrame	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavHideHighlightOneFrame;$/;"	m	struct:ImGuiDrawContext	typeref:typename:bool
NavId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavId;                              \/\/ Focused item for navigation$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavIdIsAlive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavIdIsAlive;                       \/\/ Nav widget has been seen th/;"	m	struct:ImGuiContext	typeref:typename:bool
NavIdTabCounter	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavIdTabCounter;                    \/\/ == NavWindow->DC.FocusIdxTa/;"	m	struct:ImGuiContext	typeref:typename:int
NavInitRequest	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavInitRequest;                     \/\/ Init request for appearing /;"	m	struct:ImGuiContext	typeref:typename:bool
NavInitRequestFromMove	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavInitRequestFromMove;$/;"	m	struct:ImGuiContext	typeref:typename:bool
NavInitResultId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavInitResultId;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavInitResultRectRel	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  NavInitResultRectRel;$/;"	m	struct:ImGuiContext	typeref:typename:ImRect
NavInitWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NavInitWindow(ImGuiWindow* window, bool force_reinit)$/;"	f	class:ImGui	typeref:typename:void
NavInputId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavInputId;                         \/\/ ~~ IsNavInputPressed(ImGuiN/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavInputSource	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiInputSource        NavInputSource;                     \/\/ Keyboard or Gamepad mode?$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiInputSource
NavInputs	lib/cimgui/cimgui/cimgui.h	/^	float  NavInputs[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO	typeref:typename:float[]
NavInputs	lib/cimgui/imgui/imgui.h	/^    float       NavInputs[ImGuiNavInput_COUNT]; \/\/ Gamepad inputs (keyboard keys will be auto-/;"	m	struct:ImGuiIO	typeref:typename:float[]
NavInputsDownDuration	lib/cimgui/cimgui/cimgui.h	/^	float       NavInputsDownDuration[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO	typeref:typename:float[]
NavInputsDownDuration	lib/cimgui/imgui/imgui.h	/^    float       NavInputsDownDuration[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO	typeref:typename:float[]
NavInputsDownDurationPrev	lib/cimgui/cimgui/cimgui.h	/^    float       NavInputsDownDurationPrev[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO	typeref:typename:float[]
NavInputsDownDurationPrev	lib/cimgui/imgui/imgui.h	/^    float       NavInputsDownDurationPrev[ImGuiNavInput_COUNT];$/;"	m	struct:ImGuiIO	typeref:typename:float[]
NavJustMovedToId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavJustMovedToId;                   \/\/ Just navigated to this id (/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavJustTabbedId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavJustTabbedId;                    \/\/ Just tabbed to this id.$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavLastChildNavWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavLastChildNavWindow;              \/\/ When going to the menu bar,/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiWindow *
NavLastIds	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavLastIds[2];                      \/\/ Last known NavId for this w/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiID[2]
NavLayer	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayer;                           \/\/ Layer we are navigating on./;"	m	struct:ImGuiContext	typeref:typename:int
NavLayerActiveMask	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayerActiveMask;     \/\/ Which layer have been written to (resul/;"	m	struct:ImGuiDrawContext	typeref:typename:int
NavLayerActiveMaskNext	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayerActiveMaskNext; \/\/ Which layer have been written to (buffe/;"	m	struct:ImGuiDrawContext	typeref:typename:int
NavLayerCurrent	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayerCurrent;        \/\/ Current layer, 0..31 (we currently only/;"	m	struct:ImGuiDrawContext	typeref:typename:int
NavLayerCurrentMask	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavLayerCurrentMask;    \/\/ = (1 << NavLayerCurrent) used by ItemAd/;"	m	struct:ImGuiDrawContext	typeref:typename:int
NavMousePosDirty	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavMousePosDirty;                   \/\/ When set we will update mou/;"	m	struct:ImGuiContext	typeref:typename:bool
NavMoveDir	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDir                NavMoveDir, NavMoveDirLast;         \/\/ Direction of the move reque/;"	m	struct:ImGuiContext	typeref:typename:ImGuiDir
NavMoveDirLast	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiDir                NavMoveDir, NavMoveDirLast;         \/\/ Direction of the move reque/;"	m	struct:ImGuiContext	typeref:typename:ImGuiDir
NavMoveFromClampedRefRect	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavMoveFromClampedRefRect;          \/\/ Set by manual scrolling, if/;"	m	struct:ImGuiContext	typeref:typename:bool
NavMoveRequest	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavMoveRequest;                     \/\/ Move request for this frame$/;"	m	struct:ImGuiContext	typeref:typename:bool
NavMoveRequestButNoResultYet	lib/cimgui/imgui/imgui.cpp	/^static bool NavMoveRequestButNoResultYet()$/;"	f	typeref:typename:bool	file:
NavMoveRequestCancel	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NavMoveRequestCancel()$/;"	f	class:ImGui	typeref:typename:void
NavMoveRequestForward	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavForward         NavMoveRequestForward;              \/\/ None \/ ForwardQueued \/ Fo/;"	m	struct:ImGuiContext	typeref:typename:ImGuiNavForward
NavMoveResultLocal	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveResult      NavMoveResultLocal;                 \/\/ Best move request candidate/;"	m	struct:ImGuiContext	typeref:typename:ImGuiNavMoveResult
NavMoveResultOther	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNavMoveResult      NavMoveResultOther;                 \/\/ Best move request candidate/;"	m	struct:ImGuiContext	typeref:typename:ImGuiNavMoveResult
NavNextActivateId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 NavNextActivateId;                  \/\/ Set by ActivateItem(), queu/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
NavProcessItem	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavProcessItem(ImGuiWindow* window, const ImRect& nav_bb, const ImGuiID id)$/;"	f	class:ImGui	typeref:typename:void	file:
NavProcessMoveRequestWrapAround	lib/cimgui/imgui/imgui.cpp	/^static void NavProcessMoveRequestWrapAround(ImGuiWindow* window)$/;"	f	typeref:typename:void	file:
NavRectRel	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  NavRectRel[2];                      \/\/ Reference rectangle, in win/;"	m	struct:ImGuiWindow	typeref:typename:ImRect[2]
NavRestoreLastChildNavWindow	lib/cimgui/imgui/imgui.cpp	/^static ImGuiWindow* NavRestoreLastChildNavWindow(ImGuiWindow* window)$/;"	f	typeref:typename:ImGuiWindow *	file:
NavRestoreLayer	lib/cimgui/imgui/imgui.cpp	/^static void NavRestoreLayer(int layer)$/;"	f	typeref:typename:void	file:
NavSaveLastChildNavWindow	lib/cimgui/imgui/imgui.cpp	/^static void NavSaveLastChildNavWindow(ImGuiWindow* child_window)$/;"	f	typeref:typename:void	file:
NavScoreItem	lib/cimgui/imgui/imgui.cpp	/^static bool NavScoreItem(ImGuiNavMoveResult* result, ImRect cand)$/;"	f	typeref:typename:bool	file:
NavScoreItemDistInterval	lib/cimgui/imgui/imgui.cpp	/^static float NavScoreItemDistInterval(float a0, float a1, float b0, float b1)$/;"	f	typeref:typename:float	file:
NavScoreItemGetQuadrant	lib/cimgui/imgui/imgui.cpp	/^static ImGuiDir NavScoreItemGetQuadrant(float dx, float dy)$/;"	f	typeref:typename:ImGuiDir	file:
NavScoringCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     NavScoringCount;                    \/\/ Metrics for debugging$/;"	m	struct:ImGuiContext	typeref:typename:int
NavScoringRectScreen	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  NavScoringRectScreen;               \/\/ Rectangle used for scoring,/;"	m	struct:ImGuiContext	typeref:typename:ImRect
NavScrollToBringItemIntoView	lib/cimgui/imgui/imgui.cpp	/^static void NavScrollToBringItemIntoView(ImGuiWindow* window, ImRect& item_rect_rel)$/;"	f	typeref:typename:void	file:
NavUpdate	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavUpdate()$/;"	f	class:ImGui	typeref:typename:void	file:
NavUpdateAnyRequestFlag	lib/cimgui/imgui/imgui.cpp	/^static inline void NavUpdateAnyRequestFlag()$/;"	f	typeref:typename:void	file:
NavUpdateWindowing	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NavUpdateWindowing()$/;"	f	class:ImGui	typeref:typename:void	file:
NavUpdateWindowingHighlightWindow	lib/cimgui/imgui/imgui.cpp	/^static void NavUpdateWindowingHighlightWindow(int focus_change_dir)$/;"	f	typeref:typename:void	file:
NavVisible	lib/cimgui/cimgui/cimgui.h	/^    bool        NavVisible;                 \/\/ Directional navigation is visible and allowed (/;"	m	struct:ImGuiIO	typeref:typename:bool
NavVisible	lib/cimgui/imgui/imgui.h	/^    bool        NavVisible;                 \/\/ Directional navigation is visible and allowed (/;"	m	struct:ImGuiIO	typeref:typename:bool
NavWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavWindow;                          \/\/ Focused window for navigati/;"	m	struct:ImGuiContext	typeref:typename:ImGuiWindow *
NavWindowingHighlightAlpha	lib/cimgui/imgui/imgui_internal.h	/^    float                   NavWindowingHighlightAlpha;$/;"	m	struct:ImGuiContext	typeref:typename:float
NavWindowingHighlightTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                   NavWindowingHighlightTimer;$/;"	m	struct:ImGuiContext	typeref:typename:float
NavWindowingTarget	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            NavWindowingTarget;                 \/\/ When selecting a window (ho/;"	m	struct:ImGuiContext	typeref:typename:ImGuiWindow *
NavWindowingToggleLayer	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NavWindowingToggleLayer;$/;"	m	struct:ImGuiContext	typeref:typename:bool
NewFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NewFrame()$/;"	f	class:ImGui	typeref:typename:void
NewFrameUpdateHoveredWindowAndCaptureFlags	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NewFrameUpdateHoveredWindowAndCaptureFlags()$/;"	f	class:ImGui	typeref:typename:void
NewFrameUpdateMouseInputs	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NewFrameUpdateMouseInputs()$/;"	f	class:ImGui	typeref:typename:void	file:
NewFrameUpdateMovingWindow	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::NewFrameUpdateMovingWindow()$/;"	f	class:ImGui	typeref:typename:void	file:
NewLine	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NewLine()$/;"	f	class:ImGui	typeref:typename:void
NextColumn	lib/cimgui/imgui/imgui.cpp	/^void ImGui::NextColumn()$/;"	f	class:ImGui	typeref:typename:void
NextTreeNodeOpenCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               NextTreeNodeOpenCond;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiCond
NextTreeNodeOpenVal	lib/cimgui/imgui/imgui_internal.h	/^    bool                    NextTreeNodeOpenVal;                \/\/ Storage for SetNextTreeNode/;"	m	struct:ImGuiContext	typeref:typename:bool
NextWidth	lib/cimgui/imgui/imgui_internal.h	/^    float       Width, NextWidth;$/;"	m	struct:ImGuiMenuColumns	typeref:typename:float
NextWidths	lib/cimgui/imgui/imgui_internal.h	/^    float       Pos[4], NextWidths[4];$/;"	m	struct:ImGuiMenuColumns	typeref:typename:float[4][4]
NextWindowData	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiNextWindowData     NextWindowData;                     \/\/ Storage for SetNextWindow**/;"	m	struct:ImGuiContext	typeref:typename:ImGuiNextWindowData
NkAllegro5Font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^struct NkAllegro5Font {$/;"	s
NkAllegro5Font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^typedef struct NkAllegro5Font NkAllegro5Font;$/;"	t	typeref:struct:NkAllegro5Font
NoAutoHint	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        NoAutoHint      = 1 << 1,   \/\/ Disable auto-hinter.$/;"	e	enum:ImGuiFreeType::RasterizerFlags
NoHinting	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        NoHinting       = 1 << 0,   \/\/ Disable hinting. This generally generates 'blurrier' bi/;"	e	enum:ImGuiFreeType::RasterizerFlags
NodeDrawList	lib/cimgui/imgui/imgui.cpp	/^            static void NodeDrawList(ImGuiWindow* window, ImDrawList* draw_list, const char* lab/;"	f	struct:ImGui::ShowMetricsWindow::Funcs	typeref:typename:void	file:
NodeWindow	lib/cimgui/imgui/imgui.cpp	/^            static void NodeWindow(ImGuiWindow* window, const char* label)$/;"	f	struct:ImGui::ShowMetricsWindow::Funcs	typeref:typename:void	file:
NodeWindows	lib/cimgui/imgui/imgui.cpp	/^            static void NodeWindows(ImVector<ImGuiWindow*>& windows, const char* label)$/;"	f	struct:ImGui::ShowMetricsWindow::Funcs	typeref:typename:void	file:
NotificationHook	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    NotificationHookProc NotificationHook;$/;"	m	struct:__anon66f154fe0c08	typeref:typename:NotificationHookProc
NotificationHookProc	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef Status (WINAPI *NotificationHookProc)(OUT ULONG_PTR *token);$/;"	t	typeref:typename:Status (WINAPI *)(OUT ULONG_PTR * token)
NotificationUnhook	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    NotificationUnhookProc NotificationUnhook;$/;"	m	struct:__anon66f154fe0c08	typeref:typename:NotificationUnhookProc
NotificationUnhookProc	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef VOID (WINAPI *NotificationUnhookProc)(ULONG_PTR token);$/;"	t	typeref:typename:VOID (WINAPI *)(ULONG_PTR token)
OBJ	lib/nuklear/demo/allegro5/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/glfw_opengl2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/glfw_opengl3/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/glfw_opengl4/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sdl_opengl2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sdl_opengl3/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sdl_opengles2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/sfml_opengl2/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	lib/nuklear/demo/sfml_opengl3/Makefile	/^OBJ = $(SRC:.cpp=.o)$/;"	m
OBJ	lib/nuklear/demo/x11/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/x11_opengl2/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/x11_opengl3/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/demo/x11_rawfb/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJ	lib/nuklear/doc/Makefile	/^OBJ = $(SRC:.c=.o)$/;"	m
OBJS	lib/cimgui/cimgui/Makefile	/^OBJS = cimgui.o$/;"	m
OBJS	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OBJS	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^OBJS = $(addsuffix .o, $(basename $(notdir $(SOURCES))))$/;"	m
OUTPUTNAME	lib/cimgui/cimgui/Makefile	/^	OUTPUTNAME = cimgui.dll$/;"	m
OUTPUTNAME	lib/cimgui/cimgui/Makefile	/^	OUTPUTNAME = cimgui.dylib$/;"	m
OUTPUTNAME	lib/cimgui/cimgui/Makefile	/^	OUTPUTNAME = cimgui.so$/;"	m
Oblique	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^        Oblique         = 1 << 6    \/\/ Styling: Should we slant the font, emulating italic sty/;"	e	enum:ImGuiFreeType::RasterizerFlags
Offset	lib/cimgui/imgui/imgui.cpp	/^    ImU32           Offset;$/;"	m	struct:ImGuiStyleVarInfo	typeref:typename:ImU32	file:
OffsetNorm	lib/cimgui/imgui/imgui_internal.h	/^    float               OffsetNorm;         \/\/ Column start offset, normalized 0.0 (far left) /;"	m	struct:ImGuiColumnData	typeref:typename:float
OffsetNormBeforeResize	lib/cimgui/imgui/imgui_internal.h	/^    float               OffsetNormBeforeResize;$/;"	m	struct:ImGuiColumnData	typeref:typename:float
OffsetNormToPixels	lib/cimgui/imgui/imgui.cpp	/^static float OffsetNormToPixels(const ImGuiColumnsSet* columns, float offset_norm)$/;"	f	typeref:typename:float	file:
OffsetX	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float OffsetX;		\/\/ The distance from the origin ("pen position") to the left of the gl/;"	m	struct:__anon71f5b57f0110::GlyphInfo	typeref:typename:float	file:
OffsetY	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float OffsetY;		\/\/ The distance from the origin to the top of the glyph. This is usual/;"	m	struct:__anon71f5b57f0110::GlyphInfo	typeref:typename:float	file:
OnKeyPressed	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextEditState::OnKeyPressed(int key)$/;"	f	class:ImGuiTextEditState	typeref:typename:void
OpenFrameCount	lib/cimgui/imgui/imgui_internal.h	/^    int                 OpenFrameCount; \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupRef	typeref:typename:int
OpenMousePos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2              OpenMousePos;   \/\/ Set on OpenPopup(), copy of mouse position at the t/;"	m	struct:ImGuiPopupRef	typeref:typename:ImVec2
OpenParentId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             OpenParentId;   \/\/ Set on OpenPopup(), we need this to differenciate m/;"	m	struct:ImGuiPopupRef	typeref:typename:ImGuiID
OpenPopup	lib/cimgui/imgui/imgui.cpp	/^void ImGui::OpenPopup(const char* str_id)$/;"	f	class:ImGui	typeref:typename:void
OpenPopupEx	lib/cimgui/imgui/imgui.cpp	/^void ImGui::OpenPopupEx(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:void
OpenPopupOnItemClick	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::OpenPopupOnItemClick(const char* str_id, int mouse_button)$/;"	f	class:ImGui	typeref:typename:bool
OpenPopupPos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2              OpenPopupPos;   \/\/ Set on OpenPopup(), preferred popup position (typic/;"	m	struct:ImGuiPopupRef	typeref:typename:ImVec2
OpenPopupStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiPopupRef> OpenPopupStack;                     \/\/ Which popups are open (pers/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiPopupRef>
OptCursorBlink	lib/cimgui/cimgui/cimgui.h	/^    bool OptCursorBlink;$/;"	m	struct:ImGuiIO	typeref:typename:bool
OptCursorBlink	lib/cimgui/imgui/imgui.h	/^    bool          OptCursorBlink;           \/\/ = true               \/\/ Enable blinking curso/;"	m	struct:ImGuiIO	typeref:typename:bool
OptMacOSXBehaviors	lib/cimgui/cimgui/cimgui.h	/^    bool OptMacOSXBehaviors;$/;"	m	struct:ImGuiIO	typeref:typename:bool
OptMacOSXBehaviors	lib/cimgui/imgui/imgui.h	/^    bool          OptMacOSXBehaviors;       \/\/ = defined(__APPLE__) \/\/ OS X style: Text edit/;"	m	struct:ImGuiIO	typeref:typename:bool
OsImePosRequest	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  OsImePosRequest, OsImePosSet;       \/\/ Cursor position request & l/;"	m	struct:ImGuiContext	typeref:typename:ImVec2
OsImePosSet	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  OsImePosRequest, OsImePosSet;       \/\/ Cursor position request & l/;"	m	struct:ImGuiContext	typeref:typename:ImVec2
Overlaps	lib/cimgui/imgui/imgui_internal.h	/^    bool        Overlaps(const ImRect& r) const     { return r.Min.y <  Max.y && r.Max.y >  Min./;"	f	struct:ImRect	typeref:typename:bool
OverlayDrawList	lib/cimgui/imgui/imgui_internal.h	/^    ImDrawList              OverlayDrawList;                    \/\/ Optional software render of/;"	m	struct:ImGuiContext	typeref:typename:ImDrawList
OversampleH	lib/cimgui/cimgui/cimgui.h	/^    int OversampleH, OversampleV;$/;"	m	struct:ImFontConfig	typeref:typename:int
OversampleH	lib/cimgui/imgui/imgui.h	/^    int             OversampleH;            \/\/ 3        \/\/ Rasterize at higher quality for s/;"	m	struct:ImFontConfig	typeref:typename:int
OversampleV	lib/cimgui/cimgui/cimgui.h	/^    int OversampleH, OversampleV;$/;"	m	struct:ImFontConfig	typeref:typename:int
OversampleV	lib/cimgui/imgui/imgui.h	/^    int             OversampleV;            \/\/ 1        \/\/ Rasterize at higher quality for s/;"	m	struct:ImFontConfig	typeref:typename:int
PFNGLACTIVESHADERPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVESHADERPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVESHADERPROGRAMPROC) (GLuint pipeline, GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLuint program)
PFNGLACTIVETEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLACTIVETEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLACTIVETEXTUREPROC) (GLenum texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture)
PFNGLATTACHSHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLATTACHSHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLATTACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLBEGINCONDITIONALRENDERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINCONDITIONALRENDERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINCONDITIONALRENDERPROC) (GLuint id, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum mode)
PFNGLBEGINQUERYINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYINDEXEDPROC) (GLenum target, GLuint index, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint id)
PFNGLBEGINQUERYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINQUERYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINQUERYPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBEGINTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBEGINTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBEGINTRANSFORMFEEDBACKPROC) (GLenum primitiveMode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum primitiveMode)
PFNGLBINDATTRIBLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDATTRIBLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDATTRIBLOCATIONPROC) (GLuint program, GLuint index, const GLchar/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,const GLchar * name)
PFNGLBINDBUFFERBASEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERBASEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERBASEPROC) (GLenum target, GLuint index, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer)
PFNGLBINDBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERPROC) (GLenum target, GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint buffer)
PFNGLBINDBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDBUFFERRANGEPROC) (GLenum target, GLuint index, GLuint buffer, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONINDEXEDPROC) (GLuint program, GLuint colorNumbe/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint colorNumber,GLuint index,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAGDATALOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAGDATALOCATIONPROC) (GLuint program, GLuint color, const GLch/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint color,const GLchar * name)
PFNGLBINDFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDFRAMEBUFFERPROC) (GLenum target, GLuint framebuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint framebuffer)
PFNGLBINDIMAGETEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDIMAGETEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDIMAGETEXTUREPROC) (GLuint unit, GLuint texture, GLint level, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint texture,GLint level,GLboolean layered,GLint layer,GLenum access,GLenum format)
PFNGLBINDPROGRAMPIPELINEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDPROGRAMPIPELINEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLBINDRENDERBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDRENDERBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDRENDERBUFFERPROC) (GLenum target, GLuint renderbuffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint renderbuffer)
PFNGLBINDSAMPLERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDSAMPLERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDSAMPLERPROC) (GLuint unit, GLuint sampler);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint unit,GLuint sampler)
PFNGLBINDTEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTEXTUREPROC) (GLenum target, GLuint texture);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint texture)
PFNGLBINDTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDTRANSFORMFEEDBACKPROC) (GLenum target, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint id)
PFNGLBINDVERTEXARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint array)
PFNGLBINDVERTEXBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBINDVERTEXBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBINDVERTEXBUFFERPROC) (GLuint bindingindex, GLuint buffer, GLintptr/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLBLENDCOLORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDCOLORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLBLENDEQUATIONIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIARBPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONIPROC) (GLuint buf, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum mode)
PFNGLBLENDEQUATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIARBPROC) (GLuint buf, GLenum modeRGB, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEIPROC) (GLuint buf, GLenum modeRGB, GLenum mod/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDEQUATIONSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDEQUATIONSEPARATEPROC) (GLenum modeRGB, GLenum modeAlpha);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum modeRGB,GLenum modeAlpha)
PFNGLBLENDFUNCIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIARBPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCIPROC) (GLuint buf, GLenum src, GLenum dst);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum src,GLenum dst)
PFNGLBLENDFUNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactor,GLenum dfactor)
PFNGLBLENDFUNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCPROC) (GLenum sfactor, GLenum dfactor);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactor,GLenum dfactor)
PFNGLBLENDFUNCSEPARATEIARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIARBPROC) (GLuint buf, GLenum srcRGB, GLenum dstRG/;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEIPROC) (GLuint buf, GLenum srcRGB, GLenum dstRGB, /;"	t	typeref:typename:void (APIENTRYP)(GLuint buf,GLenum srcRGB,GLenum dstRGB,GLenum srcAlpha,GLenum dstAlpha)
PFNGLBLENDFUNCSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLENDFUNCSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLENDFUNCSEPARATEPROC) (GLenum sfactorRGB, GLenum dfactorRGB, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum sfactorRGB,GLenum dfactorRGB,GLenum sfactorAlpha,GLenum dfactorAlpha)
PFNGLBLITFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBLITFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBLITFRAMEBUFFERPROC) (GLint srcX0, GLint srcY0, GLint srcX1, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLint srcX0,GLint srcY0,GLint srcX1,GLint srcY1,GLint dstX0,GLint dstY0,GLint dstX1,GLint dstY1,GLbitfield mask,GLenum filter)
PFNGLBUFFERDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
PFNGLBUFFERDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERDATAPROC) (GLenum target, GLsizeiptr size, const GLvoid *data/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizeiptr size,const GLvoid * data,GLenum usage)
PFNGLBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
PFNGLBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr size/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,const GLvoid * data)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCHECKFRAMEBUFFERSTATUSPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCHECKFRAMEBUFFERSTATUSPROC) (GLenum target);$/;"	t	typeref:typename:GLenum (APIENTRYP)(GLenum target)
PFNGLCLAMPCOLORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLAMPCOLORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLAMPCOLORPROC) (GLenum target, GLenum clamp);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum clamp)
PFNGLCLEARBUFFERDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERDATAPROC) (GLenum target, GLenum internalformat, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERFIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFIPROC) (GLenum buffer, GLint drawbuffer, GLfloat depth,/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,GLfloat depth,GLint stencil)
PFNGLCLEARBUFFERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERFVPROC) (GLenum buffer, GLint drawbuffer, const GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLfloat * value)
PFNGLCLEARBUFFERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERIVPROC) (GLenum buffer, GLint drawbuffer, const GLint *v/;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLint * value)
PFNGLCLEARBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERSUBDATAPROC) (GLenum target, GLenum internalformat, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLintptr offset,GLsizeiptr size,GLenum format,GLenum type,const void * data)
PFNGLCLEARBUFFERUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARBUFFERUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARBUFFERUIVPROC) (GLenum buffer, GLint drawbuffer, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum buffer,GLint drawbuffer,const GLuint * value)
PFNGLCLEARCOLORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLCLEARCOLORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARCOLORPROC) (GLfloat red, GLfloat green, GLfloat blue, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLfloat red,GLfloat green,GLfloat blue,GLfloat alpha)
PFNGLCLEARDEPTHFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHFPROC) (GLfloat d);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat d)
PFNGLCLEARDEPTHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARDEPTHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARDEPTHPROC) (GLdouble depth);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble depth)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERDATAEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERDATAEXTPROC) (GLuint buffer, GLenum internalformat,/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,GLsizeiptr offset,GLsizeiptr size,const void * data)
PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC) (GLuint buffer, GLenum internalform/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLenum internalformat,GLenum format,GLenum type,GLsizeiptr offset,GLsizeiptr size,const void * data)
PFNGLCLEARPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLEARPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARPROC) (GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield mask)
PFNGLCLEARSTENCILPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLint s)
PFNGLCLEARSTENCILPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCLEARSTENCILPROC) (GLint s);$/;"	t	typeref:typename:void (APIENTRYP)(GLint s)
PFNGLCLIENTWAITSYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCLIENTWAITSYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLCLIENTWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 time/;"	t	typeref:typename:GLenum (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLCOLORMASKIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKIPROC) (GLuint index, GLboolean r, GLboolean g, GLboolean /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLboolean r,GLboolean g,GLboolean b,GLboolean a)
PFNGLCOLORMASKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLb/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLCOLORMASKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORMASKPROC) (GLboolean red, GLboolean green, GLboolean blue, GLb/;"	t	typeref:typename:void (APIENTRYP)(GLboolean red,GLboolean green,GLboolean blue,GLboolean alpha)
PFNGLCOLORP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLCOLORP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOLORP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOLORP4UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLCOMPILESHADERINCLUDEARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar ** path,const GLint * length)
PFNGLCOMPILESHADERINCLUDEARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERINCLUDEARBPROC) (GLuint shader, GLsizei count, const G/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar ** path,const GLint * length)
PFNGLCOMPILESHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPILESHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPILESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXIMAGE3DPROC) (GLenum target, GLint level, GLenum inter/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xof/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLsizei imageSize,const GLvoid * data)
PFNGLCOPYBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYBUFFERSUBDATAPROC) (GLenum readTarget, GLenum writeTarget, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum readTarget,GLenum writeTarget,GLintptr readOffset,GLintptr writeOffset,GLsizeiptr size)
PFNGLCOPYIMAGESUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYIMAGESUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYIMAGESUBDATAPROC) (GLuint srcName, GLenum srcTarget, GLint srcL/;"	t	typeref:typename:void (APIENTRYP)(GLuint srcName,GLenum srcTarget,GLint srcLevel,GLint srcX,GLint srcY,GLint srcZ,GLuint dstName,GLenum dstTarget,GLint dstLevel,GLint dstX,GLint dstY,GLint dstZ,GLsizei srcWidth,GLsizei srcHeight,GLsizei srcDepth)
PFNGLCOPYTEXIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE1DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLint border)
PFNGLCOPYTEXIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXIMAGE2DPROC) (GLenum target, GLint level, GLenum internalfor/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum internalformat,GLint x,GLint y,GLsizei width,GLsizei height,GLint border)
PFNGLCOPYTEXSUBIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint x,GLint y,GLsizei width)
PFNGLCOPYTEXSUBIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCOPYTEXSUBIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCOPYTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLCREATEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATEPROGRAMPROC) (void);$/;"	t	typeref:typename:GLuint (APIENTRYP)(void)
PFNGLCREATESHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROC) (GLenum type);$/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type)
PFNGLCREATESHADERPROGRAMVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESHADERPROGRAMVPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLCREATESHADERPROGRAMVPROC) (GLenum type, GLsizei count, const GLch/;"	t	typeref:typename:GLuint (APIENTRYP)(GLenum type,GLsizei count,const GLchar * const * strings)
PFNGLCREATESYNCFROMCLEVENTARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, stru/;"	t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCREATESYNCFROMCLEVENTARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLCREATESYNCFROMCLEVENTARBPROC) (struct _cl_context * context, stru/;"	t	typeref:typename:GLsync (APIENTRYP)(struct _cl_context * context,struct _cl_event * event,GLbitfield flags)
PFNGLCULLFACEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLCULLFACEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLCULLFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLDEBUGMESSAGECALLBACKARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoid/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const GLvoid * userParam)
PFNGLDEBUGMESSAGECALLBACKARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKARBPROC) (GLDEBUGPROCARB callback, const GLvoid/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROCARB callback,const GLvoid * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECALLBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECALLBACKPROC) (GLDEBUGPROC callback, const void *userPa/;"	t	typeref:typename:void (APIENTRYP)(GLDEBUGPROC callback,const void * userParam)
PFNGLDEBUGMESSAGECONTROLARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLARBPROC) (GLenum source, GLenum type, GLenum sev/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGECONTROLPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGECONTROLPROC) (GLenum source, GLenum type, GLenum severi/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLenum severity,GLsizei count,const GLuint * ids,GLboolean enabled)
PFNGLDEBUGMESSAGEINSERTARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTARBPROC) (GLenum source, GLenum type, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDEBUGMESSAGEINSERTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEBUGMESSAGEINSERTPROC) (GLenum source, GLenum type, GLuint id, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLenum type,GLuint id,GLenum severity,GLsizei length,const GLchar * buf)
PFNGLDELETEBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEBUFFERSPROC) (GLsizei n, const GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * buffers)
PFNGLDELETEFRAMEBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETEFRAMEBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEFRAMEBUFFERSPROC) (GLsizei n, const GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * framebuffers)
PFNGLDELETENAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETENAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETENAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLDELETEPROGRAMPIPELINESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPIPELINESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPIPELINESPROC) (GLsizei n, const GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * pipelines)
PFNGLDELETEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLDELETEQUERIESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEQUERIESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEQUERIESPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETERENDERBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETERENDERBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETERENDERBUFFERSPROC) (GLsizei n, const GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * renderbuffers)
PFNGLDELETESAMPLERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESAMPLERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESAMPLERSPROC) (GLsizei count, const GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * samplers)
PFNGLDELETESHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESHADERPROC) (GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader)
PFNGLDELETESYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETESYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETESYNCPROC) (GLsync sync);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync)
PFNGLDELETETEXTURESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETEXTURESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETEXTURESPROC) (GLsizei n, const GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * textures)
PFNGLDELETETRANSFORMFEEDBACKSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETETRANSFORMFEEDBACKSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETETRANSFORMFEEDBACKSPROC) (GLsizei n, const GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * ids)
PFNGLDELETEVERTEXARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDELETEVERTEXARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDELETEVERTEXARRAYSPROC) (GLsizei n, const GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLuint * arrays)
PFNGLDEPTHFUNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLDEPTHFUNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHFUNCPROC) (GLenum func);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func)
PFNGLDEPTHMASKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t	typeref:typename:void (APIENTRYP)(GLboolean flag)
PFNGLDEPTHMASKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHMASKPROC) (GLboolean flag);$/;"	t	typeref:typename:void (APIENTRYP)(GLboolean flag)
PFNGLDEPTHRANGEARRAYVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEARRAYVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEARRAYVPROC) (GLuint first, GLsizei count, const GLdouble /;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLdouble * v)
PFNGLDEPTHRANGEFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEFPROC) (GLfloat n, GLfloat f);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat n,GLfloat f)
PFNGLDEPTHRANGEINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEINDEXEDPROC) (GLuint index, GLdouble n, GLdouble f);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble n,GLdouble f)
PFNGLDEPTHRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble near,GLdouble far)
PFNGLDEPTHRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDEPTHRANGEPROC) (GLdouble near, GLdouble far);$/;"	t	typeref:typename:void (APIENTRYP)(GLdouble near,GLdouble far)
PFNGLDETACHSHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDETACHSHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDETACHSHADERPROC) (GLuint program, GLuint shader);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint shader)
PFNGLDISABLEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLDISABLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum cap)
PFNGLDISABLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum cap)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISABLEVERTEXATTRIBARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEINDIRECTPROC) (GLintptr indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLintptr indirect)
PFNGLDISPATCHCOMPUTEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDISPATCHCOMPUTEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDISPATCHCOMPUTEPROC) (GLuint num_groups_x, GLuint num_groups_y, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLuint num_groups_x,GLuint num_groups_y,GLuint num_groups_z)
PFNGLDRAWARRAYSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLvoid * indirect)
PFNGLDRAWARRAYSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINDIRECTPROC) (GLenum mode, const GLvoid *indirect);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLvoid * indirect)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLint first, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWARRAYSINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWARRAYSINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSINSTANCEDPROC) (GLenum mode, GLint first, GLsizei count, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count,GLsizei instancecount)
PFNGLDRAWARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWARRAYSPROC) (GLenum mode, GLint first, GLsizei count);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLint first,GLsizei count)
PFNGLDRAWBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLDRAWBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLDRAWBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWBUFFERSPROC) (GLsizei n, const GLenum *bufs);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,const GLenum * bufs)
PFNGLDRAWELEMENTSBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLint basevertex)
PFNGLDRAWELEMENTSBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, GLsizei count, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLint basevertex)
PFNGLDRAWELEMENTSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid */;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const GLvoid * indirect)
PFNGLDRAWELEMENTSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const GLvoid */;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const GLvoid * indirect)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC) (GLenum mode, GLsizei count,/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC) (GLenum mode, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const void * indices,GLsizei instancecount,GLint basevertex,GLuint baseinstance)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC) (GLenum mode, GLsizei count, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei instancecount,GLint basevertex)
PFNGLDRAWELEMENTSINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei instancecount)
PFNGLDRAWELEMENTSINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSINSTANCEDPROC) (GLenum mode, GLsizei count, GLenum type/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices,GLsizei instancecount)
PFNGLDRAWELEMENTSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLDRAWELEMENTSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWELEMENTSPROC) (GLenum mode, GLsizei count, GLenum type, const G/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC) (GLenum mode, GLuint start, GLuint/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices,GLint basevertex)
PFNGLDRAWRANGEELEMENTSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLDRAWRANGEELEMENTSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWRANGEELEMENTSPROC) (GLenum mode, GLuint start, GLuint end, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint start,GLuint end,GLsizei count,GLenum type,const GLvoid * indices)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC) (GLenum mode, GLuint id, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKPROC) (GLenum mode, GLuint id);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC) (GLenum mode, GLuint id, /;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream,GLsizei instancecount)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC) (GLenum mode, GLuint id, GLuint st/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLuint id,GLuint stream)
PFNGLENABLEIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENABLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum cap)
PFNGLENABLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEPROC) (GLenum cap);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum cap)
PFNGLENABLEVERTEXATTRIBARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENABLEVERTEXATTRIBARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENABLEVERTEXATTRIBARRAYPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLENDCONDITIONALRENDERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDCONDITIONALRENDERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDCONDITIONALRENDERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDQUERYINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYINDEXEDPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index)
PFNGLENDQUERYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDQUERYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDQUERYPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLENDTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLENDTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLENDTRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFENCESYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFENCESYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLsync (APIENTRYP PFNGLFENCESYNCPROC) (GLenum condition, GLbitfield flags);$/;"	t	typeref:typename:GLsync (APIENTRYP)(GLenum condition,GLbitfield flags)
PFNGLFINISHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFINISHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFINISHPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHMAPPEDBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHMAPPEDBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length)
PFNGLFLUSHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFLUSHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFLUSHPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLFRAMEBUFFERPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERPARAMETERIPROC) (GLenum target, GLenum pname, GLint para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERRENDERBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERRENDERBUFFERPROC) (GLenum target, GLenum attachment, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum renderbuffertarget,GLuint renderbuffer)
PFNGLFRAMEBUFFERTEXTURE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE1DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE2DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTURE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURE3DPROC) (GLenum target, GLenum attachment, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum textarget,GLuint texture,GLint level,GLint zoffset)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTURELAYERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTURELAYERPROC) (GLenum target, GLenum attachment, GLu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level,GLint layer)
PFNGLFRAMEBUFFERTEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRAMEBUFFERTEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRAMEBUFFERTEXTUREPROC) (GLenum target, GLenum attachment, GLuint t/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLuint texture,GLint level)
PFNGLFRONTFACEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLFRONTFACEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLFRONTFACEPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLGENBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENBUFFERSPROC) (GLsizei n, GLuint *buffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * buffers)
PFNGLGENERATEMIPMAPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENERATEMIPMAPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENERATEMIPMAPPROC) (GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target)
PFNGLGENFRAMEBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENFRAMEBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENFRAMEBUFFERSPROC) (GLsizei n, GLuint *framebuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * framebuffers)
PFNGLGENPROGRAMPIPELINESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENPROGRAMPIPELINESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENPROGRAMPIPELINESPROC) (GLsizei n, GLuint *pipelines);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * pipelines)
PFNGLGENQUERIESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENQUERIESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENQUERIESPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENRENDERBUFFERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENRENDERBUFFERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENRENDERBUFFERSPROC) (GLsizei n, GLuint *renderbuffers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * renderbuffers)
PFNGLGENSAMPLERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENSAMPLERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENSAMPLERSPROC) (GLsizei count, GLuint *samplers);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,GLuint * samplers)
PFNGLGENTEXTURESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTEXTURESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTEXTURESPROC) (GLsizei n, GLuint *textures);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * textures)
PFNGLGENTRANSFORMFEEDBACKSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENTRANSFORMFEEDBACKSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENTRANSFORMFEEDBACKSPROC) (GLsizei n, GLuint *ids);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * ids)
PFNGLGENVERTEXARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGENVERTEXARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGENVERTEXARRAYSPROC) (GLsizei n, GLuint *arrays);$/;"	t	typeref:typename:void (APIENTRYP)(GLsizei n,GLuint * arrays)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC) (GLuint program, GLuint bufferI/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint bufferIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEATTRIBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEATTRIBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEATTRIBPROC) (GLuint program, GLuint index, GLsizei bufSize/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINENAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINENAMEPROC) (GLuint program, GLenum shadertype, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC) (GLuint program, GLenum shadertyp/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLenum pname,GLint * values)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC) (GLuint program, GLenum shadert/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLuint index,GLsizei bufsize,GLsizei * length,GLchar * name)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKIVPROC) (GLuint program, GLuint uniformBlockIn/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC) (GLuint program, GLuint uniformBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformBlockName)
PFNGLGETACTIVEUNIFORMNAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMNAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMNAMEPROC) (GLuint program, GLuint uniformIndex, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformIndex,GLsizei bufSize,GLsizei * length,GLchar * uniformName)
PFNGLGETACTIVEUNIFORMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMPROC) (GLuint program, GLuint index, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLint * size,GLenum * type,GLchar * name)
PFNGLGETACTIVEUNIFORMSIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETACTIVEUNIFORMSIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETACTIVEUNIFORMSIVPROC) (GLuint program, GLsizei uniformCount, con/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLuint * uniformIndices,GLenum pname,GLint * params)
PFNGLGETATTACHEDSHADERSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * obj)
PFNGLGETATTACHEDSHADERSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETATTACHEDSHADERSPROC) (GLuint program, GLsizei maxCount, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei maxCount,GLsizei * count,GLuint * obj)
PFNGLGETATTRIBLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETATTRIBLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETATTRIBLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETBOOLEANI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANI_VPROC) (GLenum target, GLuint index, GLboolean *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLboolean * data)
PFNGLGETBOOLEANVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLboolean * params)
PFNGLGETBOOLEANVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBOOLEANVPROC) (GLenum pname, GLboolean *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLboolean * params)
PFNGLGETBUFFERPARAMETERI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERI64VPROC) (GLenum target, GLenum pname, GLint64 */;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint64 * params)
PFNGLGETBUFFERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETBUFFERPOINTERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLvoid ** params)
PFNGLGETBUFFERPOINTERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERPOINTERVPROC) (GLenum target, GLenum pname, GLvoid* *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLvoid ** params)
PFNGLGETBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,GLvoid * data)
PFNGLGETBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETBUFFERSUBDATAPROC) (GLenum target, GLintptr offset, GLsizeiptr s/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr size,GLvoid * data)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLvoid * img)
PFNGLGETCOMPRESSEDTEXIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETCOMPRESSEDTEXIMAGEPROC) (GLenum target, GLint level, GLvoid *img/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLvoid * img)
PFNGLGETDEBUGMESSAGELOGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGARBPROC) (GLuint count, GLsizei bufsize, GLenum/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *s/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDEBUGMESSAGELOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETDEBUGMESSAGELOGPROC) (GLuint count, GLsizei bufsize, GLenum *s/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint count,GLsizei bufsize,GLenum * sources,GLenum * types,GLuint * ids,GLenum * severities,GLsizei * lengths,GLchar * messageLog)
PFNGLGETDOUBLEI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEI_VPROC) (GLenum target, GLuint index, GLdouble *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLdouble * data)
PFNGLGETDOUBLEVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLGETDOUBLEVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETDOUBLEVPROC) (GLenum pname, GLdouble *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLdouble * params)
PFNGLGETERRORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETERRORPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETERRORPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETFLOATI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATI_VPROC) (GLenum target, GLuint index, GLfloat *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLfloat * data)
PFNGLGETFLOATVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETFLOATVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFLOATVPROC) (GLenum pname, GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat * params)
PFNGLGETFRAGDATAINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATAINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATAINDEXPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAGDATALOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETFRAGDATALOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC) (GLenum target, GLenum att/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum attachment,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETFRAMEBUFFERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETFRAMEBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETGRAPHICSRESETSTATUSARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLenum (APIENTRYP PFNGLGETGRAPHICSRESETSTATUSARBPROC) (void);$/;"	t	typeref:typename:GLenum (APIENTRYP)(void)
PFNGLGETINTEGER64I_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64I_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64I_VPROC) (GLenum target, GLuint index, GLint64 *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint64 * data)
PFNGLGETINTEGER64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * params)
PFNGLGETINTEGER64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGER64VPROC) (GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint64 * params)
PFNGLGETINTEGERI_VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERI_VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERI_VPROC) (GLenum target, GLuint index, GLint *data);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLint * data)
PFNGLGETINTEGERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETINTEGERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTEGERVPROC) (GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint * params)
PFNGLGETINTERNALFORMATI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATI64VPROC) (GLenum target, GLenum internalformat, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint64 * params)
PFNGLGETINTERNALFORMATIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETINTERNALFORMATIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETINTERNALFORMATIVPROC) (GLenum target, GLenum internalformat, GLe/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLenum pname,GLsizei bufSize,GLint * params)
PFNGLGETMULTISAMPLEFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETMULTISAMPLEFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETMULTISAMPLEFVPROC) (GLenum pname, GLuint index, GLfloat *val);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLuint index,GLfloat * val)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC) (GLuint framebuffer, GLenum /;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name, GLsizei /;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLsizei bufSize,GLint * stringlen,GLchar * string)
PFNGLGETNAMEDSTRINGIVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNAMEDSTRINGIVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNAMEDSTRINGIVARBPROC) (GLint namelen, const GLchar *name, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLint namelen,const GLchar * name,GLenum pname,GLint * params)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,GLvoid * img)
PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC) (GLenum target, GLint lod, GLsizei b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint lod,GLsizei bufSize,GLvoid * img)
PFNGLGETNTEXIMAGEARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,GLvoid * img)
PFNGLGETNTEXIMAGEARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNTEXIMAGEARBPROC) (GLenum target, GLint level, GLenum format, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLsizei bufSize,GLvoid * img)
PFNGLGETNUNIFORMDVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMDVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMDVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLdouble * params)
PFNGLGETNUNIFORMFVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMFVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMFVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLfloat * params)
PFNGLGETNUNIFORMIVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMIVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMIVARBPROC) (GLuint program, GLint location, GLsizei bufS/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLint * params)
PFNGLGETNUNIFORMUIVARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETNUNIFORMUIVARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETNUNIFORMUIVARBPROC) (GLuint program, GLint location, GLsizei buf/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei bufSize,GLuint * params)
PFNGLGETOBJECTLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei bufSiz/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPTRLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETOBJECTPTRLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETOBJECTPTRLABELPROC) (const void *ptr, GLsizei bufSize, GLsizei */;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei bufSize,GLsizei * length,GLchar * label)
PFNGLGETPOINTERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, GLvoid* *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLvoid ** params)
PFNGLGETPOINTERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPOINTERVPROC) (GLenum pname, GLvoid* *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLvoid ** params)
PFNGLGETPROGRAMBINARYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,GLvoid * binary)
PFNGLGETPROGRAMBINARYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMBINARYPROC) (GLuint program, GLsizei bufSize, GLsizei *le/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLenum * binaryFormat,GLvoid * binary)
PFNGLGETPROGRAMINFOLOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINFOLOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINFOLOGPROC) (GLuint program, GLsizei bufSize, GLsizei *l/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMINTERFACEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMINTERFACEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMINTERFACEIVPROC) (GLuint program, GLenum programInterface/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMIVPROC) (GLuint program, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint * params)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEINFOLOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEINFOLOGPROC) (GLuint pipeline, GLsizei bufSize, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETPROGRAMPIPELINEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMPIPELINEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMPIPELINEIVPROC) (GLuint pipeline, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLenum pname,GLint * params)
PFNGLGETPROGRAMRESOURCEINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETPROGRAMRESOURCEINDEXPROC) (GLuint program, GLenum programInter/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCEIVPROC) (GLuint program, GLenum programInterface,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei propCount,const GLenum * props,GLsizei bufSize,GLsizei * length,GLint * params)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC) (GLuint program, GLenum progr/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCELOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETPROGRAMRESOURCELOCATIONPROC) (GLuint program, GLenum programInt/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum programInterface,const GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMRESOURCENAMEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMRESOURCENAMEPROC) (GLuint program, GLenum programInterfac/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum programInterface,GLuint index,GLsizei bufSize,GLsizei * length,GLchar * name)
PFNGLGETPROGRAMSTAGEIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETPROGRAMSTAGEIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETPROGRAMSTAGEIVPROC) (GLuint program, GLenum shadertype, GLenum p/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum shadertype,GLenum pname,GLint * values)
PFNGLGETQUERYINDEXEDIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYINDEXEDIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYINDEXEDIVPROC) (GLenum target, GLuint index, GLenum pname, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLuint index,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYIVPROC) (GLenum target, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTI64VPROC) (GLuint id, GLenum pname, GLint64 *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint64 * params)
PFNGLGETQUERYOBJECTIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTIVPROC) (GLuint id, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLint * params)
PFNGLGETQUERYOBJECTUI64VPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUI64VPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUI64VPROC) (GLuint id, GLenum pname, GLuint64 *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint64 * params)
PFNGLGETQUERYOBJECTUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETQUERYOBJECTUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETQUERYOBJECTUIVPROC) (GLuint id, GLenum pname, GLuint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum pname,GLuint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETRENDERBUFFERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETRENDERBUFFERPARAMETERIVPROC) (GLenum target, GLenum pname, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, GLfloat */;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, GLint *p/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLuint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSAMPLERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, GLint *pa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint * params)
PFNGLGETSHADERINFOLOGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERINFOLOGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERINFOLOGPROC) (GLuint shader, GLsizei bufSize, GLsizei *len/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * infoLog)
PFNGLGETSHADERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERIVPROC) (GLuint shader, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLenum pname,GLint * params)
PFNGLGETSHADERPRECISIONFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERPRECISIONFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERPRECISIONFORMATPROC) (GLenum shadertype, GLenum precisiont/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLenum precisiontype,GLint * range,GLint * precision)
PFNGLGETSHADERSOURCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSHADERSOURCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSHADERSOURCEPROC) (GLuint shader, GLsizei bufSize, GLsizei *leng/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei bufSize,GLsizei * length,GLchar * source)
PFNGLGETSTRINGIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSTRINGIPROC	lib/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGIPROC) (GLenum name, GLuint index);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name,GLuint index)
PFNGLGETSTRINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name)
PFNGLGETSTRINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef const GLubyte * (APIENTRYP PFNGLGETSTRINGPROC) (GLenum name);$/;"	t	typeref:typename:const GLubyte * (APIENTRYP)(GLenum name)
PFNGLGETSUBROUTINEINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETSUBROUTINEINDEXPROC) (GLuint program, GLenum shadertype, const/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC) (GLuint program, GLenum shaderty/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,GLenum shadertype,const GLchar * name)
PFNGLGETSYNCIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETSYNCIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETSYNCIVPROC) (GLsync sync, GLenum pname, GLsizei bufSize, GLsizei/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLenum pname,GLsizei bufSize,GLsizei * length,GLint * values)
PFNGLGETTEXIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLvoid * pixels)
PFNGLGETTEXIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXIMAGEPROC) (GLenum target, GLint level, GLenum format, GLenum/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum format,GLenum type,GLvoid * pixels)
PFNGLGETTEXLEVELPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXLEVELPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERFVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLfloat * params)
PFNGLGETTEXLEVELPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXLEVELPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXLEVELPARAMETERIVPROC) (GLenum target, GLint level, GLenum pna/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERFVPROC) (GLenum target, GLenum pname, GLfloat *param/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat * params)
PFNGLGETTEXPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, GLint *params/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, GLuint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLuint * params)
PFNGLGETTEXPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTEXPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTEXPARAMETERIVPROC) (GLenum target, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint * params)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETTRANSFORMFEEDBACKVARYINGPROC) (GLuint program, GLuint index, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint index,GLsizei bufSize,GLsizei * length,GLsizei * size,GLenum * type,GLchar * name)
PFNGLGETUNIFORMBLOCKINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMBLOCKINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLuint (APIENTRYP PFNGLGETUNIFORMBLOCKINDEXPROC) (GLuint program, const GLchar *uniformB/;"	t	typeref:typename:GLuint (APIENTRYP)(GLuint program,const GLchar * uniformBlockName)
PFNGLGETUNIFORMDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMDVPROC) (GLuint program, GLint location, GLdouble *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble * params)
PFNGLGETUNIFORMFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMFVPROC) (GLuint program, GLint location, GLfloat *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat * params)
PFNGLGETUNIFORMINDICESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMINDICESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMINDICESPROC) (GLuint program, GLsizei uniformCount, const/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei uniformCount,const GLchar * const * uniformNames,GLuint * uniformIndices)
PFNGLGETUNIFORMIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMIVPROC) (GLuint program, GLint location, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint * params)
PFNGLGETUNIFORMLOCATIONPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMLOCATIONPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLint (APIENTRYP PFNGLGETUNIFORMLOCATIONPROC) (GLuint program, const GLchar *name);$/;"	t	typeref:typename:GLint (APIENTRYP)(GLuint program,const GLchar * name)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMSUBROUTINEUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMSUBROUTINEUIVPROC) (GLenum shadertype, GLint location, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETUNIFORMUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETUNIFORMUIVPROC) (GLuint program, GLint location, GLuint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint * params)
PFNGLGETVERTEXATTRIBDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBDVPROC) (GLuint index, GLenum pname, GLdouble *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBFVPROC) (GLuint index, GLenum pname, GLfloat *params/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLfloat * params)
PFNGLGETVERTEXATTRIBIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIIVPROC) (GLuint index, GLenum pname, GLint *params)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIUIVPROC) (GLuint index, GLenum pname, GLuint *param/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLuint * params)
PFNGLGETVERTEXATTRIBIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBIVPROC) (GLuint index, GLenum pname, GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLint * params)
PFNGLGETVERTEXATTRIBLDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBLDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBLDVPROC) (GLuint index, GLenum pname, GLdouble *para/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLdouble * params)
PFNGLGETVERTEXATTRIBPOINTERVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* */;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLvoid ** pointer)
PFNGLGETVERTEXATTRIBPOINTERVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLGETVERTEXATTRIBPOINTERVPROC) (GLuint index, GLenum pname, GLvoid* */;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum pname,GLvoid ** pointer)
PFNGLHINTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLHINTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLHINTPROC) (GLenum target, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum mode)
PFNGLINVALIDATEBUFFERDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERDATAPROC) (GLuint buffer);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer)
PFNGLINVALIDATEBUFFERSUBDATAPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEBUFFERSUBDATAPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEBUFFERSUBDATAPROC) (GLuint buffer, GLintptr offset, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint buffer,GLintptr offset,GLsizeiptr length)
PFNGLINVALIDATEFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATEFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATEFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachments, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATESUBFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATESUBFRAMEBUFFERPROC) (GLenum target, GLsizei numAttachment/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei numAttachments,const GLenum * attachments,GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLINVALIDATETEXIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXIMAGEPROC) (GLuint texture, GLint level);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level)
PFNGLINVALIDATETEXSUBIMAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLINVALIDATETEXSUBIMAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLINVALIDATETEXSUBIMAGEPROC) (GLuint texture, GLint level, GLint xoff/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth)
PFNGLISBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISBUFFERPROC) (GLuint buffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint buffer)
PFNGLISENABLEDIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDIPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDIPROC) (GLenum target, GLuint index);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target,GLuint index)
PFNGLISENABLEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum cap)
PFNGLISENABLEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISENABLEDPROC) (GLenum cap);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum cap)
PFNGLISFRAMEBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISFRAMEBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISFRAMEBUFFERPROC) (GLuint framebuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint framebuffer)
PFNGLISNAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISNAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISNAMEDSTRINGARBPROC) (GLint namelen, const GLchar *name);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLint namelen,const GLchar * name)
PFNGLISPROGRAMPIPELINEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPIPELINEPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint pipeline)
PFNGLISPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint program)
PFNGLISQUERYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISQUERYPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISQUERYPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISRENDERBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISRENDERBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISRENDERBUFFERPROC) (GLuint renderbuffer);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint renderbuffer)
PFNGLISSAMPLERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSAMPLERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSAMPLERPROC) (GLuint sampler);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint sampler)
PFNGLISSHADERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSHADERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSHADERPROC) (GLuint shader);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint shader)
PFNGLISSYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISSYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISSYNCPROC) (GLsync sync);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLsync sync)
PFNGLISTEXTUREPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTEXTUREPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTEXTUREPROC) (GLuint texture);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint texture)
PFNGLISTRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISTRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISTRANSFORMFEEDBACKPROC) (GLuint id);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint id)
PFNGLISVERTEXARRAYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLISVERTEXARRAYPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLISVERTEXARRAYPROC) (GLuint array);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLuint array)
PFNGLLINEWIDTHPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat width)
PFNGLLINEWIDTHPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINEWIDTHPROC) (GLfloat width);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat width)
PFNGLLINKPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLINKPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLINKPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLLOGICOPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum opcode)
PFNGLLOGICOPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLLOGICOPPROC) (GLenum opcode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum opcode)
PFNGLMAPBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:GLvoid * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERPROC) (GLenum target, GLenum access);$/;"	t	typeref:typename:GLvoid * (APIENTRYP)(GLenum target,GLenum access)
PFNGLMAPBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr /;"	t	typeref:typename:GLvoid * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMAPBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLvoid* (APIENTRYP PFNGLMAPBUFFERRANGEPROC) (GLenum target, GLintptr offset, GLsizeiptr /;"	t	typeref:typename:GLvoid * (APIENTRYP)(GLenum target,GLintptr offset,GLsizeiptr length,GLbitfield access)
PFNGLMEMORYBARRIERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMEMORYBARRIERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMEMORYBARRIERPROC) (GLbitfield barriers);$/;"	t	typeref:typename:void (APIENTRYP)(GLbitfield barriers)
PFNGLMINSAMPLESHADINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGARBPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMINSAMPLESHADINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMINSAMPLESHADINGPROC) (GLfloat value);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSINDIRECTPROC) (GLenum mode, const void *indirect, GL/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWARRAYSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWARRAYSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWARRAYSPROC) (GLenum mode, const GLint *first, const GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLint * first,const GLsizei * count,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC) (GLenum mode, const GLsizei *count/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid * const * indices,GLsizei drawcount,const GLint * basevertex)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSINDIRECTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSINDIRECTPROC) (GLenum mode, GLenum type, const voi/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,GLenum type,const void * indirect,GLsizei drawcount,GLsizei stride)
PFNGLMULTIDRAWELEMENTSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid * const * indices,GLsizei drawcount)
PFNGLMULTIDRAWELEMENTSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTIDRAWELEMENTSPROC) (GLenum mode, const GLsizei *count, GLenum t/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode,const GLsizei * count,GLenum type,const GLvoid * const * indices,GLsizei drawcount)
PFNGLMULTITEXCOORDP1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP1UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP2UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP3UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIPROC) (GLenum texture, GLenum type, GLuint coords)/;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,GLuint coords)
PFNGLMULTITEXCOORDP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLMULTITEXCOORDP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLMULTITEXCOORDP4UIVPROC) (GLenum texture, GLenum type, const GLuint /;"	t	typeref:typename:void (APIENTRYP)(GLenum texture,GLenum type,const GLuint * coords)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC) (GLuint framebuffer, GLenum pnam/;"	t	typeref:typename:void (APIENTRYP)(GLuint framebuffer,GLenum pname,GLint param)
PFNGLNAMEDSTRINGARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNAMEDSTRINGARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNAMEDSTRINGARBPROC) (GLenum type, GLint namelen, const GLchar *name/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLint namelen,const GLchar * name,GLint stringlen,const GLchar * string)
PFNGLNORMALP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLNORMALP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLNORMALP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLNORMALP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLNORMALP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLOBJECTLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTLABELPROC) (GLenum identifier, GLuint name, GLsizei length, c/;"	t	typeref:typename:void (APIENTRYP)(GLenum identifier,GLuint name,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLOBJECTPTRLABELPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLOBJECTPTRLABELPROC) (const void *ptr, GLsizei length, const GLchar /;"	t	typeref:typename:void (APIENTRYP)(const void * ptr,GLsizei length,const GLchar * label)
PFNGLPATCHPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERFVPROC) (GLenum pname, const GLfloat *values);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * values)
PFNGLPATCHPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPATCHPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPATCHPARAMETERIPROC) (GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint value)
PFNGLPAUSETRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPAUSETRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPAUSETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPIXELSTOREFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELSTOREFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPIXELSTOREIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPIXELSTOREIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPIXELSTOREIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFPROC) (GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLfloat param)
PFNGLPOINTPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERFVPROC) (GLenum pname, const GLfloat *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLfloat * params)
PFNGLPOINTPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIPROC) (GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,GLint param)
PFNGLPOINTPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTPARAMETERIVPROC) (GLenum pname, const GLint *params);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum pname,const GLint * params)
PFNGLPOINTSIZEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat size)
PFNGLPOINTSIZEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOINTSIZEPROC) (GLfloat size);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat size)
PFNGLPOLYGONMODEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLPOLYGONMODEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONMODEPROC) (GLenum face, GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum mode)
PFNGLPOLYGONOFFSETPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPOLYGONOFFSETPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOLYGONOFFSETPROC) (GLfloat factor, GLfloat units);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat factor,GLfloat units)
PFNGLPOPDEBUGGROUPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPOPDEBUGGROUPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPOPDEBUGGROUPPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLPRIMITIVERESTARTINDEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPRIMITIVERESTARTINDEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPRIMITIVERESTARTINDEXPROC) (GLuint index);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index)
PFNGLPROGRAMBINARYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvo/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const GLvoid * binary,GLsizei length)
PFNGLPROGRAMBINARYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMBINARYPROC) (GLuint program, GLenum binaryFormat, const GLvo/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum binaryFormat,const GLvoid * binary,GLsizei length)
PFNGLPROGRAMPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMPARAMETERIPROC) (GLuint program, GLenum pname, GLint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLenum pname,GLint value)
PFNGLPROGRAMUNIFORM1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DPROC) (GLuint program, GLint location, GLdouble v0)/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0)
PFNGLPROGRAMUNIFORM1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM1FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FPROC) (GLuint program, GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0)
PFNGLPROGRAMUNIFORM1FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM1IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IPROC) (GLuint program, GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0)
PFNGLPROGRAMUNIFORM1IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIPROC) (GLuint program, GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0)
PFNGLPROGRAMUNIFORM1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM1UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1)
PFNGLPROGRAMUNIFORM2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM2FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1)
PFNGLPROGRAMUNIFORM2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM2IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1)
PFNGLPROGRAMUNIFORM2IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1)
PFNGLPROGRAMUNIFORM2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM2UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2)
PFNGLPROGRAMUNIFORM3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM3FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLPROGRAMUNIFORM3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM3IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2)
PFNGLPROGRAMUNIFORM3IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLPROGRAMUNIFORM3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM3UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DPROC) (GLuint program, GLint location, GLdouble v0,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLdouble v0,GLdouble v1,GLdouble v2,GLdouble v3)
PFNGLPROGRAMUNIFORM4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4DVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLdouble * value)
PFNGLPROGRAMUNIFORM4FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FPROC) (GLuint program, GLint location, GLfloat v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLPROGRAMUNIFORM4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4FVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLfloat * value)
PFNGLPROGRAMUNIFORM4IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IPROC) (GLuint program, GLint location, GLint v0, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLPROGRAMUNIFORM4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4IVPROC) (GLuint program, GLint location, GLsizei cou/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLint * value)
PFNGLPROGRAMUNIFORM4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIPROC) (GLuint program, GLint location, GLuint v0, /;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLPROGRAMUNIFORM4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORM4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORM4UIVPROC) (GLuint program, GLint location, GLsizei co/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,const GLuint * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4DVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4FVPROC) (GLuint program, GLint location, GLsiz/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC) (GLuint program, GLint location, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLPROVOKINGVERTEXPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPROVOKINGVERTEXPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPROVOKINGVERTEXPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLPUSHDEBUGGROUPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLPUSHDEBUGGROUPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLPUSHDEBUGGROUPPROC) (GLenum source, GLuint id, GLsizei length, cons/;"	t	typeref:typename:void (APIENTRYP)(GLenum source,GLuint id,GLsizei length,const GLchar * message)
PFNGLQUERYCOUNTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLQUERYCOUNTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLQUERYCOUNTERPROC) (GLuint id, GLenum target);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint id,GLenum target)
PFNGLREADBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLREADBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADBUFFERPROC) (GLenum mode);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum mode)
PFNGLREADNPIXELSARBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,GLvoid * data)
PFNGLREADNPIXELSARBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADNPIXELSARBPROC) (GLint x, GLint y, GLsizei width, GLsizei heigh/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLsizei bufSize,GLvoid * data)
PFNGLREADPIXELSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, G/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid * pixels)
PFNGLREADPIXELSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLREADPIXELSPROC) (GLint x, GLint y, GLsizei width, GLsizei height, G/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height,GLenum format,GLenum type,GLvoid * pixels)
PFNGLRELEASESHADERCOMPILERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRELEASESHADERCOMPILERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRELEASESHADERCOMPILERPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC) (GLenum target, GLsizei samples/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRENDERBUFFERSTORAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRENDERBUFFERSTORAGEPROC) (GLenum target, GLenum internalformat, GLs/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLRESUMETRANSFORMFEEDBACKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLRESUMETRANSFORMFEEDBACKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLRESUMETRANSFORMFEEDBACKPROC) (void);$/;"	t	typeref:typename:void (APIENTRYP)(void)
PFNGLSAMPLECOVERAGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLECOVERAGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLECOVERAGEPROC) (GLfloat value, GLboolean invert);$/;"	t	typeref:typename:void (APIENTRYP)(GLfloat value,GLboolean invert)
PFNGLSAMPLEMASKIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLbitfield mask)
PFNGLSAMPLEMASKIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLEMASKIPROC) (GLuint index, GLbitfield mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLbitfield mask)
PFNGLSAMPLERPARAMETERFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFPROC) (GLuint sampler, GLenum pname, GLfloat param/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLfloat param)
PFNGLSAMPLERPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERFVPROC) (GLuint sampler, GLenum pname, const GLfloa/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLfloat * param)
PFNGLSAMPLERPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIIVPROC) (GLuint sampler, GLenum pname, const GLint/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIPROC) (GLuint sampler, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,GLint param)
PFNGLSAMPLERPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIUIVPROC) (GLuint sampler, GLenum pname, const GLui/;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLuint * param)
PFNGLSAMPLERPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSAMPLERPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSAMPLERPARAMETERIVPROC) (GLuint sampler, GLenum pname, const GLint /;"	t	typeref:typename:void (APIENTRYP)(GLuint sampler,GLenum pname,const GLint * param)
PFNGLSCISSORARRAYVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORARRAYVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORARRAYVPROC) (GLuint first, GLsizei count, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLint * v)
PFNGLSCISSORINDEXEDPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDPROC) (GLuint index, GLint left, GLint bottom, GLsize/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint left,GLint bottom,GLsizei width,GLsizei height)
PFNGLSCISSORINDEXEDVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSCISSORINDEXEDVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORINDEXEDVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLSCISSORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLSCISSORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSCISSORPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLSECONDARYCOLORP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIPROC) (GLenum type, GLuint color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint color)
PFNGLSECONDARYCOLORP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLSECONDARYCOLORP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSECONDARYCOLORP3UIVPROC) (GLenum type, const GLuint *color);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * color)
PFNGLSHADERBINARYPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const GLvoid * binary,GLsizei length)
PFNGLSHADERBINARYPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERBINARYPROC) (GLsizei count, const GLuint *shaders, GLenum bin/;"	t	typeref:typename:void (APIENTRYP)(GLsizei count,const GLuint * shaders,GLenum binaryformat,const GLvoid * binary,GLsizei length)
PFNGLSHADERSOURCEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSOURCEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSOURCEPROC) (GLuint shader, GLsizei count, const GLchar* cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint shader,GLsizei count,const GLchar * const * string,const GLint * length)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSHADERSTORAGEBLOCKBINDINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSHADERSTORAGEBLOCKBINDINGPROC) (GLuint program, GLuint storageBlock/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint storageBlockIndex,GLuint storageBlockBinding)
PFNGLSTENCILFUNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILFUNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCPROC) (GLenum func, GLint ref, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILFUNCSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILFUNCSEPARATEPROC) (GLenum face, GLenum func, GLint ref, GLui/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum func,GLint ref,GLuint mask)
PFNGLSTENCILMASKPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLSTENCILMASKPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKPROC) (GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILMASKSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILMASKSEPARATEPROC) (GLenum face, GLuint mask);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLuint mask)
PFNGLSTENCILOPPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum fail,GLenum zfail,GLenum zpass)
PFNGLSTENCILOPPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPPROC) (GLenum fail, GLenum zfail, GLenum zpass);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum fail,GLenum zfail,GLenum zpass)
PFNGLSTENCILOPSEPARATEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLSTENCILOPSEPARATEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLSTENCILOPSEPARATEPROC) (GLenum face, GLenum sfail, GLenum dpfail, G/;"	t	typeref:typename:void (APIENTRYP)(GLenum face,GLenum sfail,GLenum dpfail,GLenum dppass)
PFNGLTEXBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERPROC) (GLenum target, GLenum internalformat, GLuint buffer/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer)
PFNGLTEXBUFFERRANGEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXBUFFERRANGEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXBUFFERRANGEPROC) (GLenum target, GLenum internalformat, GLuint b/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXCOORDP1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP1UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP2UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP3UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIPROC) (GLenum type, GLuint coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint coords)
PFNGLTEXCOORDP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXCOORDP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXCOORDP4UIVPROC) (GLenum type, const GLuint *coords);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * coords)
PFNGLTEXIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE1DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint i/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLint internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE2DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint i/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLint internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE2DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint i/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLint i/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXIMAGE3DPROC) (GLenum target, GLint level, GLint internalformat, /;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint internalformat,GLsizei width,GLsizei height,GLsizei depth,GLint border,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXPARAMETERFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLTEXPARAMETERFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFPROC) (GLenum target, GLenum pname, GLfloat param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLfloat param)
PFNGLTEXPARAMETERFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXPARAMETERFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERFVPROC) (GLenum target, GLenum pname, const GLfloat *pa/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLfloat * params)
PFNGLTEXPARAMETERIIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIIVPROC) (GLenum target, GLenum pname, const GLint *par/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLTEXPARAMETERIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIPROC) (GLenum target, GLenum pname, GLint param);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,GLint param)
PFNGLTEXPARAMETERIUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIUIVPROC) (GLenum target, GLenum pname, const GLuint *p/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLuint * params)
PFNGLTEXPARAMETERIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXPARAMETERIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXPARAMETERIVPROC) (GLenum target, GLenum pname, const GLint *para/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLenum pname,const GLint * params)
PFNGLTEXSTORAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE1DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE2DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DMULTISAMPLEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DMULTISAMPLEPROC) (GLenum target, GLsizei samples, GLenu/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXSTORAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSTORAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSTORAGE3DPROC) (GLenum target, GLsizei levels, GLenum internalfo/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXSUBIMAGE1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE1DPROC) (GLenum target, GLint level, GLint xoffset, GLsi/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE2DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLsizei width,GLsizei height,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXSUBIMAGE3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXSUBIMAGE3DPROC) (GLenum target, GLint level, GLint xoffset, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLenum target,GLint level,GLint xoffset,GLint yoffset,GLint zoffset,GLsizei width,GLsizei height,GLsizei depth,GLenum format,GLenum type,const GLvoid * pixels)
PFNGLTEXTUREBUFFERRANGEEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTUREBUFFERRANGEEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREBUFFERRANGEEXTPROC) (GLuint texture, GLenum target, GLenum i/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLenum internalformat,GLuint buffer,GLintptr offset,GLsizeiptr size)
PFNGLTEXTURESTORAGE1DEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE1DEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE1DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width)
PFNGLTEXTURESTORAGE2DEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DEXTPROC) (GLuint texture, GLenum target, GLsizei le/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei levels,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC) (GLuint texture, GLenum target,/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLsizei samples,GLenum internalformat,GLsizei width,GLsizei height,GLsizei depth,GLboolean fixedsamplelocations)
PFNGLTEXTUREVIEWPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTEXTUREVIEWPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTEXTUREVIEWPROC) (GLuint texture, GLenum target, GLuint origtexture/;"	t	typeref:typename:void (APIENTRYP)(GLuint texture,GLenum target,GLuint origtexture,GLenum internalformat,GLuint minlevel,GLuint numlevels,GLuint minlayer,GLuint numlayers)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLTRANSFORMFEEDBACKVARYINGSPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLTRANSFORMFEEDBACKVARYINGSPROC) (GLuint program, GLsizei count, cons/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLsizei count,const GLchar * const * varyings,GLenum bufferMode)
PFNGLUNIFORM1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DPROC) (GLint location, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x)
PFNGLUNIFORM1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM1FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FPROC) (GLint location, GLfloat v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0)
PFNGLUNIFORM1FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM1IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IPROC) (GLint location, GLint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0)
PFNGLUNIFORM1IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIPROC) (GLint location, GLuint v0);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0)
PFNGLUNIFORM1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM1UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DPROC) (GLint location, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y)
PFNGLUNIFORM2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM2FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FPROC) (GLint location, GLfloat v0, GLfloat v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1)
PFNGLUNIFORM2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM2IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IPROC) (GLint location, GLint v0, GLint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1)
PFNGLUNIFORM2IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIPROC) (GLint location, GLuint v0, GLuint v1);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1)
PFNGLUNIFORM2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM2UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z)
PFNGLUNIFORM3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM3FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2)
PFNGLUNIFORM3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM3IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IPROC) (GLint location, GLint v0, GLint v1, GLint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2)
PFNGLUNIFORM3IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2);$/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2)
PFNGLUNIFORM3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM3UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DPROC) (GLint location, GLdouble x, GLdouble y, GLdouble z,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLUNIFORM4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4DVPROC) (GLint location, GLsizei count, const GLdouble *val/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLdouble * value)
PFNGLUNIFORM4FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FPROC) (GLint location, GLfloat v0, GLfloat v1, GLfloat v2,/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLfloat v0,GLfloat v1,GLfloat v2,GLfloat v3)
PFNGLUNIFORM4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4FVPROC) (GLint location, GLsizei count, const GLfloat *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLfloat * value)
PFNGLUNIFORM4IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IPROC) (GLint location, GLint v0, GLint v1, GLint v2, GLint/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLint v0,GLint v1,GLint v2,GLint v3)
PFNGLUNIFORM4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4IVPROC) (GLint location, GLsizei count, const GLint *value)/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLint * value)
PFNGLUNIFORM4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIPROC) (GLint location, GLuint v0, GLuint v1, GLuint v2, G/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLuint v0,GLuint v1,GLuint v2,GLuint v3)
PFNGLUNIFORM4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORM4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORM4UIVPROC) (GLint location, GLsizei count, const GLuint *valu/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,const GLuint * value)
PFNGLUNIFORMBLOCKBINDINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMBLOCKBINDINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMBLOCKBINDINGPROC) (GLuint program, GLuint uniformBlockIndex,/;"	t	typeref:typename:void (APIENTRYP)(GLuint program,GLuint uniformBlockIndex,GLuint uniformBlockBinding)
PFNGLUNIFORMMATRIX2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX2X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX2X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX2X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX3X4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX3X4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX3X4FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4DVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4FVPROC) (GLint location, GLsizei count, GLboolean tra/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X2FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3DVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLdouble * value)
PFNGLUNIFORMMATRIX4X3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMMATRIX4X3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMMATRIX4X3FVPROC) (GLint location, GLsizei count, GLboolean t/;"	t	typeref:typename:void (APIENTRYP)(GLint location,GLsizei count,GLboolean transpose,const GLfloat * value)
PFNGLUNIFORMSUBROUTINESUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNIFORMSUBROUTINESUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUNIFORMSUBROUTINESUIVPROC) (GLenum shadertype, GLsizei count, const/;"	t	typeref:typename:void (APIENTRYP)(GLenum shadertype,GLsizei count,const GLuint * indices)
PFNGLUNMAPBUFFERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUNMAPBUFFERPROC	lib/gl3w/GL/glcorearb.h	/^typedef GLboolean (APIENTRYP PFNGLUNMAPBUFFERPROC) (GLenum target);$/;"	t	typeref:typename:GLboolean (APIENTRYP)(GLenum target)
PFNGLUSEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLUSEPROGRAMSTAGESPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLUSEPROGRAMSTAGESPROC) (GLuint pipeline, GLbitfield stages, GLuint p/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline,GLbitfield stages,GLuint program)
PFNGLVALIDATEPROGRAMPIPELINEPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPIPELINEPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPIPELINEPROC) (GLuint pipeline);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint pipeline)
PFNGLVALIDATEPROGRAMPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVALIDATEPROGRAMPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVALIDATEPROGRAMPROC) (GLuint program);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint program)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC) (GLuint vaobj, GLuint bindingin/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint buffer,GLintptr offset,GLsizei stride)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC) (GLuint vaobj, GLuint attribi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC) (GLuint vaobj, GLuint attrib/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC) (GLuint vaobj, GLuint bindi/;"	t	typeref:typename:void (APIENTRYP)(GLuint vaobj,GLuint bindingindex,GLuint divisor)
PFNGLVERTEXATTRIB1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIB1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB1FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FPROC) (GLuint index, GLfloat x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x)
PFNGLVERTEXATTRIB1FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB1SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SPROC) (GLuint index, GLshort x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x)
PFNGLVERTEXATTRIB1SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB1SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB1SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIB2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB2FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FPROC) (GLuint index, GLfloat x, GLfloat y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y)
PFNGLVERTEXATTRIB2FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB2SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SPROC) (GLuint index, GLshort x, GLshort y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y)
PFNGLVERTEXATTRIB2SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB2SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB2SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIB3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB3FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z)
PFNGLVERTEXATTRIB3FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB3SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SPROC) (GLuint index, GLshort x, GLshort y, GLshort z)/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z)
PFNGLVERTEXATTRIB3SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB3SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB3SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4BVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4BVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdouble/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIB4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIB4FPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat z,GLfloat w)
PFNGLVERTEXATTRIB4FVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4FVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4FVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVERTEXATTRIB4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NBVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIB4NIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NIVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIB4NSVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NSVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NSVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4NUBPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBPROC) (GLuint index, GLubyte x, GLubyte y, GLubyte /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLubyte x,GLubyte y,GLubyte z,GLubyte w)
PFNGLVERTEXATTRIB4NUBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4NUIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4NUSVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4NUSVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4NUSVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4SPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SPROC) (GLuint index, GLshort x, GLshort y, GLshort z,/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLshort x,GLshort y,GLshort z,GLshort w)
PFNGLVERTEXATTRIB4SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIB4UBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIB4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIB4USVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIB4USVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIB4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBBINDINGPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBBINDINGPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBBINDINGPROC) (GLuint attribindex, GLuint bindingindex);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLuint bindingindex)
PFNGLVERTEXATTRIBDIVISORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBDIVISORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBDIVISORPROC) (GLuint index, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint divisor)
PFNGLVERTEXATTRIBFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBFORMATPROC) (GLuint attribindex, GLint size, GLenum typ/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLboolean normalized,GLuint relativeoffset)
PFNGLVERTEXATTRIBI1IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IPROC) (GLuint index, GLint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x)
PFNGLVERTEXATTRIBI1IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIPROC) (GLuint index, GLuint x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x)
PFNGLVERTEXATTRIBI1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI1UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IPROC) (GLuint index, GLint x, GLint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y)
PFNGLVERTEXATTRIBI2IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIPROC) (GLuint index, GLuint x, GLuint y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y)
PFNGLVERTEXATTRIBI2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI2UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IPROC) (GLuint index, GLint x, GLint y, GLint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z)
PFNGLVERTEXATTRIBI3IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z)
PFNGLVERTEXATTRIBI3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI3UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4BVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4BVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4BVPROC) (GLuint index, const GLbyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLbyte * v)
PFNGLVERTEXATTRIBI4IPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IPROC) (GLuint index, GLint x, GLint y, GLint z, GLin/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint x,GLint y,GLint z,GLint w)
PFNGLVERTEXATTRIBI4IVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4IVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4IVPROC) (GLuint index, const GLint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLint * v)
PFNGLVERTEXATTRIBI4SVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4SVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4SVPROC) (GLuint index, const GLshort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLshort * v)
PFNGLVERTEXATTRIBI4UBVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UBVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UBVPROC) (GLuint index, const GLubyte *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLubyte * v)
PFNGLVERTEXATTRIBI4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIPROC) (GLuint index, GLuint x, GLuint y, GLuint z, /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLuint x,GLuint y,GLuint z,GLuint w)
PFNGLVERTEXATTRIBI4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4UIVPROC) (GLuint index, const GLuint *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLuint * v)
PFNGLVERTEXATTRIBI4USVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBI4USVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBI4USVPROC) (GLuint index, const GLushort *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLushort * v)
PFNGLVERTEXATTRIBIFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBIPOINTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBIPOINTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBIPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBL1DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DPROC) (GLuint index, GLdouble x);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x)
PFNGLVERTEXATTRIBL1DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL1DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL1DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DPROC) (GLuint index, GLdouble x, GLdouble y);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y)
PFNGLVERTEXATTRIBL2DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL2DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL2DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z)
PFNGLVERTEXATTRIBL3DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL3DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL3DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DPROC) (GLuint index, GLdouble x, GLdouble y, GLdoubl/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLdouble x,GLdouble y,GLdouble z,GLdouble w)
PFNGLVERTEXATTRIBL4DVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBL4DVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBL4DVPROC) (GLuint index, const GLdouble *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLdouble * v)
PFNGLVERTEXATTRIBLFORMATPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLFORMATPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLFORMATPROC) (GLuint attribindex, GLint size, GLenum ty/;"	t	typeref:typename:void (APIENTRYP)(GLuint attribindex,GLint size,GLenum type,GLuint relativeoffset)
PFNGLVERTEXATTRIBLPOINTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBLPOINTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBLPOINTERPROC) (GLuint index, GLint size, GLenum type, G/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBP1UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP1UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP1UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP1UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP2UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP3UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIPROC) (GLuint index, GLenum type, GLboolean normali/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,GLuint value)
PFNGLVERTEXATTRIBP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBP4UIVPROC) (GLuint index, GLenum type, GLboolean normal/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLenum type,GLboolean normalized,const GLuint * value)
PFNGLVERTEXATTRIBPOINTERPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXATTRIBPOINTERPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXATTRIBPOINTERPROC) (GLuint index, GLint size, GLenum type, GL/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLint size,GLenum type,GLboolean normalized,GLsizei stride,const GLvoid * pointer)
PFNGLVERTEXBINDINGDIVISORPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXBINDINGDIVISORPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXBINDINGDIVISORPROC) (GLuint bindingindex, GLuint divisor);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint bindingindex,GLuint divisor)
PFNGLVERTEXP2UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP2UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP2UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP2UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP2UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP3UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP3UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP3UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP3UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP4UIPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIPROC) (GLenum type, GLuint value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,GLuint value)
PFNGLVERTEXP4UIVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVERTEXP4UIVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVERTEXP4UIVPROC) (GLenum type, const GLuint *value);$/;"	t	typeref:typename:void (APIENTRYP)(GLenum type,const GLuint * value)
PFNGLVIEWPORTARRAYVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTARRAYVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTARRAYVPROC) (GLuint first, GLsizei count, const GLfloat *v)/;"	t	typeref:typename:void (APIENTRYP)(GLuint first,GLsizei count,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFPROC) (GLuint index, GLfloat x, GLfloat y, GLfloat /;"	t	typeref:typename:void (APIENTRYP)(GLuint index,GLfloat x,GLfloat y,GLfloat w,GLfloat h)
PFNGLVIEWPORTINDEXEDFVPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVIEWPORTINDEXEDFVPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTINDEXEDFVPROC) (GLuint index, const GLfloat *v);$/;"	t	typeref:typename:void (APIENTRYP)(GLuint index,const GLfloat * v)
PFNGLVIEWPORTPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLVIEWPORTPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLVIEWPORTPROC) (GLint x, GLint y, GLsizei width, GLsizei height);$/;"	t	typeref:typename:void (APIENTRYP)(GLint x,GLint y,GLsizei width,GLsizei height)
PFNGLWAITSYNCPROC	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PFNGLWAITSYNCPROC	lib/gl3w/GL/glcorearb.h	/^typedef void (APIENTRYP PFNGLWAITSYNCPROC) (GLsync sync, GLbitfield flags, GLuint64 timeout);$/;"	t	typeref:typename:void (APIENTRYP)(GLsync sync,GLbitfield flags,GLuint64 timeout)
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define PLATFORM_ID$/;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID /;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^# define PLATFORM_ID$/;"	d	file:
POINT_SIZE	src/Shape.c	/^    #define POINT_SIZE /;"	d	file:
PROGS	lib/klib/test/Makefile	/^PROGS=kbtree_test khash_keith khash_keith2 khash_test klist_test kseq_test kseq_bench \\$/;"	m
PS	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10PixelShader*          PS;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10PixelShader *	file:
PS	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11PixelShader*          PS;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11PixelShader *	file:
PSInstances	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11ClassInstance*        PSInstances[256], *VSInstances[256];   \/\/ 256 is max accor/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11ClassInstance * [256]	file:
PSInstancesCount	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        PSInstancesCount, VSInstancesCount;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
PSSampler	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10SamplerState*         PSSampler;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10SamplerState *	file:
PSSampler	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11SamplerState*         PSSampler;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11SamplerState *	file:
PSShaderResource	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10ShaderResourceView*   PSShaderResource;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10ShaderResourceView *	file:
PSShaderResource	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11ShaderResourceView*   PSShaderResource;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11ShaderResourceView *	file:
Pair	lib/cimgui/imgui/imgui.h	/^        Pair(ImGuiID _key, float _val_f) { key = _key; val_f = _val_f; }$/;"	f	struct:ImGuiStorage::Pair
Pair	lib/cimgui/imgui/imgui.h	/^        Pair(ImGuiID _key, int _val_i)   { key = _key; val_i = _val_i; }$/;"	f	struct:ImGuiStorage::Pair
Pair	lib/cimgui/imgui/imgui.h	/^        Pair(ImGuiID _key, void* _val_p) { key = _key; val_p = _val_p; }$/;"	f	struct:ImGuiStorage::Pair
Pair	lib/cimgui/imgui/imgui.h	/^    struct Pair$/;"	s	struct:ImGuiStorage
PairCompareByID	lib/cimgui/imgui/imgui.cpp	/^        static int IMGUI_CDECL PairCompareByID(const void* lhs, const void* rhs) $/;"	f	struct:ImGuiStorage::BuildSortByKey::StaticFunc	typeref:typename:int IMGUI_CDECL	file:
ParentID	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID       ParentID;     \/\/ Best candidate window->IDStack.back() - to compare context$/;"	m	struct:ImGuiNavMoveResult	typeref:typename:ImGuiID
ParentLayoutType	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiLayoutType         ParentLayoutType;       \/\/ Layout type of parent window at the tim/;"	m	struct:ImGuiDrawContext	typeref:typename:ImGuiLayoutType
ParentWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            ParentWindow;                       \/\/ If we are a child _or_ popu/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiWindow *
ParentWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*        ParentWindow;   \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupRef	typeref:typename:ImGuiWindow *
ParseFormatPrecision	lib/cimgui/imgui/imgui.cpp	/^int ImGui::ParseFormatPrecision(const char* fmt, int default_precision)$/;"	f	class:ImGui	typeref:typename:int
PassFilter	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiTextFilter::PassFilter(const char* text, const char* text_end) const$/;"	f	class:ImGuiTextFilter	typeref:typename:bool
PathArcTo	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathArcTo(const ImVec2& centre, float radius, float a_min, float a_max, int num/;"	f	class:ImDrawList	typeref:typename:void
PathArcToFast	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathArcToFast(const ImVec2& centre, float radius, int a_min_of_12, int a_max_of/;"	f	class:ImDrawList	typeref:typename:void
PathBezierCurveTo	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathBezierCurveTo(const ImVec2& p2, const ImVec2& p3, const ImVec2& p4, int num/;"	f	class:ImDrawList	typeref:typename:void
PathBezierToCasteljau	lib/cimgui/imgui/imgui_draw.cpp	/^static void PathBezierToCasteljau(ImVector<ImVec2>* path, float x1, float y1, float x2, float y2/;"	f	typeref:typename:void	file:
PathClear	lib/cimgui/imgui/imgui.h	/^    inline    void  PathClear()                                                 { _Path.resize(0/;"	f	struct:ImDrawList	typeref:typename:void
PathFillConvex	lib/cimgui/imgui/imgui.h	/^    inline    void  PathFillConvex(ImU32 col)                                   { AddConvexPolyF/;"	f	struct:ImDrawList	typeref:typename:void
PathLineTo	lib/cimgui/imgui/imgui.h	/^    inline    void  PathLineTo(const ImVec2& pos)                               { _Path.push_bac/;"	f	struct:ImDrawList	typeref:typename:void
PathLineToMergeDuplicate	lib/cimgui/imgui/imgui.h	/^    inline    void  PathLineToMergeDuplicate(const ImVec2& pos)                 { if (_Path.Size/;"	f	struct:ImDrawList	typeref:typename:void
PathRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PathRect(const ImVec2& a, const ImVec2& b, float rounding, int rounding_corners/;"	f	class:ImDrawList	typeref:typename:void
PathStroke	lib/cimgui/imgui/imgui.h	/^    inline    void  PathStroke(ImU32 col, bool closed, float thickness = 1.0f)  { AddPolyline(_P/;"	f	struct:ImDrawList	typeref:typename:void
PixelHeight	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        uint32_t    PixelHeight;        \/\/ Size this font was generated with.$/;"	m	struct:__anon71f5b57f0110::FontInfo	typeref:typename:uint32_t	file:
PixelSnapH	lib/cimgui/cimgui/cimgui.h	/^    bool PixelSnapH;$/;"	m	struct:ImFontConfig	typeref:typename:bool
PixelSnapH	lib/cimgui/imgui/imgui.h	/^    bool            PixelSnapH;             \/\/ false    \/\/ Align every glyph to pixel bounda/;"	m	struct:ImFontConfig	typeref:typename:bool
PixelsToOffsetNorm	lib/cimgui/imgui/imgui.cpp	/^static float PixelsToOffsetNorm(const ImGuiColumnsSet* columns, float offset)$/;"	f	typeref:typename:float	file:
PlotEx	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PlotEx(ImGuiPlotType plot_type, const char* label, float (*values_getter)(void* data/;"	f	class:ImGui	typeref:typename:void
PlotHistogram	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PlotHistogram(const char* label, const float* values, int values_count, int values_o/;"	f	class:ImGui	typeref:typename:void
PlotHistogram	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PlotHistogram(const char* label, float (*values_getter)(void* data, int idx), void* /;"	f	class:ImGui	typeref:typename:void
PlotLines	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PlotLines(const char* label, const float* values, int values_count, int values_offse/;"	f	class:ImGui	typeref:typename:void
PlotLines	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PlotLines(const char* label, float (*values_getter)(void* data, int idx), void* data/;"	f	class:ImGui	typeref:typename:void
Plot_ArrayGetter	lib/cimgui/imgui/imgui.cpp	/^static float Plot_ArrayGetter(void* data, int idx)$/;"	f	typeref:typename:float	file:
PopAllowKeyboardFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopAllowKeyboardFocus()$/;"	f	class:ImGui	typeref:typename:void
PopButtonRepeat	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopButtonRepeat()$/;"	f	class:ImGui	typeref:typename:void
PopClipRect	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopClipRect()$/;"	f	class:ImGui	typeref:typename:void
PopClipRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PopClipRect()$/;"	f	class:ImDrawList	typeref:typename:void
PopFont	lib/cimgui/imgui/imgui.cpp	/^void  ImGui::PopFont()$/;"	f	class:ImGui	typeref:typename:void
PopID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopID()$/;"	f	class:ImGui	typeref:typename:void
PopItemFlag	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopItemFlag()$/;"	f	class:ImGui	typeref:typename:void
PopItemWidth	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopItemWidth()$/;"	f	class:ImGui	typeref:typename:void
PopStyleColor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopStyleColor(int count)$/;"	f	class:ImGui	typeref:typename:void
PopStyleVar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopStyleVar(int count)$/;"	f	class:ImGui	typeref:typename:void
PopTextWrapPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PopTextWrapPos()$/;"	f	class:ImGui	typeref:typename:void
PopTextureID	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PopTextureID()$/;"	f	class:ImDrawList	typeref:typename:void
PopupBorderSize	lib/cimgui/cimgui/cimgui.h	/^    float PopupBorderSize;$/;"	m	struct:ImGuiStyle	typeref:typename:float
PopupBorderSize	lib/cimgui/imgui/imgui.h	/^    float       PopupBorderSize;            \/\/ Thickness of border around popup\/tooltip windo/;"	m	struct:ImGuiStyle	typeref:typename:float
PopupId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 PopupId;                            \/\/ ID in the popup stack when /;"	m	struct:ImGuiWindow	typeref:typename:ImGuiID
PopupId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID             PopupId;        \/\/ Set on OpenPopup()$/;"	m	struct:ImGuiPopupRef	typeref:typename:ImGuiID
PopupRounding	lib/cimgui/cimgui/cimgui.h	/^    float PopupRounding;$/;"	m	struct:ImGuiStyle	typeref:typename:float
PopupRounding	lib/cimgui/imgui/imgui.h	/^    float       PopupRounding;              \/\/ Radius of popup window corners rounding. (Note /;"	m	struct:ImGuiStyle	typeref:typename:float
Pos	bin/imgui.ini	/^Pos=0,0$/;"	k	section:Window
Pos	bin/imgui.ini	/^Pos=510,23$/;"	k	section:Window
Pos	bin/imgui.ini	/^Pos=60,60$/;"	k	section:Window
Pos	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 Pos;$/;"	m	struct:ImGuiSizeCallbackData	typeref:struct:ImVec2
Pos	lib/cimgui/imgui/imgui.h	/^    ImVec2  Pos;            \/\/ Read-only.   Window position, for reference.$/;"	m	struct:ImGuiSizeCallbackData	typeref:typename:ImVec2
Pos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  Pos;                                \/\/ Position rounded-up to near/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
Pos	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      Pos;$/;"	m	struct:ImGuiWindowSettings	typeref:typename:ImVec2
Pos	lib/cimgui/imgui/imgui_internal.h	/^    float       Pos[4], NextWidths[4];$/;"	m	struct:ImGuiMenuColumns	typeref:typename:float[4]
PosCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               PosCond;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiCond
PosFloat	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  PosFloat;$/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
PosPivotVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  PosPivotVal;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImVec2
PosVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  PosVal;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImVec2
PrevLineHeight	lib/cimgui/imgui/imgui_internal.h	/^    float                   PrevLineHeight;$/;"	m	struct:ImGuiDrawContext	typeref:typename:float
PrevLineTextBaseOffset	lib/cimgui/imgui/imgui_internal.h	/^    float                   PrevLineTextBaseOffset;$/;"	m	struct:ImGuiDrawContext	typeref:typename:float
Preview	lib/cimgui/cimgui/cimgui.h	/^    bool Preview;$/;"	m	struct:ImGuiPayload	typeref:typename:bool
Preview	lib/cimgui/imgui/imgui.h	/^    bool            Preview;            \/\/ Set when AcceptDragDropPayload() was called and mou/;"	m	struct:ImGuiPayload	typeref:typename:bool
PrimQuadUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimQuadUV(const ImVec2& a, const ImVec2& b, const ImVec2& c, const ImVec2& d, /;"	f	class:ImDrawList	typeref:typename:void
PrimRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimRect(const ImVec2& a, const ImVec2& c, ImU32 col)$/;"	f	class:ImDrawList	typeref:typename:void
PrimRectUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimRectUV(const ImVec2& a, const ImVec2& c, const ImVec2& uv_a, const ImVec2& /;"	f	class:ImDrawList	typeref:typename:void
PrimReserve	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PrimReserve(int idx_count, int vtx_count)$/;"	f	class:ImDrawList	typeref:typename:void
PrimVtx	lib/cimgui/imgui/imgui.h	/^    inline    void  PrimVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col)     { PrimWriteIdx((/;"	f	struct:ImDrawList	typeref:typename:void
PrimWriteIdx	lib/cimgui/imgui/imgui.h	/^    inline    void  PrimWriteIdx(ImDrawIdx idx)                                 { *_IdxWritePtr /;"	f	struct:ImDrawList	typeref:typename:void
PrimWriteVtx	lib/cimgui/imgui/imgui.h	/^    inline    void  PrimWriteVtx(const ImVec2& pos, const ImVec2& uv, ImU32 col){ _VtxWritePtr->/;"	f	struct:ImDrawList	typeref:typename:void
PrimitiveTopology	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        D3D10_PRIMITIVE_TOPOLOGY    PrimitiveTopology;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:D3D10_PRIMITIVE_TOPOLOGY	file:
PrimitiveTopology	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        D3D11_PRIMITIVE_TOPOLOGY    PrimitiveTopology;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:D3D11_PRIMITIVE_TOPOLOGY	file:
PrivateClipboard	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<char>          PrivateClipboard;                   \/\/ If no custom clipboard hand/;"	m	struct:ImGuiContext	typeref:typename:ImVector<char>
ProgressBar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ProgressBar(float fraction, const ImVec2& size_arg, const char* overlay)$/;"	f	class:ImGui	typeref:typename:void
PushAllowKeyboardFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushAllowKeyboardFocus(bool allow_keyboard_focus)$/;"	f	class:ImGui	typeref:typename:void
PushButtonRepeat	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushButtonRepeat(bool repeat)$/;"	f	class:ImGui	typeref:typename:void
PushClipRect	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushClipRect(const ImVec2& clip_rect_min, const ImVec2& clip_rect_max, bool intersec/;"	f	class:ImGui	typeref:typename:void
PushClipRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PushClipRect(ImVec2 cr_min, ImVec2 cr_max, bool intersect_with_current_clip_rec/;"	f	class:ImDrawList	typeref:typename:void
PushClipRectFullScreen	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PushClipRectFullScreen()$/;"	f	class:ImDrawList	typeref:typename:void
PushColumnClipRect	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushColumnClipRect(int column_index)$/;"	f	class:ImGui	typeref:typename:void
PushFont	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushFont(ImFont* font)$/;"	f	class:ImGui	typeref:typename:void
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(const char* str_id)$/;"	f	class:ImGui	typeref:typename:void
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(const char* str_id_begin, const char* str_id_end)$/;"	f	class:ImGui	typeref:typename:void
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(const void* ptr_id)$/;"	f	class:ImGui	typeref:typename:void
PushID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushID(int int_id)$/;"	f	class:ImGui	typeref:typename:void
PushItemFlag	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushItemFlag(ImGuiItemFlags option, bool enabled)$/;"	f	class:ImGui	typeref:typename:void
PushItemWidth	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushItemWidth(float item_width)$/;"	f	class:ImGui	typeref:typename:void
PushMultiItemsWidths	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushMultiItemsWidths(int components, float w_full)$/;"	f	class:ImGui	typeref:typename:void
PushStyleColor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleColor(ImGuiCol idx, ImU32 col)$/;"	f	class:ImGui	typeref:typename:void
PushStyleColor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleColor(ImGuiCol idx, const ImVec4& col)$/;"	f	class:ImGui	typeref:typename:void
PushStyleVar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleVar(ImGuiStyleVar idx, const ImVec2& val)$/;"	f	class:ImGui	typeref:typename:void
PushStyleVar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushStyleVar(ImGuiStyleVar idx, float val)$/;"	f	class:ImGui	typeref:typename:void
PushTextWrapPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::PushTextWrapPos(float wrap_pos_x)$/;"	f	class:ImGui	typeref:typename:void
PushTextureID	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::PushTextureID(ImTextureID texture_id)$/;"	f	class:ImDrawList	typeref:typename:void
Q0	lib/klib/khmm.h	/^	FLOAT Q0, **A, **E, *A0;$/;"	m	struct:__anonf542711f0308	typeref:typename:FLOAT
QualityMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} QualityMode;$/;"	t	typeref:enum:__anon66f154fe0303
QualityModeDefault	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeDefault   = 0,$/;"	e	enum:__anon66f154fe0303
QualityModeHigh	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeHigh      = 2$/;"	e	enum:__anon66f154fe0303
QualityModeInvalid	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeInvalid   = -1,$/;"	e	enum:__anon66f154fe0303
QualityModeLow	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    QualityModeLow       = 1,$/;"	e	enum:__anon66f154fe0303
RAWFB_RGBX_8888	lib/nuklear/demo/x11_rawfb/main.c	/^#define RAWFB_RGBX_8888$/;"	d	file:
REAL	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef float REAL;$/;"	t	typeref:typename:float
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
RS	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10RasterizerState*      RS;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10RasterizerState *	file:
RS	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11RasterizerState*      RS;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11RasterizerState *	file:
RS_MIN_SIZE	lib/klib/test/ksort_test.cc	/^#define RS_MIN_SIZE /;"	d	file:
RadioButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::RadioButton(const char* label, bool active)$/;"	f	class:ImGui	typeref:typename:bool
RadioButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::RadioButton(const char* label, int* v, int v_button)$/;"	f	class:ImGui	typeref:typename:bool
RadixSortInPlace_HybridUnsigned_Radix256	lib/klib/test/ksort_test.cc	/^inline void RadixSortInPlace_HybridUnsigned_Radix256( unsigned* a, unsigned long a_size )$/;"	f	typeref:typename:void
Ranges	lib/cimgui/imgui/imgui_draw.cpp	/^        stbtt_pack_range*   Ranges;$/;"	m	struct:ImFontAtlasBuildWithStbTruetype::ImFontTempBuildData	typeref:typename:stbtt_pack_range *	file:
RangesCount	lib/cimgui/imgui/imgui_draw.cpp	/^        int                 RangesCount;$/;"	m	struct:ImFontAtlasBuildWithStbTruetype::ImFontTempBuildData	typeref:typename:int	file:
RasterizerFlags	lib/cimgui/cimgui/cimgui.h	/^    unsigned int RasterizerFlags;$/;"	m	struct:ImFontConfig	typeref:typename:unsigned int
RasterizerFlags	lib/cimgui/imgui/imgui.h	/^    unsigned int    RasterizerFlags;        \/\/ 0x00     \/\/ Settings for custom font rasteriz/;"	m	struct:ImFontConfig	typeref:typename:unsigned int
RasterizerFlags	lib/cimgui/imgui/misc/freetype/imgui_freetype.h	/^    enum RasterizerFlags $/;"	g	namespace:ImGuiFreeType
RasterizerMultiply	lib/cimgui/cimgui/cimgui.h	/^    float RasterizerMultiply;$/;"	m	struct:ImFontConfig	typeref:typename:float
RasterizerMultiply	lib/cimgui/imgui/imgui.h	/^    float           RasterizerMultiply;     \/\/ 1.0f     \/\/ Brighten (>1.0f) or darken (<1.0f/;"	m	struct:ImFontConfig	typeref:typename:float
ReadLineFn	lib/cimgui/imgui/imgui_internal.h	/^    void        (*ReadLineFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, void* entry, con/;"	m	struct:ImGuiSettingsHandler	typeref:typename:void (*)(ImGuiContext * ctx,ImGuiSettingsHandler * handler,void * entry,const char * line)
ReadOnly	lib/cimgui/cimgui/cimgui.h	/^    bool ReadOnly;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:bool
ReadOnly	lib/cimgui/imgui/imgui.h	/^    bool                ReadOnly;       \/\/ Read-only mode                       \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:bool
ReadOpenFn	lib/cimgui/imgui/imgui_internal.h	/^    void*       (*ReadOpenFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, const char* name/;"	m	struct:ImGuiSettingsHandler	typeref:typename:void * (*)(ImGuiContext * ctx,ImGuiSettingsHandler * handler,const char * name)
Rect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect      Rect() const                            { return ImRect(Pos.x, Pos.y, Pos.x+Size/;"	f	struct:ImGuiWindow	typeref:typename:ImRect
RectF	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} RectF;$/;"	t	typeref:struct:__anon66f154fe0908
RectRel	lib/cimgui/imgui/imgui_internal.h	/^    ImRect        RectRel;      \/\/ Best candidate bounding box in window relative space$/;"	m	struct:ImGuiNavMoveResult	typeref:typename:ImRect
Rects	lib/cimgui/imgui/imgui_draw.cpp	/^        stbrp_rect*         Rects;$/;"	m	struct:ImFontAtlasBuildWithStbTruetype::ImFontTempBuildData	typeref:typename:stbrp_rect *	file:
RectsCount	lib/cimgui/imgui/imgui_draw.cpp	/^        int                 RectsCount;$/;"	m	struct:ImFontAtlasBuildWithStbTruetype::ImFontTempBuildData	typeref:typename:int	file:
RefFrame	lib/cimgui/imgui/imgui.h	/^    mutable int RefFrame;$/;"	m	struct:ImGuiOnceUponAFrame	typeref:typename:int
Release	src/Drawable.c	/^Release(Drawable* drawable) {$/;"	f	typeref:typename:void	file:
Release	src/Drawable.h	/^	void (*Release)(Drawable* drawable);$/;"	m	struct:ADrawable	typeref:typename:void (*)(Drawable * drawable)
Release	src/Gui.c	/^Release(){$/;"	f	typeref:typename:void	file:
Release	src/Gui.h	/^	void (*Release)();$/;"	m	struct:AGui	typeref:typename:void (*)()
Release	src/Scene.c	/^Release(Scene* scene) { $/;"	f	typeref:typename:void	file:
Release	src/Scene.h	/^	void   (*Release  )(Scene*);$/;"	m	struct:AScene	typeref:typename:void (*)(Scene *)
Release	src/Shader.c	/^Release(Shader* shader) {$/;"	f	typeref:typename:void	file:
Release	src/Shader.h	/^   void    (*Release)(Shader*);$/;"	m	struct:AShader	typeref:typename:void (*)(Shader *)
Release	src/Shape.c	/^Release(Shape* shape) {$/;"	f	typeref:typename:void	file:
Release	src/Shape.h	/^	void   (*Release)(Shape*);$/;"	m	struct:AShape	typeref:typename:void (*)(Shape *)
Render	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Render()$/;"	f	class:ImGui	typeref:typename:void
Render	src/Drawable.c	/^Render(Drawable* drawable) {$/;"	f	typeref:typename:void	file:
Render	src/Drawable.h	/^	void (*Render )(Drawable* drawable);$/;"	m	struct:ADrawable	typeref:typename:void (*)(Drawable * drawable)
Render	src/Gui.c	/^Render(){$/;"	f	typeref:typename:void	file:
Render	src/Gui.h	/^	void (*Render )();$/;"	m	struct:AGui	typeref:typename:void (*)()
Render	src/Scene.c	/^Render(Scene* scene) {$/;"	f	typeref:typename:void	file:
Render	src/Scene.h	/^	void   (*Render   )(Scene*);$/;"	m	struct:AScene	typeref:typename:void (*)(Scene *)
RenderArrow	lib/cimgui/imgui/imgui.cpp	/^static void RenderArrow(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, ImGuiDir direction, I/;"	f	typeref:typename:void	file:
RenderArrow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderArrow(ImVec2 p_min, ImGuiDir dir, float scale)$/;"	f	class:ImGui	typeref:typename:void
RenderArrowsForVerticalBar	lib/cimgui/imgui/imgui.cpp	/^static void RenderArrowsForVerticalBar(ImDrawList* draw_list, ImVec2 pos, ImVec2 half_sz, float /;"	f	typeref:typename:void	file:
RenderBullet	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderBullet(ImVec2 pos)$/;"	f	class:ImGui	typeref:typename:void
RenderChar	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::RenderChar(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, unsigned short/;"	f	class:ImFont	typeref:typename:void
RenderCheckMark	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderCheckMark(ImVec2 pos, ImU32 col, float sz)$/;"	f	class:ImGui	typeref:typename:void
RenderColorRectWithAlphaCheckerboard	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderColorRectWithAlphaCheckerboard(ImVec2 p_min, ImVec2 p_max, ImU32 col, float gr/;"	f	class:ImGui	typeref:typename:void
RenderDrawListsFn	lib/cimgui/cimgui/cimgui.h	/^	void (*RenderDrawListsFn)(struct ImDrawData* data);$/;"	m	struct:ImGuiIO	typeref:typename:void (*)(struct ImDrawData * data)
RenderDrawListsFn	lib/cimgui/imgui/imgui.h	/^    void        (*RenderDrawListsFn)(ImDrawData* data);$/;"	m	struct:ImGuiIO	typeref:typename:void (*)(ImDrawData * data)
RenderFrame	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderFrame(ImVec2 p_min, ImVec2 p_max, ImU32 fill_col, bool border, float rounding)$/;"	f	class:ImGui	typeref:typename:void
RenderFrameBorder	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderFrameBorder(ImVec2 p_min, ImVec2 p_max, float rounding)$/;"	f	class:ImGui	typeref:typename:void
RenderNavHighlight	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderNavHighlight(const ImRect& bb, ImGuiID id, ImGuiNavHighlightFlags flags)$/;"	f	class:ImGui	typeref:typename:void
RenderRectFilledRangeH	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::RenderRectFilledRangeH(ImDrawList* draw_list, const ImRect& rect, ImU32 col, float x/;"	f	class:ImGui	typeref:typename:void
RenderText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderText(ImVec2 pos, const char* text, const char* text_end, bool hide_text_after_/;"	f	class:ImGui	typeref:typename:void
RenderText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::RenderText(ImDrawList* draw_list, float size, ImVec2 pos, ImU32 col, const ImVec4& /;"	f	class:ImFont	typeref:typename:void
RenderTextClipped	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderTextClipped(const ImVec2& pos_min, const ImVec2& pos_max, const char* text, co/;"	f	class:ImGui	typeref:typename:void
RenderTextWrapped	lib/cimgui/imgui/imgui.cpp	/^void ImGui::RenderTextWrapped(ImVec2 pos, const char* text, const char* text_end, float wrap_wid/;"	f	class:ImGui	typeref:typename:void
ResetMouseDragDelta	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ResetMouseDragDelta(int button)$/;"	f	class:ImGui	typeref:typename:void
Resize	src/Scene.c	/^Resize(Scene* outScene, int width, int height) {$/;"	f	typeref:typename:void	file:
Resize	src/Scene.h	/^	void   (*Resize   )(Scene*, int, int);$/;"	m	struct:AScene	typeref:typename:void (*)(Scene *,int,int)
ResizeSwapChain	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^void ResizeSwapChain(HWND hWnd, int width, int height)$/;"	f	typeref:typename:void
Restore	lib/cimgui/imgui/imgui_internal.h	/^    void Restore() const { ImGuiWindow* window = GImGui->CurrentWindow; window->DC.LastItemId = /;"	f	struct:ImGuiItemHoveredDataBackup	typeref:typename:void
RootWindow	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindow;                         \/\/ Point to ourself or first a/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiWindow *
RootWindowForNav	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindowForNav;                   \/\/ Point to ourself or first a/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiWindow *
RootWindowForTabbing	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindowForTabbing;               \/\/ Point to ourself or first a/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiWindow *
RootWindowForTitleBarHighlight	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*            RootWindowForTitleBarHighlight;     \/\/ Point to ourself or first a/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiWindow *
RoundScalar	lib/cimgui/imgui/imgui.cpp	/^float ImGui::RoundScalar(float value, int decimal_precision)$/;"	f	class:ImGui	typeref:typename:float
SAINT_MAX	lib/klib/ksa.c	/^#define SAINT_MAX /;"	d	file:
SAIS_BWT	lib/klib/ksa.c	/^#define SAIS_BWT /;"	d	file:
SAIS_BWT	lib/klib/ksa.c	/^int SAIS_BWT(unsigned char *T, saint_t n, int k)$/;"	f	typeref:typename:int
SAIS_CORE	lib/klib/ksa.c	/^#define SAIS_CORE /;"	d	file:
SAIS_CORE	lib/klib/ksa.c	/^int SAIS_CORE(const unsigned char *T, saint_t *SA, saint_t fs, saint_t n, saint_t k, int cs)$/;"	f	typeref:typename:int
SAIS_MAIN	lib/klib/ksa.c	/^#define SAIS_MAIN /;"	d	file:
SAIS_MAIN	lib/klib/ksa.c	/^int SAIS_MAIN(const unsigned char *T, saint_t *SA, saint_t n, int k)$/;"	f	typeref:typename:int
SDL_Event	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.h	/^typedef union SDL_Event SDL_Event;$/;"	t	typeref:union:SDL_Event
SDL_Event	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.h	/^typedef union SDL_Event SDL_Event;$/;"	t	typeref:union:SDL_Event
SERVERNAME_ALERT_TAG	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^#define SERVERNAME_ALERT_TAG (10)$/;"	M
SERVERNAME_KEY	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^#define SERVERNAME_KEY @"ServerName"$/;"	M
SFML_DIR	lib/nuklear/demo/sfml_opengl2/Makefile	/^	SFML_DIR = C:\/Users\/Ricky\/MinGW-Libs\/SFML$/;"	m
SFML_DIR	lib/nuklear/demo/sfml_opengl2/Makefile	/^	SFML_DIR = \/home\/ricky\/Libraries\/SFML$/;"	m
SFML_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	SFML_DIR = C:\/Users\/Ricky\/MinGW-Libs\/SFML$/;"	m
SFML_DIR	lib/nuklear/demo/sfml_opengl3/Makefile	/^	SFML_DIR = \/home\/ricky\/Libraries\/SFML$/;"	m
SFML_INC	lib/nuklear/demo/sfml_opengl2/Makefile	/^SFML_INC = -I $(SFML_DIR)\/include$/;"	m
SFML_INC	lib/nuklear/demo/sfml_opengl3/Makefile	/^SFML_INC = -I $(SFML_DIR)\/include$/;"	m
SFML_LIB	lib/nuklear/demo/sfml_opengl2/Makefile	/^SFML_LIB = -L $(SFML_DIR)\/lib$/;"	m
SFML_LIB	lib/nuklear/demo/sfml_opengl3/Makefile	/^SFML_LIB = -L $(SFML_DIR)\/lib$/;"	m
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGN	lib/klib/kmath.c	/^static inline float SIGN(float a, float b)$/;"	f	typeref:typename:float	file:
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_ID /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MAJOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#  define SIMULATE_VERSION_MINOR /;"	d	file:
SOURCES	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^SOURCES = main.cpp imgui_impl_glfw_gl2.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^SOURCES = main.cpp imgui_impl_glfw_gl3.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^SOURCES = main.cpp imgui_impl_sdl_gl2.cpp$/;"	m
SOURCES	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^SOURCES = main.cpp imgui_impl_sdl_gl3.cpp$/;"	m
SRC	lib/nuklear/demo/allegro5/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/glfw_opengl2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/glfw_opengl3/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/glfw_opengl4/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sdl_opengl2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sdl_opengl3/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sdl_opengles2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/sfml_opengl2/Makefile	/^SRC = main.cpp$/;"	m
SRC	lib/nuklear/demo/sfml_opengl3/Makefile	/^SRC = main.cpp$/;"	m
SRC	lib/nuklear/demo/x11/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/x11_opengl2/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/x11_opengl3/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/demo/x11_rawfb/Makefile	/^SRC = main.c$/;"	m
SRC	lib/nuklear/doc/Makefile	/^SRC = stddoc.c$/;"	m
STBIDEF	lib/nuklear/example/stb_image.h	/^#define STBIDEF /;"	d
STBI_ASSERT	lib/nuklear/example/stb_image.h	/^#define STBI_ASSERT(/;"	d
STBI_FREE	lib/nuklear/example/stb_image.h	/^#define STBI_FREE(/;"	d
STBI_HAS_LROTL	lib/nuklear/example/stb_image.h	/^#define STBI_HAS_LROTL$/;"	d
STBI_INCLUDE_STB_IMAGE_H	lib/nuklear/example/stb_image.h	/^#define STBI_INCLUDE_STB_IMAGE_H$/;"	d
STBI_MALLOC	lib/nuklear/example/stb_image.h	/^#define STBI_MALLOC(/;"	d
STBI_NOTUSED	lib/nuklear/example/stb_image.h	/^#define STBI_NOTUSED(/;"	d
STBI_NO_BMP	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_BMP$/;"	d
STBI_NO_GIF	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_GIF$/;"	d
STBI_NO_HDR	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_HDR$/;"	d
STBI_NO_JPEG	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_JPEG$/;"	d
STBI_NO_PIC	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_PIC$/;"	d
STBI_NO_PNG	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_PNG$/;"	d
STBI_NO_PNM	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_PNM$/;"	d
STBI_NO_PSD	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_PSD$/;"	d
STBI_NO_SIMD	lib/nuklear/example/stb_image.h	/^#define STBI_NO_SIMD$/;"	d
STBI_NO_TGA	lib/nuklear/example/stb_image.h	/^   #define STBI_NO_TGA$/;"	d
STBI_NO_ZLIB	lib/nuklear/example/stb_image.h	/^#define STBI_NO_ZLIB$/;"	d
STBI_REALLOC	lib/nuklear/example/stb_image.h	/^#define STBI_REALLOC(/;"	d
STBI_SIMD_ALIGN	lib/nuklear/example/stb_image.h	/^#define STBI_SIMD_ALIGN(/;"	d
STBI_SSE2	lib/nuklear/example/stb_image.h	/^#define STBI_SSE2$/;"	d
STBI_VERSION	lib/nuklear/example/stb_image.h	/^#define STBI_VERSION /;"	d
STBI__BYTECAST	lib/nuklear/example/stb_image.h	/^#define STBI__BYTECAST(/;"	d
STBI__F_avg	lib/nuklear/example/stb_image.h	/^   STBI__F_avg=3,$/;"	e	enum:__anonc731c3c80d03
STBI__F_avg_first	lib/nuklear/example/stb_image.h	/^   STBI__F_avg_first,$/;"	e	enum:__anonc731c3c80d03
STBI__F_none	lib/nuklear/example/stb_image.h	/^   STBI__F_none=0,$/;"	e	enum:__anonc731c3c80d03
STBI__F_paeth	lib/nuklear/example/stb_image.h	/^   STBI__F_paeth=4,$/;"	e	enum:__anonc731c3c80d03
STBI__F_paeth_first	lib/nuklear/example/stb_image.h	/^   STBI__F_paeth_first$/;"	e	enum:__anonc731c3c80d03
STBI__F_sub	lib/nuklear/example/stb_image.h	/^   STBI__F_sub=1,$/;"	e	enum:__anonc731c3c80d03
STBI__F_up	lib/nuklear/example/stb_image.h	/^   STBI__F_up=2,$/;"	e	enum:__anonc731c3c80d03
STBI__HDR_BUFLEN	lib/nuklear/example/stb_image.h	/^#define STBI__HDR_BUFLEN /;"	d
STBI__IDCT_1D	lib/nuklear/example/stb_image.h	/^#define STBI__IDCT_1D(/;"	d
STBI__MARKER_none	lib/nuklear/example/stb_image.h	/^#define STBI__MARKER_none /;"	d
STBI__PNG_TYPE	lib/nuklear/example/stb_image.h	/^#define STBI__PNG_TYPE(/;"	d
STBI__RESTART	lib/nuklear/example/stb_image.h	/^#define STBI__RESTART(/;"	d
STBI__SCAN_header	lib/nuklear/example/stb_image.h	/^   STBI__SCAN_header$/;"	e	enum:__anonc731c3c80403
STBI__SCAN_load	lib/nuklear/example/stb_image.h	/^   STBI__SCAN_load=0,$/;"	e	enum:__anonc731c3c80403
STBI__SCAN_type	lib/nuklear/example/stb_image.h	/^   STBI__SCAN_type,$/;"	e	enum:__anonc731c3c80403
STBI__X64_TARGET	lib/nuklear/example/stb_image.h	/^#define STBI__X64_TARGET$/;"	d
STBI__X86_TARGET	lib/nuklear/example/stb_image.h	/^#define STBI__X86_TARGET$/;"	d
STBI__ZFAST_BITS	lib/nuklear/example/stb_image.h	/^#define STBI__ZFAST_BITS /;"	d
STBI__ZFAST_MASK	lib/nuklear/example/stb_image.h	/^#define STBI__ZFAST_MASK /;"	d
STBI_default	lib/nuklear/example/stb_image.h	/^   STBI_default = 0, \/\/ only used for req_comp$/;"	e	enum:__anonc731c3c80103
STBI_grey	lib/nuklear/example/stb_image.h	/^   STBI_grey       = 1,$/;"	e	enum:__anonc731c3c80103
STBI_grey_alpha	lib/nuklear/example/stb_image.h	/^   STBI_grey_alpha = 2,$/;"	e	enum:__anonc731c3c80103
STBI_rgb	lib/nuklear/example/stb_image.h	/^   STBI_rgb        = 3,$/;"	e	enum:__anonc731c3c80103
STBI_rgb_alpha	lib/nuklear/example/stb_image.h	/^   STBI_rgb_alpha  = 4$/;"	e	enum:__anonc731c3c80103
STBRP_ASSERT	lib/cimgui/imgui/imgui_draw.cpp	/^#define STBRP_ASSERT(/;"	d	file:
STBRP_ASSERT	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^#define STBRP_ASSERT(/;"	d	file:
STBRP_ASSERT	lib/cimgui/imgui/stb_rect_pack.h	/^#define STBRP_ASSERT /;"	d
STBRP_DEF	lib/cimgui/imgui/stb_rect_pack.h	/^#define STBRP_DEF /;"	d
STBRP_HEURISTIC_Skyline_BF_sortHeight	lib/cimgui/imgui/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_BF_sortHeight$/;"	e	enum:__anon5e304a0c0103
STBRP_HEURISTIC_Skyline_BL_sortHeight	lib/cimgui/imgui/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_BL_sortHeight = STBRP_HEURISTIC_Skyline_default,$/;"	e	enum:__anon5e304a0c0103
STBRP_HEURISTIC_Skyline_default	lib/cimgui/imgui/stb_rect_pack.h	/^   STBRP_HEURISTIC_Skyline_default=0,$/;"	e	enum:__anon5e304a0c0103
STBRP_SORT	lib/cimgui/imgui/stb_rect_pack.h	/^#define STBRP_SORT /;"	d
STBRP_STATIC	lib/cimgui/imgui/imgui_draw.cpp	/^#define STBRP_STATIC$/;"	d	file:
STBRP_STATIC	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^#define STBRP_STATIC$/;"	d	file:
STBRP__CDECL	lib/cimgui/imgui/stb_rect_pack.h	/^#define STBRP__CDECL /;"	d
STBRP__CDECL	lib/cimgui/imgui/stb_rect_pack.h	/^#define STBRP__CDECL$/;"	d
STBRP__INIT_skyline	lib/cimgui/imgui/stb_rect_pack.h	/^   STBRP__INIT_skyline = 1$/;"	e	enum:__anon5e304a0c0203
STBRP__MAXVAL	lib/cimgui/imgui/stb_rect_pack.h	/^#define STBRP__MAXVAL /;"	d
STBRP__NOTUSED	lib/cimgui/imgui/stb_rect_pack.h	/^#define STBRP__NOTUSED(/;"	d
STBTT_DEF	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_DEF /;"	d
STBTT_FIX	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_FIX /;"	d
STBTT_FIXMASK	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_FIXMASK /;"	d
STBTT_FIXSHIFT	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_FIXSHIFT /;"	d
STBTT_GPOS_TODO_assert	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_GPOS_TODO_assert(/;"	d
STBTT_MACSTYLE_BOLD	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_MACSTYLE_BOLD /;"	d
STBTT_MACSTYLE_DONTCARE	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_MACSTYLE_DONTCARE /;"	d
STBTT_MACSTYLE_ITALIC	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_MACSTYLE_ITALIC /;"	d
STBTT_MACSTYLE_NONE	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_MACSTYLE_NONE /;"	d
STBTT_MACSTYLE_UNDERSCORE	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_MACSTYLE_UNDERSCORE /;"	d
STBTT_MAC_EID_ARABIC	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_EID_CHINESE_TRAD	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_EID_GREEK	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_CHINESE_TRAD =2,   STBTT_MAC_EID_GREEK        =6,$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_EID_HEBREW	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_EID_JAPANESE	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_JAPANESE     =1,   STBTT_MAC_EID_HEBREW       =5,$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_EID_KOREAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_EID_ROMAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_ROMAN        =0,   STBTT_MAC_EID_ARABIC       =4,$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_EID_RUSSIAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_EID_KOREAN       =3,   STBTT_MAC_EID_RUSSIAN      =7$/;"	e	enum:__anonc4c159420c03
STBTT_MAC_LANG_ARABIC	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_CHINESE_SIMPLIFIED	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_CHINESE_TRAD	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_DUTCH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_ENGLISH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_FRENCH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_GERMAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_HEBREW	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_HEBREW       =10,   STBTT_MAC_LANG_CHINESE_SIMPLIFIED =33,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_ITALIAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_ITALIAN      =3 ,   STBTT_MAC_LANG_CHINESE_TRAD =19$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_JAPANESE	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_ENGLISH      =0 ,   STBTT_MAC_LANG_JAPANESE     =11,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_KOREAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_ARABIC       =12,   STBTT_MAC_LANG_KOREAN       =23,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_RUSSIAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_DUTCH        =4 ,   STBTT_MAC_LANG_RUSSIAN      =32,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_SPANISH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_FRENCH       =1 ,   STBTT_MAC_LANG_SPANISH      =6 ,$/;"	e	enum:__anonc4c159420e03
STBTT_MAC_LANG_SWEDISH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MAC_LANG_GERMAN       =2 ,   STBTT_MAC_LANG_SWEDISH      =5 ,$/;"	e	enum:__anonc4c159420e03
STBTT_MAX_OVERSAMPLE	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_MAX_OVERSAMPLE /;"	d
STBTT_MS_EID_SHIFTJIS	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_EID_SHIFTJIS      =2,$/;"	e	enum:__anonc4c159420b03
STBTT_MS_EID_SYMBOL	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_EID_SYMBOL        =0,$/;"	e	enum:__anonc4c159420b03
STBTT_MS_EID_UNICODE_BMP	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_BMP   =1,$/;"	e	enum:__anonc4c159420b03
STBTT_MS_EID_UNICODE_FULL	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_EID_UNICODE_FULL  =10$/;"	e	enum:__anonc4c159420b03
STBTT_MS_LANG_CHINESE	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_DUTCH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_ENGLISH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_FRENCH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_GERMAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_HEBREW	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_ITALIAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_ENGLISH     =0x0409,   STBTT_MS_LANG_ITALIAN     =0x0410,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_JAPANESE	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_CHINESE     =0x0804,   STBTT_MS_LANG_JAPANESE    =0x0411,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_KOREAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_DUTCH       =0x0413,   STBTT_MS_LANG_KOREAN      =0x0412,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_RUSSIAN	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_FRENCH      =0x040c,   STBTT_MS_LANG_RUSSIAN     =0x0419,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_SPANISH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_GERMAN      =0x0407,   STBTT_MS_LANG_SPANISH     =0x0409,$/;"	e	enum:__anonc4c159420d03
STBTT_MS_LANG_SWEDISH	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_MS_LANG_HEBREW      =0x040d,   STBTT_MS_LANG_SWEDISH     =0x041D$/;"	e	enum:__anonc4c159420d03
STBTT_PLATFORM_ID_ISO	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_PLATFORM_ID_ISO       =2,$/;"	e	enum:__anonc4c159420903
STBTT_PLATFORM_ID_MAC	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_PLATFORM_ID_MAC       =1,$/;"	e	enum:__anonc4c159420903
STBTT_PLATFORM_ID_MICROSOFT	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_PLATFORM_ID_MICROSOFT =3$/;"	e	enum:__anonc4c159420903
STBTT_PLATFORM_ID_UNICODE	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_PLATFORM_ID_UNICODE   =0,$/;"	e	enum:__anonc4c159420903
STBTT_POINT_SIZE	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_POINT_SIZE(/;"	d
STBTT_RASTERIZER_VERSION	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_RASTERIZER_VERSION /;"	d
STBTT_STATIC	lib/cimgui/imgui/imgui_draw.cpp	/^#define STBTT_STATIC$/;"	d	file:
STBTT_UNICODE_EID_ISO_10646	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_UNICODE_EID_ISO_10646      =2,$/;"	e	enum:__anonc4c159420a03
STBTT_UNICODE_EID_UNICODE_1_0	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_0    =0,$/;"	e	enum:__anonc4c159420a03
STBTT_UNICODE_EID_UNICODE_1_1	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_1_1    =1,$/;"	e	enum:__anonc4c159420a03
STBTT_UNICODE_EID_UNICODE_2_0_BMP	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_BMP=3,$/;"	e	enum:__anonc4c159420a03
STBTT_UNICODE_EID_UNICODE_2_0_FULL	lib/cimgui/imgui/stb_truetype.h	/^   STBTT_UNICODE_EID_UNICODE_2_0_FULL=4$/;"	e	enum:__anonc4c159420a03
STBTT__COMPARE	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT__COMPARE(/;"	d
STBTT__CSCTX_INIT	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT__CSCTX_INIT(/;"	d
STBTT__CSERR	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT__CSERR(/;"	d
STBTT__NOTUSED	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT__NOTUSED(/;"	d
STBTT__OVER_MASK	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT__OVER_MASK /;"	d
STBTT_acos	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_acos(/;"	d
STBTT_assert	lib/cimgui/imgui/imgui_draw.cpp	/^#define STBTT_assert(/;"	d	file:
STBTT_assert	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_assert(/;"	d
STBTT_cos	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_cos(/;"	d
STBTT_fabs	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_fabs(/;"	d
STBTT_fmod	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_fmod(/;"	d
STBTT_free	lib/cimgui/imgui/imgui_draw.cpp	/^#define STBTT_free(/;"	d	file:
STBTT_free	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_free(/;"	d
STBTT_iceil	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_iceil(/;"	d
STBTT_ifloor	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_ifloor(/;"	d
STBTT_malloc	lib/cimgui/imgui/imgui_draw.cpp	/^#define STBTT_malloc(/;"	d	file:
STBTT_malloc	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_malloc(/;"	d
STBTT_max	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_max(/;"	d
STBTT_memcpy	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_memcpy /;"	d
STBTT_memset	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_memset /;"	d
STBTT_min	lib/cimgui/imgui/stb_truetype.h	/^#define STBTT_min(/;"	d
STBTT_pow	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_pow(/;"	d
STBTT_sqrt	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_sqrt(/;"	d
STBTT_strlen	lib/cimgui/imgui/stb_truetype.h	/^   #define STBTT_strlen(/;"	d
STBTT_vcubic	lib/cimgui/imgui/stb_truetype.h	/^      STBTT_vcubic$/;"	e	enum:__anonc4c159420603
STBTT_vcurve	lib/cimgui/imgui/stb_truetype.h	/^      STBTT_vcurve,$/;"	e	enum:__anonc4c159420603
STBTT_vline	lib/cimgui/imgui/stb_truetype.h	/^      STBTT_vline,$/;"	e	enum:__anonc4c159420603
STBTT_vmove	lib/cimgui/imgui/stb_truetype.h	/^      STBTT_vmove=1,$/;"	e	enum:__anonc4c159420603
STB_IMAGE_IMPLEMENTATION	lib/nuklear/demo/x11/nuklear_xlib.h	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/canvas.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/extended.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/file_browser.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_IMAGE_IMPLEMENTATION	lib/nuklear/example/skinning.c	/^#define STB_IMAGE_IMPLEMENTATION$/;"	d	file:
STB_INCLUDE_STB_RECT_PACK_H	lib/cimgui/imgui/stb_rect_pack.h	/^#define STB_INCLUDE_STB_RECT_PACK_H$/;"	d
STB_RECT_PACK_IMPLEMENTATION	lib/cimgui/imgui/imgui_draw.cpp	/^#define STB_RECT_PACK_IMPLEMENTATION$/;"	d	file:
STB_RECT_PACK_IMPLEMENTATION	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^#define STB_RECT_PACK_IMPLEMENTATION$/;"	d	file:
STB_RECT_PACK_VERSION	lib/cimgui/imgui/stb_rect_pack.h	/^#define STB_RECT_PACK_VERSION /;"	d
STB_TEXTEDIT_CHARTYPE	lib/cimgui/imgui/imgui_internal.h	/^#define STB_TEXTEDIT_CHARTYPE /;"	d
STB_TEXTEDIT_CHARTYPE	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXTEDIT_CHARTYPE /;"	d
STB_TEXTEDIT_DELETECHARS	lib/cimgui/imgui/imgui.cpp	/^static void STB_TEXTEDIT_DELETECHARS(STB_TEXTEDIT_STRING* obj, int pos, int n)$/;"	f	namespace:ImGuiStb	typeref:typename:void	file:
STB_TEXTEDIT_GETCHAR	lib/cimgui/imgui/imgui.cpp	/^static ImWchar STB_TEXTEDIT_GETCHAR(const STB_TEXTEDIT_STRING* obj, int idx)                    /;"	f	namespace:ImGuiStb	typeref:typename:ImWchar	file:
STB_TEXTEDIT_GETWIDTH	lib/cimgui/imgui/imgui.cpp	/^static float   STB_TEXTEDIT_GETWIDTH(STB_TEXTEDIT_STRING* obj, int line_start_idx, int char_idx)/;"	f	namespace:ImGuiStb	typeref:typename:float	file:
STB_TEXTEDIT_GETWIDTH_NEWLINE	lib/cimgui/imgui/imgui_internal.h	/^#define STB_TEXTEDIT_GETWIDTH_NEWLINE /;"	d
STB_TEXTEDIT_IMPLEMENTATION	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_IMPLEMENTATION$/;"	d	file:
STB_TEXTEDIT_INSERTCHARS	lib/cimgui/imgui/imgui.cpp	/^static bool STB_TEXTEDIT_INSERTCHARS(STB_TEXTEDIT_STRING* obj, int pos, const ImWchar* new_text,/;"	f	namespace:ImGuiStb	typeref:typename:bool	file:
STB_TEXTEDIT_KEYTOTEXT	lib/cimgui/imgui/imgui.cpp	/^static int     STB_TEXTEDIT_KEYTOTEXT(int key)                                                  /;"	f	namespace:ImGuiStb	typeref:typename:int	file:
STB_TEXTEDIT_K_BACKSPACE	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_BACKSPACE /;"	d	file:
STB_TEXTEDIT_K_DELETE	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_DELETE /;"	d	file:
STB_TEXTEDIT_K_DOWN	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_DOWN /;"	d	file:
STB_TEXTEDIT_K_LEFT	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_LEFT /;"	d	file:
STB_TEXTEDIT_K_LINEEND	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_LINEEND /;"	d	file:
STB_TEXTEDIT_K_LINESTART	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_LINESTART /;"	d	file:
STB_TEXTEDIT_K_REDO	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_REDO /;"	d	file:
STB_TEXTEDIT_K_RIGHT	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_RIGHT /;"	d	file:
STB_TEXTEDIT_K_SHIFT	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_SHIFT /;"	d	file:
STB_TEXTEDIT_K_TEXTEND	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_TEXTEND /;"	d	file:
STB_TEXTEDIT_K_TEXTSTART	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_TEXTSTART /;"	d	file:
STB_TEXTEDIT_K_UNDO	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_UNDO /;"	d	file:
STB_TEXTEDIT_K_UP	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_UP /;"	d	file:
STB_TEXTEDIT_K_WORDLEFT	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_WORDLEFT /;"	d	file:
STB_TEXTEDIT_K_WORDRIGHT	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_K_WORDRIGHT /;"	d	file:
STB_TEXTEDIT_LAYOUTROW	lib/cimgui/imgui/imgui.cpp	/^static void    STB_TEXTEDIT_LAYOUTROW(StbTexteditRow* r, STB_TEXTEDIT_STRING* obj, int line_star/;"	f	namespace:ImGuiStb	typeref:typename:void	file:
STB_TEXTEDIT_MOVEWORDLEFT	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_MOVEWORDLEFT /;"	d	file:
STB_TEXTEDIT_MOVEWORDLEFT	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXTEDIT_MOVEWORDLEFT /;"	d
STB_TEXTEDIT_MOVEWORDLEFT_IMPL	lib/cimgui/imgui/imgui.cpp	/^static int  STB_TEXTEDIT_MOVEWORDLEFT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)   { idx--; while (/;"	f	namespace:ImGuiStb	typeref:typename:int	file:
STB_TEXTEDIT_MOVEWORDRIGHT	lib/cimgui/imgui/imgui.cpp	/^#define STB_TEXTEDIT_MOVEWORDRIGHT /;"	d	file:
STB_TEXTEDIT_MOVEWORDRIGHT	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXTEDIT_MOVEWORDRIGHT /;"	d
STB_TEXTEDIT_MOVEWORDRIGHT_IMPL	lib/cimgui/imgui/imgui.cpp	/^static int  STB_TEXTEDIT_MOVEWORDRIGHT_IMPL(STB_TEXTEDIT_STRING* obj, int idx)  { idx++; int len/;"	f	namespace:ImGuiStb	typeref:typename:int	file:
STB_TEXTEDIT_NEWLINE	lib/cimgui/imgui/imgui.cpp	/^static ImWchar STB_TEXTEDIT_NEWLINE = '\\n';$/;"	v	namespace:ImGuiStb	typeref:typename:ImWchar	file:
STB_TEXTEDIT_POSITIONTYPE	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXTEDIT_POSITIONTYPE /;"	d
STB_TEXTEDIT_STRING	lib/cimgui/imgui/imgui_internal.h	/^#define STB_TEXTEDIT_STRING /;"	d
STB_TEXTEDIT_STRINGLEN	lib/cimgui/imgui/imgui.cpp	/^static int     STB_TEXTEDIT_STRINGLEN(const STB_TEXTEDIT_STRING* obj)                           /;"	f	namespace:ImGuiStb	typeref:typename:int	file:
STB_TEXTEDIT_UNDOCHARCOUNT	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXTEDIT_UNDOCHARCOUNT /;"	d
STB_TEXTEDIT_UNDOSTATECOUNT	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXTEDIT_UNDOSTATECOUNT /;"	d
STB_TEXTEDIT_memmove	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXTEDIT_memmove /;"	d
STB_TEXT_HAS_SELECTION	lib/cimgui/imgui/stb_textedit.h	/^#define STB_TEXT_HAS_SELECTION(/;"	d
STB_TRUETYPE_IMPLEMENTATION	lib/cimgui/imgui/imgui_draw.cpp	/^#define STB_TRUETYPE_IMPLEMENTATION$/;"	d	file:
STB_TexteditState	lib/cimgui/imgui/stb_textedit.h	/^} STB_TexteditState;$/;"	t	typeref:struct:__anonfd61af4b0308
STB__SCRAMBLE	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define STB__SCRAMBLE(/;"	d	file:
STB__TRY	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define STB__TRY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY(/;"	d	file:
STRINGIFY	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^#define STRINGIFY_HELPER(/;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^#define STRINGIFY_HELPER(/;"	d	file:
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SameLine	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SameLine(float pos_x, float spacing_w)$/;"	f	class:ImGui	typeref:typename:void
SampleMask	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        UINT                        SampleMask;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:UINT	file:
SampleMask	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        SampleMask;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
SaveIniSettingsToDisk	lib/cimgui/imgui/imgui.cpp	/^static void SaveIniSettingsToDisk(const char* ini_filename)$/;"	f	typeref:typename:void	file:
SaveIniSettingsToMemory	lib/cimgui/imgui/imgui.cpp	/^static void SaveIniSettingsToMemory(ImVector<char>& out_buf)$/;"	f	typeref:typename:void	file:
Saw	lib/cimgui/imgui/imgui_demo.cpp	/^                static float Saw(void*, int i) { return (i & 1) ? 1.0f : -1.0f; }$/;"	f	struct:ImGui::ShowDemoWindow::Funcs	typeref:typename:float	file:
ScalarAsInputTextId	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID                 ScalarAsInputTextId;                \/\/ Temporary text input when C/;"	m	struct:ImGuiContext	typeref:typename:ImGuiID
Scale	lib/cimgui/imgui/imgui.h	/^    float                       Scale;              \/\/ = 1.f        \/\/ Base font scale, mult/;"	m	struct:ImFont	typeref:typename:float
ScaleAllSizes	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStyle::ScaleAllSizes(float scale_factor)$/;"	f	class:ImGuiStyle	typeref:typename:void
ScaleClipRects	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawData::ScaleClipRects(const ImVec2& scale)$/;"	f	class:ImDrawData	typeref:typename:void
Scene	src/Scene.h	/^typedef struct Scene {$/;"	s
Scene	src/Scene.h	/^} Scene;$/;"	t	typeref:struct:Scene
ScissorRects	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        D3D10_RECT                  ScissorRects[D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:D3D10_RECT[]	file:
ScissorRects	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        D3D11_RECT                  ScissorRects[D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:D3D11_RECT[]	file:
ScissorRectsCount	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        UINT                        ScissorRectsCount, ViewportsCount;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:UINT	file:
ScissorRectsCount	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        ScissorRectsCount, ViewportsCount;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
Scroll	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  Scroll;$/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
ScrollTarget	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollTarget;                       \/\/ target scroll position. sto/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
ScrollTargetCenterRatio	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollTargetCenterRatio;            \/\/ 0.0f = scroll so that targe/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
ScrollToBottom	lib/cimgui/imgui/imgui_demo.cpp	/^    bool                  ScrollToBottom;$/;"	m	struct:ExampleAppConsole	typeref:typename:bool	file:
ScrollToBottom	lib/cimgui/imgui/imgui_demo.cpp	/^    bool                ScrollToBottom;$/;"	m	struct:ExampleAppLog	typeref:typename:bool	file:
ScrollX	lib/cimgui/imgui/imgui_internal.h	/^    float               ScrollX;$/;"	m	struct:ImGuiTextEditState	typeref:typename:float
Scrollbar	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Scrollbar(ImGuiLayoutType direction)$/;"	f	class:ImGui	typeref:typename:void
ScrollbarClickDeltaToGrabCenter	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollbarClickDeltaToGrabCenter;    \/\/ Distance between mouse and /;"	m	struct:ImGuiContext	typeref:typename:ImVec2
ScrollbarRounding	lib/cimgui/cimgui/cimgui.h	/^    float ScrollbarRounding;$/;"	m	struct:ImGuiStyle	typeref:typename:float
ScrollbarRounding	lib/cimgui/imgui/imgui.h	/^    float       ScrollbarRounding;          \/\/ Radius of grab corners for scrollbar.$/;"	m	struct:ImGuiStyle	typeref:typename:float
ScrollbarSize	lib/cimgui/cimgui/cimgui.h	/^    float ScrollbarSize;$/;"	m	struct:ImGuiStyle	typeref:typename:float
ScrollbarSize	lib/cimgui/imgui/imgui.h	/^    float       ScrollbarSize;              \/\/ Width of the vertical scrollbar, Height of the /;"	m	struct:ImGuiStyle	typeref:typename:float
ScrollbarSizes	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  ScrollbarSizes;$/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
ScrollbarX	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ScrollbarX, ScrollbarY;$/;"	m	struct:ImGuiWindow	typeref:typename:bool
ScrollbarY	lib/cimgui/imgui/imgui_internal.h	/^    bool                    ScrollbarX, ScrollbarY;$/;"	m	struct:ImGuiWindow	typeref:typename:bool
SelectAll	lib/cimgui/imgui/imgui_internal.h	/^    void                SelectAll()                 { StbState.select_start = 0; StbState.cursor/;"	f	struct:ImGuiTextEditState	typeref:typename:void
Selectable	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Selectable(const char* label, bool selected, ImGuiSelectableFlags flags, const ImVec/;"	f	class:ImGui	typeref:typename:bool
Selectable	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::Selectable(const char* label, bool* p_selected, ImGuiSelectableFlags flags, const Im/;"	f	class:ImGui	typeref:typename:bool
SelectedAllMouseLock	lib/cimgui/imgui/imgui_internal.h	/^    bool                SelectedAllMouseLock;$/;"	m	struct:ImGuiTextEditState	typeref:typename:bool
SelectionEnd	lib/cimgui/cimgui/cimgui.h	/^    int SelectionEnd;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
SelectionEnd	lib/cimgui/imgui/imgui.h	/^    int                 SelectionEnd;   \/\/                                      \/\/ Read-writ/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
SelectionStart	lib/cimgui/cimgui/cimgui.h	/^    int SelectionStart;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
SelectionStart	lib/cimgui/imgui/imgui.h	/^    int                 SelectionStart; \/\/                                      \/\/ Read-writ/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:int
Separator	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Separator()$/;"	f	class:ImGui	typeref:typename:void
SetActiveID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetActiveID(ImGuiID id, ImGuiWindow* window)$/;"	f	class:ImGui	typeref:typename:void
SetAllInt	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetAllInt(int v)$/;"	f	class:ImGuiStorage	typeref:typename:void
SetAllocatorFunctions	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetAllocatorFunctions(void* (*alloc_func)(size_t sz, void* user_data), void(*free_fu/;"	f	class:ImGui	typeref:typename:void
SetBit	lib/cimgui/imgui/imgui.h	/^        void           SetBit(int n)        { UsedChars[n >> 3] |= 1 << (n & 7); }  \/\/ Set bit/;"	f	struct:ImFontAtlas::GlyphRangesBuilder	typeref:typename:void
SetBool	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetBool(ImGuiID key, bool val)$/;"	f	class:ImGuiStorage	typeref:typename:void
SetClipboardText	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetClipboardText(const char* text)$/;"	f	class:ImGui	typeref:typename:void
SetClipboardTextFn	lib/cimgui/cimgui/cimgui.h	/^    void (*SetClipboardTextFn)(void *user_data, CONST char *text);$/;"	m	struct:ImGuiIO	typeref:typename:void (*)(void * user_data,CONST char * text)
SetClipboardTextFn	lib/cimgui/imgui/imgui.h	/^    void        (*SetClipboardTextFn)(void* user_data, const char* text);$/;"	m	struct:ImGuiIO	typeref:typename:void (*)(void * user_data,const char * text)
SetClipboardTextFn_DefaultImpl	lib/cimgui/imgui/imgui.cpp	/^static void SetClipboardTextFn_DefaultImpl(void*, const char* text)$/;"	f	typeref:typename:void	file:
SetColorEditOptions	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetColorEditOptions(ImGuiColorEditFlags flags)$/;"	f	class:ImGui	typeref:typename:void
SetColumnOffset	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetColumnOffset(int column_index, float offset)$/;"	f	class:ImGui	typeref:typename:void
SetColumnWidth	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetColumnWidth(int column_index, float width)$/;"	f	class:ImGui	typeref:typename:void
SetCurrentContext	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCurrentContext(ImGuiContext* ctx)$/;"	f	class:ImGui	typeref:typename:void
SetCurrentFont	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCurrentFont(ImFont* font)$/;"	f	class:ImGui	typeref:typename:void
SetCurrentWindow	lib/cimgui/imgui/imgui.cpp	/^static void SetCurrentWindow(ImGuiWindow* window)$/;"	f	typeref:typename:void	file:
SetCursorPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorPos(const ImVec2& local_pos)$/;"	f	class:ImGui	typeref:typename:void
SetCursorPosX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorPosX(float x)$/;"	f	class:ImGui	typeref:typename:void
SetCursorPosY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorPosY(float y)$/;"	f	class:ImGui	typeref:typename:void
SetCursorPosYAndSetupDummyPrevLine	lib/cimgui/imgui/imgui.cpp	/^static void SetCursorPosYAndSetupDummyPrevLine(float pos_y, float line_height)$/;"	f	typeref:typename:void	file:
SetCursorScreenPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetCursorScreenPos(const ImVec2& screen_pos)$/;"	f	class:ImGui	typeref:typename:void
SetDragDropPayload	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SetDragDropPayload(const char* type, const void* data, size_t data_size, ImGuiCond c/;"	f	class:ImGui	typeref:typename:bool
SetFallbackChar	lib/cimgui/imgui/imgui_draw.cpp	/^void ImFont::SetFallbackChar(ImWchar c)$/;"	f	class:ImFont	typeref:typename:void
SetFloat	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetFloat(ImGuiID key, float val)$/;"	f	class:ImGuiStorage	typeref:typename:void
SetFocusID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetFocusID(ImGuiID id, ImGuiWindow* window)$/;"	f	class:ImGui	typeref:typename:void
SetHSV	lib/cimgui/imgui/imgui.h	/^    inline void    SetHSV(float h, float s, float v, float a = 1.0f){ ImGui::ColorConvertHSVtoRG/;"	f	struct:ImColor	typeref:typename:void
SetHoveredID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetHoveredID(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:void
SetInt	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetInt(ImGuiID key, int val)$/;"	f	class:ImGuiStorage	typeref:typename:void
SetItemAllowOverlap	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetItemAllowOverlap()$/;"	f	class:ImGui	typeref:typename:void
SetItemDefaultFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetItemDefaultFocus()$/;"	f	class:ImGui	typeref:typename:void
SetKeyboardFocusHere	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetKeyboardFocusHere(int offset)$/;"	f	class:ImGui	typeref:typename:void
SetMouseCursor	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetMouseCursor(ImGuiMouseCursor cursor_type)$/;"	f	class:ImGui	typeref:typename:void
SetNavID	lib/cimgui/imgui/imgui.cpp	/^static void SetNavID(ImGuiID id, int nav_layer)$/;"	f	typeref:typename:void	file:
SetNavIDWithRectRel	lib/cimgui/imgui/imgui.cpp	/^static void SetNavIDWithRectRel(ImGuiID id, int nav_layer, const ImRect& rect_rel)$/;"	f	typeref:typename:void	file:
SetNextTreeNodeOpen	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextTreeNodeOpen(bool is_open, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetNextWindowBgAlpha	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowBgAlpha(float alpha)$/;"	f	class:ImGui	typeref:typename:void
SetNextWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowCollapsed(bool collapsed, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetNextWindowContentSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowContentSize(const ImVec2& size)$/;"	f	class:ImGui	typeref:typename:void
SetNextWindowContentWidth	lib/cimgui/imgui/imgui.h	/^    static inline void  SetNextWindowContentWidth(float w)    { SetNextWindowContentSize(ImVec2(/;"	f	namespace:ImGui	typeref:typename:void
SetNextWindowFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowFocus()$/;"	f	class:ImGui	typeref:typename:void
SetNextWindowPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowPos(const ImVec2& pos, ImGuiCond cond, const ImVec2& pivot)$/;"	f	class:ImGui	typeref:typename:void
SetNextWindowPosCenter	lib/cimgui/imgui/imgui.h	/^    static inline void  SetNextWindowPosCenter(ImGuiCond c=0) { ImGuiIO& io = GetIO(); SetNextWi/;"	f	namespace:ImGui	typeref:typename:void
SetNextWindowSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowSize(const ImVec2& size, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetNextWindowSizeConstraints	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetNextWindowSizeConstraints(const ImVec2& size_min, const ImVec2& size_max, ImGuiSi/;"	f	class:ImGui	typeref:typename:void
SetPixelHeight	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    void FreeTypeFont::SetPixelHeight(int pixel_height) $/;"	f	class:__anon71f5b57f0110::FreeTypeFont	typeref:typename:void
SetScrollFromPosY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollFromPosY(float pos_y, float center_y_ratio)$/;"	f	class:ImGui	typeref:typename:void
SetScrollHere	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollHere(float center_y_ratio)$/;"	f	class:ImGui	typeref:typename:void
SetScrollX	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollX(float scroll_x)$/;"	f	class:ImGui	typeref:typename:void
SetScrollY	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetScrollY(float scroll_y)$/;"	f	class:ImGui	typeref:typename:void
SetStateStorage	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetStateStorage(ImGuiStorage* tree)$/;"	f	class:ImGui	typeref:typename:void
SetTexID	lib/cimgui/imgui/imgui.h	/^    void                        SetTexID(ImTextureID id)    { TexID = id; }$/;"	f	struct:ImFontAtlas	typeref:typename:void
SetTooltip	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetTooltip(const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
SetTooltipV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetTooltipV(const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:void
SetVoidPtr	lib/cimgui/imgui/imgui.cpp	/^void ImGuiStorage::SetVoidPtr(ImGuiID key, void* val)$/;"	f	class:ImGuiStorage	typeref:typename:void
SetWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^static void SetWindowCollapsed(ImGuiWindow* window, bool collapsed, ImGuiCond cond)$/;"	f	typeref:typename:void	file:
SetWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowCollapsed(bool collapsed, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetWindowCollapsed	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowCollapsed(const char* name, bool collapsed, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetWindowCollapsedAllowFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SetWindowCollapsedAllowFlags;       \/\/ store condition flags for n/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiCond
SetWindowConditionAllowFlags	lib/cimgui/imgui/imgui.cpp	/^static void SetWindowConditionAllowFlags(ImGuiWindow* window, ImGuiCond flags, bool enabled)$/;"	f	typeref:typename:void	file:
SetWindowFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowFocus()$/;"	f	class:ImGui	typeref:typename:void
SetWindowFocus	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowFocus(const char* name)$/;"	f	class:ImGui	typeref:typename:void
SetWindowFontScale	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowFontScale(float scale)$/;"	f	class:ImGui	typeref:typename:void
SetWindowPos	lib/cimgui/imgui/imgui.cpp	/^static void SetWindowPos(ImGuiWindow* window, const ImVec2& pos, ImGuiCond cond)$/;"	f	typeref:typename:void	file:
SetWindowPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowPos(const ImVec2& pos, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetWindowPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowPos(const char* name, const ImVec2& pos, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetWindowPosAllowFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SetWindowPosAllowFlags;             \/\/ store condition flags for n/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiCond
SetWindowPosPivot	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SetWindowPosPivot;                  \/\/ store window pivot for posi/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
SetWindowPosVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SetWindowPosVal;                    \/\/ store window position when /;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
SetWindowScrollX	lib/cimgui/imgui/imgui.cpp	/^static void SetWindowScrollX(ImGuiWindow* window, float new_scroll_x)$/;"	f	typeref:typename:void	file:
SetWindowScrollY	lib/cimgui/imgui/imgui.cpp	/^static void SetWindowScrollY(ImGuiWindow* window, float new_scroll_y)$/;"	f	typeref:typename:void	file:
SetWindowSize	lib/cimgui/imgui/imgui.cpp	/^static void SetWindowSize(ImGuiWindow* window, const ImVec2& size, ImGuiCond cond)$/;"	f	typeref:typename:void	file:
SetWindowSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowSize(const ImVec2& size, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetWindowSize	lib/cimgui/imgui/imgui.cpp	/^void ImGui::SetWindowSize(const char* name, const ImVec2& size, ImGuiCond cond)$/;"	f	class:ImGui	typeref:typename:void
SetWindowSizeAllowFlags	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SetWindowSizeAllowFlags;            \/\/ store condition flags for n/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiCond
SettingsDirtyTimer	lib/cimgui/imgui/imgui_internal.h	/^    float                          SettingsDirtyTimer;          \/\/ Save .ini Settings on disk /;"	m	struct:ImGuiContext	typeref:typename:float
SettingsHandlerWindow_ReadLine	lib/cimgui/imgui/imgui.cpp	/^static void SettingsHandlerWindow_ReadLine(ImGuiContext*, ImGuiSettingsHandler*, void* entry, co/;"	f	typeref:typename:void	file:
SettingsHandlerWindow_ReadOpen	lib/cimgui/imgui/imgui.cpp	/^static void* SettingsHandlerWindow_ReadOpen(ImGuiContext*, ImGuiSettingsHandler*, const char* na/;"	f	typeref:typename:void *	file:
SettingsHandlerWindow_WriteAll	lib/cimgui/imgui/imgui.cpp	/^static void SettingsHandlerWindow_WriteAll(ImGuiContext* imgui_ctx, ImGuiSettingsHandler* handle/;"	f	typeref:typename:void	file:
SettingsHandlers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiSettingsHandler> SettingsHandlers;            \/\/ List of .ini settings handl/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiSettingsHandler>
SettingsLoaded	lib/cimgui/imgui/imgui_internal.h	/^    bool                           SettingsLoaded;$/;"	m	struct:ImGuiContext	typeref:typename:bool
SettingsWindows	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindowSettings>  SettingsWindows;             \/\/ .ini settings for ImGuiWind/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiWindowSettings>
SetupDrawData	lib/cimgui/imgui/imgui.cpp	/^static void SetupDrawData(ImVector<ImDrawList*>* draw_lists, ImDrawData* out_draw_data)$/;"	f	typeref:typename:void	file:
ShadeVertsLinearAlphaGradientForLeftToRightText	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::ShadeVertsLinearAlphaGradientForLeftToRightText(ImDrawVert* vert_start, ImDrawVert* /;"	f	class:ImGui	typeref:typename:void
ShadeVertsLinearColorGradientKeepAlpha	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::ShadeVertsLinearColorGradientKeepAlpha(ImDrawVert* vert_start, ImDrawVert* vert_end,/;"	f	class:ImGui	typeref:typename:void
ShadeVertsLinearUV	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::ShadeVertsLinearUV(ImDrawVert* vert_start, ImDrawVert* vert_end, const ImVec2& a, co/;"	f	class:ImGui	typeref:typename:void
Shader	src/Shader.h	/^} Shader;$/;"	t	typeref:struct:__anon74bd45490108
Shape	src/Shape.h	/^struct Shape {$/;"	s
Shape	src/Shape.h	/^typedef struct Shape Shape;$/;"	t	typeref:struct:Shape
ShowDemoWindow	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowDemoWindow(bool* p_open)$/;"	f	class:ImGui	typeref:typename:void
ShowDemoWindow	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowDemoWindow(bool*) {}$/;"	f	class:ImGui	typeref:typename:void
ShowDummyObject	lib/cimgui/imgui/imgui_demo.cpp	/^        static void ShowDummyObject(const char* prefix, int uid)$/;"	f	struct:ShowExampleAppPropertyEditor::funcs	typeref:typename:void	file:
ShowExampleAppAutoResize	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppAutoResize(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppConsole(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppConstrainedResize	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppConstrainedResize(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppCustomRendering	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppCustomRendering(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppFixedOverlay	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppFixedOverlay(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppLayout	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppLayout(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppLog	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppLog(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppLongText	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppLongText(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppMainMenuBar	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppMainMenuBar()$/;"	f	typeref:typename:void	file:
ShowExampleAppPropertyEditor	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppPropertyEditor(bool* p_open)$/;"	f	typeref:typename:void	file:
ShowExampleAppWindowTitles	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleAppWindowTitles(bool*)$/;"	f	typeref:typename:void	file:
ShowExampleMenuFile	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowExampleMenuFile()$/;"	f	typeref:typename:void	file:
ShowFontSelector	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowFontSelector(const char* label)$/;"	f	class:ImGui	typeref:typename:void
ShowHelpMarker	lib/cimgui/imgui/imgui_demo.cpp	/^static void ShowHelpMarker(const char* desc)$/;"	f	typeref:typename:void	file:
ShowMetricsWindow	lib/cimgui/imgui/imgui.cpp	/^void ImGui::ShowMetricsWindow(bool* p_open)$/;"	f	class:ImGui	typeref:typename:void
ShowStyleEditor	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowStyleEditor(ImGuiStyle* ref)$/;"	f	class:ImGui	typeref:typename:void
ShowStyleEditor	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowStyleEditor(ImGuiStyle*) {}$/;"	f	class:ImGui	typeref:typename:void
ShowStyleSelector	lib/cimgui/imgui/imgui_demo.cpp	/^bool ImGui::ShowStyleSelector(const char* label)$/;"	f	class:ImGui	typeref:typename:bool
ShowTestWindow	lib/cimgui/imgui/imgui.h	/^    static inline void  ShowTestWindow()                      { return ShowDemoWindow(); }$/;"	f	namespace:ImGui	typeref:typename:void
ShowUserGuide	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowUserGuide() {}$/;"	f	class:ImGui	typeref:typename:void
ShowUserGuide	lib/cimgui/imgui/imgui_demo.cpp	/^void ImGui::ShowUserGuide()$/;"	f	class:ImGui	typeref:typename:void
Shutdown	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Shutdown(ImGuiContext* context)$/;"	f	class:ImGui	typeref:typename:void
Shutdown	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^    void FreeTypeFont::Shutdown()$/;"	f	class:__anon71f5b57f0110::FreeTypeFont	typeref:typename:void
Sin	lib/cimgui/imgui/imgui_demo.cpp	/^                static float Sin(void*, int i) { return sinf(i * 0.1f); }$/;"	f	struct:ImGui::ShowDemoWindow::Funcs	typeref:typename:float	file:
Size	bin/imgui.ini	/^Size=216,239$/;"	k	section:Window
Size	bin/imgui.ini	/^Size=279,348$/;"	k	section:Window
Size	bin/imgui.ini	/^Size=400,400$/;"	k	section:Window
Size	bin/imgui.ini	/^Size=520,600$/;"	k	section:Window
Size	bin/imgui.ini	/^Size=537,503$/;"	k	section:Window
Size	lib/cimgui/imgui/imgui.h	/^    int                         Size;$/;"	m	class:ImVector	typeref:typename:int
Size	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  Size;                               \/\/ Current size (==SizeFull or/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
Size	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2      Size;$/;"	m	struct:ImGuiWindowSettings	typeref:typename:ImVec2
SizeCallback	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiSizeCallback       SizeCallback;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiSizeCallback
SizeCallbackUserData	lib/cimgui/imgui/imgui_internal.h	/^    void*                   SizeCallbackUserData;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:void *
SizeCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SizeCond;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiCond
SizeConstraintCond	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiCond               SizeConstraintCond;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImGuiCond
SizeConstraintRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  SizeConstraintRect;                 \/\/ Valid if 'SetNextWindowSize/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImRect
SizeContents	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SizeContents;                       \/\/ Size of contents (== extent/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
SizeContentsExplicit	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SizeContentsExplicit;               \/\/ Size of contents explicitly/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
SizeFull	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SizeFull;                           \/\/ Size when non collapsed$/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
SizeFullAtLastBegin	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SizeFullAtLastBegin;                \/\/ Copy of SizeFull at the end/;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
SizePixels	lib/cimgui/cimgui/cimgui.h	/^    float SizePixels;$/;"	m	struct:ImFontConfig	typeref:typename:float
SizePixels	lib/cimgui/imgui/imgui.h	/^    float           SizePixels;             \/\/          \/\/ Size in pixels for rasterizer.$/;"	m	struct:ImFontConfig	typeref:typename:float
SizeVal	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  SizeVal;$/;"	m	struct:ImGuiNextWindowData	typeref:typename:ImVec2
SkipItems	lib/cimgui/imgui/imgui_internal.h	/^    bool                    SkipItems;                          \/\/ Set when items can safely b/;"	m	struct:ImGuiWindow	typeref:typename:bool
SliderAngle	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderAngle(const char* label, float* v_rad, float v_degrees_min, float v_degrees_ma/;"	f	class:ImGui	typeref:typename:bool
SliderBehavior	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderBehavior(const ImRect& frame_bb, ImGuiID id, float* v, float v_min, float v_ma/;"	f	class:ImGui	typeref:typename:bool
SliderBehaviorCalcRatioFromValue	lib/cimgui/imgui/imgui.cpp	/^static inline float SliderBehaviorCalcRatioFromValue(float v, float v_min, float v_max, float po/;"	f	typeref:typename:float	file:
SliderFloat	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderFloat(const char* label, float* v, float v_min, float v_max, const char* displ/;"	f	class:ImGui	typeref:typename:bool
SliderFloat2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderFloat2(const char* label, float v[2], float v_min, float v_max, const char* di/;"	f	class:ImGui	typeref:typename:bool
SliderFloat3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderFloat3(const char* label, float v[3], float v_min, float v_max, const char* di/;"	f	class:ImGui	typeref:typename:bool
SliderFloat4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderFloat4(const char* label, float v[4], float v_min, float v_max, const char* di/;"	f	class:ImGui	typeref:typename:bool
SliderFloatN	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderFloatN(const char* label, float* v, int components, float v_min, float v_max, /;"	f	class:ImGui	typeref:typename:bool
SliderInt	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderInt(const char* label, int* v, int v_min, int v_max, const char* display_forma/;"	f	class:ImGui	typeref:typename:bool
SliderInt2	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderInt2(const char* label, int v[2], int v_min, int v_max, const char* display_fo/;"	f	class:ImGui	typeref:typename:bool
SliderInt3	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderInt3(const char* label, int v[3], int v_min, int v_max, const char* display_fo/;"	f	class:ImGui	typeref:typename:bool
SliderInt4	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderInt4(const char* label, int v[4], int v_min, int v_max, const char* display_fo/;"	f	class:ImGui	typeref:typename:bool
SliderIntN	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SliderIntN(const char* label, int* v, int components, int v_min, int v_max, const ch/;"	f	class:ImGui	typeref:typename:bool
SmallButton	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SmallButton(const char* label)$/;"	f	class:ImGui	typeref:typename:bool
SmoothingMode	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} SmoothingMode;$/;"	t	typeref:enum:__anon66f154fe0403
SmoothingModeAntiAlias	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeAntiAlias,$/;"	e	enum:__anon66f154fe0403
SmoothingModeAntiAlias8x4	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeAntiAlias8x4 = SmoothingModeAntiAlias,$/;"	e	enum:__anon66f154fe0403
SmoothingModeAntiAlias8x8	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeAntiAlias8x8$/;"	e	enum:__anon66f154fe0403
SmoothingModeDefault	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeDefault     = QualityModeDefault,$/;"	e	enum:__anon66f154fe0403
SmoothingModeHighQuality	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeHighQuality = QualityModeHigh,$/;"	e	enum:__anon66f154fe0403
SmoothingModeHighSpeed	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeHighSpeed   = QualityModeLow,$/;"	e	enum:__anon66f154fe0403
SmoothingModeInvalid	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeInvalid     = QualityModeInvalid,$/;"	e	enum:__anon66f154fe0403
SmoothingModeNone	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    SmoothingModeNone,$/;"	e	enum:__anon66f154fe0403
SourceId	lib/cimgui/cimgui/cimgui.h	/^    ImGuiID SourceId;$/;"	m	struct:ImGuiPayload	typeref:typename:ImGuiID
SourceId	lib/cimgui/imgui/imgui.h	/^    ImGuiID         SourceId;           \/\/ Source item id$/;"	m	struct:ImGuiPayload	typeref:typename:ImGuiID
SourceParentId	lib/cimgui/cimgui/cimgui.h	/^    ImGuiID SourceParentId;$/;"	m	struct:ImGuiPayload	typeref:typename:ImGuiID
SourceParentId	lib/cimgui/imgui/imgui.h	/^    ImGuiID         SourceParentId;     \/\/ Source parent id (if available)$/;"	m	struct:ImGuiPayload	typeref:typename:ImGuiID
Spacing	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Spacing()$/;"	f	class:ImGui	typeref:typename:void
Spacing	lib/cimgui/imgui/imgui_internal.h	/^    float       Spacing;$/;"	m	struct:ImGuiMenuColumns	typeref:typename:float
SplitterBehavior	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::SplitterBehavior(ImGuiID id, const ImRect& bb, ImGuiAxis axis, float* size1, float* /;"	f	class:ImGui	typeref:typename:bool
Square	lib/cimgui/imgui/imgui_demo.cpp	/^        static void Square(ImGuiSizeCallbackData* data) { data->DesiredSize = ImVec2(IM_MAX(data/;"	f	struct:ShowExampleAppConstrainedResize::CustomConstraints	typeref:typename:void	file:
StackSizesBackup	lib/cimgui/imgui/imgui_internal.h	/^    int                     StackSizesBackup[6];    \/\/ Store size of various stacks for assert/;"	m	struct:ImGuiDrawContext	typeref:typename:int[6]
Start	src/Shader.c	/^Start(Shader* shader) {$/;"	f	typeref:typename:void	file:
Start	src/Shader.h	/^   void    (*Start  )(Shader*);$/;"	m	struct:AShader	typeref:typename:void (*)(Shader *)
StartMaxPosX	lib/cimgui/imgui/imgui_internal.h	/^    float               StartMaxPosX;       \/\/ Copy of CursorMaxPos$/;"	m	struct:ImGuiColumnsSet	typeref:typename:float
StartPosY	lib/cimgui/cimgui/cimgui.h	/^    float StartPosY;$/;"	m	struct:ImGuiListClipper	typeref:typename:float
StartPosY	lib/cimgui/imgui/imgui.h	/^    float   StartPosY;$/;"	m	struct:ImGuiListClipper	typeref:typename:float
StartPosY	lib/cimgui/imgui/imgui_internal.h	/^    float               StartPosY;          \/\/ Copy of CursorPos$/;"	m	struct:ImGuiColumnsSet	typeref:typename:float
StateStorage	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStorage            StateStorage;$/;"	m	struct:ImGuiWindow	typeref:typename:ImGuiStorage
StateStorage	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStorage*           StateStorage;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImGuiStorage *
StaticFunc	lib/cimgui/imgui/imgui.cpp	/^    struct StaticFunc $/;"	s	function:ImGuiStorage::BuildSortByKey	file:
Status	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef int Status;$/;"	t	typeref:typename:int
StbFindState	lib/cimgui/imgui/stb_textedit.h	/^} StbFindState;$/;"	t	typeref:struct:__anonfd61af4b0508
StbState	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStb::STB_TexteditState   StbState;$/;"	m	struct:ImGuiTextEditState	typeref:typename:ImGuiStb::STB_TexteditState
StbTexteditRow	lib/cimgui/imgui/stb_textedit.h	/^} StbTexteditRow;$/;"	t	typeref:struct:__anonfd61af4b0408
StbUndoRecord	lib/cimgui/imgui/stb_textedit.h	/^} StbUndoRecord;$/;"	t	typeref:struct:__anonfd61af4b0108
StbUndoState	lib/cimgui/imgui/stb_textedit.h	/^} StbUndoState;$/;"	t	typeref:struct:__anonfd61af4b0208
StencilRef	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        UINT                        StencilRef;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:UINT	file:
StencilRef	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        StencilRef;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
Step	lib/cimgui/imgui/imgui.cpp	/^bool ImGuiListClipper::Step()$/;"	f	class:ImGuiListClipper	typeref:typename:bool
Step	lib/cimgui/imgui/imgui_demo.cpp	/^        static void Step(ImGuiSizeCallbackData* data)   { float step = (float)(int)(intptr_t)dat/;"	f	struct:ShowExampleAppConstrainedResize::CustomConstraints	typeref:typename:void	file:
StepNo	lib/cimgui/cimgui/cimgui.h	/^    int ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
StepNo	lib/cimgui/imgui/imgui.h	/^    int     ItemsCount, StepNo, DisplayStart, DisplayEnd;$/;"	m	struct:ImGuiListClipper	typeref:typename:int
Stop	src/Shader.c	/^Stop(Shader* shader) {$/;"	f	typeref:typename:void	file:
Stop	src/Shader.h	/^   void    (*Stop   )(Shader*);$/;"	m	struct:AShader	typeref:typename:void (*)(Shader *)
Strdup	lib/cimgui/imgui/imgui_demo.cpp	/^    static char* Strdup(const char *str)                             { size_t len = strlen(str) /;"	f	struct:ExampleAppConsole	typeref:typename:char *	file:
Stricmp	lib/cimgui/imgui/imgui_demo.cpp	/^    static int   Stricmp(const char* str1, const char* str2)         { int d; while ((d = touppe/;"	f	struct:ExampleAppConsole	typeref:typename:int	file:
Stride	lib/cimgui/imgui/imgui.cpp	/^    int Stride;$/;"	m	struct:ImGuiPlotArrayGetterData	typeref:typename:int	file:
StringFormatFlags	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} StringFormatFlags;$/;"	t	typeref:enum:__anon66f154fe0203
StringFormatFlagsDirectionRightToLeft	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsDirectionRightToLeft    = 0x00000001,$/;"	e	enum:__anon66f154fe0203
StringFormatFlagsDirectionVertical	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsDirectionVertical       = 0x00000002,$/;"	e	enum:__anon66f154fe0203
StringFormatFlagsDisplayFormatControl	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsDisplayFormatControl    = 0x00000020,$/;"	e	enum:__anon66f154fe0203
StringFormatFlagsLineLimit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsLineLimit               = 0x00002000,$/;"	e	enum:__anon66f154fe0203
StringFormatFlagsMeasureTrailingSpaces	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsMeasureTrailingSpaces   = 0x00000800,$/;"	e	enum:__anon66f154fe0203
StringFormatFlagsNoClip	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoClip                  = 0x00004000 $/;"	e	enum:__anon66f154fe0203
StringFormatFlagsNoFitBlackBox	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoFitBlackBox           = 0x00000004,$/;"	e	enum:__anon66f154fe0203
StringFormatFlagsNoFontFallback	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoFontFallback          = 0x00000400,$/;"	e	enum:__anon66f154fe0203
StringFormatFlagsNoWrap	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    StringFormatFlagsNoWrap                  = 0x00001000,$/;"	e	enum:__anon66f154fe0203
Strnicmp	lib/cimgui/imgui/imgui_demo.cpp	/^    static int   Strnicmp(const char* str1, const char* str2, int n) { int d = 0; while (n > 0 &/;"	f	struct:ExampleAppConsole	typeref:typename:int	file:
Style	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyle              Style;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiStyle
StyleColorsClassic	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::StyleColorsClassic(ImGuiStyle* dst)$/;"	f	class:ImGui	typeref:typename:void
StyleColorsDark	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::StyleColorsDark(ImGuiStyle* dst)$/;"	f	class:ImGui	typeref:typename:void
StyleColorsLight	lib/cimgui/imgui/imgui_draw.cpp	/^void ImGui::StyleColorsLight(ImGuiStyle* dst)$/;"	f	class:ImGui	typeref:typename:void
StyleModifiers	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiStyleMod> StyleModifiers;                     \/\/ Stack for PushStyleVar()\/P/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiStyleMod>
SuppressBackgroundThread	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    BOOL SuppressBackgroundThread;$/;"	m	struct:__anon66f154fe0b08	typeref:typename:BOOL
SuppressExternalCodecs	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    BOOL SuppressExternalCodecs;$/;"	m	struct:__anon66f154fe0b08	typeref:typename:BOOL
THEME_BLACK	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_BLUE	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_DARK	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_RED	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
THEME_WHITE	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	e	enum:theme	file:
TempBuffer	lib/cimgui/imgui/imgui_internal.h	/^    char                    TempBuffer[1024*3+1];               \/\/ temporary text buffer$/;"	m	struct:ImGuiContext	typeref:typename:char[]
TempTextBuffer	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<char>      TempTextBuffer;$/;"	m	struct:ImGuiTextEditState	typeref:typename:ImVector<char>
TexDesiredWidth	lib/cimgui/imgui/imgui.h	/^    int                         TexDesiredWidth;    \/\/ Texture width desired by user before Bu/;"	m	struct:ImFontAtlas	typeref:typename:int
TexGlyphPadding	lib/cimgui/imgui/imgui.h	/^    int                         TexGlyphPadding;    \/\/ Padding between glyphs within texture i/;"	m	struct:ImFontAtlas	typeref:typename:int
TexHeight	lib/cimgui/imgui/imgui.h	/^    int                         TexHeight;          \/\/ Texture height calculated during Build(/;"	m	struct:ImFontAtlas	typeref:typename:int
TexID	lib/cimgui/imgui/imgui.h	/^    ImTextureID                 TexID;              \/\/ User data to refer to the texture once /;"	m	struct:ImFontAtlas	typeref:typename:ImTextureID
TexPixelsAlpha8	lib/cimgui/imgui/imgui.h	/^    unsigned char*              TexPixelsAlpha8;    \/\/ 1 component per pixel, each component i/;"	m	struct:ImFontAtlas	typeref:typename:unsigned char *
TexPixelsRGBA32	lib/cimgui/imgui/imgui.h	/^    unsigned int*               TexPixelsRGBA32;    \/\/ 4 component per pixel, each component i/;"	m	struct:ImFontAtlas	typeref:typename:unsigned int *
TexUvScale	lib/cimgui/imgui/imgui.h	/^    ImVec2                      TexUvScale;         \/\/ = (1.0f\/TexWidth, 1.0f\/TexHeight)$/;"	m	struct:ImFontAtlas	typeref:typename:ImVec2
TexUvWhitePixel	lib/cimgui/imgui/imgui.h	/^    ImVec2                      TexUvWhitePixel;    \/\/ Texture coordinates to a white pixel$/;"	m	struct:ImFontAtlas	typeref:typename:ImVec2
TexUvWhitePixel	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2          TexUvWhitePixel;            \/\/ UV of white pixel in the atlas$/;"	m	struct:ImDrawListSharedData	typeref:typename:ImVec2
TexWidth	lib/cimgui/imgui/imgui.h	/^    int                         TexWidth;           \/\/ Texture width calculated during Build()/;"	m	struct:ImFontAtlas	typeref:typename:int
Text	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Text(const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
Text	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImWchar>   Text;                       \/\/ edit buffer, we need to persist but can/;"	m	struct:ImGuiTextEditState	typeref:typename:ImVector<ImWchar>
TextColored	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextColored(const ImVec4& col, const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
TextColoredV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextColoredV(const ImVec4& col, const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:void
TextDisabled	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextDisabled(const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
TextDisabledV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextDisabledV(const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:void
TextEditCallback	lib/cimgui/imgui/imgui_demo.cpp	/^    int     TextEditCallback(ImGuiTextEditCallbackData* data)$/;"	f	struct:ExampleAppConsole	typeref:typename:int	file:
TextEditCallbackStub	lib/cimgui/imgui/imgui_demo.cpp	/^    static int TextEditCallbackStub(ImGuiTextEditCallbackData* data) \/\/ In C++11 you are bette/;"	f	struct:ExampleAppConsole	typeref:typename:int	file:
TextFilters	lib/cimgui/imgui/imgui_demo.cpp	/^            struct TextFilters { static int FilterImGuiLetters(ImGuiTextEditCallbackData* data) /;"	s	function:ImGui::ShowDemoWindow	file:
TextRange	lib/cimgui/imgui/imgui.h	/^        TextRange() { b = e = NULL; }$/;"	f	struct:ImGuiTextFilter::TextRange
TextRange	lib/cimgui/imgui/imgui.h	/^        TextRange(const char* _b, const char* _e) { b = _b; e = _e; }$/;"	f	struct:ImGuiTextFilter::TextRange
TextRange	lib/cimgui/imgui/imgui.h	/^    struct TextRange$/;"	s	struct:ImGuiTextFilter
TextRenderingHint	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} TextRenderingHint;$/;"	t	typeref:enum:__anon66f154fe0103
TextRenderingHintAntiAlias	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintAntiAlias = 4,$/;"	e	enum:__anon66f154fe0103
TextRenderingHintAntiAliasGridFit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintAntiAliasGridFit = 3,$/;"	e	enum:__anon66f154fe0103
TextRenderingHintClearTypeGridFit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintClearTypeGridFit = 5$/;"	e	enum:__anon66f154fe0103
TextRenderingHintSingleBitPerPixel	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintSingleBitPerPixel = 2,$/;"	e	enum:__anon66f154fe0103
TextRenderingHintSingleBitPerPixelGridFit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintSingleBitPerPixelGridFit = 1,$/;"	e	enum:__anon66f154fe0103
TextRenderingHintSystemDefault	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    TextRenderingHintSystemDefault = 0,$/;"	e	enum:__anon66f154fe0103
TextUnformatted	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextUnformatted(const char* text, const char* text_end)$/;"	f	class:ImGui	typeref:typename:void
TextV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextV(const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:void
TextWrapPos	lib/cimgui/imgui/imgui_internal.h	/^    float                   TextWrapPos;            \/\/ == TextWrapPosStack.back() [empty == -1/;"	m	struct:ImGuiDrawContext	typeref:typename:float
TextWrapPosStack	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<float>         TextWrapPosStack;$/;"	m	struct:ImGuiDrawContext	typeref:typename:ImVector<float>
TextWrapped	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextWrapped(const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:void
TextWrappedV	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TextWrappedV(const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:void
TextureId	lib/cimgui/cimgui/cimgui.h	/^    ImTextureID TextureId;$/;"	m	struct:ImDrawCmd	typeref:typename:ImTextureID
TextureId	lib/cimgui/imgui/imgui.h	/^    ImTextureID     TextureId;              \/\/ User-provided texture ID. Set by user in Imfont/;"	m	struct:ImDrawCmd	typeref:typename:ImTextureID
Time	lib/cimgui/imgui/imgui_internal.h	/^    float                   Time;$/;"	m	struct:ImGuiContext	typeref:typename:float
TitleBarHeight	lib/cimgui/imgui/imgui_internal.h	/^    float       TitleBarHeight() const                  { return (Flags & ImGuiWindowFlags_NoTit/;"	f	struct:ImGuiWindow	typeref:typename:float
TitleBarRect	lib/cimgui/imgui/imgui_internal.h	/^    ImRect      TitleBarRect() const                    { return ImRect(Pos, ImVec2(Pos.x + Size/;"	f	struct:ImGuiWindow	typeref:typename:ImRect
TooltipOverrideCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     TooltipOverrideCount;$/;"	m	struct:ImGuiContext	typeref:typename:int
TotalIdxCount	lib/cimgui/cimgui/cimgui.h	/^    int TotalIdxCount;$/;"	m	struct:ImDrawData	typeref:typename:int
TotalIdxCount	lib/cimgui/imgui/imgui.h	/^    int             TotalIdxCount;          \/\/ For convenience, sum of all ImDrawList's IdxBuf/;"	m	struct:ImDrawData	typeref:typename:int
TotalVtxCount	lib/cimgui/cimgui/cimgui.h	/^    int TotalVtxCount;$/;"	m	struct:ImDrawData	typeref:typename:int
TotalVtxCount	lib/cimgui/imgui/imgui.h	/^    int             TotalVtxCount;          \/\/ For convenience, sum of all ImDrawList's VtxBuf/;"	m	struct:ImDrawData	typeref:typename:int
TouchExtraPadding	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 TouchExtraPadding;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
TouchExtraPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      TouchExtraPadding;          \/\/ Expand reactive bounding box for touch-based sy/;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
Translate	lib/cimgui/imgui/imgui_internal.h	/^    void        Translate(const ImVec2& v)          { Min.x += v.x; Min.y += v.y; Max.x += v.x; /;"	f	struct:ImRect	typeref:typename:void
TreeAdvanceToLabelPos	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TreeAdvanceToLabelPos()$/;"	f	class:ImGui	typeref:typename:void
TreeDepth	lib/cimgui/imgui/imgui_internal.h	/^    int                     TreeDepth;$/;"	m	struct:ImGuiDrawContext	typeref:typename:int
TreeDepthMayJumpToParentOnPop	lib/cimgui/imgui/imgui_internal.h	/^    ImU32                   TreeDepthMayJumpToParentOnPop; \/\/ Store a copy of !g.NavIdIsAlive /;"	m	struct:ImGuiDrawContext	typeref:typename:ImU32
TreeNode	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNode(const char* label)$/;"	f	class:ImGui	typeref:typename:bool
TreeNode	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNode(const char* str_id, const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:bool
TreeNode	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNode(const void* ptr_id, const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:bool
TreeNodeBehavior	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeBehavior(ImGuiID id, ImGuiTreeNodeFlags flags, const char* label, const char/;"	f	class:ImGui	typeref:typename:bool
TreeNodeBehaviorIsOpen	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeBehaviorIsOpen(ImGuiID id, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
TreeNodeEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeEx(const char* label, ImGuiTreeNodeFlags flags)$/;"	f	class:ImGui	typeref:typename:bool
TreeNodeEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeEx(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:bool
TreeNodeEx	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeEx(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, ...)$/;"	f	class:ImGui	typeref:typename:bool
TreeNodeExV	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeExV(const char* str_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list a/;"	f	class:ImGui	typeref:typename:bool
TreeNodeExV	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeExV(const void* ptr_id, ImGuiTreeNodeFlags flags, const char* fmt, va_list a/;"	f	class:ImGui	typeref:typename:bool
TreeNodeV	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeV(const char* str_id, const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:bool
TreeNodeV	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::TreeNodeV(const void* ptr_id, const char* fmt, va_list args)$/;"	f	class:ImGui	typeref:typename:bool
TreePop	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TreePop()$/;"	f	class:ImGui	typeref:typename:void
TreePush	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TreePush(const char* str_id)$/;"	f	class:ImGui	typeref:typename:void
TreePush	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TreePush(const void* ptr_id)$/;"	f	class:ImGui	typeref:typename:void
TreePushRawID	lib/cimgui/imgui/imgui.cpp	/^void ImGui::TreePushRawID(ImGuiID id)$/;"	f	class:ImGui	typeref:typename:void
Type	lib/cimgui/imgui/imgui.cpp	/^    ImGuiDataType   Type;$/;"	m	struct:ImGuiStyleVarInfo	typeref:typename:ImGuiDataType	file:
TypeHash	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiID     TypeHash;   \/\/ == ImHash(TypeName, 0, 0)$/;"	m	struct:ImGuiSettingsHandler	typeref:typename:ImGuiID
TypeName	lib/cimgui/imgui/imgui_internal.h	/^    const char* TypeName;   \/\/ Short description stored in .ini file. Disallowed characters: '/;"	m	struct:ImGuiSettingsHandler	typeref:typename:const char *
U0	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph	typeref:typename:float
U1	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph	typeref:typename:float
UILaunchStoryboardName	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>UILaunchStoryboardName<\/key>$/;"	k
UIMainStoryboardFile	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>UIMainStoryboardFile<\/key>$/;"	k
UIRequiredDeviceCapabilities	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>UIRequiredDeviceCapabilities<\/key>$/;"	k
UIStatusBarHidden	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>UIStatusBarHidden<\/key>$/;"	k
UISupportedInterfaceOrientations	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>UISupportedInterfaceOrientations<\/key>$/;"	k
UISupportedInterfaceOrientations~ipad	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Info.plist	/^	<key>UISupportedInterfaceOrientations~ipad<\/key>$/;"	k
UNAME_S	lib/cimgui/cimgui/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/glfw_opengl2/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/glfw_opengl3/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/glfw_opengl4/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sdl_opengl2/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sdl_opengl3/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sdl_opengles2/Makefile	/^UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sfml_opengl2/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/demo/sfml_opengl3/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/doc/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNAME_S	lib/nuklear/example/Makefile	/^	UNAME_S := $(shell uname -s)$/;"	m
UNLIKELY	lib/klib/ksw.c	/^#define UNLIKELY(/;"	d	file:
UNUSED	lib/nuklear/demo/allegro5/main.c	/^#define UNUSED(/;"	d	file:
UNUSED	lib/nuklear/demo/sdl_opengles2/main.c	/^#define UNUSED(/;"	d	file:
UNUSED	lib/nuklear/demo/x11_rawfb/main.c	/^#define UNUSED(/;"	d	file:
UNUSED	lib/nuklear/example/canvas.c	/^#define UNUSED(/;"	d	file:
UNUSED	lib/nuklear/example/extended.c	/^#define UNUSED(/;"	d	file:
UNUSED	lib/nuklear/example/file_browser.c	/^#define UNUSED(/;"	d	file:
UNUSED	lib/nuklear/example/skinning.c	/^#define UNUSED(/;"	d	file:
USYNERGY_CLIPBOARD_FORMAT_BITMAP	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	USYNERGY_CLIPBOARD_FORMAT_BITMAP				= 1,			\/* Bitmap format, BMP 24\/32bpp, BI_RGB *\/$/;"	e	enum:uSynergyClipboardFormat
USYNERGY_CLIPBOARD_FORMAT_HTML	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	USYNERGY_CLIPBOARD_FORMAT_HTML					= 2,			\/* HTML format, HTML fragment, UTF-8, newline is LF /;"	e	enum:uSynergyClipboardFormat
USYNERGY_CLIPBOARD_FORMAT_TEXT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	USYNERGY_CLIPBOARD_FORMAT_TEXT					= 0,			\/* Text format, UTF-8, newline is LF *\/$/;"	e	enum:uSynergyClipboardFormat
USYNERGY_FALSE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_FALSE	/;"	d
USYNERGY_IDLE_TIMEOUT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_IDLE_TIMEOUT	/;"	d
USYNERGY_IS_PACKET	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^#define USYNERGY_IS_PACKET(/;"	d	file:
USYNERGY_MODIFIER_ALT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_ALT	/;"	d
USYNERGY_MODIFIER_ALT_GR	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_ALT_GR	/;"	d
USYNERGY_MODIFIER_CAPSLOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_CAPSLOCK	/;"	d
USYNERGY_MODIFIER_CTRL	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_CTRL	/;"	d
USYNERGY_MODIFIER_LEVEL5LOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_LEVEL5LOCK	/;"	d
USYNERGY_MODIFIER_META	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_META	/;"	d
USYNERGY_MODIFIER_NUMLOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_NUMLOCK	/;"	d
USYNERGY_MODIFIER_SCROLLOCK	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_SCROLLOCK	/;"	d
USYNERGY_MODIFIER_SHIFT	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_SHIFT	/;"	d
USYNERGY_MODIFIER_WIN	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_MODIFIER_WIN	/;"	d
USYNERGY_NUM_JOYSTICKS	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_NUM_JOYSTICKS	/;"	d
USYNERGY_PROTOCOL_MAJOR	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_PROTOCOL_MAJOR	/;"	d
USYNERGY_PROTOCOL_MINOR	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_PROTOCOL_MINOR	/;"	d
USYNERGY_RECEIVE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_RECEIVE_BUFFER_SIZE	/;"	d
USYNERGY_REPLY_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_REPLY_BUFFER_SIZE	/;"	d
USYNERGY_TRACE_BUFFER_SIZE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_TRACE_BUFFER_SIZE	/;"	d
USYNERGY_TRUE	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^#define				USYNERGY_TRUE	/;"	d
Unindent	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Unindent(float indent_w)$/;"	f	class:ImGui	typeref:typename:void
Unit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} Unit;$/;"	t	typeref:enum:__anon66f154fe0803
UnitDisplay	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitDisplay,$/;"	e	enum:__anon66f154fe0803
UnitDocument	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitDocument,$/;"	e	enum:__anon66f154fe0803
UnitInch	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitInch,$/;"	e	enum:__anon66f154fe0803
UnitMillimeter	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitMillimeter$/;"	e	enum:__anon66f154fe0803
UnitPixel	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitPixel,$/;"	e	enum:__anon66f154fe0803
UnitPoint	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitPoint,$/;"	e	enum:__anon66f154fe0803
UnitWorld	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    UnitWorld,$/;"	e	enum:__anon66f154fe0803
Update	lib/cimgui/imgui/imgui.cpp	/^void ImGuiMenuColumns::Update(int count, float spacing, bool clear)$/;"	f	class:ImGuiMenuColumns	typeref:typename:void
Update	src/Gui.c	/^Update(){$/;"	f	typeref:typename:void	file:
Update	src/Gui.h	/^	void (*Update )();$/;"	m	struct:AGui	typeref:typename:void (*)()
UpdateClipRect	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::UpdateClipRect()$/;"	f	class:ImDrawList	typeref:typename:void
UpdateManualResize	lib/cimgui/imgui/imgui.cpp	/^static void ImGui::UpdateManualResize(ImGuiWindow* window, const ImVec2& size_auto_fit, int* bor/;"	f	class:ImGui	typeref:typename:void	file:
UpdateTextureID	lib/cimgui/imgui/imgui_draw.cpp	/^void ImDrawList::UpdateTextureID()$/;"	f	class:ImDrawList	typeref:typename:void
UsedChars	lib/cimgui/imgui/imgui.h	/^        ImVector<unsigned char> UsedChars;  \/\/ Store 1-bit per Unicode code point (0=unused, 1/;"	m	struct:ImFontAtlas::GlyphRangesBuilder	typeref:typename:ImVector<unsigned char>
UserCallback	lib/cimgui/cimgui/cimgui.h	/^    ImDrawCallback UserCallback;$/;"	m	struct:ImDrawCmd	typeref:typename:ImDrawCallback
UserCallback	lib/cimgui/imgui/imgui.h	/^    ImDrawCallback  UserCallback;           \/\/ If != NULL, call the function instead of render/;"	m	struct:ImDrawCmd	typeref:typename:ImDrawCallback
UserCallbackData	lib/cimgui/cimgui/cimgui.h	/^    void *UserCallbackData;$/;"	m	struct:ImDrawCmd	typeref:typename:void *
UserCallbackData	lib/cimgui/imgui/imgui.h	/^    void*           UserCallbackData;       \/\/ The draw callback code can access this.$/;"	m	struct:ImDrawCmd	typeref:typename:void *
UserData	lib/cimgui/cimgui/cimgui.h	/^    void *UserData;$/;"	m	struct:ImGuiIO	typeref:typename:void *
UserData	lib/cimgui/cimgui/cimgui.h	/^    void *UserData;$/;"	m	struct:ImGuiSizeCallbackData	typeref:typename:void *
UserData	lib/cimgui/cimgui/cimgui.h	/^    void *UserData;$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:void *
UserData	lib/cimgui/imgui/imgui.h	/^    void*               UserData;       \/\/ What user passed to InputText()      \/\/ Read-only$/;"	m	struct:ImGuiTextEditCallbackData	typeref:typename:void *
UserData	lib/cimgui/imgui/imgui.h	/^    void*         UserData;                 \/\/ = NULL               \/\/ Store your own data f/;"	m	struct:ImGuiIO	typeref:typename:void *
UserData	lib/cimgui/imgui/imgui.h	/^    void*   UserData;       \/\/ Read-only.   What user passed to SetNextWindowSizeConstraints()$/;"	m	struct:ImGuiSizeCallbackData	typeref:typename:void *
UserData	lib/cimgui/imgui/imgui_internal.h	/^    void*       UserData;$/;"	m	struct:ImGuiSettingsHandler	typeref:typename:void *
UserFlags	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        unsigned int    UserFlags;          \/\/ = ImFontConfig::RasterizerFlags$/;"	m	struct:__anon71f5b57f0110::FreeTypeFont	typeref:typename:unsigned int	file:
V0	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph	typeref:typename:float
V1	lib/cimgui/imgui/imgui.h	/^    float           U0, V0, U1, V1;     \/\/ Texture coordinates$/;"	m	struct:ImFontGlyph	typeref:typename:float
VB	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^    ID3D12Resource* VB;$/;"	m	struct:FrameResources	typeref:typename:ID3D12Resource *	file:
VENDOR_AMD	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_AMD,$/;"	e	enum:graphics_card_vendors
VENDOR_INTEL	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_INTEL$/;"	e	enum:graphics_card_vendors
VENDOR_NVIDIA	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_NVIDIA,$/;"	e	enum:graphics_card_vendors
VENDOR_UNKNOWN	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    VENDOR_UNKNOWN,$/;"	e	enum:graphics_card_vendors
VERTEX_CONSTANT_BUFFER	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^struct VERTEX_CONSTANT_BUFFER$/;"	s	file:
VERTEX_CONSTANT_BUFFER	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^struct VERTEX_CONSTANT_BUFFER$/;"	s	file:
VERTEX_CONSTANT_BUFFER	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^struct VERTEX_CONSTANT_BUFFER$/;"	s	file:
VS	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10VertexShader*         VS;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10VertexShader *	file:
VS	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11VertexShader*         VS;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11VertexShader *	file:
VSConstantBuffer	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10Buffer ***	file:
VSConstantBuffer	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11Buffer ***	file:
VSInstances	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11ClassInstance*        PSInstances[256], *VSInstances[256];   \/\/ 256 is max accor/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11ClassInstance * [256]* [256]	file:
VSInstancesCount	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        PSInstancesCount, VSInstancesCount;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
VSliderFloat	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::VSliderFloat(const char* label, const ImVec2& size, float* v, float v_min, float v_m/;"	f	class:ImGui	typeref:typename:bool
VSliderInt	lib/cimgui/imgui/imgui.cpp	/^bool ImGui::VSliderInt(const char* label, const ImVec2& size, int* v, int v_min, int v_max, cons/;"	f	class:ImGui	typeref:typename:bool
Valid	lib/cimgui/cimgui/cimgui.h	/^    bool Valid;$/;"	m	struct:ImDrawData	typeref:typename:bool
Valid	lib/cimgui/imgui/imgui.h	/^    bool            Valid;                  \/\/ Only valid after Render() is called and before /;"	m	struct:ImDrawData	typeref:typename:bool
Value	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Value(const char* prefix, bool b)$/;"	f	class:ImGui	typeref:typename:void
Value	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Value(const char* prefix, float v, const char* float_format)$/;"	f	class:ImGui	typeref:typename:void
Value	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Value(const char* prefix, int v)$/;"	f	class:ImGui	typeref:typename:void
Value	lib/cimgui/imgui/imgui.cpp	/^void ImGui::Value(const char* prefix, unsigned int v)$/;"	f	class:ImGui	typeref:typename:void
Value	lib/cimgui/imgui/imgui.h	/^    ImVec4              Value;$/;"	m	struct:ImColor	typeref:typename:ImVec4
Values	lib/cimgui/imgui/imgui.cpp	/^    const float* Values;$/;"	m	struct:ImGuiPlotArrayGetterData	typeref:typename:const float *	file:
VarIdx	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStyleVar   VarIdx;$/;"	m	struct:ImGuiStyleMod	typeref:typename:ImGuiStyleVar
VertexBuffer	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        ID3D10Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:ID3D10Buffer **	file:
VertexBuffer	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        ID3D11Buffer*               IndexBuffer, *VertexBuffer, *VSConstantBuffer;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:ID3D11Buffer **	file:
VertexBufferOffset	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:UINT	file:
VertexBufferOffset	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
VertexBufferSize	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^    int VertexBufferSize;$/;"	m	struct:FrameResources	typeref:typename:int	file:
VertexBufferStride	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:UINT	file:
VertexBufferStride	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        IndexBufferOffset, VertexBufferStride, VertexBufferOffset;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
VerticalSeparator	lib/cimgui/imgui/imgui.cpp	/^void ImGui::VerticalSeparator()$/;"	f	class:ImGui	typeref:typename:void
Viewports	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        D3D10_VIEWPORT              Viewports[D3D10_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PI/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:D3D10_VIEWPORT[]	file:
Viewports	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        D3D11_VIEWPORT              Viewports[D3D11_VIEWPORT_AND_SCISSORRECT_OBJECT_COUNT_PER_PI/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:D3D11_VIEWPORT[]	file:
ViewportsCount	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^        UINT                        ScissorRectsCount, ViewportsCount;$/;"	m	struct:ImGui_ImplDX10_RenderDrawData::BACKUP_DX10_STATE	typeref:typename:UINT	file:
ViewportsCount	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^        UINT                        ScissorRectsCount, ViewportsCount;$/;"	m	struct:ImGui_ImplDX11_RenderDrawData::BACKUP_DX11_STATE	typeref:typename:UINT	file:
VtxBuffer	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawVert>    VtxBuffer;          \/\/ Vertex buffer.$/;"	m	struct:ImDrawList	typeref:typename:ImVector<ImDrawVert>
WIN32_LEAN_AND_MEAN	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^#define WIN32_LEAN_AND_MEAN /;"	d	file:
WIN32_LEAN_AND_MEAN	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	lib/cimgui/imgui/imgui.cpp	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	lib/gl3w/GL/gl3w.c	/^#define WIN32_LEAN_AND_MEAN /;"	d	file:
WIN32_LEAN_AND_MEAN	lib/gl3w/GL/glcorearb.h	/^#define WIN32_LEAN_AND_MEAN /;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d11/main.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d9/main.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdi/main.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdi/nuklear_gdi.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdip/main.c	/^#define WIN32_LEAN_AND_MEAN$/;"	d	file:
WIN32_LEAN_AND_MEAN	lib/nuklear/demo/gdip/nuklear_gdip.h	/^#define WIN32_LEAN_AND_MEAN$/;"	d
WINDOW_HEIGHT	lib/nuklear/demo/allegro5/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/d3d11/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/d3d9/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/gdi/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/gdip/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/glfw_opengl2/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/glfw_opengl3/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/glfw_opengl4/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sdl_opengl2/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sdl_opengl3/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sdl_opengles2/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11_opengl2/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11_opengl3/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/demo/x11_rawfb/main.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/canvas.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/extended.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/file_browser.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	lib/nuklear/example/skinning.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_HEIGHT	src/App.c	/^#define WINDOW_HEIGHT /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/allegro5/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/d3d11/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/d3d9/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/gdi/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/gdip/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/glfw_opengl2/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/glfw_opengl3/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/glfw_opengl4/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sdl_opengl2/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sdl_opengl3/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sdl_opengles2/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sfml_opengl2/main.cpp	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/sfml_opengl3/main.cpp	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11_opengl2/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11_opengl3/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/demo/x11_rawfb/main.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/canvas.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/extended.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/file_browser.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	lib/nuklear/example/skinning.c	/^#define WINDOW_WIDTH /;"	d	file:
WINDOW_WIDTH	src/App.c	/^#define WINDOW_WIDTH /;"	d	file:
WINGDIAPI	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^ #define WINGDIAPI /;"	d
WINGDIPAPI	lib/nuklear/demo/gdip/nuklear_gdip.h	/^#define WINGDIPAPI /;"	d
WM_MOUSEHWHEEL	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^#define WM_MOUSEHWHEEL /;"	d	file:
WM_MOUSEHWHEEL	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^#define WM_MOUSEHWHEEL /;"	d	file:
WM_MOUSEHWHEEL	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^#define WM_MOUSEHWHEEL /;"	d	file:
WM_MOUSEHWHEEL	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^#define WM_MOUSEHWHEEL /;"	d	file:
WaitForLastSubmittedFrame	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^void WaitForLastSubmittedFrame()$/;"	f	typeref:typename:void
WaitForNextFrameResources	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^FrameContext* WaitForNextFrameResources()$/;"	f	typeref:typename:FrameContext *
WantCaptureKeyboard	lib/cimgui/cimgui/cimgui.h	/^    bool WantCaptureKeyboard;$/;"	m	struct:ImGuiIO	typeref:typename:bool
WantCaptureKeyboard	lib/cimgui/imgui/imgui.h	/^    bool        WantCaptureKeyboard;        \/\/ When io.WantCaptureKeyboard is true, imgui will/;"	m	struct:ImGuiIO	typeref:typename:bool
WantCaptureKeyboardNextFrame	lib/cimgui/imgui/imgui_internal.h	/^    int                     WantCaptureKeyboardNextFrame;$/;"	m	struct:ImGuiContext	typeref:typename:int
WantCaptureMouse	lib/cimgui/cimgui/cimgui.h	/^    bool WantCaptureMouse;$/;"	m	struct:ImGuiIO	typeref:typename:bool
WantCaptureMouse	lib/cimgui/imgui/imgui.h	/^    bool        WantCaptureMouse;           \/\/ When io.WantCaptureMouse is true, imgui will us/;"	m	struct:ImGuiIO	typeref:typename:bool
WantCaptureMouseNextFrame	lib/cimgui/imgui/imgui_internal.h	/^    int                     WantCaptureMouseNextFrame;          \/\/ explicit capture via Captur/;"	m	struct:ImGuiContext	typeref:typename:int
WantMoveMouse	lib/cimgui/cimgui/cimgui.h	/^	bool WantMoveMouse;$/;"	m	struct:ImGuiIO	typeref:typename:bool
WantSetMousePos	lib/cimgui/imgui/imgui.h	/^    bool        WantSetMousePos;            \/\/ MousePos has been altered, back-end should repo/;"	m	struct:ImGuiIO	typeref:typename:bool
WantTextInput	lib/cimgui/cimgui/cimgui.h	/^    bool WantTextInput;$/;"	m	struct:ImGuiIO	typeref:typename:bool
WantTextInput	lib/cimgui/imgui/imgui.h	/^    bool        WantTextInput;              \/\/ Mobile\/console: when io.WantTextInput is true,/;"	m	struct:ImGuiIO	typeref:typename:bool
WantTextInputNextFrame	lib/cimgui/imgui/imgui_internal.h	/^    int                     WantTextInputNextFrame;$/;"	m	struct:ImGuiContext	typeref:typename:int
WasActive	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WasActive;$/;"	m	struct:ImGuiWindow	typeref:typename:bool
Width	lib/cimgui/imgui/imgui.h	/^        unsigned short  Width, Height;  \/\/ Input    \/\/ Desired rectangle dimension$/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:unsigned short
Width	lib/cimgui/imgui/imgui_internal.h	/^    float       Width, NextWidth;$/;"	m	struct:ImGuiMenuColumns	typeref:typename:float
Width	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^        float Width;		\/\/ Glyph's width in pixels.$/;"	m	struct:__anon71f5b57f0110::GlyphInfo	typeref:typename:float	file:
Width	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT Width;$/;"	m	struct:__anon66f154fe0908	typeref:typename:FLOAT
Window	bin/imgui.ini	/^[Window][Debug##Default]$/;"	s
Window	bin/imgui.ini	/^[Window][Example: Console]$/;"	s
Window	bin/imgui.ini	/^[Window][ImGui Demo]$/;"	s
Window	bin/imgui.ini	/^[Window][Stream widget]$/;"	s
Window	bin/imgui.ini	/^[Window][Test]$/;"	s
Window	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*        Window;         \/\/ Resolved on BeginPopup() - may stay unresolved if u/;"	m	struct:ImGuiPopupRef	typeref:typename:ImGuiWindow *
Window	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiWindow*  Window;       \/\/ Best candidate window$/;"	m	struct:ImGuiNavMoveResult	typeref:typename:ImGuiWindow *
WindowBorderSize	lib/cimgui/cimgui/cimgui.h	/^    float WindowBorderSize;$/;"	m	struct:ImGuiStyle	typeref:typename:float
WindowBorderSize	lib/cimgui/imgui/imgui.h	/^    float       WindowBorderSize;           \/\/ Thickness of border around windows. Generally s/;"	m	struct:ImGuiStyle	typeref:typename:float
WindowBorderSize	lib/cimgui/imgui/imgui_internal.h	/^    float                   WindowBorderSize;                   \/\/ Window border size at the t/;"	m	struct:ImGuiWindow	typeref:typename:float
WindowMinSize	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 WindowMinSize;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
WindowMinSize	lib/cimgui/imgui/imgui.h	/^    ImVec2      WindowMinSize;              \/\/ Minimum window size. This is a global setting. /;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
WindowPadding	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 WindowPadding;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
WindowPadding	lib/cimgui/imgui/imgui.h	/^    ImVec2      WindowPadding;              \/\/ Padding within a window.$/;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
WindowPadding	lib/cimgui/imgui/imgui_internal.h	/^    ImVec2                  WindowPadding;                      \/\/ Window padding at the time /;"	m	struct:ImGuiWindow	typeref:typename:ImVec2
WindowProc	lib/nuklear/demo/d3d11/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:LRESULT CALLBACK	file:
WindowProc	lib/nuklear/demo/d3d9/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:LRESULT CALLBACK	file:
WindowProc	lib/nuklear/demo/gdi/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:LRESULT CALLBACK	file:
WindowProc	lib/nuklear/demo/gdip/main.c	/^WindowProc(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:LRESULT CALLBACK	file:
WindowRectClipped	lib/cimgui/imgui/imgui_internal.h	/^    ImRect                  WindowRectClipped;                  \/\/ = WindowRect just after set/;"	m	struct:ImGuiWindow	typeref:typename:ImRect
WindowRounding	lib/cimgui/cimgui/cimgui.h	/^    float WindowRounding;$/;"	m	struct:ImGuiStyle	typeref:typename:float
WindowRounding	lib/cimgui/imgui/imgui.h	/^    float       WindowRounding;             \/\/ Radius of window corners rounding. Set to 0.0f /;"	m	struct:ImGuiStyle	typeref:typename:float
WindowRounding	lib/cimgui/imgui/imgui_internal.h	/^    float                   WindowRounding;                     \/\/ Window rounding at the time/;"	m	struct:ImGuiWindow	typeref:typename:float
WindowTitleAlign	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 WindowTitleAlign;$/;"	m	struct:ImGuiStyle	typeref:struct:ImVec2
WindowTitleAlign	lib/cimgui/imgui/imgui.h	/^    ImVec2      WindowTitleAlign;           \/\/ Alignment for title bar text. Defaults to (0.0f/;"	m	struct:ImGuiStyle	typeref:typename:ImVec2
Windows	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  Windows;$/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiWindow * >
WindowsActiveCount	lib/cimgui/imgui/imgui_internal.h	/^    int                     WindowsActiveCount;$/;"	m	struct:ImGuiContext	typeref:typename:int
WindowsById	lib/cimgui/imgui/imgui_internal.h	/^    ImGuiStorage            WindowsById;$/;"	m	struct:ImGuiContext	typeref:typename:ImGuiStorage
WindowsSortBuffer	lib/cimgui/imgui/imgui_internal.h	/^    ImVector<ImGuiWindow*>  WindowsSortBuffer;$/;"	m	struct:ImGuiContext	typeref:typename:ImVector<ImGuiWindow * >
WndProc	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	typeref:typename:LRESULT WINAPI
WndProc	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	typeref:typename:LRESULT WINAPI
WndProc	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	typeref:typename:LRESULT WINAPI
WndProc	lib/cimgui/imgui/examples/directx9_example/main.cpp	/^LRESULT WINAPI WndProc(HWND hWnd, UINT msg, WPARAM wParam, LPARAM lParam)$/;"	f	typeref:typename:LRESULT WINAPI
WriteAccessed	lib/cimgui/imgui/imgui_internal.h	/^    bool                    WriteAccessed;                      \/\/ Set to true when any widget/;"	m	struct:ImGuiWindow	typeref:typename:bool
WriteAllFn	lib/cimgui/imgui/imgui_internal.h	/^    void        (*WriteAllFn)(ImGuiContext* ctx, ImGuiSettingsHandler* handler, ImGuiTextBuffer*/;"	m	struct:ImGuiSettingsHandler	typeref:typename:void (*)(ImGuiContext * ctx,ImGuiSettingsHandler * handler,ImGuiTextBuffer * out_buf)
X	lib/cimgui/imgui/imgui.h	/^        unsigned short  X, Y;           \/\/ Output   \/\/ Packed position in Atlas$/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:unsigned short
X	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT X;$/;"	m	struct:__anon66f154fe0908	typeref:typename:FLOAT
X0	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph	typeref:typename:float
X1	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph	typeref:typename:float
XFont	lib/nuklear/demo/x11/nuklear_xlib.h	/^struct XFont {$/;"	s
XFont	lib/nuklear/demo/x11/nuklear_xlib.h	/^typedef struct XFont XFont;$/;"	t	typeref:struct:XFont
XImageWithAlpha	lib/nuklear/demo/x11/nuklear_xlib.h	/^struct XImageWithAlpha {$/;"	s
XImageWithAlpha	lib/nuklear/demo/x11/nuklear_xlib.h	/^typedef struct XImageWithAlpha XImageWithAlpha;$/;"	t	typeref:struct:XImageWithAlpha
XSurface	lib/nuklear/demo/x11/nuklear_xlib.h	/^struct XSurface {$/;"	s
XSurface	lib/nuklear/demo/x11/nuklear_xlib.h	/^typedef struct XSurface XSurface;$/;"	t	typeref:struct:XSurface
XWindow	lib/nuklear/demo/x11/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11/main.c	/^typedef struct XWindow XWindow;$/;"	t	typeref:struct:XWindow	file:
XWindow	lib/nuklear/demo/x11_opengl2/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11_opengl3/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11_rawfb/main.c	/^struct XWindow {$/;"	s	file:
XWindow	lib/nuklear/demo/x11_rawfb/main.c	/^typedef struct XWindow XWindow;$/;"	t	typeref:struct:XWindow	file:
Y	lib/cimgui/imgui/imgui.h	/^        unsigned short  X, Y;           \/\/ Output   \/\/ Packed position in Atlas$/;"	m	struct:ImFontAtlas::CustomRect	typeref:typename:unsigned short
Y	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    FLOAT Y;$/;"	m	struct:__anon66f154fe0908	typeref:typename:FLOAT
Y0	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph	typeref:typename:float
Y1	lib/cimgui/imgui/imgui.h	/^    float           X0, Y0, X1, Y1;     \/\/ Glyph corners$/;"	m	struct:ImFontGlyph	typeref:typename:float
YCbCr_to_RGB_kernel	lib/nuklear/example/stb_image.h	/^   void (*YCbCr_to_RGB_kernel)(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stbi_uc/;"	m	struct:__anonc731c3c80608	typeref:typename:void (*)(stbi_uc * out,const stbi_uc * y,const stbi_uc * pcb,const stbi_uc * pcr,int count,int step)
_AC_KLIST_H	lib/klib/klist.h	/^#define _AC_KLIST_H$/;"	d
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/imgui.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/imgui_demo.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/imgui_draw.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_CRT_SECURE_NO_WARNINGS	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^#define _CRT_SECURE_NO_WARNINGS$/;"	d	file:
_Channels	lib/cimgui/imgui/imgui.h	/^    ImVector<ImDrawChannel> _Channels;          \/\/ [Internal] draw channels for columns API (n/;"	m	struct:ImDrawList	typeref:typename:ImVector<ImDrawChannel>
_ChannelsCount	lib/cimgui/imgui/imgui.h	/^    int                     _ChannelsCount;     \/\/ [Internal] number of active channels (1+)$/;"	m	struct:ImDrawList	typeref:typename:int
_ChannelsCurrent	lib/cimgui/imgui/imgui.h	/^    int                     _ChannelsCurrent;   \/\/ [Internal] current channel number (0)$/;"	m	struct:ImDrawList	typeref:typename:int
_ClipRectStack	lib/cimgui/imgui/imgui.h	/^    ImVector<ImVec4>        _ClipRectStack;     \/\/ [Internal]$/;"	m	struct:ImDrawList	typeref:typename:ImVector<ImVec4>
_Data	lib/cimgui/imgui/imgui.h	/^    const ImDrawListSharedData* _Data;          \/\/ Pointer to shared draw data (you can use Im/;"	m	struct:ImDrawList	typeref:typename:const ImDrawListSharedData *
_IdxWritePtr	lib/cimgui/imgui/imgui.h	/^    ImDrawIdx*              _IdxWritePtr;       \/\/ [Internal] point within IdxBuffer.Data afte/;"	m	struct:ImDrawList	typeref:typename:ImDrawIdx *
_KALLOC_H_	lib/klib/kalloc.h	/^#define _KALLOC_H_$/;"	d
_KO_NO_NET	lib/klib/kopen.c	/^#define _KO_NO_NET$/;"	d	file:
_OwnerName	lib/cimgui/imgui/imgui.h	/^    const char*             _OwnerName;         \/\/ Pointer to owner window's name for debuggin/;"	m	struct:ImDrawList	typeref:typename:const char *
_Path	lib/cimgui/imgui/imgui.h	/^    ImVector<ImVec2>        _Path;              \/\/ [Internal] current path building$/;"	m	struct:ImDrawList	typeref:typename:ImVector<ImVec2>
_RadixSort_Unsigned_PowerOf2Radix_1	lib/klib/test/ksort_test.cc	/^inline void _RadixSort_Unsigned_PowerOf2Radix_1( _Type* a, long last, _Type bitMask, unsigned lo/;"	f	typeref:typename:void
_TextureIdStack	lib/cimgui/imgui/imgui.h	/^    ImVector<ImTextureID>   _TextureIdStack;    \/\/ [Internal]$/;"	m	struct:ImDrawList	typeref:typename:ImVector<ImTextureID>
_VtxCurrentIdx	lib/cimgui/imgui/imgui.h	/^    unsigned int            _VtxCurrentIdx;     \/\/ [Internal] == VtxBuffer.Size$/;"	m	struct:ImDrawList	typeref:typename:unsigned int
_VtxWritePtr	lib/cimgui/imgui/imgui.h	/^    ImDrawVert*             _VtxWritePtr;       \/\/ [Internal] point within VtxBuffer.Data afte/;"	m	struct:ImDrawList	typeref:typename:ImDrawVert *
_WIN32	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^ #define _WIN32$/;"	d
__AC_KBTREE_H	lib/klib/kbtree.h	/^#define __AC_KBTREE_H$/;"	d
__AC_KDQ_H	lib/klib/kdq.h	/^#define __AC_KDQ_H$/;"	d
__AC_KHASH_H	lib/klib/khash.h	/^#define __AC_KHASH_H$/;"	d
__AC_KSW_H	lib/klib/ksw.h	/^#define __AC_KSW_H$/;"	d
__BGZF_H	lib/klib/bgzf.h	/^#define __BGZF_H$/;"	d
__KAVL_ERASE	lib/klib/kavl.h	/^#define __KAVL_ERASE(/;"	d
__KAVL_FIND	lib/klib/kavl.h	/^#define __KAVL_FIND(/;"	d
__KAVL_INSERT	lib/klib/kavl.h	/^#define __KAVL_INSERT(/;"	d
__KAVL_ITR	lib/klib/kavl.h	/^#define __KAVL_ITR(/;"	d
__KAVL_ROTATE	lib/klib/kavl.h	/^#define __KAVL_ROTATE(/;"	d
__KB_DEL	lib/klib/kbtree.h	/^#define __KB_DEL(/;"	d
__KB_GET	lib/klib/kbtree.h	/^#define __KB_GET(/;"	d
__KB_GET_AUX1	lib/klib/kbtree.h	/^#define __KB_GET_AUX1(/;"	d
__KB_INIT	lib/klib/kbtree.h	/^#define __KB_INIT(/;"	d
__KB_INTERVAL	lib/klib/kbtree.h	/^#define __KB_INTERVAL(/;"	d
__KB_ITR	lib/klib/kbtree.h	/^#define __KB_ITR(/;"	d
__KB_KEY	lib/klib/kbtree.h	/^#define	__KB_KEY(/;"	d
__KB_PTR	lib/klib/kbtree.h	/^#define __KB_PTR(/;"	d
__KB_PUT	lib/klib/kbtree.h	/^#define __KB_PUT(/;"	d
__KB_TREE_T	lib/klib/kbtree.h	/^#define __KB_TREE_T(/;"	d
__KDQ_IMPL	lib/klib/kdq.h	/^#define __KDQ_IMPL(/;"	d
__KDQ_TYPE	lib/klib/kdq.h	/^#define __KDQ_TYPE(/;"	d
__KG_BASIC	lib/klib/kgraph.h	/^#define __KG_BASIC(/;"	d
__KHASH_IMPL	lib/klib/khash.h	/^#define __KHASH_IMPL(/;"	d
__KHASH_PROTOTYPES	lib/klib/khash.h	/^#define __KHASH_PROTOTYPES(/;"	d
__KHASH_TYPE	lib/klib/khash.h	/^#define __KHASH_TYPE(/;"	d
__KSEQ_BASIC	lib/klib/kseq.h	/^#define __KSEQ_BASIC(/;"	d
__KSEQ_READ	lib/klib/kseq.h	/^#define __KSEQ_READ(/;"	d
__KSEQ_TYPE	lib/klib/kseq.h	/^#define __KSEQ_TYPE(/;"	d
__KS_BASIC	lib/klib/kseq.h	/^#define __KS_BASIC(/;"	d
__KS_GETC	lib/klib/kseq.h	/^#define __KS_GETC(/;"	d
__KS_GETUNTIL	lib/klib/kseq.h	/^#define __KS_GETUNTIL(/;"	d
__KS_TYPE	lib/klib/kseq.h	/^#define __KS_TYPE(/;"	d
__STB_INCLUDE_STB_TRUETYPE_H__	lib/cimgui/imgui/stb_truetype.h	/^#define __STB_INCLUDE_STB_TRUETYPE_H__$/;"	d
__ac_HASH_UPPER	lib/klib/khash.h	/^static const double __ac_HASH_UPPER = 0.77;$/;"	v	typeref:typename:const double
__ac_Wang_hash	lib/klib/khash.h	/^static kh_inline khint_t __ac_Wang_hash(khint_t key)$/;"	f	typeref:typename:kh_inline khint_t
__ac_X31_hash_string	lib/klib/khash.h	/^static kh_inline khint_t __ac_X31_hash_string(const char *s)$/;"	f	typeref:typename:kh_inline khint_t
__ac_fsize	lib/klib/khash.h	/^#define __ac_fsize(/;"	d
__ac_isdel	lib/klib/khash.h	/^#define __ac_isdel(/;"	d
__ac_iseither	lib/klib/khash.h	/^#define __ac_iseither(/;"	d
__ac_isempty	lib/klib/khash.h	/^#define __ac_isempty(/;"	d
__ac_set_isboth_false	lib/klib/khash.h	/^#define __ac_set_isboth_false(/;"	d
__ac_set_isdel_false	lib/klib/khash.h	/^#define __ac_set_isdel_false(/;"	d
__ac_set_isdel_true	lib/klib/khash.h	/^#define __ac_set_isdel_true(/;"	d
__ac_set_isempty_false	lib/klib/khash.h	/^#define __ac_set_isempty_false(/;"	d
__anon03438e700108	lib/klib/test/kthread_test2.c	/^typedef struct {$/;"	s	file:
__anon03438e700208	lib/klib/test/kthread_test2.c	/^typedef struct {$/;"	s	file:
__anon09a7c4200103	lib/nuklear/demo/allegro5/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon0d481e870108	lib/gl3w/GL/gl3w.c	/^static struct {$/;"	s	file:
__anon0d78483f0103	lib/nuklear/demo/x11/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon15b14e0d0103	lib/nuklear/demo/glfw_opengl4/main.c	/^    enum {tex_width = 256, tex_height = 256};$/;"	g	function:main	file:
__anon15b14e0d0203	lib/nuklear/demo/glfw_opengl4/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon296f792c0103	lib/nuklear/demo/glfw_opengl3/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon3287e0230108	lib/klib/kalloc.c	/^typedef struct {$/;"	s	file:
__anon3287e0280108	lib/klib/kalloc.h	/^typedef struct {$/;"	s
__anon38bea1050108	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static struct {$/;"	s	file:
__anon39ff3a1e0108	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^static struct {$/;"	s
__anon3cfbb3980108	lib/klib/test/kgraph_test.c	/^typedef struct {$/;"	s	file:
__anon3d2da44b0103	lib/nuklear/demo/glfw_opengl2/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon3f85d5f90103	lib/nuklear/demo/d3d9/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon468a694a0108	lib/klib/test/khash_test.c	/^typedef struct {$/;"	s	file:
__anon468a694a0208	lib/klib/test/khash_test.c	/^typedef struct {$/;"	s	file:
__anon48e42b3f0103	lib/nuklear/demo/sdl_opengl3/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon50fc9fff0108	lib/nuklear/demo/x11/nuklear_xlib.h	/^static struct  {$/;"	s
__anon5a3859960103	lib/nuklear/demo/sdl_opengles2/main.c	/^        enum {EASY, HARD};$/;"	g	function:MainLoop	file:
__anon5ca2565e0103	lib/nuklear/demo/sdl_opengl2/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon5e304a0c0103	lib/cimgui/imgui/stb_rect_pack.h	/^{$/;"	g
__anon5e304a0c0203	lib/cimgui/imgui/stb_rect_pack.h	/^{$/;"	g
__anon5e304a0c0308	lib/cimgui/imgui/stb_rect_pack.h	/^{$/;"	s
__anon654a28500103	lib/nuklear/demo/x11_rawfb/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anon66f154fe0103	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef enum {$/;"	g
__anon66f154fe0203	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef enum {$/;"	g
__anon66f154fe0303	lib/nuklear/demo/gdip/nuklear_gdip.h	/^{$/;"	g
__anon66f154fe0403	lib/nuklear/demo/gdip/nuklear_gdip.h	/^{$/;"	g
__anon66f154fe0503	lib/nuklear/demo/gdip/nuklear_gdip.h	/^{$/;"	g
__anon66f154fe0603	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef enum {$/;"	g
__anon66f154fe0703	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef enum {$/;"	g
__anon66f154fe0803	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef enum {$/;"	g
__anon66f154fe0908	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct {$/;"	s
__anon66f154fe0a03	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef enum {$/;"	g
__anon66f154fe0b08	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct {$/;"	s
__anon66f154fe0c08	lib/nuklear/demo/gdip/nuklear_gdip.h	/^typedef struct {$/;"	s
__anon66f154fe0d08	lib/nuklear/demo/gdip/nuklear_gdip.h	/^static struct {$/;"	s
__anon70d184300108	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^{$/;"	s
__anon71f5b57f0110	lib/cimgui/imgui/misc/freetype/imgui_freetype.cpp	/^{$/;"	n	file:
__anon74bd45490108	src/Shader.h	/^typedef struct {$/;"	s
__anon77dd0a3a0108	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef struct { int ignored; } *					uSynergyCookie;$/;"	s
__anon77dd0a3a0208	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^{$/;"	s
__anon7bd1e0a20108	lib/klib/ksw.c	/^typedef struct {$/;"	s	file:
__anon7bd1e0a70108	lib/klib/ksw.h	/^typedef struct {$/;"	s
__anon7daa66dc0103	lib/nuklear/src/nuklear_font.c	/^enum {$/;"	g	file:
__anon7daa66dc0203	lib/nuklear/src/nuklear_font.c	/^enum { \/* platformID *\/$/;"	g	file:
__anon7daa66dc0303	lib/nuklear/src/nuklear_font.c	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_UNICODE *\/$/;"	g	file:
__anon7daa66dc0403	lib/nuklear/src/nuklear_font.c	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_MICROSOFT *\/$/;"	g	file:
__anon7daa66dc0503	lib/nuklear/src/nuklear_font.c	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_MAC; same as Script Manager codes *\/$/;"	g	file:
__anon7daa66dc0603	lib/nuklear/src/nuklear_font.c	/^enum { \/* languageID for NK_TT_PLATFORM_ID_MICROSOFT; same as LCID... *\/$/;"	g	file:
__anon7daa66dc0703	lib/nuklear/src/nuklear_font.c	/^enum { \/* languageID for NK_TT_PLATFORM_ID_MAC *\/$/;"	g	file:
__anon88f201100108	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^static struct  {$/;"	s
__anon8d04436f010a	lib/nuklear/src/nuklear_math.c	/^    union {nk_uint i; float f;} conv = {0};$/;"	u	function:nk_inv_sqrt	file:
__anon8fa426eb0103	lib/nuklear/src/nuklear.h	/^enum {nk_false, nk_true};$/;"	g
__anon8fa426eb020a	lib/nuklear/src/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	u
__anon8fa426eb0303	lib/nuklear/src/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	g	struct:nk_helper
__anon8fa426eb0403	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	g	struct:nk_helper
__anon8fa426eb0503	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	g	struct:nk_alignof
__anon90981fb3010a	lib/cimgui/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	u	struct:ImGuiStorage::Pair
__anon929281af0108	lib/klib/kbtree.h	/^typedef struct {$/;"	s
__anon929281af0208	lib/klib/kbtree.h	/^typedef struct {$/;"	s
__anon929281af0308	lib/klib/kbtree.h	/^typedef struct {$/;"	s
__anon929281af0408	lib/klib/kbtree.h	/^typedef struct {$/;"	s
__anon959017540108	lib/klib/kstring.h	/^typedef struct {$/;"	s
__anon975ae7f7010a	lib/klib/kexpr.c	/^	union {$/;"	u	struct:ke1_s	file:
__anon98a3ef990103	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990203	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990303	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990403	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990503	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990603	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990703	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990803	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990903	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon98a3ef990a03	lib/cimgui/cimgui/cimgui.h	/^{$/;"	g
__anon9e34ae690103	lib/nuklear/demo/gdip/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anona0ff62e3010a	lib/nuklear/src/nuklear_util.c	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	u	function:nk_murmur_hash	file:
__anonabf5b9790103	lib/nuklear/demo/gdi/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anonae17a10a0108	lib/klib/kopen.c	/^typedef struct {$/;"	s	file:
__anonae17a10a0208	lib/klib/kopen.c	/^typedef struct {$/;"	s	file:
__anonb76165850108	lib/klib/ksort.h	/^typedef struct {$/;"	s
__anonc4120a9e0108	lib/nuklear/demo/gdi/nuklear_gdi.h	/^static struct {$/;"	s
__anonc4c159420108	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159420208	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159420308	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159420408	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159420508	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159420603	lib/cimgui/imgui/stb_truetype.h	/^   enum {$/;"	g
__anonc4c159420708	lib/cimgui/imgui/stb_truetype.h	/^   {$/;"	s
__anonc4c159420808	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159420903	lib/cimgui/imgui/stb_truetype.h	/^enum { \/\/ platformID$/;"	g
__anonc4c159420a03	lib/cimgui/imgui/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_UNICODE$/;"	g
__anonc4c159420b03	lib/cimgui/imgui/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MICROSOFT$/;"	g
__anonc4c159420c03	lib/cimgui/imgui/stb_truetype.h	/^enum { \/\/ encodingID for STBTT_PLATFORM_ID_MAC; same as Script Manager codes$/;"	g
__anonc4c159420d03	lib/cimgui/imgui/stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MICROSOFT; same as LCID...$/;"	g
__anonc4c159420e03	lib/cimgui/imgui/stb_truetype.h	/^enum { \/\/ languageID for STBTT_PLATFORM_ID_MAC$/;"	g
__anonc4c159420f08	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159421008	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159421108	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc4c159421208	lib/cimgui/imgui/stb_truetype.h	/^{$/;"	s
__anonc61c00070103	lib/nuklear/src/nuklear_internal.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	g
__anonc731c3c80103	lib/nuklear/example/stb_image.h	/^{$/;"	g
__anonc731c3c80208	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80308	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80403	lib/nuklear/example/stb_image.h	/^{$/;"	g
__anonc731c3c80508	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80608	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80708	lib/nuklear/example/stb_image.h	/^   {$/;"	s	struct:__anonc731c3c80608
__anonc731c3c80808	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80908	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80a08	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80b08	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80c08	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80d03	lib/nuklear/example/stb_image.h	/^enum {$/;"	g
__anonc731c3c80e08	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c80f08	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anonc731c3c81008	lib/nuklear/example/stb_image.h	/^{$/;"	s
__anond7ed09940103	lib/nuklear/nuklear.h	/^enum {nk_false, nk_true};$/;"	g
__anond7ed0994020a	lib/nuklear/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	u
__anond7ed09940303	lib/nuklear/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	g	struct:nk_helper
__anond7ed09940403	lib/nuklear/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	g	struct:nk_helper
__anond7ed09940503	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	g	struct:nk_alignof
__anond7ed09940603	lib/nuklear/nuklear.h	/^enum {NK_DO_NOT_STOP_ON_NEW_LINE, NK_STOP_ON_NEW_LINE};$/;"	g
__anond7ed0994070a	lib/nuklear/nuklear.h	/^    union {nk_uint i; float f;} conv = {0};$/;"	u	function:nk_inv_sqrt
__anond7ed0994080a	lib/nuklear/nuklear.h	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	u	function:nk_murmur_hash
__anond7ed09940903	lib/nuklear/nuklear.h	/^enum {$/;"	g
__anond7ed09940a03	lib/nuklear/nuklear.h	/^enum { \/* platformID *\/$/;"	g
__anond7ed09940b03	lib/nuklear/nuklear.h	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_UNICODE *\/$/;"	g
__anond7ed09940c03	lib/nuklear/nuklear.h	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_MICROSOFT *\/$/;"	g
__anond7ed09940d03	lib/nuklear/nuklear.h	/^enum { \/* encodingID for NK_TT_PLATFORM_ID_MAC; same as Script Manager codes *\/$/;"	g
__anond7ed09940e03	lib/nuklear/nuklear.h	/^enum { \/* languageID for NK_TT_PLATFORM_ID_MICROSOFT; same as LCID... *\/$/;"	g
__anond7ed09940f03	lib/nuklear/nuklear.h	/^enum { \/* languageID for NK_TT_PLATFORM_ID_MAC *\/$/;"	g
__anondbb16f820103	lib/nuklear/demo/d3d11/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anonddab14d60103	lib/nuklear/demo/x11_opengl3/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anonddddee0d0103	lib/nuklear/demo/sfml_opengl2/main.cpp	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anone038ee160108	lib/klib/bgzf.c	/^typedef struct {$/;"	s	file:
__anone038ee1b0108	lib/klib/bgzf.h	/^typedef struct {$/;"	s
__anone1e87f2e0103	lib/nuklear/demo/sfml_opengl3/main.cpp	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anone5c783700108	lib/klib/kthread.c	/^typedef struct {$/;"	s	file:
__anone5c783700208	lib/klib/kthread.c	/^typedef struct {$/;"	s	file:
__anone5c783700308	lib/klib/kthread.c	/^typedef struct {$/;"	s	file:
__anone8d3801e0108	lib/klib/test/kthread_test.c	/^typedef struct {$/;"	s	file:
__anoned4859cf010a	lib/cimgui/imgui/imgui_internal.h	/^    union           { int BackupInt[2]; float BackupFloat[2]; };$/;"	u	struct:ImGuiStyleMod
__anonef293a910108	lib/klib/test/ksort_test.cc	/^typedef struct {$/;"	s	file:
__anonf1693ff50103	lib/nuklear/demo/x11_opengl2/main.c	/^            enum {EASY, HARD};$/;"	g	function:main	file:
__anonf542711f0108	lib/klib/khmm.h	/^{$/;"	s
__anonf542711f0208	lib/klib/khmm.h	/^{$/;"	s
__anonf542711f0308	lib/klib/khmm.h	/^{$/;"	s
__anonf542711f0408	lib/klib/khmm.h	/^{$/;"	s
__anonf5ac75060108	lib/klib/knhx.c	/^typedef struct {$/;"	s	file:
__anonf5ac750b0108	lib/klib/knhx.h	/^typedef struct {$/;"	s
__anonf60a9bad010a	lib/klib/kson.h	/^	union {$/;"	u	struct:kson_node_s
__anonf60a9bad0208	lib/klib/kson.h	/^typedef struct {$/;"	s
__anonf630694b0108	lib/klib/kurl.c	/^typedef struct {$/;"	s	file:
__anonf630694b020a	lib/klib/kurl.c	/^	union { uint8_t b[BLOCK_LENGTH]; uint32_t w[BLOCK_LENGTH\/4]; } buf;$/;"	u	struct:sha1nfo	file:
__anonf630694b030a	lib/klib/kurl.c	/^	union { uint8_t b[HASH_LENGTH]; uint32_t w[HASH_LENGTH\/4]; } state;$/;"	u	struct:sha1nfo	file:
__anonf630694b0408	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	s	file:
__anonf63069500108	lib/klib/kurl.h	/^typedef struct {$/;"	s
__anonfd61af4b0108	lib/cimgui/imgui/stb_textedit.h	/^{$/;"	s
__anonfd61af4b0208	lib/cimgui/imgui/stb_textedit.h	/^{$/;"	s
__anonfd61af4b0308	lib/cimgui/imgui/stb_textedit.h	/^{$/;"	s
__anonfd61af4b0408	lib/cimgui/imgui/stb_textedit.h	/^{$/;"	s
__anonfd61af4b0508	lib/cimgui/imgui/stb_textedit.h	/^{$/;"	s
__err_connect	lib/klib/knetfile.c	/^#define __err_connect(/;"	d	file:
__err_connect	lib/klib/kopen.c	/^#define __err_connect(/;"	d	file:
__gl3w_h_	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define __gl3w_h_$/;"	d
__gl3w_h_	lib/gl3w/GL/gl3w.h	/^#define __gl3w_h_$/;"	d
__gl_h_	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define __gl_h_$/;"	d
__gl_h_	lib/gl3w/GL/gl3w.h	/^#define __gl_h_$/;"	d
__glcorearb_h_	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^#define __glcorearb_h_$/;"	d
__glcorearb_h_	lib/gl3w/GL/glcorearb.h	/^#define __glcorearb_h_$/;"	d
__glsl_shader_frag_spv	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static uint32_t __glsl_shader_frag_spv[] =$/;"	v	typeref:typename:uint32_t[]	file:
__glsl_shader_vert_spv	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static uint32_t __glsl_shader_vert_spv[] =$/;"	v	typeref:typename:uint32_t[]	file:
__int_free	lib/klib/test/klist_test.c	/^#define __int_free(/;"	d	file:
__kb_destroy	lib/klib/kbtree.h	/^#define __kb_destroy(/;"	d
__kb_get_first	lib/klib/kbtree.h	/^#define __kb_get_first(/;"	d
__kb_traverse	lib/klib/kbtree.h	/^#define __kb_traverse(/;"	d
__kbstack_t	lib/klib/kbtree.h	/^} __kbstack_t;$/;"	t	typeref:struct:__anon929281af0408
__kmin_hj_aux	lib/klib/kmath.c	/^static double __kmin_hj_aux(kmin_f func, int n, double *x1, void *data, double fx1, double *dx, /;"	f	typeref:typename:double	file:
__ksplit_aux	lib/klib/kstring.c	/^#define __ksplit_aux /;"	d	file:
__kstring_t	lib/klib/bgzf.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	lib/klib/knhx.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	lib/klib/kseq.h	/^typedef struct __kstring_t {$/;"	s
__kstring_t	lib/klib/kstring.h	/^typedef struct __kstring_t {$/;"	s
__max_16	lib/klib/ksw.c	/^#define __max_16(/;"	d	file:
__max_8	lib/klib/ksw.c	/^#define __max_8(/;"	d	file:
__new_node	lib/klib/kson.c	/^#define __new_node(/;"	d	file:
__push_back	lib/klib/knhx.c	/^#define __push_back(/;"	d	file:
__push_back	lib/klib/kson.c	/^#define __push_back(/;"	d	file:
_bgzf_close	lib/klib/bgzf.c	/^#define _bgzf_close(/;"	d	file:
_bgzf_dopen	lib/klib/bgzf.c	/^#define _bgzf_dopen(/;"	d	file:
_bgzf_file_t	lib/klib/bgzf.c	/^typedef FILE *_bgzf_file_t;$/;"	t	typeref:typename:FILE *	file:
_bgzf_file_t	lib/klib/bgzf.c	/^typedef knetFile *_bgzf_file_t;$/;"	t	typeref:typename:knetFile *	file:
_bgzf_fileno	lib/klib/bgzf.c	/^#define _bgzf_fileno(/;"	d	file:
_bgzf_open	lib/klib/bgzf.c	/^#define _bgzf_open(/;"	d	file:
_bgzf_read	lib/klib/bgzf.c	/^#define _bgzf_read(/;"	d	file:
_bgzf_seek	lib/klib/bgzf.c	/^#define _bgzf_seek(/;"	d	file:
_bgzf_tell	lib/klib/bgzf.c	/^#define _bgzf_tell(/;"	d	file:
_bgzf_write	lib/klib/bgzf.c	/^#define _bgzf_write(/;"	d	file:
_glfw3_h_	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^#define _glfw3_h_$/;"	d
_glfw3_native_h_	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3native.h	/^#define _glfw3_native_h_$/;"	d
_grow_capacity	lib/cimgui/imgui/imgui.h	/^    inline int          _grow_capacity(int sz) const            { int new_capacity = Capacity ? /;"	f	class:ImVector	typeref:typename:int
_kf_gammap	lib/klib/kmath.c	/^static double _kf_gammap(double s, double z)$/;"	f	typeref:typename:double	file:
_kf_gammap	lib/klib/lua/klib.lua	/^	local function _kf_gammap(s, z)$/;"	f
_kf_gammaq	lib/klib/kmath.c	/^static double _kf_gammaq(double s, double z)$/;"	f	typeref:typename:double	file:
_kf_gammaq	lib/klib/lua/klib.lua	/^	local function _kf_gammaq(s, z)$/;"	f
_krand_t	lib/klib/kmath.c	/^struct _krand_t {$/;"	s	file:
_kswq_t	lib/klib/ksw.c	/^struct _kswq_t {$/;"	s	file:
a	lib/klib/khmm.h	/^	FLOAT **a, **e; \/\/ transition matrix and emitting probilities$/;"	m	struct:__anonf542711f0108	typeref:typename:FLOAT **
a	lib/nuklear/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc	typeref:typename:float[2]
a	lib/nuklear/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc_filled	typeref:typename:float[2]
a	lib/nuklear/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
a	lib/nuklear/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
a	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
a	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
a	lib/nuklear/src/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc	typeref:typename:float[2]
a	lib/nuklear/src/nuklear.h	/^    float a[2];$/;"	m	struct:nk_command_arc_filled	typeref:typename:float[2]
a	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
a	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i a;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
a	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
a	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
a0	lib/klib/khmm.h	/^	FLOAT *a0; \/\/ trasition matrix from the start state$/;"	m	struct:__anonf542711f0108	typeref:typename:FLOAT *
action	lib/klib/kthread.c	/^	int action;$/;"	m	struct:__anone5c783700208	typeref:typename:int	file:
active	lib/nuklear/demo/node_editor.c	/^    int active;$/;"	m	struct:node_linking	typeref:typename:int	file:
active	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state	typeref:typename:int
active	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state	typeref:typename:int
active	lib/nuklear/nuklear.h	/^    int active;$/;"	m	struct:nk_buffer_marker	typeref:typename:int
active	lib/nuklear/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_buffer	typeref:typename:int
active	lib/nuklear/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_state	typeref:typename:int
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
active	lib/nuklear/nuklear.h	/^    struct nk_window *active;$/;"	m	struct:nk_context	typeref:struct:nk_window *
active	lib/nuklear/nuklear.h	/^    unsigned char active;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
active	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state	typeref:typename:int
active	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state	typeref:typename:int
active	lib/nuklear/src/nuklear.h	/^    int active;$/;"	m	struct:nk_buffer_marker	typeref:typename:int
active	lib/nuklear/src/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_buffer	typeref:typename:int
active	lib/nuklear/src/nuklear.h	/^    int active;$/;"	m	struct:nk_popup_state	typeref:typename:int
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
active	lib/nuklear/src/nuklear.h	/^    struct nk_window *active;$/;"	m	struct:nk_context	typeref:struct:nk_window *
active	lib/nuklear/src/nuklear.h	/^    unsigned char active;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
active_con	lib/nuklear/nuklear.h	/^    unsigned active_con;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
active_con	lib/nuklear/src/nuklear.h	/^    unsigned active_con;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
active_head	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_node *active_head;$/;"	m	struct:stbrp_context	typeref:typename:stbrp_node *
active_head	lib/nuklear/nuklear.h	/^    struct nk_rp_node *active_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node *
active_head	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node *active_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node *	file:
add_node	lib/klib/knhx.c	/^static inline char *add_node(const char *s, knaux_t *aux, int x)$/;"	f	typeref:typename:char *	file:
ae	lib/klib/khmm.h	/^	FLOAT **ae; \/\/ auxiliary array for acceleration, should be calculated by hmm_pre_backward()$/;"	m	struct:__anonf542711f0108	typeref:typename:FLOAT **
alertView:clickedButtonAtIndex:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
align	lib/cimgui/imgui/stb_rect_pack.h	/^   int align;$/;"	m	struct:stbrp_context	typeref:typename:int
align	lib/nuklear/nuklear.h	/^    enum nk_style_header_align align;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_header_align
align	lib/nuklear/nuklear.h	/^    int align;$/;"	m	struct:nk_rp_context	typeref:typename:int
align	lib/nuklear/src/nuklear.h	/^    enum nk_style_header_align align;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_style_header_align
align	lib/nuklear/src/nuklear_font.c	/^    int align;$/;"	m	struct:nk_rp_context	typeref:typename:int	file:
all	build/Makefile	/^all: cmake_check_build_system$/;"	t
all	lib/cimgui/cimgui/Makefile	/^all:imgui_example$/;"	t
all	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^all: $(EXE)$/;"	t
all	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^all: $(EXE)$/;"	t
all	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^all: $(EXE)$/;"	t
all	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^all: $(EXE)$/;"	t
all	lib/klib/test/Makefile	/^all:$(PROGS)$/;"	t
all	lib/nuklear/example/Makefile	/^all: generate file_browser extended canvas skinning$/;"	t
allegro5	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^} allegro5;$/;"	v	typeref:struct:nk_allegro5
alloc	lib/nuklear/nuklear.h	/^    nk_plugin_alloc alloc;$/;"	m	struct:nk_allocator	typeref:typename:nk_plugin_alloc
alloc	lib/nuklear/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_allocator
alloc	lib/nuklear/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_pool	typeref:struct:nk_allocator
alloc	lib/nuklear/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_allocator
alloc	lib/nuklear/src/nuklear.h	/^    nk_plugin_alloc alloc;$/;"	m	struct:nk_allocator	typeref:typename:nk_plugin_alloc
alloc	lib/nuklear/src/nuklear.h	/^    struct nk_allocator alloc;$/;"	m	struct:nk_pool	typeref:struct:nk_allocator
alloc	lib/nuklear/src/nuklear_font.c	/^    struct nk_allocator alloc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_allocator	file:
alloc	lib/nuklear/src/nuklear_font.c	/^    struct nk_allocator alloc;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_allocator	file:
alloca	lib/cimgui/imgui/imgui_draw.cpp	/^#define alloca /;"	d	file:
allocated	lib/nuklear/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
allocated	lib/nuklear/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
allocated	lib/nuklear/src/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
allocated	lib/nuklear/src/nuklear.h	/^    nk_size allocated;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
allocator	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^    VkAllocationCallbacks* allocator;$/;"	m	struct:ImGui_ImplGlfwVulkan_Init_Data	typeref:typename:VkAllocationCallbacks *
alphabet	lib/klib/test/kstring_bench2.c	/^static int alphabet = 2;$/;"	v	typeref:typename:int	file:
app	build/Makefile	/^app: cmake_check_build_system$/;"	t
app/fast	build/Makefile	/^app\/fast:$/;"	t
appendf	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextBuffer::appendf(const char* fmt, ...)$/;"	f	class:ImGuiTextBuffer	typeref:typename:void
appendfv	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextBuffer::appendfv(const char* fmt, va_list args)$/;"	f	class:ImGuiTextBuffer	typeref:typename:void
application:didFinishLaunchingWithOptions:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)l/;"	m	implementation:AppDelegate
applicationDidBecomeActive:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^- (void)applicationDidBecomeActive:(UIApplication *)application {$/;"	m	implementation:AppDelegate
applicationDidEnterBackground:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^- (void)applicationDidEnterBackground:(UIApplication *)application {$/;"	m	implementation:AppDelegate
applicationDidFinishLaunching:	lib/cimgui/imgui/examples/apple_example/imguiex-osx/AppDelegate.m	/^- (void)applicationDidFinishLaunching:(NSNotification *)aNotification {$/;"	m	implementation:AppDelegate
applicationWillEnterForeground:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^- (void)applicationWillEnterForeground:(UIApplication *)application {$/;"	m	implementation:AppDelegate
applicationWillResignActive:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^- (void)applicationWillResignActive:(UIApplication *)application {$/;"	m	implementation:AppDelegate
applicationWillTerminate:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.m	/^- (void)applicationWillTerminate:(UIApplication *)application {$/;"	m	implementation:AppDelegate
applicationWillTerminate:	lib/cimgui/imgui/examples/apple_example/imguiex-osx/AppDelegate.m	/^- (void)applicationWillTerminate:(NSNotification *)aNotification {$/;"	m	implementation:AppDelegate
arc_segment_count	lib/nuklear/nuklear.h	/^    unsigned arc_segment_count; \/* number of segments used for arcs: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
arc_segment_count	lib/nuklear/src/nuklear.h	/^    unsigned arc_segment_count; \/* number of segments used for arcs: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
array_of_unicode_codepoints	lib/cimgui/imgui/stb_truetype.h	/^   int *array_of_unicode_codepoints;       \/\/ if non-zero, then this is an array of unicode co/;"	m	struct:__anonc4c159420508	typeref:typename:int *
array_of_unicode_codepoints	lib/nuklear/nuklear.h	/^    int *array_of_unicode_codepoints;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int *
array_of_unicode_codepoints	lib/nuklear/src/nuklear_font.c	/^    int *array_of_unicode_codepoints;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int *	file:
ascent	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int ascent;$/;"	m	struct:XFont	typeref:typename:int
ascent	lib/nuklear/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font	typeref:typename:float
ascent	lib/nuklear/src/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font	typeref:typename:float
assigned	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	typeref:typename:uint32_t:1	file:
at_x	lib/nuklear/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
at_x	lib/nuklear/src/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
at_y	lib/nuklear/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
at_y	lib/nuklear/src/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
atlas	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:__anon70d184300108	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:__anon39ff3a1e0108	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_glfw	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sdl	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sdl	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sdl	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sfml	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_sfml	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_x11	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:nk_x11	typeref:struct:nk_font_atlas
atlas	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct nk_font_atlas atlas;$/;"	m	struct:rawfb_context	typeref:struct:nk_font_atlas
attr	lib/nuklear/demo/x11/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	typeref:typename:XWindowAttributes	file:
attr	lib/nuklear/demo/x11_opengl2/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	typeref:typename:XWindowAttributes	file:
attr	lib/nuklear/demo/x11_opengl3/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	typeref:typename:XWindowAttributes	file:
attr	lib/nuklear/demo/x11_rawfb/main.c	/^    XWindowAttributes attr;$/;"	m	struct:XWindow	typeref:typename:XWindowAttributes	file:
attrib_col	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
attrib_col	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint attrib_col;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
attrib_col	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
attrib_col	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint attrib_col;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
attrib_col	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_sfml_device	typeref:typename:GLint
attrib_col	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint attrib_col;$/;"	m	struct:nk_x11_device	typeref:typename:GLint
attrib_col	lib/nuklear/example/canvas.c	/^    GLint attrib_col;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_col	lib/nuklear/example/extended.c	/^    GLint attrib_col;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_col	lib/nuklear/example/file_browser.c	/^    GLint attrib_col;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_col	lib/nuklear/example/skinning.c	/^    GLint attrib_col;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_pos	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
attrib_pos	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint attrib_pos;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
attrib_pos	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
attrib_pos	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint attrib_pos;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
attrib_pos	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_sfml_device	typeref:typename:GLint
attrib_pos	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint attrib_pos;$/;"	m	struct:nk_x11_device	typeref:typename:GLint
attrib_pos	lib/nuklear/example/canvas.c	/^    GLint attrib_pos;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_pos	lib/nuklear/example/extended.c	/^    GLint attrib_pos;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_pos	lib/nuklear/example/file_browser.c	/^    GLint attrib_pos;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_pos	lib/nuklear/example/skinning.c	/^    GLint attrib_pos;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_uv	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
attrib_uv	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint attrib_uv;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
attrib_uv	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
attrib_uv	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint attrib_uv;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
attrib_uv	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_sfml_device	typeref:typename:GLint
attrib_uv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint attrib_uv;$/;"	m	struct:nk_x11_device	typeref:typename:GLint
attrib_uv	lib/nuklear/example/canvas.c	/^    GLint attrib_uv;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_uv	lib/nuklear/example/extended.c	/^    GLint attrib_uv;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_uv	lib/nuklear/example/file_browser.c	/^    GLint attrib_uv;$/;"	m	struct:device	typeref:typename:GLint	file:
attrib_uv	lib/nuklear/example/skinning.c	/^    GLint attrib_uv;$/;"	m	struct:device	typeref:typename:GLint	file:
attribute	lib/nuklear/nuklear.h	/^    enum nk_draw_vertex_layout_attribute attribute;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_attribute
attribute	lib/nuklear/src/nuklear.h	/^    enum nk_draw_vertex_layout_attribute attribute;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_attribute
auth	lib/klib/kurl.c	/^	char *url, *date, *auth;$/;"	m	struct:__anonf630694b0108	typeref:typename:char ***	file:
author	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    "author" : "xcode"$/;"	s	object:info
author	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    "author" : "xcode"$/;"	s	object:info
author	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/Contents.json	/^    "author" : "xcode"$/;"	s	object:info
autocorrectionType	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^{$/;"	m	implementation:KeyboardHandleriOS
aux_func	lib/klib/lua/klib.lua	/^	local function aux_func(t) -- auxiliary function$/;"	f
available	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon3287e0280108	typeref:typename:size_t
b	lib/cimgui/imgui/imgui.h	/^        const char* b;$/;"	m	struct:ImGuiTextFilter::TextRange	typeref:typename:const char *
b	lib/klib/khmm.h	/^	FLOAT **f, **b, *s;$/;"	m	struct:__anonf542711f0208	typeref:typename:FLOAT ****
b	lib/klib/kurl.c	/^	union { uint8_t b[BLOCK_LENGTH]; uint32_t w[BLOCK_LENGTH\/4]; } buf;$/;"	m	union:sha1nfo::__anonf630694b020a	typeref:typename:uint8_t[]	file:
b	lib/klib/kurl.c	/^	union { uint8_t b[HASH_LENGTH]; uint32_t w[HASH_LENGTH\/4]; } state;$/;"	m	union:sha1nfo::__anonf630694b030a	typeref:typename:uint8_t[]	file:
b	lib/klib/test/ksort_test.cc	/^	rstype_t *b, *e;$/;"	m	struct:__anonef293a910108	typeref:typename:rstype_t *	file:
b	lib/nuklear/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
b	lib/nuklear/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
b	lib/nuklear/nuklear.h	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	m	union:nk_murmur_hash::__anond7ed0994080a	typeref:typename:const nk_byte *
b	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
b	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
b	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
b	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i b;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
b	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
b	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
b	lib/nuklear/src/nuklear_util.c	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	m	union:nk_murmur_hash::__anona0ff62e3010a	typeref:typename:const nk_byte *	file:
back	lib/cimgui/imgui/imgui.h	/^    inline const value_type&    back() const                    { IM_ASSERT(Size > 0); return Da/;"	f	class:ImVector	typeref:typename:const value_type &
back	lib/cimgui/imgui/imgui.h	/^    inline value_type&          back()                          { IM_ASSERT(Size > 0); return Da/;"	f	class:ImVector	typeref:typename:value_type &
background	lib/nuklear/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_command_text	typeref:struct:nk_color
background	lib/nuklear/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
background	lib/nuklear/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_text	typeref:struct:nk_color
background	lib/nuklear/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_item
background	lib/nuklear/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_item
background	lib/nuklear/src/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_command_text	typeref:struct:nk_color
background	lib/nuklear/src/nuklear.h	/^    struct nk_color background;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
background	lib/nuklear/src/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_chart	typeref:struct:nk_style_item
background	lib/nuklear/src/nuklear.h	/^    struct nk_style_item background;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_item
background	lib/nuklear/src/nuklear_internal.h	/^    struct nk_color background;$/;"	m	struct:nk_text	typeref:struct:nk_color
bar_active	lib/nuklear/nuklear.h	/^    struct nk_color bar_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_active	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_filled	lib/nuklear/nuklear.h	/^    struct nk_color bar_filled;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_filled	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_filled;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_height	lib/nuklear/nuklear.h	/^    float bar_height;$/;"	m	struct:nk_style_slider	typeref:typename:float
bar_height	lib/nuklear/src/nuklear.h	/^    float bar_height;$/;"	m	struct:nk_style_slider	typeref:typename:float
bar_hover	lib/nuklear/nuklear.h	/^    struct nk_color bar_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_normal	lib/nuklear/nuklear.h	/^    struct nk_color bar_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
bar_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color bar_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
base	lib/klib/kalloc.c	/^	header_t base, *loop_head, *core_head; \/* base is a zero-sized block always kept in the loop */;"	m	struct:__anon3287e0230108	typeref:typename:header_t	file:
base	lib/nuklear/nuklear.h	/^    struct nk_buffer *base;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_buffer *
base	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *base;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_buffer *
baseline_y_delta	lib/cimgui/imgui/stb_textedit.h	/^   float baseline_y_delta;  \/\/ position of baseline relative to previous row's baseline$/;"	m	struct:__anonfd61af4b0408	typeref:typename:float
baseline_y_delta	lib/nuklear/nuklear.h	/^   float baseline_y_delta;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
baseline_y_delta	lib/nuklear/src/nuklear_text_editor.c	/^   float baseline_y_delta;$/;"	m	struct:nk_text_edit_row	typeref:typename:float	file:
basic_demo	lib/nuklear/example/extended.c	/^basic_demo(struct nk_context *ctx, struct media *media)$/;"	f	typeref:typename:void	file:
begin	lib/cimgui/imgui/imgui.h	/^        const char* begin() const { return b; }$/;"	f	struct:ImGuiTextFilter::TextRange	typeref:typename:const char *
begin	lib/cimgui/imgui/imgui.h	/^    const char*         begin() const { return &Buf.front(); }$/;"	f	struct:ImGuiTextBuffer	typeref:typename:const char *
begin	lib/cimgui/imgui/imgui.h	/^    inline const_iterator       begin() const                   { return Data; }$/;"	f	class:ImVector	typeref:typename:const_iterator
begin	lib/cimgui/imgui/imgui.h	/^    inline iterator             begin()                         { return Data; }$/;"	f	class:ImVector	typeref:typename:iterator
begin	lib/nuklear/demo/node_editor.c	/^    struct node *begin;$/;"	m	struct:node_editor	typeref:struct:node *	file:
begin	lib/nuklear/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
begin	lib/nuklear/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
begin	lib/nuklear/nuklear.h	/^    nk_size begin;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
begin	lib/nuklear/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i
begin	lib/nuklear/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_line	typeref:struct:nk_vec2i
begin	lib/nuklear/nuklear.h	/^    struct nk_window *begin;$/;"	m	struct:nk_context	typeref:struct:nk_window *
begin	lib/nuklear/src/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
begin	lib/nuklear/src/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
begin	lib/nuklear/src/nuklear.h	/^    nk_size begin;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
begin	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i
begin	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i begin;$/;"	m	struct:nk_command_line	typeref:struct:nk_vec2i
begin	lib/nuklear/src/nuklear.h	/^    struct nk_window *begin;$/;"	m	struct:nk_context	typeref:struct:nk_window *
bgindex	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
bgzf_check_EOF	lib/klib/bgzf.c	/^int bgzf_check_EOF(BGZF *fp)$/;"	f	typeref:typename:int
bgzf_close	lib/klib/bgzf.c	/^int bgzf_close(BGZF* fp)$/;"	f	typeref:typename:int
bgzf_dopen	lib/klib/bgzf.c	/^BGZF *bgzf_dopen(int fd, const char *mode)$/;"	f	typeref:typename:BGZF *
bgzf_fdopen	lib/klib/bgzf.h	/^	#define bgzf_fdopen(/;"	d
bgzf_flush	lib/klib/bgzf.c	/^int bgzf_flush(BGZF *fp)$/;"	f	typeref:typename:int
bgzf_flush_try	lib/klib/bgzf.c	/^int bgzf_flush_try(BGZF *fp, ssize_t size)$/;"	f	typeref:typename:int
bgzf_getc	lib/klib/bgzf.c	/^int bgzf_getc(BGZF *fp)$/;"	f	typeref:typename:int
bgzf_getline	lib/klib/bgzf.c	/^int bgzf_getline(BGZF *fp, int delim, kstring_t *str)$/;"	f	typeref:typename:int
bgzf_is_bgzf	lib/klib/bgzf.c	/^int bgzf_is_bgzf(const char *fn)$/;"	f	typeref:typename:int
bgzf_open	lib/klib/bgzf.c	/^BGZF *bgzf_open(const char *path, const char *mode)$/;"	f	typeref:typename:BGZF *
bgzf_read	lib/klib/bgzf.c	/^ssize_t bgzf_read(BGZF *fp, void *data, ssize_t length)$/;"	f	typeref:typename:ssize_t
bgzf_read_block	lib/klib/bgzf.c	/^int bgzf_read_block(BGZF *fp)$/;"	f	typeref:typename:int
bgzf_read_init	lib/klib/bgzf.c	/^static BGZF *bgzf_read_init()$/;"	f	typeref:typename:BGZF *	file:
bgzf_seek	lib/klib/bgzf.c	/^int64_t bgzf_seek(BGZF* fp, int64_t pos, int where)$/;"	f	typeref:typename:int64_t
bgzf_set_cache_size	lib/klib/bgzf.c	/^void bgzf_set_cache_size(BGZF *fp, int cache_size)$/;"	f	typeref:typename:void
bgzf_tell	lib/klib/bgzf.h	/^	#define bgzf_tell(/;"	d
bgzf_write	lib/klib/bgzf.c	/^ssize_t bgzf_write(BGZF *fp, const void *data, ssize_t length)$/;"	f	typeref:typename:ssize_t
bgzf_write_init	lib/klib/bgzf.c	/^static BGZF *bgzf_write_init(int compress_level) \/\/ compress_level==-1 for the default level$/;"	f	typeref:typename:BGZF *	file:
binary_to_compressed_c	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^bool binary_to_compressed_c(const char* filename, const char* symbol, bool use_base85_encoding, /;"	f	typeref:typename:bool
bitmap	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HBITMAP bitmap;$/;"	m	struct:__anonc4120a9e0108	typeref:typename:HBITMAP
bitmap	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpImage *bitmap;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:GpImage *
blend_state	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11BlendState *blend_state;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11BlendState *
block	lib/klib/bgzf.c	/^	uint8_t *block;$/;"	m	struct:__anone038ee160108	typeref:typename:uint8_t *	file:
block_address	lib/klib/bgzf.h	/^    int64_t block_address;$/;"	m	struct:__anone038ee1b0108	typeref:typename:int64_t
block_length	lib/klib/bgzf.h	/^    int block_length, block_offset;$/;"	m	struct:__anone038ee1b0108	typeref:typename:int
block_offset	lib/klib/bgzf.h	/^    int block_length, block_offset;$/;"	m	struct:__anone038ee1b0108	typeref:typename:int
blue	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned short* blue;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
blueBits	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int blueBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_panel	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_button	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_chart	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_combo	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_edit	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_progress	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_property	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_slider	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_tab	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_toggle	typeref:typename:float
border	lib/nuklear/nuklear.h	/^    float border;$/;"	m	struct:nk_style_window	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_panel	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_button	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_chart	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_combo	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_edit	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_progress	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_property	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_slider	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_tab	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_toggle	typeref:typename:float
border	lib/nuklear/src/nuklear.h	/^    float border;$/;"	m	struct:nk_style_window	typeref:typename:float
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_tab	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
border_color	lib/nuklear/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_slider	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_tab	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
border_cursor	lib/nuklear/nuklear.h	/^    float border_cursor;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
border_cursor	lib/nuklear/src/nuklear.h	/^    float border_cursor;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
bottom	lib/nuklear/nuklear.h	/^    struct nk_color bottom;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
bottom	lib/nuklear/src/nuklear.h	/^    struct nk_color bottom;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
bottom_y	lib/cimgui/imgui/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anonc4c159421108	typeref:typename:int
bounds	lib/cimgui/imgui/stb_truetype.h	/^   int bounds;$/;"	m	struct:__anonc4c159420f08	typeref:typename:int
bounds	lib/nuklear/demo/node_editor.c	/^    struct nk_rect bounds;$/;"	m	struct:node	typeref:struct:nk_rect	file:
bounds	lib/nuklear/demo/node_editor.c	/^    struct nk_rect bounds;$/;"	m	struct:node_editor	typeref:struct:nk_rect	file:
bounds	lib/nuklear/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_panel	typeref:struct:nk_rect
bounds	lib/nuklear/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_window	typeref:struct:nk_rect
bounds	lib/nuklear/src/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_panel	typeref:struct:nk_rect
bounds	lib/nuklear/src/nuklear.h	/^    struct nk_rect bounds;$/;"	m	struct:nk_window	typeref:struct:nk_rect
brush	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpSolidFill *brush;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:GpSolidFill *
bt1_countInU64	lib/klib/test/kbit_test.c	/^inline static int bt1_countInU64(uint64_t dw, int c) \/\/ the kbi_DNAcount64() equivalence$/;"	f	typeref:typename:int	file:
bt1_pop64	lib/klib/test/kbit_test.c	/^inline static int bt1_pop64(uint64_t x) \/\/ the kbi_popcount64() equivalence; similar to popcou/;"	f	typeref:typename:int	file:
btnServername	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^@property (weak, nonatomic) IBOutlet UIButton *btnServername;$/;"	p	interface:GameViewController
buf	lib/klib/kurl.c	/^	uint8_t *buf; \/\/ buffer$/;"	m	struct:kurl_t	typeref:typename:uint8_t *	file:
buf	lib/klib/kurl.c	/^	union { uint8_t b[BLOCK_LENGTH]; uint32_t w[BLOCK_LENGTH\/4]; } buf;$/;"	m	struct:sha1nfo	typeref:union:sha1nfo::__anonf630694b020a	file:
buf	lib/klib/test/kthread_test2.c	/^	char *buf;$/;"	m	struct:__anon03438e700108	typeref:typename:char *	file:
buf	lib/nuklear/nuklear.h	/^    struct nk_popup_buffer buf;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_buffer
buf	lib/nuklear/src/nuklear.h	/^    struct nk_popup_buffer buf;$/;"	m	struct:nk_popup_state	typeref:struct:nk_popup_buffer
bufOffset	lib/klib/kurl.c	/^	uint8_t bufOffset;$/;"	m	struct:sha1nfo	typeref:typename:uint8_t	file:
buf_size	lib/klib/test/kthread_test2.c	/^	int max_lines, buf_size, n_threads;$/;"	m	struct:__anon03438e700108	typeref:typename:int	file:
buffer	lib/nuklear/nuklear.h	/^    char buffer[NK_MAX_NUMBER_BUFFER];$/;"	m	struct:nk_property_state	typeref:typename:char[]
buffer	lib/nuklear/nuklear.h	/^    struct nk_buffer *buffer;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
buffer	lib/nuklear/nuklear.h	/^    struct nk_buffer buffer;$/;"	m	struct:nk_str	typeref:struct:nk_buffer
buffer	lib/nuklear/nuklear.h	/^    struct nk_command_buffer *buffer;$/;"	m	struct:nk_panel	typeref:struct:nk_command_buffer *
buffer	lib/nuklear/nuklear.h	/^    struct nk_command_buffer buffer;$/;"	m	struct:nk_window	typeref:struct:nk_command_buffer
buffer	lib/nuklear/src/nuklear.h	/^    char buffer[NK_MAX_NUMBER_BUFFER];$/;"	m	struct:nk_property_state	typeref:typename:char[]
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *buffer;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_buffer buffer;$/;"	m	struct:nk_str	typeref:struct:nk_buffer
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_command_buffer *buffer;$/;"	m	struct:nk_panel	typeref:struct:nk_command_buffer *
buffer	lib/nuklear/src/nuklear.h	/^    struct nk_command_buffer buffer;$/;"	m	struct:nk_window	typeref:struct:nk_command_buffer
buffer_start	lib/nuklear/example/stb_image.h	/^   stbi_uc buffer_start[128];$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi_uc[128]
buffer_sync	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLsync buffer_sync;$/;"	m	struct:nk_glfw_device	typeref:typename:GLsync
buflen	lib/nuklear/example/stb_image.h	/^   int buflen;$/;"	m	struct:__anonc731c3c80308	typeref:typename:int
build	lib/nuklear/nuklear.h	/^    int build;$/;"	m	struct:nk_context	typeref:typename:int
build	lib/nuklear/nuklear.h	/^    struct nk_font_bake_data *build;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_bake_data *
build	lib/nuklear/src/nuklear.h	/^    int build;$/;"	m	struct:nk_context	typeref:typename:int
build	lib/nuklear/src/nuklear_font.c	/^    struct nk_font_bake_data *build;$/;"	m	struct:nk_font_baker	typeref:struct:nk_font_bake_data *	file:
builtin	lib/klib/kexpr.c	/^		void (*builtin)(struct ke1_s *a, struct ke1_s *b); \/\/ execution function$/;"	m	union:ke1_s::__anon975ae7f7010a	typeref:typename:void (*)(struct ke1_s * a,struct ke1_s * b)	file:
bundle	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^CFBundleRef bundle;$/;"	v	typeref:typename:CFBundleRef
bundle	lib/gl3w/GL/gl3w.c	/^CFBundleRef bundle;$/;"	v	typeref:typename:CFBundleRef
bundleURL	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^CFURLRef bundleURL;$/;"	v	typeref:typename:CFURLRef
bundleURL	lib/gl3w/GL/gl3w.c	/^CFURLRef bundleURL;$/;"	v	typeref:typename:CFURLRef
button	lib/nuklear/example/skinning.c	/^    struct nk_image button;$/;"	m	struct:media	typeref:struct:nk_image	file:
button	lib/nuklear/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
button	lib/nuklear/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_button
button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button button;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_button
button_active	lib/nuklear/example/skinning.c	/^    struct nk_image button_active;$/;"	m	struct:media	typeref:struct:nk_image	file:
button_behavior	lib/nuklear/nuklear.h	/^    enum nk_button_behavior button_behavior;$/;"	m	struct:nk_context	typeref:enum:nk_button_behavior
button_behavior	lib/nuklear/src/nuklear.h	/^    enum nk_button_behavior button_behavior;$/;"	m	struct:nk_context	typeref:enum:nk_button_behavior
button_behaviors	lib/nuklear/nuklear.h	/^    struct nk_config_stack_button_behavior button_behaviors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_button_behavior
button_behaviors	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_button_behavior button_behaviors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_button_behavior
button_demo	lib/nuklear/example/extended.c	/^button_demo(struct nk_context *ctx, struct media *media)$/;"	f	typeref:typename:void	file:
button_hover	lib/nuklear/example/skinning.c	/^    struct nk_image button_hover;$/;"	m	struct:media	typeref:struct:nk_image	file:
button_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 button_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
button_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 button_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
buttons	lib/nuklear/nuklear.h	/^    struct nk_mouse_button buttons[NK_BUTTON_MAX];$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse_button[]
buttons	lib/nuklear/src/nuklear.h	/^    struct nk_mouse_button buttons[NK_BUTTON_MAX];$/;"	m	struct:nk_mouse	typeref:struct:nk_mouse_button[]
byteCount	lib/klib/kurl.c	/^	uint32_t byteCount;$/;"	m	struct:sha1nfo	typeref:typename:uint32_t	file:
c	lib/nuklear/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
c	lib/nuklear/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
c	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big	typeref:typename:char
c	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_vec2i
c	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i c;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_vec2i
c	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big	typeref:typename:char
c_str	lib/cimgui/imgui/imgui.h	/^    const char*         c_str() const { return Buf.Data; }$/;"	f	struct:ImGuiTextBuffer	typeref:typename:const char *
cache	lib/klib/bgzf.h	/^	void *cache; \/\/ a pointer to a hash table$/;"	m	struct:__anone038ee1b0108	typeref:typename:void *
cache_block	lib/klib/bgzf.c	/^static void cache_block(BGZF *fp, int size) {}$/;"	f	typeref:typename:void	file:
cache_block	lib/klib/bgzf.c	/^static void cache_block(BGZF *fp, int size)$/;"	f	typeref:typename:void	file:
cache_size	lib/klib/bgzf.h	/^	int cache_size;$/;"	m	struct:__anone038ee1b0108	typeref:typename:int
cache_t	lib/klib/bgzf.c	/^} cache_t;$/;"	t	typeref:struct:__anone038ee160108	file:
calculator	lib/nuklear/demo/calculator.c	/^calculator(struct nk_context *ctx)$/;"	f	typeref:typename:void	file:
callback	lib/nuklear/nuklear.h	/^    nk_command_custom_callback callback;$/;"	m	struct:nk_command_custom	typeref:typename:nk_command_custom_callback
callback	lib/nuklear/src/nuklear.h	/^    nk_command_custom_callback callback;$/;"	m	struct:nk_command_custom	typeref:typename:nk_command_custom_callback
callback_data	lib/nuklear/nuklear.h	/^    nk_handle callback_data;$/;"	m	struct:nk_command_custom	typeref:typename:nk_handle
callback_data	lib/nuklear/src/nuklear.h	/^    nk_handle callback_data;$/;"	m	struct:nk_command_custom	typeref:typename:nk_handle
calloc2	lib/klib/khmm.h	/^static inline void **calloc2(int n_row, int n_col, int size)$/;"	f	typeref:typename:void **
calls	lib/nuklear/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
calls	lib/nuklear/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
calls	lib/nuklear/src/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
calls	lib/nuklear/src/nuklear.h	/^    nk_size calls;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
canBecomeFirstResponder	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^-(BOOL)canBecomeFirstResponder {$/;"	m	implementation:KeyboardHandleriOS
canvas	lib/nuklear/example/Makefile	/^canvas: generate$/;"	t
canvas_begin	lib/nuklear/example/canvas.c	/^canvas_begin(struct nk_context *ctx, struct nk_canvas *canvas, nk_flags flags,$/;"	f	typeref:typename:void	file:
canvas_end	lib/nuklear/example/canvas.c	/^canvas_end(struct nk_context *ctx, struct nk_canvas *canvas)$/;"	f	typeref:typename:void	file:
cap	lib/nuklear/nuklear.h	/^    nk_size cap;$/;"	m	struct:nk_pool	typeref:typename:nk_size
cap	lib/nuklear/src/nuklear.h	/^    nk_size cap;$/;"	m	struct:nk_pool	typeref:typename:nk_size
capacity	lib/cimgui/imgui/imgui.h	/^    inline int                  capacity() const                { return Capacity; }$/;"	f	class:ImVector	typeref:typename:int
capacity	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon3287e0280108	typeref:typename:size_t
capacity	lib/nuklear/nuklear.h	/^    unsigned capacity;$/;"	m	struct:nk_pool	typeref:typename:unsigned
capacity	lib/nuklear/src/nuklear.h	/^    unsigned capacity;$/;"	m	struct:nk_pool	typeref:typename:unsigned
cff	lib/cimgui/imgui/stb_truetype.h	/^   stbtt__buf cff;                    \/\/ cff font data$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
channel	lib/nuklear/example/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonc731c3c80e08	typeref:typename:stbi_uc
char_storage	lib/cimgui/imgui/stb_textedit.h	/^   short           char_storage;$/;"	m	struct:__anonfd61af4b0108	typeref:typename:short
char_storage	lib/nuklear/nuklear.h	/^   short char_storage;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
char_storage	lib/nuklear/src/nuklear.h	/^   short char_storage;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
chardata_for_range	lib/cimgui/imgui/stb_truetype.h	/^   stbtt_packedchar *chardata_for_range; \/\/ output$/;"	m	struct:__anonc4c159420508	typeref:typename:stbtt_packedchar *
chardata_for_range	lib/nuklear/nuklear.h	/^    struct nk_tt_packedchar *chardata_for_range; \/* output *\/$/;"	m	struct:nk_tt_pack_range	typeref:struct:nk_tt_packedchar *
chardata_for_range	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_packedchar *chardata_for_range; \/* output *\/$/;"	m	struct:nk_tt_pack_range	typeref:struct:nk_tt_packedchar *	file:
charstrings	lib/cimgui/imgui/stb_truetype.h	/^   stbtt__buf charstrings;            \/\/ the charstring index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
chart	lib/nuklear/nuklear.h	/^    struct nk_chart chart;$/;"	m	struct:nk_panel	typeref:struct:nk_chart
chart	lib/nuklear/nuklear.h	/^    struct nk_style_chart chart;$/;"	m	struct:nk_style	typeref:struct:nk_style_chart
chart	lib/nuklear/src/nuklear.h	/^    struct nk_chart chart;$/;"	m	struct:nk_panel	typeref:struct:nk_chart
chart	lib/nuklear/src/nuklear.h	/^    struct nk_style_chart chart;$/;"	m	struct:nk_style	typeref:struct:nk_style_chart
chart_type	lib/nuklear/demo/overview.c	/^                enum chart_type {CHART_LINE, CHART_HISTO, CHART_MIXED};$/;"	g	function:overview	file:
check	lib/klib/test/kstring_test.c	/^void check(const char *what, const kstring_t *ks, const char *correct)$/;"	f	typeref:typename:void
check	lib/nuklear/example/skinning.c	/^    struct nk_image check;$/;"	m	struct:media	typeref:struct:nk_image	file:
check_cursor	lib/nuklear/example/skinning.c	/^    struct nk_image check_cursor;$/;"	m	struct:media	typeref:struct:nk_image	file:
check_header	lib/klib/bgzf.c	/^static int check_header(const uint8_t *header)$/;"	f	typeref:typename:int	file:
check_shader	src/Shader.c	/^check_shader(GLuint sid) {$/;"	f	typeref:typename:void	file:
check_vk_result	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^    void (*check_vk_result)(VkResult err);$/;"	m	struct:ImGui_ImplGlfwVulkan_Init_Data	typeref:typename:void (*)(VkResult err)
check_vk_result	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void check_vk_result(VkResult err)$/;"	f	typeref:typename:void	file:
checkbox	lib/nuklear/nuklear.h	/^    struct nk_style_toggle checkbox;$/;"	m	struct:nk_style	typeref:struct:nk_style_toggle
checkbox	lib/nuklear/src/nuklear.h	/^    struct nk_style_toggle checkbox;$/;"	m	struct:nk_style	typeref:struct:nk_style_toggle
checked	lib/nuklear/example/extended.c	/^    struct nk_image checked;$/;"	m	struct:media	typeref:struct:nk_image	file:
child	lib/klib/knhx.h	/^	int *child;$/;"	m	struct:__anonf5ac750b0108	typeref:typename:int *
child	lib/klib/kson.h	/^		struct kson_node_s **child;$/;"	m	union:kson_node_s::__anonf60a9bad010a	typeref:struct:kson_node_s **
chr	lib/klib/ksa.c	/^#define chr(/;"	d	file:
cimgui	build/Makefile	/^cimgui: cmake_check_build_system$/;"	t
cimgui/fast	build/Makefile	/^cimgui\/fast:$/;"	t
circle_segment_count	lib/nuklear/nuklear.h	/^    unsigned circle_segment_count; \/* number of segments used for circles: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
circle_segment_count	lib/nuklear/src/nuklear.h	/^    unsigned circle_segment_count; \/* number of segments used for circles: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
circle_vtx	lib/nuklear/nuklear.h	/^    struct nk_vec2 circle_vtx[12];$/;"	m	struct:nk_draw_list	typeref:struct:nk_vec2[12]
circle_vtx	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 circle_vtx[12];$/;"	m	struct:nk_draw_list	typeref:struct:nk_vec2[12]
clang	lib/nuklear/demo/x11_opengl2/Makefile	/^clang: $(BIN)$/;"	t
clang	lib/nuklear/demo/x11_opengl2/Makefile	/^clang: CC = clang$/;"	t
clang	lib/nuklear/demo/x11_opengl3/Makefile	/^clang: $(BIN)$/;"	t
clang	lib/nuklear/demo/x11_opengl3/Makefile	/^clang: CC = clang$/;"	t
clean	build/Makefile	/^clean:$/;"	t
clean	lib/cimgui/cimgui/Makefile	/^clean:$/;"	t
clean	lib/cimgui/imgui/examples/opengl2_example/Makefile	/^clean:$/;"	t
clean	lib/cimgui/imgui/examples/opengl3_example/Makefile	/^clean:$/;"	t
clean	lib/cimgui/imgui/examples/sdl_opengl2_example/Makefile	/^clean:$/;"	t
clean	lib/cimgui/imgui/examples/sdl_opengl3_example/Makefile	/^clean:$/;"	t
clean	lib/klib/test/Makefile	/^clean:$/;"	t
clean	lib/nuklear/example/Makefile	/^clean:$/;"	t
clean/fast	build/Makefile	/^clean\/fast: clean$/;"	t
cleanup_vulkan	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void cleanup_vulkan()$/;"	f	typeref:typename:void	file:
clear	lib/cimgui/imgui/imgui.h	/^    inline void                 clear()                         { if (Data) { Size = Capacity = /;"	f	class:ImVector	typeref:typename:void
clear	lib/cimgui/imgui/imgui.h	/^    void                clear() { Buf.clear(); Buf.push_back(0); }$/;"	f	struct:ImGuiTextBuffer	typeref:typename:void
clearColor	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^    float clearColor[4];$/;"	m	struct:DebugHUD	typeref:typename:float[4]
clicked	lib/nuklear/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_key	typeref:typename:unsigned int
clicked	lib/nuklear/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_mouse_button	typeref:typename:unsigned int
clicked	lib/nuklear/src/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_key	typeref:typename:unsigned int
clicked	lib/nuklear/src/nuklear.h	/^    unsigned int clicked;$/;"	m	struct:nk_mouse_button	typeref:typename:unsigned int
clicked_pos	lib/nuklear/nuklear.h	/^    struct nk_vec2 clicked_pos;$/;"	m	struct:nk_mouse_button	typeref:struct:nk_vec2
clicked_pos	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 clicked_pos;$/;"	m	struct:nk_mouse_button	typeref:struct:nk_vec2
clip	lib/nuklear/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_context	typeref:struct:nk_clipboard
clip	lib/nuklear/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_text_edit	typeref:struct:nk_clipboard
clip	lib/nuklear/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_rect
clip	lib/nuklear/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_panel	typeref:struct:nk_rect
clip	lib/nuklear/src/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_context	typeref:struct:nk_clipboard
clip	lib/nuklear/src/nuklear.h	/^    struct nk_clipboard clip;$/;"	m	struct:nk_text_edit	typeref:struct:nk_clipboard
clip	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_command_buffer	typeref:struct:nk_rect
clip	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip;$/;"	m	struct:nk_panel	typeref:struct:nk_rect
clipMask	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Pixmap clipMask;$/;"	m	struct:XImageWithAlpha	typeref:typename:Pixmap
clipMaskGC	lib/nuklear/demo/x11/nuklear_xlib.h	/^    GC clipMaskGC;$/;"	m	struct:XImageWithAlpha	typeref:typename:GC
clip_rect	lib/nuklear/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_command	typeref:struct:nk_rect
clip_rect	lib/nuklear/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_list	typeref:struct:nk_rect
clip_rect	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_command	typeref:struct:nk_rect
clip_rect	lib/nuklear/src/nuklear.h	/^    struct nk_rect clip_rect;$/;"	m	struct:nk_draw_list	typeref:struct:nk_rect
clipboard_data	lib/nuklear/demo/x11/nuklear_xlib.h	/^    char *clipboard_data;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:char *
clipboard_len	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int clipboard_len;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:int
clipboard_target	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct nk_text_edit* clipboard_target;$/;"	m	struct:__anon50fc9fff0108	typeref:struct:nk_text_edit *
close_button	lib/nuklear/nuklear.h	/^    struct nk_style_button close_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_button
close_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button close_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_button
close_libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void close_libgl(void)$/;"	f	typeref:typename:void	file:
close_libgl	lib/gl3w/GL/gl3w.c	/^static void close_libgl(void)$/;"	f	typeref:typename:void	file:
close_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type close_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
close_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type close_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
cloud	lib/nuklear/example/extended.c	/^    struct nk_image cloud;$/;"	m	struct:media	typeref:struct:nk_image	file:
cmake_check_build_system	build/Makefile	/^cmake_check_build_system:$/;"	t
cmake_force	build/Makefile	/^cmake_force:$/;"	t
cmap	lib/nuklear/demo/x11/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	typeref:typename:Colormap	file:
cmap	lib/nuklear/demo/x11_opengl2/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	typeref:typename:Colormap	file:
cmap	lib/nuklear/demo/x11_opengl3/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	typeref:typename:Colormap	file:
cmap	lib/nuklear/demo/x11_rawfb/main.c	/^    Colormap cmap;$/;"	m	struct:XWindow	typeref:typename:Colormap	file:
cmd2argv	lib/klib/kopen.c	/^static char **cmd2argv(const char *cmd)$/;"	f	typeref:typename:char **	file:
cmd_count	lib/nuklear/nuklear.h	/^    unsigned int cmd_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
cmd_count	lib/nuklear/src/nuklear.h	/^    unsigned int cmd_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
cmd_offset	lib/nuklear/nuklear.h	/^    nk_size cmd_offset;$/;"	m	struct:nk_draw_list	typeref:typename:nk_size
cmd_offset	lib/nuklear/src/nuklear.h	/^    nk_size cmd_offset;$/;"	m	struct:nk_draw_list	typeref:typename:nk_size
cmds	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_allegro5	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_buffer cmds;$/;"	m	struct:__anon70d184300108	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_buffer cmds;$/;"	m	struct:__anon39ff3a1e0108	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_x11_device	typeref:struct:nk_buffer
cmds	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_buffer cmds;$/;"	m	struct:nk_x11_device	typeref:struct:nk_buffer
cmds	lib/nuklear/example/canvas.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:nk_buffer	file:
cmds	lib/nuklear/example/extended.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:nk_buffer	file:
cmds	lib/nuklear/example/file_browser.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:nk_buffer	file:
cmds	lib/nuklear/example/skinning.c	/^    struct nk_buffer cmds;$/;"	m	struct:device	typeref:struct:nk_buffer	file:
code	lib/nuklear/example/stb_image.h	/^   stbi__uint16 code[256];$/;"	m	struct:__anonc731c3c80508	typeref:typename:stbi__uint16[256]
code_bits	lib/nuklear/example/stb_image.h	/^   int            code_bits;   \/\/ number of valid bits$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
code_buffer	lib/nuklear/example/stb_image.h	/^   stbi__uint32   code_buffer; \/\/ jpeg entropy-coded buffer$/;"	m	struct:__anonc731c3c80608	typeref:typename:stbi__uint32
code_buffer	lib/nuklear/example/stb_image.h	/^   stbi__uint32 code_buffer;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:stbi__uint32
codepoint	lib/nuklear/nuklear.h	/^    nk_rune codepoint;$/;"	m	struct:nk_font_glyph	typeref:typename:nk_rune
codepoint	lib/nuklear/src/nuklear.h	/^    nk_rune codepoint;$/;"	m	struct:nk_font_glyph	typeref:typename:nk_rune
codes	lib/nuklear/example/stb_image.h	/^   stbi__gif_lzw codes[4096];$/;"	m	struct:__anonc731c3c81008	typeref:typename:stbi__gif_lzw[4096]
coeff	lib/nuklear/example/stb_image.h	/^      short   *coeff;   \/\/ progressive only$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:short *
coeff_h	lib/nuklear/example/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
coeff_w	lib/nuklear/example/stb_image.h	/^      int      coeff_w, coeff_h; \/\/ number of 8x8 coefficient blocks$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
col	lib/cimgui/cimgui/cimgui.h	/^    ImU32 col;$/;"	m	struct:ImDrawVert	typeref:typename:ImU32
col	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^    ALLEGRO_COLOR col;$/;"	m	struct:ImDrawVertAllegro	typeref:typename:ALLEGRO_COLOR	file:
col	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^    D3DCOLOR col;$/;"	m	struct:CUSTOMVERTEX	typeref:typename:D3DCOLOR	file:
col	lib/cimgui/imgui/imgui.h	/^    ImU32   col;$/;"	m	struct:ImDrawVert	typeref:typename:ImU32
col	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    nk_byte col[4];$/;"	m	struct:nk_d3d11_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    nk_uchar col[4];$/;"	m	struct:nk_d3d9_vertex	typeref:typename:nk_uchar[4]
col	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_sdl_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_sdl_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    nk_byte col[4];$/;"	m	struct:nk_sdl_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_sfml_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_sfml_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    nk_byte col[4];$/;"	m	struct:nk_x11_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    nk_byte col[4];$/;"	m	struct:nk_x11_vertex	typeref:typename:nk_byte[4]
col	lib/nuklear/example/canvas.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]	file:
col	lib/nuklear/example/extended.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]	file:
col	lib/nuklear/example/file_browser.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]	file:
col	lib/nuklear/example/skinning.c	/^    nk_byte col[4];$/;"	m	struct:nk_glfw_vertex	typeref:typename:nk_byte[4]	file:
col	lib/nuklear/nuklear.h	/^    struct nk_color col;$/;"	m	struct:nk_command_image	typeref:struct:nk_color
col	lib/nuklear/src/nuklear.h	/^    struct nk_color col;$/;"	m	struct:nk_command_image	typeref:struct:nk_color
col	src/Shader.h	/^    GLuint col;$/;"	m	struct:__anon74bd45490108	typeref:typename:GLuint
color	lib/nuklear/demo/node_editor.c	/^    struct nk_color color;$/;"	m	struct:node	typeref:struct:nk_color	file:
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_curve	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_line	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_text	typeref:struct:nk_color
color	lib/nuklear/nuklear.h	/^    struct nk_color color;$/;"	m	union:nk_style_item_data	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_curve	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_line	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	struct:nk_style_text	typeref:struct:nk_color
color	lib/nuklear/src/nuklear.h	/^    struct nk_color color;$/;"	m	union:nk_style_item_data	typeref:struct:nk_color
color_mode	lib/nuklear/demo/overview.c	/^                    enum color_mode {COL_RGB, COL_HSV};$/;"	g	function:overview	file:
color_table	lib/nuklear/example/stb_image.h	/^   stbi_uc *color_table;$/;"	m	struct:__anonc731c3c81008	typeref:typename:stbi_uc *
colors	lib/nuklear/nuklear.h	/^    struct nk_config_stack_color colors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_color
colors	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_color colors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_color
columns	lib/nuklear/nuklear.h	/^    int columns;$/;"	m	struct:nk_row_layout	typeref:typename:int
columns	lib/nuklear/src/nuklear.h	/^    int columns;$/;"	m	struct:nk_row_layout	typeref:typename:int
combo	lib/nuklear/nuklear.h	/^    struct nk_style_combo combo;$/;"	m	struct:nk_style	typeref:struct:nk_style_combo
combo	lib/nuklear/src/nuklear.h	/^    struct nk_style_combo combo;$/;"	m	struct:nk_style	typeref:struct:nk_style_combo
combo_border	lib/nuklear/nuklear.h	/^    float combo_border;$/;"	m	struct:nk_style_window	typeref:typename:float
combo_border	lib/nuklear/src/nuklear.h	/^    float combo_border;$/;"	m	struct:nk_style_window	typeref:typename:float
combo_border_color	lib/nuklear/nuklear.h	/^    struct nk_color combo_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
combo_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color combo_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
combo_count	lib/nuklear/nuklear.h	/^    unsigned combo_count;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
combo_count	lib/nuklear/src/nuklear.h	/^    unsigned combo_count;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
combo_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 combo_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
combo_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 combo_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
compare	lib/klib/test/ksort_test.cc	/^int compare(const void *a, const void *b)$/;"	f	typeref:typename:int
compare_int	lib/klib/test/ksort_test.cc	/^int compare_int(int a, int b)$/;"	f	typeref:typename:int
compileShader:type:file:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (BOOL)compileShader:(GLuint *)shader type:(GLenum)type file:(NSString *)file;$/;"	m	interface:GameViewController
compileShader:type:file:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
compress_level	lib/klib/bgzf.h	/^    int open_mode:8, compress_level:8, errcode:16;$/;"	m	struct:__anone038ee1b0108	typeref:typename:int:8
compressed_block	lib/klib/bgzf.h	/^    void *uncompressed_block, *compressed_block;$/;"	m	struct:__anone038ee1b0108	typeref:typename:void **
compute	lib/klib/test/kthread_test.c	/^static void compute(void *_g, int i, int tid)$/;"	f	typeref:typename:void	file:
computer	lib/nuklear/example/file_browser.c	/^    struct nk_image computer;$/;"	m	struct:icons	typeref:struct:nk_image	file:
con_count	lib/nuklear/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
con_count	lib/nuklear/src/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
con_old	lib/nuklear/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
con_old	lib/nuklear/src/nuklear.h	/^    unsigned con_count, con_old;$/;"	m	struct:nk_popup_state	typeref:typename:unsigned
config	lib/nuklear/nuklear.h	/^    struct nk_convert_config config;$/;"	m	struct:nk_draw_list	typeref:struct:nk_convert_config
config	lib/nuklear/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font	typeref:struct:nk_font_config *
config	lib/nuklear/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_config *
config	lib/nuklear/src/nuklear.h	/^    struct nk_convert_config config;$/;"	m	struct:nk_draw_list	typeref:struct:nk_convert_config
config	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font	typeref:struct:nk_font_config *
config	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *config;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_config *
connectServer:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.h	/^- (void)connectServer: (NSString*)serverName;$/;"	m	interface:ImGuiHelper
connectServer:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
const	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define const$/;"	d	file:
const_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Buffer *const_buffer;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11Buffer *
const_iterator	lib/cimgui/imgui/imgui.h	/^    typedef const value_type*   const_iterator;$/;"	t	class:ImVector	typeref:typename:const value_type *
contains	lib/cimgui/imgui/imgui.h	/^    inline bool         contains(const value_type& v) const             { const T* data = Data; /;"	f	class:ImVector	typeref:typename:bool
content_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 content_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
content_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 content_padding;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
context	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^@property (strong, nonatomic) EAGLContext *context;$/;"	p	interface:GameViewController
context	lib/nuklear/demo/d3d11/main.c	/^static ID3D11DeviceContext *context;$/;"	v	typeref:typename:ID3D11DeviceContext *	file:
contextual_border	lib/nuklear/nuklear.h	/^    float contextual_border;$/;"	m	struct:nk_style_window	typeref:typename:float
contextual_border	lib/nuklear/src/nuklear.h	/^    float contextual_border;$/;"	m	struct:nk_style_window	typeref:typename:float
contextual_border_color	lib/nuklear/nuklear.h	/^    struct nk_color contextual_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
contextual_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color contextual_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
contextual_button	lib/nuklear/nuklear.h	/^    struct nk_style_button contextual_button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
contextual_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button contextual_button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
contextual_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 contextual_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
contextual_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 contextual_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
convert	lib/nuklear/example/extended.c	/^    struct nk_image convert;$/;"	m	struct:media	typeref:struct:nk_image	file:
convert_color	lib/nuklear/demo/gdi/nuklear_gdi.h	/^convert_color(struct nk_color c)$/;"	f	typeref:typename:COLORREF
convert_color	lib/nuklear/demo/gdip/nuklear_gdip.h	/^static ARGB convert_color(struct nk_color c)$/;"	f	typeref:typename:ARGB
coord_type	lib/nuklear/nuklear.h	/^    enum nk_font_coord_type coord_type;$/;"	m	struct:nk_font_config	typeref:enum:nk_font_coord_type
coord_type	lib/nuklear/src/nuklear.h	/^    enum nk_font_coord_type coord_type;$/;"	m	struct:nk_font_config	typeref:enum:nk_font_coord_type
copy	lib/nuklear/example/extended.c	/^    struct nk_image copy;$/;"	m	struct:media	typeref:struct:nk_image	file:
copy	lib/nuklear/nuklear.h	/^    nk_plugin_copy copy;$/;"	m	struct:nk_clipboard	typeref:typename:nk_plugin_copy
copy	lib/nuklear/src/nuklear.h	/^    nk_plugin_copy copy;$/;"	m	struct:nk_clipboard	typeref:typename:nk_plugin_copy
core_head	lib/klib/kalloc.c	/^	header_t base, *loop_head, *core_head; \/* base is a zero-sized block always kept in the loop */;"	m	struct:__anon3287e0230108	typeref:typename:header_t **	file:
count	lib/nuklear/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
count	lib/nuklear/nuklear.h	/^    int count;$/;"	m	struct:nk_chart_slot	typeref:typename:int
count	lib/nuklear/nuklear.h	/^    unsigned int count;$/;"	m	struct:nk_context	typeref:typename:unsigned int
count	lib/nuklear/src/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
count	lib/nuklear/src/nuklear.h	/^    int count;$/;"	m	struct:nk_chart_slot	typeref:typename:int
count	lib/nuklear/src/nuklear.h	/^    unsigned int count;$/;"	m	struct:nk_context	typeref:typename:unsigned int
create_d3d9_device	lib/nuklear/demo/d3d9/main.c	/^static void create_d3d9_device(HWND wnd)$/;"	f	typeref:typename:void	file:
ctrl	lib/nuklear/nuklear.h	/^    struct nk_vec2i ctrl[2];$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i[2]
ctrl	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i ctrl[2];$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i[2]
ctrl_fd	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s	typeref:typename:int
ctrl_fd	lib/klib/kopen.c	/^	int max_response, ctrl_fd;$/;"	m	struct:__anonae17a10a0108	typeref:typename:int	file:
ctx	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    struct nk_context ctx;$/;"	m	struct:nk_allegro5	typeref:struct:nk_context
ctx	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_context ctx;$/;"	m	struct:__anon70d184300108	typeref:struct:nk_context
ctx	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_context ctx;$/;"	m	struct:__anon39ff3a1e0108	typeref:struct:nk_context
ctx	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    struct nk_context ctx;$/;"	m	struct:__anonc4120a9e0108	typeref:struct:nk_context
ctx	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    struct nk_context ctx;$/;"	m	struct:__anon66f154fe0d08	typeref:struct:nk_context
ctx	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_context
ctx	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_context
ctx	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_context ctx;$/;"	m	struct:nk_glfw	typeref:struct:nk_context
ctx	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sdl	typeref:struct:nk_context
ctx	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sdl	typeref:struct:nk_context
ctx	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sdl	typeref:struct:nk_context
ctx	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sfml	typeref:struct:nk_context
ctx	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_sfml	typeref:struct:nk_context
ctx	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct nk_context ctx;$/;"	m	struct:__anon50fc9fff0108	typeref:struct:nk_context
ctx	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_context ctx;$/;"	m	struct:nk_x11	typeref:struct:nk_context
ctx	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_context ctx;$/;"	m	struct:nk_x11	typeref:struct:nk_context
ctx	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct nk_context ctx;$/;"	m	struct:rawfb_context	typeref:struct:nk_context
ctx	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    struct nk_context ctx;$/;"	m	struct:__anon88f201100108	typeref:struct:nk_context
ctx	lib/nuklear/nuklear.h	/^    struct nk_context *ctx;$/;"	m	struct:nk_list_view	typeref:struct:nk_context *
ctx	lib/nuklear/src/nuklear.h	/^    struct nk_context *ctx;$/;"	m	struct:nk_list_view	typeref:struct:nk_context *
ctx	src/Gui.c	/^struct ImGuiContext* ctx;$/;"	v	typeref:struct:ImGuiContext *
cubeColor1	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^    float cubeColor1[4];$/;"	m	struct:DebugHUD	typeref:typename:float[4]
cubeColor2	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^    float cubeColor2[4];$/;"	m	struct:DebugHUD	typeref:typename:float[4]
curFontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    INT curFontCollection;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:INT
cur_arg	lib/nuklear/src/build.py	/^cur_arg = 1$/;"	v
cur_x	lib/nuklear/example/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
cur_y	lib/nuklear/example/stb_image.h	/^   int cur_x, cur_y;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
curl	lib/klib/kurl.c	/^	CURL *curl;   \/\/ cURL easy handle$/;"	m	struct:kurl_t	typeref:typename:CURL *	file:
current	lib/nuklear/nuklear.h	/^    struct nk_window *current;$/;"	m	struct:nk_context	typeref:struct:nk_window *
current	lib/nuklear/src/nuklear.h	/^    struct nk_window *current;$/;"	m	struct:nk_context	typeref:struct:nk_window *
current_display	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^    ALLEGRO_DISPLAY *current_display;$/;"	E	interface:KeyboardHandleriOS
current_frame	lib/cimgui/imgui/imgui.h	/^    operator bool() const { int current_frame = ImGui::GetFrameCount(); if (RefFrame == current_/;"	m	struct:ImGuiOnceUponAFrame	typeref:typename:int
cursor	lib/cimgui/imgui/stb_textedit.h	/^   int cursor;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:int
cursor	lib/cimgui/imgui/stb_truetype.h	/^   int cursor;$/;"	m	struct:__anonc4c159420108	typeref:typename:int
cursor	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Cursor cursor;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:Cursor
cursor	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    Cursor cursor;$/;"	m	struct:nk_x11	typeref:typename:Cursor
cursor	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    Cursor cursor;$/;"	m	struct:nk_x11	typeref:typename:Cursor
cursor	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    Cursor cursor;$/;"	m	struct:__anon88f201100108	typeref:typename:Cursor
cursor	lib/nuklear/nuklear.h	/^    int cursor;$/;"	m	struct:nk_edit_state	typeref:typename:int
cursor	lib/nuklear/nuklear.h	/^    int cursor;$/;"	m	struct:nk_property_state	typeref:typename:int
cursor	lib/nuklear/nuklear.h	/^    int cursor;$/;"	m	struct:nk_text_edit	typeref:typename:int
cursor	lib/nuklear/src/nuklear.h	/^    int cursor;$/;"	m	struct:nk_edit_state	typeref:typename:int
cursor	lib/nuklear/src/nuklear.h	/^    int cursor;$/;"	m	struct:nk_property_state	typeref:typename:int
cursor	lib/nuklear/src/nuklear.h	/^    int cursor;$/;"	m	struct:nk_text_edit	typeref:typename:int
cursor_active	lib/nuklear/nuklear.h	/^    const struct nk_cursor *cursor_active;$/;"	m	struct:nk_style	typeref:typename:const struct nk_cursor *
cursor_active	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_active	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_active	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_active	lib/nuklear/src/nuklear.h	/^    const struct nk_cursor *cursor_active;$/;"	m	struct:nk_style	typeref:typename:const struct nk_cursor *
cursor_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_active;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_at_end_of_line	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char cursor_at_end_of_line; \/\/ not implemented yet$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
cursor_at_end_of_line	lib/nuklear/nuklear.h	/^    unsigned char cursor_at_end_of_line;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
cursor_at_end_of_line	lib/nuklear/src/nuklear.h	/^    unsigned char cursor_at_end_of_line;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
cursor_border	lib/nuklear/nuklear.h	/^    float cursor_border;$/;"	m	struct:nk_style_progress	typeref:typename:float
cursor_border	lib/nuklear/src/nuklear.h	/^    float cursor_border;$/;"	m	struct:nk_style_progress	typeref:typename:float
cursor_border_color	lib/nuklear/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_color
cursor_border_color	lib/nuklear/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_color
cursor_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_progress	typeref:struct:nk_color
cursor_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_border_color;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_color
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_color cursor_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_hover	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
cursor_last	lib/nuklear/nuklear.h	/^    struct nk_cursor *cursor_last;$/;"	m	struct:nk_style	typeref:struct:nk_cursor *
cursor_last	lib/nuklear/src/nuklear.h	/^    struct nk_cursor *cursor_last;$/;"	m	struct:nk_style	typeref:struct:nk_cursor *
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_color cursor_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_normal	lib/nuklear/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
cursor_normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item cursor_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
cursor_rounding	lib/nuklear/nuklear.h	/^    float cursor_rounding;$/;"	m	struct:nk_style_progress	typeref:typename:float
cursor_rounding	lib/nuklear/src/nuklear.h	/^    float cursor_rounding;$/;"	m	struct:nk_style_progress	typeref:typename:float
cursor_size	lib/nuklear/nuklear.h	/^    float cursor_size;$/;"	m	struct:nk_style_edit	typeref:typename:float
cursor_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 cursor_size;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
cursor_size	lib/nuklear/src/nuklear.h	/^    float cursor_size;$/;"	m	struct:nk_style_edit	typeref:typename:float
cursor_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 cursor_size;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
cursor_text_hover	lib/nuklear/nuklear.h	/^    struct nk_color cursor_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_text_normal	lib/nuklear/nuklear.h	/^    struct nk_color cursor_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color cursor_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
cursor_visible	lib/nuklear/nuklear.h	/^    int cursor_visible;$/;"	m	struct:nk_style	typeref:typename:int
cursor_visible	lib/nuklear/src/nuklear.h	/^    int cursor_visible;$/;"	m	struct:nk_style	typeref:typename:int
cursors	lib/nuklear/nuklear.h	/^    const struct nk_cursor *cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_style	typeref:typename:const struct nk_cursor * []
cursors	lib/nuklear/nuklear.h	/^    struct nk_cursor cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_font_atlas	typeref:struct:nk_cursor[]
cursors	lib/nuklear/src/nuklear.h	/^    const struct nk_cursor *cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_style	typeref:typename:const struct nk_cursor * []
cursors	lib/nuklear/src/nuklear.h	/^    struct nk_cursor cursors[NK_CURSOR_COUNT];$/;"	m	struct:nk_font_atlas	typeref:struct:nk_cursor[]
curve_segment_count	lib/nuklear/nuklear.h	/^    unsigned curve_segment_count; \/* number of segments used for curves: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
curve_segment_count	lib/nuklear/src/nuklear.h	/^    unsigned curve_segment_count; \/* number of segments used for curves: default to 22 *\/$/;"	m	struct:nk_convert_config	typeref:typename:unsigned
custom	lib/nuklear/nuklear.h	/^    struct nk_recti custom;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_recti
custom	lib/nuklear/src/nuklear.h	/^    struct nk_recti custom;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_recti
cv	lib/klib/kthread.c	/^	pthread_cond_t cv;$/;"	m	struct:ktp_t	typeref:typename:pthread_cond_t	file:
cv_m	lib/klib/kthread.c	/^	pthread_cond_t cv_m, cv_s;$/;"	m	struct:kt_forpool_t	typeref:typename:pthread_cond_t	file:
cv_s	lib/klib/kthread.c	/^	pthread_cond_t cv_m, cv_s;$/;"	m	struct:kt_forpool_t	typeref:typename:pthread_cond_t	file:
cx	lib/cimgui/imgui/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anonc4c159420708	typeref:typename:stbtt_vertex_type
cx	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc	typeref:typename:short
cx	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled	typeref:typename:short
cx	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
cx	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc	typeref:typename:short
cx	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled	typeref:typename:short
cx	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short	file:
cx1	lib/cimgui/imgui/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anonc4c159420708	typeref:typename:stbtt_vertex_type
cy	lib/cimgui/imgui/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anonc4c159420708	typeref:typename:stbtt_vertex_type
cy	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc	typeref:typename:short
cy	lib/nuklear/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled	typeref:typename:short
cy	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
cy	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc	typeref:typename:short
cy	lib/nuklear/src/nuklear.h	/^    short cx, cy;$/;"	m	struct:nk_command_arc_filled	typeref:typename:short
cy	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short	file:
cy1	lib/cimgui/imgui/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anonc4c159420708	typeref:typename:stbtt_vertex_type
d	lib/klib/knhx.h	/^	double d;$/;"	m	struct:__anonf5ac750b0108	typeref:typename:double
d	lib/nuklear/nuklear.h	/^    double d;$/;"	m	union:nk_property	typeref:typename:double
d	lib/nuklear/src/nuklear_internal.h	/^    double d;$/;"	m	union:nk_property	typeref:typename:double
d3d11	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^} d3d11;$/;"	v	typeref:struct:__anon70d184300108
d3d9	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^} d3d9;$/;"	v	typeref:struct:__anon39ff3a1e0108
data	lib/cimgui/imgui/stb_truetype.h	/^   unsigned char  * data;              \/\/ pointer to .ttf file$/;"	m	struct:stbtt_fontinfo	typeref:typename:unsigned char *
data	lib/cimgui/imgui/stb_truetype.h	/^   unsigned char *data;$/;"	m	struct:__anonc4c159420108	typeref:typename:unsigned char *
data	lib/klib/kthread.c	/^	void *data;$/;"	m	struct:__anone5c783700308	typeref:typename:void *	file:
data	lib/klib/kthread.c	/^	void *data;$/;"	m	struct:kt_for_t	typeref:typename:void *	file:
data	lib/klib/kthread.c	/^	void *data;$/;"	m	struct:kt_forpool_t	typeref:typename:void *	file:
data	lib/nuklear/example/stb_image.h	/^      stbi_uc *data;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:stbi_uc *
data	lib/nuklear/nuklear.h	/^    const unsigned char* data; \/* pointer to .ttf file *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:const unsigned char *
data	lib/nuklear/nuklear.h	/^    union nk_page_data data;$/;"	m	struct:nk_page_element	typeref:union:nk_page_data
data	lib/nuklear/nuklear.h	/^    union nk_style_item_data data;$/;"	m	struct:nk_style_item	typeref:union:nk_style_item_data
data	lib/nuklear/src/nuklear.h	/^    union nk_page_data data;$/;"	m	struct:nk_page_element	typeref:union:nk_page_data
data	lib/nuklear/src/nuklear.h	/^    union nk_style_item_data data;$/;"	m	struct:nk_style_item	typeref:union:nk_style_item_data
data	lib/nuklear/src/nuklear_font.c	/^    const unsigned char* data; \/* pointer to .ttf file *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:const unsigned char *	file:
date	lib/klib/kurl.c	/^	char *url, *date, *auth;$/;"	m	struct:__anonf630694b0108	typeref:typename:char **	file:
dc	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HDC dc;$/;"	m	struct:GdiFont	typeref:typename:HDC
dc_pred	lib/nuklear/example/stb_image.h	/^      int dc_pred;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
dct_bfly32o	lib/nuklear/example/stb_image.h	/^   #define dct_bfly32o(/;"	d
dct_bfly32o	lib/nuklear/example/stb_image.h	/^#define dct_bfly32o(/;"	d
dct_const	lib/nuklear/example/stb_image.h	/^   #define dct_const(/;"	d
dct_interleave16	lib/nuklear/example/stb_image.h	/^   #define dct_interleave16(/;"	d
dct_interleave8	lib/nuklear/example/stb_image.h	/^   #define dct_interleave8(/;"	d
dct_long_mac	lib/nuklear/example/stb_image.h	/^#define dct_long_mac(/;"	d
dct_long_mul	lib/nuklear/example/stb_image.h	/^#define dct_long_mul(/;"	d
dct_pass	lib/nuklear/example/stb_image.h	/^   #define dct_pass(/;"	d
dct_pass	lib/nuklear/example/stb_image.h	/^#define dct_pass(/;"	d
dct_rot	lib/nuklear/example/stb_image.h	/^   #define dct_rot(/;"	d
dct_trn16	lib/nuklear/example/stb_image.h	/^#define dct_trn16(/;"	d
dct_trn32	lib/nuklear/example/stb_image.h	/^#define dct_trn32(/;"	d
dct_trn64	lib/nuklear/example/stb_image.h	/^#define dct_trn64(/;"	d
dct_trn8_16	lib/nuklear/example/stb_image.h	/^#define dct_trn8_16(/;"	d
dct_trn8_32	lib/nuklear/example/stb_image.h	/^#define dct_trn8_32(/;"	d
dct_trn8_8	lib/nuklear/example/stb_image.h	/^#define dct_trn8_8(/;"	d
dct_wadd	lib/nuklear/example/stb_image.h	/^   #define dct_wadd(/;"	d
dct_wadd	lib/nuklear/example/stb_image.h	/^#define dct_wadd(/;"	d
dct_widen	lib/nuklear/example/stb_image.h	/^   #define dct_widen(/;"	d
dct_widen	lib/nuklear/example/stb_image.h	/^#define dct_widen(/;"	d
dct_wsub	lib/nuklear/example/stb_image.h	/^   #define dct_wsub(/;"	d
dct_wsub	lib/nuklear/example/stb_image.h	/^#define dct_wsub(/;"	d
dealloc	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{    $/;"	m	implementation:GameViewController
dealloc	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^-(void)dealloc {$/;"	m	implementation:KeyboardHandleriOS
debug_report	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VKAPI_ATTR VkBool32 VKAPI_CALL debug_report($/;"	f	typeref:typename:VKAPI_ATTR VkBool32 VKAPI_CALL	file:
dec_button	lib/nuklear/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_button
dec_button	lib/nuklear/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_button
dec_button	lib/nuklear/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_button
dec_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_button
dec_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_button
dec_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button dec_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_button
dec_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_symbol_type
dec_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_symbol_type
dec_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_symbol_type
dec_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type dec_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_symbol_type
default_file	lib/nuklear/example/file_browser.c	/^    struct nk_image default_file;$/;"	m	struct:icons	typeref:struct:nk_image	file:
default_font	lib/nuklear/nuklear.h	/^    struct nk_font *default_font;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font *
default_font	lib/nuklear/src/nuklear.h	/^    struct nk_font *default_font;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font *
default_target	build/Makefile	/^default_target: all$/;"	t
deflate_block	lib/klib/bgzf.c	/^static int deflate_block(BGZF *fp, int block_length)$/;"	f	typeref:typename:int	file:
del	lib/nuklear/example/extended.c	/^    struct nk_image del;$/;"	m	struct:media	typeref:struct:nk_image	file:
delay	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
deleteBackward	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^- (void)deleteBackward {$/;"	m	implementation:KeyboardHandleriOS
delete_length	lib/cimgui/imgui/stb_textedit.h	/^   short           delete_length;$/;"	m	struct:__anonfd61af4b0108	typeref:typename:short
delete_length	lib/nuklear/nuklear.h	/^   short delete_length;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
delete_length	lib/nuklear/src/nuklear.h	/^   short delete_length;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
delta	lib/nuklear/example/stb_image.h	/^   int    delta[17];   \/\/ old 'firstsymbol' - old 'firstcode'$/;"	m	struct:__anonc731c3c80508	typeref:typename:int[17]
delta	lib/nuklear/nuklear.h	/^    struct nk_vec2 delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
delta	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
delta_time_seconds	lib/nuklear/nuklear.h	/^    float delta_time_seconds;$/;"	m	struct:nk_context	typeref:typename:float
delta_time_seconds	lib/nuklear/src/nuklear.h	/^    float delta_time_seconds;$/;"	m	struct:nk_context	typeref:typename:float
depend	build/Makefile	/^depend:$/;"	t
depth	lib/klib/ksort.h	/^	int depth;$/;"	m	struct:__anonb76165850108	typeref:typename:int
dequant	lib/nuklear/example/stb_image.h	/^   stbi_uc dequant[4][64];$/;"	m	struct:__anonc731c3c80608	typeref:typename:stbi_uc[4][64]
descent	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int descent;$/;"	m	struct:XFont	typeref:typename:int
descent	lib/nuklear/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font	typeref:typename:float
descent	lib/nuklear/src/nuklear.h	/^    float ascent, descent;$/;"	m	struct:nk_baked_font	typeref:typename:float
description	lib/nuklear/package.json	/^  "description": "A small ANSI C gui toolkit",$/;"	s
descriptor_pool	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^    VkDescriptorPool       descriptor_pool;$/;"	m	struct:ImGui_ImplGlfwVulkan_Init_Data	typeref:typename:VkDescriptorPool
desktop	lib/nuklear/example/file_browser.c	/^    char desktop[MAX_PATH_LEN];$/;"	m	struct:file_browser	typeref:typename:char[]	file:
desktop	lib/nuklear/example/file_browser.c	/^    struct nk_image desktop;$/;"	m	struct:icons	typeref:struct:nk_image	file:
device	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^    VkDevice               device;$/;"	m	struct:ImGui_ImplGlfwVulkan_Init_Data	typeref:typename:VkDevice
device	lib/nuklear/demo/d3d11/main.c	/^static ID3D11Device *device;$/;"	v	typeref:typename:ID3D11Device *	file:
device	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Device *device;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11Device *
device	lib/nuklear/demo/d3d9/main.c	/^static IDirect3DDevice9 *device;$/;"	v	typeref:typename:IDirect3DDevice9 *	file:
device	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    IDirect3DDevice9 *device;$/;"	m	struct:__anon39ff3a1e0108	typeref:typename:IDirect3DDevice9 *
device	lib/nuklear/example/canvas.c	/^struct device {$/;"	s	file:
device	lib/nuklear/example/extended.c	/^struct device {$/;"	s	file:
device	lib/nuklear/example/file_browser.c	/^struct device {$/;"	s	file:
device	lib/nuklear/example/skinning.c	/^struct device {$/;"	s	file:
deviceEx	lib/nuklear/demo/d3d9/main.c	/^static IDirect3DDevice9Ex *deviceEx;$/;"	v	typeref:typename:IDirect3DDevice9Ex *	file:
device_draw	lib/nuklear/example/canvas.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	typeref:typename:void	file:
device_draw	lib/nuklear/example/extended.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	typeref:typename:void	file:
device_draw	lib/nuklear/example/file_browser.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	typeref:typename:void	file:
device_draw	lib/nuklear/example/skinning.c	/^device_draw(struct device *dev, struct nk_context *ctx, int width, int height,$/;"	f	typeref:typename:void	file:
device_init	lib/nuklear/example/canvas.c	/^device_init(struct device *dev)$/;"	f	typeref:typename:void	file:
device_init	lib/nuklear/example/extended.c	/^device_init(struct device *dev)$/;"	f	typeref:typename:void	file:
device_init	lib/nuklear/example/file_browser.c	/^device_init(struct device *dev)$/;"	f	typeref:typename:void	file:
device_init	lib/nuklear/example/skinning.c	/^device_init(struct device *dev)$/;"	f	typeref:typename:void	file:
device_shutdown	lib/nuklear/example/canvas.c	/^device_shutdown(struct device *dev)$/;"	f	typeref:typename:void	file:
device_shutdown	lib/nuklear/example/extended.c	/^device_shutdown(struct device *dev)$/;"	f	typeref:typename:void	file:
device_shutdown	lib/nuklear/example/file_browser.c	/^device_shutdown(struct device *dev)$/;"	f	typeref:typename:void	file:
device_shutdown	lib/nuklear/example/skinning.c	/^device_shutdown(struct device *dev)$/;"	f	typeref:typename:void	file:
device_upload_atlas	lib/nuklear/example/canvas.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	typeref:typename:void	file:
device_upload_atlas	lib/nuklear/example/extended.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	typeref:typename:void	file:
device_upload_atlas	lib/nuklear/example/file_browser.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	typeref:typename:void	file:
device_upload_atlas	lib/nuklear/example/skinning.c	/^device_upload_atlas(struct device *dev, const void *image, int width, int height)$/;"	f	typeref:typename:void	file:
didReceiveMemoryWarning	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
die	lib/nuklear/demo/x11/main.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
die	lib/nuklear/demo/x11_opengl2/main.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
die	lib/nuklear/demo/x11_opengl3/main.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
die	lib/nuklear/demo/x11_rawfb/main.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
die	lib/nuklear/example/canvas.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
die	lib/nuklear/example/extended.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
die	lib/nuklear/example/file_browser.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
die	lib/nuklear/example/skinning.c	/^die(const char *fmt, ...)$/;"	f	typeref:typename:void	file:
diff	lib/nuklear/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anond7ed09940503
diff	lib/nuklear/src/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon8fa426eb0503
dir	lib/nuklear/example/extended.c	/^    struct nk_image dir;$/;"	m	struct:media	typeref:struct:nk_image	file:
dir_count	lib/nuklear/example/file_browser.c	/^    size_t dir_count;$/;"	m	struct:file_browser	typeref:typename:size_t	file:
dir_free_list	lib/nuklear/example/file_browser.c	/^dir_free_list(char **list, size_t size)$/;"	f	typeref:typename:void	file:
dir_list	lib/nuklear/example/file_browser.c	/^dir_list(const char *dir, int return_subdirs, size_t *count)$/;"	f	typeref:typename:char **	file:
direction	lib/cimgui/imgui/stb_truetype.h	/^   float direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
direction	lib/cimgui/imgui/stb_truetype.h	/^   int direction;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
direction	lib/nuklear/nuklear.h	/^    float direction;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
direction	lib/nuklear/src/nuklear_font.c	/^    float direction;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float	file:
directories	lib/nuklear/example/file_browser.c	/^    char **directories;$/;"	m	struct:file_browser	typeref:typename:char **	file:
directory	lib/nuklear/example/file_browser.c	/^    char directory[MAX_PATH_LEN];$/;"	m	struct:file_browser	typeref:typename:char[]	file:
directory	lib/nuklear/example/file_browser.c	/^    struct nk_image directory;$/;"	m	struct:icons	typeref:struct:nk_image	file:
display_height	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
display_height	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
display_height	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
display_width	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
display_width	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
display_width	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int display_width, display_height;$/;"	m	struct:nk_glfw	typeref:typename:int
done_reading	lib/klib/kurl.c	/^	int done_reading; \/\/ true if we can read nothing from the file; buffer may not be empty even /;"	m	struct:kurl_t	typeref:typename:int	file:
double_click_pos	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_vec2 double_click_pos;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
double_click_pos	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_vec2 double_click_pos;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
double_click_pos	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_vec2 double_click_pos;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
down	lib/nuklear/nuklear.h	/^    int down;$/;"	m	struct:nk_key	typeref:typename:int
down	lib/nuklear/nuklear.h	/^    int down;$/;"	m	struct:nk_mouse_button	typeref:typename:int
down	lib/nuklear/src/nuklear.h	/^    int down;$/;"	m	struct:nk_key	typeref:typename:int
down	lib/nuklear/src/nuklear.h	/^    int down;$/;"	m	struct:nk_mouse_button	typeref:typename:int
dpy	lib/nuklear/demo/x11/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	typeref:typename:Display *	file:
dpy	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:XSurface	typeref:typename:Display *
dpy	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:Display *
dpy	lib/nuklear/demo/x11_opengl2/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	typeref:typename:Display *	file:
dpy	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    Display *dpy;$/;"	m	struct:nk_x11	typeref:typename:Display *
dpy	lib/nuklear/demo/x11_opengl3/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	typeref:typename:Display *	file:
dpy	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    Display *dpy;$/;"	m	struct:nk_x11	typeref:typename:Display *
dpy	lib/nuklear/demo/x11_rawfb/main.c	/^    Display *dpy;$/;"	m	struct:XWindow	typeref:typename:Display *	file:
dpy	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    Display *dpy;$/;"	m	struct:__anon88f201100108	typeref:typename:Display *
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle userdata)
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle userdata)
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_begin	lib/nuklear/src/nuklear.h	/^    void(*draw_begin)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle userdata)
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle userdata);$/;"	m	struct:nk_style_button	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle userdata)
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_progress	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_property	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_scrollbar	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_selectable	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_slider	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_end	lib/nuklear/src/nuklear.h	/^    void(*draw_end)(struct nk_command_buffer*, nk_handle);$/;"	m	struct:nk_style_toggle	typeref:typename:void (*)(struct nk_command_buffer *,nk_handle)
draw_list	lib/nuklear/nuklear.h	/^    struct nk_draw_list draw_list;$/;"	m	struct:nk_context	typeref:struct:nk_draw_list
draw_list	lib/nuklear/src/nuklear.h	/^    struct nk_draw_list draw_list;$/;"	m	struct:nk_context	typeref:struct:nk_draw_list
drawable	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Drawable drawable;$/;"	m	struct:XSurface	typeref:typename:Drawable
drawable	src/Shape.h	/^    Drawable drawable[1];$/;"	m	struct:Shape	typeref:typename:Drawable[1]
dret	lib/klib/test/kseq_bench2.c	/^		int fd, dret;$/;"	v	typeref:typename:int
dsp	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    ALLEGRO_DISPLAY *dsp;$/;"	m	struct:nk_allegro5	typeref:typename:ALLEGRO_DISPLAY *
dx	lib/cimgui/imgui/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
e	lib/cimgui/imgui/imgui.h	/^        const char* e;$/;"	m	struct:ImGuiTextFilter::TextRange	typeref:typename:const char *
e	lib/klib/kexpr.c	/^	ke1_t *e;$/;"	m	struct:kexpr_s	typeref:typename:ke1_t *	file:
e	lib/klib/khmm.h	/^	FLOAT **a, **e; \/\/ transition matrix and emitting probilities$/;"	m	struct:__anonf542711f0108	typeref:typename:FLOAT ****
e	lib/klib/ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon7bd1e0a20108	typeref:typename:int32_t	file:
e	lib/klib/test/ksort_test.cc	/^	rstype_t *b, *e;$/;"	m	struct:__anonef293a910108	typeref:typename:rstype_t **	file:
ebo	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
ebo	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
ebo	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
ebo	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint vbo, ebo;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
ebo	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
ebo	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
ebo	lib/nuklear/example/canvas.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
ebo	lib/nuklear/example/extended.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
ebo	lib/nuklear/example/file_browser.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
ebo	lib/nuklear/example/skinning.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
edit	lib/nuklear/example/extended.c	/^    struct nk_image edit;$/;"	m	struct:media	typeref:struct:nk_image	file:
edit	lib/nuklear/nuklear.h	/^    struct nk_edit_state edit;$/;"	m	struct:nk_window	typeref:struct:nk_edit_state
edit	lib/nuklear/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style	typeref:struct:nk_style_edit
edit	lib/nuklear/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_edit
edit	lib/nuklear/src/nuklear.h	/^    struct nk_edit_state edit;$/;"	m	struct:nk_window	typeref:struct:nk_edit_state
edit	lib/nuklear/src/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style	typeref:struct:nk_style_edit
edit	lib/nuklear/src/nuklear.h	/^    struct nk_style_edit edit;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_edit
edit_cache	build/Makefile	/^edit_cache:$/;"	t
edit_cache/fast	build/Makefile	/^edit_cache\/fast: edit_cache$/;"	t
editor.formatOnSave	lib/cimgui/cimgui/.vscode/settings.json	/^    "editor.formatOnSave": false,$/;"	b
effect	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^@property (strong, nonatomic) GLKBaseEffect *effect;$/;"	p	interface:GameViewController
eflags	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
eh_t	lib/klib/ksw.c	/^} eh_t;$/;"	t	typeref:struct:__anon7bd1e0a20108	file:
elem_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int *elem_buffer;$/;"	m	struct:nk_glfw_device	typeref:typename:int *
elem_count	lib/nuklear/nuklear.h	/^    unsigned int elem_count;$/;"	m	struct:nk_draw_command	typeref:typename:unsigned int
elem_count	lib/nuklear/src/nuklear.h	/^    unsigned int elem_count;$/;"	m	struct:nk_draw_command	typeref:typename:unsigned int
element_count	lib/nuklear/nuklear.h	/^    unsigned int element_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
element_count	lib/nuklear/src/nuklear.h	/^    unsigned int element_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
elements	lib/nuklear/nuklear.h	/^    struct nk_buffer *elements;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
elements	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *elements;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
empty	lib/cimgui/imgui/imgui.h	/^        bool empty() const { return b == e; }$/;"	f	struct:ImGuiTextFilter::TextRange	typeref:typename:bool
empty	lib/cimgui/imgui/imgui.h	/^    bool                empty() { return Buf.Size <= 1; }$/;"	f	struct:ImGuiTextBuffer	typeref:typename:bool
empty	lib/cimgui/imgui/imgui.h	/^    inline bool                 empty() const                   { return Size == 0; }$/;"	f	class:ImVector	typeref:typename:bool
end	lib/cimgui/imgui/imgui.h	/^        const char* end() const { return e; }$/;"	f	struct:ImGuiTextFilter::TextRange	typeref:typename:const char *
end	lib/cimgui/imgui/imgui.h	/^    const char*         end() const { return &Buf.back(); }      \/\/ Buf is zero-terminated, so/;"	f	struct:ImGuiTextBuffer	typeref:typename:const char *
end	lib/cimgui/imgui/imgui.h	/^    inline const_iterator       end() const                     { return Data + Size; }$/;"	f	class:ImVector	typeref:typename:const_iterator
end	lib/cimgui/imgui/imgui.h	/^    inline iterator             end()                           { return Data + Size; }$/;"	f	class:ImVector	typeref:typename:iterator
end	lib/nuklear/demo/node_editor.c	/^    struct node *end;$/;"	m	struct:node_editor	typeref:struct:node *	file:
end	lib/nuklear/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
end	lib/nuklear/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
end	lib/nuklear/nuklear.h	/^    nk_size end;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
end	lib/nuklear/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i
end	lib/nuklear/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_line	typeref:struct:nk_vec2i
end	lib/nuklear/nuklear.h	/^    struct nk_window *end;$/;"	m	struct:nk_context	typeref:struct:nk_window *
end	lib/nuklear/src/nuklear.h	/^    int begin, end, count;$/;"	m	struct:nk_list_view	typeref:typename:int
end	lib/nuklear/src/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
end	lib/nuklear/src/nuklear.h	/^    nk_size end;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
end	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_curve	typeref:struct:nk_vec2i
end	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i end;$/;"	m	struct:nk_command_line	typeref:struct:nk_vec2i
end	lib/nuklear/src/nuklear.h	/^    struct nk_window *end;$/;"	m	struct:nk_context	typeref:struct:nk_window *
end_offset	lib/klib/bgzf.c	/^	int64_t end_offset;$/;"	m	struct:__anone038ee160108	typeref:typename:int64_t	file:
eob_run	lib/nuklear/example/stb_image.h	/^   int            eob_run;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
eof	lib/nuklear/example/stb_image.h	/^   int      (*eof)   (void *user);                       \/\/ returns nonzero if we are at end o/;"	m	struct:__anonc731c3c80208	typeref:typename:int (*)(void * user)
equal	lib/cimgui/imgui/stb_truetype.h	/^static int equal(float *a, float *b)$/;"	f	typeref:typename:int
erase	lib/cimgui/imgui/imgui.h	/^    inline iterator     erase(const_iterator it)                        { IM_ASSERT(it >= Data &/;"	f	class:ImVector	typeref:typename:iterator
err	lib/klib/kurl.c	/^	int err;      \/\/ error code$/;"	m	struct:kurl_t	typeref:typename:int	file:
errcode	lib/klib/bgzf.h	/^    int open_mode:8, compress_level:8, errcode:16;$/;"	m	struct:__anone038ee1b0108	typeref:typename:int:16
error	lib/klib/knhx.c	/^	int error, n, max;$/;"	m	struct:__anonf5ac75060108	typeref:typename:int	file:
error_callback	lib/nuklear/demo/allegro5/main.c	/^static void error_callback(int e, const char *d)$/;"	f	typeref:typename:void	file:
error_callback	lib/nuklear/demo/glfw_opengl2/main.c	/^static void error_callback(int e, const char *d)$/;"	f	typeref:typename:void	file:
error_callback	lib/nuklear/demo/glfw_opengl3/main.c	/^static void error_callback(int e, const char *d)$/;"	f	typeref:typename:void	file:
error_callback	lib/nuklear/demo/glfw_opengl4/main.c	/^static void error_callback(int e, const char *d)$/;"	f	typeref:typename:void	file:
error_callback	lib/nuklear/example/canvas.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	typeref:typename:void	file:
error_callback	lib/nuklear/example/extended.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	typeref:typename:void	file:
error_callback	lib/nuklear/example/file_browser.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	typeref:typename:void	file:
error_callback	lib/nuklear/example/skinning.c	/^static void error_callback(int e, const char *d){printf("Error %d: %s\\n", e, d);}$/;"	f	typeref:typename:void	file:
error_callback	src/App.c	/^static void error_callback(int e, const char *d)$/;"	f	typeref:typename:void	file:
event_source	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^    ALLEGRO_EVENT_SOURCE *event_source;$/;"	E	interface:KeyboardHandleriOS
expanded	lib/nuklear/example/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonc731c3c80c08	typeref:typename:stbi_uc **
extended	lib/nuklear/example/Makefile	/^extended: generate$/;"	t
extensions_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *extensions_str;$/;"	m	struct:opengl_info	typeref:typename:const char *
extra	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_node extra[2]; \/\/ we allocate two extra nodes so optimal user-node-count is 'width' n/;"	m	struct:stbrp_context	typeref:typename:stbrp_node[2]
extra	lib/nuklear/nuklear.h	/^    struct nk_rp_node extra[2];$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node[2]
extra	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node extra[2];$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node[2]	file:
ey	lib/cimgui/imgui/stb_truetype.h	/^   float ey;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
ey	lib/nuklear/nuklear.h	/^    float ey;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
ey	lib/nuklear/src/nuklear_font.c	/^    float ey;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float	file:
f	lib/klib/kexpr.c	/^	} f;$/;"	m	struct:ke1_s	typeref:union:ke1_s::__anon975ae7f7010a	file:
f	lib/klib/khmm.h	/^	FLOAT **f, **b, *s;$/;"	m	struct:__anonf542711f0208	typeref:typename:FLOAT **
f	lib/nuklear/nuklear.h	/^    float f;$/;"	m	union:nk_property	typeref:typename:float
f	lib/nuklear/nuklear.h	/^    union {nk_uint i; float f;} conv = {0};$/;"	m	union:nk_inv_sqrt::__anond7ed0994070a	typeref:typename:float
f	lib/nuklear/src/nuklear_internal.h	/^    float f;$/;"	m	union:nk_property	typeref:typename:float
f	lib/nuklear/src/nuklear_math.c	/^    union {nk_uint i; float f;} conv = {0};$/;"	m	union:nk_inv_sqrt::__anon8d04436f010a	typeref:typename:float	file:
f_Chebyquad	lib/klib/test/kmin_test.c	/^double f_Chebyquad(int n, double *x, void *data)$/;"	f	typeref:typename:double
faidxsub	lib/klib/lua/bio.lua	/^local function faidxsub(fn)$/;"	f
fallback	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    char fallback;$/;"	m	struct:__anon88f201100108	typeref:typename:char
fallback	lib/nuklear/nuklear.h	/^    const struct nk_font_glyph *fallback;$/;"	m	struct:nk_font	typeref:typename:const struct nk_font_glyph *
fallback	lib/nuklear/src/nuklear.h	/^    const struct nk_font_glyph *fallback;$/;"	m	struct:nk_font	typeref:typename:const struct nk_font_glyph *
fallback_codepoint	lib/nuklear/nuklear.h	/^    nk_rune fallback_codepoint;$/;"	m	struct:nk_font	typeref:typename:nk_rune
fallback_codepoint	lib/nuklear/src/nuklear.h	/^    nk_rune fallback_codepoint;$/;"	m	struct:nk_font	typeref:typename:nk_rune
fallback_glyph	lib/nuklear/nuklear.h	/^    nk_rune fallback_glyph;$/;"	m	struct:nk_font_config	typeref:typename:nk_rune
fallback_glyph	lib/nuklear/src/nuklear.h	/^    nk_rune fallback_glyph;$/;"	m	struct:nk_font_config	typeref:typename:nk_rune
fast	lib/nuklear/example/stb_image.h	/^   stbi__uint16 fast[1 << STBI__ZFAST_BITS];$/;"	m	struct:__anonc731c3c80908	typeref:typename:stbi__uint16[]
fast	lib/nuklear/example/stb_image.h	/^   stbi_uc  fast[1 << FAST_BITS];$/;"	m	struct:__anonc731c3c80508	typeref:typename:stbi_uc[]
fast_ac	lib/nuklear/example/stb_image.h	/^   stbi__int16 fast_ac[4][1 << FAST_BITS];$/;"	m	struct:__anonc731c3c80608	typeref:typename:stbi__int16[4][]
fb	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct rawfb_image fb;$/;"	m	struct:rawfb_context	typeref:struct:rawfb_image
fb_height	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static int                      fb_width = 0, fb_height = 0;$/;"	v	typeref:typename:int	file:
fb_scale	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
fb_scale	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
fb_scale	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_vec2 fb_scale;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
fb_width	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static int                      fb_width = 0, fb_height = 0;$/;"	v	typeref:typename:int	file:
fbc	lib/nuklear/demo/x11_opengl2/main.c	/^    GLXFBConfig fbc;$/;"	m	struct:XWindow	typeref:typename:GLXFBConfig	file:
fbc	lib/nuklear/demo/x11_opengl3/main.c	/^    GLXFBConfig fbc;$/;"	m	struct:XWindow	typeref:typename:GLXFBConfig	file:
fd	lib/klib/knetfile.h	/^	int type, fd;$/;"	m	struct:knetFile_s	typeref:typename:int
fd	lib/klib/kopen.c	/^	int type, fd;$/;"	m	struct:__anonae17a10a0208	typeref:typename:int	file:
fd	lib/klib/kurl.c	/^	int fd;       \/\/ file descriptor for a normal file; <0 for a remote file$/;"	m	struct:kurl_t	typeref:typename:int	file:
fd	lib/klib/test/kseq_bench2.c	/^		int fd, dret;$/;"	v	typeref:typename:int
fdselect	lib/cimgui/imgui/stb_truetype.h	/^   stbtt__buf fdselect;               \/\/ map from glyph to fontdict$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fdx	lib/cimgui/imgui/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
fdx	lib/nuklear/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
fdx	lib/nuklear/src/nuklear_font.c	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float	file:
fdy	lib/cimgui/imgui/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
fdy	lib/nuklear/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
fdy	lib/nuklear/src/nuklear_font.c	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float	file:
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v	typeref:typename:const char[]
file	lib/nuklear/example/file_browser.c	/^    char file[MAX_PATH_LEN];$/;"	m	struct:file_browser	typeref:typename:char[]	file:
file	lib/nuklear/example/file_browser.c	/^struct file {$/;"	s	file:
file_browser	lib/nuklear/example/Makefile	/^file_browser: generate$/;"	t
file_browser	lib/nuklear/example/file_browser.c	/^struct file_browser {$/;"	s	file:
file_browser_free	lib/nuklear/example/file_browser.c	/^file_browser_free(struct file_browser *browser)$/;"	f	typeref:typename:void	file:
file_browser_init	lib/nuklear/example/file_browser.c	/^file_browser_init(struct file_browser *browser, struct media *media)$/;"	f	typeref:typename:void	file:
file_browser_reload_directory_content	lib/nuklear/example/file_browser.c	/^file_browser_reload_directory_content(struct file_browser *browser, const char *path)$/;"	f	typeref:typename:void	file:
file_browser_run	lib/nuklear/example/file_browser.c	/^file_browser_run(struct file_browser *browser, struct nk_context *ctx)$/;"	f	typeref:typename:int	file:
file_count	lib/nuklear/example/file_browser.c	/^    size_t file_count;$/;"	m	struct:file_browser	typeref:typename:size_t	file:
file_group	lib/nuklear/example/file_browser.c	/^struct file_group {$/;"	s	file:
file_groups	lib/nuklear/example/file_browser.c	/^enum file_groups {$/;"	g	file:
file_load	lib/nuklear/example/file_browser.c	/^file_load(const char* path, size_t* siz)$/;"	f	typeref:typename:char *	file:
file_size	lib/klib/knetfile.h	/^    int64_t file_size;$/;"	m	struct:knetFile_s	typeref:typename:int64_t
file_types	lib/nuklear/example/file_browser.c	/^enum file_types {$/;"	g	file:
filename	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "filename" : "icon_imgui_60@2x~iphone.png",$/;"	s	object:images.4
filename	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "filename" : "icon_imgui_60@3x~iphone.png",$/;"	s	object:images.5
filename	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "filename" : "icon_imgui_76@2x~ipad.png",$/;"	s	object:images.11
filename	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "filename" : "icon_imgui_76~ipad.png",$/;"	s	object:images.10
filename	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "filename" : "icon_imgui_180x180.png",$/;"	s	object:images.9
files	lib/nuklear/example/file_browser.c	/^    char **files;$/;"	m	struct:file_browser	typeref:typename:char **	file:
files	lib/nuklear/example/file_browser.c	/^    struct file files[FILE_MAX];$/;"	m	struct:media	typeref:struct:file[]	file:
fill_buffer	lib/klib/kurl.c	/^static int fill_buffer(kurl_t *ku) \/\/ fill the buffer$/;"	f	typeref:typename:int	file:
filled	lib/nuklear/nuklear.h	/^    float filled;$/;"	m	struct:nk_row_layout	typeref:typename:float
filled	lib/nuklear/src/nuklear.h	/^    float filled;$/;"	m	struct:nk_row_layout	typeref:typename:float
filter	lib/nuklear/nuklear.h	/^    nk_plugin_filter filter;$/;"	m	struct:nk_text_edit	typeref:typename:nk_plugin_filter
filter	lib/nuklear/src/nuklear.h	/^    nk_plugin_filter filter;$/;"	m	struct:nk_text_edit	typeref:typename:nk_plugin_filter
finished	lib/klib/kstring.h	/^	int sep, finished;$/;"	m	struct:__anon959017540108	typeref:typename:int
first	lib/nuklear/example/stb_image.h	/^   stbi_uc first;$/;"	m	struct:__anonc731c3c80f08	typeref:typename:stbi_uc
first_char	lib/cimgui/imgui/stb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anonfd61af4b0508	typeref:typename:int
first_char	lib/nuklear/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	typeref:typename:int
first_char	lib/nuklear/src/nuklear_text_editor.c	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	typeref:typename:int	file:
first_free	lib/cimgui/imgui/stb_truetype.h	/^   void   *first_free;$/;"	m	struct:stbtt__hheap	typeref:typename:void *
first_free	lib/nuklear/nuklear.h	/^    void   *first_free;$/;"	m	struct:nk_tt__hheap	typeref:typename:void *
first_free	lib/nuklear/src/nuklear_font.c	/^    void   *first_free;$/;"	m	struct:nk_tt__hheap	typeref:typename:void *	file:
first_row_filter	lib/nuklear/example/stb_image.h	/^static stbi_uc first_row_filter[5] =$/;"	v	typeref:typename:stbi_uc[5]
first_unicode_codepoint_in_range	lib/cimgui/imgui/stb_truetype.h	/^   int first_unicode_codepoint_in_range;  \/\/ if non-zero, then the chars are continuous, and t/;"	m	struct:__anonc4c159420508	typeref:typename:int
first_unicode_codepoint_in_range	lib/nuklear/nuklear.h	/^    int first_unicode_codepoint_in_range;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int
first_unicode_codepoint_in_range	lib/nuklear/src/nuklear_font.c	/^    int first_unicode_codepoint_in_range;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int	file:
first_x	lib/cimgui/imgui/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:float
first_y	lib/cimgui/imgui/stb_truetype.h	/^   float first_x, first_y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:float
firstcode	lib/nuklear/example/stb_image.h	/^   stbi__uint16 firstcode[16];$/;"	m	struct:__anonc731c3c80908	typeref:typename:stbi__uint16[16]
firstsymbol	lib/nuklear/example/stb_image.h	/^   stbi__uint16 firstsymbol[16];$/;"	m	struct:__anonc731c3c80908	typeref:typename:stbi__uint16[16]
fixed_background	lib/nuklear/nuklear.h	/^    struct nk_style_item fixed_background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_item
fixed_background	lib/nuklear/src/nuklear.h	/^    struct nk_style_item fixed_background;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_item
flags	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
flags	lib/nuklear/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_panel	typeref:typename:nk_flags
flags	lib/nuklear/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_window	typeref:typename:nk_flags
flags	lib/nuklear/nuklear.h	/^    struct nk_config_stack_flags flags;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_flags
flags	lib/nuklear/src/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_panel	typeref:typename:nk_flags
flags	lib/nuklear/src/nuklear.h	/^    nk_flags flags;$/;"	m	struct:nk_window	typeref:typename:nk_flags
flags	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_flags flags;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_flags
float2fixed	lib/nuklear/example/stb_image.h	/^#define float2fixed(/;"	d
floats	lib/nuklear/nuklear.h	/^    struct nk_config_stack_float floats;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_float
floats	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_float floats;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_float
fmin_aux	lib/klib/lua/klib.lua	/^	function fmin_aux(x1, data, fx1, dx) -- auxiliary function$/;"	f
font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    ALLEGRO_FONT *font;$/;"	m	struct:NkAllegro5Font	typeref:typename:ALLEGRO_FONT *
font	lib/nuklear/demo/x11/main.c	/^    XFont *font;$/;"	m	struct:XWindow	typeref:typename:XFont *	file:
font	lib/nuklear/example/file_browser.c	/^    int font;$/;"	m	struct:media	typeref:typename:int	file:
font	lib/nuklear/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_command_text	typeref:typename:const struct nk_user_font *
font	lib/nuklear/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_style	typeref:typename:const struct nk_user_font *
font	lib/nuklear/nuklear.h	/^    struct nk_baked_font *font;$/;"	m	struct:nk_font_config	typeref:struct:nk_baked_font *
font	lib/nuklear/src/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_command_text	typeref:typename:const struct nk_user_font *
font	lib/nuklear/src/nuklear.h	/^    const struct nk_user_font *font;$/;"	m	struct:nk_style	typeref:typename:const struct nk_user_font *
font	lib/nuklear/src/nuklear.h	/^    struct nk_baked_font *font;$/;"	m	struct:nk_font_config	typeref:struct:nk_baked_font *
fontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpFontCollection *fontCollection[10];$/;"	m	struct:__anon66f154fe0d08	typeref:typename:GpFontCollection * [10]
font_14	lib/nuklear/example/extended.c	/^    struct nk_font *font_14;$/;"	m	struct:media	typeref:struct:nk_font *	file:
font_18	lib/nuklear/example/extended.c	/^    struct nk_font *font_18;$/;"	m	struct:media	typeref:struct:nk_font *	file:
font_20	lib/nuklear/example/extended.c	/^    struct nk_font *font_20;$/;"	m	struct:media	typeref:struct:nk_font *	file:
font_22	lib/nuklear/example/extended.c	/^    struct nk_font *font_22;$/;"	m	struct:media	typeref:struct:nk_font *	file:
font_file	lib/nuklear/example/file_browser.c	/^    struct nk_image font_file;$/;"	m	struct:icons	typeref:struct:nk_image	file:
font_num	lib/nuklear/nuklear.h	/^    int font_num;$/;"	m	struct:nk_font_atlas	typeref:typename:int
font_num	lib/nuklear/src/nuklear.h	/^    int font_num;$/;"	m	struct:nk_font_atlas	typeref:typename:int
font_size	lib/cimgui/imgui/stb_truetype.h	/^   float font_size;$/;"	m	struct:__anonc4c159420508	typeref:typename:float
font_size	lib/nuklear/nuklear.h	/^    float font_size;$/;"	m	struct:nk_tt_pack_range	typeref:typename:float
font_size	lib/nuklear/src/nuklear_font.c	/^    float font_size;$/;"	m	struct:nk_tt_pack_range	typeref:typename:float	file:
font_tex	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint font_tex;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    GLuint font_tex;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint font_tex;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
font_tex	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct rawfb_image font_tex;$/;"	m	struct:rawfb_context	typeref:struct:rawfb_image
font_tex	lib/nuklear/example/canvas.c	/^    GLuint font_tex;$/;"	m	struct:device	typeref:typename:GLuint	file:
font_tex	lib/nuklear/example/extended.c	/^    GLuint font_tex;$/;"	m	struct:device	typeref:typename:GLuint	file:
font_tex	lib/nuklear/example/file_browser.c	/^    GLuint font_tex;$/;"	m	struct:device	typeref:typename:GLuint	file:
font_tex	lib/nuklear/example/skinning.c	/^    GLuint font_tex;$/;"	m	struct:device	typeref:typename:GLuint	file:
font_tex_index	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int font_tex_index;$/;"	m	struct:nk_glfw_device	typeref:typename:int
font_texture_view	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11ShaderResourceView *font_texture_view;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11ShaderResourceView *
fontdicts	lib/cimgui/imgui/stb_truetype.h	/^   stbtt__buf fontdicts;              \/\/ array of font dicts$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
fonts	lib/nuklear/nuklear.h	/^    struct nk_config_stack_user_font fonts;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_user_font
fonts	lib/nuklear/nuklear.h	/^    struct nk_font *fonts;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font *
fonts	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_user_font fonts;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_user_font
fonts	lib/nuklear/src/nuklear.h	/^    struct nk_font *fonts;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font *
fontstart	lib/cimgui/imgui/stb_truetype.h	/^   int              fontstart;         \/\/ offset of start of font$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
fontstart	lib/nuklear/nuklear.h	/^    int fontstart;\/* offset of start of font *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
fontstart	lib/nuklear/src/nuklear_font.c	/^    int fontstart;\/* offset of start of font *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
footer_height	lib/nuklear/nuklear.h	/^    float footer_height;$/;"	m	struct:nk_panel	typeref:typename:float
footer_height	lib/nuklear/src/nuklear.h	/^    float footer_height;$/;"	m	struct:nk_panel	typeref:typename:float
foreground	lib/nuklear/nuklear.h	/^    struct nk_color foreground;$/;"	m	struct:nk_command_text	typeref:struct:nk_color
foreground	lib/nuklear/src/nuklear.h	/^    struct nk_color foreground;$/;"	m	struct:nk_command_text	typeref:struct:nk_color
format	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpStringFormat *format;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:GpStringFormat *
format	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    enum nk_font_atlas_format format;$/;"	m	struct:rawfb_image	typeref:enum:nk_font_atlas_format
format	lib/nuklear/nuklear.h	/^    enum nk_draw_vertex_layout_format format;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_format
format	lib/nuklear/src/nuklear.h	/^    enum nk_draw_vertex_layout_format format;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:enum:nk_draw_vertex_layout_format
format_node_recur	lib/klib/knhx.c	/^static void format_node_recur(const knhx1_t *node, const knhx1_t *p, kstring_t *s, char *numbuf)$/;"	f	typeref:typename:void	file:
fp	lib/klib/bgzf.h	/^	void *fp; \/\/ actual file handler; FILE* on writing; FILE* or knetFile* on reading$/;"	m	struct:__anone038ee1b0108	typeref:typename:void *
fp	lib/klib/test/kseq_bench2.c	/^		FILE *fp;$/;"	v	typeref:typename:FILE *
fp	lib/klib/test/kthread_test2.c	/^	FILE *fp;$/;"	m	struct:__anon03438e700108	typeref:typename:FILE *	file:
frag_shdr	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
frag_shdr	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
frag_shdr	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
frag_shdr	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
frag_shdr	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
frag_shdr	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint frag_shdr;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
frag_shdr	lib/nuklear/example/canvas.c	/^    GLuint frag_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
frag_shdr	lib/nuklear/example/extended.c	/^    GLuint frag_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
frag_shdr	lib/nuklear/example/file_browser.c	/^    GLuint frag_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
frag_shdr	lib/nuklear/example/skinning.c	/^    GLuint frag_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
fragment_program_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int fragment_program_available;$/;"	m	struct:opengl_info	typeref:typename:int
frame_begin	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void frame_begin()$/;"	f	typeref:typename:void	file:
frame_buffer_object_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int frame_buffer_object_available;$/;"	m	struct:opengl_info	typeref:typename:int
frame_end	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void frame_end()$/;"	f	typeref:typename:void	file:
frame_present	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void frame_present()$/;"	f	typeref:typename:void	file:
free	lib/nuklear/nuklear.h	/^    nk_plugin_free free;$/;"	m	struct:nk_allocator	typeref:typename:nk_plugin_free
free	lib/nuklear/src/nuklear.h	/^    nk_plugin_free free;$/;"	m	struct:nk_allocator	typeref:typename:nk_plugin_free
free_cache	lib/klib/bgzf.c	/^static void free_cache(BGZF *fp) {}$/;"	f	typeref:typename:void	file:
free_cache	lib/klib/bgzf.c	/^static void free_cache(BGZF *fp)$/;"	f	typeref:typename:void	file:
free_head	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_node *free_head;$/;"	m	struct:stbrp_context	typeref:typename:stbrp_node *
free_head	lib/nuklear/nuklear.h	/^    struct nk_rp_node *free_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node *
free_head	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node *free_head;$/;"	m	struct:nk_rp_context	typeref:struct:nk_rp_node *	file:
freelist	lib/nuklear/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_context	typeref:struct:nk_page_element *
freelist	lib/nuklear/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_pool	typeref:struct:nk_page_element *
freelist	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_context	typeref:struct:nk_page_element *
freelist	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *freelist;$/;"	m	struct:nk_pool	typeref:struct:nk_page_element *
front	lib/cimgui/imgui/imgui.h	/^        char front() const { return *b; }$/;"	f	struct:ImGuiTextFilter::TextRange	typeref:typename:char
front	lib/cimgui/imgui/imgui.h	/^    inline const value_type&    front() const                   { IM_ASSERT(Size > 0); return Da/;"	f	class:ImVector	typeref:typename:const value_type &
front	lib/cimgui/imgui/imgui.h	/^    inline value_type&          front()                         { IM_ASSERT(Size > 0); return Da/;"	f	class:ImVector	typeref:typename:value_type &
fseeko	lib/klib/bgzf.c	/^#define fseeko(/;"	d	file:
ftello	lib/klib/bgzf.c	/^#define ftello(/;"	d	file:
ftp_open	lib/klib/kopen.c	/^static int ftp_open(const char *fn)$/;"	f	typeref:typename:int	file:
ftpaux_t	lib/klib/kopen.c	/^} ftpaux_t;$/;"	t	typeref:struct:__anonae17a10a0108	file:
func	lib/klib/kthread.c	/^	void (*func)(void*,long,int);$/;"	m	struct:kt_for_t	typeref:typename:void (*)(void *,long,int)	file:
func	lib/klib/kthread.c	/^	void (*func)(void*,long,int);$/;"	m	struct:kt_forpool_t	typeref:typename:void (*)(void *,long,int)	file:
func	lib/klib/kthread.c	/^	void *(*func)(void*, int, void*);$/;"	m	struct:ktp_t	typeref:typename:void * (*)(void *,int,void *)	file:
funcs	lib/cimgui/imgui/imgui_demo.cpp	/^    struct funcs$/;"	s	function:ShowExampleAppPropertyEditor	file:
fx	lib/cimgui/imgui/stb_truetype.h	/^   float fx,fdx,fdy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
fx	lib/nuklear/nuklear.h	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
fx	lib/nuklear/src/nuklear_font.c	/^    float fx,fdx,fdy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float	file:
g	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
g	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
g	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
g	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
g_Allocator	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkAllocationCallbacks* g_Allocator = NULL;$/;"	v	typeref:typename:VkAllocationCallbacks *	file:
g_Allocator	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkAllocationCallbacks*   g_Allocator = NULL;$/;"	v	typeref:typename:VkAllocationCallbacks *	file:
g_AttribLocationColor	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationColor	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationColor	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationPosition	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationPosition	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationPosition	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationProjMtx	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	typeref:typename:int	file:
g_AttribLocationProjMtx	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	typeref:typename:int	file:
g_AttribLocationProjMtx	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	typeref:typename:int	file:
g_AttribLocationTex	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	typeref:typename:int	file:
g_AttribLocationTex	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	typeref:typename:int	file:
g_AttribLocationTex	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationTex = 0, g_AttribLocationProjMtx = 0;$/;"	v	typeref:typename:int	file:
g_AttribLocationUV	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationUV	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_AttribLocationUV	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_AttribLocationPosition = 0, g_AttribLocationUV = 0, g_AttribLocationColor /;"	v	typeref:typename:int	file:
g_BackBuffer	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkImage                  g_BackBuffer[IMGUI_MAX_POSSIBLE_BACK_BUFFERS] = {};$/;"	v	typeref:typename:VkImage[]	file:
g_BackBufferCount	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static uint32_t                 g_BackBufferCount = 0;$/;"	v	typeref:typename:uint32_t	file:
g_BackBufferView	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkImageView              g_BackBufferView[IMGUI_MAX_POSSIBLE_BACK_BUFFERS] = {};$/;"	v	typeref:typename:VkImageView[]	file:
g_BackbufferIndices	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static uint32_t                 g_BackbufferIndices[IMGUI_VK_QUEUED_FRAMES];    \/\/ keep track /;"	v	typeref:typename:uint32_t[]	file:
g_BufferMemoryAlignment	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDeviceSize           g_BufferMemoryAlignment = 256;$/;"	v	typeref:typename:VkDeviceSize	file:
g_CheckVkResult	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static void (*g_CheckVkResult)(VkResult err) = NULL;$/;"	v	typeref:typename:void (*)(VkResult err)	file:
g_ClearValue	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkClearValue             g_ClearValue = {};$/;"	v	typeref:typename:VkClearValue	file:
g_ClipboardText	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static char*        g_ClipboardText = NULL;$/;"	v	typeref:typename:char *	file:
g_CommandBuffer	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkCommandBuffer        g_CommandBuffer = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkCommandBuffer	file:
g_CommandBuffer	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkCommandBuffer          g_CommandBuffer[IMGUI_VK_QUEUED_FRAMES];$/;"	v	typeref:typename:VkCommandBuffer[]	file:
g_CommandPool	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkCommandPool            g_CommandPool[IMGUI_VK_QUEUED_FRAMES];$/;"	v	typeref:typename:VkCommandPool[]	file:
g_Debug_Report	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkDebugReportCallbackEXT g_Debug_Report = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDebugReportCallbackEXT	file:
g_DescriptorPool	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDescriptorPool       g_DescriptorPool = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDescriptorPool	file:
g_DescriptorPool	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkDescriptorPool         g_DescriptorPool = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDescriptorPool	file:
g_DescriptorSet	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDescriptorSet        g_DescriptorSet = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDescriptorSet	file:
g_DescriptorSetLayout	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDescriptorSetLayout  g_DescriptorSetLayout = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDescriptorSetLayout	file:
g_Device	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDevice               g_Device = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDevice	file:
g_Device	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkDevice                 g_Device = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDevice	file:
g_Display	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^static ALLEGRO_DISPLAY*         g_Display = NULL;$/;"	v	typeref:typename:ALLEGRO_DISPLAY *	file:
g_ElementsHandle	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;$/;"	v	typeref:typename:unsigned int	file:
g_ElementsHandle	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static unsigned int g_VboHandle = 0,g_ElementsHandle = 0;$/;"	v	typeref:typename:unsigned int	file:
g_ElementsHandle	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;$/;"	v	typeref:typename:unsigned int	file:
g_Fence	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkFence                  g_Fence[IMGUI_VK_QUEUED_FRAMES];$/;"	v	typeref:typename:VkFence[]	file:
g_FontImage	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkImage                g_FontImage = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkImage	file:
g_FontMemory	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDeviceMemory         g_FontMemory = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDeviceMemory	file:
g_FontSampler	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkSampler              g_FontSampler = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkSampler	file:
g_FontTexture	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static LPDIRECT3DTEXTURE9       g_FontTexture = NULL;$/;"	v	typeref:typename:LPDIRECT3DTEXTURE9	file:
g_FontTexture	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static CIwTexture*  g_FontTexture = NULL;$/;"	v	typeref:typename:CIwTexture *	file:
g_FontTexture	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	typeref:typename:GLuint	file:
g_FontTexture	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	typeref:typename:GLuint	file:
g_FontTexture	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	typeref:typename:GLuint	file:
g_FontTexture	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	typeref:typename:GLuint	file:
g_FontTexture	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static GLuint       g_FontTexture = 0;$/;"	v	typeref:typename:GLuint	file:
g_FontView	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkImageView            g_FontView = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkImageView	file:
g_FragHandle	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_FragHandle	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_FragHandle	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_FrameIndex	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static int                    g_FrameIndex = 0;$/;"	v	typeref:typename:int	file:
g_FrameIndex	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static uint32_t                 g_FrameIndex = 0;$/;"	v	typeref:typename:uint32_t	file:
g_Framebuffer	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkFramebuffer            g_Framebuffer[IMGUI_MAX_POSSIBLE_BACK_BUFFERS] = {};$/;"	v	typeref:typename:VkFramebuffer[]	file:
g_GlslVersion	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static char         g_GlslVersion[32] = "#version 150";$/;"	v	typeref:typename:char[32]	file:
g_GlslVersion	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static char         g_GlslVersion[32] = "#version 150";$/;"	v	typeref:typename:char[32]	file:
g_GlslVersion	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static char         g_GlslVersion[32] = "#version 150";$/;"	v	typeref:typename:char[32]	file:
g_Gpu	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkPhysicalDevice       g_Gpu = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkPhysicalDevice	file:
g_Gpu	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkPhysicalDevice         g_Gpu = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkPhysicalDevice	file:
g_ImageRange	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkImageSubresourceRange  g_ImageRange = {VK_IMAGE_ASPECT_COLOR_BIT, 0, 1, 0, 1};$/;"	v	typeref:typename:VkImageSubresourceRange	file:
g_IndexBuffer	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkBuffer               g_IndexBuffer[IMGUI_VK_QUEUED_FRAMES] = {};$/;"	v	typeref:typename:VkBuffer[]	file:
g_IndexBufferMemory	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDeviceMemory         g_IndexBufferMemory[IMGUI_VK_QUEUED_FRAMES] = {};$/;"	v	typeref:typename:VkDeviceMemory[]	file:
g_IndexBufferSize	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	typeref:typename:int	file:
g_IndexBufferSize	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	typeref:typename:int	file:
g_IndexBufferSize	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	typeref:typename:int	file:
g_IndexBufferSize	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDeviceSize           g_IndexBufferSize[IMGUI_VK_QUEUED_FRAMES] = {};$/;"	v	typeref:typename:VkDeviceSize[]	file:
g_Instance	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkInstance               g_Instance = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkInstance	file:
g_LastMouseCursor	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ImGuiMouseCursor         g_LastMouseCursor = ImGuiMouseCursor_COUNT;$/;"	v	typeref:typename:ImGuiMouseCursor	file:
g_LastMouseCursor	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ImGuiMouseCursor         g_LastMouseCursor = ImGuiMouseCursor_COUNT;$/;"	v	typeref:typename:ImGuiMouseCursor	file:
g_LastMouseCursor	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ImGuiMouseCursor             g_LastMouseCursor = ImGuiMouseCursor_COUNT;$/;"	v	typeref:typename:ImGuiMouseCursor	file:
g_LastMouseCursor	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static ImGuiMouseCursor         g_LastMouseCursor = ImGuiMouseCursor_COUNT;$/;"	v	typeref:typename:ImGuiMouseCursor	file:
g_MouseCursorInvisible	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^static ALLEGRO_MOUSE_CURSOR*    g_MouseCursorInvisible = NULL;$/;"	v	typeref:typename:ALLEGRO_MOUSE_CURSOR *	file:
g_MouseCursors	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static GLFWcursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = { 0 };$/;"	v	typeref:typename:GLFWcursor * []	file:
g_MouseCursors	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static GLFWcursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = { 0 };$/;"	v	typeref:typename:GLFWcursor * []	file:
g_MouseCursors	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^static SDL_Cursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = { 0 };$/;"	v	typeref:typename:SDL_Cursor * []	file:
g_MouseCursors	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static SDL_Cursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = { 0 };$/;"	v	typeref:typename:SDL_Cursor * []	file:
g_MouseCursors	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static GLFWcursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = { 0 };$/;"	v	typeref:typename:GLFWcursor * []	file:
g_MouseCursors	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static GLFWcursor*  g_MouseCursors[ImGuiMouseCursor_COUNT] = { 0 };$/;"	v	typeref:typename:GLFWcursor * []	file:
g_MouseJustPressed	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static bool         g_MouseJustPressed[3] = { false, false, false };$/;"	v	typeref:typename:bool[3]	file:
g_MouseJustPressed	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static bool         g_MouseJustPressed[3] = { false, false, false };$/;"	v	typeref:typename:bool[3]	file:
g_MouseJustPressed	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static bool         g_MouseJustPressed[3] = { false, false, false };$/;"	v	typeref:typename:bool[3]	file:
g_MouseJustPressed	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static bool         g_MouseJustPressed[3] = { false, false, false };$/;"	v	typeref:typename:bool[3]	file:
g_MousePressed	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static bool         g_MousePressed[3] = { false, false, false };$/;"	v	typeref:typename:bool[3]	file:
g_MousePressed	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^static bool         g_MousePressed[3] = { false, false, false };$/;"	v	typeref:typename:bool[3]	file:
g_MousePressed	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static bool         g_MousePressed[3] = { false, false, false };$/;"	v	typeref:typename:bool[3]	file:
g_Pipeline	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkPipeline             g_Pipeline = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkPipeline	file:
g_PipelineCache	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkPipelineCache        g_PipelineCache = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkPipelineCache	file:
g_PipelineCache	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkPipelineCache          g_PipelineCache = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkPipelineCache	file:
g_PipelineCreateFlags	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkPipelineCreateFlags  g_PipelineCreateFlags = 0;$/;"	v	typeref:typename:VkPipelineCreateFlags	file:
g_PipelineLayout	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkPipelineLayout       g_PipelineLayout = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkPipelineLayout	file:
g_PresentCompleteSemaphore	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkSemaphore              g_PresentCompleteSemaphore[IMGUI_VK_QUEUED_FRAMES];$/;"	v	typeref:typename:VkSemaphore[]	file:
g_PresentMode	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkPresentModeKHR         g_PresentMode;$/;"	v	typeref:typename:VkPresentModeKHR	file:
g_Queue	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkQueue                  g_Queue = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkQueue	file:
g_QueueFamily	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static uint32_t                 g_QueueFamily = 0;$/;"	v	typeref:typename:uint32_t	file:
g_RTVFormat	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static DXGI_FORMAT                  g_RTVFormat = DXGI_FORMAT_UNKNOWN;$/;"	v	typeref:typename:DXGI_FORMAT	file:
g_RenderCompleteSemaphore	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkSemaphore              g_RenderCompleteSemaphore[IMGUI_VK_QUEUED_FRAMES];$/;"	v	typeref:typename:VkSemaphore[]	file:
g_RenderPass	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkRenderPass           g_RenderPass = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkRenderPass	file:
g_RenderPass	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkRenderPass             g_RenderPass = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkRenderPass	file:
g_RenderScale	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static ImVec2       g_RenderScale = ImVec2(1.0f,1.0f);$/;"	v	typeref:typename:ImVec2	file:
g_ResizeHeight	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static int                      g_ResizeWidth = 0, g_ResizeHeight = 0;$/;"	v	typeref:typename:int	file:
g_ResizeWanted	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static bool                     g_ResizeWanted = false;$/;"	v	typeref:typename:bool	file:
g_ResizeWidth	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static int                      g_ResizeWidth = 0, g_ResizeHeight = 0;$/;"	v	typeref:typename:int	file:
g_ShaderHandle	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_ShaderHandle	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_ShaderHandle	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_Surface	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkSurfaceKHR             g_Surface = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkSurfaceKHR	file:
g_SurfaceFormat	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkSurfaceFormatKHR       g_SurfaceFormat;$/;"	v	typeref:typename:VkSurfaceFormatKHR	file:
g_Swapchain	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static VkSwapchainKHR           g_Swapchain = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkSwapchainKHR	file:
g_Texture	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^static ALLEGRO_BITMAP*          g_Texture = NULL;$/;"	v	typeref:typename:ALLEGRO_BITMAP *	file:
g_TicksPerSecond	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static INT64                    g_TicksPerSecond = 0;$/;"	v	typeref:typename:INT64	file:
g_TicksPerSecond	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static INT64                    g_TicksPerSecond = 0;$/;"	v	typeref:typename:INT64	file:
g_TicksPerSecond	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static INT64                        g_TicksPerSecond = 0;$/;"	v	typeref:typename:INT64	file:
g_TicksPerSecond	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static INT64                    g_TicksPerSecond = 0;$/;"	v	typeref:typename:INT64	file:
g_Time	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^static double                   g_Time = 0.0;$/;"	v	typeref:typename:double	file:
g_Time	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static INT64                    g_Time = 0;$/;"	v	typeref:typename:INT64	file:
g_Time	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static INT64                    g_Time = 0;$/;"	v	typeref:typename:INT64	file:
g_Time	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static INT64                        g_Time = 0;$/;"	v	typeref:typename:INT64	file:
g_Time	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static INT64                    g_Time = 0;$/;"	v	typeref:typename:INT64	file:
g_Time	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static double       g_Time = 0.0f;$/;"	v	typeref:typename:double	file:
g_Time	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static double       g_Time = 0.0f;$/;"	v	typeref:typename:double	file:
g_Time	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static double       g_Time = 0.0f;$/;"	v	typeref:typename:double	file:
g_Time	lib/cimgui/imgui/examples/sdl_opengl2_example/imgui_impl_sdl_gl2.cpp	/^static Uint64       g_Time = 0;$/;"	v	typeref:typename:Uint64	file:
g_Time	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static Uint64       g_Time = 0;$/;"	v	typeref:typename:Uint64	file:
g_Time	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static double       g_Time = 0.0f;$/;"	v	typeref:typename:double	file:
g_Time	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static double       g_Time = 0.0;$/;"	v	typeref:typename:double	file:
g_UploadBuffer	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkBuffer               g_UploadBuffer = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkBuffer	file:
g_UploadBufferMemory	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDeviceMemory         g_UploadBufferMemory = VK_NULL_HANDLE;$/;"	v	typeref:typename:VkDeviceMemory	file:
g_VboHandle	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;$/;"	v	typeref:typename:unsigned int	file:
g_VboHandle	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static unsigned int g_VboHandle = 0,g_ElementsHandle = 0;$/;"	v	typeref:typename:unsigned int	file:
g_VboHandle	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static unsigned int g_VboHandle = 0, g_ElementsHandle = 0;$/;"	v	typeref:typename:unsigned int	file:
g_VertHandle	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_VertHandle	lib/cimgui/imgui/examples/sdl_opengl3_example/imgui_impl_sdl_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_VertHandle	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static int          g_ShaderHandle = 0, g_VertHandle = 0, g_FragHandle = 0;$/;"	v	typeref:typename:int	file:
g_VertexBuffer	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkBuffer               g_VertexBuffer[IMGUI_VK_QUEUED_FRAMES] = {};$/;"	v	typeref:typename:VkBuffer[]	file:
g_VertexBufferMemory	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDeviceMemory         g_VertexBufferMemory[IMGUI_VK_QUEUED_FRAMES] = {};$/;"	v	typeref:typename:VkDeviceMemory[]	file:
g_VertexBufferSize	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	typeref:typename:int	file:
g_VertexBufferSize	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	typeref:typename:int	file:
g_VertexBufferSize	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static int                      g_VertexBufferSize = 5000, g_IndexBufferSize = 10000;$/;"	v	typeref:typename:int	file:
g_VertexBufferSize	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static VkDeviceSize           g_VertexBufferSize[IMGUI_VK_QUEUED_FRAMES] = {};$/;"	v	typeref:typename:VkDeviceSize[]	file:
g_VertexDecl	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^static ALLEGRO_VERTEX_DECL*     g_VertexDecl = NULL;$/;"	v	typeref:typename:ALLEGRO_VERTEX_DECL *	file:
g_Window	lib/cimgui/imgui/examples/opengl2_example/imgui_impl_glfw_gl2.cpp	/^static GLFWwindow*  g_Window = NULL;$/;"	v	typeref:typename:GLFWwindow *	file:
g_Window	lib/cimgui/imgui/examples/opengl3_example/imgui_impl_glfw_gl3.cpp	/^static GLFWwindow*  g_Window = NULL;$/;"	v	typeref:typename:GLFWwindow *	file:
g_Window	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.cpp	/^static GLFWwindow*  g_Window = NULL;$/;"	v	typeref:typename:GLFWwindow *	file:
g_Window	lib/imgui_gl3/imgui_impl_glfw_gl3.cpp	/^static GLFWwindow*  g_Window = NULL;$/;"	v	typeref:typename:GLFWwindow *	file:
g_d3dpp	lib/cimgui/imgui/examples/directx9_example/main.cpp	/^static D3DPRESENT_PARAMETERS    g_d3dpp;$/;"	v	typeref:typename:D3DPRESENT_PARAMETERS	file:
g_defr	lib/klib/ksw.c	/^const kswr_t g_defr = { 0, -1, -1, -1, -1, -1, -1 };$/;"	v	typeref:typename:const kswr_t
g_fence	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static ID3D12Fence*                 g_fence = NULL;$/;"	v	typeref:typename:ID3D12Fence *	file:
g_fenceEvent	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static HANDLE                       g_fenceEvent = NULL;$/;"	v	typeref:typename:HANDLE	file:
g_fenceLastSignaledValue	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static UINT64                       g_fenceLastSignaledValue = 0;$/;"	v	typeref:typename:UINT64	file:
g_frameContext	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static FrameContext                 g_frameContext[NUM_FRAMES_IN_FLIGHT] = {};$/;"	v	typeref:typename:FrameContext[]	file:
g_frameIndex	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static UINT                         g_frameIndex = UINT_MAX;$/;"	v	typeref:typename:UINT	file:
g_frameIndex	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static UINT                         g_frameIndex = 0;$/;"	v	typeref:typename:UINT	file:
g_hFontSrvCpuDescHandle	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static D3D12_CPU_DESCRIPTOR_HANDLE  g_hFontSrvCpuDescHandle = {};$/;"	v	typeref:typename:D3D12_CPU_DESCRIPTOR_HANDLE	file:
g_hFontSrvGpuDescHandle	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static D3D12_GPU_DESCRIPTOR_HANDLE  g_hFontSrvGpuDescHandle = {};$/;"	v	typeref:typename:D3D12_GPU_DESCRIPTOR_HANDLE	file:
g_hSwapChainWaitableObject	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static HANDLE                       g_hSwapChainWaitableObject = NULL;$/;"	v	typeref:typename:HANDLE	file:
g_hWnd	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static HWND                     g_hWnd = 0;$/;"	v	typeref:typename:HWND	file:
g_hWnd	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static HWND                     g_hWnd = 0;$/;"	v	typeref:typename:HWND	file:
g_hWnd	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static HWND                         g_hWnd = 0;$/;"	v	typeref:typename:HWND	file:
g_hWnd	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static HWND                     g_hWnd = 0;$/;"	v	typeref:typename:HWND	file:
g_magic	lib/klib/bgzf.c	/^static const uint8_t g_magic[19] = "\\037\\213\\010\\4\\0\\0\\0\\0\\0\\377\\6\\0\\102\\103\\2\\0/;"	v	typeref:typename:const uint8_t[19]	file:
g_mainRenderTargetDescriptor	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static D3D12_CPU_DESCRIPTOR_HANDLE  g_mainRenderTargetDescriptor[NUM_BACK_BUFFERS] = {};$/;"	v	typeref:typename:D3D12_CPU_DESCRIPTOR_HANDLE[]	file:
g_mainRenderTargetResource	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static ID3D12Resource*              g_mainRenderTargetResource[NUM_BACK_BUFFERS] = {};$/;"	v	typeref:typename:ID3D12Resource * []	file:
g_mainRenderTargetView	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^static ID3D10RenderTargetView*  g_mainRenderTargetView = NULL;$/;"	v	typeref:typename:ID3D10RenderTargetView *	file:
g_mainRenderTargetView	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^static ID3D11RenderTargetView*  g_mainRenderTargetView = NULL;$/;"	v	typeref:typename:ID3D11RenderTargetView *	file:
g_numFramesInFlight	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static UINT                         g_numFramesInFlight = 0;$/;"	v	typeref:typename:UINT	file:
g_osdKeyboardEnabled	lib/cimgui/imgui/examples/marmalade_example/imgui_impl_marmalade.cpp	/^static bool         g_osdKeyboardEnabled = false;$/;"	v	typeref:typename:bool	file:
g_pBlendState	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10BlendState*        g_pBlendState = NULL;$/;"	v	typeref:typename:ID3D10BlendState *	file:
g_pBlendState	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11BlendState*        g_pBlendState = NULL;$/;"	v	typeref:typename:ID3D11BlendState *	file:
g_pDepthStencilState	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10DepthStencilState* g_pDepthStencilState = NULL;$/;"	v	typeref:typename:ID3D10DepthStencilState *	file:
g_pDepthStencilState	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11DepthStencilState* g_pDepthStencilState = NULL;$/;"	v	typeref:typename:ID3D11DepthStencilState *	file:
g_pFontSampler	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10SamplerState*      g_pFontSampler = NULL;$/;"	v	typeref:typename:ID3D10SamplerState *	file:
g_pFontSampler	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11SamplerState*      g_pFontSampler = NULL;$/;"	v	typeref:typename:ID3D11SamplerState *	file:
g_pFontTextureResource	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ID3D12Resource*              g_pFontTextureResource = NULL;$/;"	v	typeref:typename:ID3D12Resource *	file:
g_pFontTextureView	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10ShaderResourceView*g_pFontTextureView = NULL;$/;"	v	typeref:typename:ID3D10ShaderResourceView *	file:
g_pFontTextureView	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11ShaderResourceView*g_pFontTextureView = NULL;$/;"	v	typeref:typename:ID3D11ShaderResourceView *	file:
g_pFrameResources	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static FrameResources*              g_pFrameResources = NULL;$/;"	v	typeref:typename:FrameResources *	file:
g_pIB	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10Buffer*            g_pIB = NULL;$/;"	v	typeref:typename:ID3D10Buffer *	file:
g_pIB	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11Buffer*            g_pIB = NULL;$/;"	v	typeref:typename:ID3D11Buffer *	file:
g_pIB	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static LPDIRECT3DINDEXBUFFER9   g_pIB = NULL;$/;"	v	typeref:typename:LPDIRECT3DINDEXBUFFER9	file:
g_pInputLayout	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10InputLayout*       g_pInputLayout = NULL;$/;"	v	typeref:typename:ID3D10InputLayout *	file:
g_pInputLayout	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11InputLayout*       g_pInputLayout = NULL;$/;"	v	typeref:typename:ID3D11InputLayout *	file:
g_pPipelineState	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ID3D12PipelineState*         g_pPipelineState = NULL;$/;"	v	typeref:typename:ID3D12PipelineState *	file:
g_pPixelShader	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10PixelShader*       g_pPixelShader = NULL;$/;"	v	typeref:typename:ID3D10PixelShader *	file:
g_pPixelShader	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11PixelShader*       g_pPixelShader = NULL;$/;"	v	typeref:typename:ID3D11PixelShader *	file:
g_pPixelShaderBlob	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10Blob *             g_pPixelShaderBlob = NULL;$/;"	v	typeref:typename:ID3D10Blob *	file:
g_pPixelShaderBlob	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D10Blob *             g_pPixelShaderBlob = NULL;$/;"	v	typeref:typename:ID3D10Blob *	file:
g_pPixelShaderBlob	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ID3D10Blob*                  g_pPixelShaderBlob = NULL;$/;"	v	typeref:typename:ID3D10Blob *	file:
g_pRasterizerState	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10RasterizerState*   g_pRasterizerState = NULL;$/;"	v	typeref:typename:ID3D10RasterizerState *	file:
g_pRasterizerState	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11RasterizerState*   g_pRasterizerState = NULL;$/;"	v	typeref:typename:ID3D11RasterizerState *	file:
g_pRootSignature	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ID3D12RootSignature*         g_pRootSignature = NULL;$/;"	v	typeref:typename:ID3D12RootSignature *	file:
g_pSwapChain	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^static IDXGISwapChain*          g_pSwapChain = NULL;$/;"	v	typeref:typename:IDXGISwapChain *	file:
g_pSwapChain	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^static IDXGISwapChain*          g_pSwapChain = NULL;$/;"	v	typeref:typename:IDXGISwapChain *	file:
g_pSwapChain	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static IDXGISwapChain3*             g_pSwapChain = NULL;$/;"	v	typeref:typename:IDXGISwapChain3 *	file:
g_pVB	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10Buffer*            g_pVB = NULL;$/;"	v	typeref:typename:ID3D10Buffer *	file:
g_pVB	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11Buffer*            g_pVB = NULL;$/;"	v	typeref:typename:ID3D11Buffer *	file:
g_pVB	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static LPDIRECT3DVERTEXBUFFER9  g_pVB = NULL;$/;"	v	typeref:typename:LPDIRECT3DVERTEXBUFFER9	file:
g_pVertexConstantBuffer	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10Buffer*            g_pVertexConstantBuffer = NULL;$/;"	v	typeref:typename:ID3D10Buffer *	file:
g_pVertexConstantBuffer	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11Buffer*            g_pVertexConstantBuffer = NULL;$/;"	v	typeref:typename:ID3D11Buffer *	file:
g_pVertexShader	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10VertexShader*      g_pVertexShader = NULL;$/;"	v	typeref:typename:ID3D10VertexShader *	file:
g_pVertexShader	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11VertexShader*      g_pVertexShader = NULL;$/;"	v	typeref:typename:ID3D11VertexShader *	file:
g_pVertexShaderBlob	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10Blob *             g_pVertexShaderBlob = NULL;$/;"	v	typeref:typename:ID3D10Blob *	file:
g_pVertexShaderBlob	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D10Blob *             g_pVertexShaderBlob = NULL;$/;"	v	typeref:typename:ID3D10Blob *	file:
g_pVertexShaderBlob	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ID3D10Blob*                  g_pVertexShaderBlob = NULL;$/;"	v	typeref:typename:ID3D10Blob *	file:
g_pd3dCommandList	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ID3D12GraphicsCommandList*   g_pd3dCommandList = NULL;$/;"	v	typeref:typename:ID3D12GraphicsCommandList *	file:
g_pd3dCommandList	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static ID3D12GraphicsCommandList*   g_pd3dCommandList = NULL;$/;"	v	typeref:typename:ID3D12GraphicsCommandList *	file:
g_pd3dCommandQueue	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static ID3D12CommandQueue*          g_pd3dCommandQueue = NULL;$/;"	v	typeref:typename:ID3D12CommandQueue *	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^static ID3D10Device*            g_pd3dDevice = NULL;$/;"	v	typeref:typename:ID3D10Device *	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^static ID3D10Device*            g_pd3dDevice = NULL;$/;"	v	typeref:typename:ID3D10Device *	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11Device*            g_pd3dDevice = NULL;$/;"	v	typeref:typename:ID3D11Device *	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^static ID3D11Device*            g_pd3dDevice = NULL;$/;"	v	typeref:typename:ID3D11Device *	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^static ID3D12Device*                g_pd3dDevice = NULL;$/;"	v	typeref:typename:ID3D12Device *	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static ID3D12Device*                g_pd3dDevice = NULL;$/;"	v	typeref:typename:ID3D12Device *	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^static LPDIRECT3DDEVICE9        g_pd3dDevice = NULL;$/;"	v	typeref:typename:LPDIRECT3DDEVICE9	file:
g_pd3dDevice	lib/cimgui/imgui/examples/directx9_example/main.cpp	/^static LPDIRECT3DDEVICE9        g_pd3dDevice = NULL;$/;"	v	typeref:typename:LPDIRECT3DDEVICE9	file:
g_pd3dDeviceContext	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;$/;"	v	typeref:typename:ID3D11DeviceContext *	file:
g_pd3dDeviceContext	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^static ID3D11DeviceContext*     g_pd3dDeviceContext = NULL;$/;"	v	typeref:typename:ID3D11DeviceContext *	file:
g_pd3dRtvDescHeap	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static ID3D12DescriptorHeap*        g_pd3dRtvDescHeap = NULL;$/;"	v	typeref:typename:ID3D12DescriptorHeap *	file:
g_pd3dSrvDescHeap	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^static ID3D12DescriptorHeap*        g_pd3dSrvDescHeap = NULL;$/;"	v	typeref:typename:ID3D12DescriptorHeap *	file:
gc	lib/nuklear/demo/x11/nuklear_xlib.h	/^    GC gc;$/;"	m	struct:XSurface	typeref:typename:GC
gc	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    GC gc;$/;"	m	struct:__anon88f201100108	typeref:typename:GC
gcc	lib/nuklear/demo/x11_opengl2/Makefile	/^gcc: $(BIN)$/;"	t
gcc	lib/nuklear/demo/x11_opengl2/Makefile	/^gcc: CC = gcc$/;"	t
gcc	lib/nuklear/demo/x11_opengl3/Makefile	/^gcc: $(BIN)$/;"	t
gcc	lib/nuklear/demo/x11_opengl3/Makefile	/^gcc: CC = gcc$/;"	t
gdi	lib/nuklear/demo/gdi/nuklear_gdi.h	/^} gdi;$/;"	v	typeref:struct:__anonc4120a9e0108
gdip	lib/nuklear/demo/gdip/nuklear_gdip.h	/^} gdip;$/;"	v	typeref:struct:__anon66f154fe0d08
gen_data	lib/klib/test/kstring_bench2.c	/^char *gen_data(int len, int a)$/;"	f	typeref:typename:char *
generate	lib/nuklear/example/Makefile	/^generate: clean$/;"	t
getBuckets	lib/klib/ksa.c	/^static inline void getBuckets(const saint_t *C, saint_t *B, saint_t k, saint_t end)$/;"	f	typeref:typename:void	file:
getCounts	lib/klib/ksa.c	/^static void getCounts(const unsigned char *T, saint_t *C, saint_t n, saint_t k, int cs)$/;"	f	typeref:typename:void	file:
get_proc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void *get_proc(const char *proc)$/;"	f	typeref:typename:void *	file:
get_proc	lib/gl3w/GL/gl3w.c	/^static void *get_proc(const char *proc)$/;"	f	typeref:typename:void *	file:
gl3wActiveShaderProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLACTIVESHADERPROGRAMPROC gl3wActiveShaderProgram;$/;"	v	typeref:typename:PFNGLACTIVESHADERPROGRAMPROC
gl3wActiveShaderProgram	lib/gl3w/GL/gl3w.c	/^PFNGLACTIVESHADERPROGRAMPROC gl3wActiveShaderProgram;$/;"	v	typeref:typename:PFNGLACTIVESHADERPROGRAMPROC
gl3wActiveTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLACTIVETEXTUREPROC gl3wActiveTexture;$/;"	v	typeref:typename:PFNGLACTIVETEXTUREPROC
gl3wActiveTexture	lib/gl3w/GL/gl3w.c	/^PFNGLACTIVETEXTUREPROC gl3wActiveTexture;$/;"	v	typeref:typename:PFNGLACTIVETEXTUREPROC
gl3wAttachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLATTACHSHADERPROC gl3wAttachShader;$/;"	v	typeref:typename:PFNGLATTACHSHADERPROC
gl3wAttachShader	lib/gl3w/GL/gl3w.c	/^PFNGLATTACHSHADERPROC gl3wAttachShader;$/;"	v	typeref:typename:PFNGLATTACHSHADERPROC
gl3wBeginConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINCONDITIONALRENDERPROC gl3wBeginConditionalRender;$/;"	v	typeref:typename:PFNGLBEGINCONDITIONALRENDERPROC
gl3wBeginConditionalRender	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINCONDITIONALRENDERPROC gl3wBeginConditionalRender;$/;"	v	typeref:typename:PFNGLBEGINCONDITIONALRENDERPROC
gl3wBeginQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYPROC gl3wBeginQuery;$/;"	v	typeref:typename:PFNGLBEGINQUERYPROC
gl3wBeginQuery	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYPROC gl3wBeginQuery;$/;"	v	typeref:typename:PFNGLBEGINQUERYPROC
gl3wBeginQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYINDEXEDPROC gl3wBeginQueryIndexed;$/;"	v	typeref:typename:PFNGLBEGINQUERYINDEXEDPROC
gl3wBeginQueryIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINQUERYINDEXEDPROC gl3wBeginQueryIndexed;$/;"	v	typeref:typename:PFNGLBEGINQUERYINDEXEDPROC
gl3wBeginTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBEGINTRANSFORMFEEDBACKPROC gl3wBeginTransformFeedback;$/;"	v	typeref:typename:PFNGLBEGINTRANSFORMFEEDBACKPROC
gl3wBeginTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLBEGINTRANSFORMFEEDBACKPROC gl3wBeginTransformFeedback;$/;"	v	typeref:typename:PFNGLBEGINTRANSFORMFEEDBACKPROC
gl3wBindAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDATTRIBLOCATIONPROC gl3wBindAttribLocation;$/;"	v	typeref:typename:PFNGLBINDATTRIBLOCATIONPROC
gl3wBindAttribLocation	lib/gl3w/GL/gl3w.c	/^PFNGLBINDATTRIBLOCATIONPROC gl3wBindAttribLocation;$/;"	v	typeref:typename:PFNGLBINDATTRIBLOCATIONPROC
gl3wBindBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERPROC gl3wBindBuffer;$/;"	v	typeref:typename:PFNGLBINDBUFFERPROC
gl3wBindBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERPROC gl3wBindBuffer;$/;"	v	typeref:typename:PFNGLBINDBUFFERPROC
gl3wBindBufferBase	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERBASEPROC gl3wBindBufferBase;$/;"	v	typeref:typename:PFNGLBINDBUFFERBASEPROC
gl3wBindBufferBase	lib/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERBASEPROC gl3wBindBufferBase;$/;"	v	typeref:typename:PFNGLBINDBUFFERBASEPROC
gl3wBindBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERRANGEPROC gl3wBindBufferRange;$/;"	v	typeref:typename:PFNGLBINDBUFFERRANGEPROC
gl3wBindBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLBINDBUFFERRANGEPROC gl3wBindBufferRange;$/;"	v	typeref:typename:PFNGLBINDBUFFERRANGEPROC
gl3wBindFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONPROC gl3wBindFragDataLocation;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONPROC
gl3wBindFragDataLocation	lib/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONPROC gl3wBindFragDataLocation;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONPROC
gl3wBindFragDataLocationIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONINDEXEDPROC gl3wBindFragDataLocationIndexed;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
gl3wBindFragDataLocationIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLBINDFRAGDATALOCATIONINDEXEDPROC gl3wBindFragDataLocationIndexed;$/;"	v	typeref:typename:PFNGLBINDFRAGDATALOCATIONINDEXEDPROC
gl3wBindFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDFRAMEBUFFERPROC gl3wBindFramebuffer;$/;"	v	typeref:typename:PFNGLBINDFRAMEBUFFERPROC
gl3wBindFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDFRAMEBUFFERPROC gl3wBindFramebuffer;$/;"	v	typeref:typename:PFNGLBINDFRAMEBUFFERPROC
gl3wBindImageTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDIMAGETEXTUREPROC gl3wBindImageTexture;$/;"	v	typeref:typename:PFNGLBINDIMAGETEXTUREPROC
gl3wBindImageTexture	lib/gl3w/GL/gl3w.c	/^PFNGLBINDIMAGETEXTUREPROC gl3wBindImageTexture;$/;"	v	typeref:typename:PFNGLBINDIMAGETEXTUREPROC
gl3wBindProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDPROGRAMPIPELINEPROC gl3wBindProgramPipeline;$/;"	v	typeref:typename:PFNGLBINDPROGRAMPIPELINEPROC
gl3wBindProgramPipeline	lib/gl3w/GL/gl3w.c	/^PFNGLBINDPROGRAMPIPELINEPROC gl3wBindProgramPipeline;$/;"	v	typeref:typename:PFNGLBINDPROGRAMPIPELINEPROC
gl3wBindRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDRENDERBUFFERPROC gl3wBindRenderbuffer;$/;"	v	typeref:typename:PFNGLBINDRENDERBUFFERPROC
gl3wBindRenderbuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDRENDERBUFFERPROC gl3wBindRenderbuffer;$/;"	v	typeref:typename:PFNGLBINDRENDERBUFFERPROC
gl3wBindSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDSAMPLERPROC gl3wBindSampler;$/;"	v	typeref:typename:PFNGLBINDSAMPLERPROC
gl3wBindSampler	lib/gl3w/GL/gl3w.c	/^PFNGLBINDSAMPLERPROC gl3wBindSampler;$/;"	v	typeref:typename:PFNGLBINDSAMPLERPROC
gl3wBindTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDTEXTUREPROC gl3wBindTexture;$/;"	v	typeref:typename:PFNGLBINDTEXTUREPROC
gl3wBindTexture	lib/gl3w/GL/gl3w.c	/^PFNGLBINDTEXTUREPROC gl3wBindTexture;$/;"	v	typeref:typename:PFNGLBINDTEXTUREPROC
gl3wBindTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDTRANSFORMFEEDBACKPROC gl3wBindTransformFeedback;$/;"	v	typeref:typename:PFNGLBINDTRANSFORMFEEDBACKPROC
gl3wBindTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLBINDTRANSFORMFEEDBACKPROC gl3wBindTransformFeedback;$/;"	v	typeref:typename:PFNGLBINDTRANSFORMFEEDBACKPROC
gl3wBindVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXARRAYPROC gl3wBindVertexArray;$/;"	v	typeref:typename:PFNGLBINDVERTEXARRAYPROC
gl3wBindVertexArray	lib/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXARRAYPROC gl3wBindVertexArray;$/;"	v	typeref:typename:PFNGLBINDVERTEXARRAYPROC
gl3wBindVertexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXBUFFERPROC gl3wBindVertexBuffer;$/;"	v	typeref:typename:PFNGLBINDVERTEXBUFFERPROC
gl3wBindVertexBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBINDVERTEXBUFFERPROC gl3wBindVertexBuffer;$/;"	v	typeref:typename:PFNGLBINDVERTEXBUFFERPROC
gl3wBlendColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDCOLORPROC gl3wBlendColor;$/;"	v	typeref:typename:PFNGLBLENDCOLORPROC
gl3wBlendColor	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDCOLORPROC gl3wBlendColor;$/;"	v	typeref:typename:PFNGLBLENDCOLORPROC
gl3wBlendEquation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONPROC gl3wBlendEquation;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONPROC
gl3wBlendEquation	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONPROC gl3wBlendEquation;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONPROC
gl3wBlendEquationSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEPROC gl3wBlendEquationSeparate;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEPROC
gl3wBlendEquationSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEPROC gl3wBlendEquationSeparate;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEPROC
gl3wBlendEquationSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIPROC gl3wBlendEquationSeparatei;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEIPROC
gl3wBlendEquationSeparatei	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIPROC gl3wBlendEquationSeparatei;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEIPROC
gl3wBlendEquationSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIARBPROC gl3wBlendEquationSeparateiARB;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEIARBPROC
gl3wBlendEquationSeparateiARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONSEPARATEIARBPROC gl3wBlendEquationSeparateiARB;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONSEPARATEIARBPROC
gl3wBlendEquationi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIPROC gl3wBlendEquationi;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONIPROC
gl3wBlendEquationi	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIPROC gl3wBlendEquationi;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONIPROC
gl3wBlendEquationiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIARBPROC gl3wBlendEquationiARB;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONIARBPROC
gl3wBlendEquationiARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDEQUATIONIARBPROC gl3wBlendEquationiARB;$/;"	v	typeref:typename:PFNGLBLENDEQUATIONIARBPROC
gl3wBlendFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCPROC gl3wBlendFunc;$/;"	v	typeref:typename:PFNGLBLENDFUNCPROC
gl3wBlendFunc	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCPROC gl3wBlendFunc;$/;"	v	typeref:typename:PFNGLBLENDFUNCPROC
gl3wBlendFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEPROC gl3wBlendFuncSeparate;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEPROC
gl3wBlendFuncSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEPROC gl3wBlendFuncSeparate;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEPROC
gl3wBlendFuncSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIPROC gl3wBlendFuncSeparatei;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEIPROC
gl3wBlendFuncSeparatei	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIPROC gl3wBlendFuncSeparatei;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEIPROC
gl3wBlendFuncSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIARBPROC gl3wBlendFuncSeparateiARB;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEIARBPROC
gl3wBlendFuncSeparateiARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCSEPARATEIARBPROC gl3wBlendFuncSeparateiARB;$/;"	v	typeref:typename:PFNGLBLENDFUNCSEPARATEIARBPROC
gl3wBlendFunci	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIPROC gl3wBlendFunci;$/;"	v	typeref:typename:PFNGLBLENDFUNCIPROC
gl3wBlendFunci	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIPROC gl3wBlendFunci;$/;"	v	typeref:typename:PFNGLBLENDFUNCIPROC
gl3wBlendFunciARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIARBPROC gl3wBlendFunciARB;$/;"	v	typeref:typename:PFNGLBLENDFUNCIARBPROC
gl3wBlendFunciARB	lib/gl3w/GL/gl3w.c	/^PFNGLBLENDFUNCIARBPROC gl3wBlendFunciARB;$/;"	v	typeref:typename:PFNGLBLENDFUNCIARBPROC
gl3wBlitFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBLITFRAMEBUFFERPROC gl3wBlitFramebuffer;$/;"	v	typeref:typename:PFNGLBLITFRAMEBUFFERPROC
gl3wBlitFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLBLITFRAMEBUFFERPROC gl3wBlitFramebuffer;$/;"	v	typeref:typename:PFNGLBLITFRAMEBUFFERPROC
gl3wBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBUFFERDATAPROC gl3wBufferData;$/;"	v	typeref:typename:PFNGLBUFFERDATAPROC
gl3wBufferData	lib/gl3w/GL/gl3w.c	/^PFNGLBUFFERDATAPROC gl3wBufferData;$/;"	v	typeref:typename:PFNGLBUFFERDATAPROC
gl3wBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLBUFFERSUBDATAPROC gl3wBufferSubData;$/;"	v	typeref:typename:PFNGLBUFFERSUBDATAPROC
gl3wBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLBUFFERSUBDATAPROC gl3wBufferSubData;$/;"	v	typeref:typename:PFNGLBUFFERSUBDATAPROC
gl3wCheckFramebufferStatus	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC gl3wCheckFramebufferStatus;$/;"	v	typeref:typename:PFNGLCHECKFRAMEBUFFERSTATUSPROC
gl3wCheckFramebufferStatus	lib/gl3w/GL/gl3w.c	/^PFNGLCHECKFRAMEBUFFERSTATUSPROC gl3wCheckFramebufferStatus;$/;"	v	typeref:typename:PFNGLCHECKFRAMEBUFFERSTATUSPROC
gl3wClampColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLAMPCOLORPROC gl3wClampColor;$/;"	v	typeref:typename:PFNGLCLAMPCOLORPROC
gl3wClampColor	lib/gl3w/GL/gl3w.c	/^PFNGLCLAMPCOLORPROC gl3wClampColor;$/;"	v	typeref:typename:PFNGLCLAMPCOLORPROC
gl3wClear	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARPROC gl3wClear;$/;"	v	typeref:typename:PFNGLCLEARPROC
gl3wClear	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARPROC gl3wClear;$/;"	v	typeref:typename:PFNGLCLEARPROC
gl3wClearBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERDATAPROC gl3wClearBufferData;$/;"	v	typeref:typename:PFNGLCLEARBUFFERDATAPROC
gl3wClearBufferData	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERDATAPROC gl3wClearBufferData;$/;"	v	typeref:typename:PFNGLCLEARBUFFERDATAPROC
gl3wClearBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERSUBDATAPROC gl3wClearBufferSubData;$/;"	v	typeref:typename:PFNGLCLEARBUFFERSUBDATAPROC
gl3wClearBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERSUBDATAPROC gl3wClearBufferSubData;$/;"	v	typeref:typename:PFNGLCLEARBUFFERSUBDATAPROC
gl3wClearBufferfi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFIPROC gl3wClearBufferfi;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFIPROC
gl3wClearBufferfi	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFIPROC gl3wClearBufferfi;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFIPROC
gl3wClearBufferfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFVPROC gl3wClearBufferfv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFVPROC
gl3wClearBufferfv	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERFVPROC gl3wClearBufferfv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERFVPROC
gl3wClearBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERIVPROC gl3wClearBufferiv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERIVPROC
gl3wClearBufferiv	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERIVPROC gl3wClearBufferiv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERIVPROC
gl3wClearBufferuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERUIVPROC gl3wClearBufferuiv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERUIVPROC
gl3wClearBufferuiv	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARBUFFERUIVPROC gl3wClearBufferuiv;$/;"	v	typeref:typename:PFNGLCLEARBUFFERUIVPROC
gl3wClearColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARCOLORPROC gl3wClearColor;$/;"	v	typeref:typename:PFNGLCLEARCOLORPROC
gl3wClearColor	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARCOLORPROC gl3wClearColor;$/;"	v	typeref:typename:PFNGLCLEARCOLORPROC
gl3wClearDepth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHPROC gl3wClearDepth;$/;"	v	typeref:typename:PFNGLCLEARDEPTHPROC
gl3wClearDepth	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHPROC gl3wClearDepth;$/;"	v	typeref:typename:PFNGLCLEARDEPTHPROC
gl3wClearDepthf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHFPROC gl3wClearDepthf;$/;"	v	typeref:typename:PFNGLCLEARDEPTHFPROC
gl3wClearDepthf	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARDEPTHFPROC gl3wClearDepthf;$/;"	v	typeref:typename:PFNGLCLEARDEPTHFPROC
gl3wClearNamedBufferDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERDATAEXTPROC gl3wClearNamedBufferDataEXT;$/;"	v	typeref:typename:PFNGLCLEARNAMEDBUFFERDATAEXTPROC
gl3wClearNamedBufferDataEXT	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERDATAEXTPROC gl3wClearNamedBufferDataEXT;$/;"	v	typeref:typename:PFNGLCLEARNAMEDBUFFERDATAEXTPROC
gl3wClearNamedBufferSubDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC gl3wClearNamedBufferSubDataEXT;$/;"	v	typeref:typename:PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
gl3wClearNamedBufferSubDataEXT	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC gl3wClearNamedBufferSubDataEXT;$/;"	v	typeref:typename:PFNGLCLEARNAMEDBUFFERSUBDATAEXTPROC
gl3wClearStencil	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLEARSTENCILPROC gl3wClearStencil;$/;"	v	typeref:typename:PFNGLCLEARSTENCILPROC
gl3wClearStencil	lib/gl3w/GL/gl3w.c	/^PFNGLCLEARSTENCILPROC gl3wClearStencil;$/;"	v	typeref:typename:PFNGLCLEARSTENCILPROC
gl3wClientWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCLIENTWAITSYNCPROC gl3wClientWaitSync;$/;"	v	typeref:typename:PFNGLCLIENTWAITSYNCPROC
gl3wClientWaitSync	lib/gl3w/GL/gl3w.c	/^PFNGLCLIENTWAITSYNCPROC gl3wClientWaitSync;$/;"	v	typeref:typename:PFNGLCLIENTWAITSYNCPROC
gl3wColorMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKPROC gl3wColorMask;$/;"	v	typeref:typename:PFNGLCOLORMASKPROC
gl3wColorMask	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKPROC gl3wColorMask;$/;"	v	typeref:typename:PFNGLCOLORMASKPROC
gl3wColorMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKIPROC gl3wColorMaski;$/;"	v	typeref:typename:PFNGLCOLORMASKIPROC
gl3wColorMaski	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORMASKIPROC gl3wColorMaski;$/;"	v	typeref:typename:PFNGLCOLORMASKIPROC
gl3wColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIPROC gl3wColorP3ui;$/;"	v	typeref:typename:PFNGLCOLORP3UIPROC
gl3wColorP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIPROC gl3wColorP3ui;$/;"	v	typeref:typename:PFNGLCOLORP3UIPROC
gl3wColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIVPROC gl3wColorP3uiv;$/;"	v	typeref:typename:PFNGLCOLORP3UIVPROC
gl3wColorP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP3UIVPROC gl3wColorP3uiv;$/;"	v	typeref:typename:PFNGLCOLORP3UIVPROC
gl3wColorP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIPROC gl3wColorP4ui;$/;"	v	typeref:typename:PFNGLCOLORP4UIPROC
gl3wColorP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIPROC gl3wColorP4ui;$/;"	v	typeref:typename:PFNGLCOLORP4UIPROC
gl3wColorP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIVPROC gl3wColorP4uiv;$/;"	v	typeref:typename:PFNGLCOLORP4UIVPROC
gl3wColorP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLCOLORP4UIVPROC gl3wColorP4uiv;$/;"	v	typeref:typename:PFNGLCOLORP4UIVPROC
gl3wCompileShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERPROC gl3wCompileShader;$/;"	v	typeref:typename:PFNGLCOMPILESHADERPROC
gl3wCompileShader	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERPROC gl3wCompileShader;$/;"	v	typeref:typename:PFNGLCOMPILESHADERPROC
gl3wCompileShaderIncludeARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERINCLUDEARBPROC gl3wCompileShaderIncludeARB;$/;"	v	typeref:typename:PFNGLCOMPILESHADERINCLUDEARBPROC
gl3wCompileShaderIncludeARB	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPILESHADERINCLUDEARBPROC gl3wCompileShaderIncludeARB;$/;"	v	typeref:typename:PFNGLCOMPILESHADERINCLUDEARBPROC
gl3wCompressedTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC gl3wCompressedTexImage1D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE1DPROC
gl3wCompressedTexImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE1DPROC gl3wCompressedTexImage1D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE1DPROC
gl3wCompressedTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC gl3wCompressedTexImage2D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE2DPROC
gl3wCompressedTexImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE2DPROC gl3wCompressedTexImage2D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE2DPROC
gl3wCompressedTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC gl3wCompressedTexImage3D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE3DPROC
gl3wCompressedTexImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXIMAGE3DPROC gl3wCompressedTexImage3D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXIMAGE3DPROC
gl3wCompressedTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC gl3wCompressedTexSubImage1D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
gl3wCompressedTexSubImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC gl3wCompressedTexSubImage1D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC
gl3wCompressedTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC gl3wCompressedTexSubImage2D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
gl3wCompressedTexSubImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC gl3wCompressedTexSubImage2D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC
gl3wCompressedTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC gl3wCompressedTexSubImage3D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
gl3wCompressedTexSubImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC gl3wCompressedTexSubImage3D;$/;"	v	typeref:typename:PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC
gl3wCopyBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYBUFFERSUBDATAPROC gl3wCopyBufferSubData;$/;"	v	typeref:typename:PFNGLCOPYBUFFERSUBDATAPROC
gl3wCopyBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYBUFFERSUBDATAPROC gl3wCopyBufferSubData;$/;"	v	typeref:typename:PFNGLCOPYBUFFERSUBDATAPROC
gl3wCopyImageSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYIMAGESUBDATAPROC gl3wCopyImageSubData;$/;"	v	typeref:typename:PFNGLCOPYIMAGESUBDATAPROC
gl3wCopyImageSubData	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYIMAGESUBDATAPROC gl3wCopyImageSubData;$/;"	v	typeref:typename:PFNGLCOPYIMAGESUBDATAPROC
gl3wCopyTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE1DPROC gl3wCopyTexImage1D;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE1DPROC
gl3wCopyTexImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE1DPROC gl3wCopyTexImage1D;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE1DPROC
gl3wCopyTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE2DPROC gl3wCopyTexImage2D;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE2DPROC
gl3wCopyTexImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXIMAGE2DPROC gl3wCopyTexImage2D;$/;"	v	typeref:typename:PFNGLCOPYTEXIMAGE2DPROC
gl3wCopyTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE1DPROC gl3wCopyTexSubImage1D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE1DPROC
gl3wCopyTexSubImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE1DPROC gl3wCopyTexSubImage1D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE1DPROC
gl3wCopyTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE2DPROC gl3wCopyTexSubImage2D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE2DPROC
gl3wCopyTexSubImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE2DPROC gl3wCopyTexSubImage2D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE2DPROC
gl3wCopyTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC gl3wCopyTexSubImage3D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE3DPROC
gl3wCopyTexSubImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLCOPYTEXSUBIMAGE3DPROC gl3wCopyTexSubImage3D;$/;"	v	typeref:typename:PFNGLCOPYTEXSUBIMAGE3DPROC
gl3wCreateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATEPROGRAMPROC gl3wCreateProgram;$/;"	v	typeref:typename:PFNGLCREATEPROGRAMPROC
gl3wCreateProgram	lib/gl3w/GL/gl3w.c	/^PFNGLCREATEPROGRAMPROC gl3wCreateProgram;$/;"	v	typeref:typename:PFNGLCREATEPROGRAMPROC
gl3wCreateShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROC gl3wCreateShader;$/;"	v	typeref:typename:PFNGLCREATESHADERPROC
gl3wCreateShader	lib/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROC gl3wCreateShader;$/;"	v	typeref:typename:PFNGLCREATESHADERPROC
gl3wCreateShaderProgramv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROGRAMVPROC gl3wCreateShaderProgramv;$/;"	v	typeref:typename:PFNGLCREATESHADERPROGRAMVPROC
gl3wCreateShaderProgramv	lib/gl3w/GL/gl3w.c	/^PFNGLCREATESHADERPROGRAMVPROC gl3wCreateShaderProgramv;$/;"	v	typeref:typename:PFNGLCREATESHADERPROGRAMVPROC
gl3wCreateSyncFromCLeventARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCREATESYNCFROMCLEVENTARBPROC gl3wCreateSyncFromCLeventARB;$/;"	v	typeref:typename:PFNGLCREATESYNCFROMCLEVENTARBPROC
gl3wCreateSyncFromCLeventARB	lib/gl3w/GL/gl3w.c	/^PFNGLCREATESYNCFROMCLEVENTARBPROC gl3wCreateSyncFromCLeventARB;$/;"	v	typeref:typename:PFNGLCREATESYNCFROMCLEVENTARBPROC
gl3wCullFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLCULLFACEPROC gl3wCullFace;$/;"	v	typeref:typename:PFNGLCULLFACEPROC
gl3wCullFace	lib/gl3w/GL/gl3w.c	/^PFNGLCULLFACEPROC gl3wCullFace;$/;"	v	typeref:typename:PFNGLCULLFACEPROC
gl3wDebugMessageCallback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKPROC gl3wDebugMessageCallback;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECALLBACKPROC
gl3wDebugMessageCallback	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKPROC gl3wDebugMessageCallback;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECALLBACKPROC
gl3wDebugMessageCallbackARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKARBPROC gl3wDebugMessageCallbackARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECALLBACKARBPROC
gl3wDebugMessageCallbackARB	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECALLBACKARBPROC gl3wDebugMessageCallbackARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECALLBACKARBPROC
gl3wDebugMessageControl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLPROC gl3wDebugMessageControl;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECONTROLPROC
gl3wDebugMessageControl	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLPROC gl3wDebugMessageControl;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECONTROLPROC
gl3wDebugMessageControlARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLARBPROC gl3wDebugMessageControlARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECONTROLARBPROC
gl3wDebugMessageControlARB	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGECONTROLARBPROC gl3wDebugMessageControlARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGECONTROLARBPROC
gl3wDebugMessageInsert	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTPROC gl3wDebugMessageInsert;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGEINSERTPROC
gl3wDebugMessageInsert	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTPROC gl3wDebugMessageInsert;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGEINSERTPROC
gl3wDebugMessageInsertARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTARBPROC gl3wDebugMessageInsertARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGEINSERTARBPROC
gl3wDebugMessageInsertARB	lib/gl3w/GL/gl3w.c	/^PFNGLDEBUGMESSAGEINSERTARBPROC gl3wDebugMessageInsertARB;$/;"	v	typeref:typename:PFNGLDEBUGMESSAGEINSERTARBPROC
gl3wDeleteBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEBUFFERSPROC gl3wDeleteBuffers;$/;"	v	typeref:typename:PFNGLDELETEBUFFERSPROC
gl3wDeleteBuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEBUFFERSPROC gl3wDeleteBuffers;$/;"	v	typeref:typename:PFNGLDELETEBUFFERSPROC
gl3wDeleteFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEFRAMEBUFFERSPROC gl3wDeleteFramebuffers;$/;"	v	typeref:typename:PFNGLDELETEFRAMEBUFFERSPROC
gl3wDeleteFramebuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEFRAMEBUFFERSPROC gl3wDeleteFramebuffers;$/;"	v	typeref:typename:PFNGLDELETEFRAMEBUFFERSPROC
gl3wDeleteNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETENAMEDSTRINGARBPROC gl3wDeleteNamedStringARB;$/;"	v	typeref:typename:PFNGLDELETENAMEDSTRINGARBPROC
gl3wDeleteNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLDELETENAMEDSTRINGARBPROC gl3wDeleteNamedStringARB;$/;"	v	typeref:typename:PFNGLDELETENAMEDSTRINGARBPROC
gl3wDeleteProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPROC gl3wDeleteProgram;$/;"	v	typeref:typename:PFNGLDELETEPROGRAMPROC
gl3wDeleteProgram	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPROC gl3wDeleteProgram;$/;"	v	typeref:typename:PFNGLDELETEPROGRAMPROC
gl3wDeleteProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPIPELINESPROC gl3wDeleteProgramPipelines;$/;"	v	typeref:typename:PFNGLDELETEPROGRAMPIPELINESPROC
gl3wDeleteProgramPipelines	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEPROGRAMPIPELINESPROC gl3wDeleteProgramPipelines;$/;"	v	typeref:typename:PFNGLDELETEPROGRAMPIPELINESPROC
gl3wDeleteQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEQUERIESPROC gl3wDeleteQueries;$/;"	v	typeref:typename:PFNGLDELETEQUERIESPROC
gl3wDeleteQueries	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEQUERIESPROC gl3wDeleteQueries;$/;"	v	typeref:typename:PFNGLDELETEQUERIESPROC
gl3wDeleteRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETERENDERBUFFERSPROC gl3wDeleteRenderbuffers;$/;"	v	typeref:typename:PFNGLDELETERENDERBUFFERSPROC
gl3wDeleteRenderbuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETERENDERBUFFERSPROC gl3wDeleteRenderbuffers;$/;"	v	typeref:typename:PFNGLDELETERENDERBUFFERSPROC
gl3wDeleteSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETESAMPLERSPROC gl3wDeleteSamplers;$/;"	v	typeref:typename:PFNGLDELETESAMPLERSPROC
gl3wDeleteSamplers	lib/gl3w/GL/gl3w.c	/^PFNGLDELETESAMPLERSPROC gl3wDeleteSamplers;$/;"	v	typeref:typename:PFNGLDELETESAMPLERSPROC
gl3wDeleteShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETESHADERPROC gl3wDeleteShader;$/;"	v	typeref:typename:PFNGLDELETESHADERPROC
gl3wDeleteShader	lib/gl3w/GL/gl3w.c	/^PFNGLDELETESHADERPROC gl3wDeleteShader;$/;"	v	typeref:typename:PFNGLDELETESHADERPROC
gl3wDeleteSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETESYNCPROC gl3wDeleteSync;$/;"	v	typeref:typename:PFNGLDELETESYNCPROC
gl3wDeleteSync	lib/gl3w/GL/gl3w.c	/^PFNGLDELETESYNCPROC gl3wDeleteSync;$/;"	v	typeref:typename:PFNGLDELETESYNCPROC
gl3wDeleteTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETETEXTURESPROC gl3wDeleteTextures;$/;"	v	typeref:typename:PFNGLDELETETEXTURESPROC
gl3wDeleteTextures	lib/gl3w/GL/gl3w.c	/^PFNGLDELETETEXTURESPROC gl3wDeleteTextures;$/;"	v	typeref:typename:PFNGLDELETETEXTURESPROC
gl3wDeleteTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETETRANSFORMFEEDBACKSPROC gl3wDeleteTransformFeedbacks;$/;"	v	typeref:typename:PFNGLDELETETRANSFORMFEEDBACKSPROC
gl3wDeleteTransformFeedbacks	lib/gl3w/GL/gl3w.c	/^PFNGLDELETETRANSFORMFEEDBACKSPROC gl3wDeleteTransformFeedbacks;$/;"	v	typeref:typename:PFNGLDELETETRANSFORMFEEDBACKSPROC
gl3wDeleteVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDELETEVERTEXARRAYSPROC gl3wDeleteVertexArrays;$/;"	v	typeref:typename:PFNGLDELETEVERTEXARRAYSPROC
gl3wDeleteVertexArrays	lib/gl3w/GL/gl3w.c	/^PFNGLDELETEVERTEXARRAYSPROC gl3wDeleteVertexArrays;$/;"	v	typeref:typename:PFNGLDELETEVERTEXARRAYSPROC
gl3wDepthFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHFUNCPROC gl3wDepthFunc;$/;"	v	typeref:typename:PFNGLDEPTHFUNCPROC
gl3wDepthFunc	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHFUNCPROC gl3wDepthFunc;$/;"	v	typeref:typename:PFNGLDEPTHFUNCPROC
gl3wDepthMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHMASKPROC gl3wDepthMask;$/;"	v	typeref:typename:PFNGLDEPTHMASKPROC
gl3wDepthMask	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHMASKPROC gl3wDepthMask;$/;"	v	typeref:typename:PFNGLDEPTHMASKPROC
gl3wDepthRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEPROC gl3wDepthRange;$/;"	v	typeref:typename:PFNGLDEPTHRANGEPROC
gl3wDepthRange	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEPROC gl3wDepthRange;$/;"	v	typeref:typename:PFNGLDEPTHRANGEPROC
gl3wDepthRangeArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEARRAYVPROC gl3wDepthRangeArrayv;$/;"	v	typeref:typename:PFNGLDEPTHRANGEARRAYVPROC
gl3wDepthRangeArrayv	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEARRAYVPROC gl3wDepthRangeArrayv;$/;"	v	typeref:typename:PFNGLDEPTHRANGEARRAYVPROC
gl3wDepthRangeIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEINDEXEDPROC gl3wDepthRangeIndexed;$/;"	v	typeref:typename:PFNGLDEPTHRANGEINDEXEDPROC
gl3wDepthRangeIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEINDEXEDPROC gl3wDepthRangeIndexed;$/;"	v	typeref:typename:PFNGLDEPTHRANGEINDEXEDPROC
gl3wDepthRangef	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEFPROC gl3wDepthRangef;$/;"	v	typeref:typename:PFNGLDEPTHRANGEFPROC
gl3wDepthRangef	lib/gl3w/GL/gl3w.c	/^PFNGLDEPTHRANGEFPROC gl3wDepthRangef;$/;"	v	typeref:typename:PFNGLDEPTHRANGEFPROC
gl3wDetachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDETACHSHADERPROC gl3wDetachShader;$/;"	v	typeref:typename:PFNGLDETACHSHADERPROC
gl3wDetachShader	lib/gl3w/GL/gl3w.c	/^PFNGLDETACHSHADERPROC gl3wDetachShader;$/;"	v	typeref:typename:PFNGLDETACHSHADERPROC
gl3wDisable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISABLEPROC gl3wDisable;$/;"	v	typeref:typename:PFNGLDISABLEPROC
gl3wDisable	lib/gl3w/GL/gl3w.c	/^PFNGLDISABLEPROC gl3wDisable;$/;"	v	typeref:typename:PFNGLDISABLEPROC
gl3wDisableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC gl3wDisableVertexAttribArray;$/;"	v	typeref:typename:PFNGLDISABLEVERTEXATTRIBARRAYPROC
gl3wDisableVertexAttribArray	lib/gl3w/GL/gl3w.c	/^PFNGLDISABLEVERTEXATTRIBARRAYPROC gl3wDisableVertexAttribArray;$/;"	v	typeref:typename:PFNGLDISABLEVERTEXATTRIBARRAYPROC
gl3wDisablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISABLEIPROC gl3wDisablei;$/;"	v	typeref:typename:PFNGLDISABLEIPROC
gl3wDisablei	lib/gl3w/GL/gl3w.c	/^PFNGLDISABLEIPROC gl3wDisablei;$/;"	v	typeref:typename:PFNGLDISABLEIPROC
gl3wDispatchCompute	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEPROC gl3wDispatchCompute;$/;"	v	typeref:typename:PFNGLDISPATCHCOMPUTEPROC
gl3wDispatchCompute	lib/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEPROC gl3wDispatchCompute;$/;"	v	typeref:typename:PFNGLDISPATCHCOMPUTEPROC
gl3wDispatchComputeIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEINDIRECTPROC gl3wDispatchComputeIndirect;$/;"	v	typeref:typename:PFNGLDISPATCHCOMPUTEINDIRECTPROC
gl3wDispatchComputeIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLDISPATCHCOMPUTEINDIRECTPROC gl3wDispatchComputeIndirect;$/;"	v	typeref:typename:PFNGLDISPATCHCOMPUTEINDIRECTPROC
gl3wDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSPROC gl3wDrawArrays;$/;"	v	typeref:typename:PFNGLDRAWARRAYSPROC
gl3wDrawArrays	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSPROC gl3wDrawArrays;$/;"	v	typeref:typename:PFNGLDRAWARRAYSPROC
gl3wDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINDIRECTPROC gl3wDrawArraysIndirect;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINDIRECTPROC
gl3wDrawArraysIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINDIRECTPROC gl3wDrawArraysIndirect;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINDIRECTPROC
gl3wDrawArraysInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDPROC gl3wDrawArraysInstanced;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINSTANCEDPROC
gl3wDrawArraysInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDPROC gl3wDrawArraysInstanced;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINSTANCEDPROC
gl3wDrawArraysInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC gl3wDrawArraysInstancedBaseInstance;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
gl3wDrawArraysInstancedBaseInstance	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC gl3wDrawArraysInstancedBaseInstance;$/;"	v	typeref:typename:PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC
gl3wDrawBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERPROC gl3wDrawBuffer;$/;"	v	typeref:typename:PFNGLDRAWBUFFERPROC
gl3wDrawBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERPROC gl3wDrawBuffer;$/;"	v	typeref:typename:PFNGLDRAWBUFFERPROC
gl3wDrawBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERSPROC gl3wDrawBuffers;$/;"	v	typeref:typename:PFNGLDRAWBUFFERSPROC
gl3wDrawBuffers	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWBUFFERSPROC gl3wDrawBuffers;$/;"	v	typeref:typename:PFNGLDRAWBUFFERSPROC
gl3wDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSPROC gl3wDrawElements;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSPROC
gl3wDrawElements	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSPROC gl3wDrawElements;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSPROC
gl3wDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSBASEVERTEXPROC gl3wDrawElementsBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSBASEVERTEXPROC
gl3wDrawElementsBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSBASEVERTEXPROC gl3wDrawElementsBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSBASEVERTEXPROC
gl3wDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINDIRECTPROC gl3wDrawElementsIndirect;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINDIRECTPROC
gl3wDrawElementsIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINDIRECTPROC gl3wDrawElementsIndirect;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINDIRECTPROC
gl3wDrawElementsInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDPROC gl3wDrawElementsInstanced;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDPROC
gl3wDrawElementsInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDPROC gl3wDrawElementsInstanced;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDPROC
gl3wDrawElementsInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC gl3wDrawElementsInstancedBaseInstance;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
gl3wDrawElementsInstancedBaseInstance	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC gl3wDrawElementsInstancedBaseInstance;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC
gl3wDrawElementsInstancedBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC gl3wDrawElementsInstancedBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
gl3wDrawElementsInstancedBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC gl3wDrawElementsInstancedBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC
gl3wDrawElementsInstancedBaseVertexBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl3wDrawElementsInstancedBaseVertexBaseInst/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
gl3wDrawElementsInstancedBaseVertexBaseInstance	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC gl3wDrawElementsInstancedBaseVertexBaseInst/;"	v	typeref:typename:PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC
gl3wDrawRangeElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSPROC gl3wDrawRangeElements;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSPROC
gl3wDrawRangeElements	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSPROC gl3wDrawRangeElements;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSPROC
gl3wDrawRangeElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC gl3wDrawRangeElementsBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
gl3wDrawRangeElementsBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC gl3wDrawRangeElementsBaseVertex;$/;"	v	typeref:typename:PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC
gl3wDrawTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKPROC gl3wDrawTransformFeedback;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKPROC
gl3wDrawTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKPROC gl3wDrawTransformFeedback;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKPROC
gl3wDrawTransformFeedbackInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC gl3wDrawTransformFeedbackInstanced;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
gl3wDrawTransformFeedbackInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC gl3wDrawTransformFeedbackInstanced;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC
gl3wDrawTransformFeedbackStream	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC gl3wDrawTransformFeedbackStream;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
gl3wDrawTransformFeedbackStream	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC gl3wDrawTransformFeedbackStream;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC
gl3wDrawTransformFeedbackStreamInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC gl3wDrawTransformFeedbackStreamInstanced;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
gl3wDrawTransformFeedbackStreamInstanced	lib/gl3w/GL/gl3w.c	/^PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC gl3wDrawTransformFeedbackStreamInstanced;$/;"	v	typeref:typename:PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC
gl3wEnable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENABLEPROC gl3wEnable;$/;"	v	typeref:typename:PFNGLENABLEPROC
gl3wEnable	lib/gl3w/GL/gl3w.c	/^PFNGLENABLEPROC gl3wEnable;$/;"	v	typeref:typename:PFNGLENABLEPROC
gl3wEnableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC gl3wEnableVertexAttribArray;$/;"	v	typeref:typename:PFNGLENABLEVERTEXATTRIBARRAYPROC
gl3wEnableVertexAttribArray	lib/gl3w/GL/gl3w.c	/^PFNGLENABLEVERTEXATTRIBARRAYPROC gl3wEnableVertexAttribArray;$/;"	v	typeref:typename:PFNGLENABLEVERTEXATTRIBARRAYPROC
gl3wEnablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENABLEIPROC gl3wEnablei;$/;"	v	typeref:typename:PFNGLENABLEIPROC
gl3wEnablei	lib/gl3w/GL/gl3w.c	/^PFNGLENABLEIPROC gl3wEnablei;$/;"	v	typeref:typename:PFNGLENABLEIPROC
gl3wEndConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDCONDITIONALRENDERPROC gl3wEndConditionalRender;$/;"	v	typeref:typename:PFNGLENDCONDITIONALRENDERPROC
gl3wEndConditionalRender	lib/gl3w/GL/gl3w.c	/^PFNGLENDCONDITIONALRENDERPROC gl3wEndConditionalRender;$/;"	v	typeref:typename:PFNGLENDCONDITIONALRENDERPROC
gl3wEndQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDQUERYPROC gl3wEndQuery;$/;"	v	typeref:typename:PFNGLENDQUERYPROC
gl3wEndQuery	lib/gl3w/GL/gl3w.c	/^PFNGLENDQUERYPROC gl3wEndQuery;$/;"	v	typeref:typename:PFNGLENDQUERYPROC
gl3wEndQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDQUERYINDEXEDPROC gl3wEndQueryIndexed;$/;"	v	typeref:typename:PFNGLENDQUERYINDEXEDPROC
gl3wEndQueryIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLENDQUERYINDEXEDPROC gl3wEndQueryIndexed;$/;"	v	typeref:typename:PFNGLENDQUERYINDEXEDPROC
gl3wEndTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLENDTRANSFORMFEEDBACKPROC gl3wEndTransformFeedback;$/;"	v	typeref:typename:PFNGLENDTRANSFORMFEEDBACKPROC
gl3wEndTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLENDTRANSFORMFEEDBACKPROC gl3wEndTransformFeedback;$/;"	v	typeref:typename:PFNGLENDTRANSFORMFEEDBACKPROC
gl3wFenceSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFENCESYNCPROC gl3wFenceSync;$/;"	v	typeref:typename:PFNGLFENCESYNCPROC
gl3wFenceSync	lib/gl3w/GL/gl3w.c	/^PFNGLFENCESYNCPROC gl3wFenceSync;$/;"	v	typeref:typename:PFNGLFENCESYNCPROC
gl3wFinish	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFINISHPROC gl3wFinish;$/;"	v	typeref:typename:PFNGLFINISHPROC
gl3wFinish	lib/gl3w/GL/gl3w.c	/^PFNGLFINISHPROC gl3wFinish;$/;"	v	typeref:typename:PFNGLFINISHPROC
gl3wFlush	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFLUSHPROC gl3wFlush;$/;"	v	typeref:typename:PFNGLFLUSHPROC
gl3wFlush	lib/gl3w/GL/gl3w.c	/^PFNGLFLUSHPROC gl3wFlush;$/;"	v	typeref:typename:PFNGLFLUSHPROC
gl3wFlushMappedBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC gl3wFlushMappedBufferRange;$/;"	v	typeref:typename:PFNGLFLUSHMAPPEDBUFFERRANGEPROC
gl3wFlushMappedBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLFLUSHMAPPEDBUFFERRANGEPROC gl3wFlushMappedBufferRange;$/;"	v	typeref:typename:PFNGLFLUSHMAPPEDBUFFERRANGEPROC
gl3wFramebufferParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERPARAMETERIPROC gl3wFramebufferParameteri;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERPARAMETERIPROC
gl3wFramebufferParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERPARAMETERIPROC gl3wFramebufferParameteri;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERPARAMETERIPROC
gl3wFramebufferRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC gl3wFramebufferRenderbuffer;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERRENDERBUFFERPROC
gl3wFramebufferRenderbuffer	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERRENDERBUFFERPROC gl3wFramebufferRenderbuffer;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERRENDERBUFFERPROC
gl3wFramebufferTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTUREPROC gl3wFramebufferTexture;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTUREPROC
gl3wFramebufferTexture	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTUREPROC gl3wFramebufferTexture;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTUREPROC
gl3wFramebufferTexture1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE1DPROC gl3wFramebufferTexture1D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE1DPROC
gl3wFramebufferTexture1D	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE1DPROC gl3wFramebufferTexture1D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE1DPROC
gl3wFramebufferTexture2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE2DPROC gl3wFramebufferTexture2D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE2DPROC
gl3wFramebufferTexture2D	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE2DPROC gl3wFramebufferTexture2D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE2DPROC
gl3wFramebufferTexture3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE3DPROC gl3wFramebufferTexture3D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE3DPROC
gl3wFramebufferTexture3D	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURE3DPROC gl3wFramebufferTexture3D;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURE3DPROC
gl3wFramebufferTextureLayer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC gl3wFramebufferTextureLayer;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURELAYERPROC
gl3wFramebufferTextureLayer	lib/gl3w/GL/gl3w.c	/^PFNGLFRAMEBUFFERTEXTURELAYERPROC gl3wFramebufferTextureLayer;$/;"	v	typeref:typename:PFNGLFRAMEBUFFERTEXTURELAYERPROC
gl3wFrontFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLFRONTFACEPROC gl3wFrontFace;$/;"	v	typeref:typename:PFNGLFRONTFACEPROC
gl3wFrontFace	lib/gl3w/GL/gl3w.c	/^PFNGLFRONTFACEPROC gl3wFrontFace;$/;"	v	typeref:typename:PFNGLFRONTFACEPROC
gl3wGenBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENBUFFERSPROC gl3wGenBuffers;$/;"	v	typeref:typename:PFNGLGENBUFFERSPROC
gl3wGenBuffers	lib/gl3w/GL/gl3w.c	/^PFNGLGENBUFFERSPROC gl3wGenBuffers;$/;"	v	typeref:typename:PFNGLGENBUFFERSPROC
gl3wGenFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENFRAMEBUFFERSPROC gl3wGenFramebuffers;$/;"	v	typeref:typename:PFNGLGENFRAMEBUFFERSPROC
gl3wGenFramebuffers	lib/gl3w/GL/gl3w.c	/^PFNGLGENFRAMEBUFFERSPROC gl3wGenFramebuffers;$/;"	v	typeref:typename:PFNGLGENFRAMEBUFFERSPROC
gl3wGenProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENPROGRAMPIPELINESPROC gl3wGenProgramPipelines;$/;"	v	typeref:typename:PFNGLGENPROGRAMPIPELINESPROC
gl3wGenProgramPipelines	lib/gl3w/GL/gl3w.c	/^PFNGLGENPROGRAMPIPELINESPROC gl3wGenProgramPipelines;$/;"	v	typeref:typename:PFNGLGENPROGRAMPIPELINESPROC
gl3wGenQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENQUERIESPROC gl3wGenQueries;$/;"	v	typeref:typename:PFNGLGENQUERIESPROC
gl3wGenQueries	lib/gl3w/GL/gl3w.c	/^PFNGLGENQUERIESPROC gl3wGenQueries;$/;"	v	typeref:typename:PFNGLGENQUERIESPROC
gl3wGenRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENRENDERBUFFERSPROC gl3wGenRenderbuffers;$/;"	v	typeref:typename:PFNGLGENRENDERBUFFERSPROC
gl3wGenRenderbuffers	lib/gl3w/GL/gl3w.c	/^PFNGLGENRENDERBUFFERSPROC gl3wGenRenderbuffers;$/;"	v	typeref:typename:PFNGLGENRENDERBUFFERSPROC
gl3wGenSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENSAMPLERSPROC gl3wGenSamplers;$/;"	v	typeref:typename:PFNGLGENSAMPLERSPROC
gl3wGenSamplers	lib/gl3w/GL/gl3w.c	/^PFNGLGENSAMPLERSPROC gl3wGenSamplers;$/;"	v	typeref:typename:PFNGLGENSAMPLERSPROC
gl3wGenTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENTEXTURESPROC gl3wGenTextures;$/;"	v	typeref:typename:PFNGLGENTEXTURESPROC
gl3wGenTextures	lib/gl3w/GL/gl3w.c	/^PFNGLGENTEXTURESPROC gl3wGenTextures;$/;"	v	typeref:typename:PFNGLGENTEXTURESPROC
gl3wGenTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENTRANSFORMFEEDBACKSPROC gl3wGenTransformFeedbacks;$/;"	v	typeref:typename:PFNGLGENTRANSFORMFEEDBACKSPROC
gl3wGenTransformFeedbacks	lib/gl3w/GL/gl3w.c	/^PFNGLGENTRANSFORMFEEDBACKSPROC gl3wGenTransformFeedbacks;$/;"	v	typeref:typename:PFNGLGENTRANSFORMFEEDBACKSPROC
gl3wGenVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENVERTEXARRAYSPROC gl3wGenVertexArrays;$/;"	v	typeref:typename:PFNGLGENVERTEXARRAYSPROC
gl3wGenVertexArrays	lib/gl3w/GL/gl3w.c	/^PFNGLGENVERTEXARRAYSPROC gl3wGenVertexArrays;$/;"	v	typeref:typename:PFNGLGENVERTEXARRAYSPROC
gl3wGenerateMipmap	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGENERATEMIPMAPPROC gl3wGenerateMipmap;$/;"	v	typeref:typename:PFNGLGENERATEMIPMAPPROC
gl3wGenerateMipmap	lib/gl3w/GL/gl3w.c	/^PFNGLGENERATEMIPMAPPROC gl3wGenerateMipmap;$/;"	v	typeref:typename:PFNGLGENERATEMIPMAPPROC
gl3wGetActiveAtomicCounterBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC gl3wGetActiveAtomicCounterBufferiv;$/;"	v	typeref:typename:PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
gl3wGetActiveAtomicCounterBufferiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC gl3wGetActiveAtomicCounterBufferiv;$/;"	v	typeref:typename:PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC
gl3wGetActiveAttrib	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATTRIBPROC gl3wGetActiveAttrib;$/;"	v	typeref:typename:PFNGLGETACTIVEATTRIBPROC
gl3wGetActiveAttrib	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEATTRIBPROC gl3wGetActiveAttrib;$/;"	v	typeref:typename:PFNGLGETACTIVEATTRIBPROC
gl3wGetActiveSubroutineName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINENAMEPROC gl3wGetActiveSubroutineName;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINENAMEPROC
gl3wGetActiveSubroutineName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINENAMEPROC gl3wGetActiveSubroutineName;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINENAMEPROC
gl3wGetActiveSubroutineUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC gl3wGetActiveSubroutineUniformName;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
gl3wGetActiveSubroutineUniformName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC gl3wGetActiveSubroutineUniformName;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC
gl3wGetActiveSubroutineUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC gl3wGetActiveSubroutineUniformiv;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
gl3wGetActiveSubroutineUniformiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC gl3wGetActiveSubroutineUniformiv;$/;"	v	typeref:typename:PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC
gl3wGetActiveUniform	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMPROC gl3wGetActiveUniform;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMPROC
gl3wGetActiveUniform	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMPROC gl3wGetActiveUniform;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMPROC
gl3wGetActiveUniformBlockName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC gl3wGetActiveUniformBlockName;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
gl3wGetActiveUniformBlockName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC gl3wGetActiveUniformBlockName;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC
gl3wGetActiveUniformBlockiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC gl3wGetActiveUniformBlockiv;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKIVPROC
gl3wGetActiveUniformBlockiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMBLOCKIVPROC gl3wGetActiveUniformBlockiv;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMBLOCKIVPROC
gl3wGetActiveUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMNAMEPROC gl3wGetActiveUniformName;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMNAMEPROC
gl3wGetActiveUniformName	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMNAMEPROC gl3wGetActiveUniformName;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMNAMEPROC
gl3wGetActiveUniformsiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMSIVPROC gl3wGetActiveUniformsiv;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMSIVPROC
gl3wGetActiveUniformsiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETACTIVEUNIFORMSIVPROC gl3wGetActiveUniformsiv;$/;"	v	typeref:typename:PFNGLGETACTIVEUNIFORMSIVPROC
gl3wGetAttachedShaders	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETATTACHEDSHADERSPROC gl3wGetAttachedShaders;$/;"	v	typeref:typename:PFNGLGETATTACHEDSHADERSPROC
gl3wGetAttachedShaders	lib/gl3w/GL/gl3w.c	/^PFNGLGETATTACHEDSHADERSPROC gl3wGetAttachedShaders;$/;"	v	typeref:typename:PFNGLGETATTACHEDSHADERSPROC
gl3wGetAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETATTRIBLOCATIONPROC gl3wGetAttribLocation;$/;"	v	typeref:typename:PFNGLGETATTRIBLOCATIONPROC
gl3wGetAttribLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETATTRIBLOCATIONPROC gl3wGetAttribLocation;$/;"	v	typeref:typename:PFNGLGETATTRIBLOCATIONPROC
gl3wGetBooleani_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANI_VPROC gl3wGetBooleani_v;$/;"	v	typeref:typename:PFNGLGETBOOLEANI_VPROC
gl3wGetBooleani_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANI_VPROC gl3wGetBooleani_v;$/;"	v	typeref:typename:PFNGLGETBOOLEANI_VPROC
gl3wGetBooleanv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANVPROC gl3wGetBooleanv;$/;"	v	typeref:typename:PFNGLGETBOOLEANVPROC
gl3wGetBooleanv	lib/gl3w/GL/gl3w.c	/^PFNGLGETBOOLEANVPROC gl3wGetBooleanv;$/;"	v	typeref:typename:PFNGLGETBOOLEANVPROC
gl3wGetBufferParameteri64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERI64VPROC gl3wGetBufferParameteri64v;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERI64VPROC
gl3wGetBufferParameteri64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERI64VPROC gl3wGetBufferParameteri64v;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERI64VPROC
gl3wGetBufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERIVPROC gl3wGetBufferParameteriv;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERIVPROC
gl3wGetBufferParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPARAMETERIVPROC gl3wGetBufferParameteriv;$/;"	v	typeref:typename:PFNGLGETBUFFERPARAMETERIVPROC
gl3wGetBufferPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPOINTERVPROC gl3wGetBufferPointerv;$/;"	v	typeref:typename:PFNGLGETBUFFERPOINTERVPROC
gl3wGetBufferPointerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERPOINTERVPROC gl3wGetBufferPointerv;$/;"	v	typeref:typename:PFNGLGETBUFFERPOINTERVPROC
gl3wGetBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERSUBDATAPROC gl3wGetBufferSubData;$/;"	v	typeref:typename:PFNGLGETBUFFERSUBDATAPROC
gl3wGetBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLGETBUFFERSUBDATAPROC gl3wGetBufferSubData;$/;"	v	typeref:typename:PFNGLGETBUFFERSUBDATAPROC
gl3wGetCompressedTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC gl3wGetCompressedTexImage;$/;"	v	typeref:typename:PFNGLGETCOMPRESSEDTEXIMAGEPROC
gl3wGetCompressedTexImage	lib/gl3w/GL/gl3w.c	/^PFNGLGETCOMPRESSEDTEXIMAGEPROC gl3wGetCompressedTexImage;$/;"	v	typeref:typename:PFNGLGETCOMPRESSEDTEXIMAGEPROC
gl3wGetDebugMessageLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGPROC gl3wGetDebugMessageLog;$/;"	v	typeref:typename:PFNGLGETDEBUGMESSAGELOGPROC
gl3wGetDebugMessageLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGPROC gl3wGetDebugMessageLog;$/;"	v	typeref:typename:PFNGLGETDEBUGMESSAGELOGPROC
gl3wGetDebugMessageLogARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGARBPROC gl3wGetDebugMessageLogARB;$/;"	v	typeref:typename:PFNGLGETDEBUGMESSAGELOGARBPROC
gl3wGetDebugMessageLogARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETDEBUGMESSAGELOGARBPROC gl3wGetDebugMessageLogARB;$/;"	v	typeref:typename:PFNGLGETDEBUGMESSAGELOGARBPROC
gl3wGetDoublei_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEI_VPROC gl3wGetDoublei_v;$/;"	v	typeref:typename:PFNGLGETDOUBLEI_VPROC
gl3wGetDoublei_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEI_VPROC gl3wGetDoublei_v;$/;"	v	typeref:typename:PFNGLGETDOUBLEI_VPROC
gl3wGetDoublev	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEVPROC gl3wGetDoublev;$/;"	v	typeref:typename:PFNGLGETDOUBLEVPROC
gl3wGetDoublev	lib/gl3w/GL/gl3w.c	/^PFNGLGETDOUBLEVPROC gl3wGetDoublev;$/;"	v	typeref:typename:PFNGLGETDOUBLEVPROC
gl3wGetError	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETERRORPROC gl3wGetError;$/;"	v	typeref:typename:PFNGLGETERRORPROC
gl3wGetError	lib/gl3w/GL/gl3w.c	/^PFNGLGETERRORPROC gl3wGetError;$/;"	v	typeref:typename:PFNGLGETERRORPROC
gl3wGetFloati_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFLOATI_VPROC gl3wGetFloati_v;$/;"	v	typeref:typename:PFNGLGETFLOATI_VPROC
gl3wGetFloati_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETFLOATI_VPROC gl3wGetFloati_v;$/;"	v	typeref:typename:PFNGLGETFLOATI_VPROC
gl3wGetFloatv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFLOATVPROC gl3wGetFloatv;$/;"	v	typeref:typename:PFNGLGETFLOATVPROC
gl3wGetFloatv	lib/gl3w/GL/gl3w.c	/^PFNGLGETFLOATVPROC gl3wGetFloatv;$/;"	v	typeref:typename:PFNGLGETFLOATVPROC
gl3wGetFragDataIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATAINDEXPROC gl3wGetFragDataIndex;$/;"	v	typeref:typename:PFNGLGETFRAGDATAINDEXPROC
gl3wGetFragDataIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATAINDEXPROC gl3wGetFragDataIndex;$/;"	v	typeref:typename:PFNGLGETFRAGDATAINDEXPROC
gl3wGetFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATALOCATIONPROC gl3wGetFragDataLocation;$/;"	v	typeref:typename:PFNGLGETFRAGDATALOCATIONPROC
gl3wGetFragDataLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAGDATALOCATIONPROC gl3wGetFragDataLocation;$/;"	v	typeref:typename:PFNGLGETFRAGDATALOCATIONPROC
gl3wGetFramebufferAttachmentParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC gl3wGetFramebufferAttachmentParameteriv;$/;"	v	typeref:typename:PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
gl3wGetFramebufferAttachmentParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC gl3wGetFramebufferAttachmentParameteriv;$/;"	v	typeref:typename:PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC
gl3wGetFramebufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERPARAMETERIVPROC gl3wGetFramebufferParameteriv;$/;"	v	typeref:typename:PFNGLGETFRAMEBUFFERPARAMETERIVPROC
gl3wGetFramebufferParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETFRAMEBUFFERPARAMETERIVPROC gl3wGetFramebufferParameteriv;$/;"	v	typeref:typename:PFNGLGETFRAMEBUFFERPARAMETERIVPROC
gl3wGetGraphicsResetStatusARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC gl3wGetGraphicsResetStatusARB;$/;"	v	typeref:typename:PFNGLGETGRAPHICSRESETSTATUSARBPROC
gl3wGetGraphicsResetStatusARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETGRAPHICSRESETSTATUSARBPROC gl3wGetGraphicsResetStatusARB;$/;"	v	typeref:typename:PFNGLGETGRAPHICSRESETSTATUSARBPROC
gl3wGetInteger64i_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64I_VPROC gl3wGetInteger64i_v;$/;"	v	typeref:typename:PFNGLGETINTEGER64I_VPROC
gl3wGetInteger64i_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64I_VPROC gl3wGetInteger64i_v;$/;"	v	typeref:typename:PFNGLGETINTEGER64I_VPROC
gl3wGetInteger64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64VPROC gl3wGetInteger64v;$/;"	v	typeref:typename:PFNGLGETINTEGER64VPROC
gl3wGetInteger64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGER64VPROC gl3wGetInteger64v;$/;"	v	typeref:typename:PFNGLGETINTEGER64VPROC
gl3wGetIntegeri_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERI_VPROC gl3wGetIntegeri_v;$/;"	v	typeref:typename:PFNGLGETINTEGERI_VPROC
gl3wGetIntegeri_v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERI_VPROC gl3wGetIntegeri_v;$/;"	v	typeref:typename:PFNGLGETINTEGERI_VPROC
gl3wGetIntegerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERVPROC gl3wGetIntegerv;$/;"	v	typeref:typename:PFNGLGETINTEGERVPROC
gl3wGetIntegerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTEGERVPROC gl3wGetIntegerv;$/;"	v	typeref:typename:PFNGLGETINTEGERVPROC
gl3wGetInternalformati64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATI64VPROC gl3wGetInternalformati64v;$/;"	v	typeref:typename:PFNGLGETINTERNALFORMATI64VPROC
gl3wGetInternalformati64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATI64VPROC gl3wGetInternalformati64v;$/;"	v	typeref:typename:PFNGLGETINTERNALFORMATI64VPROC
gl3wGetInternalformativ	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATIVPROC gl3wGetInternalformativ;$/;"	v	typeref:typename:PFNGLGETINTERNALFORMATIVPROC
gl3wGetInternalformativ	lib/gl3w/GL/gl3w.c	/^PFNGLGETINTERNALFORMATIVPROC gl3wGetInternalformativ;$/;"	v	typeref:typename:PFNGLGETINTERNALFORMATIVPROC
gl3wGetMultisamplefv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETMULTISAMPLEFVPROC gl3wGetMultisamplefv;$/;"	v	typeref:typename:PFNGLGETMULTISAMPLEFVPROC
gl3wGetMultisamplefv	lib/gl3w/GL/gl3w.c	/^PFNGLGETMULTISAMPLEFVPROC gl3wGetMultisamplefv;$/;"	v	typeref:typename:PFNGLGETMULTISAMPLEFVPROC
gl3wGetNamedFramebufferParameterivEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC gl3wGetNamedFramebufferParameterivEXT;$/;"	v	typeref:typename:PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
gl3wGetNamedFramebufferParameterivEXT	lib/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC gl3wGetNamedFramebufferParameterivEXT;$/;"	v	typeref:typename:PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVEXTPROC
gl3wGetNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGARBPROC gl3wGetNamedStringARB;$/;"	v	typeref:typename:PFNGLGETNAMEDSTRINGARBPROC
gl3wGetNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGARBPROC gl3wGetNamedStringARB;$/;"	v	typeref:typename:PFNGLGETNAMEDSTRINGARBPROC
gl3wGetNamedStringivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGIVARBPROC gl3wGetNamedStringivARB;$/;"	v	typeref:typename:PFNGLGETNAMEDSTRINGIVARBPROC
gl3wGetNamedStringivARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNAMEDSTRINGIVARBPROC gl3wGetNamedStringivARB;$/;"	v	typeref:typename:PFNGLGETNAMEDSTRINGIVARBPROC
gl3wGetObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTLABELPROC gl3wGetObjectLabel;$/;"	v	typeref:typename:PFNGLGETOBJECTLABELPROC
gl3wGetObjectLabel	lib/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTLABELPROC gl3wGetObjectLabel;$/;"	v	typeref:typename:PFNGLGETOBJECTLABELPROC
gl3wGetObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTPTRLABELPROC gl3wGetObjectPtrLabel;$/;"	v	typeref:typename:PFNGLGETOBJECTPTRLABELPROC
gl3wGetObjectPtrLabel	lib/gl3w/GL/gl3w.c	/^PFNGLGETOBJECTPTRLABELPROC gl3wGetObjectPtrLabel;$/;"	v	typeref:typename:PFNGLGETOBJECTPTRLABELPROC
gl3wGetPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPOINTERVPROC gl3wGetPointerv;$/;"	v	typeref:typename:PFNGLGETPOINTERVPROC
gl3wGetPointerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPOINTERVPROC gl3wGetPointerv;$/;"	v	typeref:typename:PFNGLGETPOINTERVPROC
gl3wGetProcAddress	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^void *gl3wGetProcAddress(const char *proc)$/;"	f	typeref:typename:void *
gl3wGetProcAddress	lib/gl3w/GL/gl3w.c	/^void *gl3wGetProcAddress(const char *proc)$/;"	f	typeref:typename:void *
gl3wGetProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMBINARYPROC gl3wGetProgramBinary;$/;"	v	typeref:typename:PFNGLGETPROGRAMBINARYPROC
gl3wGetProgramBinary	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMBINARYPROC gl3wGetProgramBinary;$/;"	v	typeref:typename:PFNGLGETPROGRAMBINARYPROC
gl3wGetProgramInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINFOLOGPROC gl3wGetProgramInfoLog;$/;"	v	typeref:typename:PFNGLGETPROGRAMINFOLOGPROC
gl3wGetProgramInfoLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINFOLOGPROC gl3wGetProgramInfoLog;$/;"	v	typeref:typename:PFNGLGETPROGRAMINFOLOGPROC
gl3wGetProgramInterfaceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINTERFACEIVPROC gl3wGetProgramInterfaceiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMINTERFACEIVPROC
gl3wGetProgramInterfaceiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMINTERFACEIVPROC gl3wGetProgramInterfaceiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMINTERFACEIVPROC
gl3wGetProgramPipelineInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEINFOLOGPROC gl3wGetProgramPipelineInfoLog;$/;"	v	typeref:typename:PFNGLGETPROGRAMPIPELINEINFOLOGPROC
gl3wGetProgramPipelineInfoLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEINFOLOGPROC gl3wGetProgramPipelineInfoLog;$/;"	v	typeref:typename:PFNGLGETPROGRAMPIPELINEINFOLOGPROC
gl3wGetProgramPipelineiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEIVPROC gl3wGetProgramPipelineiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMPIPELINEIVPROC
gl3wGetProgramPipelineiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMPIPELINEIVPROC gl3wGetProgramPipelineiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMPIPELINEIVPROC
gl3wGetProgramResourceIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEINDEXPROC gl3wGetProgramResourceIndex;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCEINDEXPROC
gl3wGetProgramResourceIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEINDEXPROC gl3wGetProgramResourceIndex;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCEINDEXPROC
gl3wGetProgramResourceLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONPROC gl3wGetProgramResourceLocation;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCELOCATIONPROC
gl3wGetProgramResourceLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONPROC gl3wGetProgramResourceLocation;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCELOCATIONPROC
gl3wGetProgramResourceLocationIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC gl3wGetProgramResourceLocationIndex;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
gl3wGetProgramResourceLocationIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC gl3wGetProgramResourceLocationIndex;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC
gl3wGetProgramResourceName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCENAMEPROC gl3wGetProgramResourceName;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCENAMEPROC
gl3wGetProgramResourceName	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCENAMEPROC gl3wGetProgramResourceName;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCENAMEPROC
gl3wGetProgramResourceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEIVPROC gl3wGetProgramResourceiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCEIVPROC
gl3wGetProgramResourceiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMRESOURCEIVPROC gl3wGetProgramResourceiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMRESOURCEIVPROC
gl3wGetProgramStageiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMSTAGEIVPROC gl3wGetProgramStageiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMSTAGEIVPROC
gl3wGetProgramStageiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMSTAGEIVPROC gl3wGetProgramStageiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMSTAGEIVPROC
gl3wGetProgramiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMIVPROC gl3wGetProgramiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMIVPROC
gl3wGetProgramiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETPROGRAMIVPROC gl3wGetProgramiv;$/;"	v	typeref:typename:PFNGLGETPROGRAMIVPROC
gl3wGetQueryIndexediv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYINDEXEDIVPROC gl3wGetQueryIndexediv;$/;"	v	typeref:typename:PFNGLGETQUERYINDEXEDIVPROC
gl3wGetQueryIndexediv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYINDEXEDIVPROC gl3wGetQueryIndexediv;$/;"	v	typeref:typename:PFNGLGETQUERYINDEXEDIVPROC
gl3wGetQueryObjecti64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTI64VPROC gl3wGetQueryObjecti64v;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTI64VPROC
gl3wGetQueryObjecti64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTI64VPROC gl3wGetQueryObjecti64v;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTI64VPROC
gl3wGetQueryObjectiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTIVPROC gl3wGetQueryObjectiv;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTIVPROC
gl3wGetQueryObjectiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTIVPROC gl3wGetQueryObjectiv;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTIVPROC
gl3wGetQueryObjectui64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUI64VPROC gl3wGetQueryObjectui64v;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUI64VPROC
gl3wGetQueryObjectui64v	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUI64VPROC gl3wGetQueryObjectui64v;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUI64VPROC
gl3wGetQueryObjectuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUIVPROC gl3wGetQueryObjectuiv;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUIVPROC
gl3wGetQueryObjectuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYOBJECTUIVPROC gl3wGetQueryObjectuiv;$/;"	v	typeref:typename:PFNGLGETQUERYOBJECTUIVPROC
gl3wGetQueryiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETQUERYIVPROC gl3wGetQueryiv;$/;"	v	typeref:typename:PFNGLGETQUERYIVPROC
gl3wGetQueryiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETQUERYIVPROC gl3wGetQueryiv;$/;"	v	typeref:typename:PFNGLGETQUERYIVPROC
gl3wGetRenderbufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC gl3wGetRenderbufferParameteriv;$/;"	v	typeref:typename:PFNGLGETRENDERBUFFERPARAMETERIVPROC
gl3wGetRenderbufferParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETRENDERBUFFERPARAMETERIVPROC gl3wGetRenderbufferParameteriv;$/;"	v	typeref:typename:PFNGLGETRENDERBUFFERPARAMETERIVPROC
gl3wGetSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIIVPROC gl3wGetSamplerParameterIiv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIIVPROC
gl3wGetSamplerParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIIVPROC gl3wGetSamplerParameterIiv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIIVPROC
gl3wGetSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIUIVPROC gl3wGetSamplerParameterIuiv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIUIVPROC
gl3wGetSamplerParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIUIVPROC gl3wGetSamplerParameterIuiv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIUIVPROC
gl3wGetSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERFVPROC gl3wGetSamplerParameterfv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERFVPROC
gl3wGetSamplerParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERFVPROC gl3wGetSamplerParameterfv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERFVPROC
gl3wGetSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIVPROC gl3wGetSamplerParameteriv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIVPROC
gl3wGetSamplerParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSAMPLERPARAMETERIVPROC gl3wGetSamplerParameteriv;$/;"	v	typeref:typename:PFNGLGETSAMPLERPARAMETERIVPROC
gl3wGetShaderInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERINFOLOGPROC gl3wGetShaderInfoLog;$/;"	v	typeref:typename:PFNGLGETSHADERINFOLOGPROC
gl3wGetShaderInfoLog	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERINFOLOGPROC gl3wGetShaderInfoLog;$/;"	v	typeref:typename:PFNGLGETSHADERINFOLOGPROC
gl3wGetShaderPrecisionFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERPRECISIONFORMATPROC gl3wGetShaderPrecisionFormat;$/;"	v	typeref:typename:PFNGLGETSHADERPRECISIONFORMATPROC
gl3wGetShaderPrecisionFormat	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERPRECISIONFORMATPROC gl3wGetShaderPrecisionFormat;$/;"	v	typeref:typename:PFNGLGETSHADERPRECISIONFORMATPROC
gl3wGetShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERSOURCEPROC gl3wGetShaderSource;$/;"	v	typeref:typename:PFNGLGETSHADERSOURCEPROC
gl3wGetShaderSource	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERSOURCEPROC gl3wGetShaderSource;$/;"	v	typeref:typename:PFNGLGETSHADERSOURCEPROC
gl3wGetShaderiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSHADERIVPROC gl3wGetShaderiv;$/;"	v	typeref:typename:PFNGLGETSHADERIVPROC
gl3wGetShaderiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSHADERIVPROC gl3wGetShaderiv;$/;"	v	typeref:typename:PFNGLGETSHADERIVPROC
gl3wGetString	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGPROC gl3wGetString;$/;"	v	typeref:typename:PFNGLGETSTRINGPROC
gl3wGetString	lib/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGPROC gl3wGetString;$/;"	v	typeref:typename:PFNGLGETSTRINGPROC
gl3wGetStringi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGIPROC gl3wGetStringi;$/;"	v	typeref:typename:PFNGLGETSTRINGIPROC
gl3wGetStringi	lib/gl3w/GL/gl3w.c	/^PFNGLGETSTRINGIPROC gl3wGetStringi;$/;"	v	typeref:typename:PFNGLGETSTRINGIPROC
gl3wGetSubroutineIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEINDEXPROC gl3wGetSubroutineIndex;$/;"	v	typeref:typename:PFNGLGETSUBROUTINEINDEXPROC
gl3wGetSubroutineIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEINDEXPROC gl3wGetSubroutineIndex;$/;"	v	typeref:typename:PFNGLGETSUBROUTINEINDEXPROC
gl3wGetSubroutineUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC gl3wGetSubroutineUniformLocation;$/;"	v	typeref:typename:PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
gl3wGetSubroutineUniformLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC gl3wGetSubroutineUniformLocation;$/;"	v	typeref:typename:PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC
gl3wGetSynciv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETSYNCIVPROC gl3wGetSynciv;$/;"	v	typeref:typename:PFNGLGETSYNCIVPROC
gl3wGetSynciv	lib/gl3w/GL/gl3w.c	/^PFNGLGETSYNCIVPROC gl3wGetSynciv;$/;"	v	typeref:typename:PFNGLGETSYNCIVPROC
gl3wGetTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXIMAGEPROC gl3wGetTexImage;$/;"	v	typeref:typename:PFNGLGETTEXIMAGEPROC
gl3wGetTexImage	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXIMAGEPROC gl3wGetTexImage;$/;"	v	typeref:typename:PFNGLGETTEXIMAGEPROC
gl3wGetTexLevelParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERFVPROC gl3wGetTexLevelParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERFVPROC
gl3wGetTexLevelParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERFVPROC gl3wGetTexLevelParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERFVPROC
gl3wGetTexLevelParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERIVPROC gl3wGetTexLevelParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERIVPROC
gl3wGetTexLevelParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXLEVELPARAMETERIVPROC gl3wGetTexLevelParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXLEVELPARAMETERIVPROC
gl3wGetTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIIVPROC gl3wGetTexParameterIiv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIIVPROC
gl3wGetTexParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIIVPROC gl3wGetTexParameterIiv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIIVPROC
gl3wGetTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIUIVPROC gl3wGetTexParameterIuiv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIUIVPROC
gl3wGetTexParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIUIVPROC gl3wGetTexParameterIuiv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIUIVPROC
gl3wGetTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERFVPROC gl3wGetTexParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERFVPROC
gl3wGetTexParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERFVPROC gl3wGetTexParameterfv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERFVPROC
gl3wGetTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIVPROC gl3wGetTexParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIVPROC
gl3wGetTexParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLGETTEXPARAMETERIVPROC gl3wGetTexParameteriv;$/;"	v	typeref:typename:PFNGLGETTEXPARAMETERIVPROC
gl3wGetTransformFeedbackVarying	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC gl3wGetTransformFeedbackVarying;$/;"	v	typeref:typename:PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
gl3wGetTransformFeedbackVarying	lib/gl3w/GL/gl3w.c	/^PFNGLGETTRANSFORMFEEDBACKVARYINGPROC gl3wGetTransformFeedbackVarying;$/;"	v	typeref:typename:PFNGLGETTRANSFORMFEEDBACKVARYINGPROC
gl3wGetUniformBlockIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMBLOCKINDEXPROC gl3wGetUniformBlockIndex;$/;"	v	typeref:typename:PFNGLGETUNIFORMBLOCKINDEXPROC
gl3wGetUniformBlockIndex	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMBLOCKINDEXPROC gl3wGetUniformBlockIndex;$/;"	v	typeref:typename:PFNGLGETUNIFORMBLOCKINDEXPROC
gl3wGetUniformIndices	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMINDICESPROC gl3wGetUniformIndices;$/;"	v	typeref:typename:PFNGLGETUNIFORMINDICESPROC
gl3wGetUniformIndices	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMINDICESPROC gl3wGetUniformIndices;$/;"	v	typeref:typename:PFNGLGETUNIFORMINDICESPROC
gl3wGetUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMLOCATIONPROC gl3wGetUniformLocation;$/;"	v	typeref:typename:PFNGLGETUNIFORMLOCATIONPROC
gl3wGetUniformLocation	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMLOCATIONPROC gl3wGetUniformLocation;$/;"	v	typeref:typename:PFNGLGETUNIFORMLOCATIONPROC
gl3wGetUniformSubroutineuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMSUBROUTINEUIVPROC gl3wGetUniformSubroutineuiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMSUBROUTINEUIVPROC
gl3wGetUniformSubroutineuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMSUBROUTINEUIVPROC gl3wGetUniformSubroutineuiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMSUBROUTINEUIVPROC
gl3wGetUniformdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMDVPROC gl3wGetUniformdv;$/;"	v	typeref:typename:PFNGLGETUNIFORMDVPROC
gl3wGetUniformdv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMDVPROC gl3wGetUniformdv;$/;"	v	typeref:typename:PFNGLGETUNIFORMDVPROC
gl3wGetUniformfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMFVPROC gl3wGetUniformfv;$/;"	v	typeref:typename:PFNGLGETUNIFORMFVPROC
gl3wGetUniformfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMFVPROC gl3wGetUniformfv;$/;"	v	typeref:typename:PFNGLGETUNIFORMFVPROC
gl3wGetUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMIVPROC gl3wGetUniformiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMIVPROC
gl3wGetUniformiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMIVPROC gl3wGetUniformiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMIVPROC
gl3wGetUniformuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMUIVPROC gl3wGetUniformuiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMUIVPROC
gl3wGetUniformuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETUNIFORMUIVPROC gl3wGetUniformuiv;$/;"	v	typeref:typename:PFNGLGETUNIFORMUIVPROC
gl3wGetVertexAttribIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIIVPROC gl3wGetVertexAttribIiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIIVPROC
gl3wGetVertexAttribIiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIIVPROC gl3wGetVertexAttribIiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIIVPROC
gl3wGetVertexAttribIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIUIVPROC gl3wGetVertexAttribIuiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIUIVPROC
gl3wGetVertexAttribIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIUIVPROC gl3wGetVertexAttribIuiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIUIVPROC
gl3wGetVertexAttribLdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBLDVPROC gl3wGetVertexAttribLdv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBLDVPROC
gl3wGetVertexAttribLdv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBLDVPROC gl3wGetVertexAttribLdv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBLDVPROC
gl3wGetVertexAttribPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC gl3wGetVertexAttribPointerv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBPOINTERVPROC
gl3wGetVertexAttribPointerv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBPOINTERVPROC gl3wGetVertexAttribPointerv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBPOINTERVPROC
gl3wGetVertexAttribdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBDVPROC gl3wGetVertexAttribdv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBDVPROC
gl3wGetVertexAttribdv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBDVPROC gl3wGetVertexAttribdv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBDVPROC
gl3wGetVertexAttribfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBFVPROC gl3wGetVertexAttribfv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBFVPROC
gl3wGetVertexAttribfv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBFVPROC gl3wGetVertexAttribfv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBFVPROC
gl3wGetVertexAttribiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIVPROC gl3wGetVertexAttribiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIVPROC
gl3wGetVertexAttribiv	lib/gl3w/GL/gl3w.c	/^PFNGLGETVERTEXATTRIBIVPROC gl3wGetVertexAttribiv;$/;"	v	typeref:typename:PFNGLGETVERTEXATTRIBIVPROC
gl3wGetnCompressedTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC gl3wGetnCompressedTexImageARB;$/;"	v	typeref:typename:PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
gl3wGetnCompressedTexImageARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC gl3wGetnCompressedTexImageARB;$/;"	v	typeref:typename:PFNGLGETNCOMPRESSEDTEXIMAGEARBPROC
gl3wGetnTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNTEXIMAGEARBPROC gl3wGetnTexImageARB;$/;"	v	typeref:typename:PFNGLGETNTEXIMAGEARBPROC
gl3wGetnTexImageARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNTEXIMAGEARBPROC gl3wGetnTexImageARB;$/;"	v	typeref:typename:PFNGLGETNTEXIMAGEARBPROC
gl3wGetnUniformdvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMDVARBPROC gl3wGetnUniformdvARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMDVARBPROC
gl3wGetnUniformdvARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMDVARBPROC gl3wGetnUniformdvARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMDVARBPROC
gl3wGetnUniformfvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMFVARBPROC gl3wGetnUniformfvARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMFVARBPROC
gl3wGetnUniformfvARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMFVARBPROC gl3wGetnUniformfvARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMFVARBPROC
gl3wGetnUniformivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMIVARBPROC gl3wGetnUniformivARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMIVARBPROC
gl3wGetnUniformivARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMIVARBPROC gl3wGetnUniformivARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMIVARBPROC
gl3wGetnUniformuivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMUIVARBPROC gl3wGetnUniformuivARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMUIVARBPROC
gl3wGetnUniformuivARB	lib/gl3w/GL/gl3w.c	/^PFNGLGETNUNIFORMUIVARBPROC gl3wGetnUniformuivARB;$/;"	v	typeref:typename:PFNGLGETNUNIFORMUIVARBPROC
gl3wHint	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLHINTPROC gl3wHint;$/;"	v	typeref:typename:PFNGLHINTPROC
gl3wHint	lib/gl3w/GL/gl3w.c	/^PFNGLHINTPROC gl3wHint;$/;"	v	typeref:typename:PFNGLHINTPROC
gl3wInit	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^int gl3wInit(void)$/;"	f	typeref:typename:int
gl3wInit	lib/gl3w/GL/gl3w.c	/^int gl3wInit(void)$/;"	f	typeref:typename:int
gl3wInvalidateBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERDATAPROC gl3wInvalidateBufferData;$/;"	v	typeref:typename:PFNGLINVALIDATEBUFFERDATAPROC
gl3wInvalidateBufferData	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERDATAPROC gl3wInvalidateBufferData;$/;"	v	typeref:typename:PFNGLINVALIDATEBUFFERDATAPROC
gl3wInvalidateBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERSUBDATAPROC gl3wInvalidateBufferSubData;$/;"	v	typeref:typename:PFNGLINVALIDATEBUFFERSUBDATAPROC
gl3wInvalidateBufferSubData	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEBUFFERSUBDATAPROC gl3wInvalidateBufferSubData;$/;"	v	typeref:typename:PFNGLINVALIDATEBUFFERSUBDATAPROC
gl3wInvalidateFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEFRAMEBUFFERPROC gl3wInvalidateFramebuffer;$/;"	v	typeref:typename:PFNGLINVALIDATEFRAMEBUFFERPROC
gl3wInvalidateFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATEFRAMEBUFFERPROC gl3wInvalidateFramebuffer;$/;"	v	typeref:typename:PFNGLINVALIDATEFRAMEBUFFERPROC
gl3wInvalidateSubFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATESUBFRAMEBUFFERPROC gl3wInvalidateSubFramebuffer;$/;"	v	typeref:typename:PFNGLINVALIDATESUBFRAMEBUFFERPROC
gl3wInvalidateSubFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATESUBFRAMEBUFFERPROC gl3wInvalidateSubFramebuffer;$/;"	v	typeref:typename:PFNGLINVALIDATESUBFRAMEBUFFERPROC
gl3wInvalidateTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXIMAGEPROC gl3wInvalidateTexImage;$/;"	v	typeref:typename:PFNGLINVALIDATETEXIMAGEPROC
gl3wInvalidateTexImage	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXIMAGEPROC gl3wInvalidateTexImage;$/;"	v	typeref:typename:PFNGLINVALIDATETEXIMAGEPROC
gl3wInvalidateTexSubImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXSUBIMAGEPROC gl3wInvalidateTexSubImage;$/;"	v	typeref:typename:PFNGLINVALIDATETEXSUBIMAGEPROC
gl3wInvalidateTexSubImage	lib/gl3w/GL/gl3w.c	/^PFNGLINVALIDATETEXSUBIMAGEPROC gl3wInvalidateTexSubImage;$/;"	v	typeref:typename:PFNGLINVALIDATETEXSUBIMAGEPROC
gl3wIsBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISBUFFERPROC gl3wIsBuffer;$/;"	v	typeref:typename:PFNGLISBUFFERPROC
gl3wIsBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLISBUFFERPROC gl3wIsBuffer;$/;"	v	typeref:typename:PFNGLISBUFFERPROC
gl3wIsEnabled	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISENABLEDPROC gl3wIsEnabled;$/;"	v	typeref:typename:PFNGLISENABLEDPROC
gl3wIsEnabled	lib/gl3w/GL/gl3w.c	/^PFNGLISENABLEDPROC gl3wIsEnabled;$/;"	v	typeref:typename:PFNGLISENABLEDPROC
gl3wIsEnabledi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISENABLEDIPROC gl3wIsEnabledi;$/;"	v	typeref:typename:PFNGLISENABLEDIPROC
gl3wIsEnabledi	lib/gl3w/GL/gl3w.c	/^PFNGLISENABLEDIPROC gl3wIsEnabledi;$/;"	v	typeref:typename:PFNGLISENABLEDIPROC
gl3wIsFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISFRAMEBUFFERPROC gl3wIsFramebuffer;$/;"	v	typeref:typename:PFNGLISFRAMEBUFFERPROC
gl3wIsFramebuffer	lib/gl3w/GL/gl3w.c	/^PFNGLISFRAMEBUFFERPROC gl3wIsFramebuffer;$/;"	v	typeref:typename:PFNGLISFRAMEBUFFERPROC
gl3wIsNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISNAMEDSTRINGARBPROC gl3wIsNamedStringARB;$/;"	v	typeref:typename:PFNGLISNAMEDSTRINGARBPROC
gl3wIsNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLISNAMEDSTRINGARBPROC gl3wIsNamedStringARB;$/;"	v	typeref:typename:PFNGLISNAMEDSTRINGARBPROC
gl3wIsProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPROC gl3wIsProgram;$/;"	v	typeref:typename:PFNGLISPROGRAMPROC
gl3wIsProgram	lib/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPROC gl3wIsProgram;$/;"	v	typeref:typename:PFNGLISPROGRAMPROC
gl3wIsProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPIPELINEPROC gl3wIsProgramPipeline;$/;"	v	typeref:typename:PFNGLISPROGRAMPIPELINEPROC
gl3wIsProgramPipeline	lib/gl3w/GL/gl3w.c	/^PFNGLISPROGRAMPIPELINEPROC gl3wIsProgramPipeline;$/;"	v	typeref:typename:PFNGLISPROGRAMPIPELINEPROC
gl3wIsQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISQUERYPROC gl3wIsQuery;$/;"	v	typeref:typename:PFNGLISQUERYPROC
gl3wIsQuery	lib/gl3w/GL/gl3w.c	/^PFNGLISQUERYPROC gl3wIsQuery;$/;"	v	typeref:typename:PFNGLISQUERYPROC
gl3wIsRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISRENDERBUFFERPROC gl3wIsRenderbuffer;$/;"	v	typeref:typename:PFNGLISRENDERBUFFERPROC
gl3wIsRenderbuffer	lib/gl3w/GL/gl3w.c	/^PFNGLISRENDERBUFFERPROC gl3wIsRenderbuffer;$/;"	v	typeref:typename:PFNGLISRENDERBUFFERPROC
gl3wIsSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISSAMPLERPROC gl3wIsSampler;$/;"	v	typeref:typename:PFNGLISSAMPLERPROC
gl3wIsSampler	lib/gl3w/GL/gl3w.c	/^PFNGLISSAMPLERPROC gl3wIsSampler;$/;"	v	typeref:typename:PFNGLISSAMPLERPROC
gl3wIsShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISSHADERPROC gl3wIsShader;$/;"	v	typeref:typename:PFNGLISSHADERPROC
gl3wIsShader	lib/gl3w/GL/gl3w.c	/^PFNGLISSHADERPROC gl3wIsShader;$/;"	v	typeref:typename:PFNGLISSHADERPROC
gl3wIsSupported	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^int gl3wIsSupported(int major, int minor)$/;"	f	typeref:typename:int
gl3wIsSupported	lib/gl3w/GL/gl3w.c	/^int gl3wIsSupported(int major, int minor)$/;"	f	typeref:typename:int
gl3wIsSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISSYNCPROC gl3wIsSync;$/;"	v	typeref:typename:PFNGLISSYNCPROC
gl3wIsSync	lib/gl3w/GL/gl3w.c	/^PFNGLISSYNCPROC gl3wIsSync;$/;"	v	typeref:typename:PFNGLISSYNCPROC
gl3wIsTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISTEXTUREPROC gl3wIsTexture;$/;"	v	typeref:typename:PFNGLISTEXTUREPROC
gl3wIsTexture	lib/gl3w/GL/gl3w.c	/^PFNGLISTEXTUREPROC gl3wIsTexture;$/;"	v	typeref:typename:PFNGLISTEXTUREPROC
gl3wIsTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISTRANSFORMFEEDBACKPROC gl3wIsTransformFeedback;$/;"	v	typeref:typename:PFNGLISTRANSFORMFEEDBACKPROC
gl3wIsTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLISTRANSFORMFEEDBACKPROC gl3wIsTransformFeedback;$/;"	v	typeref:typename:PFNGLISTRANSFORMFEEDBACKPROC
gl3wIsVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLISVERTEXARRAYPROC gl3wIsVertexArray;$/;"	v	typeref:typename:PFNGLISVERTEXARRAYPROC
gl3wIsVertexArray	lib/gl3w/GL/gl3w.c	/^PFNGLISVERTEXARRAYPROC gl3wIsVertexArray;$/;"	v	typeref:typename:PFNGLISVERTEXARRAYPROC
gl3wLineWidth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLLINEWIDTHPROC gl3wLineWidth;$/;"	v	typeref:typename:PFNGLLINEWIDTHPROC
gl3wLineWidth	lib/gl3w/GL/gl3w.c	/^PFNGLLINEWIDTHPROC gl3wLineWidth;$/;"	v	typeref:typename:PFNGLLINEWIDTHPROC
gl3wLinkProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLLINKPROGRAMPROC gl3wLinkProgram;$/;"	v	typeref:typename:PFNGLLINKPROGRAMPROC
gl3wLinkProgram	lib/gl3w/GL/gl3w.c	/^PFNGLLINKPROGRAMPROC gl3wLinkProgram;$/;"	v	typeref:typename:PFNGLLINKPROGRAMPROC
gl3wLogicOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLLOGICOPPROC gl3wLogicOp;$/;"	v	typeref:typename:PFNGLLOGICOPPROC
gl3wLogicOp	lib/gl3w/GL/gl3w.c	/^PFNGLLOGICOPPROC gl3wLogicOp;$/;"	v	typeref:typename:PFNGLLOGICOPPROC
gl3wMapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERPROC gl3wMapBuffer;$/;"	v	typeref:typename:PFNGLMAPBUFFERPROC
gl3wMapBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERPROC gl3wMapBuffer;$/;"	v	typeref:typename:PFNGLMAPBUFFERPROC
gl3wMapBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERRANGEPROC gl3wMapBufferRange;$/;"	v	typeref:typename:PFNGLMAPBUFFERRANGEPROC
gl3wMapBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLMAPBUFFERRANGEPROC gl3wMapBufferRange;$/;"	v	typeref:typename:PFNGLMAPBUFFERRANGEPROC
gl3wMemoryBarrier	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMEMORYBARRIERPROC gl3wMemoryBarrier;$/;"	v	typeref:typename:PFNGLMEMORYBARRIERPROC
gl3wMemoryBarrier	lib/gl3w/GL/gl3w.c	/^PFNGLMEMORYBARRIERPROC gl3wMemoryBarrier;$/;"	v	typeref:typename:PFNGLMEMORYBARRIERPROC
gl3wMinSampleShading	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGPROC gl3wMinSampleShading;$/;"	v	typeref:typename:PFNGLMINSAMPLESHADINGPROC
gl3wMinSampleShading	lib/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGPROC gl3wMinSampleShading;$/;"	v	typeref:typename:PFNGLMINSAMPLESHADINGPROC
gl3wMinSampleShadingARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGARBPROC gl3wMinSampleShadingARB;$/;"	v	typeref:typename:PFNGLMINSAMPLESHADINGARBPROC
gl3wMinSampleShadingARB	lib/gl3w/GL/gl3w.c	/^PFNGLMINSAMPLESHADINGARBPROC gl3wMinSampleShadingARB;$/;"	v	typeref:typename:PFNGLMINSAMPLESHADINGARBPROC
gl3wMultiDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSPROC gl3wMultiDrawArrays;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSPROC
gl3wMultiDrawArrays	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSPROC gl3wMultiDrawArrays;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSPROC
gl3wMultiDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSINDIRECTPROC gl3wMultiDrawArraysIndirect;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSINDIRECTPROC
gl3wMultiDrawArraysIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWARRAYSINDIRECTPROC gl3wMultiDrawArraysIndirect;$/;"	v	typeref:typename:PFNGLMULTIDRAWARRAYSINDIRECTPROC
gl3wMultiDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSPROC gl3wMultiDrawElements;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSPROC
gl3wMultiDrawElements	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSPROC gl3wMultiDrawElements;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSPROC
gl3wMultiDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC gl3wMultiDrawElementsBaseVertex;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
gl3wMultiDrawElementsBaseVertex	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC gl3wMultiDrawElementsBaseVertex;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC
gl3wMultiDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSINDIRECTPROC gl3wMultiDrawElementsIndirect;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSINDIRECTPROC
gl3wMultiDrawElementsIndirect	lib/gl3w/GL/gl3w.c	/^PFNGLMULTIDRAWELEMENTSINDIRECTPROC gl3wMultiDrawElementsIndirect;$/;"	v	typeref:typename:PFNGLMULTIDRAWELEMENTSINDIRECTPROC
gl3wMultiTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIPROC gl3wMultiTexCoordP1ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP1UIPROC
gl3wMultiTexCoordP1ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIPROC gl3wMultiTexCoordP1ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP1UIPROC
gl3wMultiTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIVPROC gl3wMultiTexCoordP1uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP1UIVPROC
gl3wMultiTexCoordP1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP1UIVPROC gl3wMultiTexCoordP1uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP1UIVPROC
gl3wMultiTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIPROC gl3wMultiTexCoordP2ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP2UIPROC
gl3wMultiTexCoordP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIPROC gl3wMultiTexCoordP2ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP2UIPROC
gl3wMultiTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIVPROC gl3wMultiTexCoordP2uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP2UIVPROC
gl3wMultiTexCoordP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP2UIVPROC gl3wMultiTexCoordP2uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP2UIVPROC
gl3wMultiTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIPROC gl3wMultiTexCoordP3ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP3UIPROC
gl3wMultiTexCoordP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIPROC gl3wMultiTexCoordP3ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP3UIPROC
gl3wMultiTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIVPROC gl3wMultiTexCoordP3uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP3UIVPROC
gl3wMultiTexCoordP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP3UIVPROC gl3wMultiTexCoordP3uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP3UIVPROC
gl3wMultiTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIPROC gl3wMultiTexCoordP4ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP4UIPROC
gl3wMultiTexCoordP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIPROC gl3wMultiTexCoordP4ui;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP4UIPROC
gl3wMultiTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIVPROC gl3wMultiTexCoordP4uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP4UIVPROC
gl3wMultiTexCoordP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLMULTITEXCOORDP4UIVPROC gl3wMultiTexCoordP4uiv;$/;"	v	typeref:typename:PFNGLMULTITEXCOORDP4UIVPROC
gl3wNamedFramebufferParameteriEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC gl3wNamedFramebufferParameteriEXT;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
gl3wNamedFramebufferParameteriEXT	lib/gl3w/GL/gl3w.c	/^PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC gl3wNamedFramebufferParameteriEXT;$/;"	v	typeref:typename:PFNGLNAMEDFRAMEBUFFERPARAMETERIEXTPROC
gl3wNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNAMEDSTRINGARBPROC gl3wNamedStringARB;$/;"	v	typeref:typename:PFNGLNAMEDSTRINGARBPROC
gl3wNamedStringARB	lib/gl3w/GL/gl3w.c	/^PFNGLNAMEDSTRINGARBPROC gl3wNamedStringARB;$/;"	v	typeref:typename:PFNGLNAMEDSTRINGARBPROC
gl3wNormalP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIPROC gl3wNormalP3ui;$/;"	v	typeref:typename:PFNGLNORMALP3UIPROC
gl3wNormalP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIPROC gl3wNormalP3ui;$/;"	v	typeref:typename:PFNGLNORMALP3UIPROC
gl3wNormalP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIVPROC gl3wNormalP3uiv;$/;"	v	typeref:typename:PFNGLNORMALP3UIVPROC
gl3wNormalP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLNORMALP3UIVPROC gl3wNormalP3uiv;$/;"	v	typeref:typename:PFNGLNORMALP3UIVPROC
gl3wObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLOBJECTLABELPROC gl3wObjectLabel;$/;"	v	typeref:typename:PFNGLOBJECTLABELPROC
gl3wObjectLabel	lib/gl3w/GL/gl3w.c	/^PFNGLOBJECTLABELPROC gl3wObjectLabel;$/;"	v	typeref:typename:PFNGLOBJECTLABELPROC
gl3wObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLOBJECTPTRLABELPROC gl3wObjectPtrLabel;$/;"	v	typeref:typename:PFNGLOBJECTPTRLABELPROC
gl3wObjectPtrLabel	lib/gl3w/GL/gl3w.c	/^PFNGLOBJECTPTRLABELPROC gl3wObjectPtrLabel;$/;"	v	typeref:typename:PFNGLOBJECTPTRLABELPROC
gl3wPatchParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERFVPROC gl3wPatchParameterfv;$/;"	v	typeref:typename:PFNGLPATCHPARAMETERFVPROC
gl3wPatchParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERFVPROC gl3wPatchParameterfv;$/;"	v	typeref:typename:PFNGLPATCHPARAMETERFVPROC
gl3wPatchParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERIPROC gl3wPatchParameteri;$/;"	v	typeref:typename:PFNGLPATCHPARAMETERIPROC
gl3wPatchParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLPATCHPARAMETERIPROC gl3wPatchParameteri;$/;"	v	typeref:typename:PFNGLPATCHPARAMETERIPROC
gl3wPauseTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPAUSETRANSFORMFEEDBACKPROC gl3wPauseTransformFeedback;$/;"	v	typeref:typename:PFNGLPAUSETRANSFORMFEEDBACKPROC
gl3wPauseTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLPAUSETRANSFORMFEEDBACKPROC gl3wPauseTransformFeedback;$/;"	v	typeref:typename:PFNGLPAUSETRANSFORMFEEDBACKPROC
gl3wPixelStoref	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREFPROC gl3wPixelStoref;$/;"	v	typeref:typename:PFNGLPIXELSTOREFPROC
gl3wPixelStoref	lib/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREFPROC gl3wPixelStoref;$/;"	v	typeref:typename:PFNGLPIXELSTOREFPROC
gl3wPixelStorei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREIPROC gl3wPixelStorei;$/;"	v	typeref:typename:PFNGLPIXELSTOREIPROC
gl3wPixelStorei	lib/gl3w/GL/gl3w.c	/^PFNGLPIXELSTOREIPROC gl3wPixelStorei;$/;"	v	typeref:typename:PFNGLPIXELSTOREIPROC
gl3wPointParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFPROC gl3wPointParameterf;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFPROC
gl3wPointParameterf	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFPROC gl3wPointParameterf;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFPROC
gl3wPointParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFVPROC gl3wPointParameterfv;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFVPROC
gl3wPointParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERFVPROC gl3wPointParameterfv;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERFVPROC
gl3wPointParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIPROC gl3wPointParameteri;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIPROC
gl3wPointParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIPROC gl3wPointParameteri;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIPROC
gl3wPointParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIVPROC gl3wPointParameteriv;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIVPROC
gl3wPointParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTPARAMETERIVPROC gl3wPointParameteriv;$/;"	v	typeref:typename:PFNGLPOINTPARAMETERIVPROC
gl3wPointSize	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOINTSIZEPROC gl3wPointSize;$/;"	v	typeref:typename:PFNGLPOINTSIZEPROC
gl3wPointSize	lib/gl3w/GL/gl3w.c	/^PFNGLPOINTSIZEPROC gl3wPointSize;$/;"	v	typeref:typename:PFNGLPOINTSIZEPROC
gl3wPolygonMode	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOLYGONMODEPROC gl3wPolygonMode;$/;"	v	typeref:typename:PFNGLPOLYGONMODEPROC
gl3wPolygonMode	lib/gl3w/GL/gl3w.c	/^PFNGLPOLYGONMODEPROC gl3wPolygonMode;$/;"	v	typeref:typename:PFNGLPOLYGONMODEPROC
gl3wPolygonOffset	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOLYGONOFFSETPROC gl3wPolygonOffset;$/;"	v	typeref:typename:PFNGLPOLYGONOFFSETPROC
gl3wPolygonOffset	lib/gl3w/GL/gl3w.c	/^PFNGLPOLYGONOFFSETPROC gl3wPolygonOffset;$/;"	v	typeref:typename:PFNGLPOLYGONOFFSETPROC
gl3wPopDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPOPDEBUGGROUPPROC gl3wPopDebugGroup;$/;"	v	typeref:typename:PFNGLPOPDEBUGGROUPPROC
gl3wPopDebugGroup	lib/gl3w/GL/gl3w.c	/^PFNGLPOPDEBUGGROUPPROC gl3wPopDebugGroup;$/;"	v	typeref:typename:PFNGLPOPDEBUGGROUPPROC
gl3wPrimitiveRestartIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPRIMITIVERESTARTINDEXPROC gl3wPrimitiveRestartIndex;$/;"	v	typeref:typename:PFNGLPRIMITIVERESTARTINDEXPROC
gl3wPrimitiveRestartIndex	lib/gl3w/GL/gl3w.c	/^PFNGLPRIMITIVERESTARTINDEXPROC gl3wPrimitiveRestartIndex;$/;"	v	typeref:typename:PFNGLPRIMITIVERESTARTINDEXPROC
gl3wProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMBINARYPROC gl3wProgramBinary;$/;"	v	typeref:typename:PFNGLPROGRAMBINARYPROC
gl3wProgramBinary	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMBINARYPROC gl3wProgramBinary;$/;"	v	typeref:typename:PFNGLPROGRAMBINARYPROC
gl3wProgramParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMPARAMETERIPROC gl3wProgramParameteri;$/;"	v	typeref:typename:PFNGLPROGRAMPARAMETERIPROC
gl3wProgramParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMPARAMETERIPROC gl3wProgramParameteri;$/;"	v	typeref:typename:PFNGLPROGRAMPARAMETERIPROC
gl3wProgramUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DPROC gl3wProgramUniform1d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1DPROC
gl3wProgramUniform1d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DPROC gl3wProgramUniform1d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1DPROC
gl3wProgramUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DVPROC gl3wProgramUniform1dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1DVPROC
gl3wProgramUniform1dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1DVPROC gl3wProgramUniform1dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1DVPROC
gl3wProgramUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FPROC gl3wProgramUniform1f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1FPROC
gl3wProgramUniform1f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FPROC gl3wProgramUniform1f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1FPROC
gl3wProgramUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FVPROC gl3wProgramUniform1fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1FVPROC
gl3wProgramUniform1fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1FVPROC gl3wProgramUniform1fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1FVPROC
gl3wProgramUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IPROC gl3wProgramUniform1i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1IPROC
gl3wProgramUniform1i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IPROC gl3wProgramUniform1i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1IPROC
gl3wProgramUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IVPROC gl3wProgramUniform1iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1IVPROC
gl3wProgramUniform1iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1IVPROC gl3wProgramUniform1iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1IVPROC
gl3wProgramUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIPROC gl3wProgramUniform1ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1UIPROC
gl3wProgramUniform1ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIPROC gl3wProgramUniform1ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1UIPROC
gl3wProgramUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIVPROC gl3wProgramUniform1uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1UIVPROC
gl3wProgramUniform1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM1UIVPROC gl3wProgramUniform1uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM1UIVPROC
gl3wProgramUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DPROC gl3wProgramUniform2d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2DPROC
gl3wProgramUniform2d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DPROC gl3wProgramUniform2d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2DPROC
gl3wProgramUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DVPROC gl3wProgramUniform2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2DVPROC
gl3wProgramUniform2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2DVPROC gl3wProgramUniform2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2DVPROC
gl3wProgramUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FPROC gl3wProgramUniform2f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2FPROC
gl3wProgramUniform2f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FPROC gl3wProgramUniform2f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2FPROC
gl3wProgramUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FVPROC gl3wProgramUniform2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2FVPROC
gl3wProgramUniform2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2FVPROC gl3wProgramUniform2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2FVPROC
gl3wProgramUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IPROC gl3wProgramUniform2i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2IPROC
gl3wProgramUniform2i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IPROC gl3wProgramUniform2i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2IPROC
gl3wProgramUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IVPROC gl3wProgramUniform2iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2IVPROC
gl3wProgramUniform2iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2IVPROC gl3wProgramUniform2iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2IVPROC
gl3wProgramUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIPROC gl3wProgramUniform2ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2UIPROC
gl3wProgramUniform2ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIPROC gl3wProgramUniform2ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2UIPROC
gl3wProgramUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIVPROC gl3wProgramUniform2uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2UIVPROC
gl3wProgramUniform2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM2UIVPROC gl3wProgramUniform2uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM2UIVPROC
gl3wProgramUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DPROC gl3wProgramUniform3d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3DPROC
gl3wProgramUniform3d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DPROC gl3wProgramUniform3d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3DPROC
gl3wProgramUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DVPROC gl3wProgramUniform3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3DVPROC
gl3wProgramUniform3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3DVPROC gl3wProgramUniform3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3DVPROC
gl3wProgramUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FPROC gl3wProgramUniform3f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3FPROC
gl3wProgramUniform3f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FPROC gl3wProgramUniform3f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3FPROC
gl3wProgramUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FVPROC gl3wProgramUniform3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3FVPROC
gl3wProgramUniform3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3FVPROC gl3wProgramUniform3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3FVPROC
gl3wProgramUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IPROC gl3wProgramUniform3i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3IPROC
gl3wProgramUniform3i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IPROC gl3wProgramUniform3i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3IPROC
gl3wProgramUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IVPROC gl3wProgramUniform3iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3IVPROC
gl3wProgramUniform3iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3IVPROC gl3wProgramUniform3iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3IVPROC
gl3wProgramUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIPROC gl3wProgramUniform3ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3UIPROC
gl3wProgramUniform3ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIPROC gl3wProgramUniform3ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3UIPROC
gl3wProgramUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIVPROC gl3wProgramUniform3uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3UIVPROC
gl3wProgramUniform3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM3UIVPROC gl3wProgramUniform3uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM3UIVPROC
gl3wProgramUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DPROC gl3wProgramUniform4d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4DPROC
gl3wProgramUniform4d	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DPROC gl3wProgramUniform4d;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4DPROC
gl3wProgramUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DVPROC gl3wProgramUniform4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4DVPROC
gl3wProgramUniform4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4DVPROC gl3wProgramUniform4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4DVPROC
gl3wProgramUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FPROC gl3wProgramUniform4f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4FPROC
gl3wProgramUniform4f	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FPROC gl3wProgramUniform4f;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4FPROC
gl3wProgramUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FVPROC gl3wProgramUniform4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4FVPROC
gl3wProgramUniform4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4FVPROC gl3wProgramUniform4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4FVPROC
gl3wProgramUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IPROC gl3wProgramUniform4i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4IPROC
gl3wProgramUniform4i	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IPROC gl3wProgramUniform4i;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4IPROC
gl3wProgramUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IVPROC gl3wProgramUniform4iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4IVPROC
gl3wProgramUniform4iv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4IVPROC gl3wProgramUniform4iv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4IVPROC
gl3wProgramUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIPROC gl3wProgramUniform4ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4UIPROC
gl3wProgramUniform4ui	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIPROC gl3wProgramUniform4ui;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4UIPROC
gl3wProgramUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIVPROC gl3wProgramUniform4uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4UIVPROC
gl3wProgramUniform4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORM4UIVPROC gl3wProgramUniform4uiv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORM4UIVPROC
gl3wProgramUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2DVPROC gl3wProgramUniformMatrix2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2DVPROC
gl3wProgramUniformMatrix2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2DVPROC gl3wProgramUniformMatrix2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2DVPROC
gl3wProgramUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2FVPROC gl3wProgramUniformMatrix2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2FVPROC
gl3wProgramUniformMatrix2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2FVPROC gl3wProgramUniformMatrix2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2FVPROC
gl3wProgramUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC gl3wProgramUniformMatrix2x3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
gl3wProgramUniformMatrix2x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC gl3wProgramUniformMatrix2x3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC
gl3wProgramUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC gl3wProgramUniformMatrix2x3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
gl3wProgramUniformMatrix2x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC gl3wProgramUniformMatrix2x3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC
gl3wProgramUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC gl3wProgramUniformMatrix2x4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
gl3wProgramUniformMatrix2x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC gl3wProgramUniformMatrix2x4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC
gl3wProgramUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC gl3wProgramUniformMatrix2x4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
gl3wProgramUniformMatrix2x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC gl3wProgramUniformMatrix2x4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC
gl3wProgramUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3DVPROC gl3wProgramUniformMatrix3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3DVPROC
gl3wProgramUniformMatrix3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3DVPROC gl3wProgramUniformMatrix3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3DVPROC
gl3wProgramUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3FVPROC gl3wProgramUniformMatrix3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3FVPROC
gl3wProgramUniformMatrix3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3FVPROC gl3wProgramUniformMatrix3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3FVPROC
gl3wProgramUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC gl3wProgramUniformMatrix3x2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
gl3wProgramUniformMatrix3x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC gl3wProgramUniformMatrix3x2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC
gl3wProgramUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC gl3wProgramUniformMatrix3x2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
gl3wProgramUniformMatrix3x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC gl3wProgramUniformMatrix3x2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC
gl3wProgramUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC gl3wProgramUniformMatrix3x4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
gl3wProgramUniformMatrix3x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC gl3wProgramUniformMatrix3x4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC
gl3wProgramUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC gl3wProgramUniformMatrix3x4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
gl3wProgramUniformMatrix3x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC gl3wProgramUniformMatrix3x4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC
gl3wProgramUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4DVPROC gl3wProgramUniformMatrix4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4DVPROC
gl3wProgramUniformMatrix4dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4DVPROC gl3wProgramUniformMatrix4dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4DVPROC
gl3wProgramUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4FVPROC gl3wProgramUniformMatrix4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4FVPROC
gl3wProgramUniformMatrix4fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4FVPROC gl3wProgramUniformMatrix4fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4FVPROC
gl3wProgramUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC gl3wProgramUniformMatrix4x2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
gl3wProgramUniformMatrix4x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC gl3wProgramUniformMatrix4x2dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC
gl3wProgramUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC gl3wProgramUniformMatrix4x2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
gl3wProgramUniformMatrix4x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC gl3wProgramUniformMatrix4x2fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC
gl3wProgramUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC gl3wProgramUniformMatrix4x3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
gl3wProgramUniformMatrix4x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC gl3wProgramUniformMatrix4x3dv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC
gl3wProgramUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC gl3wProgramUniformMatrix4x3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
gl3wProgramUniformMatrix4x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC gl3wProgramUniformMatrix4x3fv;$/;"	v	typeref:typename:PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC
gl3wProvokingVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPROVOKINGVERTEXPROC gl3wProvokingVertex;$/;"	v	typeref:typename:PFNGLPROVOKINGVERTEXPROC
gl3wProvokingVertex	lib/gl3w/GL/gl3w.c	/^PFNGLPROVOKINGVERTEXPROC gl3wProvokingVertex;$/;"	v	typeref:typename:PFNGLPROVOKINGVERTEXPROC
gl3wPushDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLPUSHDEBUGGROUPPROC gl3wPushDebugGroup;$/;"	v	typeref:typename:PFNGLPUSHDEBUGGROUPPROC
gl3wPushDebugGroup	lib/gl3w/GL/gl3w.c	/^PFNGLPUSHDEBUGGROUPPROC gl3wPushDebugGroup;$/;"	v	typeref:typename:PFNGLPUSHDEBUGGROUPPROC
gl3wQueryCounter	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLQUERYCOUNTERPROC gl3wQueryCounter;$/;"	v	typeref:typename:PFNGLQUERYCOUNTERPROC
gl3wQueryCounter	lib/gl3w/GL/gl3w.c	/^PFNGLQUERYCOUNTERPROC gl3wQueryCounter;$/;"	v	typeref:typename:PFNGLQUERYCOUNTERPROC
gl3wReadBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLREADBUFFERPROC gl3wReadBuffer;$/;"	v	typeref:typename:PFNGLREADBUFFERPROC
gl3wReadBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLREADBUFFERPROC gl3wReadBuffer;$/;"	v	typeref:typename:PFNGLREADBUFFERPROC
gl3wReadPixels	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLREADPIXELSPROC gl3wReadPixels;$/;"	v	typeref:typename:PFNGLREADPIXELSPROC
gl3wReadPixels	lib/gl3w/GL/gl3w.c	/^PFNGLREADPIXELSPROC gl3wReadPixels;$/;"	v	typeref:typename:PFNGLREADPIXELSPROC
gl3wReadnPixelsARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLREADNPIXELSARBPROC gl3wReadnPixelsARB;$/;"	v	typeref:typename:PFNGLREADNPIXELSARBPROC
gl3wReadnPixelsARB	lib/gl3w/GL/gl3w.c	/^PFNGLREADNPIXELSARBPROC gl3wReadnPixelsARB;$/;"	v	typeref:typename:PFNGLREADNPIXELSARBPROC
gl3wReleaseShaderCompiler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRELEASESHADERCOMPILERPROC gl3wReleaseShaderCompiler;$/;"	v	typeref:typename:PFNGLRELEASESHADERCOMPILERPROC
gl3wReleaseShaderCompiler	lib/gl3w/GL/gl3w.c	/^PFNGLRELEASESHADERCOMPILERPROC gl3wReleaseShaderCompiler;$/;"	v	typeref:typename:PFNGLRELEASESHADERCOMPILERPROC
gl3wRenderbufferStorage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEPROC gl3wRenderbufferStorage;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEPROC
gl3wRenderbufferStorage	lib/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEPROC gl3wRenderbufferStorage;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEPROC
gl3wRenderbufferStorageMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC gl3wRenderbufferStorageMultisample;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
gl3wRenderbufferStorageMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC gl3wRenderbufferStorageMultisample;$/;"	v	typeref:typename:PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC
gl3wResumeTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLRESUMETRANSFORMFEEDBACKPROC gl3wResumeTransformFeedback;$/;"	v	typeref:typename:PFNGLRESUMETRANSFORMFEEDBACKPROC
gl3wResumeTransformFeedback	lib/gl3w/GL/gl3w.c	/^PFNGLRESUMETRANSFORMFEEDBACKPROC gl3wResumeTransformFeedback;$/;"	v	typeref:typename:PFNGLRESUMETRANSFORMFEEDBACKPROC
gl3wSampleCoverage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLECOVERAGEPROC gl3wSampleCoverage;$/;"	v	typeref:typename:PFNGLSAMPLECOVERAGEPROC
gl3wSampleCoverage	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLECOVERAGEPROC gl3wSampleCoverage;$/;"	v	typeref:typename:PFNGLSAMPLECOVERAGEPROC
gl3wSampleMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLEMASKIPROC gl3wSampleMaski;$/;"	v	typeref:typename:PFNGLSAMPLEMASKIPROC
gl3wSampleMaski	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLEMASKIPROC gl3wSampleMaski;$/;"	v	typeref:typename:PFNGLSAMPLEMASKIPROC
gl3wSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIIVPROC gl3wSamplerParameterIiv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIIVPROC
gl3wSamplerParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIIVPROC gl3wSamplerParameterIiv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIIVPROC
gl3wSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIUIVPROC gl3wSamplerParameterIuiv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIUIVPROC
gl3wSamplerParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIUIVPROC gl3wSamplerParameterIuiv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIUIVPROC
gl3wSamplerParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFPROC gl3wSamplerParameterf;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFPROC
gl3wSamplerParameterf	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFPROC gl3wSamplerParameterf;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFPROC
gl3wSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFVPROC gl3wSamplerParameterfv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFVPROC
gl3wSamplerParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERFVPROC gl3wSamplerParameterfv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERFVPROC
gl3wSamplerParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIPROC gl3wSamplerParameteri;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIPROC
gl3wSamplerParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIPROC gl3wSamplerParameteri;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIPROC
gl3wSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIVPROC gl3wSamplerParameteriv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIVPROC
gl3wSamplerParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLSAMPLERPARAMETERIVPROC gl3wSamplerParameteriv;$/;"	v	typeref:typename:PFNGLSAMPLERPARAMETERIVPROC
gl3wScissor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORPROC gl3wScissor;$/;"	v	typeref:typename:PFNGLSCISSORPROC
gl3wScissor	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORPROC gl3wScissor;$/;"	v	typeref:typename:PFNGLSCISSORPROC
gl3wScissorArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORARRAYVPROC gl3wScissorArrayv;$/;"	v	typeref:typename:PFNGLSCISSORARRAYVPROC
gl3wScissorArrayv	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORARRAYVPROC gl3wScissorArrayv;$/;"	v	typeref:typename:PFNGLSCISSORARRAYVPROC
gl3wScissorIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDPROC gl3wScissorIndexed;$/;"	v	typeref:typename:PFNGLSCISSORINDEXEDPROC
gl3wScissorIndexed	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDPROC gl3wScissorIndexed;$/;"	v	typeref:typename:PFNGLSCISSORINDEXEDPROC
gl3wScissorIndexedv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDVPROC gl3wScissorIndexedv;$/;"	v	typeref:typename:PFNGLSCISSORINDEXEDVPROC
gl3wScissorIndexedv	lib/gl3w/GL/gl3w.c	/^PFNGLSCISSORINDEXEDVPROC gl3wScissorIndexedv;$/;"	v	typeref:typename:PFNGLSCISSORINDEXEDVPROC
gl3wSecondaryColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIPROC gl3wSecondaryColorP3ui;$/;"	v	typeref:typename:PFNGLSECONDARYCOLORP3UIPROC
gl3wSecondaryColorP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIPROC gl3wSecondaryColorP3ui;$/;"	v	typeref:typename:PFNGLSECONDARYCOLORP3UIPROC
gl3wSecondaryColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIVPROC gl3wSecondaryColorP3uiv;$/;"	v	typeref:typename:PFNGLSECONDARYCOLORP3UIVPROC
gl3wSecondaryColorP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLSECONDARYCOLORP3UIVPROC gl3wSecondaryColorP3uiv;$/;"	v	typeref:typename:PFNGLSECONDARYCOLORP3UIVPROC
gl3wShaderBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSHADERBINARYPROC gl3wShaderBinary;$/;"	v	typeref:typename:PFNGLSHADERBINARYPROC
gl3wShaderBinary	lib/gl3w/GL/gl3w.c	/^PFNGLSHADERBINARYPROC gl3wShaderBinary;$/;"	v	typeref:typename:PFNGLSHADERBINARYPROC
gl3wShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSHADERSOURCEPROC gl3wShaderSource;$/;"	v	typeref:typename:PFNGLSHADERSOURCEPROC
gl3wShaderSource	lib/gl3w/GL/gl3w.c	/^PFNGLSHADERSOURCEPROC gl3wShaderSource;$/;"	v	typeref:typename:PFNGLSHADERSOURCEPROC
gl3wShaderStorageBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSHADERSTORAGEBLOCKBINDINGPROC gl3wShaderStorageBlockBinding;$/;"	v	typeref:typename:PFNGLSHADERSTORAGEBLOCKBINDINGPROC
gl3wShaderStorageBlockBinding	lib/gl3w/GL/gl3w.c	/^PFNGLSHADERSTORAGEBLOCKBINDINGPROC gl3wShaderStorageBlockBinding;$/;"	v	typeref:typename:PFNGLSHADERSTORAGEBLOCKBINDINGPROC
gl3wStencilFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCPROC gl3wStencilFunc;$/;"	v	typeref:typename:PFNGLSTENCILFUNCPROC
gl3wStencilFunc	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCPROC gl3wStencilFunc;$/;"	v	typeref:typename:PFNGLSTENCILFUNCPROC
gl3wStencilFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCSEPARATEPROC gl3wStencilFuncSeparate;$/;"	v	typeref:typename:PFNGLSTENCILFUNCSEPARATEPROC
gl3wStencilFuncSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILFUNCSEPARATEPROC gl3wStencilFuncSeparate;$/;"	v	typeref:typename:PFNGLSTENCILFUNCSEPARATEPROC
gl3wStencilMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKPROC gl3wStencilMask;$/;"	v	typeref:typename:PFNGLSTENCILMASKPROC
gl3wStencilMask	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKPROC gl3wStencilMask;$/;"	v	typeref:typename:PFNGLSTENCILMASKPROC
gl3wStencilMaskSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKSEPARATEPROC gl3wStencilMaskSeparate;$/;"	v	typeref:typename:PFNGLSTENCILMASKSEPARATEPROC
gl3wStencilMaskSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILMASKSEPARATEPROC gl3wStencilMaskSeparate;$/;"	v	typeref:typename:PFNGLSTENCILMASKSEPARATEPROC
gl3wStencilOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPPROC gl3wStencilOp;$/;"	v	typeref:typename:PFNGLSTENCILOPPROC
gl3wStencilOp	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPPROC gl3wStencilOp;$/;"	v	typeref:typename:PFNGLSTENCILOPPROC
gl3wStencilOpSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPSEPARATEPROC gl3wStencilOpSeparate;$/;"	v	typeref:typename:PFNGLSTENCILOPSEPARATEPROC
gl3wStencilOpSeparate	lib/gl3w/GL/gl3w.c	/^PFNGLSTENCILOPSEPARATEPROC gl3wStencilOpSeparate;$/;"	v	typeref:typename:PFNGLSTENCILOPSEPARATEPROC
gl3wTexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERPROC gl3wTexBuffer;$/;"	v	typeref:typename:PFNGLTEXBUFFERPROC
gl3wTexBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERPROC gl3wTexBuffer;$/;"	v	typeref:typename:PFNGLTEXBUFFERPROC
gl3wTexBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERRANGEPROC gl3wTexBufferRange;$/;"	v	typeref:typename:PFNGLTEXBUFFERRANGEPROC
gl3wTexBufferRange	lib/gl3w/GL/gl3w.c	/^PFNGLTEXBUFFERRANGEPROC gl3wTexBufferRange;$/;"	v	typeref:typename:PFNGLTEXBUFFERRANGEPROC
gl3wTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIPROC gl3wTexCoordP1ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP1UIPROC
gl3wTexCoordP1ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIPROC gl3wTexCoordP1ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP1UIPROC
gl3wTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIVPROC gl3wTexCoordP1uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP1UIVPROC
gl3wTexCoordP1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP1UIVPROC gl3wTexCoordP1uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP1UIVPROC
gl3wTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIPROC gl3wTexCoordP2ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP2UIPROC
gl3wTexCoordP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIPROC gl3wTexCoordP2ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP2UIPROC
gl3wTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIVPROC gl3wTexCoordP2uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP2UIVPROC
gl3wTexCoordP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP2UIVPROC gl3wTexCoordP2uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP2UIVPROC
gl3wTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIPROC gl3wTexCoordP3ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP3UIPROC
gl3wTexCoordP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIPROC gl3wTexCoordP3ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP3UIPROC
gl3wTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIVPROC gl3wTexCoordP3uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP3UIVPROC
gl3wTexCoordP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP3UIVPROC gl3wTexCoordP3uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP3UIVPROC
gl3wTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIPROC gl3wTexCoordP4ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP4UIPROC
gl3wTexCoordP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIPROC gl3wTexCoordP4ui;$/;"	v	typeref:typename:PFNGLTEXCOORDP4UIPROC
gl3wTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIVPROC gl3wTexCoordP4uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP4UIVPROC
gl3wTexCoordP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXCOORDP4UIVPROC gl3wTexCoordP4uiv;$/;"	v	typeref:typename:PFNGLTEXCOORDP4UIVPROC
gl3wTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE1DPROC gl3wTexImage1D;$/;"	v	typeref:typename:PFNGLTEXIMAGE1DPROC
gl3wTexImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE1DPROC gl3wTexImage1D;$/;"	v	typeref:typename:PFNGLTEXIMAGE1DPROC
gl3wTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DPROC gl3wTexImage2D;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DPROC
gl3wTexImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DPROC gl3wTexImage2D;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DPROC
gl3wTexImage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC gl3wTexImage2DMultisample;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DMULTISAMPLEPROC
gl3wTexImage2DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE2DMULTISAMPLEPROC gl3wTexImage2DMultisample;$/;"	v	typeref:typename:PFNGLTEXIMAGE2DMULTISAMPLEPROC
gl3wTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DPROC gl3wTexImage3D;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DPROC
gl3wTexImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DPROC gl3wTexImage3D;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DPROC
gl3wTexImage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC gl3wTexImage3DMultisample;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DMULTISAMPLEPROC
gl3wTexImage3DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXIMAGE3DMULTISAMPLEPROC gl3wTexImage3DMultisample;$/;"	v	typeref:typename:PFNGLTEXIMAGE3DMULTISAMPLEPROC
gl3wTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIIVPROC gl3wTexParameterIiv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIIVPROC
gl3wTexParameterIiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIIVPROC gl3wTexParameterIiv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIIVPROC
gl3wTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIUIVPROC gl3wTexParameterIuiv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIUIVPROC
gl3wTexParameterIuiv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIUIVPROC gl3wTexParameterIuiv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIUIVPROC
gl3wTexParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFPROC gl3wTexParameterf;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFPROC
gl3wTexParameterf	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFPROC gl3wTexParameterf;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFPROC
gl3wTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFVPROC gl3wTexParameterfv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFVPROC
gl3wTexParameterfv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERFVPROC gl3wTexParameterfv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERFVPROC
gl3wTexParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIPROC gl3wTexParameteri;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIPROC
gl3wTexParameteri	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIPROC gl3wTexParameteri;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIPROC
gl3wTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIVPROC gl3wTexParameteriv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIVPROC
gl3wTexParameteriv	lib/gl3w/GL/gl3w.c	/^PFNGLTEXPARAMETERIVPROC gl3wTexParameteriv;$/;"	v	typeref:typename:PFNGLTEXPARAMETERIVPROC
gl3wTexStorage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE1DPROC gl3wTexStorage1D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE1DPROC
gl3wTexStorage1D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE1DPROC gl3wTexStorage1D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE1DPROC
gl3wTexStorage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DPROC gl3wTexStorage2D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE2DPROC
gl3wTexStorage2D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DPROC gl3wTexStorage2D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE2DPROC
gl3wTexStorage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DMULTISAMPLEPROC gl3wTexStorage2DMultisample;$/;"	v	typeref:typename:PFNGLTEXSTORAGE2DMULTISAMPLEPROC
gl3wTexStorage2DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE2DMULTISAMPLEPROC gl3wTexStorage2DMultisample;$/;"	v	typeref:typename:PFNGLTEXSTORAGE2DMULTISAMPLEPROC
gl3wTexStorage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DPROC gl3wTexStorage3D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE3DPROC
gl3wTexStorage3D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DPROC gl3wTexStorage3D;$/;"	v	typeref:typename:PFNGLTEXSTORAGE3DPROC
gl3wTexStorage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DMULTISAMPLEPROC gl3wTexStorage3DMultisample;$/;"	v	typeref:typename:PFNGLTEXSTORAGE3DMULTISAMPLEPROC
gl3wTexStorage3DMultisample	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSTORAGE3DMULTISAMPLEPROC gl3wTexStorage3DMultisample;$/;"	v	typeref:typename:PFNGLTEXSTORAGE3DMULTISAMPLEPROC
gl3wTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE1DPROC gl3wTexSubImage1D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE1DPROC
gl3wTexSubImage1D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE1DPROC gl3wTexSubImage1D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE1DPROC
gl3wTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE2DPROC gl3wTexSubImage2D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE2DPROC
gl3wTexSubImage2D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE2DPROC gl3wTexSubImage2D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE2DPROC
gl3wTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE3DPROC gl3wTexSubImage3D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE3DPROC
gl3wTexSubImage3D	lib/gl3w/GL/gl3w.c	/^PFNGLTEXSUBIMAGE3DPROC gl3wTexSubImage3D;$/;"	v	typeref:typename:PFNGLTEXSUBIMAGE3DPROC
gl3wTextureBufferRangeEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTUREBUFFERRANGEEXTPROC gl3wTextureBufferRangeEXT;$/;"	v	typeref:typename:PFNGLTEXTUREBUFFERRANGEEXTPROC
gl3wTextureBufferRangeEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTUREBUFFERRANGEEXTPROC gl3wTextureBufferRangeEXT;$/;"	v	typeref:typename:PFNGLTEXTUREBUFFERRANGEEXTPROC
gl3wTextureStorage1DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE1DEXTPROC gl3wTextureStorage1DEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE1DEXTPROC
gl3wTextureStorage1DEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE1DEXTPROC gl3wTextureStorage1DEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE1DEXTPROC
gl3wTextureStorage2DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DEXTPROC gl3wTextureStorage2DEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE2DEXTPROC
gl3wTextureStorage2DEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DEXTPROC gl3wTextureStorage2DEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE2DEXTPROC
gl3wTextureStorage2DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC gl3wTextureStorage2DMultisampleEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
gl3wTextureStorage2DMultisampleEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC gl3wTextureStorage2DMultisampleEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE2DMULTISAMPLEEXTPROC
gl3wTextureStorage3DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DEXTPROC gl3wTextureStorage3DEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE3DEXTPROC
gl3wTextureStorage3DEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DEXTPROC gl3wTextureStorage3DEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE3DEXTPROC
gl3wTextureStorage3DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC gl3wTextureStorage3DMultisampleEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
gl3wTextureStorage3DMultisampleEXT	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC gl3wTextureStorage3DMultisampleEXT;$/;"	v	typeref:typename:PFNGLTEXTURESTORAGE3DMULTISAMPLEEXTPROC
gl3wTextureView	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTEXTUREVIEWPROC gl3wTextureView;$/;"	v	typeref:typename:PFNGLTEXTUREVIEWPROC
gl3wTextureView	lib/gl3w/GL/gl3w.c	/^PFNGLTEXTUREVIEWPROC gl3wTextureView;$/;"	v	typeref:typename:PFNGLTEXTUREVIEWPROC
gl3wTransformFeedbackVaryings	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC gl3wTransformFeedbackVaryings;$/;"	v	typeref:typename:PFNGLTRANSFORMFEEDBACKVARYINGSPROC
gl3wTransformFeedbackVaryings	lib/gl3w/GL/gl3w.c	/^PFNGLTRANSFORMFEEDBACKVARYINGSPROC gl3wTransformFeedbackVaryings;$/;"	v	typeref:typename:PFNGLTRANSFORMFEEDBACKVARYINGSPROC
gl3wUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DPROC gl3wUniform1d;$/;"	v	typeref:typename:PFNGLUNIFORM1DPROC
gl3wUniform1d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DPROC gl3wUniform1d;$/;"	v	typeref:typename:PFNGLUNIFORM1DPROC
gl3wUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DVPROC gl3wUniform1dv;$/;"	v	typeref:typename:PFNGLUNIFORM1DVPROC
gl3wUniform1dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1DVPROC gl3wUniform1dv;$/;"	v	typeref:typename:PFNGLUNIFORM1DVPROC
gl3wUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FPROC gl3wUniform1f;$/;"	v	typeref:typename:PFNGLUNIFORM1FPROC
gl3wUniform1f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FPROC gl3wUniform1f;$/;"	v	typeref:typename:PFNGLUNIFORM1FPROC
gl3wUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FVPROC gl3wUniform1fv;$/;"	v	typeref:typename:PFNGLUNIFORM1FVPROC
gl3wUniform1fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1FVPROC gl3wUniform1fv;$/;"	v	typeref:typename:PFNGLUNIFORM1FVPROC
gl3wUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IPROC gl3wUniform1i;$/;"	v	typeref:typename:PFNGLUNIFORM1IPROC
gl3wUniform1i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IPROC gl3wUniform1i;$/;"	v	typeref:typename:PFNGLUNIFORM1IPROC
gl3wUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IVPROC gl3wUniform1iv;$/;"	v	typeref:typename:PFNGLUNIFORM1IVPROC
gl3wUniform1iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1IVPROC gl3wUniform1iv;$/;"	v	typeref:typename:PFNGLUNIFORM1IVPROC
gl3wUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIPROC gl3wUniform1ui;$/;"	v	typeref:typename:PFNGLUNIFORM1UIPROC
gl3wUniform1ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIPROC gl3wUniform1ui;$/;"	v	typeref:typename:PFNGLUNIFORM1UIPROC
gl3wUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIVPROC gl3wUniform1uiv;$/;"	v	typeref:typename:PFNGLUNIFORM1UIVPROC
gl3wUniform1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM1UIVPROC gl3wUniform1uiv;$/;"	v	typeref:typename:PFNGLUNIFORM1UIVPROC
gl3wUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DPROC gl3wUniform2d;$/;"	v	typeref:typename:PFNGLUNIFORM2DPROC
gl3wUniform2d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DPROC gl3wUniform2d;$/;"	v	typeref:typename:PFNGLUNIFORM2DPROC
gl3wUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DVPROC gl3wUniform2dv;$/;"	v	typeref:typename:PFNGLUNIFORM2DVPROC
gl3wUniform2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2DVPROC gl3wUniform2dv;$/;"	v	typeref:typename:PFNGLUNIFORM2DVPROC
gl3wUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FPROC gl3wUniform2f;$/;"	v	typeref:typename:PFNGLUNIFORM2FPROC
gl3wUniform2f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FPROC gl3wUniform2f;$/;"	v	typeref:typename:PFNGLUNIFORM2FPROC
gl3wUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FVPROC gl3wUniform2fv;$/;"	v	typeref:typename:PFNGLUNIFORM2FVPROC
gl3wUniform2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2FVPROC gl3wUniform2fv;$/;"	v	typeref:typename:PFNGLUNIFORM2FVPROC
gl3wUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IPROC gl3wUniform2i;$/;"	v	typeref:typename:PFNGLUNIFORM2IPROC
gl3wUniform2i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IPROC gl3wUniform2i;$/;"	v	typeref:typename:PFNGLUNIFORM2IPROC
gl3wUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IVPROC gl3wUniform2iv;$/;"	v	typeref:typename:PFNGLUNIFORM2IVPROC
gl3wUniform2iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2IVPROC gl3wUniform2iv;$/;"	v	typeref:typename:PFNGLUNIFORM2IVPROC
gl3wUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIPROC gl3wUniform2ui;$/;"	v	typeref:typename:PFNGLUNIFORM2UIPROC
gl3wUniform2ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIPROC gl3wUniform2ui;$/;"	v	typeref:typename:PFNGLUNIFORM2UIPROC
gl3wUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIVPROC gl3wUniform2uiv;$/;"	v	typeref:typename:PFNGLUNIFORM2UIVPROC
gl3wUniform2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM2UIVPROC gl3wUniform2uiv;$/;"	v	typeref:typename:PFNGLUNIFORM2UIVPROC
gl3wUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DPROC gl3wUniform3d;$/;"	v	typeref:typename:PFNGLUNIFORM3DPROC
gl3wUniform3d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DPROC gl3wUniform3d;$/;"	v	typeref:typename:PFNGLUNIFORM3DPROC
gl3wUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DVPROC gl3wUniform3dv;$/;"	v	typeref:typename:PFNGLUNIFORM3DVPROC
gl3wUniform3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3DVPROC gl3wUniform3dv;$/;"	v	typeref:typename:PFNGLUNIFORM3DVPROC
gl3wUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FPROC gl3wUniform3f;$/;"	v	typeref:typename:PFNGLUNIFORM3FPROC
gl3wUniform3f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FPROC gl3wUniform3f;$/;"	v	typeref:typename:PFNGLUNIFORM3FPROC
gl3wUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FVPROC gl3wUniform3fv;$/;"	v	typeref:typename:PFNGLUNIFORM3FVPROC
gl3wUniform3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3FVPROC gl3wUniform3fv;$/;"	v	typeref:typename:PFNGLUNIFORM3FVPROC
gl3wUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IPROC gl3wUniform3i;$/;"	v	typeref:typename:PFNGLUNIFORM3IPROC
gl3wUniform3i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IPROC gl3wUniform3i;$/;"	v	typeref:typename:PFNGLUNIFORM3IPROC
gl3wUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IVPROC gl3wUniform3iv;$/;"	v	typeref:typename:PFNGLUNIFORM3IVPROC
gl3wUniform3iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3IVPROC gl3wUniform3iv;$/;"	v	typeref:typename:PFNGLUNIFORM3IVPROC
gl3wUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIPROC gl3wUniform3ui;$/;"	v	typeref:typename:PFNGLUNIFORM3UIPROC
gl3wUniform3ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIPROC gl3wUniform3ui;$/;"	v	typeref:typename:PFNGLUNIFORM3UIPROC
gl3wUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIVPROC gl3wUniform3uiv;$/;"	v	typeref:typename:PFNGLUNIFORM3UIVPROC
gl3wUniform3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM3UIVPROC gl3wUniform3uiv;$/;"	v	typeref:typename:PFNGLUNIFORM3UIVPROC
gl3wUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DPROC gl3wUniform4d;$/;"	v	typeref:typename:PFNGLUNIFORM4DPROC
gl3wUniform4d	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DPROC gl3wUniform4d;$/;"	v	typeref:typename:PFNGLUNIFORM4DPROC
gl3wUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DVPROC gl3wUniform4dv;$/;"	v	typeref:typename:PFNGLUNIFORM4DVPROC
gl3wUniform4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4DVPROC gl3wUniform4dv;$/;"	v	typeref:typename:PFNGLUNIFORM4DVPROC
gl3wUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FPROC gl3wUniform4f;$/;"	v	typeref:typename:PFNGLUNIFORM4FPROC
gl3wUniform4f	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FPROC gl3wUniform4f;$/;"	v	typeref:typename:PFNGLUNIFORM4FPROC
gl3wUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FVPROC gl3wUniform4fv;$/;"	v	typeref:typename:PFNGLUNIFORM4FVPROC
gl3wUniform4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4FVPROC gl3wUniform4fv;$/;"	v	typeref:typename:PFNGLUNIFORM4FVPROC
gl3wUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IPROC gl3wUniform4i;$/;"	v	typeref:typename:PFNGLUNIFORM4IPROC
gl3wUniform4i	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IPROC gl3wUniform4i;$/;"	v	typeref:typename:PFNGLUNIFORM4IPROC
gl3wUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IVPROC gl3wUniform4iv;$/;"	v	typeref:typename:PFNGLUNIFORM4IVPROC
gl3wUniform4iv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4IVPROC gl3wUniform4iv;$/;"	v	typeref:typename:PFNGLUNIFORM4IVPROC
gl3wUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIPROC gl3wUniform4ui;$/;"	v	typeref:typename:PFNGLUNIFORM4UIPROC
gl3wUniform4ui	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIPROC gl3wUniform4ui;$/;"	v	typeref:typename:PFNGLUNIFORM4UIPROC
gl3wUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIVPROC gl3wUniform4uiv;$/;"	v	typeref:typename:PFNGLUNIFORM4UIVPROC
gl3wUniform4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORM4UIVPROC gl3wUniform4uiv;$/;"	v	typeref:typename:PFNGLUNIFORM4UIVPROC
gl3wUniformBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMBLOCKBINDINGPROC gl3wUniformBlockBinding;$/;"	v	typeref:typename:PFNGLUNIFORMBLOCKBINDINGPROC
gl3wUniformBlockBinding	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMBLOCKBINDINGPROC gl3wUniformBlockBinding;$/;"	v	typeref:typename:PFNGLUNIFORMBLOCKBINDINGPROC
gl3wUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2DVPROC gl3wUniformMatrix2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2DVPROC
gl3wUniformMatrix2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2DVPROC gl3wUniformMatrix2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2DVPROC
gl3wUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2FVPROC gl3wUniformMatrix2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2FVPROC
gl3wUniformMatrix2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2FVPROC gl3wUniformMatrix2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2FVPROC
gl3wUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3DVPROC gl3wUniformMatrix2x3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X3DVPROC
gl3wUniformMatrix2x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3DVPROC gl3wUniformMatrix2x3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X3DVPROC
gl3wUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3FVPROC gl3wUniformMatrix2x3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X3FVPROC
gl3wUniformMatrix2x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X3FVPROC gl3wUniformMatrix2x3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X3FVPROC
gl3wUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4DVPROC gl3wUniformMatrix2x4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X4DVPROC
gl3wUniformMatrix2x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4DVPROC gl3wUniformMatrix2x4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X4DVPROC
gl3wUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4FVPROC gl3wUniformMatrix2x4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X4FVPROC
gl3wUniformMatrix2x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX2X4FVPROC gl3wUniformMatrix2x4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX2X4FVPROC
gl3wUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3DVPROC gl3wUniformMatrix3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3DVPROC
gl3wUniformMatrix3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3DVPROC gl3wUniformMatrix3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3DVPROC
gl3wUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3FVPROC gl3wUniformMatrix3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3FVPROC
gl3wUniformMatrix3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3FVPROC gl3wUniformMatrix3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3FVPROC
gl3wUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2DVPROC gl3wUniformMatrix3x2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X2DVPROC
gl3wUniformMatrix3x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2DVPROC gl3wUniformMatrix3x2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X2DVPROC
gl3wUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2FVPROC gl3wUniformMatrix3x2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X2FVPROC
gl3wUniformMatrix3x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X2FVPROC gl3wUniformMatrix3x2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X2FVPROC
gl3wUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4DVPROC gl3wUniformMatrix3x4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X4DVPROC
gl3wUniformMatrix3x4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4DVPROC gl3wUniformMatrix3x4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X4DVPROC
gl3wUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4FVPROC gl3wUniformMatrix3x4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X4FVPROC
gl3wUniformMatrix3x4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX3X4FVPROC gl3wUniformMatrix3x4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX3X4FVPROC
gl3wUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4DVPROC gl3wUniformMatrix4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4DVPROC
gl3wUniformMatrix4dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4DVPROC gl3wUniformMatrix4dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4DVPROC
gl3wUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4FVPROC gl3wUniformMatrix4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4FVPROC
gl3wUniformMatrix4fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4FVPROC gl3wUniformMatrix4fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4FVPROC
gl3wUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2DVPROC gl3wUniformMatrix4x2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X2DVPROC
gl3wUniformMatrix4x2dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2DVPROC gl3wUniformMatrix4x2dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X2DVPROC
gl3wUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2FVPROC gl3wUniformMatrix4x2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X2FVPROC
gl3wUniformMatrix4x2fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X2FVPROC gl3wUniformMatrix4x2fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X2FVPROC
gl3wUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3DVPROC gl3wUniformMatrix4x3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X3DVPROC
gl3wUniformMatrix4x3dv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3DVPROC gl3wUniformMatrix4x3dv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X3DVPROC
gl3wUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3FVPROC gl3wUniformMatrix4x3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X3FVPROC
gl3wUniformMatrix4x3fv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMMATRIX4X3FVPROC gl3wUniformMatrix4x3fv;$/;"	v	typeref:typename:PFNGLUNIFORMMATRIX4X3FVPROC
gl3wUniformSubroutinesuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNIFORMSUBROUTINESUIVPROC gl3wUniformSubroutinesuiv;$/;"	v	typeref:typename:PFNGLUNIFORMSUBROUTINESUIVPROC
gl3wUniformSubroutinesuiv	lib/gl3w/GL/gl3w.c	/^PFNGLUNIFORMSUBROUTINESUIVPROC gl3wUniformSubroutinesuiv;$/;"	v	typeref:typename:PFNGLUNIFORMSUBROUTINESUIVPROC
gl3wUnmapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUNMAPBUFFERPROC gl3wUnmapBuffer;$/;"	v	typeref:typename:PFNGLUNMAPBUFFERPROC
gl3wUnmapBuffer	lib/gl3w/GL/gl3w.c	/^PFNGLUNMAPBUFFERPROC gl3wUnmapBuffer;$/;"	v	typeref:typename:PFNGLUNMAPBUFFERPROC
gl3wUseProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMPROC gl3wUseProgram;$/;"	v	typeref:typename:PFNGLUSEPROGRAMPROC
gl3wUseProgram	lib/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMPROC gl3wUseProgram;$/;"	v	typeref:typename:PFNGLUSEPROGRAMPROC
gl3wUseProgramStages	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMSTAGESPROC gl3wUseProgramStages;$/;"	v	typeref:typename:PFNGLUSEPROGRAMSTAGESPROC
gl3wUseProgramStages	lib/gl3w/GL/gl3w.c	/^PFNGLUSEPROGRAMSTAGESPROC gl3wUseProgramStages;$/;"	v	typeref:typename:PFNGLUSEPROGRAMSTAGESPROC
gl3wValidateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPROC gl3wValidateProgram;$/;"	v	typeref:typename:PFNGLVALIDATEPROGRAMPROC
gl3wValidateProgram	lib/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPROC gl3wValidateProgram;$/;"	v	typeref:typename:PFNGLVALIDATEPROGRAMPROC
gl3wValidateProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPIPELINEPROC gl3wValidateProgramPipeline;$/;"	v	typeref:typename:PFNGLVALIDATEPROGRAMPIPELINEPROC
gl3wValidateProgramPipeline	lib/gl3w/GL/gl3w.c	/^PFNGLVALIDATEPROGRAMPIPELINEPROC gl3wValidateProgramPipeline;$/;"	v	typeref:typename:PFNGLVALIDATEPROGRAMPIPELINEPROC
gl3wVertexArrayBindVertexBufferEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC gl3wVertexArrayBindVertexBufferEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
gl3wVertexArrayBindVertexBufferEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC gl3wVertexArrayBindVertexBufferEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYBINDVERTEXBUFFEREXTPROC
gl3wVertexArrayVertexAttribBindingEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC gl3wVertexArrayVertexAttribBindingEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
gl3wVertexArrayVertexAttribBindingEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC gl3wVertexArrayVertexAttribBindingEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBBINDINGEXTPROC
gl3wVertexArrayVertexAttribFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC gl3wVertexArrayVertexAttribFormatEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
gl3wVertexArrayVertexAttribFormatEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC gl3wVertexArrayVertexAttribFormatEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBFORMATEXTPROC
gl3wVertexArrayVertexAttribIFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC gl3wVertexArrayVertexAttribIFormatEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
gl3wVertexArrayVertexAttribIFormatEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC gl3wVertexArrayVertexAttribIFormatEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBIFORMATEXTPROC
gl3wVertexArrayVertexAttribLFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC gl3wVertexArrayVertexAttribLFormatEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
gl3wVertexArrayVertexAttribLFormatEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC gl3wVertexArrayVertexAttribLFormatEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXATTRIBLFORMATEXTPROC
gl3wVertexArrayVertexBindingDivisorEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC gl3wVertexArrayVertexBindingDivisorEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
gl3wVertexArrayVertexBindingDivisorEXT	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC gl3wVertexArrayVertexBindingDivisorEXT;$/;"	v	typeref:typename:PFNGLVERTEXARRAYVERTEXBINDINGDIVISOREXTPROC
gl3wVertexAttrib1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DPROC gl3wVertexAttrib1d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DPROC
gl3wVertexAttrib1d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DPROC gl3wVertexAttrib1d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DPROC
gl3wVertexAttrib1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DVPROC gl3wVertexAttrib1dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DVPROC
gl3wVertexAttrib1dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1DVPROC gl3wVertexAttrib1dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1DVPROC
gl3wVertexAttrib1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FPROC gl3wVertexAttrib1f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FPROC
gl3wVertexAttrib1f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FPROC gl3wVertexAttrib1f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FPROC
gl3wVertexAttrib1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FVPROC gl3wVertexAttrib1fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FVPROC
gl3wVertexAttrib1fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1FVPROC gl3wVertexAttrib1fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1FVPROC
gl3wVertexAttrib1s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SPROC gl3wVertexAttrib1s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SPROC
gl3wVertexAttrib1s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SPROC gl3wVertexAttrib1s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SPROC
gl3wVertexAttrib1sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SVPROC gl3wVertexAttrib1sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SVPROC
gl3wVertexAttrib1sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB1SVPROC gl3wVertexAttrib1sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB1SVPROC
gl3wVertexAttrib2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DPROC gl3wVertexAttrib2d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DPROC
gl3wVertexAttrib2d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DPROC gl3wVertexAttrib2d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DPROC
gl3wVertexAttrib2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DVPROC gl3wVertexAttrib2dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DVPROC
gl3wVertexAttrib2dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2DVPROC gl3wVertexAttrib2dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2DVPROC
gl3wVertexAttrib2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FPROC gl3wVertexAttrib2f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FPROC
gl3wVertexAttrib2f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FPROC gl3wVertexAttrib2f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FPROC
gl3wVertexAttrib2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FVPROC gl3wVertexAttrib2fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FVPROC
gl3wVertexAttrib2fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2FVPROC gl3wVertexAttrib2fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2FVPROC
gl3wVertexAttrib2s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SPROC gl3wVertexAttrib2s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SPROC
gl3wVertexAttrib2s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SPROC gl3wVertexAttrib2s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SPROC
gl3wVertexAttrib2sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SVPROC gl3wVertexAttrib2sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SVPROC
gl3wVertexAttrib2sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB2SVPROC gl3wVertexAttrib2sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB2SVPROC
gl3wVertexAttrib3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DPROC gl3wVertexAttrib3d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DPROC
gl3wVertexAttrib3d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DPROC gl3wVertexAttrib3d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DPROC
gl3wVertexAttrib3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DVPROC gl3wVertexAttrib3dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DVPROC
gl3wVertexAttrib3dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3DVPROC gl3wVertexAttrib3dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3DVPROC
gl3wVertexAttrib3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FPROC gl3wVertexAttrib3f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FPROC
gl3wVertexAttrib3f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FPROC gl3wVertexAttrib3f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FPROC
gl3wVertexAttrib3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FVPROC gl3wVertexAttrib3fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FVPROC
gl3wVertexAttrib3fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3FVPROC gl3wVertexAttrib3fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3FVPROC
gl3wVertexAttrib3s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SPROC gl3wVertexAttrib3s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SPROC
gl3wVertexAttrib3s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SPROC gl3wVertexAttrib3s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SPROC
gl3wVertexAttrib3sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SVPROC gl3wVertexAttrib3sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SVPROC
gl3wVertexAttrib3sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB3SVPROC gl3wVertexAttrib3sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB3SVPROC
gl3wVertexAttrib4Nbv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NBVPROC gl3wVertexAttrib4Nbv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NBVPROC
gl3wVertexAttrib4Nbv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NBVPROC gl3wVertexAttrib4Nbv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NBVPROC
gl3wVertexAttrib4Niv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NIVPROC gl3wVertexAttrib4Niv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NIVPROC
gl3wVertexAttrib4Niv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NIVPROC gl3wVertexAttrib4Niv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NIVPROC
gl3wVertexAttrib4Nsv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NSVPROC gl3wVertexAttrib4Nsv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NSVPROC
gl3wVertexAttrib4Nsv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NSVPROC gl3wVertexAttrib4Nsv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NSVPROC
gl3wVertexAttrib4Nub	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBPROC gl3wVertexAttrib4Nub;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBPROC
gl3wVertexAttrib4Nub	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBPROC gl3wVertexAttrib4Nub;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBPROC
gl3wVertexAttrib4Nubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBVPROC gl3wVertexAttrib4Nubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBVPROC
gl3wVertexAttrib4Nubv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUBVPROC gl3wVertexAttrib4Nubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUBVPROC
gl3wVertexAttrib4Nuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUIVPROC gl3wVertexAttrib4Nuiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUIVPROC
gl3wVertexAttrib4Nuiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUIVPROC gl3wVertexAttrib4Nuiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUIVPROC
gl3wVertexAttrib4Nusv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUSVPROC gl3wVertexAttrib4Nusv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUSVPROC
gl3wVertexAttrib4Nusv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4NUSVPROC gl3wVertexAttrib4Nusv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4NUSVPROC
gl3wVertexAttrib4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4BVPROC gl3wVertexAttrib4bv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4BVPROC
gl3wVertexAttrib4bv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4BVPROC gl3wVertexAttrib4bv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4BVPROC
gl3wVertexAttrib4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DPROC gl3wVertexAttrib4d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DPROC
gl3wVertexAttrib4d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DPROC gl3wVertexAttrib4d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DPROC
gl3wVertexAttrib4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DVPROC gl3wVertexAttrib4dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DVPROC
gl3wVertexAttrib4dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4DVPROC gl3wVertexAttrib4dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4DVPROC
gl3wVertexAttrib4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FPROC gl3wVertexAttrib4f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FPROC
gl3wVertexAttrib4f	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FPROC gl3wVertexAttrib4f;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FPROC
gl3wVertexAttrib4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FVPROC gl3wVertexAttrib4fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FVPROC
gl3wVertexAttrib4fv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4FVPROC gl3wVertexAttrib4fv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4FVPROC
gl3wVertexAttrib4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4IVPROC gl3wVertexAttrib4iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4IVPROC
gl3wVertexAttrib4iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4IVPROC gl3wVertexAttrib4iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4IVPROC
gl3wVertexAttrib4s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SPROC gl3wVertexAttrib4s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SPROC
gl3wVertexAttrib4s	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SPROC gl3wVertexAttrib4s;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SPROC
gl3wVertexAttrib4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SVPROC gl3wVertexAttrib4sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SVPROC
gl3wVertexAttrib4sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4SVPROC gl3wVertexAttrib4sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4SVPROC
gl3wVertexAttrib4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UBVPROC gl3wVertexAttrib4ubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UBVPROC
gl3wVertexAttrib4ubv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UBVPROC gl3wVertexAttrib4ubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UBVPROC
gl3wVertexAttrib4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UIVPROC gl3wVertexAttrib4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UIVPROC
gl3wVertexAttrib4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4UIVPROC gl3wVertexAttrib4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4UIVPROC
gl3wVertexAttrib4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4USVPROC gl3wVertexAttrib4usv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4USVPROC
gl3wVertexAttrib4usv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIB4USVPROC gl3wVertexAttrib4usv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIB4USVPROC
gl3wVertexAttribBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBBINDINGPROC gl3wVertexAttribBinding;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBBINDINGPROC
gl3wVertexAttribBinding	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBBINDINGPROC gl3wVertexAttribBinding;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBBINDINGPROC
gl3wVertexAttribDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBDIVISORPROC gl3wVertexAttribDivisor;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBDIVISORPROC
gl3wVertexAttribDivisor	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBDIVISORPROC gl3wVertexAttribDivisor;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBDIVISORPROC
gl3wVertexAttribFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBFORMATPROC gl3wVertexAttribFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBFORMATPROC
gl3wVertexAttribFormat	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBFORMATPROC gl3wVertexAttribFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBFORMATPROC
gl3wVertexAttribI1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IPROC gl3wVertexAttribI1i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IPROC
gl3wVertexAttribI1i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IPROC gl3wVertexAttribI1i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IPROC
gl3wVertexAttribI1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IVPROC gl3wVertexAttribI1iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IVPROC
gl3wVertexAttribI1iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1IVPROC gl3wVertexAttribI1iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1IVPROC
gl3wVertexAttribI1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIPROC gl3wVertexAttribI1ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIPROC
gl3wVertexAttribI1ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIPROC gl3wVertexAttribI1ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIPROC
gl3wVertexAttribI1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIVPROC gl3wVertexAttribI1uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIVPROC
gl3wVertexAttribI1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI1UIVPROC gl3wVertexAttribI1uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI1UIVPROC
gl3wVertexAttribI2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IPROC gl3wVertexAttribI2i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IPROC
gl3wVertexAttribI2i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IPROC gl3wVertexAttribI2i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IPROC
gl3wVertexAttribI2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IVPROC gl3wVertexAttribI2iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IVPROC
gl3wVertexAttribI2iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2IVPROC gl3wVertexAttribI2iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2IVPROC
gl3wVertexAttribI2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIPROC gl3wVertexAttribI2ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIPROC
gl3wVertexAttribI2ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIPROC gl3wVertexAttribI2ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIPROC
gl3wVertexAttribI2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIVPROC gl3wVertexAttribI2uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIVPROC
gl3wVertexAttribI2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI2UIVPROC gl3wVertexAttribI2uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI2UIVPROC
gl3wVertexAttribI3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IPROC gl3wVertexAttribI3i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IPROC
gl3wVertexAttribI3i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IPROC gl3wVertexAttribI3i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IPROC
gl3wVertexAttribI3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IVPROC gl3wVertexAttribI3iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IVPROC
gl3wVertexAttribI3iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3IVPROC gl3wVertexAttribI3iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3IVPROC
gl3wVertexAttribI3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIPROC gl3wVertexAttribI3ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIPROC
gl3wVertexAttribI3ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIPROC gl3wVertexAttribI3ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIPROC
gl3wVertexAttribI3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIVPROC gl3wVertexAttribI3uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIVPROC
gl3wVertexAttribI3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI3UIVPROC gl3wVertexAttribI3uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI3UIVPROC
gl3wVertexAttribI4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4BVPROC gl3wVertexAttribI4bv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4BVPROC
gl3wVertexAttribI4bv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4BVPROC gl3wVertexAttribI4bv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4BVPROC
gl3wVertexAttribI4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IPROC gl3wVertexAttribI4i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IPROC
gl3wVertexAttribI4i	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IPROC gl3wVertexAttribI4i;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IPROC
gl3wVertexAttribI4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IVPROC gl3wVertexAttribI4iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IVPROC
gl3wVertexAttribI4iv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4IVPROC gl3wVertexAttribI4iv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4IVPROC
gl3wVertexAttribI4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4SVPROC gl3wVertexAttribI4sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4SVPROC
gl3wVertexAttribI4sv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4SVPROC gl3wVertexAttribI4sv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4SVPROC
gl3wVertexAttribI4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UBVPROC gl3wVertexAttribI4ubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UBVPROC
gl3wVertexAttribI4ubv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UBVPROC gl3wVertexAttribI4ubv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UBVPROC
gl3wVertexAttribI4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIPROC gl3wVertexAttribI4ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIPROC
gl3wVertexAttribI4ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIPROC gl3wVertexAttribI4ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIPROC
gl3wVertexAttribI4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIVPROC gl3wVertexAttribI4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIVPROC
gl3wVertexAttribI4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4UIVPROC gl3wVertexAttribI4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4UIVPROC
gl3wVertexAttribI4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4USVPROC gl3wVertexAttribI4usv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4USVPROC
gl3wVertexAttribI4usv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBI4USVPROC gl3wVertexAttribI4usv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBI4USVPROC
gl3wVertexAttribIFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIFORMATPROC gl3wVertexAttribIFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBIFORMATPROC
gl3wVertexAttribIFormat	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIFORMATPROC gl3wVertexAttribIFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBIFORMATPROC
gl3wVertexAttribIPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIPOINTERPROC gl3wVertexAttribIPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBIPOINTERPROC
gl3wVertexAttribIPointer	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBIPOINTERPROC gl3wVertexAttribIPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBIPOINTERPROC
gl3wVertexAttribL1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DPROC gl3wVertexAttribL1d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1DPROC
gl3wVertexAttribL1d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DPROC gl3wVertexAttribL1d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1DPROC
gl3wVertexAttribL1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DVPROC gl3wVertexAttribL1dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1DVPROC
gl3wVertexAttribL1dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL1DVPROC gl3wVertexAttribL1dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL1DVPROC
gl3wVertexAttribL2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DPROC gl3wVertexAttribL2d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL2DPROC
gl3wVertexAttribL2d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DPROC gl3wVertexAttribL2d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL2DPROC
gl3wVertexAttribL2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DVPROC gl3wVertexAttribL2dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL2DVPROC
gl3wVertexAttribL2dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL2DVPROC gl3wVertexAttribL2dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL2DVPROC
gl3wVertexAttribL3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DPROC gl3wVertexAttribL3d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL3DPROC
gl3wVertexAttribL3d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DPROC gl3wVertexAttribL3d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL3DPROC
gl3wVertexAttribL3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DVPROC gl3wVertexAttribL3dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL3DVPROC
gl3wVertexAttribL3dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL3DVPROC gl3wVertexAttribL3dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL3DVPROC
gl3wVertexAttribL4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DPROC gl3wVertexAttribL4d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL4DPROC
gl3wVertexAttribL4d	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DPROC gl3wVertexAttribL4d;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL4DPROC
gl3wVertexAttribL4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DVPROC gl3wVertexAttribL4dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL4DVPROC
gl3wVertexAttribL4dv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBL4DVPROC gl3wVertexAttribL4dv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBL4DVPROC
gl3wVertexAttribLFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLFORMATPROC gl3wVertexAttribLFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBLFORMATPROC
gl3wVertexAttribLFormat	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLFORMATPROC gl3wVertexAttribLFormat;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBLFORMATPROC
gl3wVertexAttribLPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLPOINTERPROC gl3wVertexAttribLPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBLPOINTERPROC
gl3wVertexAttribLPointer	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBLPOINTERPROC gl3wVertexAttribLPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBLPOINTERPROC
gl3wVertexAttribP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIPROC gl3wVertexAttribP1ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIPROC
gl3wVertexAttribP1ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIPROC gl3wVertexAttribP1ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIPROC
gl3wVertexAttribP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIVPROC gl3wVertexAttribP1uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIVPROC
gl3wVertexAttribP1uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP1UIVPROC gl3wVertexAttribP1uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP1UIVPROC
gl3wVertexAttribP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIPROC gl3wVertexAttribP2ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIPROC
gl3wVertexAttribP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIPROC gl3wVertexAttribP2ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIPROC
gl3wVertexAttribP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIVPROC gl3wVertexAttribP2uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIVPROC
gl3wVertexAttribP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP2UIVPROC gl3wVertexAttribP2uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP2UIVPROC
gl3wVertexAttribP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIPROC gl3wVertexAttribP3ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIPROC
gl3wVertexAttribP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIPROC gl3wVertexAttribP3ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIPROC
gl3wVertexAttribP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIVPROC gl3wVertexAttribP3uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIVPROC
gl3wVertexAttribP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP3UIVPROC gl3wVertexAttribP3uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP3UIVPROC
gl3wVertexAttribP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIPROC gl3wVertexAttribP4ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIPROC
gl3wVertexAttribP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIPROC gl3wVertexAttribP4ui;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIPROC
gl3wVertexAttribP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIVPROC gl3wVertexAttribP4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIVPROC
gl3wVertexAttribP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBP4UIVPROC gl3wVertexAttribP4uiv;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBP4UIVPROC
gl3wVertexAttribPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBPOINTERPROC gl3wVertexAttribPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBPOINTERPROC
gl3wVertexAttribPointer	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXATTRIBPOINTERPROC gl3wVertexAttribPointer;$/;"	v	typeref:typename:PFNGLVERTEXATTRIBPOINTERPROC
gl3wVertexBindingDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXBINDINGDIVISORPROC gl3wVertexBindingDivisor;$/;"	v	typeref:typename:PFNGLVERTEXBINDINGDIVISORPROC
gl3wVertexBindingDivisor	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXBINDINGDIVISORPROC gl3wVertexBindingDivisor;$/;"	v	typeref:typename:PFNGLVERTEXBINDINGDIVISORPROC
gl3wVertexP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIPROC gl3wVertexP2ui;$/;"	v	typeref:typename:PFNGLVERTEXP2UIPROC
gl3wVertexP2ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIPROC gl3wVertexP2ui;$/;"	v	typeref:typename:PFNGLVERTEXP2UIPROC
gl3wVertexP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIVPROC gl3wVertexP2uiv;$/;"	v	typeref:typename:PFNGLVERTEXP2UIVPROC
gl3wVertexP2uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP2UIVPROC gl3wVertexP2uiv;$/;"	v	typeref:typename:PFNGLVERTEXP2UIVPROC
gl3wVertexP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIPROC gl3wVertexP3ui;$/;"	v	typeref:typename:PFNGLVERTEXP3UIPROC
gl3wVertexP3ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIPROC gl3wVertexP3ui;$/;"	v	typeref:typename:PFNGLVERTEXP3UIPROC
gl3wVertexP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIVPROC gl3wVertexP3uiv;$/;"	v	typeref:typename:PFNGLVERTEXP3UIVPROC
gl3wVertexP3uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP3UIVPROC gl3wVertexP3uiv;$/;"	v	typeref:typename:PFNGLVERTEXP3UIVPROC
gl3wVertexP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIPROC gl3wVertexP4ui;$/;"	v	typeref:typename:PFNGLVERTEXP4UIPROC
gl3wVertexP4ui	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIPROC gl3wVertexP4ui;$/;"	v	typeref:typename:PFNGLVERTEXP4UIPROC
gl3wVertexP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIVPROC gl3wVertexP4uiv;$/;"	v	typeref:typename:PFNGLVERTEXP4UIVPROC
gl3wVertexP4uiv	lib/gl3w/GL/gl3w.c	/^PFNGLVERTEXP4UIVPROC gl3wVertexP4uiv;$/;"	v	typeref:typename:PFNGLVERTEXP4UIVPROC
gl3wViewport	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTPROC gl3wViewport;$/;"	v	typeref:typename:PFNGLVIEWPORTPROC
gl3wViewport	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTPROC gl3wViewport;$/;"	v	typeref:typename:PFNGLVIEWPORTPROC
gl3wViewportArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTARRAYVPROC gl3wViewportArrayv;$/;"	v	typeref:typename:PFNGLVIEWPORTARRAYVPROC
gl3wViewportArrayv	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTARRAYVPROC gl3wViewportArrayv;$/;"	v	typeref:typename:PFNGLVIEWPORTARRAYVPROC
gl3wViewportIndexedf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFPROC gl3wViewportIndexedf;$/;"	v	typeref:typename:PFNGLVIEWPORTINDEXEDFPROC
gl3wViewportIndexedf	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFPROC gl3wViewportIndexedf;$/;"	v	typeref:typename:PFNGLVIEWPORTINDEXEDFPROC
gl3wViewportIndexedfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFVPROC gl3wViewportIndexedfv;$/;"	v	typeref:typename:PFNGLVIEWPORTINDEXEDFVPROC
gl3wViewportIndexedfv	lib/gl3w/GL/gl3w.c	/^PFNGLVIEWPORTINDEXEDFVPROC gl3wViewportIndexedfv;$/;"	v	typeref:typename:PFNGLVIEWPORTINDEXEDFVPROC
gl3wWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^PFNGLWAITSYNCPROC gl3wWaitSync;$/;"	v	typeref:typename:PFNGLWAITSYNCPROC
gl3wWaitSync	lib/gl3w/GL/gl3w.c	/^PFNGLWAITSYNCPROC gl3wWaitSync;$/;"	v	typeref:typename:PFNGLWAITSYNCPROC
glActiveShaderProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glActiveShaderProgram	/;"	d
glActiveShaderProgram	lib/gl3w/GL/gl3w.h	/^#define glActiveShaderProgram	/;"	d
glActiveTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glActiveTexture	/;"	d
glActiveTexture	lib/gl3w/GL/gl3w.h	/^#define glActiveTexture	/;"	d
glAttachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glAttachShader	/;"	d
glAttachShader	lib/gl3w/GL/gl3w.h	/^#define glAttachShader	/;"	d
glAttachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglAttachShader glAttachShader;$/;"	v	typeref:typename:nkglAttachShader
glBeginConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBeginConditionalRender	/;"	d
glBeginConditionalRender	lib/gl3w/GL/gl3w.h	/^#define glBeginConditionalRender	/;"	d
glBeginQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBeginQuery	/;"	d
glBeginQuery	lib/gl3w/GL/gl3w.h	/^#define glBeginQuery	/;"	d
glBeginQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBeginQueryIndexed	/;"	d
glBeginQueryIndexed	lib/gl3w/GL/gl3w.h	/^#define glBeginQueryIndexed	/;"	d
glBeginTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBeginTransformFeedback	/;"	d
glBeginTransformFeedback	lib/gl3w/GL/gl3w.h	/^#define glBeginTransformFeedback	/;"	d
glBindAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindAttribLocation	/;"	d
glBindAttribLocation	lib/gl3w/GL/gl3w.h	/^#define glBindAttribLocation	/;"	d
glBindBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindBuffer	/;"	d
glBindBuffer	lib/gl3w/GL/gl3w.h	/^#define glBindBuffer	/;"	d
glBindBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBindBuffer glBindBuffer;$/;"	v	typeref:typename:nkglBindBuffer
glBindBufferBase	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindBufferBase	/;"	d
glBindBufferBase	lib/gl3w/GL/gl3w.h	/^#define glBindBufferBase	/;"	d
glBindBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindBufferRange	/;"	d
glBindBufferRange	lib/gl3w/GL/gl3w.h	/^#define glBindBufferRange	/;"	d
glBindFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindFragDataLocation	/;"	d
glBindFragDataLocation	lib/gl3w/GL/gl3w.h	/^#define glBindFragDataLocation	/;"	d
glBindFragDataLocationIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindFragDataLocationIndexed	/;"	d
glBindFragDataLocationIndexed	lib/gl3w/GL/gl3w.h	/^#define glBindFragDataLocationIndexed	/;"	d
glBindFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindFramebuffer	/;"	d
glBindFramebuffer	lib/gl3w/GL/gl3w.h	/^#define glBindFramebuffer	/;"	d
glBindImageTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindImageTexture	/;"	d
glBindImageTexture	lib/gl3w/GL/gl3w.h	/^#define glBindImageTexture	/;"	d
glBindProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindProgramPipeline	/;"	d
glBindProgramPipeline	lib/gl3w/GL/gl3w.h	/^#define glBindProgramPipeline	/;"	d
glBindRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindRenderbuffer	/;"	d
glBindRenderbuffer	lib/gl3w/GL/gl3w.h	/^#define glBindRenderbuffer	/;"	d
glBindSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindSampler	/;"	d
glBindSampler	lib/gl3w/GL/gl3w.h	/^#define glBindSampler	/;"	d
glBindTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindTexture	/;"	d
glBindTexture	lib/gl3w/GL/gl3w.h	/^#define glBindTexture	/;"	d
glBindTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindTransformFeedback	/;"	d
glBindTransformFeedback	lib/gl3w/GL/gl3w.h	/^#define glBindTransformFeedback	/;"	d
glBindVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindVertexArray	/;"	d
glBindVertexArray	lib/gl3w/GL/gl3w.h	/^#define glBindVertexArray	/;"	d
glBindVertexArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBindVertexArray glBindVertexArray;$/;"	v	typeref:typename:nkglBindVertexArray
glBindVertexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBindVertexBuffer	/;"	d
glBindVertexBuffer	lib/gl3w/GL/gl3w.h	/^#define glBindVertexBuffer	/;"	d
glBlendColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendColor	/;"	d
glBlendColor	lib/gl3w/GL/gl3w.h	/^#define glBlendColor	/;"	d
glBlendEquation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendEquation	/;"	d
glBlendEquation	lib/gl3w/GL/gl3w.h	/^#define glBlendEquation	/;"	d
glBlendEquationSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendEquationSeparate	/;"	d
glBlendEquationSeparate	lib/gl3w/GL/gl3w.h	/^#define glBlendEquationSeparate	/;"	d
glBlendEquationSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendEquationSeparatei	/;"	d
glBlendEquationSeparatei	lib/gl3w/GL/gl3w.h	/^#define glBlendEquationSeparatei	/;"	d
glBlendEquationSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendEquationSeparateiARB	/;"	d
glBlendEquationSeparateiARB	lib/gl3w/GL/gl3w.h	/^#define glBlendEquationSeparateiARB	/;"	d
glBlendEquationi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendEquationi	/;"	d
glBlendEquationi	lib/gl3w/GL/gl3w.h	/^#define glBlendEquationi	/;"	d
glBlendEquationiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendEquationiARB	/;"	d
glBlendEquationiARB	lib/gl3w/GL/gl3w.h	/^#define glBlendEquationiARB	/;"	d
glBlendFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendFunc	/;"	d
glBlendFunc	lib/gl3w/GL/gl3w.h	/^#define glBlendFunc	/;"	d
glBlendFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendFuncSeparate	/;"	d
glBlendFuncSeparate	lib/gl3w/GL/gl3w.h	/^#define glBlendFuncSeparate	/;"	d
glBlendFuncSeparatei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendFuncSeparatei	/;"	d
glBlendFuncSeparatei	lib/gl3w/GL/gl3w.h	/^#define glBlendFuncSeparatei	/;"	d
glBlendFuncSeparateiARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendFuncSeparateiARB	/;"	d
glBlendFuncSeparateiARB	lib/gl3w/GL/gl3w.h	/^#define glBlendFuncSeparateiARB	/;"	d
glBlendFunci	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendFunci	/;"	d
glBlendFunci	lib/gl3w/GL/gl3w.h	/^#define glBlendFunci	/;"	d
glBlendFunciARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlendFunciARB	/;"	d
glBlendFunciARB	lib/gl3w/GL/gl3w.h	/^#define glBlendFunciARB	/;"	d
glBlitFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBlitFramebuffer	/;"	d
glBlitFramebuffer	lib/gl3w/GL/gl3w.h	/^#define glBlitFramebuffer	/;"	d
glBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBufferData	/;"	d
glBufferData	lib/gl3w/GL/gl3w.h	/^#define glBufferData	/;"	d
glBufferData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBufferData glBufferData;$/;"	v	typeref:typename:nkglBufferData
glBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glBufferSubData	/;"	d
glBufferSubData	lib/gl3w/GL/gl3w.h	/^#define glBufferSubData	/;"	d
glBufferSubData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglBufferSubData glBufferSubData;$/;"	v	typeref:typename:nkglBufferSubData
glCheckFramebufferStatus	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCheckFramebufferStatus	/;"	d
glCheckFramebufferStatus	lib/gl3w/GL/gl3w.h	/^#define glCheckFramebufferStatus	/;"	d
glClampColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClampColor	/;"	d
glClampColor	lib/gl3w/GL/gl3w.h	/^#define glClampColor	/;"	d
glClear	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClear	/;"	d
glClear	lib/gl3w/GL/gl3w.h	/^#define glClear	/;"	d
glClearBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearBufferData	/;"	d
glClearBufferData	lib/gl3w/GL/gl3w.h	/^#define glClearBufferData	/;"	d
glClearBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearBufferSubData	/;"	d
glClearBufferSubData	lib/gl3w/GL/gl3w.h	/^#define glClearBufferSubData	/;"	d
glClearBufferfi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearBufferfi	/;"	d
glClearBufferfi	lib/gl3w/GL/gl3w.h	/^#define glClearBufferfi	/;"	d
glClearBufferfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearBufferfv	/;"	d
glClearBufferfv	lib/gl3w/GL/gl3w.h	/^#define glClearBufferfv	/;"	d
glClearBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearBufferiv	/;"	d
glClearBufferiv	lib/gl3w/GL/gl3w.h	/^#define glClearBufferiv	/;"	d
glClearBufferuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearBufferuiv	/;"	d
glClearBufferuiv	lib/gl3w/GL/gl3w.h	/^#define glClearBufferuiv	/;"	d
glClearColor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearColor	/;"	d
glClearColor	lib/gl3w/GL/gl3w.h	/^#define glClearColor	/;"	d
glClearDepth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearDepth	/;"	d
glClearDepth	lib/gl3w/GL/gl3w.h	/^#define glClearDepth	/;"	d
glClearDepthf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearDepthf	/;"	d
glClearDepthf	lib/gl3w/GL/gl3w.h	/^#define glClearDepthf	/;"	d
glClearNamedBufferDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearNamedBufferDataEXT	/;"	d
glClearNamedBufferDataEXT	lib/gl3w/GL/gl3w.h	/^#define glClearNamedBufferDataEXT	/;"	d
glClearNamedBufferSubDataEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearNamedBufferSubDataEXT	/;"	d
glClearNamedBufferSubDataEXT	lib/gl3w/GL/gl3w.h	/^#define glClearNamedBufferSubDataEXT	/;"	d
glClearStencil	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClearStencil	/;"	d
glClearStencil	lib/gl3w/GL/gl3w.h	/^#define glClearStencil	/;"	d
glClientWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glClientWaitSync	/;"	d
glClientWaitSync	lib/gl3w/GL/gl3w.h	/^#define glClientWaitSync	/;"	d
glColorMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glColorMask	/;"	d
glColorMask	lib/gl3w/GL/gl3w.h	/^#define glColorMask	/;"	d
glColorMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glColorMaski	/;"	d
glColorMaski	lib/gl3w/GL/gl3w.h	/^#define glColorMaski	/;"	d
glColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glColorP3ui	/;"	d
glColorP3ui	lib/gl3w/GL/gl3w.h	/^#define glColorP3ui	/;"	d
glColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glColorP3uiv	/;"	d
glColorP3uiv	lib/gl3w/GL/gl3w.h	/^#define glColorP3uiv	/;"	d
glColorP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glColorP4ui	/;"	d
glColorP4ui	lib/gl3w/GL/gl3w.h	/^#define glColorP4ui	/;"	d
glColorP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glColorP4uiv	/;"	d
glColorP4uiv	lib/gl3w/GL/gl3w.h	/^#define glColorP4uiv	/;"	d
glCompileShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompileShader	/;"	d
glCompileShader	lib/gl3w/GL/gl3w.h	/^#define glCompileShader	/;"	d
glCompileShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglCompileShader glCompileShader;$/;"	v	typeref:typename:nkglCompileShader
glCompileShaderIncludeARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompileShaderIncludeARB	/;"	d
glCompileShaderIncludeARB	lib/gl3w/GL/gl3w.h	/^#define glCompileShaderIncludeARB	/;"	d
glCompressedTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompressedTexImage1D	/;"	d
glCompressedTexImage1D	lib/gl3w/GL/gl3w.h	/^#define glCompressedTexImage1D	/;"	d
glCompressedTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompressedTexImage2D	/;"	d
glCompressedTexImage2D	lib/gl3w/GL/gl3w.h	/^#define glCompressedTexImage2D	/;"	d
glCompressedTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompressedTexImage3D	/;"	d
glCompressedTexImage3D	lib/gl3w/GL/gl3w.h	/^#define glCompressedTexImage3D	/;"	d
glCompressedTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompressedTexSubImage1D	/;"	d
glCompressedTexSubImage1D	lib/gl3w/GL/gl3w.h	/^#define glCompressedTexSubImage1D	/;"	d
glCompressedTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompressedTexSubImage2D	/;"	d
glCompressedTexSubImage2D	lib/gl3w/GL/gl3w.h	/^#define glCompressedTexSubImage2D	/;"	d
glCompressedTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCompressedTexSubImage3D	/;"	d
glCompressedTexSubImage3D	lib/gl3w/GL/gl3w.h	/^#define glCompressedTexSubImage3D	/;"	d
glCopyBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCopyBufferSubData	/;"	d
glCopyBufferSubData	lib/gl3w/GL/gl3w.h	/^#define glCopyBufferSubData	/;"	d
glCopyImageSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCopyImageSubData	/;"	d
glCopyImageSubData	lib/gl3w/GL/gl3w.h	/^#define glCopyImageSubData	/;"	d
glCopyTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCopyTexImage1D	/;"	d
glCopyTexImage1D	lib/gl3w/GL/gl3w.h	/^#define glCopyTexImage1D	/;"	d
glCopyTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCopyTexImage2D	/;"	d
glCopyTexImage2D	lib/gl3w/GL/gl3w.h	/^#define glCopyTexImage2D	/;"	d
glCopyTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCopyTexSubImage1D	/;"	d
glCopyTexSubImage1D	lib/gl3w/GL/gl3w.h	/^#define glCopyTexSubImage1D	/;"	d
glCopyTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCopyTexSubImage2D	/;"	d
glCopyTexSubImage2D	lib/gl3w/GL/gl3w.h	/^#define glCopyTexSubImage2D	/;"	d
glCopyTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCopyTexSubImage3D	/;"	d
glCopyTexSubImage3D	lib/gl3w/GL/gl3w.h	/^#define glCopyTexSubImage3D	/;"	d
glCreateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCreateProgram	/;"	d
glCreateProgram	lib/gl3w/GL/gl3w.h	/^#define glCreateProgram	/;"	d
glCreateProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglCreateProgram glCreateProgram;$/;"	v	typeref:typename:nkglCreateProgram
glCreateShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCreateShader	/;"	d
glCreateShader	lib/gl3w/GL/gl3w.h	/^#define glCreateShader	/;"	d
glCreateShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglCreateShader glCreateShader;$/;"	v	typeref:typename:nkglCreateShader
glCreateShaderProgramv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCreateShaderProgramv	/;"	d
glCreateShaderProgramv	lib/gl3w/GL/gl3w.h	/^#define glCreateShaderProgramv	/;"	d
glCreateSyncFromCLeventARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCreateSyncFromCLeventARB	/;"	d
glCreateSyncFromCLeventARB	lib/gl3w/GL/gl3w.h	/^#define glCreateSyncFromCLeventARB	/;"	d
glCullFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glCullFace	/;"	d
glCullFace	lib/gl3w/GL/gl3w.h	/^#define glCullFace	/;"	d
glDebugMessageCallback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDebugMessageCallback	/;"	d
glDebugMessageCallback	lib/gl3w/GL/gl3w.h	/^#define glDebugMessageCallback	/;"	d
glDebugMessageCallbackARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDebugMessageCallbackARB	/;"	d
glDebugMessageCallbackARB	lib/gl3w/GL/gl3w.h	/^#define glDebugMessageCallbackARB	/;"	d
glDebugMessageControl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDebugMessageControl	/;"	d
glDebugMessageControl	lib/gl3w/GL/gl3w.h	/^#define glDebugMessageControl	/;"	d
glDebugMessageControlARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDebugMessageControlARB	/;"	d
glDebugMessageControlARB	lib/gl3w/GL/gl3w.h	/^#define glDebugMessageControlARB	/;"	d
glDebugMessageInsert	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDebugMessageInsert	/;"	d
glDebugMessageInsert	lib/gl3w/GL/gl3w.h	/^#define glDebugMessageInsert	/;"	d
glDebugMessageInsertARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDebugMessageInsertARB	/;"	d
glDebugMessageInsertARB	lib/gl3w/GL/gl3w.h	/^#define glDebugMessageInsertARB	/;"	d
glDeleteBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteBuffers	/;"	d
glDeleteBuffers	lib/gl3w/GL/gl3w.h	/^#define glDeleteBuffers	/;"	d
glDeleteBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteBuffers glDeleteBuffers;$/;"	v	typeref:typename:nkglDeleteBuffers
glDeleteFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteFramebuffers	/;"	d
glDeleteFramebuffers	lib/gl3w/GL/gl3w.h	/^#define glDeleteFramebuffers	/;"	d
glDeleteNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteNamedStringARB	/;"	d
glDeleteNamedStringARB	lib/gl3w/GL/gl3w.h	/^#define glDeleteNamedStringARB	/;"	d
glDeleteProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteProgram	/;"	d
glDeleteProgram	lib/gl3w/GL/gl3w.h	/^#define glDeleteProgram	/;"	d
glDeleteProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteProgram glDeleteProgram;$/;"	v	typeref:typename:nkglDeleteProgram
glDeleteProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteProgramPipelines	/;"	d
glDeleteProgramPipelines	lib/gl3w/GL/gl3w.h	/^#define glDeleteProgramPipelines	/;"	d
glDeleteQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteQueries	/;"	d
glDeleteQueries	lib/gl3w/GL/gl3w.h	/^#define glDeleteQueries	/;"	d
glDeleteRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteRenderbuffers	/;"	d
glDeleteRenderbuffers	lib/gl3w/GL/gl3w.h	/^#define glDeleteRenderbuffers	/;"	d
glDeleteSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteSamplers	/;"	d
glDeleteSamplers	lib/gl3w/GL/gl3w.h	/^#define glDeleteSamplers	/;"	d
glDeleteShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteShader	/;"	d
glDeleteShader	lib/gl3w/GL/gl3w.h	/^#define glDeleteShader	/;"	d
glDeleteShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteShader glDeleteShader;$/;"	v	typeref:typename:nkglDeleteShader
glDeleteSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteSync	/;"	d
glDeleteSync	lib/gl3w/GL/gl3w.h	/^#define glDeleteSync	/;"	d
glDeleteTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteTextures	/;"	d
glDeleteTextures	lib/gl3w/GL/gl3w.h	/^#define glDeleteTextures	/;"	d
glDeleteTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteTransformFeedbacks	/;"	d
glDeleteTransformFeedbacks	lib/gl3w/GL/gl3w.h	/^#define glDeleteTransformFeedbacks	/;"	d
glDeleteVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDeleteVertexArrays	/;"	d
glDeleteVertexArrays	lib/gl3w/GL/gl3w.h	/^#define glDeleteVertexArrays	/;"	d
glDeleteVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDeleteVertexArrays glDeleteVertexArrays;$/;"	v	typeref:typename:nkglDeleteVertexArrays
glDepthFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDepthFunc	/;"	d
glDepthFunc	lib/gl3w/GL/gl3w.h	/^#define glDepthFunc	/;"	d
glDepthMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDepthMask	/;"	d
glDepthMask	lib/gl3w/GL/gl3w.h	/^#define glDepthMask	/;"	d
glDepthRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDepthRange	/;"	d
glDepthRange	lib/gl3w/GL/gl3w.h	/^#define glDepthRange	/;"	d
glDepthRangeArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDepthRangeArrayv	/;"	d
glDepthRangeArrayv	lib/gl3w/GL/gl3w.h	/^#define glDepthRangeArrayv	/;"	d
glDepthRangeIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDepthRangeIndexed	/;"	d
glDepthRangeIndexed	lib/gl3w/GL/gl3w.h	/^#define glDepthRangeIndexed	/;"	d
glDepthRangef	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDepthRangef	/;"	d
glDepthRangef	lib/gl3w/GL/gl3w.h	/^#define glDepthRangef	/;"	d
glDetachShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDetachShader	/;"	d
glDetachShader	lib/gl3w/GL/gl3w.h	/^#define glDetachShader	/;"	d
glDetachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDetachShader glDetachShader;$/;"	v	typeref:typename:nkglDetachShader
glDisable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDisable	/;"	d
glDisable	lib/gl3w/GL/gl3w.h	/^#define glDisable	/;"	d
glDisableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDisableVertexAttribArray	/;"	d
glDisableVertexAttribArray	lib/gl3w/GL/gl3w.h	/^#define glDisableVertexAttribArray	/;"	d
glDisableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglDisableVertexAttribArray glDisableVertexAttribArray;$/;"	v	typeref:typename:nkglDisableVertexAttribArray
glDisablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDisablei	/;"	d
glDisablei	lib/gl3w/GL/gl3w.h	/^#define glDisablei	/;"	d
glDispatchCompute	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDispatchCompute	/;"	d
glDispatchCompute	lib/gl3w/GL/gl3w.h	/^#define glDispatchCompute	/;"	d
glDispatchComputeIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDispatchComputeIndirect	/;"	d
glDispatchComputeIndirect	lib/gl3w/GL/gl3w.h	/^#define glDispatchComputeIndirect	/;"	d
glDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawArrays	/;"	d
glDrawArrays	lib/gl3w/GL/gl3w.h	/^#define glDrawArrays	/;"	d
glDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawArraysIndirect	/;"	d
glDrawArraysIndirect	lib/gl3w/GL/gl3w.h	/^#define glDrawArraysIndirect	/;"	d
glDrawArraysInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawArraysInstanced	/;"	d
glDrawArraysInstanced	lib/gl3w/GL/gl3w.h	/^#define glDrawArraysInstanced	/;"	d
glDrawArraysInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawArraysInstancedBaseInstance	/;"	d
glDrawArraysInstancedBaseInstance	lib/gl3w/GL/gl3w.h	/^#define glDrawArraysInstancedBaseInstance	/;"	d
glDrawBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawBuffer	/;"	d
glDrawBuffer	lib/gl3w/GL/gl3w.h	/^#define glDrawBuffer	/;"	d
glDrawBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawBuffers	/;"	d
glDrawBuffers	lib/gl3w/GL/gl3w.h	/^#define glDrawBuffers	/;"	d
glDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawElements	/;"	d
glDrawElements	lib/gl3w/GL/gl3w.h	/^#define glDrawElements	/;"	d
glDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawElementsBaseVertex	/;"	d
glDrawElementsBaseVertex	lib/gl3w/GL/gl3w.h	/^#define glDrawElementsBaseVertex	/;"	d
glDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawElementsIndirect	/;"	d
glDrawElementsIndirect	lib/gl3w/GL/gl3w.h	/^#define glDrawElementsIndirect	/;"	d
glDrawElementsInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawElementsInstanced	/;"	d
glDrawElementsInstanced	lib/gl3w/GL/gl3w.h	/^#define glDrawElementsInstanced	/;"	d
glDrawElementsInstancedBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawElementsInstancedBaseInstance	/;"	d
glDrawElementsInstancedBaseInstance	lib/gl3w/GL/gl3w.h	/^#define glDrawElementsInstancedBaseInstance	/;"	d
glDrawElementsInstancedBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawElementsInstancedBaseVertex	/;"	d
glDrawElementsInstancedBaseVertex	lib/gl3w/GL/gl3w.h	/^#define glDrawElementsInstancedBaseVertex	/;"	d
glDrawElementsInstancedBaseVertexBaseInstance	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawElementsInstancedBaseVertexBaseInstance	/;"	d
glDrawElementsInstancedBaseVertexBaseInstance	lib/gl3w/GL/gl3w.h	/^#define glDrawElementsInstancedBaseVertexBaseInstance	/;"	d
glDrawRangeElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawRangeElements	/;"	d
glDrawRangeElements	lib/gl3w/GL/gl3w.h	/^#define glDrawRangeElements	/;"	d
glDrawRangeElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawRangeElementsBaseVertex	/;"	d
glDrawRangeElementsBaseVertex	lib/gl3w/GL/gl3w.h	/^#define glDrawRangeElementsBaseVertex	/;"	d
glDrawTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedback	/;"	d
glDrawTransformFeedback	lib/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedback	/;"	d
glDrawTransformFeedbackInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedbackInstanced	/;"	d
glDrawTransformFeedbackInstanced	lib/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedbackInstanced	/;"	d
glDrawTransformFeedbackStream	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedbackStream	/;"	d
glDrawTransformFeedbackStream	lib/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedbackStream	/;"	d
glDrawTransformFeedbackStreamInstanced	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedbackStreamInstanced	/;"	d
glDrawTransformFeedbackStreamInstanced	lib/gl3w/GL/gl3w.h	/^#define glDrawTransformFeedbackStreamInstanced	/;"	d
glEnable	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glEnable	/;"	d
glEnable	lib/gl3w/GL/gl3w.h	/^#define glEnable	/;"	d
glEnableVertexAttribArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glEnableVertexAttribArray	/;"	d
glEnableVertexAttribArray	lib/gl3w/GL/gl3w.h	/^#define glEnableVertexAttribArray	/;"	d
glEnableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglEnableVertexAttribArray glEnableVertexAttribArray;$/;"	v	typeref:typename:nkglEnableVertexAttribArray
glEnablei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glEnablei	/;"	d
glEnablei	lib/gl3w/GL/gl3w.h	/^#define glEnablei	/;"	d
glEndConditionalRender	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glEndConditionalRender	/;"	d
glEndConditionalRender	lib/gl3w/GL/gl3w.h	/^#define glEndConditionalRender	/;"	d
glEndQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glEndQuery	/;"	d
glEndQuery	lib/gl3w/GL/gl3w.h	/^#define glEndQuery	/;"	d
glEndQueryIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glEndQueryIndexed	/;"	d
glEndQueryIndexed	lib/gl3w/GL/gl3w.h	/^#define glEndQueryIndexed	/;"	d
glEndTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glEndTransformFeedback	/;"	d
glEndTransformFeedback	lib/gl3w/GL/gl3w.h	/^#define glEndTransformFeedback	/;"	d
glFenceSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFenceSync	/;"	d
glFenceSync	lib/gl3w/GL/gl3w.h	/^#define glFenceSync	/;"	d
glFinish	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFinish	/;"	d
glFinish	lib/gl3w/GL/gl3w.h	/^#define glFinish	/;"	d
glFlush	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFlush	/;"	d
glFlush	lib/gl3w/GL/gl3w.h	/^#define glFlush	/;"	d
glFlushMappedBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFlushMappedBufferRange	/;"	d
glFlushMappedBufferRange	lib/gl3w/GL/gl3w.h	/^#define glFlushMappedBufferRange	/;"	d
glFramebufferParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFramebufferParameteri	/;"	d
glFramebufferParameteri	lib/gl3w/GL/gl3w.h	/^#define glFramebufferParameteri	/;"	d
glFramebufferRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFramebufferRenderbuffer	/;"	d
glFramebufferRenderbuffer	lib/gl3w/GL/gl3w.h	/^#define glFramebufferRenderbuffer	/;"	d
glFramebufferTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFramebufferTexture	/;"	d
glFramebufferTexture	lib/gl3w/GL/gl3w.h	/^#define glFramebufferTexture	/;"	d
glFramebufferTexture1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFramebufferTexture1D	/;"	d
glFramebufferTexture1D	lib/gl3w/GL/gl3w.h	/^#define glFramebufferTexture1D	/;"	d
glFramebufferTexture2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFramebufferTexture2D	/;"	d
glFramebufferTexture2D	lib/gl3w/GL/gl3w.h	/^#define glFramebufferTexture2D	/;"	d
glFramebufferTexture3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFramebufferTexture3D	/;"	d
glFramebufferTexture3D	lib/gl3w/GL/gl3w.h	/^#define glFramebufferTexture3D	/;"	d
glFramebufferTextureLayer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFramebufferTextureLayer	/;"	d
glFramebufferTextureLayer	lib/gl3w/GL/gl3w.h	/^#define glFramebufferTextureLayer	/;"	d
glFrontFace	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glFrontFace	/;"	d
glFrontFace	lib/gl3w/GL/gl3w.h	/^#define glFrontFace	/;"	d
glGenBuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenBuffers	/;"	d
glGenBuffers	lib/gl3w/GL/gl3w.h	/^#define glGenBuffers	/;"	d
glGenBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGenBuffers glGenBuffers;$/;"	v	typeref:typename:nkglGenBuffers
glGenFramebuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenFramebuffers	/;"	d
glGenFramebuffers	lib/gl3w/GL/gl3w.h	/^#define glGenFramebuffers	/;"	d
glGenProgramPipelines	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenProgramPipelines	/;"	d
glGenProgramPipelines	lib/gl3w/GL/gl3w.h	/^#define glGenProgramPipelines	/;"	d
glGenQueries	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenQueries	/;"	d
glGenQueries	lib/gl3w/GL/gl3w.h	/^#define glGenQueries	/;"	d
glGenRenderbuffers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenRenderbuffers	/;"	d
glGenRenderbuffers	lib/gl3w/GL/gl3w.h	/^#define glGenRenderbuffers	/;"	d
glGenSamplers	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenSamplers	/;"	d
glGenSamplers	lib/gl3w/GL/gl3w.h	/^#define glGenSamplers	/;"	d
glGenTextures	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenTextures	/;"	d
glGenTextures	lib/gl3w/GL/gl3w.h	/^#define glGenTextures	/;"	d
glGenTransformFeedbacks	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenTransformFeedbacks	/;"	d
glGenTransformFeedbacks	lib/gl3w/GL/gl3w.h	/^#define glGenTransformFeedbacks	/;"	d
glGenVertexArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenVertexArrays	/;"	d
glGenVertexArrays	lib/gl3w/GL/gl3w.h	/^#define glGenVertexArrays	/;"	d
glGenVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGenVertexArrays glGenVertexArrays;$/;"	v	typeref:typename:nkglGenVertexArrays
glGenerateMipmap	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGenerateMipmap	/;"	d
glGenerateMipmap	lib/gl3w/GL/gl3w.h	/^#define glGenerateMipmap	/;"	d
glGenerateMipmap	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGenerateMipmap glGenerateMipmap;$/;"	v	typeref:typename:nkglGenerateMipmap
glGetActiveAtomicCounterBufferiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveAtomicCounterBufferiv	/;"	d
glGetActiveAtomicCounterBufferiv	lib/gl3w/GL/gl3w.h	/^#define glGetActiveAtomicCounterBufferiv	/;"	d
glGetActiveAttrib	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveAttrib	/;"	d
glGetActiveAttrib	lib/gl3w/GL/gl3w.h	/^#define glGetActiveAttrib	/;"	d
glGetActiveSubroutineName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveSubroutineName	/;"	d
glGetActiveSubroutineName	lib/gl3w/GL/gl3w.h	/^#define glGetActiveSubroutineName	/;"	d
glGetActiveSubroutineUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveSubroutineUniformName	/;"	d
glGetActiveSubroutineUniformName	lib/gl3w/GL/gl3w.h	/^#define glGetActiveSubroutineUniformName	/;"	d
glGetActiveSubroutineUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveSubroutineUniformiv	/;"	d
glGetActiveSubroutineUniformiv	lib/gl3w/GL/gl3w.h	/^#define glGetActiveSubroutineUniformiv	/;"	d
glGetActiveUniform	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveUniform	/;"	d
glGetActiveUniform	lib/gl3w/GL/gl3w.h	/^#define glGetActiveUniform	/;"	d
glGetActiveUniformBlockName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveUniformBlockName	/;"	d
glGetActiveUniformBlockName	lib/gl3w/GL/gl3w.h	/^#define glGetActiveUniformBlockName	/;"	d
glGetActiveUniformBlockiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveUniformBlockiv	/;"	d
glGetActiveUniformBlockiv	lib/gl3w/GL/gl3w.h	/^#define glGetActiveUniformBlockiv	/;"	d
glGetActiveUniformName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveUniformName	/;"	d
glGetActiveUniformName	lib/gl3w/GL/gl3w.h	/^#define glGetActiveUniformName	/;"	d
glGetActiveUniformsiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetActiveUniformsiv	/;"	d
glGetActiveUniformsiv	lib/gl3w/GL/gl3w.h	/^#define glGetActiveUniformsiv	/;"	d
glGetAttachedShaders	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetAttachedShaders	/;"	d
glGetAttachedShaders	lib/gl3w/GL/gl3w.h	/^#define glGetAttachedShaders	/;"	d
glGetAttribLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetAttribLocation	/;"	d
glGetAttribLocation	lib/gl3w/GL/gl3w.h	/^#define glGetAttribLocation	/;"	d
glGetAttribLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetAttribLocation glGetAttribLocation;$/;"	v	typeref:typename:nkglGetAttribLocation
glGetBooleani_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetBooleani_v	/;"	d
glGetBooleani_v	lib/gl3w/GL/gl3w.h	/^#define glGetBooleani_v	/;"	d
glGetBooleanv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetBooleanv	/;"	d
glGetBooleanv	lib/gl3w/GL/gl3w.h	/^#define glGetBooleanv	/;"	d
glGetBufferParameteri64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetBufferParameteri64v	/;"	d
glGetBufferParameteri64v	lib/gl3w/GL/gl3w.h	/^#define glGetBufferParameteri64v	/;"	d
glGetBufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetBufferParameteriv	/;"	d
glGetBufferParameteriv	lib/gl3w/GL/gl3w.h	/^#define glGetBufferParameteriv	/;"	d
glGetBufferPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetBufferPointerv	/;"	d
glGetBufferPointerv	lib/gl3w/GL/gl3w.h	/^#define glGetBufferPointerv	/;"	d
glGetBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetBufferSubData	/;"	d
glGetBufferSubData	lib/gl3w/GL/gl3w.h	/^#define glGetBufferSubData	/;"	d
glGetCompressedTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetCompressedTexImage	/;"	d
glGetCompressedTexImage	lib/gl3w/GL/gl3w.h	/^#define glGetCompressedTexImage	/;"	d
glGetDebugMessageLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetDebugMessageLog	/;"	d
glGetDebugMessageLog	lib/gl3w/GL/gl3w.h	/^#define glGetDebugMessageLog	/;"	d
glGetDebugMessageLogARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetDebugMessageLogARB	/;"	d
glGetDebugMessageLogARB	lib/gl3w/GL/gl3w.h	/^#define glGetDebugMessageLogARB	/;"	d
glGetDoublei_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetDoublei_v	/;"	d
glGetDoublei_v	lib/gl3w/GL/gl3w.h	/^#define glGetDoublei_v	/;"	d
glGetDoublev	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetDoublev	/;"	d
glGetDoublev	lib/gl3w/GL/gl3w.h	/^#define glGetDoublev	/;"	d
glGetError	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetError	/;"	d
glGetError	lib/gl3w/GL/gl3w.h	/^#define glGetError	/;"	d
glGetFloati_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetFloati_v	/;"	d
glGetFloati_v	lib/gl3w/GL/gl3w.h	/^#define glGetFloati_v	/;"	d
glGetFloatv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetFloatv	/;"	d
glGetFloatv	lib/gl3w/GL/gl3w.h	/^#define glGetFloatv	/;"	d
glGetFragDataIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetFragDataIndex	/;"	d
glGetFragDataIndex	lib/gl3w/GL/gl3w.h	/^#define glGetFragDataIndex	/;"	d
glGetFragDataLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetFragDataLocation	/;"	d
glGetFragDataLocation	lib/gl3w/GL/gl3w.h	/^#define glGetFragDataLocation	/;"	d
glGetFramebufferAttachmentParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetFramebufferAttachmentParameteriv	/;"	d
glGetFramebufferAttachmentParameteriv	lib/gl3w/GL/gl3w.h	/^#define glGetFramebufferAttachmentParameteriv	/;"	d
glGetFramebufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetFramebufferParameteriv	/;"	d
glGetFramebufferParameteriv	lib/gl3w/GL/gl3w.h	/^#define glGetFramebufferParameteriv	/;"	d
glGetGraphicsResetStatusARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetGraphicsResetStatusARB	/;"	d
glGetGraphicsResetStatusARB	lib/gl3w/GL/gl3w.h	/^#define glGetGraphicsResetStatusARB	/;"	d
glGetInteger64i_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetInteger64i_v	/;"	d
glGetInteger64i_v	lib/gl3w/GL/gl3w.h	/^#define glGetInteger64i_v	/;"	d
glGetInteger64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetInteger64v	/;"	d
glGetInteger64v	lib/gl3w/GL/gl3w.h	/^#define glGetInteger64v	/;"	d
glGetIntegeri_v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetIntegeri_v	/;"	d
glGetIntegeri_v	lib/gl3w/GL/gl3w.h	/^#define glGetIntegeri_v	/;"	d
glGetIntegerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetIntegerv	/;"	d
glGetIntegerv	lib/gl3w/GL/gl3w.h	/^#define glGetIntegerv	/;"	d
glGetInternalformati64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetInternalformati64v	/;"	d
glGetInternalformati64v	lib/gl3w/GL/gl3w.h	/^#define glGetInternalformati64v	/;"	d
glGetInternalformativ	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetInternalformativ	/;"	d
glGetInternalformativ	lib/gl3w/GL/gl3w.h	/^#define glGetInternalformativ	/;"	d
glGetMultisamplefv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetMultisamplefv	/;"	d
glGetMultisamplefv	lib/gl3w/GL/gl3w.h	/^#define glGetMultisamplefv	/;"	d
glGetNamedFramebufferParameterivEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetNamedFramebufferParameterivEXT	/;"	d
glGetNamedFramebufferParameterivEXT	lib/gl3w/GL/gl3w.h	/^#define glGetNamedFramebufferParameterivEXT	/;"	d
glGetNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetNamedStringARB	/;"	d
glGetNamedStringARB	lib/gl3w/GL/gl3w.h	/^#define glGetNamedStringARB	/;"	d
glGetNamedStringivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetNamedStringivARB	/;"	d
glGetNamedStringivARB	lib/gl3w/GL/gl3w.h	/^#define glGetNamedStringivARB	/;"	d
glGetObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetObjectLabel	/;"	d
glGetObjectLabel	lib/gl3w/GL/gl3w.h	/^#define glGetObjectLabel	/;"	d
glGetObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetObjectPtrLabel	/;"	d
glGetObjectPtrLabel	lib/gl3w/GL/gl3w.h	/^#define glGetObjectPtrLabel	/;"	d
glGetPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetPointerv	/;"	d
glGetPointerv	lib/gl3w/GL/gl3w.h	/^#define glGetPointerv	/;"	d
glGetProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramBinary	/;"	d
glGetProgramBinary	lib/gl3w/GL/gl3w.h	/^#define glGetProgramBinary	/;"	d
glGetProgramInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramInfoLog	/;"	d
glGetProgramInfoLog	lib/gl3w/GL/gl3w.h	/^#define glGetProgramInfoLog	/;"	d
glGetProgramInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetProgramInfoLog glGetProgramInfoLog;$/;"	v	typeref:typename:nkglGetProgramInfoLog
glGetProgramInterfaceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramInterfaceiv	/;"	d
glGetProgramInterfaceiv	lib/gl3w/GL/gl3w.h	/^#define glGetProgramInterfaceiv	/;"	d
glGetProgramPipelineInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramPipelineInfoLog	/;"	d
glGetProgramPipelineInfoLog	lib/gl3w/GL/gl3w.h	/^#define glGetProgramPipelineInfoLog	/;"	d
glGetProgramPipelineiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramPipelineiv	/;"	d
glGetProgramPipelineiv	lib/gl3w/GL/gl3w.h	/^#define glGetProgramPipelineiv	/;"	d
glGetProgramResourceIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramResourceIndex	/;"	d
glGetProgramResourceIndex	lib/gl3w/GL/gl3w.h	/^#define glGetProgramResourceIndex	/;"	d
glGetProgramResourceLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramResourceLocation	/;"	d
glGetProgramResourceLocation	lib/gl3w/GL/gl3w.h	/^#define glGetProgramResourceLocation	/;"	d
glGetProgramResourceLocationIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramResourceLocationIndex	/;"	d
glGetProgramResourceLocationIndex	lib/gl3w/GL/gl3w.h	/^#define glGetProgramResourceLocationIndex	/;"	d
glGetProgramResourceName	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramResourceName	/;"	d
glGetProgramResourceName	lib/gl3w/GL/gl3w.h	/^#define glGetProgramResourceName	/;"	d
glGetProgramResourceiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramResourceiv	/;"	d
glGetProgramResourceiv	lib/gl3w/GL/gl3w.h	/^#define glGetProgramResourceiv	/;"	d
glGetProgramStageiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramStageiv	/;"	d
glGetProgramStageiv	lib/gl3w/GL/gl3w.h	/^#define glGetProgramStageiv	/;"	d
glGetProgramiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetProgramiv	/;"	d
glGetProgramiv	lib/gl3w/GL/gl3w.h	/^#define glGetProgramiv	/;"	d
glGetProgramiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetProgramiv glGetProgramiv;$/;"	v	typeref:typename:nkglGetProgramiv
glGetQueryIndexediv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetQueryIndexediv	/;"	d
glGetQueryIndexediv	lib/gl3w/GL/gl3w.h	/^#define glGetQueryIndexediv	/;"	d
glGetQueryObjecti64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetQueryObjecti64v	/;"	d
glGetQueryObjecti64v	lib/gl3w/GL/gl3w.h	/^#define glGetQueryObjecti64v	/;"	d
glGetQueryObjectiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetQueryObjectiv	/;"	d
glGetQueryObjectiv	lib/gl3w/GL/gl3w.h	/^#define glGetQueryObjectiv	/;"	d
glGetQueryObjectui64v	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetQueryObjectui64v	/;"	d
glGetQueryObjectui64v	lib/gl3w/GL/gl3w.h	/^#define glGetQueryObjectui64v	/;"	d
glGetQueryObjectuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetQueryObjectuiv	/;"	d
glGetQueryObjectuiv	lib/gl3w/GL/gl3w.h	/^#define glGetQueryObjectuiv	/;"	d
glGetQueryiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetQueryiv	/;"	d
glGetQueryiv	lib/gl3w/GL/gl3w.h	/^#define glGetQueryiv	/;"	d
glGetRenderbufferParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetRenderbufferParameteriv	/;"	d
glGetRenderbufferParameteriv	lib/gl3w/GL/gl3w.h	/^#define glGetRenderbufferParameteriv	/;"	d
glGetSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetSamplerParameterIiv	/;"	d
glGetSamplerParameterIiv	lib/gl3w/GL/gl3w.h	/^#define glGetSamplerParameterIiv	/;"	d
glGetSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetSamplerParameterIuiv	/;"	d
glGetSamplerParameterIuiv	lib/gl3w/GL/gl3w.h	/^#define glGetSamplerParameterIuiv	/;"	d
glGetSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetSamplerParameterfv	/;"	d
glGetSamplerParameterfv	lib/gl3w/GL/gl3w.h	/^#define glGetSamplerParameterfv	/;"	d
glGetSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetSamplerParameteriv	/;"	d
glGetSamplerParameteriv	lib/gl3w/GL/gl3w.h	/^#define glGetSamplerParameteriv	/;"	d
glGetShaderInfoLog	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetShaderInfoLog	/;"	d
glGetShaderInfoLog	lib/gl3w/GL/gl3w.h	/^#define glGetShaderInfoLog	/;"	d
glGetShaderInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetShaderInfoLog glGetShaderInfoLog;$/;"	v	typeref:typename:nkglGetShaderInfoLog
glGetShaderPrecisionFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetShaderPrecisionFormat	/;"	d
glGetShaderPrecisionFormat	lib/gl3w/GL/gl3w.h	/^#define glGetShaderPrecisionFormat	/;"	d
glGetShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetShaderSource	/;"	d
glGetShaderSource	lib/gl3w/GL/gl3w.h	/^#define glGetShaderSource	/;"	d
glGetShaderiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetShaderiv	/;"	d
glGetShaderiv	lib/gl3w/GL/gl3w.h	/^#define glGetShaderiv	/;"	d
glGetShaderiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetShaderiv glGetShaderiv;$/;"	v	typeref:typename:nkglGetShaderiv
glGetString	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetString	/;"	d
glGetString	lib/gl3w/GL/gl3w.h	/^#define glGetString	/;"	d
glGetStringi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetStringi	/;"	d
glGetStringi	lib/gl3w/GL/gl3w.h	/^#define glGetStringi	/;"	d
glGetSubroutineIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetSubroutineIndex	/;"	d
glGetSubroutineIndex	lib/gl3w/GL/gl3w.h	/^#define glGetSubroutineIndex	/;"	d
glGetSubroutineUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetSubroutineUniformLocation	/;"	d
glGetSubroutineUniformLocation	lib/gl3w/GL/gl3w.h	/^#define glGetSubroutineUniformLocation	/;"	d
glGetSynciv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetSynciv	/;"	d
glGetSynciv	lib/gl3w/GL/gl3w.h	/^#define glGetSynciv	/;"	d
glGetTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTexImage	/;"	d
glGetTexImage	lib/gl3w/GL/gl3w.h	/^#define glGetTexImage	/;"	d
glGetTexLevelParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTexLevelParameterfv	/;"	d
glGetTexLevelParameterfv	lib/gl3w/GL/gl3w.h	/^#define glGetTexLevelParameterfv	/;"	d
glGetTexLevelParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTexLevelParameteriv	/;"	d
glGetTexLevelParameteriv	lib/gl3w/GL/gl3w.h	/^#define glGetTexLevelParameteriv	/;"	d
glGetTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTexParameterIiv	/;"	d
glGetTexParameterIiv	lib/gl3w/GL/gl3w.h	/^#define glGetTexParameterIiv	/;"	d
glGetTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTexParameterIuiv	/;"	d
glGetTexParameterIuiv	lib/gl3w/GL/gl3w.h	/^#define glGetTexParameterIuiv	/;"	d
glGetTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTexParameterfv	/;"	d
glGetTexParameterfv	lib/gl3w/GL/gl3w.h	/^#define glGetTexParameterfv	/;"	d
glGetTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTexParameteriv	/;"	d
glGetTexParameteriv	lib/gl3w/GL/gl3w.h	/^#define glGetTexParameteriv	/;"	d
glGetTransformFeedbackVarying	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetTransformFeedbackVarying	/;"	d
glGetTransformFeedbackVarying	lib/gl3w/GL/gl3w.h	/^#define glGetTransformFeedbackVarying	/;"	d
glGetUniformBlockIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformBlockIndex	/;"	d
glGetUniformBlockIndex	lib/gl3w/GL/gl3w.h	/^#define glGetUniformBlockIndex	/;"	d
glGetUniformIndices	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformIndices	/;"	d
glGetUniformIndices	lib/gl3w/GL/gl3w.h	/^#define glGetUniformIndices	/;"	d
glGetUniformLocation	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformLocation	/;"	d
glGetUniformLocation	lib/gl3w/GL/gl3w.h	/^#define glGetUniformLocation	/;"	d
glGetUniformLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglGetUniformLocation glGetUniformLocation;$/;"	v	typeref:typename:nkglGetUniformLocation
glGetUniformSubroutineuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformSubroutineuiv	/;"	d
glGetUniformSubroutineuiv	lib/gl3w/GL/gl3w.h	/^#define glGetUniformSubroutineuiv	/;"	d
glGetUniformdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformdv	/;"	d
glGetUniformdv	lib/gl3w/GL/gl3w.h	/^#define glGetUniformdv	/;"	d
glGetUniformfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformfv	/;"	d
glGetUniformfv	lib/gl3w/GL/gl3w.h	/^#define glGetUniformfv	/;"	d
glGetUniformiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformiv	/;"	d
glGetUniformiv	lib/gl3w/GL/gl3w.h	/^#define glGetUniformiv	/;"	d
glGetUniformuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetUniformuiv	/;"	d
glGetUniformuiv	lib/gl3w/GL/gl3w.h	/^#define glGetUniformuiv	/;"	d
glGetVertexAttribIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetVertexAttribIiv	/;"	d
glGetVertexAttribIiv	lib/gl3w/GL/gl3w.h	/^#define glGetVertexAttribIiv	/;"	d
glGetVertexAttribIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetVertexAttribIuiv	/;"	d
glGetVertexAttribIuiv	lib/gl3w/GL/gl3w.h	/^#define glGetVertexAttribIuiv	/;"	d
glGetVertexAttribLdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetVertexAttribLdv	/;"	d
glGetVertexAttribLdv	lib/gl3w/GL/gl3w.h	/^#define glGetVertexAttribLdv	/;"	d
glGetVertexAttribPointerv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetVertexAttribPointerv	/;"	d
glGetVertexAttribPointerv	lib/gl3w/GL/gl3w.h	/^#define glGetVertexAttribPointerv	/;"	d
glGetVertexAttribdv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetVertexAttribdv	/;"	d
glGetVertexAttribdv	lib/gl3w/GL/gl3w.h	/^#define glGetVertexAttribdv	/;"	d
glGetVertexAttribfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetVertexAttribfv	/;"	d
glGetVertexAttribfv	lib/gl3w/GL/gl3w.h	/^#define glGetVertexAttribfv	/;"	d
glGetVertexAttribiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetVertexAttribiv	/;"	d
glGetVertexAttribiv	lib/gl3w/GL/gl3w.h	/^#define glGetVertexAttribiv	/;"	d
glGetnCompressedTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetnCompressedTexImageARB	/;"	d
glGetnCompressedTexImageARB	lib/gl3w/GL/gl3w.h	/^#define glGetnCompressedTexImageARB	/;"	d
glGetnTexImageARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetnTexImageARB	/;"	d
glGetnTexImageARB	lib/gl3w/GL/gl3w.h	/^#define glGetnTexImageARB	/;"	d
glGetnUniformdvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetnUniformdvARB	/;"	d
glGetnUniformdvARB	lib/gl3w/GL/gl3w.h	/^#define glGetnUniformdvARB	/;"	d
glGetnUniformfvARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetnUniformfvARB	/;"	d
glGetnUniformfvARB	lib/gl3w/GL/gl3w.h	/^#define glGetnUniformfvARB	/;"	d
glGetnUniformivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetnUniformivARB	/;"	d
glGetnUniformivARB	lib/gl3w/GL/gl3w.h	/^#define glGetnUniformivARB	/;"	d
glGetnUniformuivARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glGetnUniformuivARB	/;"	d
glGetnUniformuivARB	lib/gl3w/GL/gl3w.h	/^#define glGetnUniformuivARB	/;"	d
glHint	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glHint	/;"	d
glHint	lib/gl3w/GL/gl3w.h	/^#define glHint	/;"	d
glInvalidateBufferData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glInvalidateBufferData	/;"	d
glInvalidateBufferData	lib/gl3w/GL/gl3w.h	/^#define glInvalidateBufferData	/;"	d
glInvalidateBufferSubData	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glInvalidateBufferSubData	/;"	d
glInvalidateBufferSubData	lib/gl3w/GL/gl3w.h	/^#define glInvalidateBufferSubData	/;"	d
glInvalidateFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glInvalidateFramebuffer	/;"	d
glInvalidateFramebuffer	lib/gl3w/GL/gl3w.h	/^#define glInvalidateFramebuffer	/;"	d
glInvalidateSubFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glInvalidateSubFramebuffer	/;"	d
glInvalidateSubFramebuffer	lib/gl3w/GL/gl3w.h	/^#define glInvalidateSubFramebuffer	/;"	d
glInvalidateTexImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glInvalidateTexImage	/;"	d
glInvalidateTexImage	lib/gl3w/GL/gl3w.h	/^#define glInvalidateTexImage	/;"	d
glInvalidateTexSubImage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glInvalidateTexSubImage	/;"	d
glInvalidateTexSubImage	lib/gl3w/GL/gl3w.h	/^#define glInvalidateTexSubImage	/;"	d
glIsBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsBuffer	/;"	d
glIsBuffer	lib/gl3w/GL/gl3w.h	/^#define glIsBuffer	/;"	d
glIsEnabled	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsEnabled	/;"	d
glIsEnabled	lib/gl3w/GL/gl3w.h	/^#define glIsEnabled	/;"	d
glIsEnabledi	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsEnabledi	/;"	d
glIsEnabledi	lib/gl3w/GL/gl3w.h	/^#define glIsEnabledi	/;"	d
glIsFramebuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsFramebuffer	/;"	d
glIsFramebuffer	lib/gl3w/GL/gl3w.h	/^#define glIsFramebuffer	/;"	d
glIsNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsNamedStringARB	/;"	d
glIsNamedStringARB	lib/gl3w/GL/gl3w.h	/^#define glIsNamedStringARB	/;"	d
glIsProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsProgram	/;"	d
glIsProgram	lib/gl3w/GL/gl3w.h	/^#define glIsProgram	/;"	d
glIsProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsProgramPipeline	/;"	d
glIsProgramPipeline	lib/gl3w/GL/gl3w.h	/^#define glIsProgramPipeline	/;"	d
glIsQuery	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsQuery	/;"	d
glIsQuery	lib/gl3w/GL/gl3w.h	/^#define glIsQuery	/;"	d
glIsRenderbuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsRenderbuffer	/;"	d
glIsRenderbuffer	lib/gl3w/GL/gl3w.h	/^#define glIsRenderbuffer	/;"	d
glIsSampler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsSampler	/;"	d
glIsSampler	lib/gl3w/GL/gl3w.h	/^#define glIsSampler	/;"	d
glIsShader	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsShader	/;"	d
glIsShader	lib/gl3w/GL/gl3w.h	/^#define glIsShader	/;"	d
glIsSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsSync	/;"	d
glIsSync	lib/gl3w/GL/gl3w.h	/^#define glIsSync	/;"	d
glIsTexture	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsTexture	/;"	d
glIsTexture	lib/gl3w/GL/gl3w.h	/^#define glIsTexture	/;"	d
glIsTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsTransformFeedback	/;"	d
glIsTransformFeedback	lib/gl3w/GL/gl3w.h	/^#define glIsTransformFeedback	/;"	d
glIsVertexArray	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glIsVertexArray	/;"	d
glIsVertexArray	lib/gl3w/GL/gl3w.h	/^#define glIsVertexArray	/;"	d
glLineWidth	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glLineWidth	/;"	d
glLineWidth	lib/gl3w/GL/gl3w.h	/^#define glLineWidth	/;"	d
glLinkProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glLinkProgram	/;"	d
glLinkProgram	lib/gl3w/GL/gl3w.h	/^#define glLinkProgram	/;"	d
glLinkProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglLinkProgram glLinkProgram;$/;"	v	typeref:typename:nkglLinkProgram
glLogicOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glLogicOp	/;"	d
glLogicOp	lib/gl3w/GL/gl3w.h	/^#define glLogicOp	/;"	d
glMapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMapBuffer	/;"	d
glMapBuffer	lib/gl3w/GL/gl3w.h	/^#define glMapBuffer	/;"	d
glMapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglMapBuffer glMapBuffer;$/;"	v	typeref:typename:nkglMapBuffer
glMapBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMapBufferRange	/;"	d
glMapBufferRange	lib/gl3w/GL/gl3w.h	/^#define glMapBufferRange	/;"	d
glMemoryBarrier	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMemoryBarrier	/;"	d
glMemoryBarrier	lib/gl3w/GL/gl3w.h	/^#define glMemoryBarrier	/;"	d
glMinSampleShading	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMinSampleShading	/;"	d
glMinSampleShading	lib/gl3w/GL/gl3w.h	/^#define glMinSampleShading	/;"	d
glMinSampleShadingARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMinSampleShadingARB	/;"	d
glMinSampleShadingARB	lib/gl3w/GL/gl3w.h	/^#define glMinSampleShadingARB	/;"	d
glMultiDrawArrays	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiDrawArrays	/;"	d
glMultiDrawArrays	lib/gl3w/GL/gl3w.h	/^#define glMultiDrawArrays	/;"	d
glMultiDrawArraysIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiDrawArraysIndirect	/;"	d
glMultiDrawArraysIndirect	lib/gl3w/GL/gl3w.h	/^#define glMultiDrawArraysIndirect	/;"	d
glMultiDrawElements	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiDrawElements	/;"	d
glMultiDrawElements	lib/gl3w/GL/gl3w.h	/^#define glMultiDrawElements	/;"	d
glMultiDrawElementsBaseVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiDrawElementsBaseVertex	/;"	d
glMultiDrawElementsBaseVertex	lib/gl3w/GL/gl3w.h	/^#define glMultiDrawElementsBaseVertex	/;"	d
glMultiDrawElementsIndirect	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiDrawElementsIndirect	/;"	d
glMultiDrawElementsIndirect	lib/gl3w/GL/gl3w.h	/^#define glMultiDrawElementsIndirect	/;"	d
glMultiTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP1ui	/;"	d
glMultiTexCoordP1ui	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP1ui	/;"	d
glMultiTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP1uiv	/;"	d
glMultiTexCoordP1uiv	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP1uiv	/;"	d
glMultiTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP2ui	/;"	d
glMultiTexCoordP2ui	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP2ui	/;"	d
glMultiTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP2uiv	/;"	d
glMultiTexCoordP2uiv	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP2uiv	/;"	d
glMultiTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP3ui	/;"	d
glMultiTexCoordP3ui	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP3ui	/;"	d
glMultiTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP3uiv	/;"	d
glMultiTexCoordP3uiv	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP3uiv	/;"	d
glMultiTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP4ui	/;"	d
glMultiTexCoordP4ui	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP4ui	/;"	d
glMultiTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP4uiv	/;"	d
glMultiTexCoordP4uiv	lib/gl3w/GL/gl3w.h	/^#define glMultiTexCoordP4uiv	/;"	d
glNamedFramebufferParameteriEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glNamedFramebufferParameteriEXT	/;"	d
glNamedFramebufferParameteriEXT	lib/gl3w/GL/gl3w.h	/^#define glNamedFramebufferParameteriEXT	/;"	d
glNamedStringARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glNamedStringARB	/;"	d
glNamedStringARB	lib/gl3w/GL/gl3w.h	/^#define glNamedStringARB	/;"	d
glNormalP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glNormalP3ui	/;"	d
glNormalP3ui	lib/gl3w/GL/gl3w.h	/^#define glNormalP3ui	/;"	d
glNormalP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glNormalP3uiv	/;"	d
glNormalP3uiv	lib/gl3w/GL/gl3w.h	/^#define glNormalP3uiv	/;"	d
glObjectLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glObjectLabel	/;"	d
glObjectLabel	lib/gl3w/GL/gl3w.h	/^#define glObjectLabel	/;"	d
glObjectPtrLabel	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glObjectPtrLabel	/;"	d
glObjectPtrLabel	lib/gl3w/GL/gl3w.h	/^#define glObjectPtrLabel	/;"	d
glPatchParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPatchParameterfv	/;"	d
glPatchParameterfv	lib/gl3w/GL/gl3w.h	/^#define glPatchParameterfv	/;"	d
glPatchParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPatchParameteri	/;"	d
glPatchParameteri	lib/gl3w/GL/gl3w.h	/^#define glPatchParameteri	/;"	d
glPauseTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPauseTransformFeedback	/;"	d
glPauseTransformFeedback	lib/gl3w/GL/gl3w.h	/^#define glPauseTransformFeedback	/;"	d
glPixelStoref	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPixelStoref	/;"	d
glPixelStoref	lib/gl3w/GL/gl3w.h	/^#define glPixelStoref	/;"	d
glPixelStorei	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPixelStorei	/;"	d
glPixelStorei	lib/gl3w/GL/gl3w.h	/^#define glPixelStorei	/;"	d
glPointParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPointParameterf	/;"	d
glPointParameterf	lib/gl3w/GL/gl3w.h	/^#define glPointParameterf	/;"	d
glPointParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPointParameterfv	/;"	d
glPointParameterfv	lib/gl3w/GL/gl3w.h	/^#define glPointParameterfv	/;"	d
glPointParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPointParameteri	/;"	d
glPointParameteri	lib/gl3w/GL/gl3w.h	/^#define glPointParameteri	/;"	d
glPointParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPointParameteriv	/;"	d
glPointParameteriv	lib/gl3w/GL/gl3w.h	/^#define glPointParameteriv	/;"	d
glPointSize	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPointSize	/;"	d
glPointSize	lib/gl3w/GL/gl3w.h	/^#define glPointSize	/;"	d
glPolygonMode	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPolygonMode	/;"	d
glPolygonMode	lib/gl3w/GL/gl3w.h	/^#define glPolygonMode	/;"	d
glPolygonOffset	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPolygonOffset	/;"	d
glPolygonOffset	lib/gl3w/GL/gl3w.h	/^#define glPolygonOffset	/;"	d
glPopDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPopDebugGroup	/;"	d
glPopDebugGroup	lib/gl3w/GL/gl3w.h	/^#define glPopDebugGroup	/;"	d
glPrimitiveRestartIndex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPrimitiveRestartIndex	/;"	d
glPrimitiveRestartIndex	lib/gl3w/GL/gl3w.h	/^#define glPrimitiveRestartIndex	/;"	d
glProgramBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramBinary	/;"	d
glProgramBinary	lib/gl3w/GL/gl3w.h	/^#define glProgramBinary	/;"	d
glProgramParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramParameteri	/;"	d
glProgramParameteri	lib/gl3w/GL/gl3w.h	/^#define glProgramParameteri	/;"	d
glProgramUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1d	/;"	d
glProgramUniform1d	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1d	/;"	d
glProgramUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1dv	/;"	d
glProgramUniform1dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1dv	/;"	d
glProgramUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1f	/;"	d
glProgramUniform1f	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1f	/;"	d
glProgramUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1fv	/;"	d
glProgramUniform1fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1fv	/;"	d
glProgramUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1i	/;"	d
glProgramUniform1i	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1i	/;"	d
glProgramUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1iv	/;"	d
glProgramUniform1iv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1iv	/;"	d
glProgramUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1ui	/;"	d
glProgramUniform1ui	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1ui	/;"	d
glProgramUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform1uiv	/;"	d
glProgramUniform1uiv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform1uiv	/;"	d
glProgramUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2d	/;"	d
glProgramUniform2d	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2d	/;"	d
glProgramUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2dv	/;"	d
glProgramUniform2dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2dv	/;"	d
glProgramUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2f	/;"	d
glProgramUniform2f	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2f	/;"	d
glProgramUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2fv	/;"	d
glProgramUniform2fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2fv	/;"	d
glProgramUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2i	/;"	d
glProgramUniform2i	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2i	/;"	d
glProgramUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2iv	/;"	d
glProgramUniform2iv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2iv	/;"	d
glProgramUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2ui	/;"	d
glProgramUniform2ui	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2ui	/;"	d
glProgramUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform2uiv	/;"	d
glProgramUniform2uiv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform2uiv	/;"	d
glProgramUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3d	/;"	d
glProgramUniform3d	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3d	/;"	d
glProgramUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3dv	/;"	d
glProgramUniform3dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3dv	/;"	d
glProgramUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3f	/;"	d
glProgramUniform3f	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3f	/;"	d
glProgramUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3fv	/;"	d
glProgramUniform3fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3fv	/;"	d
glProgramUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3i	/;"	d
glProgramUniform3i	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3i	/;"	d
glProgramUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3iv	/;"	d
glProgramUniform3iv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3iv	/;"	d
glProgramUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3ui	/;"	d
glProgramUniform3ui	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3ui	/;"	d
glProgramUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform3uiv	/;"	d
glProgramUniform3uiv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform3uiv	/;"	d
glProgramUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4d	/;"	d
glProgramUniform4d	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4d	/;"	d
glProgramUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4dv	/;"	d
glProgramUniform4dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4dv	/;"	d
glProgramUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4f	/;"	d
glProgramUniform4f	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4f	/;"	d
glProgramUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4fv	/;"	d
glProgramUniform4fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4fv	/;"	d
glProgramUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4i	/;"	d
glProgramUniform4i	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4i	/;"	d
glProgramUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4iv	/;"	d
glProgramUniform4iv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4iv	/;"	d
glProgramUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4ui	/;"	d
glProgramUniform4ui	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4ui	/;"	d
glProgramUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniform4uiv	/;"	d
glProgramUniform4uiv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniform4uiv	/;"	d
glProgramUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2dv	/;"	d
glProgramUniformMatrix2dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2dv	/;"	d
glProgramUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2fv	/;"	d
glProgramUniformMatrix2fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2fv	/;"	d
glProgramUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x3dv	/;"	d
glProgramUniformMatrix2x3dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x3dv	/;"	d
glProgramUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x3fv	/;"	d
glProgramUniformMatrix2x3fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x3fv	/;"	d
glProgramUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x4dv	/;"	d
glProgramUniformMatrix2x4dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x4dv	/;"	d
glProgramUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x4fv	/;"	d
glProgramUniformMatrix2x4fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix2x4fv	/;"	d
glProgramUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3dv	/;"	d
glProgramUniformMatrix3dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3dv	/;"	d
glProgramUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3fv	/;"	d
glProgramUniformMatrix3fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3fv	/;"	d
glProgramUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x2dv	/;"	d
glProgramUniformMatrix3x2dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x2dv	/;"	d
glProgramUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x2fv	/;"	d
glProgramUniformMatrix3x2fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x2fv	/;"	d
glProgramUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x4dv	/;"	d
glProgramUniformMatrix3x4dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x4dv	/;"	d
glProgramUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x4fv	/;"	d
glProgramUniformMatrix3x4fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix3x4fv	/;"	d
glProgramUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4dv	/;"	d
glProgramUniformMatrix4dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4dv	/;"	d
glProgramUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4fv	/;"	d
glProgramUniformMatrix4fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4fv	/;"	d
glProgramUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x2dv	/;"	d
glProgramUniformMatrix4x2dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x2dv	/;"	d
glProgramUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x2fv	/;"	d
glProgramUniformMatrix4x2fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x2fv	/;"	d
glProgramUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x3dv	/;"	d
glProgramUniformMatrix4x3dv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x3dv	/;"	d
glProgramUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x3fv	/;"	d
glProgramUniformMatrix4x3fv	lib/gl3w/GL/gl3w.h	/^#define glProgramUniformMatrix4x3fv	/;"	d
glProvokingVertex	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glProvokingVertex	/;"	d
glProvokingVertex	lib/gl3w/GL/gl3w.h	/^#define glProvokingVertex	/;"	d
glPushDebugGroup	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glPushDebugGroup	/;"	d
glPushDebugGroup	lib/gl3w/GL/gl3w.h	/^#define glPushDebugGroup	/;"	d
glQueryCounter	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glQueryCounter	/;"	d
glQueryCounter	lib/gl3w/GL/gl3w.h	/^#define glQueryCounter	/;"	d
glReadBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glReadBuffer	/;"	d
glReadBuffer	lib/gl3w/GL/gl3w.h	/^#define glReadBuffer	/;"	d
glReadPixels	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glReadPixels	/;"	d
glReadPixels	lib/gl3w/GL/gl3w.h	/^#define glReadPixels	/;"	d
glReadnPixelsARB	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glReadnPixelsARB	/;"	d
glReadnPixelsARB	lib/gl3w/GL/gl3w.h	/^#define glReadnPixelsARB	/;"	d
glReleaseShaderCompiler	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glReleaseShaderCompiler	/;"	d
glReleaseShaderCompiler	lib/gl3w/GL/gl3w.h	/^#define glReleaseShaderCompiler	/;"	d
glRenderbufferStorage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glRenderbufferStorage	/;"	d
glRenderbufferStorage	lib/gl3w/GL/gl3w.h	/^#define glRenderbufferStorage	/;"	d
glRenderbufferStorageMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glRenderbufferStorageMultisample	/;"	d
glRenderbufferStorageMultisample	lib/gl3w/GL/gl3w.h	/^#define glRenderbufferStorageMultisample	/;"	d
glResumeTransformFeedback	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glResumeTransformFeedback	/;"	d
glResumeTransformFeedback	lib/gl3w/GL/gl3w.h	/^#define glResumeTransformFeedback	/;"	d
glSampleCoverage	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSampleCoverage	/;"	d
glSampleCoverage	lib/gl3w/GL/gl3w.h	/^#define glSampleCoverage	/;"	d
glSampleMaski	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSampleMaski	/;"	d
glSampleMaski	lib/gl3w/GL/gl3w.h	/^#define glSampleMaski	/;"	d
glSamplerParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSamplerParameterIiv	/;"	d
glSamplerParameterIiv	lib/gl3w/GL/gl3w.h	/^#define glSamplerParameterIiv	/;"	d
glSamplerParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSamplerParameterIuiv	/;"	d
glSamplerParameterIuiv	lib/gl3w/GL/gl3w.h	/^#define glSamplerParameterIuiv	/;"	d
glSamplerParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSamplerParameterf	/;"	d
glSamplerParameterf	lib/gl3w/GL/gl3w.h	/^#define glSamplerParameterf	/;"	d
glSamplerParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSamplerParameterfv	/;"	d
glSamplerParameterfv	lib/gl3w/GL/gl3w.h	/^#define glSamplerParameterfv	/;"	d
glSamplerParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSamplerParameteri	/;"	d
glSamplerParameteri	lib/gl3w/GL/gl3w.h	/^#define glSamplerParameteri	/;"	d
glSamplerParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSamplerParameteriv	/;"	d
glSamplerParameteriv	lib/gl3w/GL/gl3w.h	/^#define glSamplerParameteriv	/;"	d
glScissor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glScissor	/;"	d
glScissor	lib/gl3w/GL/gl3w.h	/^#define glScissor	/;"	d
glScissorArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glScissorArrayv	/;"	d
glScissorArrayv	lib/gl3w/GL/gl3w.h	/^#define glScissorArrayv	/;"	d
glScissorIndexed	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glScissorIndexed	/;"	d
glScissorIndexed	lib/gl3w/GL/gl3w.h	/^#define glScissorIndexed	/;"	d
glScissorIndexedv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glScissorIndexedv	/;"	d
glScissorIndexedv	lib/gl3w/GL/gl3w.h	/^#define glScissorIndexedv	/;"	d
glSecondaryColorP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSecondaryColorP3ui	/;"	d
glSecondaryColorP3ui	lib/gl3w/GL/gl3w.h	/^#define glSecondaryColorP3ui	/;"	d
glSecondaryColorP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glSecondaryColorP3uiv	/;"	d
glSecondaryColorP3uiv	lib/gl3w/GL/gl3w.h	/^#define glSecondaryColorP3uiv	/;"	d
glShaderBinary	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glShaderBinary	/;"	d
glShaderBinary	lib/gl3w/GL/gl3w.h	/^#define glShaderBinary	/;"	d
glShaderSource	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glShaderSource	/;"	d
glShaderSource	lib/gl3w/GL/gl3w.h	/^#define glShaderSource	/;"	d
glShaderSource	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglShaderSource glShaderSource;$/;"	v	typeref:typename:nkglShaderSource
glShaderStorageBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glShaderStorageBlockBinding	/;"	d
glShaderStorageBlockBinding	lib/gl3w/GL/gl3w.h	/^#define glShaderStorageBlockBinding	/;"	d
glStencilFunc	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glStencilFunc	/;"	d
glStencilFunc	lib/gl3w/GL/gl3w.h	/^#define glStencilFunc	/;"	d
glStencilFuncSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glStencilFuncSeparate	/;"	d
glStencilFuncSeparate	lib/gl3w/GL/gl3w.h	/^#define glStencilFuncSeparate	/;"	d
glStencilMask	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glStencilMask	/;"	d
glStencilMask	lib/gl3w/GL/gl3w.h	/^#define glStencilMask	/;"	d
glStencilMaskSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glStencilMaskSeparate	/;"	d
glStencilMaskSeparate	lib/gl3w/GL/gl3w.h	/^#define glStencilMaskSeparate	/;"	d
glStencilOp	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glStencilOp	/;"	d
glStencilOp	lib/gl3w/GL/gl3w.h	/^#define glStencilOp	/;"	d
glStencilOpSeparate	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glStencilOpSeparate	/;"	d
glStencilOpSeparate	lib/gl3w/GL/gl3w.h	/^#define glStencilOpSeparate	/;"	d
glTexBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexBuffer	/;"	d
glTexBuffer	lib/gl3w/GL/gl3w.h	/^#define glTexBuffer	/;"	d
glTexBufferRange	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexBufferRange	/;"	d
glTexBufferRange	lib/gl3w/GL/gl3w.h	/^#define glTexBufferRange	/;"	d
glTexCoordP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP1ui	/;"	d
glTexCoordP1ui	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP1ui	/;"	d
glTexCoordP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP1uiv	/;"	d
glTexCoordP1uiv	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP1uiv	/;"	d
glTexCoordP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP2ui	/;"	d
glTexCoordP2ui	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP2ui	/;"	d
glTexCoordP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP2uiv	/;"	d
glTexCoordP2uiv	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP2uiv	/;"	d
glTexCoordP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP3ui	/;"	d
glTexCoordP3ui	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP3ui	/;"	d
glTexCoordP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP3uiv	/;"	d
glTexCoordP3uiv	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP3uiv	/;"	d
glTexCoordP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP4ui	/;"	d
glTexCoordP4ui	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP4ui	/;"	d
glTexCoordP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexCoordP4uiv	/;"	d
glTexCoordP4uiv	lib/gl3w/GL/gl3w.h	/^#define glTexCoordP4uiv	/;"	d
glTexImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexImage1D	/;"	d
glTexImage1D	lib/gl3w/GL/gl3w.h	/^#define glTexImage1D	/;"	d
glTexImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexImage2D	/;"	d
glTexImage2D	lib/gl3w/GL/gl3w.h	/^#define glTexImage2D	/;"	d
glTexImage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexImage2DMultisample	/;"	d
glTexImage2DMultisample	lib/gl3w/GL/gl3w.h	/^#define glTexImage2DMultisample	/;"	d
glTexImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexImage3D	/;"	d
glTexImage3D	lib/gl3w/GL/gl3w.h	/^#define glTexImage3D	/;"	d
glTexImage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexImage3DMultisample	/;"	d
glTexImage3DMultisample	lib/gl3w/GL/gl3w.h	/^#define glTexImage3DMultisample	/;"	d
glTexParameterIiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexParameterIiv	/;"	d
glTexParameterIiv	lib/gl3w/GL/gl3w.h	/^#define glTexParameterIiv	/;"	d
glTexParameterIuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexParameterIuiv	/;"	d
glTexParameterIuiv	lib/gl3w/GL/gl3w.h	/^#define glTexParameterIuiv	/;"	d
glTexParameterf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexParameterf	/;"	d
glTexParameterf	lib/gl3w/GL/gl3w.h	/^#define glTexParameterf	/;"	d
glTexParameterfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexParameterfv	/;"	d
glTexParameterfv	lib/gl3w/GL/gl3w.h	/^#define glTexParameterfv	/;"	d
glTexParameteri	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexParameteri	/;"	d
glTexParameteri	lib/gl3w/GL/gl3w.h	/^#define glTexParameteri	/;"	d
glTexParameteriv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexParameteriv	/;"	d
glTexParameteriv	lib/gl3w/GL/gl3w.h	/^#define glTexParameteriv	/;"	d
glTexStorage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexStorage1D	/;"	d
glTexStorage1D	lib/gl3w/GL/gl3w.h	/^#define glTexStorage1D	/;"	d
glTexStorage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexStorage2D	/;"	d
glTexStorage2D	lib/gl3w/GL/gl3w.h	/^#define glTexStorage2D	/;"	d
glTexStorage2DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexStorage2DMultisample	/;"	d
glTexStorage2DMultisample	lib/gl3w/GL/gl3w.h	/^#define glTexStorage2DMultisample	/;"	d
glTexStorage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexStorage3D	/;"	d
glTexStorage3D	lib/gl3w/GL/gl3w.h	/^#define glTexStorage3D	/;"	d
glTexStorage3DMultisample	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexStorage3DMultisample	/;"	d
glTexStorage3DMultisample	lib/gl3w/GL/gl3w.h	/^#define glTexStorage3DMultisample	/;"	d
glTexSubImage1D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexSubImage1D	/;"	d
glTexSubImage1D	lib/gl3w/GL/gl3w.h	/^#define glTexSubImage1D	/;"	d
glTexSubImage2D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexSubImage2D	/;"	d
glTexSubImage2D	lib/gl3w/GL/gl3w.h	/^#define glTexSubImage2D	/;"	d
glTexSubImage3D	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTexSubImage3D	/;"	d
glTexSubImage3D	lib/gl3w/GL/gl3w.h	/^#define glTexSubImage3D	/;"	d
glTextureBufferRangeEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTextureBufferRangeEXT	/;"	d
glTextureBufferRangeEXT	lib/gl3w/GL/gl3w.h	/^#define glTextureBufferRangeEXT	/;"	d
glTextureStorage1DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTextureStorage1DEXT	/;"	d
glTextureStorage1DEXT	lib/gl3w/GL/gl3w.h	/^#define glTextureStorage1DEXT	/;"	d
glTextureStorage2DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTextureStorage2DEXT	/;"	d
glTextureStorage2DEXT	lib/gl3w/GL/gl3w.h	/^#define glTextureStorage2DEXT	/;"	d
glTextureStorage2DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTextureStorage2DMultisampleEXT	/;"	d
glTextureStorage2DMultisampleEXT	lib/gl3w/GL/gl3w.h	/^#define glTextureStorage2DMultisampleEXT	/;"	d
glTextureStorage3DEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTextureStorage3DEXT	/;"	d
glTextureStorage3DEXT	lib/gl3w/GL/gl3w.h	/^#define glTextureStorage3DEXT	/;"	d
glTextureStorage3DMultisampleEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTextureStorage3DMultisampleEXT	/;"	d
glTextureStorage3DMultisampleEXT	lib/gl3w/GL/gl3w.h	/^#define glTextureStorage3DMultisampleEXT	/;"	d
glTextureView	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTextureView	/;"	d
glTextureView	lib/gl3w/GL/gl3w.h	/^#define glTextureView	/;"	d
glTransformFeedbackVaryings	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glTransformFeedbackVaryings	/;"	d
glTransformFeedbackVaryings	lib/gl3w/GL/gl3w.h	/^#define glTransformFeedbackVaryings	/;"	d
glUniform1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1d	/;"	d
glUniform1d	lib/gl3w/GL/gl3w.h	/^#define glUniform1d	/;"	d
glUniform1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1dv	/;"	d
glUniform1dv	lib/gl3w/GL/gl3w.h	/^#define glUniform1dv	/;"	d
glUniform1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1f	/;"	d
glUniform1f	lib/gl3w/GL/gl3w.h	/^#define glUniform1f	/;"	d
glUniform1f	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniform1f glUniform1f;$/;"	v	typeref:typename:nkglUniform1f
glUniform1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1fv	/;"	d
glUniform1fv	lib/gl3w/GL/gl3w.h	/^#define glUniform1fv	/;"	d
glUniform1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1i	/;"	d
glUniform1i	lib/gl3w/GL/gl3w.h	/^#define glUniform1i	/;"	d
glUniform1i	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniform1i glUniform1i;$/;"	v	typeref:typename:nkglUniform1i
glUniform1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1iv	/;"	d
glUniform1iv	lib/gl3w/GL/gl3w.h	/^#define glUniform1iv	/;"	d
glUniform1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1ui	/;"	d
glUniform1ui	lib/gl3w/GL/gl3w.h	/^#define glUniform1ui	/;"	d
glUniform1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform1uiv	/;"	d
glUniform1uiv	lib/gl3w/GL/gl3w.h	/^#define glUniform1uiv	/;"	d
glUniform2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2d	/;"	d
glUniform2d	lib/gl3w/GL/gl3w.h	/^#define glUniform2d	/;"	d
glUniform2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2dv	/;"	d
glUniform2dv	lib/gl3w/GL/gl3w.h	/^#define glUniform2dv	/;"	d
glUniform2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2f	/;"	d
glUniform2f	lib/gl3w/GL/gl3w.h	/^#define glUniform2f	/;"	d
glUniform2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2fv	/;"	d
glUniform2fv	lib/gl3w/GL/gl3w.h	/^#define glUniform2fv	/;"	d
glUniform2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2i	/;"	d
glUniform2i	lib/gl3w/GL/gl3w.h	/^#define glUniform2i	/;"	d
glUniform2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2iv	/;"	d
glUniform2iv	lib/gl3w/GL/gl3w.h	/^#define glUniform2iv	/;"	d
glUniform2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2ui	/;"	d
glUniform2ui	lib/gl3w/GL/gl3w.h	/^#define glUniform2ui	/;"	d
glUniform2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform2uiv	/;"	d
glUniform2uiv	lib/gl3w/GL/gl3w.h	/^#define glUniform2uiv	/;"	d
glUniform3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3d	/;"	d
glUniform3d	lib/gl3w/GL/gl3w.h	/^#define glUniform3d	/;"	d
glUniform3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3dv	/;"	d
glUniform3dv	lib/gl3w/GL/gl3w.h	/^#define glUniform3dv	/;"	d
glUniform3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3f	/;"	d
glUniform3f	lib/gl3w/GL/gl3w.h	/^#define glUniform3f	/;"	d
glUniform3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3fv	/;"	d
glUniform3fv	lib/gl3w/GL/gl3w.h	/^#define glUniform3fv	/;"	d
glUniform3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3i	/;"	d
glUniform3i	lib/gl3w/GL/gl3w.h	/^#define glUniform3i	/;"	d
glUniform3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3iv	/;"	d
glUniform3iv	lib/gl3w/GL/gl3w.h	/^#define glUniform3iv	/;"	d
glUniform3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3ui	/;"	d
glUniform3ui	lib/gl3w/GL/gl3w.h	/^#define glUniform3ui	/;"	d
glUniform3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform3uiv	/;"	d
glUniform3uiv	lib/gl3w/GL/gl3w.h	/^#define glUniform3uiv	/;"	d
glUniform4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4d	/;"	d
glUniform4d	lib/gl3w/GL/gl3w.h	/^#define glUniform4d	/;"	d
glUniform4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4dv	/;"	d
glUniform4dv	lib/gl3w/GL/gl3w.h	/^#define glUniform4dv	/;"	d
glUniform4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4f	/;"	d
glUniform4f	lib/gl3w/GL/gl3w.h	/^#define glUniform4f	/;"	d
glUniform4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4fv	/;"	d
glUniform4fv	lib/gl3w/GL/gl3w.h	/^#define glUniform4fv	/;"	d
glUniform4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4i	/;"	d
glUniform4i	lib/gl3w/GL/gl3w.h	/^#define glUniform4i	/;"	d
glUniform4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4iv	/;"	d
glUniform4iv	lib/gl3w/GL/gl3w.h	/^#define glUniform4iv	/;"	d
glUniform4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4ui	/;"	d
glUniform4ui	lib/gl3w/GL/gl3w.h	/^#define glUniform4ui	/;"	d
glUniform4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniform4uiv	/;"	d
glUniform4uiv	lib/gl3w/GL/gl3w.h	/^#define glUniform4uiv	/;"	d
glUniformBlockBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformBlockBinding	/;"	d
glUniformBlockBinding	lib/gl3w/GL/gl3w.h	/^#define glUniformBlockBinding	/;"	d
glUniformMatrix2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix2dv	/;"	d
glUniformMatrix2dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix2dv	/;"	d
glUniformMatrix2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix2fv	/;"	d
glUniformMatrix2fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix2fv	/;"	d
glUniformMatrix2x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x3dv	/;"	d
glUniformMatrix2x3dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x3dv	/;"	d
glUniformMatrix2x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x3fv	/;"	d
glUniformMatrix2x3fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x3fv	/;"	d
glUniformMatrix2x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x4dv	/;"	d
glUniformMatrix2x4dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x4dv	/;"	d
glUniformMatrix2x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x4fv	/;"	d
glUniformMatrix2x4fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix2x4fv	/;"	d
glUniformMatrix3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix3dv	/;"	d
glUniformMatrix3dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix3dv	/;"	d
glUniformMatrix3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix3fv	/;"	d
glUniformMatrix3fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix3fv	/;"	d
glUniformMatrix3fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniformMatrix3fv glUniformMatrix3fv;$/;"	v	typeref:typename:nkglUniformMatrix3fv
glUniformMatrix3x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x2dv	/;"	d
glUniformMatrix3x2dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x2dv	/;"	d
glUniformMatrix3x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x2fv	/;"	d
glUniformMatrix3x2fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x2fv	/;"	d
glUniformMatrix3x4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x4dv	/;"	d
glUniformMatrix3x4dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x4dv	/;"	d
glUniformMatrix3x4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x4fv	/;"	d
glUniformMatrix3x4fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix3x4fv	/;"	d
glUniformMatrix4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix4dv	/;"	d
glUniformMatrix4dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix4dv	/;"	d
glUniformMatrix4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix4fv	/;"	d
glUniformMatrix4fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix4fv	/;"	d
glUniformMatrix4fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUniformMatrix4fv glUniformMatrix4fv;$/;"	v	typeref:typename:nkglUniformMatrix4fv
glUniformMatrix4x2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x2dv	/;"	d
glUniformMatrix4x2dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x2dv	/;"	d
glUniformMatrix4x2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x2fv	/;"	d
glUniformMatrix4x2fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x2fv	/;"	d
glUniformMatrix4x3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x3dv	/;"	d
glUniformMatrix4x3dv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x3dv	/;"	d
glUniformMatrix4x3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x3fv	/;"	d
glUniformMatrix4x3fv	lib/gl3w/GL/gl3w.h	/^#define glUniformMatrix4x3fv	/;"	d
glUniformSubroutinesuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUniformSubroutinesuiv	/;"	d
glUniformSubroutinesuiv	lib/gl3w/GL/gl3w.h	/^#define glUniformSubroutinesuiv	/;"	d
glUnmapBuffer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUnmapBuffer	/;"	d
glUnmapBuffer	lib/gl3w/GL/gl3w.h	/^#define glUnmapBuffer	/;"	d
glUnmapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUnmapBuffer glUnmapBuffer;$/;"	v	typeref:typename:nkglUnmapBuffer
glUseProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUseProgram	/;"	d
glUseProgram	lib/gl3w/GL/gl3w.h	/^#define glUseProgram	/;"	d
glUseProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglUseProgram glUseProgram;$/;"	v	typeref:typename:nkglUseProgram
glUseProgramStages	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glUseProgramStages	/;"	d
glUseProgramStages	lib/gl3w/GL/gl3w.h	/^#define glUseProgramStages	/;"	d
glValidateProgram	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glValidateProgram	/;"	d
glValidateProgram	lib/gl3w/GL/gl3w.h	/^#define glValidateProgram	/;"	d
glValidateProgramPipeline	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glValidateProgramPipeline	/;"	d
glValidateProgramPipeline	lib/gl3w/GL/gl3w.h	/^#define glValidateProgramPipeline	/;"	d
glVertexArrayBindVertexBufferEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexArrayBindVertexBufferEXT	/;"	d
glVertexArrayBindVertexBufferEXT	lib/gl3w/GL/gl3w.h	/^#define glVertexArrayBindVertexBufferEXT	/;"	d
glVertexArrayVertexAttribBindingEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribBindingEXT	/;"	d
glVertexArrayVertexAttribBindingEXT	lib/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribBindingEXT	/;"	d
glVertexArrayVertexAttribFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribFormatEXT	/;"	d
glVertexArrayVertexAttribFormatEXT	lib/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribFormatEXT	/;"	d
glVertexArrayVertexAttribIFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribIFormatEXT	/;"	d
glVertexArrayVertexAttribIFormatEXT	lib/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribIFormatEXT	/;"	d
glVertexArrayVertexAttribLFormatEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribLFormatEXT	/;"	d
glVertexArrayVertexAttribLFormatEXT	lib/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexAttribLFormatEXT	/;"	d
glVertexArrayVertexBindingDivisorEXT	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexBindingDivisorEXT	/;"	d
glVertexArrayVertexBindingDivisorEXT	lib/gl3w/GL/gl3w.h	/^#define glVertexArrayVertexBindingDivisorEXT	/;"	d
glVertexAttrib1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib1d	/;"	d
glVertexAttrib1d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib1d	/;"	d
glVertexAttrib1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib1dv	/;"	d
glVertexAttrib1dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib1dv	/;"	d
glVertexAttrib1f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib1f	/;"	d
glVertexAttrib1f	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib1f	/;"	d
glVertexAttrib1fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib1fv	/;"	d
glVertexAttrib1fv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib1fv	/;"	d
glVertexAttrib1s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib1s	/;"	d
glVertexAttrib1s	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib1s	/;"	d
glVertexAttrib1sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib1sv	/;"	d
glVertexAttrib1sv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib1sv	/;"	d
glVertexAttrib2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib2d	/;"	d
glVertexAttrib2d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib2d	/;"	d
glVertexAttrib2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib2dv	/;"	d
glVertexAttrib2dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib2dv	/;"	d
glVertexAttrib2f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib2f	/;"	d
glVertexAttrib2f	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib2f	/;"	d
glVertexAttrib2fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib2fv	/;"	d
glVertexAttrib2fv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib2fv	/;"	d
glVertexAttrib2s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib2s	/;"	d
glVertexAttrib2s	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib2s	/;"	d
glVertexAttrib2sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib2sv	/;"	d
glVertexAttrib2sv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib2sv	/;"	d
glVertexAttrib3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib3d	/;"	d
glVertexAttrib3d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib3d	/;"	d
glVertexAttrib3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib3dv	/;"	d
glVertexAttrib3dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib3dv	/;"	d
glVertexAttrib3f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib3f	/;"	d
glVertexAttrib3f	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib3f	/;"	d
glVertexAttrib3fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib3fv	/;"	d
glVertexAttrib3fv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib3fv	/;"	d
glVertexAttrib3s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib3s	/;"	d
glVertexAttrib3s	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib3s	/;"	d
glVertexAttrib3sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib3sv	/;"	d
glVertexAttrib3sv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib3sv	/;"	d
glVertexAttrib4Nbv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nbv	/;"	d
glVertexAttrib4Nbv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nbv	/;"	d
glVertexAttrib4Niv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Niv	/;"	d
glVertexAttrib4Niv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Niv	/;"	d
glVertexAttrib4Nsv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nsv	/;"	d
glVertexAttrib4Nsv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nsv	/;"	d
glVertexAttrib4Nub	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nub	/;"	d
glVertexAttrib4Nub	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nub	/;"	d
glVertexAttrib4Nubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nubv	/;"	d
glVertexAttrib4Nubv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nubv	/;"	d
glVertexAttrib4Nuiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nuiv	/;"	d
glVertexAttrib4Nuiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nuiv	/;"	d
glVertexAttrib4Nusv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nusv	/;"	d
glVertexAttrib4Nusv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4Nusv	/;"	d
glVertexAttrib4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4bv	/;"	d
glVertexAttrib4bv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4bv	/;"	d
glVertexAttrib4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4d	/;"	d
glVertexAttrib4d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4d	/;"	d
glVertexAttrib4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4dv	/;"	d
glVertexAttrib4dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4dv	/;"	d
glVertexAttrib4f	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4f	/;"	d
glVertexAttrib4f	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4f	/;"	d
glVertexAttrib4fv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4fv	/;"	d
glVertexAttrib4fv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4fv	/;"	d
glVertexAttrib4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4iv	/;"	d
glVertexAttrib4iv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4iv	/;"	d
glVertexAttrib4s	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4s	/;"	d
glVertexAttrib4s	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4s	/;"	d
glVertexAttrib4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4sv	/;"	d
glVertexAttrib4sv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4sv	/;"	d
glVertexAttrib4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4ubv	/;"	d
glVertexAttrib4ubv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4ubv	/;"	d
glVertexAttrib4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4uiv	/;"	d
glVertexAttrib4uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4uiv	/;"	d
glVertexAttrib4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttrib4usv	/;"	d
glVertexAttrib4usv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttrib4usv	/;"	d
glVertexAttribBinding	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribBinding	/;"	d
glVertexAttribBinding	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribBinding	/;"	d
glVertexAttribDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribDivisor	/;"	d
glVertexAttribDivisor	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribDivisor	/;"	d
glVertexAttribFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribFormat	/;"	d
glVertexAttribFormat	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribFormat	/;"	d
glVertexAttribI1i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI1i	/;"	d
glVertexAttribI1i	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI1i	/;"	d
glVertexAttribI1iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI1iv	/;"	d
glVertexAttribI1iv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI1iv	/;"	d
glVertexAttribI1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI1ui	/;"	d
glVertexAttribI1ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI1ui	/;"	d
glVertexAttribI1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI1uiv	/;"	d
glVertexAttribI1uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI1uiv	/;"	d
glVertexAttribI2i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI2i	/;"	d
glVertexAttribI2i	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI2i	/;"	d
glVertexAttribI2iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI2iv	/;"	d
glVertexAttribI2iv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI2iv	/;"	d
glVertexAttribI2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI2ui	/;"	d
glVertexAttribI2ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI2ui	/;"	d
glVertexAttribI2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI2uiv	/;"	d
glVertexAttribI2uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI2uiv	/;"	d
glVertexAttribI3i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI3i	/;"	d
glVertexAttribI3i	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI3i	/;"	d
glVertexAttribI3iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI3iv	/;"	d
glVertexAttribI3iv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI3iv	/;"	d
glVertexAttribI3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI3ui	/;"	d
glVertexAttribI3ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI3ui	/;"	d
glVertexAttribI3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI3uiv	/;"	d
glVertexAttribI3uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI3uiv	/;"	d
glVertexAttribI4bv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4bv	/;"	d
glVertexAttribI4bv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4bv	/;"	d
glVertexAttribI4i	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4i	/;"	d
glVertexAttribI4i	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4i	/;"	d
glVertexAttribI4iv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4iv	/;"	d
glVertexAttribI4iv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4iv	/;"	d
glVertexAttribI4sv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4sv	/;"	d
glVertexAttribI4sv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4sv	/;"	d
glVertexAttribI4ubv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4ubv	/;"	d
glVertexAttribI4ubv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4ubv	/;"	d
glVertexAttribI4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4ui	/;"	d
glVertexAttribI4ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4ui	/;"	d
glVertexAttribI4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4uiv	/;"	d
glVertexAttribI4uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4uiv	/;"	d
glVertexAttribI4usv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribI4usv	/;"	d
glVertexAttribI4usv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribI4usv	/;"	d
glVertexAttribIFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribIFormat	/;"	d
glVertexAttribIFormat	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribIFormat	/;"	d
glVertexAttribIPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribIPointer	/;"	d
glVertexAttribIPointer	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribIPointer	/;"	d
glVertexAttribL1d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL1d	/;"	d
glVertexAttribL1d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL1d	/;"	d
glVertexAttribL1dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL1dv	/;"	d
glVertexAttribL1dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL1dv	/;"	d
glVertexAttribL2d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL2d	/;"	d
glVertexAttribL2d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL2d	/;"	d
glVertexAttribL2dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL2dv	/;"	d
glVertexAttribL2dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL2dv	/;"	d
glVertexAttribL3d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL3d	/;"	d
glVertexAttribL3d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL3d	/;"	d
glVertexAttribL3dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL3dv	/;"	d
glVertexAttribL3dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL3dv	/;"	d
glVertexAttribL4d	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL4d	/;"	d
glVertexAttribL4d	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL4d	/;"	d
glVertexAttribL4dv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribL4dv	/;"	d
glVertexAttribL4dv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribL4dv	/;"	d
glVertexAttribLFormat	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribLFormat	/;"	d
glVertexAttribLFormat	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribLFormat	/;"	d
glVertexAttribLPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribLPointer	/;"	d
glVertexAttribLPointer	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribLPointer	/;"	d
glVertexAttribP1ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP1ui	/;"	d
glVertexAttribP1ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP1ui	/;"	d
glVertexAttribP1uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP1uiv	/;"	d
glVertexAttribP1uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP1uiv	/;"	d
glVertexAttribP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP2ui	/;"	d
glVertexAttribP2ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP2ui	/;"	d
glVertexAttribP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP2uiv	/;"	d
glVertexAttribP2uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP2uiv	/;"	d
glVertexAttribP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP3ui	/;"	d
glVertexAttribP3ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP3ui	/;"	d
glVertexAttribP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP3uiv	/;"	d
glVertexAttribP3uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP3uiv	/;"	d
glVertexAttribP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP4ui	/;"	d
glVertexAttribP4ui	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP4ui	/;"	d
glVertexAttribP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribP4uiv	/;"	d
glVertexAttribP4uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribP4uiv	/;"	d
glVertexAttribPointer	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexAttribPointer	/;"	d
glVertexAttribPointer	lib/gl3w/GL/gl3w.h	/^#define glVertexAttribPointer	/;"	d
glVertexAttribPointer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static nkglVertexAttribPointer glVertexAttribPointer;$/;"	v	typeref:typename:nkglVertexAttribPointer
glVertexBindingDivisor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexBindingDivisor	/;"	d
glVertexBindingDivisor	lib/gl3w/GL/gl3w.h	/^#define glVertexBindingDivisor	/;"	d
glVertexP2ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexP2ui	/;"	d
glVertexP2ui	lib/gl3w/GL/gl3w.h	/^#define glVertexP2ui	/;"	d
glVertexP2uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexP2uiv	/;"	d
glVertexP2uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexP2uiv	/;"	d
glVertexP3ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexP3ui	/;"	d
glVertexP3ui	lib/gl3w/GL/gl3w.h	/^#define glVertexP3ui	/;"	d
glVertexP3uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexP3uiv	/;"	d
glVertexP3uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexP3uiv	/;"	d
glVertexP4ui	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexP4ui	/;"	d
glVertexP4ui	lib/gl3w/GL/gl3w.h	/^#define glVertexP4ui	/;"	d
glVertexP4uiv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glVertexP4uiv	/;"	d
glVertexP4uiv	lib/gl3w/GL/gl3w.h	/^#define glVertexP4uiv	/;"	d
glViewport	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glViewport	/;"	d
glViewport	lib/gl3w/GL/gl3w.h	/^#define glViewport	/;"	d
glViewportArrayv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glViewportArrayv	/;"	d
glViewportArrayv	lib/gl3w/GL/gl3w.h	/^#define glViewportArrayv	/;"	d
glViewportIndexedf	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glViewportIndexedf	/;"	d
glViewportIndexedf	lib/gl3w/GL/gl3w.h	/^#define glViewportIndexedf	/;"	d
glViewportIndexedfv	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glViewportIndexedfv	/;"	d
glViewportIndexedfv	lib/gl3w/GL/gl3w.h	/^#define glViewportIndexedfv	/;"	d
glWaitSync	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.h	/^#define glWaitSync	/;"	d
glWaitSync	lib/gl3w/GL/gl3w.h	/^#define glWaitSync	/;"	d
gl_err	lib/nuklear/demo/x11_opengl2/main.c	/^static int gl_err = nk_false;$/;"	v	typeref:typename:int	file:
gl_err	lib/nuklear/demo/x11_opengl3/main.c	/^static int gl_err = nk_false;$/;"	v	typeref:typename:int	file:
gl_error_handler	lib/nuklear/demo/x11_opengl2/main.c	/^static int gl_error_handler(Display *dpy, XErrorEvent *ev)$/;"	f	typeref:typename:int	file:
gl_error_handler	lib/nuklear/demo/x11_opengl3/main.c	/^static int gl_error_handler(Display *dpy, XErrorEvent *ev)$/;"	f	typeref:typename:int	file:
glfw	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfw	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfw	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^} glfw;$/;"	v	typeref:struct:nk_glfw
glfw_error_callback	lib/cimgui/imgui/examples/opengl2_example/main.cpp	/^static void glfw_error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
glfw_error_callback	lib/cimgui/imgui/examples/opengl3_example/main.cpp	/^static void glfw_error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
glfw_error_callback	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void glfw_error_callback(int error, const char* description)$/;"	f	typeref:typename:void	file:
glfw_resize_callback	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void glfw_resize_callback(GLFWwindow*, int w, int h)$/;"	f	typeref:typename:void	file:
glkView:drawInRect:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
global_alpha	lib/nuklear/nuklear.h	/^    float global_alpha; \/* global alpha value *\/$/;"	m	struct:nk_convert_config	typeref:typename:float
global_alpha	lib/nuklear/src/nuklear.h	/^    float global_alpha; \/* global alpha value *\/$/;"	m	struct:nk_convert_config	typeref:typename:float
global_t	lib/klib/test/kthread_test.c	/^} global_t;$/;"	t	typeref:struct:__anone8d3801e0108	file:
glsl_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int glsl_available;$/;"	m	struct:opengl_info	typeref:typename:int
glsl_version_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *glsl_version_str;$/;"	m	struct:opengl_info	typeref:typename:const char *
glxCreateContext	lib/nuklear/demo/x11_opengl2/main.c	/^        typedef GLXContext(*glxCreateContext)(Display*, GLXFBConfig, GLXContext, Bool, const int/;"	t	function:main	typeref:typename:GLXContext (*)(Display *,GLXFBConfig,GLXContext,Bool,const int *)	file:
glxCreateContext	lib/nuklear/demo/x11_opengl3/main.c	/^        typedef GLXContext(*glxCreateContext)(Display*, GLXFBConfig, GLXContext, Bool, const int/;"	t	function:main	typeref:typename:GLXContext (*)(Display *,GLXFBConfig,GLXContext,Bool,const int *)	file:
glyf	lib/cimgui/imgui/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
glyf	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
glyf	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
glyph_count	lib/nuklear/nuklear.h	/^    int glyph_count;$/;"	m	struct:nk_font_atlas	typeref:typename:int
glyph_count	lib/nuklear/nuklear.h	/^    nk_rune glyph_count;$/;"	m	struct:nk_baked_font	typeref:typename:nk_rune
glyph_count	lib/nuklear/src/nuklear.h	/^    int glyph_count;$/;"	m	struct:nk_font_atlas	typeref:typename:int
glyph_count	lib/nuklear/src/nuklear.h	/^    nk_rune glyph_count;$/;"	m	struct:nk_baked_font	typeref:typename:nk_rune
glyph_offset	lib/nuklear/nuklear.h	/^    nk_rune glyph_offset;$/;"	m	struct:nk_baked_font	typeref:typename:nk_rune
glyph_offset	lib/nuklear/src/nuklear.h	/^    nk_rune glyph_offset;$/;"	m	struct:nk_baked_font	typeref:typename:nk_rune
glyphs	lib/nuklear/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font	typeref:struct:nk_font_glyph *
glyphs	lib/nuklear/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_glyph *
glyphs	lib/nuklear/src/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font	typeref:struct:nk_font_glyph *
glyphs	lib/nuklear/src/nuklear.h	/^    struct nk_font_glyph *glyphs;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_font_glyph *
gpos	lib/cimgui/imgui/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
gpu	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^    VkPhysicalDevice       gpu;$/;"	m	struct:ImGui_ImplGlfwVulkan_Init_Data	typeref:typename:VkPhysicalDevice
grab	lib/nuklear/nuklear.h	/^    unsigned char grab;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
grab	lib/nuklear/src/nuklear.h	/^    unsigned char grab;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
grabbed	lib/nuklear/nuklear.h	/^    unsigned char grabbed;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
grabbed	lib/nuklear/src/nuklear.h	/^    unsigned char grabbed;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
graphics_card_vendors	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^enum graphics_card_vendors {$/;"	g
green	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned short* green;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
greenBits	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int greenBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
grid_demo	lib/nuklear/example/extended.c	/^grid_demo(struct nk_context *ctx, struct media *media)$/;"	f	typeref:typename:void	file:
group	lib/nuklear/example/file_browser.c	/^    enum file_groups group;$/;"	m	struct:file	typeref:enum:file_groups	file:
group	lib/nuklear/example/file_browser.c	/^    enum file_groups group;$/;"	m	struct:file_group	typeref:enum:file_groups	file:
group	lib/nuklear/example/file_browser.c	/^    struct file_group group[FILE_GROUP_MAX];$/;"	m	struct:media	typeref:struct:file_group[]	file:
group_border	lib/nuklear/nuklear.h	/^    float group_border;$/;"	m	struct:nk_style_window	typeref:typename:float
group_border	lib/nuklear/src/nuklear.h	/^    float group_border;$/;"	m	struct:nk_style_window	typeref:typename:float
group_border_color	lib/nuklear/nuklear.h	/^    struct nk_color group_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
group_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color group_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
group_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 group_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
group_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 group_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
grow_factor	lib/nuklear/nuklear.h	/^    float grow_factor;$/;"	m	struct:nk_buffer	typeref:typename:float
grow_factor	lib/nuklear/src/nuklear.h	/^    float grow_factor;$/;"	m	struct:nk_buffer	typeref:typename:float
gsubrs	lib/cimgui/imgui/stb_truetype.h	/^   stbtt__buf gsubrs;                 \/\/ global charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
h	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
h	lib/cimgui/imgui/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
h	lib/cimgui/imgui/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anonc4c159420808	typeref:typename:int
h	lib/klib/ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon7bd1e0a20108	typeref:typename:int32_t	file:
h	lib/klib/test/kthread_test.c	/^	int max_iter, w, h;$/;"	m	struct:__anone8d3801e0108	typeref:typename:int	file:
h	lib/nuklear/demo/x11/nuklear_xlib.h	/^    unsigned int w, h;$/;"	m	struct:XSurface	typeref:typename:unsigned int
h	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    int w, h, pitch;$/;"	m	struct:rawfb_image	typeref:typename:int
h	lib/nuklear/example/stb_image.h	/^      int h,v;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
h	lib/nuklear/example/stb_image.h	/^   int w,h;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
h	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
h	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
h	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
h	lib/nuklear/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int
h	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short
h	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
h	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
h	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
h	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
h	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short
h	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
h	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
h	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord	file:
h	lib/nuklear/src/nuklear_font.c	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int	file:
h2	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
h_oversample	lib/cimgui/imgui/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anonc4c159420508	typeref:typename:unsigned char
h_oversample	lib/cimgui/imgui/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
h_oversample	lib/nuklear/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	typeref:typename:unsigned char
h_oversample	lib/nuklear/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned int
h_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	typeref:typename:unsigned char	file:
h_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned int	file:
ha	lib/nuklear/example/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
handle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HFONT handle;$/;"	m	struct:GdiFont	typeref:typename:HFONT
handle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpFont* handle;$/;"	m	struct:GdipFont	typeref:typename:GpFont *
handle	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct nk_user_font handle;$/;"	m	struct:XFont	typeref:struct:nk_user_font
handle	lib/nuklear/nuklear.h	/^    struct nk_user_font handle;$/;"	m	struct:nk_font	typeref:struct:nk_user_font
handle	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:nk_handle
handle	lib/nuklear/src/nuklear.h	/^    struct nk_user_font handle;$/;"	m	struct:nk_font	typeref:struct:nk_user_font
handle	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:nk_handle
hasText	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^- (BOOL)hasText {$/;"	m	implementation:KeyboardHandleriOS
has_extension	lib/nuklear/demo/x11_opengl2/main.c	/^has_extension(const char *string, const char *ext)$/;"	f	typeref:typename:int	file:
has_extension	lib/nuklear/demo/x11_opengl3/main.c	/^has_extension(const char *string, const char *ext)$/;"	f	typeref:typename:int	file:
has_preferred_x	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char has_preferred_x;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
has_preferred_x	lib/nuklear/nuklear.h	/^    unsigned char has_preferred_x;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
has_preferred_x	lib/nuklear/src/nuklear.h	/^    unsigned char has_preferred_x;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
has_scrolling	lib/nuklear/nuklear.h	/^    unsigned int has_scrolling;$/;"	m	struct:nk_panel	typeref:typename:unsigned int
has_scrolling	lib/nuklear/src/nuklear.h	/^    unsigned int has_scrolling;$/;"	m	struct:nk_panel	typeref:typename:unsigned int
hash_eq	lib/klib/test/khash_test.c	/^#define hash_eq(/;"	d	file:
hash_func	lib/klib/test/khash_test.c	/^#define hash_func(/;"	d	file:
hd	lib/nuklear/example/stb_image.h	/^      int hd,ha;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
hdr	lib/klib/kurl.c	/^	struct curl_slist *hdr;$/;"	m	struct:kurl_t	typeref:struct:curl_slist *	file:
head	lib/cimgui/imgui/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
head	lib/cimgui/imgui/stb_truetype.h	/^   struct stbtt__hheap_chunk *head;$/;"	m	struct:stbtt__hheap	typeref:struct:stbtt__hheap_chunk *
head	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
head	lib/nuklear/nuklear.h	/^    struct nk_tt__hheap_chunk *head;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap_chunk *
head	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
head	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt__hheap_chunk *head;$/;"	m	struct:nk_tt__hheap	typeref:struct:nk_tt__hheap_chunk *	file:
header	lib/nuklear/example/skinning.c	/^    struct nk_image header;$/;"	m	struct:media	typeref:struct:nk_image	file:
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_custom	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_image	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_line	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_scissor	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_text	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command
header	lib/nuklear/nuklear.h	/^    struct nk_rect header;$/;"	m	struct:nk_popup_state	typeref:struct:nk_rect
header	lib/nuklear/nuklear.h	/^    struct nk_style_window_header header;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window_header
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_arc_filled	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_circle_filled	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_curve	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_custom	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_image	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_line	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_polyline	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_filled	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_scissor	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_text	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_command header;$/;"	m	struct:nk_command_triangle_filled	typeref:struct:nk_command
header	lib/nuklear/src/nuklear.h	/^    struct nk_rect header;$/;"	m	struct:nk_popup_state	typeref:struct:nk_rect
header	lib/nuklear/src/nuklear.h	/^    struct nk_style_window_header header;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_window_header
header_height	lib/nuklear/nuklear.h	/^    float header_height;$/;"	m	struct:nk_panel	typeref:typename:float
header_height	lib/nuklear/src/nuklear.h	/^    float header_height;$/;"	m	struct:nk_panel	typeref:typename:float
header_t	lib/klib/kalloc.c	/^typedef struct header_t {$/;"	s	file:
header_t	lib/klib/kalloc.c	/^} header_t;$/;"	t	typeref:struct:header_t	file:
heapSort	lib/klib/test/ksort_test.cc	/^void heapSort (int numbers[], int qty) {$/;"	f	typeref:typename:void
height	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWimage	typeref:typename:int
height	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int height;$/;"	m	struct:GLFWvidmode	typeref:typename:int
height	lib/cimgui/imgui/stb_rect_pack.h	/^   int height;$/;"	m	struct:stbrp_context	typeref:typename:int
height	lib/cimgui/imgui/stb_textedit.h	/^   float height; \/\/ height of line$/;"	m	struct:__anonfd61af4b0508	typeref:typename:float
height	lib/cimgui/imgui/stb_truetype.h	/^   int   height;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
height	lib/cimgui/imgui/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anonc4c159421108	typeref:typename:int
height	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    int height;$/;"	m	struct:NkAllegro5Font	typeref:typename:int
height	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    unsigned int height;$/;"	m	struct:nk_allegro5	typeref:typename:unsigned int
height	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    int height;$/;"	m	struct:GdiFont	typeref:typename:int
height	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    unsigned int height;$/;"	m	struct:__anonc4120a9e0108	typeref:typename:unsigned int
height	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
height	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
height	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
height	lib/nuklear/demo/x11/main.c	/^    unsigned int height;$/;"	m	struct:XWindow	typeref:typename:unsigned int	file:
height	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int height;$/;"	m	struct:XFont	typeref:typename:int
height	lib/nuklear/demo/x11_opengl2/main.c	/^    int width, height;$/;"	m	struct:XWindow	typeref:typename:int	file:
height	lib/nuklear/demo/x11_opengl3/main.c	/^    int width, height;$/;"	m	struct:XWindow	typeref:typename:int	file:
height	lib/nuklear/demo/x11_rawfb/main.c	/^    unsigned int height;$/;"	m	struct:XWindow	typeref:typename:unsigned int	file:
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_baked_font	typeref:typename:float
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_command_text	typeref:typename:float
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_row_layout	typeref:typename:float
height	lib/nuklear/nuklear.h	/^    float height;$/;"	m	struct:nk_user_font	typeref:typename:float
height	lib/nuklear/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
height	lib/nuklear/nuklear.h	/^    int   height;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
height	lib/nuklear/nuklear.h	/^    int height;$/;"	m	struct:nk_rp_context	typeref:typename:int
height	lib/nuklear/nuklear.h	/^   float height; \/* height of line *\/$/;"	m	struct:nk_text_find	typeref:typename:float
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_baked_font	typeref:typename:float
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_command_text	typeref:typename:float
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_row_layout	typeref:typename:float
height	lib/nuklear/src/nuklear.h	/^    float height;$/;"	m	struct:nk_user_font	typeref:typename:float
height	lib/nuklear/src/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
height	lib/nuklear/src/nuklear_font.c	/^    int   height;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int	file:
height	lib/nuklear/src/nuklear_font.c	/^    int height;$/;"	m	struct:nk_rp_context	typeref:typename:int	file:
height	lib/nuklear/src/nuklear_text_editor.c	/^   float height; \/* height of line *\/$/;"	m	struct:nk_text_find	typeref:typename:float	file:
height	src/App.c	/^int width = 0, height = 0;$/;"	v	typeref:typename:int
help	build/Makefile	/^help:$/;"	t
heuristic	lib/cimgui/imgui/stb_rect_pack.h	/^   int heuristic;$/;"	m	struct:stbrp_context	typeref:typename:int
heuristic	lib/nuklear/nuklear.h	/^    int heuristic;$/;"	m	struct:nk_rp_context	typeref:typename:int
heuristic	lib/nuklear/src/nuklear_font.c	/^    int heuristic;$/;"	m	struct:nk_rp_context	typeref:typename:int	file:
hhea	lib/cimgui/imgui/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
hhea	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
hhea	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
hide	lib/nuklear/demo/allegro5/KeyboardHandleriOS.h	/^-(void)hide;$/;"	m	interface:KeyboardHandleriOS
hide	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^-(void)hide {$/;"	m	implementation:KeyboardHandleriOS
highlight	lib/nuklear/nuklear.h	/^    struct nk_color highlight;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_color
highlight	lib/nuklear/src/nuklear.h	/^    struct nk_color highlight;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_color
hmm_Q	lib/klib/khmm.c	/^FLOAT hmm_Q(const hmm_par_t *hp, const hmm_exp_t *he)$/;"	f	typeref:typename:FLOAT
hmm_Q0	lib/klib/khmm.c	/^FLOAT hmm_Q0(const hmm_par_t *hp, hmm_exp_t *he)$/;"	f	typeref:typename:FLOAT
hmm_Viterbi	lib/klib/khmm.c	/^FLOAT hmm_Viterbi(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f	typeref:typename:FLOAT
hmm_add_expect	lib/klib/khmm.c	/^void hmm_add_expect(const hmm_exp_t *he0, hmm_exp_t *he1)$/;"	f	typeref:typename:void
hmm_backward	lib/klib/khmm.c	/^void hmm_backward(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f	typeref:typename:void
hmm_data_t	lib/klib/khmm.h	/^} hmm_data_t;$/;"	t	typeref:struct:__anonf542711f0208
hmm_delete_data	lib/klib/khmm.c	/^void hmm_delete_data(hmm_data_t *hd)$/;"	f	typeref:typename:void
hmm_delete_exp	lib/klib/khmm.c	/^void hmm_delete_exp(hmm_exp_t *he)$/;"	f	typeref:typename:void
hmm_delete_par	lib/klib/khmm.c	/^void hmm_delete_par(hmm_par_t *hp)$/;"	f	typeref:typename:void
hmm_exp_t	lib/klib/khmm.h	/^} hmm_exp_t;$/;"	t	typeref:struct:__anonf542711f0308
hmm_expect	lib/klib/khmm.c	/^hmm_exp_t *hmm_expect(const hmm_par_t *hp, const hmm_data_t *hd)$/;"	f	typeref:typename:hmm_exp_t *
hmm_forward	lib/klib/khmm.c	/^void hmm_forward(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f	typeref:typename:void
hmm_gof_t	lib/klib/khmm.h	/^} hmm_gof_t;$/;"	t	typeref:struct:__anonf542711f0408
hmm_lk	lib/klib/khmm.c	/^FLOAT hmm_lk(const hmm_data_t *hd)$/;"	f	typeref:typename:FLOAT
hmm_new_data	lib/klib/khmm.c	/^hmm_data_t *hmm_new_data(int L, const char *seq, const hmm_par_t *hp)$/;"	f	typeref:typename:hmm_data_t *
hmm_new_exp	lib/klib/khmm.c	/^hmm_exp_t *hmm_new_exp(const hmm_par_t *hp)$/;"	f	typeref:typename:hmm_exp_t *
hmm_new_par	lib/klib/khmm.c	/^hmm_par_t *hmm_new_par(int m, int n)$/;"	f	typeref:typename:hmm_par_t *
hmm_par_t	lib/klib/khmm.h	/^} hmm_par_t;$/;"	t	typeref:struct:__anonf542711f0108
hmm_post_decode	lib/klib/khmm.c	/^void hmm_post_decode(const hmm_par_t *hp, hmm_data_t *hd)$/;"	f	typeref:typename:void
hmm_post_state	lib/klib/khmm.c	/^FLOAT hmm_post_state(const hmm_par_t *hp, const hmm_data_t *hd, int u, FLOAT *prob)$/;"	f	typeref:typename:FLOAT
hmm_pre_backward	lib/klib/khmm.c	/^void hmm_pre_backward(hmm_par_t *hp)$/;"	f	typeref:typename:void
hmm_simulate	lib/klib/khmm.c	/^char *hmm_simulate(const hmm_par_t *hp, int L)$/;"	f	typeref:typename:char *
hmtx	lib/cimgui/imgui/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
hmtx	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
hmtx	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
home	lib/nuklear/example/file_browser.c	/^    char home[MAX_PATH_LEN];$/;"	m	struct:file_browser	typeref:typename:char[]	file:
home	lib/nuklear/example/file_browser.c	/^    struct nk_image home;$/;"	m	struct:icons	typeref:struct:nk_image	file:
host	lib/klib/knetfile.h	/^	char *host, *port;$/;"	m	struct:knetFile_s	typeref:typename:char *
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
hover	lib/nuklear/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
hover	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
hover_active	lib/nuklear/nuklear.h	/^    struct nk_style_item hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
hover_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
hs	lib/nuklear/example/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anonc731c3c80808	typeref:typename:int
ht_destroy_data	lib/klib/test/kbtree_test.c	/^void ht_destroy_data()$/;"	f	typeref:typename:void
ht_destroy_data	lib/klib/test/khash_test.c	/^void ht_destroy_data()$/;"	f	typeref:typename:void
ht_init_data	lib/klib/test/kbtree_test.c	/^void ht_init_data()$/;"	f	typeref:typename:void
ht_init_data	lib/klib/test/khash_test.c	/^void ht_init_data()$/;"	f	typeref:typename:void
ht_khash_int	lib/klib/test/kbtree_test.c	/^void ht_khash_int()$/;"	f	typeref:typename:void
ht_khash_int	lib/klib/test/khash_test.c	/^void ht_khash_int()$/;"	f	typeref:typename:void
ht_khash_packed	lib/klib/test/khash_test.c	/^void ht_khash_packed()$/;"	f	typeref:typename:void
ht_khash_str	lib/klib/test/kbtree_test.c	/^void ht_khash_str()$/;"	f	typeref:typename:void
ht_khash_str	lib/klib/test/khash_test.c	/^void ht_khash_str()$/;"	f	typeref:typename:void
ht_khash_unpack	lib/klib/test/khash_test.c	/^void ht_khash_unpack()$/;"	f	typeref:typename:void
ht_timing	lib/klib/test/kbtree_test.c	/^void ht_timing(void (*f)(void))$/;"	f	typeref:typename:void
ht_timing	lib/klib/test/khash_test.c	/^void ht_timing(void (*f)(void))$/;"	f	typeref:typename:void
http_host	lib/klib/knetfile.h	/^	char *path, *http_host;$/;"	m	struct:knetFile_s	typeref:typename:char **
http_open	lib/klib/kopen.c	/^static int http_open(const char *fn)$/;"	f	typeref:typename:int	file:
hud	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^    DebugHUD _hud;$/;"	E	interface:GameViewController
huff_ac	lib/nuklear/example/stb_image.h	/^   stbi__huffman huff_ac[4];$/;"	m	struct:__anonc731c3c80608	typeref:typename:stbi__huffman[4]
huff_dc	lib/nuklear/example/stb_image.h	/^   stbi__huffman huff_dc[4];$/;"	m	struct:__anonc731c3c80608	typeref:typename:stbi__huffman[4]
hypergeo	lib/klib/lua/klib.lua	/^	local function hypergeo(n11, n1_, n_1, n)$/;"	f
hypergeo_inc	lib/klib/lua/klib.lua	/^	local function hypergeo_inc(n11, n1_, n_1, n)$/;"	f
i	lib/klib/kbtree.h	/^	int i;$/;"	m	struct:__anon929281af0208	typeref:typename:int
i	lib/klib/kbtree.h	/^	int i;$/;"	m	struct:__anon929281af0408	typeref:typename:int
i	lib/klib/kexpr.c	/^	int64_t i;$/;"	m	struct:ke1_s	typeref:typename:int64_t	file:
i	lib/klib/kthread.c	/^	long i;$/;"	m	struct:__anone5c783700108	typeref:typename:long	file:
i	lib/klib/kthread.c	/^	long i;$/;"	m	struct:__anone5c783700208	typeref:typename:long	file:
i	lib/klib/test/kgraph_test.c	/^	int i;$/;"	m	struct:__anon3cfbb3980108	typeref:typename:int	file:
i	lib/nuklear/nuklear.h	/^    int i;$/;"	m	union:nk_property	typeref:typename:int
i	lib/nuklear/nuklear.h	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	m	union:nk_murmur_hash::__anond7ed0994080a	typeref:typename:const nk_uint *
i	lib/nuklear/nuklear.h	/^    union {nk_uint i; float f;} conv = {0};$/;"	m	union:nk_inv_sqrt::__anond7ed0994070a	typeref:typename:nk_uint
i	lib/nuklear/src/nuklear_internal.h	/^    int i;$/;"	m	union:nk_property	typeref:typename:int
i	lib/nuklear/src/nuklear_math.c	/^    union {nk_uint i; float f;} conv = {0};$/;"	m	union:nk_inv_sqrt::__anon8d04436f010a	typeref:typename:nk_uint	file:
i	lib/nuklear/src/nuklear_util.c	/^    union {const nk_uint *i; const nk_byte *b;} conv = {0};$/;"	m	union:nk_murmur_hash::__anona0ff62e3010a	typeref:typename:const nk_uint *	file:
icon	lib/nuklear/example/file_browser.c	/^    struct nk_image *icon;$/;"	m	struct:file_group	typeref:struct:nk_image *	file:
icon_load	lib/nuklear/example/canvas.c	/^icon_load(const char *filename)$/;"	f	typeref:struct:nk_image	file:
icon_load	lib/nuklear/example/extended.c	/^icon_load(const char *filename)$/;"	f	typeref:struct:nk_image	file:
icon_load	lib/nuklear/example/file_browser.c	/^icon_load(const char *filename)$/;"	f	typeref:struct:nk_image	file:
icon_sheet	lib/nuklear/example/file_browser.c	/^    int icon_sheet;$/;"	m	struct:media	typeref:typename:int	file:
icons	lib/nuklear/example/file_browser.c	/^    struct icons icons;$/;"	m	struct:media	typeref:struct:icons	file:
icons	lib/nuklear/example/file_browser.c	/^struct icons {$/;"	s	file:
id	lib/cimgui/imgui/stb_rect_pack.h	/^   int            id;$/;"	m	struct:stbrp_rect	typeref:typename:int
id	lib/cimgui/imgui/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
id	lib/nuklear/example/stb_image.h	/^      int id;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
id	lib/nuklear/nuklear.h	/^    int id;$/;"	m	struct:nk_rp_rect	typeref:typename:int
id	lib/nuklear/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anond7ed0994020a	typeref:typename:int
id	lib/nuklear/src/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon8fa426eb020a	typeref:typename:int
id	lib/nuklear/src/nuklear_font.c	/^    int id;$/;"	m	struct:nk_rp_rect	typeref:typename:int	file:
idata	lib/nuklear/example/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonc731c3c80c08	typeref:typename:stbi_uc *
idct_block_kernel	lib/nuklear/example/stb_image.h	/^   void (*idct_block_kernel)(stbi_uc *out, int out_stride, short data[64]);$/;"	m	struct:__anonc731c3c80608	typeref:typename:void (*)(stbi_uc * out,int out_stride,short data[64])
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "ipad",$/;"	s	object:images.10
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "ipad",$/;"	s	object:images.11
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "ipad",$/;"	s	object:images.12
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "ipad",$/;"	s	object:images.6
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "ipad",$/;"	s	object:images.7
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "ipad",$/;"	s	object:images.8
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "ipad",$/;"	s	object:images.9
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "iphone",$/;"	s	object:images.0
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "iphone",$/;"	s	object:images.1
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "iphone",$/;"	s	object:images.2
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "iphone",$/;"	s	object:images.3
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "iphone",$/;"	s	object:images.4
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "iphone",$/;"	s	object:images.5
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.0
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.1
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.10
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.2
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.3
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.4
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.5
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.6
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.7
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.8
idiom	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "idiom" : "mac",$/;"	s	object:images.9
igAcceptDragDropPayload	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API CONST struct ImGuiPayload *igAcceptDragDropPayload(CONST char *type, ImGuiDragDropFla/;"	f	typeref:typename:CIMGUI_API CONST struct ImGuiPayload *
igAlignTextToFramePadding	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igAlignTextToFramePadding()$/;"	f	typeref:typename:CIMGUI_API void
igBegin	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBegin(CONST char *name, bool *p_opened, ImGuiWindowFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igBegin2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBegin2(CONST char *name, bool *p_opened, CONST ImVec2 size_on_first_use, float/;"	f	typeref:typename:CIMGUI_API bool
igBeginChild	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginChild(CONST char *str_id, CONST ImVec2 size, bool border, ImGuiWindowFlag/;"	f	typeref:typename:CIMGUI_API bool
igBeginChildEx	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginChildEx(ImGuiID id, CONST ImVec2 size, bool border, ImGuiWindowFlags extr/;"	f	typeref:typename:CIMGUI_API bool
igBeginChildFrame	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginChildFrame(ImGuiID id, CONST ImVec2 size, ImGuiWindowFlags extra_flags)$/;"	f	typeref:typename:CIMGUI_API bool
igBeginCombo	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginCombo(CONST char *label, CONST char *preview_value, ImGuiComboFlags flags/;"	f	typeref:typename:CIMGUI_API bool
igBeginDragDropSource	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginDragDropSource(ImGuiDragDropFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igBeginDragDropTarget	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginDragDropTarget()$/;"	f	typeref:typename:CIMGUI_API bool
igBeginGroup	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igBeginGroup()$/;"	f	typeref:typename:CIMGUI_API void
igBeginMainMenuBar	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginMainMenuBar()$/;"	f	typeref:typename:CIMGUI_API bool
igBeginMenu	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginMenu(CONST char *label, bool enabled)$/;"	f	typeref:typename:CIMGUI_API bool
igBeginMenuBar	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginMenuBar()$/;"	f	typeref:typename:CIMGUI_API bool
igBeginPopup	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopup(CONST char *str_id)$/;"	f	typeref:typename:CIMGUI_API bool
igBeginPopupContextItem	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextItem(CONST char *str_id, int mouse_button)$/;"	f	typeref:typename:CIMGUI_API bool
igBeginPopupContextVoid	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextVoid(CONST char *str_id, int mouse_button)$/;"	f	typeref:typename:CIMGUI_API bool
igBeginPopupContextWindow	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupContextWindow(CONST char *str_id, int mouse_button, bool also_over_i/;"	f	typeref:typename:CIMGUI_API bool
igBeginPopupModal	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igBeginPopupModal(CONST char *name, bool *p_open, ImGuiWindowFlags extra_flags)$/;"	f	typeref:typename:CIMGUI_API bool
igBeginTooltip	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igBeginTooltip()$/;"	f	typeref:typename:CIMGUI_API void
igBullet	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igBullet()$/;"	f	typeref:typename:CIMGUI_API void
igBulletText	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igBulletText(CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igBulletTextV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igBulletTextV(CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API void
igButton	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igButton(CONST char *label, CONST ImVec2 size)$/;"	f	typeref:typename:CIMGUI_API bool
igCalcItemRectClosestPoint	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igCalcItemRectClosestPoint(ImVec2 *pOut, CONST ImVec2 pos, bool on_edge, float o/;"	f	typeref:typename:CIMGUI_API void
igCalcItemWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igCalcItemWidth()$/;"	f	typeref:typename:CIMGUI_API float
igCalcListClipping	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igCalcListClipping(int items_count, float items_height, int *out_items_display_s/;"	f	typeref:typename:CIMGUI_API void
igCalcTextSize	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igCalcTextSize(ImVec2 *pOut, CONST char *text, CONST char *text_end, bool hide_t/;"	f	typeref:typename:CIMGUI_API void
igCaptureKeyboardFromApp	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igCaptureKeyboardFromApp(bool capture)$/;"	f	typeref:typename:CIMGUI_API void
igCaptureMouseFromApp	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igCaptureMouseFromApp(bool capture)$/;"	f	typeref:typename:CIMGUI_API void
igCheckbox	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igCheckbox(CONST char *label, bool *v)$/;"	f	typeref:typename:CIMGUI_API bool
igCheckboxFlags	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igCheckboxFlags(CONST char *label, unsigned int *flags, unsigned int flags_value/;"	f	typeref:typename:CIMGUI_API bool
igCloseCurrentPopup	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igCloseCurrentPopup()$/;"	f	typeref:typename:CIMGUI_API void
igCollapsingHeader	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igCollapsingHeader(CONST char *label, ImGuiTreeNodeFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igCollapsingHeaderEx	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igCollapsingHeaderEx(CONST char *label, bool *p_open, ImGuiTreeNodeFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igColorButton	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorButton(CONST char *desc_id, CONST ImVec4 col, ImGuiColorEditFlags flags, /;"	f	typeref:typename:CIMGUI_API bool
igColorConvertFloat4ToU32	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igColorConvertFloat4ToU32(CONST ImVec4 in)$/;"	f	typeref:typename:CIMGUI_API ImU32
igColorConvertHSVtoRGB	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igColorConvertHSVtoRGB(float h, float s, float v, float *out_r, float *out_g, fl/;"	f	typeref:typename:CIMGUI_API void
igColorConvertRGBtoHSV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igColorConvertRGBtoHSV(float r, float g, float b, float *out_h, float *out_s, fl/;"	f	typeref:typename:CIMGUI_API void
igColorConvertU32ToFloat4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igColorConvertU32ToFloat4(ImVec4 *pOut, ImU32 in)$/;"	f	typeref:typename:CIMGUI_API void
igColorEdit3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorEdit3(CONST char *label, float col[3], ImGuiColorEditFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igColorEdit4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorEdit4(CONST char *label, float col[4], ImGuiColorEditFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igColorPicker3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorPicker3(CONST char *label, float col[3], ImGuiColorEditFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igColorPicker4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igColorPicker4(CONST char *label, float col[4], ImGuiColorEditFlags flags, CONST/;"	f	typeref:typename:CIMGUI_API bool
igColumns	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igColumns(int count, CONST char *id, bool border)$/;"	f	typeref:typename:CIMGUI_API void
igCombo	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igCombo(CONST char *label, int *current_item, CONST char *CONST *items, int item/;"	f	typeref:typename:CIMGUI_API bool
igCombo2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igCombo2(CONST char *label, int *current_item, CONST char *items_separated_by_ze/;"	f	typeref:typename:CIMGUI_API bool
igCombo3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igCombo3(CONST char *label, int *current_item, bool (*items_getter)(void *data, /;"	f	typeref:typename:CIMGUI_API bool
igCreateContext	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiContext *igCreateContext(struct ImFontAtlas* shared_font_atlas)$/;"	f	typeref:typename:CIMGUI_API ImGuiContext *
igDestroyContext	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igDestroyContext(ImGuiContext *ctx)$/;"	f	typeref:typename:CIMGUI_API void
igDragFloat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat(CONST char *label, float *v, float v_speed, float v_min, float v_max/;"	f	typeref:typename:CIMGUI_API bool
igDragFloat2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat2(CONST char *label, float v[2], float v_speed, float v_min, float v_/;"	f	typeref:typename:CIMGUI_API bool
igDragFloat3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat3(CONST char *label, float v[3], float v_speed, float v_min, float v_/;"	f	typeref:typename:CIMGUI_API bool
igDragFloat4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloat4(CONST char *label, float v[4], float v_speed, float v_min, float v_/;"	f	typeref:typename:CIMGUI_API bool
igDragFloatRange2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragFloatRange2(CONST char *label, float *v_current_min, float *v_current_max,/;"	f	typeref:typename:CIMGUI_API bool
igDragInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt(CONST char *label, int *v, float v_speed, int v_min, int v_max, CONST /;"	f	typeref:typename:CIMGUI_API bool
igDragInt2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt2(CONST char *label, int v[2], float v_speed, int v_min, int v_max, CON/;"	f	typeref:typename:CIMGUI_API bool
igDragInt3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt3(CONST char *label, int v[3], float v_speed, int v_min, int v_max, CON/;"	f	typeref:typename:CIMGUI_API bool
igDragInt4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragInt4(CONST char *label, int v[4], float v_speed, int v_min, int v_max, CON/;"	f	typeref:typename:CIMGUI_API bool
igDragIntRange2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igDragIntRange2(CONST char *label, int *v_current_min, int *v_current_max, float/;"	f	typeref:typename:CIMGUI_API bool
igDummy	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igDummy(CONST ImVec2 *size)$/;"	f	typeref:typename:CIMGUI_API void
igEnd	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEnd()$/;"	f	typeref:typename:CIMGUI_API void
igEndChild	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndChild()$/;"	f	typeref:typename:CIMGUI_API void
igEndChildFrame	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndChildFrame()$/;"	f	typeref:typename:CIMGUI_API void
igEndCombo	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndCombo()$/;"	f	typeref:typename:CIMGUI_API void
igEndDragDropSource	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndDragDropSource()$/;"	f	typeref:typename:CIMGUI_API void
igEndDragDropTarget	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndDragDropTarget()$/;"	f	typeref:typename:CIMGUI_API void
igEndFrame	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndFrame()$/;"	f	typeref:typename:CIMGUI_API void
igEndGroup	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndGroup()$/;"	f	typeref:typename:CIMGUI_API void
igEndMainMenuBar	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndMainMenuBar()$/;"	f	typeref:typename:CIMGUI_API void
igEndMenu	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndMenu()$/;"	f	typeref:typename:CIMGUI_API void
igEndMenuBar	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndMenuBar()$/;"	f	typeref:typename:CIMGUI_API void
igEndPopup	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndPopup()$/;"	f	typeref:typename:CIMGUI_API void
igEndTooltip	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igEndTooltip()$/;"	f	typeref:typename:CIMGUI_API void
igGetClipboardText	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API CONST char *igGetClipboardText()$/;"	f	typeref:typename:CIMGUI_API CONST char *
igGetColorU32	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32(ImGuiCol idx, float alpha_mul)$/;"	f	typeref:typename:CIMGUI_API ImU32
igGetColorU32U32	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32U32(ImU32 col)$/;"	f	typeref:typename:CIMGUI_API ImU32
igGetColorU32Vec	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImU32 igGetColorU32Vec(CONST ImVec4 *col)$/;"	f	typeref:typename:CIMGUI_API ImU32
igGetColumnIndex	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int igGetColumnIndex()$/;"	f	typeref:typename:CIMGUI_API int
igGetColumnOffset	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetColumnOffset(int column_index)$/;"	f	typeref:typename:CIMGUI_API float
igGetColumnWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetColumnWidth(int column_index)$/;"	f	typeref:typename:CIMGUI_API float
igGetColumnsCount	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int igGetColumnsCount()$/;"	f	typeref:typename:CIMGUI_API int
igGetContentRegionAvail	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetContentRegionAvail(struct ImVec2 *out)$/;"	f	typeref:typename:CIMGUI_API void
igGetContentRegionAvailWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetContentRegionAvailWidth()$/;"	f	typeref:typename:CIMGUI_API float
igGetContentRegionMax	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetContentRegionMax(ImVec2 *out)$/;"	f	typeref:typename:CIMGUI_API void
igGetCurrentContext	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiContext *igGetCurrentContext()$/;"	f	typeref:typename:CIMGUI_API ImGuiContext *
igGetCursorPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetCursorPos(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetCursorPosX	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetCursorPosX()$/;"	f	typeref:typename:CIMGUI_API float
igGetCursorPosY	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetCursorPosY()$/;"	f	typeref:typename:CIMGUI_API float
igGetCursorScreenPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetCursorScreenPos(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetCursorStartPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetCursorStartPos(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetDrawData	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawData *igGetDrawData()$/;"	f	typeref:typename:CIMGUI_API ImDrawData *
igGetDrawListSharedData	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API struct ImDrawListSharedData *igGetDrawListSharedData()$/;"	f	typeref:typename:CIMGUI_API struct ImDrawListSharedData *
igGetFont	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImFont *igGetFont()$/;"	f	typeref:typename:CIMGUI_API ImFont *
igGetFontSize	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetFontSize()$/;"	f	typeref:typename:CIMGUI_API float
igGetFontTexUvWhitePixel	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetFontTexUvWhitePixel(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetFrameCount	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int igGetFrameCount()$/;"	f	typeref:typename:CIMGUI_API int
igGetFrameHeight	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetFrameHeight()$/;"	f	typeref:typename:CIMGUI_API float
igGetFrameHeightWithSpacing	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetFrameHeightWithSpacing()$/;"	f	typeref:typename:CIMGUI_API float
igGetIDPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDPtr(CONST void *ptr_id)$/;"	f	typeref:typename:CIMGUI_API ImGuiID
igGetIDStr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDStr(CONST char *str_id)$/;"	f	typeref:typename:CIMGUI_API ImGuiID
igGetIDStrRange	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiID igGetIDStrRange(CONST char *str_begin, CONST char *str_end)$/;"	f	typeref:typename:CIMGUI_API ImGuiID
igGetIO	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiIO *igGetIO()$/;"	f	typeref:typename:CIMGUI_API ImGuiIO *
igGetItemRectMax	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetItemRectMax(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetItemRectMin	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetItemRectMin(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetItemRectSize	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetItemRectSize(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetKeyIndex	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int igGetKeyIndex(ImGuiKey imgui_key)$/;"	f	typeref:typename:CIMGUI_API int
igGetKeyPressedAmount	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API int igGetKeyPressedAmount(int key_index, float repeat_delay, float rate)$/;"	f	typeref:typename:CIMGUI_API int
igGetMouseCursor	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiMouseCursor igGetMouseCursor()$/;"	f	typeref:typename:CIMGUI_API ImGuiMouseCursor
igGetMouseDragDelta	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetMouseDragDelta(ImVec2 *pOut, int button, float lock_threshold)$/;"	f	typeref:typename:CIMGUI_API void
igGetMousePos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetMousePos(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetMousePosOnOpeningCurrentPopup	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetMousePosOnOpeningCurrentPopup(ImVec2 *pOut)$/;"	f	typeref:typename:CIMGUI_API void
igGetOverlayDrawList	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API struct ImDrawList *igGetOverlayDrawList()$/;"	f	typeref:typename:CIMGUI_API struct ImDrawList *
igGetScrollMaxX	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollMaxX()$/;"	f	typeref:typename:CIMGUI_API float
igGetScrollMaxY	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollMaxY()$/;"	f	typeref:typename:CIMGUI_API float
igGetScrollX	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollX()$/;"	f	typeref:typename:CIMGUI_API float
igGetScrollY	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetScrollY()$/;"	f	typeref:typename:CIMGUI_API float
igGetStateStorage	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStorage *igGetStateStorage()$/;"	f	typeref:typename:CIMGUI_API ImGuiStorage *
igGetStyle	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImGuiStyle *igGetStyle()$/;"	f	typeref:typename:CIMGUI_API ImGuiStyle *
igGetStyleColorName	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API CONST char *igGetStyleColorName(ImGuiCol idx)$/;"	f	typeref:typename:CIMGUI_API CONST char *
igGetStyleColorVec4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetStyleColorVec4(ImVec4 *pOut, ImGuiCol idx)$/;"	f	typeref:typename:CIMGUI_API void
igGetTextLineHeight	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetTextLineHeight()$/;"	f	typeref:typename:CIMGUI_API float
igGetTextLineHeightWithSpacing	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetTextLineHeightWithSpacing()$/;"	f	typeref:typename:CIMGUI_API float
igGetTime	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetTime()$/;"	f	typeref:typename:CIMGUI_API float
igGetTreeNodeToLabelSpacing	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetTreeNodeToLabelSpacing()$/;"	f	typeref:typename:CIMGUI_API float
igGetVersion	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API CONST char *igGetVersion()$/;"	f	typeref:typename:CIMGUI_API CONST char *
igGetWindowContentRegionMax	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowContentRegionMax(ImVec2 *out)$/;"	f	typeref:typename:CIMGUI_API void
igGetWindowContentRegionMin	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowContentRegionMin(ImVec2 *out)$/;"	f	typeref:typename:CIMGUI_API void
igGetWindowContentRegionWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetWindowContentRegionWidth()$/;"	f	typeref:typename:CIMGUI_API float
igGetWindowDrawList	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API ImDrawList *igGetWindowDrawList()$/;"	f	typeref:typename:CIMGUI_API ImDrawList *
igGetWindowHeight	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetWindowHeight()$/;"	f	typeref:typename:CIMGUI_API float
igGetWindowPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowPos(ImVec2 *out)$/;"	f	typeref:typename:CIMGUI_API void
igGetWindowSize	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igGetWindowSize(ImVec2 *out)$/;"	f	typeref:typename:CIMGUI_API void
igGetWindowWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API float igGetWindowWidth()$/;"	f	typeref:typename:CIMGUI_API float
igImage	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igImage(ImTextureID user_texture_id, CONST ImVec2 size, CONST ImVec2 uv0, CONST /;"	f	typeref:typename:CIMGUI_API void
igImageButton	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igImageButton(ImTextureID user_texture_id, CONST ImVec2 size, CONST ImVec2 uv0, /;"	f	typeref:typename:CIMGUI_API bool
igIndent	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igIndent(float indent_w)$/;"	f	typeref:typename:CIMGUI_API void
igInputFloat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat(CONST char *label, float *v, float step, float step_fast, int decim/;"	f	typeref:typename:CIMGUI_API bool
igInputFloat2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat2(CONST char *label, float v[2], int decimal_precision, ImGuiInputTe/;"	f	typeref:typename:CIMGUI_API bool
igInputFloat3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat3(CONST char *label, float v[3], int decimal_precision, ImGuiInputTe/;"	f	typeref:typename:CIMGUI_API bool
igInputFloat4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputFloat4(CONST char *label, float v[4], int decimal_precision, ImGuiInputTe/;"	f	typeref:typename:CIMGUI_API bool
igInputInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt(CONST char *label, int *v, int step, int step_fast, ImGuiInputTextFla/;"	f	typeref:typename:CIMGUI_API bool
igInputInt2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt2(CONST char *label, int v[2], ImGuiInputTextFlags extra_flags)$/;"	f	typeref:typename:CIMGUI_API bool
igInputInt3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt3(CONST char *label, int v[3], ImGuiInputTextFlags extra_flags)$/;"	f	typeref:typename:CIMGUI_API bool
igInputInt4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputInt4(CONST char *label, int v[4], ImGuiInputTextFlags extra_flags)$/;"	f	typeref:typename:CIMGUI_API bool
igInputText	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputText(CONST char *label, char *buf, size_t buf_size, ImGuiInputTextFlags f/;"	f	typeref:typename:CIMGUI_API bool
igInputTextMultiline	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInputTextMultiline(CONST char *label, char *buf, size_t buf_size, CONST ImVec2/;"	f	typeref:typename:CIMGUI_API bool
igInvisibleButton	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igInvisibleButton(CONST char *str_id, CONST ImVec2 size)$/;"	f	typeref:typename:CIMGUI_API bool
igIsAnyItemActive	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemActive()$/;"	f	typeref:typename:CIMGUI_API bool
igIsAnyItemHovered	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyItemHovered()$/;"	f	typeref:typename:CIMGUI_API bool
igIsAnyWindowFocused	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyWindowFocused()$/;"	f	typeref:typename:CIMGUI_API bool
igIsAnyWindowHovered	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsAnyWindowHovered()$/;"	f	typeref:typename:CIMGUI_API bool
igIsItemActive	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemActive()$/;"	f	typeref:typename:CIMGUI_API bool
igIsItemClicked	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemClicked(int mouse_button)$/;"	f	typeref:typename:CIMGUI_API bool
igIsItemHovered	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemHovered(ImGuiHoveredFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igIsItemVisible	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsItemVisible()$/;"	f	typeref:typename:CIMGUI_API bool
igIsKeyDown	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsKeyDown(int user_key_index)$/;"	f	typeref:typename:CIMGUI_API bool
igIsKeyPressed	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsKeyPressed(int user_key_index, bool repeat)$/;"	f	typeref:typename:CIMGUI_API bool
igIsKeyReleased	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsKeyReleased(int user_key_index)$/;"	f	typeref:typename:CIMGUI_API bool
igIsMouseClicked	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseClicked(int button, bool repeat)$/;"	f	typeref:typename:CIMGUI_API bool
igIsMouseDoubleClicked	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseDoubleClicked(int button)$/;"	f	typeref:typename:CIMGUI_API bool
igIsMouseDown	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseDown(int button)$/;"	f	typeref:typename:CIMGUI_API bool
igIsMouseDragging	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseDragging(int button, float lock_threshold)$/;"	f	typeref:typename:CIMGUI_API bool
igIsMouseHoveringRect	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseHoveringRect(CONST ImVec2 r_min, CONST ImVec2 r_max, bool clip)$/;"	f	typeref:typename:CIMGUI_API bool
igIsMousePosValid	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMousePosValid(CONST struct ImVec2 *mouse_pos)$/;"	f	typeref:typename:CIMGUI_API bool
igIsMouseReleased	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsMouseReleased(int button)$/;"	f	typeref:typename:CIMGUI_API bool
igIsPopupOpen	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsPopupOpen(CONST char *str_id)$/;"	f	typeref:typename:CIMGUI_API bool
igIsRectVisible	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsRectVisible(CONST ImVec2 item_size)$/;"	f	typeref:typename:CIMGUI_API bool
igIsRectVisible2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsRectVisible2(CONST struct ImVec2 *rect_min, CONST struct ImVec2 *rect_max)$/;"	f	typeref:typename:CIMGUI_API bool
igIsWindowAppearing	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowAppearing()$/;"	f	typeref:typename:CIMGUI_API bool
igIsWindowCollapsed	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowCollapsed()$/;"	f	typeref:typename:CIMGUI_API bool
igIsWindowFocused	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowFocused(ImGuiFocusedFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igIsWindowHovered	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igIsWindowHovered(ImGuiHoveredFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igLabelText	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLabelText(CONST char *label, CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igLabelTextV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLabelTextV(CONST char *label, CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API void
igListBox	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBox(CONST char *label, int *current_item, CONST char *CONST *items, int it/;"	f	typeref:typename:CIMGUI_API bool
igListBox2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBox2(CONST char *label, int *current_item, bool (*items_getter)(void *data/;"	f	typeref:typename:CIMGUI_API bool
igListBoxFooter	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igListBoxFooter()$/;"	f	typeref:typename:CIMGUI_API void
igListBoxHeader	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBoxHeader(CONST char *label, CONST ImVec2 size)$/;"	f	typeref:typename:CIMGUI_API bool
igListBoxHeader2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igListBoxHeader2(CONST char *label, int items_count, int height_in_items)$/;"	f	typeref:typename:CIMGUI_API bool
igLogButtons	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLogButtons()$/;"	f	typeref:typename:CIMGUI_API void
igLogFinish	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLogFinish()$/;"	f	typeref:typename:CIMGUI_API void
igLogText	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLogText(CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igLogToClipboard	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLogToClipboard(int max_depth)$/;"	f	typeref:typename:CIMGUI_API void
igLogToFile	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLogToFile(int max_depth, CONST char *filename)$/;"	f	typeref:typename:CIMGUI_API void
igLogToTTY	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igLogToTTY(int max_depth)$/;"	f	typeref:typename:CIMGUI_API void
igMemAlloc	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void *igMemAlloc(size_t sz)$/;"	f	typeref:typename:CIMGUI_API void *
igMemFree	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igMemFree(void *ptr)$/;"	f	typeref:typename:CIMGUI_API void
igMenuItem	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igMenuItem(CONST char *label, CONST char *shortcut, bool selected, bool enabled)$/;"	f	typeref:typename:CIMGUI_API bool
igMenuItemPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igMenuItemPtr(CONST char *label, CONST char *shortcut, bool *p_selected, bool en/;"	f	typeref:typename:CIMGUI_API bool
igNewFrame	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igNewFrame()$/;"	f	typeref:typename:CIMGUI_API void
igNewLine	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igNewLine()$/;"	f	typeref:typename:CIMGUI_API void
igNextColumn	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igNextColumn()$/;"	f	typeref:typename:CIMGUI_API void
igOpenPopup	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igOpenPopup(CONST char *str_id)$/;"	f	typeref:typename:CIMGUI_API void
igOpenPopupOnItemClick	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igOpenPopupOnItemClick(const char *str_id, int mouse_button)$/;"	f	typeref:typename:CIMGUI_API bool
igPlotHistogram	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotHistogram(CONST char *label, CONST float *values, int values_count, int va/;"	f	typeref:typename:CIMGUI_API void
igPlotHistogram2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotHistogram2(CONST char *label, float (*values_getter)(void *data, int idx),/;"	f	typeref:typename:CIMGUI_API void
igPlotLines	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotLines(CONST char *label, CONST float *values, int values_count, int values/;"	f	typeref:typename:CIMGUI_API void
igPlotLines2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPlotLines2(CONST char *label, float (*values_getter)(void *data, int idx), voi/;"	f	typeref:typename:CIMGUI_API void
igPopAllowKeyboardFocus	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopAllowKeyboardFocus()$/;"	f	typeref:typename:CIMGUI_API void
igPopButtonRepeat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopButtonRepeat()$/;"	f	typeref:typename:CIMGUI_API void
igPopClipRect	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopClipRect()$/;"	f	typeref:typename:CIMGUI_API void
igPopFont	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopFont()$/;"	f	typeref:typename:CIMGUI_API void
igPopID	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopID()$/;"	f	typeref:typename:CIMGUI_API void
igPopItemWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopItemWidth()$/;"	f	typeref:typename:CIMGUI_API void
igPopStyleColor	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopStyleColor(int count)$/;"	f	typeref:typename:CIMGUI_API void
igPopStyleVar	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopStyleVar(int count)$/;"	f	typeref:typename:CIMGUI_API void
igPopTextWrapPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPopTextWrapPos()$/;"	f	typeref:typename:CIMGUI_API void
igProgressBar	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igProgressBar(float fraction, CONST ImVec2 *size_arg, CONST char *overlay)$/;"	f	typeref:typename:CIMGUI_API void
igPushAllowKeyboardFocus	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushAllowKeyboardFocus(bool v)$/;"	f	typeref:typename:CIMGUI_API void
igPushButtonRepeat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushButtonRepeat(bool repeat)$/;"	f	typeref:typename:CIMGUI_API void
igPushClipRect	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushClipRect(CONST struct ImVec2 clip_rect_min, CONST struct ImVec2 clip_rect_/;"	f	typeref:typename:CIMGUI_API void
igPushFont	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushFont(ImFont *font)$/;"	f	typeref:typename:CIMGUI_API void
igPushIDInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDInt(int int_id)$/;"	f	typeref:typename:CIMGUI_API void
igPushIDPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDPtr(CONST void *ptr_id)$/;"	f	typeref:typename:CIMGUI_API void
igPushIDStr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDStr(CONST char *str_id)$/;"	f	typeref:typename:CIMGUI_API void
igPushIDStrRange	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushIDStrRange(CONST char *str_begin, CONST char *str_end)$/;"	f	typeref:typename:CIMGUI_API void
igPushItemWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushItemWidth(float item_width)$/;"	f	typeref:typename:CIMGUI_API void
igPushStyleColor	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleColor(ImGuiCol idx, CONST ImVec4 col)$/;"	f	typeref:typename:CIMGUI_API void
igPushStyleColorU32	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleColorU32(ImGuiCol idx, ImU32 col)$/;"	f	typeref:typename:CIMGUI_API void
igPushStyleVar	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleVar(ImGuiStyleVar idx, float val)$/;"	f	typeref:typename:CIMGUI_API void
igPushStyleVarVec	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushStyleVarVec(ImGuiStyleVar idx, CONST ImVec2 val)$/;"	f	typeref:typename:CIMGUI_API void
igPushTextWrapPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igPushTextWrapPos(float wrap_pos_x)$/;"	f	typeref:typename:CIMGUI_API void
igRadioButton	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igRadioButton(CONST char *label, int *v, int v_button)$/;"	f	typeref:typename:CIMGUI_API bool
igRadioButtonBool	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igRadioButtonBool(CONST char *label, bool active)$/;"	f	typeref:typename:CIMGUI_API bool
igRender	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igRender()$/;"	f	typeref:typename:CIMGUI_API void
igResetMouseDragDelta	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igResetMouseDragDelta(int button)$/;"	f	typeref:typename:CIMGUI_API void
igSameLine	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSameLine(float pos_x, float spacing_w)$/;"	f	typeref:typename:CIMGUI_API void
igSelectable	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSelectable(CONST char *label, bool selected, ImGuiSelectableFlags flags, CONST/;"	f	typeref:typename:CIMGUI_API bool
igSelectableEx	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSelectableEx(CONST char *label, bool *p_selected, ImGuiSelectableFlags flags, /;"	f	typeref:typename:CIMGUI_API bool
igSeparator	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSeparator()$/;"	f	typeref:typename:CIMGUI_API void
igSetClipboardText	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetClipboardText(CONST char *text)$/;"	f	typeref:typename:CIMGUI_API void
igSetColorEditOptions	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetColorEditOptions(ImGuiColorEditFlags flags)$/;"	f	typeref:typename:CIMGUI_API void
igSetColumnOffset	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetColumnOffset(int column_index, float offset_x)$/;"	f	typeref:typename:CIMGUI_API void
igSetColumnWidth	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetColumnWidth(int column_index, float width)$/;"	f	typeref:typename:CIMGUI_API void
igSetCurrentContext	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCurrentContext(ImGuiContext *ctx)$/;"	f	typeref:typename:CIMGUI_API void
igSetCursorPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorPos(CONST ImVec2 local_pos)$/;"	f	typeref:typename:CIMGUI_API void
igSetCursorPosX	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorPosX(float x)$/;"	f	typeref:typename:CIMGUI_API void
igSetCursorPosY	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorPosY(float y)$/;"	f	typeref:typename:CIMGUI_API void
igSetCursorScreenPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetCursorScreenPos(CONST ImVec2 pos)$/;"	f	typeref:typename:CIMGUI_API void
igSetDragDropPayload	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSetDragDropPayload(CONST char *type, CONST void *data, size_t size, ImGuiCond /;"	f	typeref:typename:CIMGUI_API bool
igSetItemAllowOverlap	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetItemAllowOverlap()$/;"	f	typeref:typename:CIMGUI_API void
igSetItemDefaultFocus	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetItemDefaultFocus()$/;"	f	typeref:typename:CIMGUI_API void
igSetKeyboardFocusHere	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetKeyboardFocusHere(int offset)$/;"	f	typeref:typename:CIMGUI_API void
igSetMouseCursor	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetMouseCursor(ImGuiMouseCursor type)$/;"	f	typeref:typename:CIMGUI_API void
igSetNextTreeNodeOpen	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextTreeNodeOpen(bool opened, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetNextWindowCollapsed	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowCollapsed(bool collapsed, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetNextWindowContentSize	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowContentSize(CONST ImVec2 size)$/;"	f	typeref:typename:CIMGUI_API void
igSetNextWindowFocus	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowFocus()$/;"	f	typeref:typename:CIMGUI_API void
igSetNextWindowPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowPos(CONST struct ImVec2 pos, ImGuiCond cond, CONST struct ImVec2 /;"	f	typeref:typename:CIMGUI_API void
igSetNextWindowSize	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowSize(CONST ImVec2 size, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetNextWindowSizeConstraints	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetNextWindowSizeConstraints(CONST struct ImVec2 size_min, CONST struct ImVec2/;"	f	typeref:typename:CIMGUI_API void
igSetScrollFromPosY	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollFromPosY(float pos_y, float center_y_ratio)$/;"	f	typeref:typename:CIMGUI_API void
igSetScrollHere	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollHere(float center_y_ratio)$/;"	f	typeref:typename:CIMGUI_API void
igSetScrollX	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollX(float scroll_x)$/;"	f	typeref:typename:CIMGUI_API void
igSetScrollY	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetScrollY(float scroll_y)$/;"	f	typeref:typename:CIMGUI_API void
igSetStateStorage	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetStateStorage(ImGuiStorage *tree)$/;"	f	typeref:typename:CIMGUI_API void
igSetTooltip	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetTooltip(CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igSetTooltipV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetTooltipV(CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowCollapsed	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowCollapsed(bool collapsed, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowCollapsed2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowCollapsed2(CONST char *name, bool collapsed, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowFocus	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowFocus()$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowFocus2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowFocus2(CONST char *name)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowFontScale	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowFontScale(float scale)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowPos(CONST ImVec2 pos, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowPosByName	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowPosByName(CONST char *name, CONST ImVec2 pos, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowSize	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowSize(CONST ImVec2 size, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igSetWindowSize2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSetWindowSize2(CONST char *name, CONST ImVec2 size, ImGuiCond cond)$/;"	f	typeref:typename:CIMGUI_API void
igShowDemoWindow	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igShowDemoWindow(bool *opened)$/;"	f	typeref:typename:CIMGUI_API void
igShowFontSelector	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igShowFontSelector(CONST char *label)$/;"	f	typeref:typename:CIMGUI_API void
igShowMetricsWindow	lib/cimgui/cimgui/cimgui.cpp	/^IMGUI_API void igShowMetricsWindow(bool *opened)$/;"	f	typeref:typename:IMGUI_API void
igShowStyleEditor	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igShowStyleEditor(ImGuiStyle *ref)$/;"	f	typeref:typename:CIMGUI_API void
igShowStyleSelector	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igShowStyleSelector(CONST char *label)$/;"	f	typeref:typename:CIMGUI_API void
igShowUserGuide	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igShowUserGuide()$/;"	f	typeref:typename:CIMGUI_API void
igSliderAngle	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderAngle(CONST char *label, float *v_rad, float v_degrees_min, float v_degr/;"	f	typeref:typename:CIMGUI_API bool
igSliderFloat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat(CONST char *label, float *v, float v_min, float v_max, CONST char /;"	f	typeref:typename:CIMGUI_API bool
igSliderFloat2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat2(CONST char *label, float v[2], float v_min, float v_max, CONST ch/;"	f	typeref:typename:CIMGUI_API bool
igSliderFloat3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat3(CONST char *label, float v[3], float v_min, float v_max, CONST ch/;"	f	typeref:typename:CIMGUI_API bool
igSliderFloat4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderFloat4(CONST char *label, float v[4], float v_min, float v_max, CONST ch/;"	f	typeref:typename:CIMGUI_API bool
igSliderInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt(CONST char *label, int *v, int v_min, int v_max, CONST char *display/;"	f	typeref:typename:CIMGUI_API bool
igSliderInt2	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt2(CONST char *label, int v[2], int v_min, int v_max, CONST char *disp/;"	f	typeref:typename:CIMGUI_API bool
igSliderInt3	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt3(CONST char *label, int v[3], int v_min, int v_max, CONST char *disp/;"	f	typeref:typename:CIMGUI_API bool
igSliderInt4	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSliderInt4(CONST char *label, int v[4], int v_min, int v_max, CONST char *disp/;"	f	typeref:typename:CIMGUI_API bool
igSmallButton	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igSmallButton(CONST char *label)$/;"	f	typeref:typename:CIMGUI_API bool
igSpacing	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igSpacing()$/;"	f	typeref:typename:CIMGUI_API void
igStyleColorsClassic	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igStyleColorsClassic(struct ImGuiStyle *dst)$/;"	f	typeref:typename:CIMGUI_API void
igStyleColorsDark	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igStyleColorsDark(struct ImGuiStyle *dst)$/;"	f	typeref:typename:CIMGUI_API void
igStyleColorsLight	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igStyleColorsLight(struct ImGuiStyle *dst)$/;"	f	typeref:typename:CIMGUI_API void
igText	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igText(CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igTextColored	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextColored(CONST ImVec4 col, CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igTextColoredV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextColoredV(CONST ImVec4 col, CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API void
igTextDisabled	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextDisabled(CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igTextDisabledV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextDisabledV(CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API void
igTextUnformatted	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextUnformatted(CONST char *text, CONST char *text_end)$/;"	f	typeref:typename:CIMGUI_API void
igTextV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextV(CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API void
igTextWrapped	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextWrapped(CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API void
igTextWrappedV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTextWrappedV(CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API void
igTreeAdvanceToLabelPos	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTreeAdvanceToLabelPos()$/;"	f	typeref:typename:CIMGUI_API void
igTreeNode	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNode(CONST char *label)$/;"	f	typeref:typename:CIMGUI_API bool
igTreeNodeEx	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeEx(CONST char *label, ImGuiTreeNodeFlags flags)$/;"	f	typeref:typename:CIMGUI_API bool
igTreeNodeExPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExPtr(CONST void *ptr_id, ImGuiTreeNodeFlags flags, CONST char *fmt, ./;"	f	typeref:typename:CIMGUI_API bool
igTreeNodeExStr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExStr(CONST char *str_id, ImGuiTreeNodeFlags flags, CONST char *fmt, ./;"	f	typeref:typename:CIMGUI_API bool
igTreeNodeExV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExV(CONST char *str_id, ImGuiTreeNodeFlags flags, CONST char *fmt, va_/;"	f	typeref:typename:CIMGUI_API bool
igTreeNodeExVPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeExVPtr(CONST void *ptr_id, ImGuiTreeNodeFlags flags, CONST char *fmt, /;"	f	typeref:typename:CIMGUI_API bool
igTreeNodePtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodePtr(CONST void *ptr_id, CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API bool
igTreeNodePtrV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodePtrV(CONST void *ptr_id, CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API bool
igTreeNodeStr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeStr(CONST char *str_id, CONST char *fmt, ...)$/;"	f	typeref:typename:CIMGUI_API bool
igTreeNodeStrV	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igTreeNodeStrV(CONST char *str_id, CONST char *fmt, va_list args)$/;"	f	typeref:typename:CIMGUI_API bool
igTreePop	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTreePop()$/;"	f	typeref:typename:CIMGUI_API void
igTreePushPtr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTreePushPtr(CONST void *ptr_id)$/;"	f	typeref:typename:CIMGUI_API void
igTreePushStr	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igTreePushStr(CONST char *str_id)$/;"	f	typeref:typename:CIMGUI_API void
igUnindent	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igUnindent(float indent_w)$/;"	f	typeref:typename:CIMGUI_API void
igVSliderFloat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igVSliderFloat(CONST char *label, CONST ImVec2 size, float *v, float v_min, floa/;"	f	typeref:typename:CIMGUI_API bool
igVSliderInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API bool igVSliderInt(CONST char *label, CONST ImVec2 size, int *v, int v_min, int v_max,/;"	f	typeref:typename:CIMGUI_API bool
igValueBool	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igValueBool(CONST char *prefix, bool b)$/;"	f	typeref:typename:CIMGUI_API void
igValueFloat	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igValueFloat(CONST char *prefix, float v, CONST char *float_format)$/;"	f	typeref:typename:CIMGUI_API void
igValueInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igValueInt(CONST char *prefix, int v)$/;"	f	typeref:typename:CIMGUI_API void
igValueUInt	lib/cimgui/cimgui/cimgui.cpp	/^CIMGUI_API void igValueUInt(CONST char *prefix, unsigned int v)$/;"	f	typeref:typename:CIMGUI_API void
ignored	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef struct { int ignored; } *					uSynergyCookie;$/;"	m	struct:__anon77dd0a3a0108	typeref:typename:int
image	lib/nuklear/nuklear.h	/^    struct nk_image image;$/;"	m	union:nk_style_item_data	typeref:struct:nk_image
image	lib/nuklear/src/nuklear.h	/^    struct nk_image image;$/;"	m	union:nk_style_item_data	typeref:struct:nk_image
image_load	lib/nuklear/example/skinning.c	/^image_load(const char *filename)$/;"	f	typeref:typename:GLuint	file:
image_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
image_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
image_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
image_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 image_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
images	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^  "images" : [$/;"	a
images	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^  "images" : [$/;"	a
images	lib/nuklear/example/extended.c	/^    struct nk_image images[9];$/;"	m	struct:media	typeref:struct:nk_image[9]	file:
img	lib/nuklear/nuklear.h	/^    struct nk_image img;$/;"	m	struct:nk_command_image	typeref:struct:nk_image
img	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_image
img	lib/nuklear/src/nuklear.h	/^    struct nk_image img;$/;"	m	struct:nk_command_image	typeref:struct:nk_image
img	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_image
img_buffer	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi_uc *
img_buffer_end	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer, *img_buffer_end;$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi_uc **
img_buffer_original	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi_uc *
img_buffer_original_end	lib/nuklear/example/stb_image.h	/^   stbi_uc *img_buffer_original, *img_buffer_original_end;$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi_uc **
img_comp	lib/nuklear/example/stb_image.h	/^   } img_comp[4];$/;"	m	struct:__anonc731c3c80608	typeref:struct:__anonc731c3c80608::__anonc731c3c80708[4]
img_file	lib/nuklear/example/file_browser.c	/^    struct nk_image img_file;$/;"	m	struct:icons	typeref:struct:nk_image	file:
img_h_max	lib/nuklear/example/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
img_mcu_h	lib/nuklear/example/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
img_mcu_w	lib/nuklear/example/stb_image.h	/^   int img_mcu_w, img_mcu_h;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
img_mcu_x	lib/nuklear/example/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
img_mcu_y	lib/nuklear/example/stb_image.h	/^   int img_mcu_x, img_mcu_y;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
img_n	lib/nuklear/example/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anonc731c3c80308	typeref:typename:int
img_out_n	lib/nuklear/example/stb_image.h	/^   int img_n, img_out_n;$/;"	m	struct:__anonc731c3c80308	typeref:typename:int
img_v_max	lib/nuklear/example/stb_image.h	/^   int img_h_max, img_v_max;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
img_x	lib/nuklear/example/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi__uint32
img_y	lib/nuklear/example/stb_image.h	/^   stbi__uint32 img_x, img_y;$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi__uint32
imgui	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^@property (strong, nonatomic) ImGuiHelper *imgui;$/;"	p	interface:GameViewController
imgui_example	lib/cimgui/cimgui/Makefile	/^imgui_example:$(OBJS)$/;"	t
imgui_impl	build/Makefile	/^imgui_impl: cmake_check_build_system$/;"	t
imgui_impl/fast	build/Makefile	/^imgui_impl\/fast:$/;"	t
in	lib/nuklear/demo/node_editor.c	/^    struct nk_vec2 in;$/;"	m	struct:node_link	typeref:struct:nk_vec2	file:
inc_button	lib/nuklear/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_button
inc_button	lib/nuklear/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_button
inc_button	lib/nuklear/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_button
inc_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_button
inc_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_button
inc_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button inc_button;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_button
inc_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_symbol_type
inc_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_symbol_type
inc_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_scrollbar	typeref:enum:nk_symbol_type
inc_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type inc_symbol;$/;"	m	struct:nk_style_slider	typeref:enum:nk_symbol_type
indent	lib/nuklear/nuklear.h	/^    float indent;$/;"	m	struct:nk_style_tab	typeref:typename:float
indent	lib/nuklear/src/nuklear.h	/^    float indent;$/;"	m	struct:nk_style_tab	typeref:typename:float
index	lib/klib/kthread.c	/^	int64_t index;$/;"	m	struct:__anone5c783700308	typeref:typename:int64_t	file:
index	lib/klib/kthread.c	/^	int64_t index;$/;"	m	struct:ktp_t	typeref:typename:int64_t	file:
index	lib/nuklear/nuklear.h	/^    int index;$/;"	m	struct:nk_chart_slot	typeref:typename:int
index	lib/nuklear/nuklear.h	/^    int index;$/;"	m	struct:nk_row_layout	typeref:typename:int
index	lib/nuklear/src/nuklear.h	/^    int index;$/;"	m	struct:nk_chart_slot	typeref:typename:int
index	lib/nuklear/src/nuklear.h	/^    int index;$/;"	m	struct:nk_row_layout	typeref:typename:int
indexToLocFormat	lib/cimgui/imgui/stb_truetype.h	/^   int indexToLocFormat;              \/\/ format needed to map from glyph index to glyph$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
indexToLocFormat	lib/nuklear/nuklear.h	/^    int indexToLocFormat; \/* format needed to map from glyph index to glyph *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
indexToLocFormat	lib/nuklear/src/nuklear_font.c	/^    int indexToLocFormat; \/* format needed to map from glyph index to glyph *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
index_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Buffer *index_buffer;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11Buffer *
index_map	lib/cimgui/imgui/stb_truetype.h	/^   int index_map;                     \/\/ a cmap mapping for our chosen character encoding$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
index_map	lib/nuklear/nuklear.h	/^    int index_map; \/* a cmap mapping for our chosen character encoding *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
index_map	lib/nuklear/src/nuklear_font.c	/^    int index_map; \/* a cmap mapping for our chosen character encoding *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
induceSA	lib/klib/ksa.c	/^static void induceSA(const unsigned char *T, saint_t *SA, saint_t *C, saint_t *B, saint_t n, sai/;"	f	typeref:typename:void	file:
inflate_block	lib/klib/bgzf.c	/^static int inflate_block(BGZF* fp, int block_length)$/;"	f	typeref:typename:int	file:
info	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^  "info" : {$/;"	o
info	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^  "info" : {$/;"	o
info	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/Contents.json	/^  "info" : {$/;"	o
info	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct opengl_info info;$/;"	m	struct:nk_x11_device	typeref:struct:opengl_info
info	lib/nuklear/nuklear.h	/^    struct nk_baked_font info;$/;"	m	struct:nk_font	typeref:struct:nk_baked_font
info	lib/nuklear/nuklear.h	/^    struct nk_tt_fontinfo info;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_tt_fontinfo
info	lib/nuklear/src/nuklear.h	/^    struct nk_baked_font info;$/;"	m	struct:nk_font	typeref:struct:nk_baked_font
info	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_fontinfo info;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_tt_fontinfo	file:
info_arch	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_arch	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_compiler	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_cray	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v	typeref:typename:char const *
info_language_dialect_default	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v	typeref:typename:const char *
info_language_dialect_default	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v	typeref:typename:const char *
info_platform	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_platform	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v	typeref:typename:char const *
info_simulate_version	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_simulate_version	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
info_version_internal	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version_internal[] = {$/;"	v	typeref:typename:char const[]
init	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^- (id)init {$/;"	m	implementation:KeyboardHandleriOS
initWithView:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.h	/^- (id) initWithView: (UIView *)view;$/;"	m	interface:ImGuiHelper
initWithView:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
init_mode	lib/cimgui/imgui/stb_rect_pack.h	/^   int init_mode;$/;"	m	struct:stbrp_context	typeref:typename:int
init_mode	lib/nuklear/nuklear.h	/^    int init_mode;$/;"	m	struct:nk_rp_context	typeref:typename:int
init_mode	lib/nuklear/src/nuklear_font.c	/^    int init_mode;$/;"	m	struct:nk_rp_context	typeref:typename:int	file:
initialized	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char initialized;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
initialized	lib/nuklear/demo/node_editor.c	/^    int initialized;$/;"	m	struct:node_editor	typeref:typename:int	file:
initialized	lib/nuklear/nuklear.h	/^    unsigned char initialized;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
initialized	lib/nuklear/src/nuklear.h	/^    unsigned char initialized;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
inline	lib/klib/kavl.h	/^#define inline /;"	d
inline	lib/linmath/linmath.h	/^#define inline /;"	d
innerHash	lib/klib/kurl.c	/^	uint8_t innerHash[HASH_LENGTH];$/;"	m	struct:sha1nfo	typeref:typename:uint8_t[]	file:
input	lib/nuklear/nuklear.h	/^    struct nk_input input;$/;"	m	struct:nk_context	typeref:struct:nk_input
input	lib/nuklear/src/nuklear.h	/^    struct nk_input input;$/;"	m	struct:nk_context	typeref:struct:nk_input
input_count	lib/nuklear/demo/node_editor.c	/^    int input_count;$/;"	m	struct:node	typeref:typename:int	file:
input_id	lib/nuklear/demo/node_editor.c	/^    int input_id;$/;"	m	struct:node_link	typeref:typename:int	file:
input_id	lib/nuklear/demo/node_editor.c	/^    int input_id;$/;"	m	struct:node_linking	typeref:typename:int	file:
input_layout	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11InputLayout *input_layout;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11InputLayout *
input_slot	lib/nuklear/demo/node_editor.c	/^    int input_slot;$/;"	m	struct:node_link	typeref:typename:int	file:
input_slot	lib/nuklear/demo/node_editor.c	/^    int input_slot;$/;"	m	struct:node_linking	typeref:typename:int	file:
insert	lib/cimgui/imgui/imgui.h	/^    inline iterator     insert(const_iterator it, const value_type& v)  { IM_ASSERT(it >= Data &/;"	f	class:ImVector	typeref:typename:iterator
insertSort	lib/klib/test/ksort_test.cc	/^inline void insertSort (int numbers[], int qty) {$/;"	f	typeref:typename:void
insertText:	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^{$/;"	m	implementation:KeyboardHandleriOS
insert_length	lib/cimgui/imgui/stb_textedit.h	/^   short           insert_length;$/;"	m	struct:__anonfd61af4b0108	typeref:typename:short
insert_length	lib/nuklear/nuklear.h	/^   short insert_length;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
insert_length	lib/nuklear/src/nuklear.h	/^   short insert_length;$/;"	m	struct:nk_text_undo_record	typeref:typename:short
insert_mode	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char insert_mode;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
int32_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int32_t	lib/gl3w/GL/glcorearb.h	/^typedef __int32 int32_t;$/;"	t	typeref:typename:__int32
int32_t	lib/gl3w/GL/glcorearb.h	/^typedef long int int32_t;$/;"	t	typeref:typename:long int
int64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
int64_t	lib/gl3w/GL/glcorearb.h	/^typedef __int64 int64_t;$/;"	t	typeref:typename:__int64
int64_t	lib/gl3w/GL/glcorearb.h	/^typedef long int int64_t;$/;"	t	typeref:typename:long int
int64_t	lib/gl3w/GL/glcorearb.h	/^typedef long long int int64_t;$/;"	t	typeref:typename:long long int
int64tostr	lib/klib/knetfile.c	/^char *int64tostr(char *buf, int64_t x)$/;"	f	typeref:typename:char *
int_data	lib/klib/test/kbtree_test.c	/^static unsigned *int_data;$/;"	v	typeref:typename:unsigned *	file:
int_data	lib/klib/test/khash_test.c	/^static unsigned *int_data;$/;"	v	typeref:typename:unsigned *	file:
int_packed_t	lib/klib/test/khash_test.c	/^} __attribute__ ((__packed__)) int_packed_t;$/;"	t	typeref:struct:__anon468a694a0208	file:
int_unpack_t	lib/klib/test/khash_test.c	/^} int_unpack_t;$/;"	t	typeref:struct:__anon468a694a0108	file:
intcmp_t	lib/klib/test/ksort_test.cc	/^struct intcmp_t {$/;"	s	file:
intro_files	lib/nuklear/src/build.py	/^        intro_files = parse_files(sys.argv[cur_arg])$/;"	v
intro_files	lib/nuklear/src/build.py	/^intro_files = []$/;"	v
intvovlp	lib/klib/lua/bio.lua	/^local function intvovlp(intv, bits)$/;"	f
invert	lib/cimgui/imgui/stb_truetype.h	/^   int invert;$/;"	m	struct:stbtt__edge	typeref:typename:int
invert	lib/nuklear/nuklear.h	/^    int invert;$/;"	m	struct:nk_tt__edge	typeref:typename:int
invert	lib/nuklear/src/nuklear_font.c	/^    int invert;$/;"	m	struct:nk_tt__edge	typeref:typename:int	file:
io	lib/nuklear/example/stb_image.h	/^   stbi_io_callbacks io;$/;"	m	struct:__anonc731c3c80308	typeref:typename:stbi_io_callbacks
io	src/Gui.c	/^struct ImGuiIO* io; $/;"	v	typeref:struct:ImGuiIO *
io.xopen	lib/klib/lua/klib.lua	/^function io.xopen(fn, mode)$/;"	f
io_user_data	lib/nuklear/example/stb_image.h	/^   void *io_user_data;$/;"	m	struct:__anonc731c3c80308	typeref:typename:void *
is_blank	lib/cimgui/imgui/imgui.h	/^        static bool is_blank(char c) { return c == ' ' || c == '\\t'; }$/;"	f	struct:ImGuiTextFilter::TextRange	typeref:typename:bool
is_double_click_down	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int is_double_click_down;$/;"	m	struct:nk_glfw	typeref:typename:int
is_double_click_down	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int is_double_click_down;$/;"	m	struct:nk_glfw	typeref:typename:int
is_double_click_down	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int is_double_click_down;$/;"	m	struct:nk_glfw	typeref:typename:int
is_internal	lib/klib/kbtree.h	/^	int32_t is_internal:1, n:31;$/;"	m	struct:__anon929281af0108	typeref:typename:int32_t:1
is_ready	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s	typeref:typename:int[4]
is_separator	lib/cimgui/imgui/imgui.cpp	/^static bool is_separator(unsigned int c)                                        { return ImCharI/;"	f	namespace:ImGuiStb	typeref:typename:bool	file:
is_touch_down	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    int is_touch_down;$/;"	m	struct:nk_allegro5	typeref:typename:int
is_word_boundary	lib/cimgui/imgui/stb_textedit.h	/^static int is_word_boundary( STB_TEXTEDIT_STRING *str, int idx )$/;"	f	typeref:typename:int
is_word_boundary_from_left	lib/cimgui/imgui/imgui.cpp	/^static int  is_word_boundary_from_left(STB_TEXTEDIT_STRING* obj, int idx)       { return idx > 0/;"	f	namespace:ImGuiStb	typeref:typename:int	file:
is_word_boundary_from_right	lib/cimgui/imgui/imgui.cpp	/^static int  is_word_boundary_from_right(STB_TEXTEDIT_STRING* obj, int idx)      { return idx > 0/;"	f	namespace:ImGuiStb	typeref:typename:int	file:
item	lib/nuklear/nuklear.h	/^    struct nk_rect item;$/;"	m	struct:nk_row_layout	typeref:struct:nk_rect
item	lib/nuklear/src/nuklear.h	/^    struct nk_rect item;$/;"	m	struct:nk_row_layout	typeref:struct:nk_rect
item_height	lib/nuklear/nuklear.h	/^    float item_height;$/;"	m	struct:nk_row_layout	typeref:typename:float
item_height	lib/nuklear/src/nuklear.h	/^    float item_height;$/;"	m	struct:nk_row_layout	typeref:typename:float
item_offset	lib/nuklear/nuklear.h	/^    float item_offset;$/;"	m	struct:nk_row_layout	typeref:typename:float
item_offset	lib/nuklear/src/nuklear.h	/^    float item_offset;$/;"	m	struct:nk_row_layout	typeref:typename:float
item_spacing	lib/nuklear/example/canvas.c	/^    struct nk_vec2 item_spacing;$/;"	m	struct:nk_canvas	typeref:struct:nk_vec2	file:
item_width	lib/nuklear/nuklear.h	/^    float item_width;$/;"	m	struct:nk_row_layout	typeref:typename:float
item_width	lib/nuklear/src/nuklear.h	/^    float item_width;$/;"	m	struct:nk_row_layout	typeref:typename:float
iterator	lib/cimgui/imgui/imgui.h	/^    typedef value_type*         iterator;$/;"	t	class:ImVector	typeref:typename:value_type *
k	lib/klib/test/kthread_test.c	/^	int *k;$/;"	m	struct:__anone8d3801e0108	typeref:typename:int *	file:
kavl_at	lib/klib/kavl.h	/^#define kavl_at(/;"	d
kavl_erase	lib/klib/kavl.h	/^#define kavl_erase(/;"	d
kavl_erase_first	lib/klib/kavl.h	/^#define kavl_erase_first(/;"	d
kavl_find	lib/klib/kavl.h	/^#define kavl_find(/;"	d
kavl_free	lib/klib/kavl.h	/^#define kavl_free(/;"	d
kavl_insert	lib/klib/kavl.h	/^#define kavl_insert(/;"	d
kavl_itr_find	lib/klib/kavl.h	/^#define kavl_itr_find(/;"	d
kavl_itr_first	lib/klib/kavl.h	/^#define kavl_itr_first(/;"	d
kavl_itr_next	lib/klib/kavl.h	/^#define kavl_itr_next(/;"	d
kavl_itr_t	lib/klib/kavl.h	/^#define kavl_itr_t(/;"	d
kavl_size	lib/klib/kavl.h	/^#define kavl_size(/;"	d
kavl_size_child	lib/klib/kavl.h	/^#define kavl_size_child(/;"	d
kb_del	lib/klib/kbtree.h	/^#define kb_del(/;"	d
kb_delp	lib/klib/kbtree.h	/^#define kb_delp(/;"	d
kb_destroy	lib/klib/kbtree.h	/^#define kb_destroy(/;"	d
kb_generic_cmp	lib/klib/kbtree.h	/^#define kb_generic_cmp(/;"	d
kb_get	lib/klib/kbtree.h	/^#define kb_get(/;"	d
kb_getp	lib/klib/kbtree.h	/^#define kb_getp(/;"	d
kb_init	lib/klib/kbtree.h	/^#define kb_init(/;"	d
kb_interval	lib/klib/kbtree.h	/^#define kb_interval(/;"	d
kb_intervalp	lib/klib/kbtree.h	/^#define kb_intervalp(/;"	d
kb_itr_first	lib/klib/kbtree.h	/^#define kb_itr_first(/;"	d
kb_itr_get	lib/klib/kbtree.h	/^#define kb_itr_get(/;"	d
kb_itr_key	lib/klib/kbtree.h	/^#define kb_itr_key(/;"	d
kb_itr_next	lib/klib/kbtree.h	/^#define kb_itr_next(/;"	d
kb_itr_valid	lib/klib/kbtree.h	/^#define kb_itr_valid(/;"	d
kb_put	lib/klib/kbtree.h	/^#define kb_put(/;"	d
kb_putp	lib/klib/kbtree.h	/^#define kb_putp(/;"	d
kb_size	lib/klib/kbtree.h	/^#define kb_size(/;"	d
kb_str_cmp	lib/klib/kbtree.h	/^#define kb_str_cmp(/;"	d
kbi_DNAcount64	lib/klib/kbit.h	/^static inline uint64_t kbi_DNAcount64(uint64_t y, int c) \/\/ count #A\/C\/G\/T from a 2-bit enc/;"	f	typeref:typename:uint64_t
kbi_popcount64	lib/klib/kbit.h	/^static inline uint64_t kbi_popcount64(uint64_t y) \/\/ standard popcount; from wikipedia$/;"	f	typeref:typename:uint64_t
kbi_swap	lib/klib/kbit.h	/^#define kbi_swap(/;"	d
kbitr_t	lib/klib/kbtree.h	/^} kbitr_t;$/;"	t	typeref:struct:__anon929281af0308
kbnode_t	lib/klib/kbtree.h	/^} kbnode_t;$/;"	t	typeref:struct:__anon929281af0108
kbpos_t	lib/klib/kbtree.h	/^} kbpos_t;$/;"	t	typeref:struct:__anon929281af0208
kbtree_t	lib/klib/kbtree.h	/^#define kbtree_t(/;"	d
kbtree_test	lib/klib/test/Makefile	/^kbtree_test:kbtree_test.c ..\/kbtree.h$/;"	t
kcalloc	lib/klib/kalloc.c	/^void *kcalloc(void *_km, size_t count, size_t size)$/;"	f	typeref:typename:void *
kcalloc	lib/klib/khash.h	/^#define kcalloc(/;"	d
kclose	lib/klib/kopen.c	/^int kclose(void *a)$/;"	f	typeref:typename:int
kdq_at	lib/klib/kdq.h	/^#define kdq_at(/;"	d
kdq_destroy	lib/klib/kdq.h	/^#define kdq_destroy(/;"	d
kdq_first	lib/klib/kdq.h	/^#define kdq_first(/;"	d
kdq_init	lib/klib/kdq.h	/^#define kdq_init(/;"	d
kdq_last	lib/klib/kdq.h	/^#define kdq_last(/;"	d
kdq_pop	lib/klib/kdq.h	/^#define kdq_pop(/;"	d
kdq_push	lib/klib/kdq.h	/^#define kdq_push(/;"	d
kdq_pushp	lib/klib/kdq.h	/^#define kdq_pushp(/;"	d
kdq_resize	lib/klib/kdq.h	/^#define kdq_resize(/;"	d
kdq_shift	lib/klib/kdq.h	/^#define kdq_shift(/;"	d
kdq_size	lib/klib/kdq.h	/^#define kdq_size(/;"	d
kdq_t	lib/klib/kdq.h	/^#define kdq_t(/;"	d
kdq_unshift	lib/klib/kdq.h	/^#define kdq_unshift(/;"	d
kdq_unshiftp	lib/klib/kdq.h	/^#define kdq_unshiftp(/;"	d
ke1_s	lib/klib/kexpr.c	/^typedef struct ke1_s {$/;"	s	file:
ke1_t	lib/klib/kexpr.c	/^} ke1_t;$/;"	t	typeref:struct:ke1_s	file:
ke_core_sstq	lib/klib/keigen.c	/^int ke_core_sstq(int n, double *b, double *c, double *q, int cal_ev, double eps, int l)$/;"	f	typeref:typename:int
ke_core_strq	lib/klib/keigen.c	/^void ke_core_strq(int n, double *q, double *b, double *c)$/;"	f	typeref:typename:void
ke_destroy	lib/klib/kexpr.c	/^void ke_destroy(kexpr_t *ke)$/;"	f	typeref:typename:void
ke_eigen_sd	lib/klib/keigen.c	/^int ke_eigen_sd(int n, double *a, double *v, int cal_ev, double eps, int max_iter)$/;"	f	typeref:typename:int
ke_eval	lib/klib/kexpr.c	/^int ke_eval(const kexpr_t *ke, int64_t *_i, double *_r, const char **_p, int *ret_type)$/;"	f	typeref:typename:int
ke_eval_int	lib/klib/kexpr.c	/^int64_t ke_eval_int(const kexpr_t *ke, int *err)$/;"	f	typeref:typename:int64_t
ke_eval_real	lib/klib/kexpr.c	/^double ke_eval_real(const kexpr_t *ke, int *err)$/;"	f	typeref:typename:double
ke_func1_abs	lib/klib/kexpr.c	/^static void ke_func1_abs(ke1_t *p, ke1_t *q) { if (p->vtype == KEV_INT) p->i = abs(p->i), p->r =/;"	f	typeref:typename:void	file:
ke_op	lib/klib/kexpr.c	/^static int ke_op[25] = {$/;"	v	typeref:typename:int[25]	file:
ke_op_KEO_BNOT	lib/klib/kexpr.c	/^static void ke_op_KEO_BNOT(ke1_t *p, ke1_t *q) { p->i = ~p->i; p->r = (double)p->i; p->vtype = K/;"	f	typeref:typename:void	file:
ke_op_KEO_LAND	lib/klib/kexpr.c	/^static void ke_op_KEO_LAND(ke1_t *p, ke1_t *q) { p->i = (p->i && q->i); p->r = p->i; p->vtype = /;"	f	typeref:typename:void	file:
ke_op_KEO_LNOT	lib/klib/kexpr.c	/^static void ke_op_KEO_LNOT(ke1_t *p, ke1_t *q) { p->i = !p->i; p->r = (double)p->i; p->vtype = K/;"	f	typeref:typename:void	file:
ke_op_KEO_LOR	lib/klib/kexpr.c	/^static void ke_op_KEO_LOR(ke1_t *p, ke1_t *q)  { p->i = (p->i || q->i); p->r = p->i; p->vtype = /;"	f	typeref:typename:void	file:
ke_op_KEO_NEG	lib/klib/kexpr.c	/^static void ke_op_KEO_NEG(ke1_t *p, ke1_t *q)  { p->i = -p->i, p->r = -p->r; }$/;"	f	typeref:typename:void	file:
ke_op_KEO_POS	lib/klib/kexpr.c	/^static void ke_op_KEO_POS(ke1_t *p, ke1_t *q)  { } \/\/ do nothing$/;"	f	typeref:typename:void	file:
ke_op_KEO_POW	lib/klib/kexpr.c	/^static void ke_op_KEO_POW(ke1_t *p, ke1_t *q)  { p->r = pow(p->r, q->r), p->i = (int64_t)(p->r +/;"	f	typeref:typename:void	file:
ke_opstr	lib/klib/kexpr.c	/^static const char *ke_opstr[] = {$/;"	v	typeref:typename:const char * []	file:
ke_parse	lib/klib/kexpr.c	/^kexpr_t *ke_parse(const char *_s, int *err)$/;"	f	typeref:typename:kexpr_t *
ke_parse_core	lib/klib/kexpr.c	/^static ke1_t *ke_parse_core(const char *_s, int *_n, int *err)$/;"	f	typeref:typename:ke1_t *	file:
ke_print	lib/klib/kexpr.c	/^void ke_print(const kexpr_t *ke)$/;"	f	typeref:typename:void
ke_read_token	lib/klib/kexpr.c	/^static ke1_t ke_read_token(char *p, char **r, int *err, int last_is_val) \/\/ it doesn't parse p/;"	f	typeref:typename:ke1_t	file:
ke_set_default_func	lib/klib/kexpr.c	/^int ke_set_default_func(kexpr_t *ke)$/;"	f	typeref:typename:int
ke_set_int	lib/klib/kexpr.c	/^int ke_set_int(kexpr_t *ke, const char *var, int64_t y)$/;"	f	typeref:typename:int
ke_set_real	lib/klib/kexpr.c	/^int ke_set_real(kexpr_t *ke, const char *var, double x)$/;"	f	typeref:typename:int
ke_set_real_func1	lib/klib/kexpr.c	/^int ke_set_real_func1(kexpr_t *ke, const char *name, double (*func)(double))$/;"	f	typeref:typename:int
ke_set_real_func2	lib/klib/kexpr.c	/^int ke_set_real_func2(kexpr_t *ke, const char *name, double (*func)(double, double))$/;"	f	typeref:typename:int
ke_set_str	lib/klib/kexpr.c	/^int ke_set_str(kexpr_t *ke, const char *var, const char *x)$/;"	f	typeref:typename:int
ke_unset	lib/klib/kexpr.c	/^void ke_unset(kexpr_t *ke)$/;"	f	typeref:typename:void
kern	lib/cimgui/imgui/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
kern	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
kern	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
kexpr_s	lib/klib/kexpr.c	/^struct kexpr_s {$/;"	s	file:
kexpr_t	lib/klib/kexpr.h	/^typedef struct kexpr_s kexpr_t;$/;"	t	typeref:struct:kexpr_s
key	lib/cimgui/imgui/imgui.h	/^        ImGuiID key;$/;"	m	struct:ImGuiStorage::Pair	typeref:typename:ImGuiID
key	lib/klib/kson.h	/^	char *key;$/;"	m	struct:kson_node_s	typeref:typename:char *
key	lib/klib/test/kavl_test.c	/^	int key;$/;"	m	struct:my_node	typeref:typename:int	file:
key	lib/klib/test/khash_test.c	/^	unsigned key;$/;"	m	struct:__anon468a694a0108	typeref:typename:unsigned	file:
key	lib/klib/test/khash_test.c	/^	unsigned key;$/;"	m	struct:__anon468a694a0208	typeref:typename:unsigned	file:
keyBuffer	lib/klib/kurl.c	/^	uint8_t keyBuffer[BLOCK_LENGTH];$/;"	m	struct:sha1nfo	typeref:typename:uint8_t[]	file:
keyboard	lib/nuklear/nuklear.h	/^    struct nk_keyboard keyboard;$/;"	m	struct:nk_input	typeref:struct:nk_keyboard
keyboard	lib/nuklear/src/nuklear.h	/^    struct nk_keyboard keyboard;$/;"	m	struct:nk_input	typeref:struct:nk_keyboard
keyboardDidHide:	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^- (void)keyboardDidHide:(NSNotification *)notification {$/;"	m	implementation:KeyboardHandleriOS
keyboardType	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^{$/;"	m	implementation:KeyboardHandleriOS
keys	lib/nuklear/nuklear.h	/^    nk_hash keys[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table	typeref:typename:nk_hash[]
keys	lib/nuklear/nuklear.h	/^    struct nk_key keys[NK_KEY_MAX];$/;"	m	struct:nk_keyboard	typeref:struct:nk_key[]
keys	lib/nuklear/src/nuklear.h	/^    nk_hash keys[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table	typeref:typename:nk_hash[]
keys	lib/nuklear/src/nuklear.h	/^    struct nk_key keys[NK_KEY_MAX];$/;"	m	struct:nk_keyboard	typeref:struct:nk_key[]
keywords	lib/nuklear/package.json	/^  "keywords": ["gl", "ui", "toolkit"],$/;"	a
kf_betai	lib/klib/kmath.c	/^double kf_betai(double a, double b, double x)$/;"	f	typeref:typename:double
kf_betai_aux	lib/klib/kmath.c	/^static double kf_betai_aux(double a, double b, double x)$/;"	f	typeref:typename:double	file:
kf_erfc	lib/klib/kmath.c	/^double kf_erfc(double x)$/;"	f	typeref:typename:double
kf_gammap	lib/klib/kmath.c	/^double kf_gammap(double s, double z)$/;"	f	typeref:typename:double
kf_gammaq	lib/klib/kmath.c	/^double kf_gammaq(double s, double z)$/;"	f	typeref:typename:double
kf_lgamma	lib/klib/kmath.c	/^double kf_lgamma(double z)$/;"	f	typeref:typename:double
kfree	lib/klib/kalloc.c	/^void kfree(void *_km, void *ap) \/* kfree() also adds a new core to the circular list *\/$/;"	f	typeref:typename:void
kfree	lib/klib/khash.h	/^#define kfree(/;"	d
kftp_connect	lib/klib/knetfile.c	/^int kftp_connect(knetFile *ftp)$/;"	f	typeref:typename:int
kftp_connect_file	lib/klib/knetfile.c	/^int kftp_connect_file(knetFile *fp)$/;"	f	typeref:typename:int
kftp_get_response	lib/klib/knetfile.c	/^static int kftp_get_response(knetFile *ftp)$/;"	f	typeref:typename:int	file:
kftp_get_response	lib/klib/kopen.c	/^static int kftp_get_response(ftpaux_t *aux)$/;"	f	typeref:typename:int	file:
kftp_parse_url	lib/klib/knetfile.c	/^knetFile *kftp_parse_url(const char *fn, const char *mode)$/;"	f	typeref:typename:knetFile *
kftp_pasv_connect	lib/klib/knetfile.c	/^static int kftp_pasv_connect(knetFile *ftp)$/;"	f	typeref:typename:int	file:
kftp_pasv_prep	lib/klib/knetfile.c	/^static int kftp_pasv_prep(knetFile *ftp)$/;"	f	typeref:typename:int	file:
kftp_reconnect	lib/klib/knetfile.c	/^int kftp_reconnect(knetFile *ftp)$/;"	f	typeref:typename:int
kftp_send_cmd	lib/klib/knetfile.c	/^static int kftp_send_cmd(knetFile *ftp, const char *cmd, int is_get)$/;"	f	typeref:typename:int	file:
kftp_send_cmd	lib/klib/kopen.c	/^static int kftp_send_cmd(ftpaux_t *aux, const char *cmd, int is_get)$/;"	f	typeref:typename:int	file:
kgetline	lib/klib/kstring.c	/^int kgetline(kstring_t *s, kgets_func *fgets_fn, void *fp)$/;"	f	typeref:typename:int
kgint_t	lib/klib/kgraph.h	/^typedef unsigned kgint_t;$/;"	t	typeref:typename:unsigned
kgraph_t	lib/klib/kgraph.h	/^#define kgraph_t(/;"	d
kh_begin	lib/klib/khash.h	/^#define kh_begin(/;"	d
kh_clear	lib/klib/khash.h	/^#define kh_clear(/;"	d
kh_cstr_t	lib/klib/khash.h	/^typedef const char *kh_cstr_t;$/;"	t	typeref:typename:const char *
kh_del	lib/klib/khash.h	/^#define kh_del(/;"	d
kh_destroy	lib/klib/khash.h	/^#define kh_destroy(/;"	d
kh_end	lib/klib/khash.h	/^#define kh_end(/;"	d
kh_exist	lib/klib/khash.h	/^#define kh_exist(/;"	d
kh_foreach	lib/klib/khash.h	/^#define kh_foreach(/;"	d
kh_foreach_value	lib/klib/khash.h	/^#define kh_foreach_value(/;"	d
kh_get	lib/klib/khash.h	/^#define kh_get(/;"	d
kh_init	lib/klib/khash.h	/^#define kh_init(/;"	d
kh_inline	lib/klib/khash.h	/^#define kh_inline /;"	d
kh_int64_hash_equal	lib/klib/khash.h	/^#define kh_int64_hash_equal(/;"	d
kh_int64_hash_func	lib/klib/khash.h	/^#define kh_int64_hash_func(/;"	d
kh_int_hash_equal	lib/klib/khash.h	/^#define kh_int_hash_equal(/;"	d
kh_int_hash_func	lib/klib/khash.h	/^#define kh_int_hash_func(/;"	d
kh_int_hash_func2	lib/klib/khash.h	/^#define kh_int_hash_func2(/;"	d
kh_key	lib/klib/khash.h	/^#define kh_key(/;"	d
kh_n_buckets	lib/klib/khash.h	/^#define kh_n_buckets(/;"	d
kh_put	lib/klib/khash.h	/^#define kh_put(/;"	d
kh_resize	lib/klib/khash.h	/^#define kh_resize(/;"	d
kh_size	lib/klib/khash.h	/^#define kh_size(/;"	d
kh_str_hash_equal	lib/klib/khash.h	/^#define kh_str_hash_equal(/;"	d
kh_str_hash_func	lib/klib/khash.h	/^#define kh_str_hash_func(/;"	d
kh_val	lib/klib/khash.h	/^#define kh_val(/;"	d
kh_value	lib/klib/khash.h	/^#define kh_value(/;"	d
khash_keith	lib/klib/test/Makefile	/^khash_keith:khash_keith.c ..\/khash.h$/;"	t
khash_keith2	lib/klib/test/Makefile	/^khash_keith2:khash_keith2.c ..\/khash.h$/;"	t
khash_t	lib/klib/khash.h	/^#define khash_t(/;"	d
khash_test	lib/klib/test/Makefile	/^khash_test:khash_test.c ..\/khash.h$/;"	t
khint32_t	lib/klib/khash.h	/^typedef unsigned int khint32_t;$/;"	t	typeref:typename:unsigned int
khint32_t	lib/klib/khash.h	/^typedef unsigned long khint32_t;$/;"	t	typeref:typename:unsigned long
khint64_t	lib/klib/khash.h	/^typedef unsigned long khint64_t;$/;"	t	typeref:typename:unsigned long
khint64_t	lib/klib/khash.h	/^typedef unsigned long long khint64_t;$/;"	t	typeref:typename:unsigned long long
khint_t	lib/klib/khash.h	/^typedef khint32_t khint_t;$/;"	t	typeref:typename:khint32_t
khiter_t	lib/klib/khash.h	/^typedef khint_t khiter_t;$/;"	t	typeref:typename:khint_t
khttp_connect_file	lib/klib/knetfile.c	/^int khttp_connect_file(knetFile *fp)$/;"	f	typeref:typename:int
khttp_parse_url	lib/klib/knetfile.c	/^knetFile *khttp_parse_url(const char *fn, const char *mode)$/;"	f	typeref:typename:knetFile *
kind	lib/nuklear/nuklear.h	/^    enum nk_property_kind kind;$/;"	m	struct:nk_property_variant	typeref:enum:nk_property_kind
kind	lib/nuklear/src/nuklear_internal.h	/^    enum nk_property_kind kind;$/;"	m	struct:nk_property_variant	typeref:enum:nk_property_kind
kl_begin	lib/klib/klist.h	/^#define kl_begin(/;"	d
kl_destroy	lib/klib/klist.h	/^#define kl_destroy(/;"	d
kl_end	lib/klib/klist.h	/^#define kl_end(/;"	d
kl_init	lib/klib/klist.h	/^#define kl_init(/;"	d
kl_next	lib/klib/klist.h	/^#define kl_next(/;"	d
kl_pushp	lib/klib/klist.h	/^#define kl_pushp(/;"	d
kl_shift	lib/klib/klist.h	/^#define kl_shift(/;"	d
kl_val	lib/klib/klist.h	/^#define kl_val(/;"	d
klib_unused	lib/klib/kdq.h	/^#define klib_unused /;"	d
klib_unused	lib/klib/kdq.h	/^#define klib_unused$/;"	d
klib_unused	lib/klib/khash.h	/^#define klib_unused /;"	d
klib_unused	lib/klib/khash.h	/^#define klib_unused$/;"	d
klib_unused	lib/klib/klist.h	/^#define klib_unused /;"	d
klib_unused	lib/klib/klist.h	/^#define klib_unused$/;"	d
klist_t	lib/klib/klist.h	/^#define klist_t(/;"	d
klist_test	lib/klib/test/Makefile	/^klist_test:klist_test.c ..\/klist.h$/;"	t
kliter_t	lib/klib/klist.h	/^#define kliter_t(/;"	d
km_destroy	lib/klib/kalloc.c	/^void km_destroy(void *_km)$/;"	f	typeref:typename:void
km_init	lib/klib/kalloc.c	/^void *km_init(void)$/;"	f	typeref:typename:void *
km_ks_dist	lib/klib/kmath.c	/^double km_ks_dist(int na, const double a[], int nb, const double b[]) \/\/ a[] and b[] MUST BE s/;"	f	typeref:typename:double
km_stat	lib/klib/kalloc.c	/^void km_stat(const void *_km, km_stat_t *s)$/;"	f	typeref:typename:void
km_stat_t	lib/klib/kalloc.h	/^} km_stat_t;$/;"	t	typeref:struct:__anon3287e0280108
kmalloc	lib/klib/kalloc.c	/^void *kmalloc(void *_km, size_t n_bytes)$/;"	f	typeref:typename:void *
kmalloc	lib/klib/khash.h	/^#define kmalloc(/;"	d
kmem_t	lib/klib/kalloc.c	/^} kmem_t;$/;"	t	typeref:struct:__anon3287e0230108	file:
kmemmem	lib/klib/kstring.c	/^void *kmemmem(const void *_str, int n, const void *_pat, int m, int **_prep)$/;"	f	typeref:typename:void *
kmempool_t	lib/klib/klist.h	/^#define kmempool_t(/;"	d
kmin1_f	lib/klib/kmath.h	/^	typedef double (*kmin1_f)(double, void*);$/;"	t	typeref:typename:double (*)(double,void *)
kmin_brent	lib/klib/kmath.c	/^double kmin_brent(kmin1_f func, double a, double b, void *data, double tol, double *xmin)$/;"	f	typeref:typename:double
kmin_f	lib/klib/kmath.h	/^	typedef double (*kmin_f)(int, double*, void*);$/;"	t	typeref:typename:double (*)(int,double *,void *)
kmin_hj	lib/klib/kmath.c	/^double kmin_hj(kmin_f func, int n, double *x, void *data, double r, double eps, int max_calls)$/;"	f	typeref:typename:double
kmin_test	lib/klib/test/Makefile	/^kmin_test:kmin_test.c ..\/kmath.h ..\/kmath.c$/;"	t
kmp_alloc	lib/klib/klist.h	/^#define kmp_alloc(/;"	d
kmp_destroy	lib/klib/klist.h	/^#define kmp_destroy(/;"	d
kmp_free	lib/klib/klist.h	/^#define kmp_free(/;"	d
kmp_init	lib/klib/klist.h	/^#define kmp_init(/;"	d
kn_format	lib/klib/knhx.c	/^void kn_format(const knhx1_t *node, int root, kstring_t *s) \/\/ TODO: get rid of recursion$/;"	f	typeref:typename:void
kn_parse	lib/klib/knhx.c	/^knhx1_t *kn_parse(const char *nhx, int *_n, int *_error)$/;"	f	typeref:typename:knhx1_t *
knaux_t	lib/klib/knhx.c	/^} knaux_t;$/;"	t	typeref:struct:__anonf5ac75060108	file:
knetFile	lib/klib/knetfile.h	/^} knetFile;$/;"	t	typeref:struct:knetFile_s
knetFile	lib/klib/kurl.h	/^typedef kurl_t knetFile;$/;"	t	typeref:typename:kurl_t
knetFile_s	lib/klib/knetfile.h	/^typedef struct knetFile_s {$/;"	s
knet_close	lib/klib/knetfile.c	/^int knet_close(knetFile *fp)$/;"	f	typeref:typename:int
knet_close	lib/klib/kurl.h	/^#define knet_close(/;"	d
knet_dopen	lib/klib/knetfile.c	/^knetFile *knet_dopen(int fd, const char *mode)$/;"	f	typeref:typename:knetFile *
knet_dopen	lib/klib/kurl.h	/^#define knet_dopen(/;"	d
knet_fileno	lib/klib/knetfile.h	/^#define knet_fileno(/;"	d
knet_fileno	lib/klib/kurl.h	/^#define knet_fileno(/;"	d
knet_open	lib/klib/knetfile.c	/^knetFile *knet_open(const char *fn, const char *mode)$/;"	f	typeref:typename:knetFile *
knet_open	lib/klib/kurl.h	/^#define knet_open(/;"	d
knet_read	lib/klib/knetfile.c	/^off_t knet_read(knetFile *fp, void *buf, off_t len)$/;"	f	typeref:typename:off_t
knet_read	lib/klib/kurl.h	/^#define knet_read(/;"	d
knet_seek	lib/klib/knetfile.c	/^off_t knet_seek(knetFile *fp, int64_t off, int whence)$/;"	f	typeref:typename:off_t
knet_seek	lib/klib/kurl.h	/^#define knet_seek(/;"	d
knet_tell	lib/klib/knetfile.h	/^#define knet_tell(/;"	d
knet_tell	lib/klib/kurl.h	/^#define knet_tell(/;"	d
knet_win32_destroy	lib/klib/knetfile.c	/^void knet_win32_destroy()$/;"	f	typeref:typename:void
knet_win32_destroy	lib/klib/kurl.h	/^#define knet_win32_destroy(/;"	d
knet_win32_init	lib/klib/knetfile.c	/^int knet_win32_init()$/;"	f	typeref:typename:int
knet_win32_init	lib/klib/kurl.h	/^#define knet_win32_init(/;"	d
knhx1_t	lib/klib/knhx.h	/^} knhx1_t;$/;"	t	typeref:struct:__anonf5ac750b0108
koaux_t	lib/klib/kopen.c	/^} koaux_t;$/;"	t	typeref:struct:__anonae17a10a0208	file:
kopen	lib/klib/kopen.c	/^void *kopen(const char *fn, int *_fd)$/;"	f	typeref:typename:void *
kputc	lib/klib/knhx.c	/^static inline int kputc(int c, kstring_t *s)$/;"	f	typeref:typename:int	file:
kputc	lib/klib/kstring.h	/^static inline int kputc(int c, kstring_t *s)$/;"	f	typeref:typename:int
kputc_	lib/klib/kstring.h	/^static inline int kputc_(int c, kstring_t *s)$/;"	f	typeref:typename:int
kputl	lib/klib/kstring.h	/^static inline int kputl(long c, kstring_t *s)$/;"	f	typeref:typename:int
kputs	lib/klib/kstring.h	/^static inline int kputs(const char *p, kstring_t *s)$/;"	f	typeref:typename:int
kputsn	lib/klib/knhx.c	/^static inline int kputsn(const char *p, int l, kstring_t *s)$/;"	f	typeref:typename:int	file:
kputsn	lib/klib/kstring.h	/^static inline int kputsn(const char *p, int l, kstring_t *s)$/;"	f	typeref:typename:int
kputsn	lib/klib/kurl.c	/^static inline int kputsn(const char *p, int l, kstring_t *s)$/;"	f	typeref:typename:int	file:
kputsn_	lib/klib/kstring.h	/^static inline int kputsn_(const void *p, int l, kstring_t *s)$/;"	f	typeref:typename:int
kputuw	lib/klib/kstring.h	/^static inline int kputuw(unsigned c, kstring_t *s)$/;"	f	typeref:typename:int
kputw	lib/klib/kstring.h	/^static inline int kputw(int c, kstring_t *s)$/;"	f	typeref:typename:int
kr_drand	lib/klib/kmath.h	/^	#define kr_drand(/;"	d
kr_normal	lib/klib/kmath.c	/^double kr_normal(krand_t *kr)$/;"	f	typeref:typename:double
kr_rand	lib/klib/kmath.c	/^krint64_t kr_rand(krand_t *kr)$/;"	f	typeref:typename:krint64_t
kr_sample	lib/klib/kmath.h	/^	#define kr_sample(/;"	d
kr_srand	lib/klib/kmath.c	/^krand_t *kr_srand(krint64_t seed)$/;"	f	typeref:typename:krand_t *
kr_srand0	lib/klib/kmath.c	/^static void kr_srand0(krint64_t seed, krand_t *kr)$/;"	f	typeref:typename:void	file:
krand_t	lib/klib/kmath.h	/^	typedef struct _krand_t krand_t;$/;"	t	typeref:struct:_krand_t
krealloc	lib/klib/kalloc.c	/^void *krealloc(void *_km, void *ap, size_t n_bytes) \/\/ TODO: this can be made more efficient i/;"	f	typeref:typename:void *
krealloc	lib/klib/khash.h	/^#define krealloc(/;"	d
krf_brent	lib/klib/kmath.c	/^double krf_brent(double x1, double x2, double tol, double (*func)(double, void*), void *data, in/;"	f	typeref:typename:double
krint64_t	lib/klib/kmath.h	/^	typedef uint64_t krint64_t;$/;"	t	typeref:typename:uint64_t
kroundup32	lib/klib/bgzf.c	/^#define kroundup32(/;"	d	file:
kroundup32	lib/klib/kbit.h	/^#define kroundup32(/;"	d
kroundup32	lib/klib/khash.h	/^#define kroundup32(/;"	d
kroundup32	lib/klib/knhx.c	/^#define kroundup32(/;"	d	file:
kroundup32	lib/klib/kseq.h	/^#define kroundup32(/;"	d
kroundup32	lib/klib/kson.c	/^#define kroundup32(/;"	d	file:
kroundup32	lib/klib/kstring.h	/^#define kroundup32(/;"	d
kroundup32	lib/klib/kurl.c	/^#define kroundup32(/;"	d	file:
ks	lib/klib/test/kseq_bench2.c	/^		kstream_t *ks;$/;"	v	typeref:typename:kstream_t *
ksBM_prep	lib/klib/kstring.c	/^static int *ksBM_prep(const ubyte_t *pat, int m)$/;"	f	typeref:typename:int *	file:
ks_combsort	lib/klib/ksort.h	/^#define ks_combsort(/;"	d
ks_eof	lib/klib/kseq.h	/^#define ks_eof(/;"	d
ks_err	lib/klib/kseq.h	/^#define ks_err(/;"	d
ks_heapadjust	lib/klib/ksort.h	/^#define ks_heapadjust(/;"	d
ks_heapmake	lib/klib/ksort.h	/^#define ks_heapmake(/;"	d
ks_heapsort	lib/klib/ksort.h	/^#define ks_heapsort(/;"	d
ks_introsort	lib/klib/ksort.h	/^#define ks_introsort(/;"	d
ks_isort_stack_t	lib/klib/ksort.h	/^} ks_isort_stack_t;$/;"	t	typeref:struct:__anonb76165850108
ks_ksmall	lib/klib/ksort.h	/^#define ks_ksmall(/;"	d
ks_len	lib/klib/kstring.h	/^static inline size_t ks_len(kstring_t *s)$/;"	f	typeref:typename:size_t
ks_lt_generic	lib/klib/ksort.h	/^#define ks_lt_generic(/;"	d
ks_lt_str	lib/klib/ksort.h	/^#define ks_lt_str(/;"	d
ks_mergesort	lib/klib/ksort.h	/^#define ks_mergesort(/;"	d
ks_release	lib/klib/kstring.h	/^static inline char *ks_release(kstring_t *s)$/;"	f	typeref:typename:char *
ks_resize	lib/klib/kstring.h	/^static inline int ks_resize(kstring_t *s, size_t size)$/;"	f	typeref:typename:int
ks_rewind	lib/klib/kseq.h	/^#define ks_rewind(/;"	d
ks_shuffle	lib/klib/ksort.h	/^#define ks_shuffle(/;"	d
ks_str	lib/klib/kstring.h	/^static inline char *ks_str(kstring_t *s)$/;"	f	typeref:typename:char *
ks_tokaux_t	lib/klib/kstring.h	/^} ks_tokaux_t;$/;"	t	typeref:struct:__anon959017540108
kseq_bench	lib/klib/test/Makefile	/^kseq_bench:kseq_bench.c ..\/kseq.h$/;"	t
kseq_bench2	lib/klib/test/Makefile	/^kseq_bench2:kseq_bench2.c ..\/kseq.h$/;"	t
kseq_rewind	lib/klib/kseq.h	/^#define kseq_rewind(/;"	d
kseq_test	lib/klib/test/Makefile	/^kseq_test:kseq_test.c ..\/kseq.h$/;"	t
kson_by_index	lib/klib/kson.h	/^static inline const kson_node_t *kson_by_index(const kson_node_t *p, long i)$/;"	f	typeref:typename:const kson_node_t *
kson_by_key	lib/klib/kson.h	/^static inline const kson_node_t *kson_by_key(const kson_node_t *p, const char *key)$/;"	f	typeref:typename:const kson_node_t *
kson_by_path	lib/klib/kson.c	/^const kson_node_t *kson_by_path(const kson_node_t *p, int depth, ...)$/;"	f	typeref:typename:const kson_node_t *
kson_destroy	lib/klib/kson.c	/^void kson_destroy(kson_t *kson)$/;"	f	typeref:typename:void
kson_format	lib/klib/kson.c	/^void kson_format(const kson_node_t *root)$/;"	f	typeref:typename:void
kson_format_recur	lib/klib/kson.c	/^void kson_format_recur(const kson_node_t *p, int depth)$/;"	f	typeref:typename:void
kson_is_internal	lib/klib/kson.h	/^#define kson_is_internal(/;"	d
kson_node_s	lib/klib/kson.h	/^typedef struct kson_node_s {$/;"	s
kson_node_t	lib/klib/kson.h	/^} kson_node_t;$/;"	t	typeref:struct:kson_node_s
kson_parse	lib/klib/kson.c	/^kson_t *kson_parse(const char *json)$/;"	f	typeref:typename:kson_t *
kson_parse_core	lib/klib/kson.c	/^kson_node_t *kson_parse_core(const char *json, long *_n, int *error, long *parsed_len)$/;"	f	typeref:typename:kson_node_t *
kson_t	lib/klib/kson.h	/^} kson_t;$/;"	t	typeref:struct:__anonf60a9bad0208
ksort_test	lib/klib/test/Makefile	/^ksort_test:ksort_test.c ..\/ksort.h$/;"	t
ksort_test-stl	lib/klib/test/Makefile	/^ksort_test-stl:ksort_test.cc ..\/ksort.h$/;"	t
ksplit	lib/klib/kstring.h	/^static inline int *ksplit(kstring_t *s, int delimiter, int *n)$/;"	f	typeref:typename:int *
ksplit_core	lib/klib/kstring.c	/^int ksplit_core(char *s, int delimiter, int *_max, int **_offsets)$/;"	f	typeref:typename:int
ksprintf	lib/klib/kstring.c	/^int ksprintf(kstring_t *s, const char *fmt, ...)$/;"	f	typeref:typename:int
ksstr_t	lib/klib/ksort.h	/^typedef const char *ksstr_t;$/;"	t	typeref:typename:const char *
kstring_bench	lib/klib/test/Makefile	/^kstring_bench:kstring_bench.c ..\/kstring.h ..\/kstring.c$/;"	t
kstring_bench2	lib/klib/test/Makefile	/^kstring_bench2:kstring_bench2.c ..\/kstring.h ..\/kstring.c$/;"	t
kstring_t	lib/klib/bgzf.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/knhx.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/kseq.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/kstring.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
kstring_t	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	t	typeref:struct:__anonf630694b0408	file:
kstring_test	lib/klib/test/Makefile	/^kstring_test:kstring_test.c ..\/kstring.h ..\/kstring.c$/;"	t
kstrnstr	lib/klib/kstring.c	/^char *kstrnstr(const char *str, const char *pat, int n, int **_prep)$/;"	f	typeref:typename:char *
kstrstr	lib/klib/kstring.c	/^char *kstrstr(const char *str, const char *pat, int **_prep)$/;"	f	typeref:typename:char *
kstrtok	lib/klib/kstring.c	/^char *kstrtok(const char *str, const char *sep_in, ks_tokaux_t *aux)$/;"	f	typeref:typename:char *
ksw_align	lib/klib/ksw.c	/^kswr_t ksw_align(int qlen, uint8_t *query, int tlen, uint8_t *target, int m, const int8_t *mat, /;"	f	typeref:typename:kswr_t
ksw_extend	lib/klib/ksw.c	/^int ksw_extend(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int/;"	f	typeref:typename:int
ksw_global	lib/klib/ksw.c	/^int ksw_global(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int/;"	f	typeref:typename:int
ksw_i16	lib/klib/ksw.c	/^kswr_t ksw_i16(kswq_t *q, int tlen, const uint8_t *target, int _gapo, int _gape, int xtra) \/\/ /;"	f	typeref:typename:kswr_t
ksw_qinit	lib/klib/ksw.c	/^kswq_t *ksw_qinit(int size, int qlen, const uint8_t *query, int m, const int8_t *mat)$/;"	f	typeref:typename:kswq_t *
ksw_u8	lib/klib/ksw.c	/^kswr_t ksw_u8(kswq_t *q, int tlen, const uint8_t *target, int _gapo, int _gape, int xtra) \/\/ t/;"	f	typeref:typename:kswr_t
kswq_t	lib/klib/ksw.h	/^typedef struct _kswq_t kswq_t;$/;"	t	typeref:struct:_kswq_t
kswr_t	lib/klib/ksw.h	/^} kswr_t;$/;"	t	typeref:struct:__anon7bd1e0a70108
kt_for	lib/klib/kthread.c	/^void kt_for(int n_threads, void (*func)(void*,long,int), void *data, long n)$/;"	f	typeref:typename:void
kt_for_t	lib/klib/kthread.c	/^typedef struct kt_for_t {$/;"	s	file:
kt_for_t	lib/klib/kthread.c	/^} kt_for_t;$/;"	t	typeref:struct:kt_for_t	file:
kt_forpool	lib/klib/kthread.c	/^void kt_forpool(void *_fp, void (*func)(void*,long,int), void *data, long n)$/;"	f	typeref:typename:void
kt_forpool_destroy	lib/klib/kthread.c	/^void kt_forpool_destroy(void *_fp)$/;"	f	typeref:typename:void
kt_forpool_init	lib/klib/kthread.c	/^void *kt_forpool_init(int n_threads)$/;"	f	typeref:typename:void *
kt_forpool_t	lib/klib/kthread.c	/^typedef struct kt_forpool_t {$/;"	s	file:
kt_forpool_t	lib/klib/kthread.c	/^} kt_forpool_t;$/;"	t	typeref:struct:kt_forpool_t	file:
kt_fp_steal_work	lib/klib/kthread.c	/^static inline long kt_fp_steal_work(kt_forpool_t *t)$/;"	f	typeref:typename:long	file:
kt_fp_worker	lib/klib/kthread.c	/^static void *kt_fp_worker(void *data)$/;"	f	typeref:typename:void *	file:
kt_pipeline	lib/klib/kthread.c	/^void kt_pipeline(int n_threads, void *(*func)(void*, int, void*), void *shared_data, int n_steps/;"	f	typeref:typename:void
ktf_worker	lib/klib/kthread.c	/^static void *ktf_worker(void *data)$/;"	f	typeref:typename:void *	file:
ktf_worker_t	lib/klib/kthread.c	/^} ktf_worker_t;$/;"	t	typeref:struct:__anone5c783700108	file:
kthread_test	lib/klib/test/Makefile	/^kthread_test:kthread_test.c ..\/kthread.c$/;"	t
kthread_test2	lib/klib/test/Makefile	/^kthread_test2:kthread_test2.c ..\/kthread.c$/;"	t
kto_worker_t	lib/klib/kthread.c	/^} kto_worker_t;$/;"	t	typeref:struct:__anone5c783700208	file:
ktp_t	lib/klib/kthread.c	/^typedef struct ktp_t {$/;"	s	file:
ktp_t	lib/klib/kthread.c	/^} ktp_t;$/;"	t	typeref:struct:ktp_t	file:
ktp_worker	lib/klib/kthread.c	/^static void *ktp_worker(void *data)$/;"	f	typeref:typename:void *	file:
ktp_worker_t	lib/klib/kthread.c	/^} ktp_worker_t;$/;"	t	typeref:struct:__anone5c783700308	file:
kurl_buflen	lib/klib/kurl.c	/^int kurl_buflen(kurl_t *ku, int len)$/;"	f	typeref:typename:int
kurl_close	lib/klib/kurl.c	/^int kurl_close(kurl_t *ku)$/;"	f	typeref:typename:int
kurl_destroy	lib/klib/kurl.c	/^void kurl_destroy(void)$/;"	f	typeref:typename:void
kurl_dopen	lib/klib/kurl.c	/^kurl_t *kurl_dopen(int fd)$/;"	f	typeref:typename:kurl_t *
kurl_eof	lib/klib/kurl.c	/^int kurl_eof(const kurl_t *ku)$/;"	f	typeref:typename:int
kurl_error	lib/klib/kurl.c	/^int kurl_error(const kurl_t *ku)$/;"	f	typeref:typename:int
kurl_fileno	lib/klib/kurl.c	/^int kurl_fileno(const kurl_t *ku)$/;"	f	typeref:typename:int
kurl_init	lib/klib/kurl.c	/^int kurl_init(void) \/\/ required for SSL and win32 socket; NOT thread safe$/;"	f	typeref:typename:int
kurl_isfile	lib/klib/kurl.c	/^#define kurl_isfile(/;"	d	file:
kurl_open	lib/klib/kurl.c	/^kurl_t *kurl_open(const char *url, kurl_opt_t *opt)$/;"	f	typeref:typename:kurl_t *
kurl_opt_t	lib/klib/kurl.h	/^} kurl_opt_t;$/;"	t	typeref:struct:__anonf63069500108
kurl_read	lib/klib/kurl.c	/^ssize_t kurl_read(kurl_t *ku, void *buf, size_t nbytes)$/;"	f	typeref:typename:ssize_t
kurl_seek	lib/klib/kurl.c	/^off_t kurl_seek(kurl_t *ku, off_t offset, int whence) \/\/ FIXME: sometimes when seek() fails, r/;"	f	typeref:typename:off_t
kurl_t	lib/klib/kurl.c	/^struct kurl_t {$/;"	s	file:
kurl_t	lib/klib/kurl.h	/^typedef struct kurl_t kurl_t;$/;"	t	typeref:struct:kurl_t
kurl_tell	lib/klib/kurl.c	/^off_t kurl_tell(const kurl_t *ku)$/;"	f	typeref:typename:off_t
kv_A	lib/klib/kvec.h	/^#define kv_A(/;"	d
kv_a	lib/klib/kvec.h	/^#define kv_a(/;"	d
kv_copy	lib/klib/kvec.h	/^#define kv_copy(/;"	d
kv_destroy	lib/klib/kvec.h	/^#define kv_destroy(/;"	d
kv_init	lib/klib/kvec.h	/^#define kv_init(/;"	d
kv_max	lib/klib/kvec.h	/^#define kv_max(/;"	d
kv_pop	lib/klib/kvec.h	/^#define kv_pop(/;"	d
kv_push	lib/klib/kvec.h	/^#define kv_push(/;"	d
kv_pushp	lib/klib/kvec.h	/^#define kv_pushp(/;"	d
kv_resize	lib/klib/kvec.h	/^#define kv_resize(/;"	d
kv_roundup32	lib/klib/kvec.h	/^#define kv_roundup32(/;"	d
kv_size	lib/klib/kvec.h	/^#define kv_size(/;"	d
kvec_t	lib/klib/kvec.h	/^#define kvec_t(/;"	d
kvec_test	lib/klib/test/Makefile	/^kvec_test:kvec_test.cc ..\/kvec.h$/;"	t
kvsprintf	lib/klib/kstring.c	/^int kvsprintf(kstring_t *s, const char *fmt, va_list ap)$/;"	f	typeref:typename:int
l	lib/klib/bgzf.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
l	lib/klib/khmm.h	/^	int l, *obs;$/;"	m	struct:__anonf542711f0408	typeref:typename:int
l	lib/klib/knhx.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
l	lib/klib/kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
l	lib/klib/kstring.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
l	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	m	struct:__anonf630694b0408	typeref:typename:int	file:
l_buf	lib/klib/kurl.c	/^	int l_buf;    \/\/ length of the buffer; l_buf == 0 iff the input read entirely; l_buf <= m_buf$/;"	m	struct:kurl_t	typeref:typename:int	file:
label_active	lib/nuklear/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_active	lib/nuklear/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_active	lib/nuklear/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_active	lib/nuklear/src/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_active	lib/nuklear/src/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_active	lib/nuklear/src/nuklear.h	/^    struct nk_color label_active;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_hover	lib/nuklear/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_hover	lib/nuklear/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_hover	lib/nuklear/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color label_hover;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_normal	lib/nuklear/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_normal	lib/nuklear/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_normal	lib/nuklear/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
label_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_color
label_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color label_normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_color
label_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 label_padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
label_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 label_padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
largest	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon3287e0280108	typeref:typename:size_t
last	lib/nuklear/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
last	lib/nuklear/nuklear.h	/^    nk_size last;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
last	lib/nuklear/nuklear.h	/^    struct nk_vec2 last;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_vec2
last	lib/nuklear/src/nuklear.h	/^    nk_size begin, end, last;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_size
last	lib/nuklear/src/nuklear.h	/^    nk_size last;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
last	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 last;$/;"	m	struct:nk_chart_slot	typeref:struct:nk_vec2
last_button_click	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    double last_button_click;$/;"	m	struct:nk_glfw	typeref:typename:double
last_button_click	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    double last_button_click;$/;"	m	struct:nk_glfw	typeref:typename:double
last_button_click	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    double last_button_click;$/;"	m	struct:nk_glfw	typeref:typename:double
last_button_click	lib/nuklear/demo/x11/nuklear_xlib.h	/^    long last_button_click;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:long
last_button_click	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    long last_button_click;$/;"	m	struct:nk_x11	typeref:typename:long
last_button_click	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    long last_button_click;$/;"	m	struct:nk_x11	typeref:typename:long
last_widget_state	lib/nuklear/nuklear.h	/^    nk_flags last_widget_state;$/;"	m	struct:nk_context	typeref:typename:nk_flags
last_widget_state	lib/nuklear/src/nuklear.h	/^    nk_flags last_widget_state;$/;"	m	struct:nk_context	typeref:typename:nk_flags
layout	lib/nuklear/nuklear.h	/^    struct nk_panel *layout;$/;"	m	struct:nk_window	typeref:struct:nk_panel *
layout	lib/nuklear/src/nuklear.h	/^    struct nk_panel *layout;$/;"	m	struct:nk_window	typeref:struct:nk_panel *
left	lib/klib/ksort.h	/^	void *left, *right;$/;"	m	struct:__anonb76165850108	typeref:typename:void *
left	lib/nuklear/nuklear.h	/^    struct nk_color left;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
left	lib/nuklear/src/nuklear.h	/^    struct nk_color left;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
len	lib/nuklear/nuklear.h	/^    int len; \/* in codepoints\/runes\/glyphs *\/$/;"	m	struct:nk_str	typeref:typename:int
len	lib/nuklear/src/nuklear.h	/^    int len; \/* in codepoints\/runes\/glyphs *\/$/;"	m	struct:nk_str	typeref:typename:int
length	lib/cimgui/imgui/stb_textedit.h	/^   int first_char, length; \/\/ first char of row, and length$/;"	m	struct:__anonfd61af4b0508	typeref:typename:int
length	lib/nuklear/example/stb_image.h	/^   stbi__uint32 length;$/;"	m	struct:__anonc731c3c80b08	typeref:typename:stbi__uint32
length	lib/nuklear/nuklear.h	/^    int length;$/;"	m	struct:nk_command_text	typeref:typename:int
length	lib/nuklear/nuklear.h	/^    int length;$/;"	m	struct:nk_property_state	typeref:typename:int
length	lib/nuklear/nuklear.h	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	typeref:typename:int
length	lib/nuklear/src/nuklear.h	/^    int length;$/;"	m	struct:nk_command_text	typeref:typename:int
length	lib/nuklear/src/nuklear.h	/^    int length;$/;"	m	struct:nk_property_state	typeref:typename:int
length	lib/nuklear/src/nuklear_text_editor.c	/^   int first_char, length; \/* first char of row, and length *\/$/;"	m	struct:nk_text_find	typeref:typename:int	file:
lflags	lib/nuklear/example/stb_image.h	/^   int lflags;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
lib/cimgui/cimgui/cimgui.cpp.i	build/Makefile	/^lib\/cimgui\/cimgui\/cimgui.cpp.i:$/;"	t
lib/cimgui/cimgui/cimgui.cpp.o	build/Makefile	/^lib\/cimgui\/cimgui\/cimgui.cpp.o:$/;"	t
lib/cimgui/cimgui/cimgui.cpp.s	build/Makefile	/^lib\/cimgui\/cimgui\/cimgui.cpp.s:$/;"	t
lib/cimgui/cimgui/cimgui.i	build/Makefile	/^lib\/cimgui\/cimgui\/cimgui.i: lib\/cimgui\/cimgui\/cimgui.cpp.i$/;"	t
lib/cimgui/cimgui/cimgui.o	build/Makefile	/^lib\/cimgui\/cimgui\/cimgui.o: lib\/cimgui\/cimgui\/cimgui.cpp.o$/;"	t
lib/cimgui/cimgui/cimgui.s	build/Makefile	/^lib\/cimgui\/cimgui\/cimgui.s: lib\/cimgui\/cimgui\/cimgui.cpp.s$/;"	t
lib/cimgui/cimgui/drawList.cpp.i	build/Makefile	/^lib\/cimgui\/cimgui\/drawList.cpp.i:$/;"	t
lib/cimgui/cimgui/drawList.cpp.o	build/Makefile	/^lib\/cimgui\/cimgui\/drawList.cpp.o:$/;"	t
lib/cimgui/cimgui/drawList.cpp.s	build/Makefile	/^lib\/cimgui\/cimgui\/drawList.cpp.s:$/;"	t
lib/cimgui/cimgui/drawList.i	build/Makefile	/^lib\/cimgui\/cimgui\/drawList.i: lib\/cimgui\/cimgui\/drawList.cpp.i$/;"	t
lib/cimgui/cimgui/drawList.o	build/Makefile	/^lib\/cimgui\/cimgui\/drawList.o: lib\/cimgui\/cimgui\/drawList.cpp.o$/;"	t
lib/cimgui/cimgui/drawList.s	build/Makefile	/^lib\/cimgui\/cimgui\/drawList.s: lib\/cimgui\/cimgui\/drawList.cpp.s$/;"	t
lib/cimgui/cimgui/fontAtlas.cpp.i	build/Makefile	/^lib\/cimgui\/cimgui\/fontAtlas.cpp.i:$/;"	t
lib/cimgui/cimgui/fontAtlas.cpp.o	build/Makefile	/^lib\/cimgui\/cimgui\/fontAtlas.cpp.o:$/;"	t
lib/cimgui/cimgui/fontAtlas.cpp.s	build/Makefile	/^lib\/cimgui\/cimgui\/fontAtlas.cpp.s:$/;"	t
lib/cimgui/cimgui/fontAtlas.i	build/Makefile	/^lib\/cimgui\/cimgui\/fontAtlas.i: lib\/cimgui\/cimgui\/fontAtlas.cpp.i$/;"	t
lib/cimgui/cimgui/fontAtlas.o	build/Makefile	/^lib\/cimgui\/cimgui\/fontAtlas.o: lib\/cimgui\/cimgui\/fontAtlas.cpp.o$/;"	t
lib/cimgui/cimgui/fontAtlas.s	build/Makefile	/^lib\/cimgui\/cimgui\/fontAtlas.s: lib\/cimgui\/cimgui\/fontAtlas.cpp.s$/;"	t
lib/cimgui/cimgui/listClipper.cpp.i	build/Makefile	/^lib\/cimgui\/cimgui\/listClipper.cpp.i:$/;"	t
lib/cimgui/cimgui/listClipper.cpp.o	build/Makefile	/^lib\/cimgui\/cimgui\/listClipper.cpp.o:$/;"	t
lib/cimgui/cimgui/listClipper.cpp.s	build/Makefile	/^lib\/cimgui\/cimgui\/listClipper.cpp.s:$/;"	t
lib/cimgui/cimgui/listClipper.i	build/Makefile	/^lib\/cimgui\/cimgui\/listClipper.i: lib\/cimgui\/cimgui\/listClipper.cpp.i$/;"	t
lib/cimgui/cimgui/listClipper.o	build/Makefile	/^lib\/cimgui\/cimgui\/listClipper.o: lib\/cimgui\/cimgui\/listClipper.cpp.o$/;"	t
lib/cimgui/cimgui/listClipper.s	build/Makefile	/^lib\/cimgui\/cimgui\/listClipper.s: lib\/cimgui\/cimgui\/listClipper.cpp.s$/;"	t
lib/cimgui/imgui/imgui.cpp.i	build/Makefile	/^lib\/cimgui\/imgui\/imgui.cpp.i:$/;"	t
lib/cimgui/imgui/imgui.cpp.o	build/Makefile	/^lib\/cimgui\/imgui\/imgui.cpp.o:$/;"	t
lib/cimgui/imgui/imgui.cpp.s	build/Makefile	/^lib\/cimgui\/imgui\/imgui.cpp.s:$/;"	t
lib/cimgui/imgui/imgui.i	build/Makefile	/^lib\/cimgui\/imgui\/imgui.i: lib\/cimgui\/imgui\/imgui.cpp.i$/;"	t
lib/cimgui/imgui/imgui.o	build/Makefile	/^lib\/cimgui\/imgui\/imgui.o: lib\/cimgui\/imgui\/imgui.cpp.o$/;"	t
lib/cimgui/imgui/imgui.s	build/Makefile	/^lib\/cimgui\/imgui\/imgui.s: lib\/cimgui\/imgui\/imgui.cpp.s$/;"	t
lib/cimgui/imgui/imgui_demo.cpp.i	build/Makefile	/^lib\/cimgui\/imgui\/imgui_demo.cpp.i:$/;"	t
lib/cimgui/imgui/imgui_demo.cpp.o	build/Makefile	/^lib\/cimgui\/imgui\/imgui_demo.cpp.o:$/;"	t
lib/cimgui/imgui/imgui_demo.cpp.s	build/Makefile	/^lib\/cimgui\/imgui\/imgui_demo.cpp.s:$/;"	t
lib/cimgui/imgui/imgui_demo.i	build/Makefile	/^lib\/cimgui\/imgui\/imgui_demo.i: lib\/cimgui\/imgui\/imgui_demo.cpp.i$/;"	t
lib/cimgui/imgui/imgui_demo.o	build/Makefile	/^lib\/cimgui\/imgui\/imgui_demo.o: lib\/cimgui\/imgui\/imgui_demo.cpp.o$/;"	t
lib/cimgui/imgui/imgui_demo.s	build/Makefile	/^lib\/cimgui\/imgui\/imgui_demo.s: lib\/cimgui\/imgui\/imgui_demo.cpp.s$/;"	t
lib/cimgui/imgui/imgui_draw.cpp.i	build/Makefile	/^lib\/cimgui\/imgui\/imgui_draw.cpp.i:$/;"	t
lib/cimgui/imgui/imgui_draw.cpp.o	build/Makefile	/^lib\/cimgui\/imgui\/imgui_draw.cpp.o:$/;"	t
lib/cimgui/imgui/imgui_draw.cpp.s	build/Makefile	/^lib\/cimgui\/imgui\/imgui_draw.cpp.s:$/;"	t
lib/cimgui/imgui/imgui_draw.i	build/Makefile	/^lib\/cimgui\/imgui\/imgui_draw.i: lib\/cimgui\/imgui\/imgui_draw.cpp.i$/;"	t
lib/cimgui/imgui/imgui_draw.o	build/Makefile	/^lib\/cimgui\/imgui\/imgui_draw.o: lib\/cimgui\/imgui\/imgui_draw.cpp.o$/;"	t
lib/cimgui/imgui/imgui_draw.s	build/Makefile	/^lib\/cimgui\/imgui\/imgui_draw.s: lib\/cimgui\/imgui\/imgui_draw.cpp.s$/;"	t
lib/gl3w/GL/gl3w.c.i	build/Makefile	/^lib\/gl3w\/GL\/gl3w.c.i:$/;"	t
lib/gl3w/GL/gl3w.c.o	build/Makefile	/^lib\/gl3w\/GL\/gl3w.c.o:$/;"	t
lib/gl3w/GL/gl3w.c.s	build/Makefile	/^lib\/gl3w\/GL\/gl3w.c.s:$/;"	t
lib/gl3w/GL/gl3w.i	build/Makefile	/^lib\/gl3w\/GL\/gl3w.i: lib\/gl3w\/GL\/gl3w.c.i$/;"	t
lib/gl3w/GL/gl3w.o	build/Makefile	/^lib\/gl3w\/GL\/gl3w.o: lib\/gl3w\/GL\/gl3w.c.o$/;"	t
lib/gl3w/GL/gl3w.s	build/Makefile	/^lib\/gl3w\/GL\/gl3w.s: lib\/gl3w\/GL\/gl3w.c.s$/;"	t
lib/imgui_gl3/imgui_impl_glfw_gl3.cpp.i	build/Makefile	/^lib\/imgui_gl3\/imgui_impl_glfw_gl3.cpp.i:$/;"	t
lib/imgui_gl3/imgui_impl_glfw_gl3.cpp.o	build/Makefile	/^lib\/imgui_gl3\/imgui_impl_glfw_gl3.cpp.o:$/;"	t
lib/imgui_gl3/imgui_impl_glfw_gl3.cpp.s	build/Makefile	/^lib\/imgui_gl3\/imgui_impl_glfw_gl3.cpp.s:$/;"	t
lib/imgui_gl3/imgui_impl_glfw_gl3.i	build/Makefile	/^lib\/imgui_gl3\/imgui_impl_glfw_gl3.i: lib\/imgui_gl3\/imgui_impl_glfw_gl3.cpp.i$/;"	t
lib/imgui_gl3/imgui_impl_glfw_gl3.o	build/Makefile	/^lib\/imgui_gl3\/imgui_impl_glfw_gl3.o: lib\/imgui_gl3\/imgui_impl_glfw_gl3.cpp.o$/;"	t
lib/imgui_gl3/imgui_impl_glfw_gl3.s	build/Makefile	/^lib\/imgui_gl3\/imgui_impl_glfw_gl3.s: lib\/imgui_gl3\/imgui_impl_glfw_gl3.cpp.s$/;"	t
libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static HMODULE libgl;$/;"	v	typeref:typename:HMODULE	file:
libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void *libgl;$/;"	v	typeref:typename:void *	file:
libgl	lib/gl3w/GL/gl3w.c	/^static HMODULE libgl;$/;"	v	typeref:typename:HMODULE	file:
libgl	lib/gl3w/GL/gl3w.c	/^static void *libgl;$/;"	v	typeref:typename:void *	file:
line0	lib/nuklear/example/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anonc731c3c80808	typeref:typename:stbi_uc *
line1	lib/nuklear/example/stb_image.h	/^   stbi_uc *line0,*line1;$/;"	m	struct:__anonc731c3c80808	typeref:typename:stbi_uc **
line_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing line_AA; \/* line anti-aliasing flag can be turned off if you are tigh/;"	m	struct:nk_convert_config	typeref:enum:nk_anti_aliasing
line_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing line_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_anti_aliasing
line_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing line_AA; \/* line anti-aliasing flag can be turned off if you are tigh/;"	m	struct:nk_convert_config	typeref:enum:nk_anti_aliasing
line_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing line_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_anti_aliasing
line_size	lib/nuklear/example/stb_image.h	/^   int line_size;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_arc	typeref:typename:unsigned short
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_curve	typeref:typename:unsigned short
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_line	typeref:typename:unsigned short
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polygon	typeref:typename:unsigned short
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polyline	typeref:typename:unsigned short
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
line_thickness	lib/nuklear/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_triangle	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_arc	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_curve	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_line	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polygon	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_polyline	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
line_thickness	lib/nuklear/src/nuklear.h	/^    unsigned short line_thickness;$/;"	m	struct:nk_command_triangle	typeref:typename:unsigned short
linebuf	lib/nuklear/example/stb_image.h	/^      stbi_uc *linebuf;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:stbi_uc *
lines	lib/klib/test/kthread_test2.c	/^	char **lines;$/;"	m	struct:__anon03438e700208	typeref:typename:char **	file:
linkProgram:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (BOOL)linkProgram:(GLuint)prog;$/;"	m	interface:GameViewController
linkProgram:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
link_count	lib/nuklear/demo/node_editor.c	/^    int link_count;$/;"	m	struct:node_editor	typeref:typename:int	file:
linking	lib/nuklear/demo/node_editor.c	/^    struct node_linking linking;$/;"	m	struct:node_editor	typeref:struct:node_linking	file:
links	lib/nuklear/demo/node_editor.c	/^    struct node_link links[64];$/;"	m	struct:node_editor	typeref:struct:node_link[64]	file:
loadShaders	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (BOOL)loadShaders;$/;"	m	interface:GameViewController
loadShaders	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
load_block_from_cache	lib/klib/bgzf.c	/^static int load_block_from_cache(BGZF *fp, int64_t block_address) {return 0;}$/;"	f	typeref:typename:int	file:
load_block_from_cache	lib/klib/bgzf.c	/^static int load_block_from_cache(BGZF *fp, int64_t block_address)$/;"	f	typeref:typename:int	file:
load_file	src/Shader.c	/^load_file($/;"	f	typeref:typename:void	file:
load_jpeg_image	lib/nuklear/example/stb_image.h	/^static stbi_uc *load_jpeg_image(stbi__jpeg *z, int *out_x, int *out_y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
load_procs	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void load_procs(void)$/;"	f	typeref:typename:void	file:
load_procs	lib/gl3w/GL/gl3w.c	/^static void load_procs(void)$/;"	f	typeref:typename:void	file:
loca	lib/cimgui/imgui/stb_truetype.h	/^   int loca,head,glyf,hhea,hmtx,kern,gpos; \/\/ table locations as offset from start of .ttf$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
loca	lib/nuklear/nuklear.h	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
loca	lib/nuklear/src/nuklear_font.c	/^    int loca,head,glyf,hhea,hmtx,kern; \/* table locations as offset from start of .ttf *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
loop_head	lib/klib/kalloc.c	/^	header_t base, *loop_head, *core_head; \/* base is a zero-sized block always kept in the loop */;"	m	struct:__anon3287e0230108	typeref:typename:header_t *	file:
lpal	lib/nuklear/example/stb_image.h	/^   stbi_uc lpal[256][4];$/;"	m	struct:__anonc731c3c81008	typeref:typename:stbi_uc[256][4]
m	lib/klib/bgzf.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
m	lib/klib/khmm.h	/^	int m, n; \/\/ number of symbols, number of states$/;"	m	struct:__anonf542711f0108	typeref:typename:int
m	lib/klib/khmm.h	/^	int m, n;$/;"	m	struct:__anonf542711f0308	typeref:typename:int
m	lib/klib/knhx.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
m	lib/klib/kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
m	lib/klib/kstring.h	/^	size_t l, m;$/;"	m	struct:__kstring_t	typeref:typename:size_t
m	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	m	struct:__anonf630694b0408	typeref:typename:int	file:
m	src/Drawable.h	/^    mat4x4  m;$/;"	m	struct:Drawable	typeref:typename:mat4x4
m_buf	lib/klib/kurl.c	/^	int m_buf;    \/\/ max buffer size; for a remote file, CURL_MAX_WRITE_SIZE*2 is recommended$/;"	m	struct:kurl_t	typeref:typename:int	file:
m_clientHeight	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_clientHeight;									\/* Height of screen *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint16_t
m_clientName	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	const char*						m_clientName;									\/* Name of Synergy Screen \/ Client *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:const char *
m_clientWidth	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_clientWidth;									\/* Width of screen *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint16_t
m_clipboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyClipboardCallback		m_clipboardCallback;							\/* Callback for clipboard events *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyClipboardCallback
m_connectFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyConnectFunc				m_connectFunc;									\/* Connect function *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyConnectFunc
m_connected	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_connected;									\/* Is our socket connected? *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyBool
m_cookie	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyCookie					m_cookie;										\/* Cookie pointer passed to callback functions (can be N/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyCookie
m_getTimeFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyGetTimeFunc				m_getTimeFunc;									\/* Get current time function *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyGetTimeFunc
m_hasReceivedHello	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_hasReceivedHello;								\/* Have we received a 'Hello' from the server? *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyBool
m_isCaptured	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_isCaptured;									\/* Is Synergy active (i.e. this client is receiving inp/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyBool
m_joystickButtons	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_joystickButtons[USYNERGY_NUM_JOYSTICKS];		\/* Joystick button state *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint16_t[]
m_joystickCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyJoystickCallback		m_joystickCallback;								\/* Callback for joystick events *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyJoystickCallback
m_joystickSticks	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int8_t							m_joystickSticks[USYNERGY_NUM_JOYSTICKS][4];	\/* Joystick stick position in 2 axes/;"	m	struct:__anon77dd0a3a0208	typeref:typename:int8_t[][4]
m_keyboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyKeyboardCallback		m_keyboardCallback;								\/* Callback for keyboard events *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyKeyboardCallback
m_lastMessageTime	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint32_t						m_lastMessageTime;								\/* Time at which last message was received *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint32_t
m_mouseButtonLeft	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_mouseButtonLeft;								\/* Mouse left button *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyBool
m_mouseButtonMiddle	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_mouseButtonMiddle;							\/* Mouse middle button *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyBool
m_mouseButtonRight	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyBool					m_mouseButtonRight;								\/* Mouse right button *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyBool
m_mouseCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyMouseCallback			m_mouseCallback;								\/* Callback for mouse events *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyMouseCallback
m_mouseWheelX	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int16_t							m_mouseWheelX;									\/* Mouse wheel X position *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:int16_t
m_mouseWheelY	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int16_t							m_mouseWheelY;									\/* Mouse wheel Y position *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:int16_t
m_mouseX	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_mouseX;										\/* Mouse X position *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint16_t
m_mouseY	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint16_t						m_mouseY;										\/* Mouse Y position *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint16_t
m_receiveBuffer	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint8_t							m_receiveBuffer[USYNERGY_RECEIVE_BUFFER_SIZE];	\/* Receive buffer *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint8_t[]
m_receiveFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyReceiveFunc				m_receiveFunc;									\/* Receive data function *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyReceiveFunc
m_receiveOfs	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	int								m_receiveOfs;									\/* Receive buffer offset *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:int
m_replyBuffer	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint8_t							m_replyBuffer[USYNERGY_REPLY_BUFFER_SIZE];		\/* Reply buffer *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint8_t[]
m_replyCur	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint8_t*						m_replyCur;										\/* Write offset into reply buffer *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint8_t *
m_screenActiveCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyScreenActiveCallback	m_screenActiveCallback;							\/* Callback for entering and leavin/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyScreenActiveCallback
m_sendFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergySendFunc				m_sendFunc;										\/* Send data function *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergySendFunc
m_sequenceNumber	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uint32_t						m_sequenceNumber;								\/* Packet sequence number *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uint32_t
m_sleepFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergySleepFunc				m_sleepFunc;									\/* Thread sleep function *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergySleepFunc
m_traceFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^	uSynergyTraceFunc				m_traceFunc;									\/* Function for tracing status (can be NULL) *\/$/;"	m	struct:__anon77dd0a3a0208	typeref:typename:uSynergyTraceFunc
macro	lib/nuklear/src/build.py	/^        macro = sys.argv[cur_arg]$/;"	v
macro	lib/nuklear/src/build.py	/^macro = ""$/;"	v
main	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f	typeref:typename:void
main	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/allegro5_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/apple_example/imguiex-ios/main.m	/^int main(int argc, char * argv[]) {$/;"	f
main	lib/cimgui/imgui/examples/apple_example/imguiex-osx/main.m	/^int main(int argc, const char * argv[]) {$/;"	f
main	lib/cimgui/imgui/examples/directx10_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/directx11_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/directx12_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/directx9_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/marmalade_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/null_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/opengl2_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/opengl3_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/sdl_opengl2_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/sdl_opengl3_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^int main(int, char**)$/;"	f	typeref:typename:int
main	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^int main(int argc, char** argv)$/;"	f	typeref:typename:int
main	lib/klib/kexpr.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/kmath.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/knetfile.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/klib/knhx.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/kopen.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/kson.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/kstring.c	/^int main()$/;"	f	typeref:typename:int
main	lib/klib/ksw.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/kurl.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/kavl_test.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/klib/test/kbit_test.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/klib/test/kbtree_test.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/khash_keith.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/khash_keith2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/khash_test.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/kmin_test.c	/^int main()$/;"	f	typeref:typename:int
main	lib/klib/test/ksort_test.cc	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/kstring_bench.c	/^int main()$/;"	f	typeref:typename:int
main	lib/klib/test/kstring_bench2.c	/^int main()$/;"	f	typeref:typename:int
main	lib/klib/test/kstring_test.c	/^int main(int argc, char **argv)$/;"	f	typeref:typename:int
main	lib/klib/test/kthread_test.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/kthread_test2.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/klib/test/kvec_test.cc	/^int main()$/;"	f	typeref:typename:int
main	lib/nuklear/demo/allegro5/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/d3d11/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/d3d9/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/gdi/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/gdip/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/glfw_opengl2/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/glfw_opengl3/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/glfw_opengl4/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/sdl_opengl2/main.c	/^main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/sdl_opengl3/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/sdl_opengles2/main.c	/^int main(int argc, char* argv[])$/;"	f	typeref:typename:int
main	lib/nuklear/demo/sfml_opengl2/main.cpp	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/sfml_opengl3/main.cpp	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/x11/main.c	/^main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/x11_opengl2/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/x11_opengl3/main.c	/^int main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/demo/x11_rawfb/main.c	/^main(void)$/;"	f	typeref:typename:int
main	lib/nuklear/doc/stddoc.c	/^int main() {$/;"	f	typeref:typename:int
main	lib/nuklear/example/canvas.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/nuklear/example/extended.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/nuklear/example/file_browser.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	lib/nuklear/example/skinning.c	/^int main(int argc, char *argv[])$/;"	f	typeref:typename:int
main	src/main.c	/^int main(int argc, char** argv) {$/;"	f	typeref:typename:int
major	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon38bea1050108	typeref:typename:int	file:
major	lib/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon0d481e870108	typeref:typename:int	file:
major_version	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int major_version;$/;"	m	struct:opengl_info	typeref:typename:int
map_buffer_range_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int map_buffer_range_available;$/;"	m	struct:opengl_info	typeref:typename:int
marker	lib/nuklear/example/stb_image.h	/^   unsigned char  marker;      \/\/ marker seen while filling entropy buffer$/;"	m	struct:__anonc731c3c80608	typeref:typename:unsigned char
marker	lib/nuklear/nuklear.h	/^    struct nk_buffer_marker marker[NK_BUFFER_MAX];$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer_marker[]
marker	lib/nuklear/src/nuklear.h	/^    struct nk_buffer_marker marker[NK_BUFFER_MAX];$/;"	m	struct:nk_buffer	typeref:struct:nk_buffer_marker[]
mat4x4	lib/linmath/linmath.h	/^typedef vec4 mat4x4[4];$/;"	t	typeref:typename:vec4[4]
mat4x4_add	lib/linmath/linmath.h	/^static inline void mat4x4_add(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:void
mat4x4_col	lib/linmath/linmath.h	/^static inline void mat4x4_col(vec4 r, mat4x4 M, int i)$/;"	f	typeref:typename:void
mat4x4_dup	lib/linmath/linmath.h	/^static inline void mat4x4_dup(mat4x4 M, mat4x4 N)$/;"	f	typeref:typename:void
mat4x4_from_quat	lib/linmath/linmath.h	/^static inline void mat4x4_from_quat(mat4x4 M, quat q)$/;"	f	typeref:typename:void
mat4x4_from_vec3_mul_outer	lib/linmath/linmath.h	/^static inline void mat4x4_from_vec3_mul_outer(mat4x4 M, vec3 a, vec3 b)$/;"	f	typeref:typename:void
mat4x4_frustum	lib/linmath/linmath.h	/^static inline void mat4x4_frustum(mat4x4 M, float l, float r, float b, float t, float n, float f/;"	f	typeref:typename:void
mat4x4_identity	lib/linmath/linmath.h	/^static inline void mat4x4_identity(mat4x4 M)$/;"	f	typeref:typename:void
mat4x4_invert	lib/linmath/linmath.h	/^static inline void mat4x4_invert(mat4x4 T, mat4x4 M)$/;"	f	typeref:typename:void
mat4x4_look_at	lib/linmath/linmath.h	/^static inline void mat4x4_look_at(mat4x4 m, vec3 eye, vec3 center, vec3 up)$/;"	f	typeref:typename:void
mat4x4_mul	lib/linmath/linmath.h	/^static inline void mat4x4_mul(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:void
mat4x4_mul_vec4	lib/linmath/linmath.h	/^static inline void mat4x4_mul_vec4(vec4 r, mat4x4 M, vec4 v)$/;"	f	typeref:typename:void
mat4x4_ortho	lib/linmath/linmath.h	/^static inline void mat4x4_ortho(mat4x4 M, float l, float r, float b, float t, float n, float f)$/;"	f	typeref:typename:void
mat4x4_orthonormalize	lib/linmath/linmath.h	/^static inline void mat4x4_orthonormalize(mat4x4 R, mat4x4 M)$/;"	f	typeref:typename:void
mat4x4_perspective	lib/linmath/linmath.h	/^static inline void mat4x4_perspective(mat4x4 m, float y_fov, float aspect, float n, float f)$/;"	f	typeref:typename:void
mat4x4_rotate	lib/linmath/linmath.h	/^static inline void mat4x4_rotate(mat4x4 R, mat4x4 M, float x, float y, float z, float angle)$/;"	f	typeref:typename:void
mat4x4_rotate_X	lib/linmath/linmath.h	/^static inline void mat4x4_rotate_X(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:void
mat4x4_rotate_Y	lib/linmath/linmath.h	/^static inline void mat4x4_rotate_Y(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:void
mat4x4_rotate_Z	lib/linmath/linmath.h	/^static inline void mat4x4_rotate_Z(mat4x4 Q, mat4x4 M, float angle)$/;"	f	typeref:typename:void
mat4x4_row	lib/linmath/linmath.h	/^static inline void mat4x4_row(vec4 r, mat4x4 M, int i)$/;"	f	typeref:typename:void
mat4x4_scale	lib/linmath/linmath.h	/^static inline void mat4x4_scale(mat4x4 M, mat4x4 a, float k)$/;"	f	typeref:typename:void
mat4x4_scale_aniso	lib/linmath/linmath.h	/^static inline void mat4x4_scale_aniso(mat4x4 M, mat4x4 a, float x, float y, float z)$/;"	f	typeref:typename:void
mat4x4_sub	lib/linmath/linmath.h	/^static inline void mat4x4_sub(mat4x4 M, mat4x4 a, mat4x4 b)$/;"	f	typeref:typename:void
mat4x4_translate	lib/linmath/linmath.h	/^static inline void mat4x4_translate(mat4x4 T, float x, float y, float z)$/;"	f	typeref:typename:void
mat4x4_translate_in_place	lib/linmath/linmath.h	/^static inline void mat4x4_translate_in_place(mat4x4 M, float x, float y, float z)$/;"	f	typeref:typename:void
mat4x4_transpose	lib/linmath/linmath.h	/^static inline void mat4x4_transpose(mat4x4 M, mat4x4 N)$/;"	f	typeref:typename:void
mat4x4o_mul_quat	lib/linmath/linmath.h	/^static inline void mat4x4o_mul_quat(mat4x4 R, mat4x4 M, quat q)$/;"	f	typeref:typename:void
math.bernstein_poly	lib/klib/lua/klib.lua	/^function math.bernstein_poly(beta)$/;"	f
math.erfc	lib/klib/lua/klib.lua	/^function math.erfc(x)$/;"	f
math.fisher_exact	lib/klib/lua/klib.lua	/^function math.fisher_exact(n11, n12, n21, n22)$/;"	f
math.fmin	lib/klib/lua/klib.lua	/^function math.fmin(func, x, data, r, eps, max_calls)$/;"	f
math.igamma	lib/klib/lua/klib.lua	/^function math.igamma(s, z, complement)$/;"	f
math.jackknife	lib/klib/lua/klib.lua	/^function math.jackknife(g, m, t, t0)$/;"	f
math.lbinom	lib/klib/lua/klib.lua	/^function math.lbinom(n, m)$/;"	f
math.lgamma	lib/klib/lua/klib.lua	/^function math.lgamma(z)$/;"	f
math.pearson	lib/klib/lua/klib.lua	/^function math.pearson(a)$/;"	f
math.spearman	lib/klib/lua/klib.lua	/^function math.spearman(a)$/;"	f
matrix.T	lib/klib/lua/klib.lua	/^function matrix.T(a)$/;"	f
matrix.add	lib/klib/lua/klib.lua	/^function matrix.add(a, b)$/;"	f
matrix.chi2	lib/klib/lua/klib.lua	/^function matrix.chi2(a)$/;"	f
matrix.mul	lib/klib/lua/klib.lua	/^function matrix.mul(a, b)$/;"	f
matrix.solve	lib/klib/lua/klib.lua	/^function matrix.solve(a, b)$/;"	f
matrix.tostring	lib/klib/lua/klib.lua	/^function matrix.tostring(a)$/;"	f
max	lib/klib/knhx.c	/^	int error, n, max;$/;"	m	struct:__anonf5ac75060108	typeref:typename:int	file:
max	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	typeref:typename:uint8_t	file:
max	lib/nuklear/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
max	lib/nuklear/src/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
max_element_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int max_element_buffer;$/;"	m	struct:nk_glfw_device	typeref:typename:int
max_index_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    unsigned int max_index_buffer;$/;"	m	struct:__anon70d184300108	typeref:typename:unsigned int
max_iter	lib/klib/test/kthread_test.c	/^	int max_iter, w, h;$/;"	m	struct:__anone8d3801e0108	typeref:typename:int	file:
max_lines	lib/klib/test/kthread_test2.c	/^	int max_lines, buf_size, n_threads;$/;"	m	struct:__anon03438e700108	typeref:typename:int	file:
max_response	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s	typeref:typename:int[4]
max_response	lib/klib/kopen.c	/^	int max_response, ctrl_fd;$/;"	m	struct:__anonae17a10a0108	typeref:typename:int	file:
max_value	lib/nuklear/nuklear.h	/^    union nk_property max_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
max_value	lib/nuklear/src/nuklear_internal.h	/^    union nk_property max_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
max_vertex_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    unsigned int max_vertex_buffer;$/;"	m	struct:__anon70d184300108	typeref:typename:unsigned int
max_vertex_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int max_vertex_buffer;$/;"	m	struct:nk_glfw_device	typeref:typename:int
max_x	lib/cimgui/imgui/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:stbtt_int32
max_x	lib/nuklear/example/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
max_x	lib/nuklear/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
max_x	lib/nuklear/src/nuklear.h	/^    float at_x, at_y, max_x;$/;"	m	struct:nk_panel	typeref:typename:float
max_y	lib/cimgui/imgui/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:stbtt_int32
max_y	lib/nuklear/example/stb_image.h	/^   int max_x, max_y;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
maxcode	lib/nuklear/example/stb_image.h	/^   int maxcode[17];$/;"	m	struct:__anonc731c3c80908	typeref:typename:int[17]
maxcode	lib/nuklear/example/stb_image.h	/^   unsigned int maxcode[18];$/;"	m	struct:__anonc731c3c80508	typeref:typename:unsigned int[18]
maximize_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type maximize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
maximize_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type maximize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
mdiff	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	typeref:typename:uint8_t	file:
media	lib/nuklear/example/extended.c	/^struct media {$/;"	s	file:
media	lib/nuklear/example/file_browser.c	/^    struct media *media;$/;"	m	struct:file_browser	typeref:struct:media *	file:
media	lib/nuklear/example/file_browser.c	/^struct media {$/;"	s	file:
media	lib/nuklear/example/skinning.c	/^struct media {$/;"	s	file:
media_icon_for_file	lib/nuklear/example/file_browser.c	/^media_icon_for_file(struct media *media, const char *file)$/;"	f	typeref:struct:nk_image *	file:
media_init	lib/nuklear/example/file_browser.c	/^media_init(struct media *media)$/;"	f	typeref:typename:void	file:
medianOf3	lib/klib/test/ksort_test.cc	/^static int medianOf3 (int * numbers, int i, int j) {$/;"	f	typeref:typename:int	file:
mem_gets	lib/klib/test/kstring_test.c	/^static char *mem_gets(char *buf, int buflen, void *vtextp)$/;"	f	typeref:typename:char *	file:
memory	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpGraphics *memory;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:GpGraphics *
memory	lib/nuklear/nuklear.h	/^    struct nk_buffer memory;$/;"	m	struct:nk_context	typeref:struct:nk_buffer
memory	lib/nuklear/nuklear.h	/^    struct nk_memory memory;$/;"	m	struct:nk_buffer	typeref:struct:nk_memory
memory	lib/nuklear/nuklear.h	/^    void *memory;$/;"	m	struct:nk_memory_status	typeref:typename:void *
memory	lib/nuklear/src/nuklear.h	/^    struct nk_buffer memory;$/;"	m	struct:nk_context	typeref:struct:nk_buffer
memory	lib/nuklear/src/nuklear.h	/^    struct nk_memory memory;$/;"	m	struct:nk_buffer	typeref:struct:nk_memory
memory	lib/nuklear/src/nuklear.h	/^    void *memory;$/;"	m	struct:nk_memory_status	typeref:typename:void *
memory_dc	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HDC memory_dc;$/;"	m	struct:__anonc4120a9e0108	typeref:typename:HDC
menu	lib/nuklear/example/extended.c	/^    struct nk_image menu[6];$/;"	m	struct:media	typeref:struct:nk_image[6]	file:
menu	lib/nuklear/example/skinning.c	/^    struct nk_image menu;$/;"	m	struct:media	typeref:struct:nk_image	file:
menu	lib/nuklear/nuklear.h	/^    struct nk_menu_state menu;$/;"	m	struct:nk_panel	typeref:struct:nk_menu_state
menu	lib/nuklear/src/nuklear.h	/^    struct nk_menu_state menu;$/;"	m	struct:nk_panel	typeref:struct:nk_menu_state
menu_border	lib/nuklear/nuklear.h	/^    float menu_border;$/;"	m	struct:nk_style_window	typeref:typename:float
menu_border	lib/nuklear/src/nuklear.h	/^    float menu_border;$/;"	m	struct:nk_style_window	typeref:typename:float
menu_border_color	lib/nuklear/nuklear.h	/^    struct nk_color menu_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
menu_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color menu_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
menu_button	lib/nuklear/nuklear.h	/^    struct nk_style_button menu_button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
menu_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button menu_button;$/;"	m	struct:nk_style	typeref:struct:nk_style_button
menu_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 menu_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
menu_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 menu_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
menu_state	lib/nuklear/demo/overview.c	/^                enum menu_state {MENU_NONE,MENU_FILE, MENU_EDIT,MENU_VIEW,MENU_CHART};$/;"	g	function:overview	file:
menu_states	lib/nuklear/demo/overview.c	/^            enum menu_states {MENU_DEFAULT, MENU_WINDOWS};$/;"	g	function:overview	file:
mergeSort	lib/klib/test/ksort_test.cc	/^void mergeSort (int numbers[], int qty) {$/;"	f	typeref:typename:void
merge_mode	lib/nuklear/nuklear.h	/^    unsigned char merge_mode;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
merge_mode	lib/nuklear/src/nuklear.h	/^    unsigned char merge_mode;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
mergesortExchange	lib/klib/test/ksort_test.cc	/^static void mergesortExchange (int * numbers, int * altNumbers, int qty) {$/;"	f	typeref:typename:void	file:
mergesortInPlace	lib/klib/test/ksort_test.cc	/^static void mergesortInPlace (int * numbers, int * altNumbers, int qty) {$/;"	f	typeref:typename:void	file:
min	lib/nuklear/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
min	lib/nuklear/src/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
min_height	lib/nuklear/nuklear.h	/^    float min_height;$/;"	m	struct:nk_row_layout	typeref:typename:float
min_height	lib/nuklear/src/nuklear.h	/^    float min_height;$/;"	m	struct:nk_row_layout	typeref:typename:float
min_row_height_padding	lib/nuklear/nuklear.h	/^    float min_row_height_padding;$/;"	m	struct:nk_style_window	typeref:typename:float
min_row_height_padding	lib/nuklear/src/nuklear.h	/^    float min_row_height_padding;$/;"	m	struct:nk_style_window	typeref:typename:float
min_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 min_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
min_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 min_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
min_value	lib/nuklear/nuklear.h	/^    union nk_property min_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
min_value	lib/nuklear/src/nuklear_internal.h	/^    union nk_property min_value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
min_x	lib/cimgui/imgui/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:stbtt_int32
min_y	lib/cimgui/imgui/stb_truetype.h	/^   stbtt_int32 min_x, max_x, min_y, max_y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:stbtt_int32
minimize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button minimize_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_button
minimize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button minimize_button;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_button
minimize_symbol	lib/nuklear/nuklear.h	/^    enum nk_symbol_type minimize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
minimize_symbol	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type minimize_symbol;$/;"	m	struct:nk_style_window_header	typeref:enum:nk_symbol_type
minor	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon38bea1050108	typeref:typename:int	file:
minor	lib/gl3w/GL/gl3w.c	/^	int major, minor;$/;"	m	struct:__anon0d481e870108	typeref:typename:int	file:
minor_version	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int minor_version;$/;"	m	struct:opengl_info	typeref:typename:int
mode	lib/nuklear/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned char
mode	lib/nuklear/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
mode	lib/nuklear/src/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned char
mode	lib/nuklear/src/nuklear.h	/^    unsigned char mode;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
mode	src/Drawable.h	/^    GLenum  mode;$/;"	m	struct:Drawable	typeref:typename:GLenum
mode2level	lib/klib/bgzf.c	/^static int mode2level(const char *__restrict mode)$/;"	f	typeref:typename:int	file:
modelViewProjectionMatrix	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^    GLKMatrix4 _modelViewProjectionMatrix;$/;"	E	interface:GameViewController
morecore	lib/klib/kalloc.c	/^static header_t *morecore(kmem_t *km, size_t nu)$/;"	f	typeref:typename:header_t *	file:
mouse	lib/nuklear/nuklear.h	/^    struct nk_mouse mouse;$/;"	m	struct:nk_input	typeref:struct:nk_mouse
mouse	lib/nuklear/src/nuklear.h	/^    struct nk_mouse mouse;$/;"	m	struct:nk_input	typeref:struct:nk_mouse
mouseDown	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^    BOOL _mouseDown;$/;"	E	interface:ImGuiHelper
mouseTapped	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^    BOOL _mouseTapped;$/;"	E	interface:ImGuiHelper
movie_file	lib/nuklear/example/file_browser.c	/^    struct nk_image movie_file;$/;"	m	struct:icons	typeref:struct:nk_image	file:
mt	lib/klib/kmath.c	/^	krint64_t mt[KR_NN];$/;"	m	struct:_krand_t	typeref:typename:krint64_t[]	file:
mti	lib/klib/kmath.c	/^	int mti, n_iset;$/;"	m	struct:_krand_t	typeref:typename:int	file:
multi	lib/klib/kurl.c	/^	CURLM *multi; \/\/ cURL multi handler$/;"	m	struct:kurl_t	typeref:typename:CURLM *	file:
music_file	lib/nuklear/example/file_browser.c	/^    struct nk_image music_file;$/;"	m	struct:icons	typeref:struct:nk_image	file:
mutex	lib/klib/kthread.c	/^	pthread_mutex_t mutex;$/;"	m	struct:kt_forpool_t	typeref:typename:pthread_mutex_t	file:
mutex	lib/klib/kthread.c	/^	pthread_mutex_t mutex;$/;"	m	struct:ktp_t	typeref:typename:pthread_mutex_t	file:
mvp	lib/cimgui/imgui/examples/directx10_example/imgui_impl_dx10.cpp	/^    float        mvp[4][4];$/;"	m	struct:VERTEX_CONSTANT_BUFFER	typeref:typename:float[4][4]	file:
mvp	lib/cimgui/imgui/examples/directx11_example/imgui_impl_dx11.cpp	/^    float        mvp[4][4];$/;"	m	struct:VERTEX_CONSTANT_BUFFER	typeref:typename:float[4][4]	file:
mvp	lib/cimgui/imgui/examples/directx12_example/imgui_impl_dx12.cpp	/^    float        mvp[4][4];$/;"	m	struct:VERTEX_CONSTANT_BUFFER	typeref:typename:float[4][4]	file:
mvp	src/Shader.h	/^    GLuint mvp;$/;"	m	struct:__anon74bd45490108	typeref:typename:GLuint
my_cmp	lib/klib/test/kavl_test.c	/^#define my_cmp(/;"	d	file:
my_netread	lib/klib/knetfile.c	/^static off_t my_netread(int fd, void *buf, off_t len)$/;"	f	typeref:typename:off_t	file:
my_node	lib/klib/test/kavl_test.c	/^struct my_node {$/;"	s	file:
mystrndup	lib/klib/kexpr.c	/^static inline char *mystrndup(const char *src, int n)$/;"	f	typeref:typename:char *	file:
n	lib/klib/kbtree.h	/^	int32_t is_internal:1, n:31;$/;"	m	struct:__anon929281af0108	typeref:typename:int32_t:31
n	lib/klib/kexpr.c	/^	int n;$/;"	m	struct:kexpr_s	typeref:typename:int	file:
n	lib/klib/khmm.h	/^	int m, n; \/\/ number of symbols, number of states$/;"	m	struct:__anonf542711f0108	typeref:typename:int
n	lib/klib/khmm.h	/^	int m, n;$/;"	m	struct:__anonf542711f0308	typeref:typename:int
n	lib/klib/knhx.c	/^	int error, n, max;$/;"	m	struct:__anonf5ac75060108	typeref:typename:int	file:
n	lib/klib/knhx.h	/^	int parent, n;$/;"	m	struct:__anonf5ac750b0108	typeref:typename:int
n	lib/klib/kson.h	/^	unsigned long long type:3, n:61;$/;"	m	struct:kson_node_s	typeref:typename:unsigned long long:61
n	lib/klib/kthread.c	/^	long n;$/;"	m	struct:kt_for_t	typeref:typename:long	file:
n	lib/klib/kthread.c	/^	long n;$/;"	m	struct:kt_forpool_t	typeref:typename:long	file:
n	lib/nuklear/nuklear.h	/^    struct nk_font_config *n;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
n	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *n;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
n_args	lib/klib/kexpr.c	/^	int32_t op:8, n_args:24; \/\/ op: operator, n_args: number of arguments$/;"	m	struct:ke1_s	typeref:typename:int32_t:24	file:
n_blocks	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon3287e0280108	typeref:typename:size_t
n_cores	lib/klib/kalloc.h	/^	size_t capacity, available, n_blocks, n_cores, largest;$/;"	m	struct:__anon3287e0280108	typeref:typename:size_t
n_evals	lib/klib/test/kmin_test.c	/^static int n_evals;$/;"	v	typeref:typename:int	file:
n_gset	lib/klib/kmath.c	/^	double n_gset;$/;"	m	struct:_krand_t	typeref:typename:double	file:
n_iset	lib/klib/kmath.c	/^	int mti, n_iset;$/;"	m	struct:_krand_t	typeref:typename:int	file:
n_lines	lib/klib/test/kthread_test2.c	/^	int n_lines;$/;"	m	struct:__anon03438e700208	typeref:typename:int	file:
n_nodes	lib/klib/kson.h	/^	long n_nodes;$/;"	m	struct:__anonf60a9bad0208	typeref:typename:long
n_pending	lib/klib/kthread.c	/^	int n_threads, n_pending;$/;"	m	struct:kt_forpool_t	typeref:typename:int	file:
n_steps	lib/klib/kthread.c	/^	int n_workers, n_steps;$/;"	m	struct:ktp_t	typeref:typename:int	file:
n_threads	lib/klib/kthread.c	/^	int n_threads, n_pending;$/;"	m	struct:kt_forpool_t	typeref:typename:int	file:
n_threads	lib/klib/kthread.c	/^	int n_threads;$/;"	m	struct:kt_for_t	typeref:typename:int	file:
n_threads	lib/klib/test/kthread_test2.c	/^	int max_lines, buf_size, n_threads;$/;"	m	struct:__anon03438e700108	typeref:typename:int	file:
n_workers	lib/klib/kthread.c	/^	int n_workers, n_steps;$/;"	m	struct:ktp_t	typeref:typename:int	file:
name	lib/klib/kexpr.c	/^	char *name; \/\/ variable name or function name$/;"	m	struct:ke1_s	typeref:typename:char *	file:
name	lib/klib/knhx.h	/^	char *name;$/;"	m	struct:__anonf5ac750b0108	typeref:typename:char *
name	lib/nuklear/demo/node_editor.c	/^    char name[32];$/;"	m	struct:node	typeref:typename:char[32]	file:
name	lib/nuklear/example/file_browser.c	/^    const char *name;$/;"	m	struct:file_group	typeref:typename:const char *	file:
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_edit_state	typeref:typename:nk_hash
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_popup_state	typeref:typename:nk_hash
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_property_state	typeref:typename:nk_hash
name	lib/nuklear/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_window	typeref:typename:nk_hash
name	lib/nuklear/package.json	/^  "name": "nuklear",$/;"	s
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_edit_state	typeref:typename:nk_hash
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_popup_state	typeref:typename:nk_hash
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_property_state	typeref:typename:nk_hash
name	lib/nuklear/src/nuklear.h	/^    nk_hash name;$/;"	m	struct:nk_window	typeref:typename:nk_hash
name_string	lib/nuklear/nuklear.h	/^    char name_string[NK_WINDOW_MAX_NAME];$/;"	m	struct:nk_window	typeref:typename:char[]
name_string	lib/nuklear/src/nuklear.h	/^    char name_string[NK_WINDOW_MAX_NAME];$/;"	m	struct:nk_window	typeref:typename:char[]
needed	lib/nuklear/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
needed	lib/nuklear/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
needed	lib/nuklear/src/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
needed	lib/nuklear/src/nuklear.h	/^    nk_size needed;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
netclose	lib/klib/knetfile.h	/^#define netclose(/;"	d
netread	lib/klib/knetfile.h	/^#define netread(/;"	d
netwrite	lib/klib/knetfile.h	/^#define netwrite(/;"	d
newFrame	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.h	/^- (void)newFrame;$/;"	m	interface:ImGuiHelper
newFrame	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
next	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_node  *next;$/;"	m	struct:stbrp_node	typeref:typename:stbrp_node *
next	lib/cimgui/imgui/stb_truetype.h	/^   struct stbtt__active_edge *next;$/;"	m	struct:stbtt__active_edge	typeref:struct:stbtt__active_edge *
next	lib/cimgui/imgui/stb_truetype.h	/^   struct stbtt__hheap_chunk *next;$/;"	m	struct:stbtt__hheap_chunk	typeref:struct:stbtt__hheap_chunk *
next	lib/nuklear/demo/node_editor.c	/^    struct node *next;$/;"	m	struct:node	typeref:struct:node *	file:
next	lib/nuklear/example/extended.c	/^    struct nk_image next;$/;"	m	struct:media	typeref:struct:nk_image	file:
next	lib/nuklear/nuklear.h	/^    nk_size next;$/;"	m	struct:nk_command	typeref:typename:nk_size
next	lib/nuklear/nuklear.h	/^    struct nk_font *next;$/;"	m	struct:nk_font	typeref:struct:nk_font *
next	lib/nuklear/nuklear.h	/^    struct nk_font_config *next;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
next	lib/nuklear/nuklear.h	/^    struct nk_page *next;$/;"	m	struct:nk_page	typeref:struct:nk_page *
next	lib/nuklear/nuklear.h	/^    struct nk_page_element *next;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element *
next	lib/nuklear/nuklear.h	/^    struct nk_rp_node  *next;$/;"	m	struct:nk_rp_node	typeref:struct:nk_rp_node *
next	lib/nuklear/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table *
next	lib/nuklear/nuklear.h	/^    struct nk_tt__active_edge *next;$/;"	m	struct:nk_tt__active_edge	typeref:struct:nk_tt__active_edge *
next	lib/nuklear/nuklear.h	/^    struct nk_tt__hheap_chunk *next;$/;"	m	struct:nk_tt__hheap_chunk	typeref:struct:nk_tt__hheap_chunk *
next	lib/nuklear/nuklear.h	/^    struct nk_window *next;$/;"	m	struct:nk_window	typeref:struct:nk_window *
next	lib/nuklear/src/nuklear.h	/^    nk_size next;$/;"	m	struct:nk_command	typeref:typename:nk_size
next	lib/nuklear/src/nuklear.h	/^    struct nk_font *next;$/;"	m	struct:nk_font	typeref:struct:nk_font *
next	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *next;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
next	lib/nuklear/src/nuklear.h	/^    struct nk_page *next;$/;"	m	struct:nk_page	typeref:struct:nk_page *
next	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *next;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element *
next	lib/nuklear/src/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table *
next	lib/nuklear/src/nuklear.h	/^    struct nk_window *next;$/;"	m	struct:nk_window	typeref:struct:nk_window *
next	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node  *next;$/;"	m	struct:nk_rp_node	typeref:struct:nk_rp_node *	file:
next	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt__active_edge *next;$/;"	m	struct:nk_tt__active_edge	typeref:struct:nk_tt__active_edge *	file:
next	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt__hheap_chunk *next;$/;"	m	struct:nk_tt__hheap_chunk	typeref:struct:nk_tt__hheap_chunk *	file:
nfail	lib/klib/test/kstring_test.c	/^int nfail = 0;$/;"	v	typeref:typename:int
nk	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    struct nk_user_font nk;$/;"	m	struct:NkAllegro5Font	typeref:struct:nk_user_font
nk	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    struct nk_user_font nk;$/;"	m	struct:GdiFont	typeref:struct:nk_user_font
nk	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    struct nk_user_font nk;$/;"	m	struct:GdipFont	typeref:struct:nk_user_font
nk__barrier	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier2	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier2;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier2	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier2;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier3	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier3;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier3	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier3;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier4	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__barrier4;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__barrier4	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__barrier4;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__begin	lib/nuklear/nuklear.h	/^nk__begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API const struct nk_command *
nk__begin	lib/nuklear/src/nuklear_context.c	/^nk__begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API const struct nk_command *
nk__dout	lib/nuklear/nuklear.h	/^NK_GLOBAL unsigned char *nk__dout;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__dout	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL unsigned char *nk__dout;$/;"	v	typeref:typename:NK_GLOBAL unsigned char *
nk__draw_begin	lib/nuklear/nuklear.h	/^nk__draw_begin(const struct nk_context *ctx,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_begin	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_begin(const struct nk_context *ctx,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_end	lib/nuklear/nuklear.h	/^nk__draw_end(const struct nk_context *ctx, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_end	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_end(const struct nk_context *ctx, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_begin	lib/nuklear/nuklear.h	/^nk__draw_list_begin(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_begin	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_list_begin(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_end	lib/nuklear/nuklear.h	/^nk__draw_list_end(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_end	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_list_end(const struct nk_draw_list *canvas, const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_next	lib/nuklear/nuklear.h	/^nk__draw_list_next(const struct nk_draw_command *cmd,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_list_next	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_list_next(const struct nk_draw_command *cmd,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_next	lib/nuklear/nuklear.h	/^nk__draw_next(const struct nk_draw_command *cmd,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__draw_next	lib/nuklear/src/nuklear_vertex.c	/^nk__draw_next(const struct nk_draw_command *cmd,$/;"	f	typeref:typename:NK_API const struct nk_draw_command *
nk__in2	lib/nuklear/nuklear.h	/^    #define nk__in2(/;"	d
nk__in2	lib/nuklear/src/nuklear_font.c	/^    #define nk__in2(/;"	d	file:
nk__in3	lib/nuklear/nuklear.h	/^    #define nk__in3(/;"	d
nk__in3	lib/nuklear/src/nuklear_font.c	/^    #define nk__in3(/;"	d	file:
nk__in4	lib/nuklear/nuklear.h	/^    #define nk__in4(/;"	d
nk__in4	lib/nuklear/src/nuklear_font.c	/^    #define nk__in4(/;"	d	file:
nk__lit	lib/nuklear/nuklear.h	/^nk__lit(unsigned char *data, unsigned int length)$/;"	f	typeref:typename:NK_INTERN void
nk__lit	lib/nuklear/src/nuklear_font.c	/^nk__lit(unsigned char *data, unsigned int length)$/;"	f	typeref:typename:NK_INTERN void
nk__match	lib/nuklear/nuklear.h	/^nk__match(unsigned char *data, unsigned int length)$/;"	f	typeref:typename:NK_INTERN void
nk__match	lib/nuklear/src/nuklear_font.c	/^nk__match(unsigned char *data, unsigned int length)$/;"	f	typeref:typename:NK_INTERN void
nk__next	lib/nuklear/nuklear.h	/^nk__next(struct nk_context *ctx, const struct nk_command *cmd)$/;"	f	typeref:typename:NK_API const struct nk_command *
nk__next	lib/nuklear/src/nuklear_context.c	/^nk__next(struct nk_context *ctx, const struct nk_command *cmd)$/;"	f	typeref:typename:NK_API const struct nk_command *
nk_add_value	lib/nuklear/nuklear.h	/^nk_add_value(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB nk_uint *
nk_add_value	lib/nuklear/src/nuklear_table.c	/^nk_add_value(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB nk_uint *
nk_adler32	lib/nuklear/nuklear.h	/^nk_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_adler32	lib/nuklear/src/nuklear_font.c	/^nk_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_alignof	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s
nk_alignof	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	s
nk_allegro5	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^static struct nk_allegro5 {$/;"	s
nk_allegro5_clipboard_copy	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN void
nk_allegro5_clipboard_paste	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:NK_INTERN void
nk_allegro5_font_create_from_file	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_create_from_file(const char *file_name, int font_size, int flags)$/;"	f	typeref:typename:NK_API NkAllegro5Font *
nk_allegro5_font_del	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_del(NkAllegro5Font *font)$/;"	f	typeref:typename:NK_API void
nk_allegro5_font_get_text_width	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f	typeref:typename:float
nk_allegro5_font_set_font	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_font_set_font(NkAllegro5Font *allegro5font)$/;"	f	typeref:typename:NK_API void
nk_allegro5_handle_event	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_handle_event(ALLEGRO_EVENT *ev)$/;"	f	typeref:typename:NK_API void
nk_allegro5_init	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_init(NkAllegro5Font *allegro5font, ALLEGRO_DISPLAY *dsp,$/;"	f	typeref:typename:NK_API struct nk_context *
nk_allegro5_render	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_allegro5_render()$/;"	f	typeref:typename:NK_API void
nk_allegro5_shutdown	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^void nk_allegro5_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_allocation_type	lib/nuklear/nuklear.h	/^enum nk_allocation_type {$/;"	g
nk_allocation_type	lib/nuklear/src/nuklear.h	/^enum nk_allocation_type {$/;"	g
nk_allocator	lib/nuklear/nuklear.h	/^struct nk_allocator {$/;"	s
nk_allocator	lib/nuklear/src/nuklear.h	/^struct nk_allocator {$/;"	s
nk_anti_aliasing	lib/nuklear/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	g
nk_anti_aliasing	lib/nuklear/src/nuklear.h	/^enum nk_anti_aliasing {NK_ANTI_ALIASING_OFF, NK_ANTI_ALIASING_ON};$/;"	g
nk_arg_flags	lib/nuklear/nuklear.h	/^    enum nk_arg_flags {$/;"	g	function:nk_vsnprintf
nk_arg_flags	lib/nuklear/src/nuklear_util.c	/^    enum nk_arg_flags {$/;"	g	function:nk_vsnprintf	file:
nk_arg_type	lib/nuklear/nuklear.h	/^    enum nk_arg_type {$/;"	g	function:nk_vsnprintf
nk_arg_type	lib/nuklear/src/nuklear_util.c	/^    enum nk_arg_type {$/;"	g	function:nk_vsnprintf	file:
nk_baked_font	lib/nuklear/nuklear.h	/^struct nk_baked_font {$/;"	s
nk_baked_font	lib/nuklear/src/nuklear.h	/^struct nk_baked_font {$/;"	s
nk_baker_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_baker_align = NK_ALIGNOF(struct nk_font_baker);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_begin	lib/nuklear/nuklear.h	/^nk_begin(struct nk_context *ctx, const char *title,$/;"	f	typeref:typename:NK_API int
nk_begin	lib/nuklear/src/nuklear_window.c	/^nk_begin(struct nk_context *ctx, const char *title,$/;"	f	typeref:typename:NK_API int
nk_begin_titled	lib/nuklear/nuklear.h	/^nk_begin_titled(struct nk_context *ctx, const char *name, const char *title,$/;"	f	typeref:typename:NK_API int
nk_begin_titled	lib/nuklear/src/nuklear_window.c	/^nk_begin_titled(struct nk_context *ctx, const char *name, const char *title,$/;"	f	typeref:typename:NK_API int
nk_black	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_black = {0,0,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_black	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_black = {0,0,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_blue	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_blue = {0,0,255,255};$/;"	v	typeref:typename:const struct nk_color
nk_blue	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_blue = {0,0,255,255};$/;"	v	typeref:typename:const struct nk_color
nk_buffer	lib/nuklear/nuklear.h	/^struct nk_buffer {$/;"	s
nk_buffer	lib/nuklear/src/nuklear.h	/^struct nk_buffer {$/;"	s
nk_buffer_align	lib/nuklear/nuklear.h	/^nk_buffer_align(void *unaligned,$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_align	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_align(void *unaligned,$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_alloc	lib/nuklear/nuklear.h	/^nk_buffer_alloc(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_alloc	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_alloc(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_allocation_type	lib/nuklear/nuklear.h	/^enum nk_buffer_allocation_type {$/;"	g
nk_buffer_allocation_type	lib/nuklear/src/nuklear.h	/^enum nk_buffer_allocation_type {$/;"	g
nk_buffer_clear	lib/nuklear/nuklear.h	/^nk_buffer_clear(struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_clear	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_clear(struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_free	lib/nuklear/nuklear.h	/^nk_buffer_free(struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_free	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_free(struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_info	lib/nuklear/nuklear.h	/^nk_buffer_info(struct nk_memory_status *s, struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_info	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_info(struct nk_memory_status *s, struct nk_buffer *b)$/;"	f	typeref:typename:NK_API void
nk_buffer_init	lib/nuklear/nuklear.h	/^nk_buffer_init(struct nk_buffer *b, const struct nk_allocator *a,$/;"	f	typeref:typename:NK_API void
nk_buffer_init	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_init(struct nk_buffer *b, const struct nk_allocator *a,$/;"	f	typeref:typename:NK_API void
nk_buffer_init_default	lib/nuklear/nuklear.h	/^nk_buffer_init_default(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API void
nk_buffer_init_default	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_init_default(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API void
nk_buffer_init_fixed	lib/nuklear/nuklear.h	/^nk_buffer_init_fixed(struct nk_buffer *b, void *m, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_buffer_init_fixed	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_init_fixed(struct nk_buffer *b, void *m, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_buffer_mark	lib/nuklear/nuklear.h	/^nk_buffer_mark(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f	typeref:typename:NK_API void
nk_buffer_mark	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_mark(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f	typeref:typename:NK_API void
nk_buffer_marker	lib/nuklear/nuklear.h	/^struct nk_buffer_marker {$/;"	s
nk_buffer_marker	lib/nuklear/src/nuklear.h	/^struct nk_buffer_marker {$/;"	s
nk_buffer_memory	lib/nuklear/nuklear.h	/^nk_buffer_memory(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API void *
nk_buffer_memory	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_memory(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API void *
nk_buffer_memory_const	lib/nuklear/nuklear.h	/^nk_buffer_memory_const(const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const void *
nk_buffer_memory_const	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_memory_const(const struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API const void *
nk_buffer_push	lib/nuklear/nuklear.h	/^nk_buffer_push(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f	typeref:typename:NK_API void
nk_buffer_push	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_push(struct nk_buffer *b, enum nk_buffer_allocation_type type,$/;"	f	typeref:typename:NK_API void
nk_buffer_realloc	lib/nuklear/nuklear.h	/^nk_buffer_realloc(struct nk_buffer *b, nk_size capacity, nk_size *size)$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_realloc	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_realloc(struct nk_buffer *b, nk_size capacity, nk_size *size)$/;"	f	typeref:typename:NK_LIB void *
nk_buffer_reset	lib/nuklear/nuklear.h	/^nk_buffer_reset(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f	typeref:typename:NK_API void
nk_buffer_reset	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_reset(struct nk_buffer *buffer, enum nk_buffer_allocation_type type)$/;"	f	typeref:typename:NK_API void
nk_buffer_total	lib/nuklear/nuklear.h	/^nk_buffer_total(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API nk_size
nk_buffer_total	lib/nuklear/src/nuklear_buffer.c	/^nk_buffer_total(struct nk_buffer *buffer)$/;"	f	typeref:typename:NK_API nk_size
nk_build	lib/nuklear/nuklear.h	/^nk_build(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_build	lib/nuklear/src/nuklear_context.c	/^nk_build(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_build_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_build_align = NK_ALIGNOF(struct nk_font_bake_data);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_button_behavior	lib/nuklear/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	g
nk_button_behavior	lib/nuklear/nuklear.h	/^nk_button_behavior(nk_flags *state, struct nk_rect r,$/;"	f	typeref:typename:NK_LIB int
nk_button_behavior	lib/nuklear/src/nuklear.h	/^enum nk_button_behavior {NK_BUTTON_DEFAULT, NK_BUTTON_REPEATER};$/;"	g
nk_button_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_behavior(nk_flags *state, struct nk_rect r,$/;"	f	typeref:typename:NK_LIB int
nk_button_color	lib/nuklear/nuklear.h	/^nk_button_color(struct nk_context *ctx, struct nk_color color)$/;"	f	typeref:typename:NK_API int
nk_button_color	lib/nuklear/src/nuklear_button.c	/^nk_button_color(struct nk_context *ctx, struct nk_color color)$/;"	f	typeref:typename:NK_API int
nk_button_image	lib/nuklear/nuklear.h	/^nk_button_image(struct nk_context *ctx, struct nk_image img)$/;"	f	typeref:typename:NK_API int
nk_button_image	lib/nuklear/src/nuklear_button.c	/^nk_button_image(struct nk_context *ctx, struct nk_image img)$/;"	f	typeref:typename:NK_API int
nk_button_image_label	lib/nuklear/nuklear.h	/^NK_API int nk_button_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_button_image_label	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_button_image_label_styled	lib/nuklear/nuklear.h	/^NK_API int nk_button_image_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_image_label_styled	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_image_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_image_styled	lib/nuklear/nuklear.h	/^nk_button_image_styled(struct nk_context *ctx, const struct nk_style_button *style,$/;"	f	typeref:typename:NK_API int
nk_button_image_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_image_styled(struct nk_context *ctx, const struct nk_style_button *style,$/;"	f	typeref:typename:NK_API int
nk_button_image_text	lib/nuklear/nuklear.h	/^nk_button_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_button_image_text	lib/nuklear/src/nuklear_button.c	/^nk_button_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_button_image_text_styled	lib/nuklear/nuklear.h	/^nk_button_image_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_image_text_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_image_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_label	lib/nuklear/nuklear.h	/^NK_API int nk_button_label(struct nk_context *ctx, const char *title)$/;"	f	typeref:typename:NK_API int
nk_button_label	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_label(struct nk_context *ctx, const char *title)$/;"	f	typeref:typename:NK_API int
nk_button_label_styled	lib/nuklear/nuklear.h	/^NK_API int nk_button_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_label_styled	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_pop_behavior	lib/nuklear/nuklear.h	/^nk_button_pop_behavior(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_button_pop_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_pop_behavior(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_button_push_behavior	lib/nuklear/nuklear.h	/^nk_button_push_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f	typeref:typename:NK_API int
nk_button_push_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_push_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f	typeref:typename:NK_API int
nk_button_set_behavior	lib/nuklear/nuklear.h	/^nk_button_set_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f	typeref:typename:NK_API void
nk_button_set_behavior	lib/nuklear/src/nuklear_button.c	/^nk_button_set_behavior(struct nk_context *ctx, enum nk_button_behavior behavior)$/;"	f	typeref:typename:NK_API void
nk_button_symbol	lib/nuklear/nuklear.h	/^nk_button_symbol(struct nk_context *ctx, enum nk_symbol_type symbol)$/;"	f	typeref:typename:NK_API int
nk_button_symbol	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol(struct nk_context *ctx, enum nk_symbol_type symbol)$/;"	f	typeref:typename:NK_API int
nk_button_symbol_label	lib/nuklear/nuklear.h	/^NK_API int nk_button_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_label	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_label_styled	lib/nuklear/nuklear.h	/^NK_API int nk_button_symbol_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_label_styled	lib/nuklear/src/nuklear_button.c	/^NK_API int nk_button_symbol_label_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_styled	lib/nuklear/nuklear.h	/^nk_button_symbol_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_text	lib/nuklear/nuklear.h	/^nk_button_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_text	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_text_styled	lib/nuklear/nuklear.h	/^nk_button_symbol_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_symbol_text_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_symbol_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_text	lib/nuklear/nuklear.h	/^nk_button_text(struct nk_context *ctx, const char *title, int len)$/;"	f	typeref:typename:NK_API int
nk_button_text	lib/nuklear/src/nuklear_button.c	/^nk_button_text(struct nk_context *ctx, const char *title, int len)$/;"	f	typeref:typename:NK_API int
nk_button_text_styled	lib/nuklear/nuklear.h	/^nk_button_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_button_text_styled	lib/nuklear/src/nuklear_button.c	/^nk_button_text_styled(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_buttons	lib/nuklear/nuklear.h	/^enum nk_buttons {$/;"	g
nk_buttons	lib/nuklear/src/nuklear.h	/^enum nk_buttons {$/;"	g
nk_byte	lib/nuklear/nuklear.h	/^typedef NK_UINT8 nk_byte;$/;"	t	typeref:typename:NK_UINT8
nk_byte	lib/nuklear/src/nuklear.h	/^typedef NK_UINT8 nk_byte;$/;"	t	typeref:typename:NK_UINT8
nk_canvas	lib/nuklear/example/canvas.c	/^struct nk_canvas {$/;"	s	file:
nk_char	lib/nuklear/nuklear.h	/^typedef NK_INT8 nk_char;$/;"	t	typeref:typename:NK_INT8
nk_char	lib/nuklear/src/nuklear.h	/^typedef NK_INT8 nk_char;$/;"	t	typeref:typename:NK_INT8
nk_char_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_char_align = NK_ALIGNOF(struct nk_tt_packedchar);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_chart	lib/nuklear/nuklear.h	/^struct nk_chart {$/;"	s
nk_chart	lib/nuklear/src/nuklear.h	/^struct nk_chart {$/;"	s
nk_chart_add_slot	lib/nuklear/nuklear.h	/^nk_chart_add_slot(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API void
nk_chart_add_slot	lib/nuklear/src/nuklear_chart.c	/^nk_chart_add_slot(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API void
nk_chart_add_slot_colored	lib/nuklear/nuklear.h	/^nk_chart_add_slot_colored(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API void
nk_chart_add_slot_colored	lib/nuklear/src/nuklear_chart.c	/^nk_chart_add_slot_colored(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API void
nk_chart_begin	lib/nuklear/nuklear.h	/^nk_chart_begin(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API int
nk_chart_begin	lib/nuklear/src/nuklear_chart.c	/^nk_chart_begin(struct nk_context *ctx, const enum nk_chart_type type,$/;"	f	typeref:typename:NK_API int
nk_chart_begin_colored	lib/nuklear/nuklear.h	/^nk_chart_begin_colored(struct nk_context *ctx, enum nk_chart_type type,$/;"	f	typeref:typename:NK_API int
nk_chart_begin_colored	lib/nuklear/src/nuklear_chart.c	/^nk_chart_begin_colored(struct nk_context *ctx, enum nk_chart_type type,$/;"	f	typeref:typename:NK_API int
nk_chart_end	lib/nuklear/nuklear.h	/^nk_chart_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_chart_end	lib/nuklear/src/nuklear_chart.c	/^nk_chart_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_chart_event	lib/nuklear/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	g
nk_chart_event	lib/nuklear/src/nuklear.h	/^enum nk_chart_event     {NK_CHART_HOVERING = 0x01, NK_CHART_CLICKED = 0x02};$/;"	g
nk_chart_push	lib/nuklear/nuklear.h	/^nk_chart_push(struct nk_context *ctx, float value)$/;"	f	typeref:typename:NK_API nk_flags
nk_chart_push	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push(struct nk_context *ctx, float value)$/;"	f	typeref:typename:NK_API nk_flags
nk_chart_push_column	lib/nuklear/nuklear.h	/^nk_chart_push_column(const struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN nk_flags
nk_chart_push_column	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push_column(const struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN nk_flags
nk_chart_push_line	lib/nuklear/nuklear.h	/^nk_chart_push_line(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN nk_flags
nk_chart_push_line	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push_line(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN nk_flags
nk_chart_push_slot	lib/nuklear/nuklear.h	/^nk_chart_push_slot(struct nk_context *ctx, float value, int slot)$/;"	f	typeref:typename:NK_API nk_flags
nk_chart_push_slot	lib/nuklear/src/nuklear_chart.c	/^nk_chart_push_slot(struct nk_context *ctx, float value, int slot)$/;"	f	typeref:typename:NK_API nk_flags
nk_chart_slot	lib/nuklear/nuklear.h	/^struct nk_chart_slot {$/;"	s
nk_chart_slot	lib/nuklear/src/nuklear.h	/^struct nk_chart_slot {$/;"	s
nk_chart_type	lib/nuklear/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	g
nk_chart_type	lib/nuklear/src/nuklear.h	/^enum nk_chart_type      {NK_CHART_LINES, NK_CHART_COLUMN, NK_CHART_MAX};$/;"	g
nk_check_flags_label	lib/nuklear/nuklear.h	/^NK_API unsigned int nk_check_flags_label(struct nk_context *ctx, const char *label,$/;"	f	typeref:typename:NK_API unsigned int
nk_check_flags_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API unsigned int nk_check_flags_label(struct nk_context *ctx, const char *label,$/;"	f	typeref:typename:NK_API unsigned int
nk_check_flags_text	lib/nuklear/nuklear.h	/^nk_check_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API unsigned int
nk_check_flags_text	lib/nuklear/src/nuklear_toggle.c	/^nk_check_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API unsigned int
nk_check_label	lib/nuklear/nuklear.h	/^NK_API int nk_check_label(struct nk_context *ctx, const char *label, int active)$/;"	f	typeref:typename:NK_API int
nk_check_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API int nk_check_label(struct nk_context *ctx, const char *label, int active)$/;"	f	typeref:typename:NK_API int
nk_check_text	lib/nuklear/nuklear.h	/^nk_check_text(struct nk_context *ctx, const char *text, int len, int active)$/;"	f	typeref:typename:NK_API int
nk_check_text	lib/nuklear/src/nuklear_toggle.c	/^nk_check_text(struct nk_context *ctx, const char *text, int len, int active)$/;"	f	typeref:typename:NK_API int
nk_checkbox_flags_label	lib/nuklear/nuklear.h	/^NK_API int nk_checkbox_flags_label(struct nk_context *ctx, const char *label,$/;"	f	typeref:typename:NK_API int
nk_checkbox_flags_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API int nk_checkbox_flags_label(struct nk_context *ctx, const char *label,$/;"	f	typeref:typename:NK_API int
nk_checkbox_flags_text	lib/nuklear/nuklear.h	/^nk_checkbox_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API int
nk_checkbox_flags_text	lib/nuklear/src/nuklear_toggle.c	/^nk_checkbox_flags_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API int
nk_checkbox_label	lib/nuklear/nuklear.h	/^NK_API int nk_checkbox_label(struct nk_context *ctx, const char *label, int *active)$/;"	f	typeref:typename:NK_API int
nk_checkbox_label	lib/nuklear/src/nuklear_toggle.c	/^NK_API int nk_checkbox_label(struct nk_context *ctx, const char *label, int *active)$/;"	f	typeref:typename:NK_API int
nk_checkbox_text	lib/nuklear/nuklear.h	/^nk_checkbox_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f	typeref:typename:NK_API int
nk_checkbox_text	lib/nuklear/src/nuklear_toggle.c	/^nk_checkbox_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f	typeref:typename:NK_API int
nk_clear	lib/nuklear/nuklear.h	/^nk_clear(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_clear	lib/nuklear/src/nuklear_context.c	/^nk_clear(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_clipboard	lib/nuklear/nuklear.h	/^struct nk_clipboard {$/;"	s
nk_clipboard	lib/nuklear/src/nuklear.h	/^struct nk_clipboard {$/;"	s
nk_collapse_states	lib/nuklear/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	g
nk_collapse_states	lib/nuklear/src/nuklear.h	/^enum nk_collapse_states {NK_MINIMIZED = nk_false, NK_MAXIMIZED = nk_true};$/;"	g
nk_color	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	s
nk_color	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	s
nk_color_cf	lib/nuklear/nuklear.h	/^nk_color_cf(struct nk_color in)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_color_cf	lib/nuklear/src/nuklear_color.c	/^nk_color_cf(struct nk_color in)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_color_d	lib/nuklear/nuklear.h	/^nk_color_d(double *r, double *g, double *b, double *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_d	lib/nuklear/src/nuklear_color.c	/^nk_color_d(double *r, double *g, double *b, double *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_dv	lib/nuklear/nuklear.h	/^nk_color_dv(double *c, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_dv	lib/nuklear/src/nuklear_color.c	/^nk_color_dv(double *c, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_f	lib/nuklear/nuklear.h	/^nk_color_f(float *r, float *g, float *b, float *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_f	lib/nuklear/src/nuklear_color.c	/^nk_color_f(float *r, float *g, float *b, float *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_format	lib/nuklear/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	g
nk_color_format	lib/nuklear/src/nuklear.h	/^enum nk_color_format    {NK_RGB, NK_RGBA};$/;"	g
nk_color_from_byte	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_color_from_byte(const nk_byte *c)$/;"	f	typeref:typename:NK_INTERN unsigned long
nk_color_from_byte	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_color_from_byte(const nk_byte *c)$/;"	f	typeref:typename:unsigned int
nk_color_fv	lib/nuklear/nuklear.h	/^nk_color_fv(float *c, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_fv	lib/nuklear/src/nuklear_color.c	/^nk_color_fv(float *c, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hex_rgb	lib/nuklear/nuklear.h	/^nk_color_hex_rgb(char *output, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_color_hex_rgb	lib/nuklear/src/nuklear_color.c	/^nk_color_hex_rgb(char *output, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_color_hex_rgba	lib/nuklear/nuklear.h	/^nk_color_hex_rgba(char *output, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_color_hex_rgba	lib/nuklear/src/nuklear_color.c	/^nk_color_hex_rgba(char *output, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_b	lib/nuklear/nuklear.h	/^nk_color_hsv_b(nk_byte *out_h, nk_byte *out_s, nk_byte *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_b	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_b(nk_byte *out_h, nk_byte *out_s, nk_byte *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_bv	lib/nuklear/nuklear.h	/^nk_color_hsv_bv(nk_byte *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_bv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_bv(nk_byte *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_f	lib/nuklear/nuklear.h	/^nk_color_hsv_f(float *out_h, float *out_s, float *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_f	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_f(float *out_h, float *out_s, float *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_fv	lib/nuklear/nuklear.h	/^nk_color_hsv_fv(float *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_fv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_fv(float *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_i	lib/nuklear/nuklear.h	/^nk_color_hsv_i(int *out_h, int *out_s, int *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_i	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_i(int *out_h, int *out_s, int *out_v, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_iv	lib/nuklear/nuklear.h	/^nk_color_hsv_iv(int *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsv_iv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsv_iv(int *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_b	lib/nuklear/nuklear.h	/^nk_color_hsva_b(nk_byte *h, nk_byte *s, nk_byte *v, nk_byte *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_b	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_b(nk_byte *h, nk_byte *s, nk_byte *v, nk_byte *a, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_bv	lib/nuklear/nuklear.h	/^nk_color_hsva_bv(nk_byte *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_bv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_bv(nk_byte *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_f	lib/nuklear/nuklear.h	/^nk_color_hsva_f(float *out_h, float *out_s,$/;"	f	typeref:typename:NK_API void
nk_color_hsva_f	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_f(float *out_h, float *out_s,$/;"	f	typeref:typename:NK_API void
nk_color_hsva_fv	lib/nuklear/nuklear.h	/^nk_color_hsva_fv(float *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_fv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_fv(float *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_i	lib/nuklear/nuklear.h	/^nk_color_hsva_i(int *out_h, int *out_s, int *out_v,$/;"	f	typeref:typename:NK_API void
nk_color_hsva_i	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_i(int *out_h, int *out_s, int *out_v,$/;"	f	typeref:typename:NK_API void
nk_color_hsva_iv	lib/nuklear/nuklear.h	/^nk_color_hsva_iv(int *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_hsva_iv	lib/nuklear/src/nuklear_color.c	/^nk_color_hsva_iv(int *out, struct nk_color in)$/;"	f	typeref:typename:NK_API void
nk_color_names	lib/nuklear/nuklear.h	/^NK_GLOBAL const char *nk_color_names[NK_COLOR_COUNT] = {$/;"	v	typeref:typename:NK_GLOBAL const char * []
nk_color_names	lib/nuklear/src/nuklear_style.c	/^NK_GLOBAL const char *nk_color_names[NK_COLOR_COUNT] = {$/;"	v	typeref:typename:NK_GLOBAL const char * []
nk_color_pick	lib/nuklear/nuklear.h	/^nk_color_pick(struct nk_context * ctx, struct nk_colorf *color,$/;"	f	typeref:typename:NK_API int
nk_color_pick	lib/nuklear/src/nuklear_color_picker.c	/^nk_color_pick(struct nk_context * ctx, struct nk_colorf *color,$/;"	f	typeref:typename:NK_API int
nk_color_picker	lib/nuklear/nuklear.h	/^nk_color_picker(struct nk_context *ctx, struct nk_colorf color,$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_color_picker	lib/nuklear/src/nuklear_color_picker.c	/^nk_color_picker(struct nk_context *ctx, struct nk_colorf color,$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_color_picker_behavior	lib/nuklear/nuklear.h	/^nk_color_picker_behavior(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_color_picker_behavior	lib/nuklear/src/nuklear_color_picker.c	/^nk_color_picker_behavior(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_color_to_allegro_color	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^nk_color_to_allegro_color(struct nk_color color)$/;"	f	typeref:typename:ALLEGRO_COLOR
nk_color_u32	lib/nuklear/nuklear.h	/^nk_color_u32(struct nk_color in)$/;"	f	typeref:typename:NK_API nk_uint
nk_color_u32	lib/nuklear/src/nuklear_color.c	/^nk_color_u32(struct nk_color in)$/;"	f	typeref:typename:NK_API nk_uint
nk_colorf	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	s
nk_colorf	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	s
nk_colorf_hsva_f	lib/nuklear/nuklear.h	/^nk_colorf_hsva_f(float *out_h, float *out_s,$/;"	f	typeref:typename:NK_API void
nk_colorf_hsva_f	lib/nuklear/src/nuklear_color.c	/^nk_colorf_hsva_f(float *out_h, float *out_s,$/;"	f	typeref:typename:NK_API void
nk_colorf_hsva_fv	lib/nuklear/nuklear.h	/^nk_colorf_hsva_fv(float *hsva, struct nk_colorf in)$/;"	f	typeref:typename:NK_API void
nk_colorf_hsva_fv	lib/nuklear/src/nuklear_color.c	/^nk_colorf_hsva_fv(float *hsva, struct nk_colorf in)$/;"	f	typeref:typename:NK_API void
nk_combo	lib/nuklear/nuklear.h	/^nk_combo(struct nk_context *ctx, const char **items, int count,$/;"	f	typeref:typename:NK_API int
nk_combo	lib/nuklear/src/nuklear_combo.c	/^nk_combo(struct nk_context *ctx, const char **items, int count,$/;"	f	typeref:typename:NK_API int
nk_combo_begin	lib/nuklear/nuklear.h	/^nk_combo_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN int
nk_combo_begin	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN int
nk_combo_begin_color	lib/nuklear/nuklear.h	/^nk_combo_begin_color(struct nk_context *ctx, struct nk_color color, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_color	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_color(struct nk_context *ctx, struct nk_color color, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image	lib/nuklear/nuklear.h	/^nk_combo_begin_image(struct nk_context *ctx, struct nk_image img, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_image(struct nk_context *ctx, struct nk_image img, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image_label	lib/nuklear/nuklear.h	/^nk_combo_begin_image_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_image_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image_text	lib/nuklear/nuklear.h	/^nk_combo_begin_image_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_image_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_image_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_label	lib/nuklear/nuklear.h	/^nk_combo_begin_label(struct nk_context *ctx, const char *selected, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_label(struct nk_context *ctx, const char *selected, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol	lib/nuklear/nuklear.h	/^nk_combo_begin_symbol(struct nk_context *ctx, enum nk_symbol_type symbol, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_symbol(struct nk_context *ctx, enum nk_symbol_type symbol, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol_label	lib/nuklear/nuklear.h	/^nk_combo_begin_symbol_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_symbol_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol_text	lib/nuklear/nuklear.h	/^nk_combo_begin_symbol_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_symbol_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_symbol_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_text	lib/nuklear/nuklear.h	/^nk_combo_begin_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_begin_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_begin_text(struct nk_context *ctx, const char *selected, int len,$/;"	f	typeref:typename:NK_API int
nk_combo_callback	lib/nuklear/nuklear.h	/^nk_combo_callback(struct nk_context *ctx, void(*item_getter)(void*, int, const char**),$/;"	f	typeref:typename:NK_API int
nk_combo_callback	lib/nuklear/src/nuklear_combo.c	/^nk_combo_callback(struct nk_context *ctx, void(*item_getter)(void*, int, const char**),$/;"	f	typeref:typename:NK_API int
nk_combo_close	lib/nuklear/nuklear.h	/^NK_API void nk_combo_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_combo_close	lib/nuklear/src/nuklear_combo.c	/^NK_API void nk_combo_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_combo_end	lib/nuklear/nuklear.h	/^NK_API void nk_combo_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_combo_end	lib/nuklear/src/nuklear_combo.c	/^NK_API void nk_combo_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_combo_item_image_label	lib/nuklear/nuklear.h	/^nk_combo_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_combo_item_image_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_combo_item_image_text	lib/nuklear/nuklear.h	/^nk_combo_item_image_text(struct nk_context *ctx, struct nk_image img, const char *text,$/;"	f	typeref:typename:NK_API int
nk_combo_item_image_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_image_text(struct nk_context *ctx, struct nk_image img, const char *text,$/;"	f	typeref:typename:NK_API int
nk_combo_item_label	lib/nuklear/nuklear.h	/^nk_combo_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_combo_item_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_combo_item_symbol_label	lib/nuklear/nuklear.h	/^nk_combo_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_combo_item_symbol_label	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_combo_item_symbol_text	lib/nuklear/nuklear.h	/^nk_combo_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_combo_item_symbol_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_combo_item_text	lib/nuklear/nuklear.h	/^nk_combo_item_text(struct nk_context *ctx, const char *text, int len,nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_combo_item_text	lib/nuklear/src/nuklear_combo.c	/^nk_combo_item_text(struct nk_context *ctx, const char *text, int len,nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_combo_separator	lib/nuklear/nuklear.h	/^nk_combo_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f	typeref:typename:NK_API int
nk_combo_separator	lib/nuklear/src/nuklear_combo.c	/^nk_combo_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f	typeref:typename:NK_API int
nk_combo_string	lib/nuklear/nuklear.h	/^nk_combo_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f	typeref:typename:NK_API int
nk_combo_string	lib/nuklear/src/nuklear_combo.c	/^nk_combo_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f	typeref:typename:NK_API int
nk_combobox	lib/nuklear/nuklear.h	/^nk_combobox(struct nk_context *ctx, const char **items, int count,$/;"	f	typeref:typename:NK_API void
nk_combobox	lib/nuklear/src/nuklear_combo.c	/^nk_combobox(struct nk_context *ctx, const char **items, int count,$/;"	f	typeref:typename:NK_API void
nk_combobox_callback	lib/nuklear/nuklear.h	/^nk_combobox_callback(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_combobox_callback	lib/nuklear/src/nuklear_combo.c	/^nk_combobox_callback(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_combobox_separator	lib/nuklear/nuklear.h	/^nk_combobox_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f	typeref:typename:NK_API void
nk_combobox_separator	lib/nuklear/src/nuklear_combo.c	/^nk_combobox_separator(struct nk_context *ctx, const char *items_separated_by_separator,$/;"	f	typeref:typename:NK_API void
nk_combobox_string	lib/nuklear/nuklear.h	/^nk_combobox_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f	typeref:typename:NK_API void
nk_combobox_string	lib/nuklear/src/nuklear_combo.c	/^nk_combobox_string(struct nk_context *ctx, const char *items_separated_by_zeros,$/;"	f	typeref:typename:NK_API void
nk_command	lib/nuklear/nuklear.h	/^struct nk_command {$/;"	s
nk_command	lib/nuklear/src/nuklear.h	/^struct nk_command {$/;"	s
nk_command_arc	lib/nuklear/nuklear.h	/^struct nk_command_arc {$/;"	s
nk_command_arc	lib/nuklear/src/nuklear.h	/^struct nk_command_arc {$/;"	s
nk_command_arc_filled	lib/nuklear/nuklear.h	/^struct nk_command_arc_filled {$/;"	s
nk_command_arc_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_arc_filled {$/;"	s
nk_command_buffer	lib/nuklear/nuklear.h	/^struct nk_command_buffer {$/;"	s
nk_command_buffer	lib/nuklear/src/nuklear.h	/^struct nk_command_buffer {$/;"	s
nk_command_buffer_init	lib/nuklear/nuklear.h	/^nk_command_buffer_init(struct nk_command_buffer *cb,$/;"	f	typeref:typename:NK_LIB void
nk_command_buffer_init	lib/nuklear/src/nuklear_draw.c	/^nk_command_buffer_init(struct nk_command_buffer *cb,$/;"	f	typeref:typename:NK_LIB void
nk_command_buffer_push	lib/nuklear/nuklear.h	/^nk_command_buffer_push(struct nk_command_buffer* b,$/;"	f	typeref:typename:NK_LIB void *
nk_command_buffer_push	lib/nuklear/src/nuklear_draw.c	/^nk_command_buffer_push(struct nk_command_buffer* b,$/;"	f	typeref:typename:NK_LIB void *
nk_command_buffer_reset	lib/nuklear/nuklear.h	/^nk_command_buffer_reset(struct nk_command_buffer *b)$/;"	f	typeref:typename:NK_LIB void
nk_command_buffer_reset	lib/nuklear/src/nuklear_draw.c	/^nk_command_buffer_reset(struct nk_command_buffer *b)$/;"	f	typeref:typename:NK_LIB void
nk_command_circle	lib/nuklear/nuklear.h	/^struct nk_command_circle {$/;"	s
nk_command_circle	lib/nuklear/src/nuklear.h	/^struct nk_command_circle {$/;"	s
nk_command_circle_filled	lib/nuklear/nuklear.h	/^struct nk_command_circle_filled {$/;"	s
nk_command_circle_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_circle_filled {$/;"	s
nk_command_clipping	lib/nuklear/nuklear.h	/^enum nk_command_clipping {$/;"	g
nk_command_clipping	lib/nuklear/src/nuklear.h	/^enum nk_command_clipping {$/;"	g
nk_command_curve	lib/nuklear/nuklear.h	/^struct nk_command_curve {$/;"	s
nk_command_curve	lib/nuklear/src/nuklear.h	/^struct nk_command_curve {$/;"	s
nk_command_custom	lib/nuklear/nuklear.h	/^struct nk_command_custom {$/;"	s
nk_command_custom	lib/nuklear/src/nuklear.h	/^struct nk_command_custom {$/;"	s
nk_command_custom_callback	lib/nuklear/nuklear.h	/^typedef void (*nk_command_custom_callback)(void *canvas, short x,short y,$/;"	t	typeref:typename:void (*)(void * canvas,short x,short y,unsigned short w,unsigned short h,nk_handle callback_data)
nk_command_custom_callback	lib/nuklear/src/nuklear.h	/^typedef void (*nk_command_custom_callback)(void *canvas, short x,short y,$/;"	t	typeref:typename:void (*)(void * canvas,short x,short y,unsigned short w,unsigned short h,nk_handle callback_data)
nk_command_image	lib/nuklear/nuklear.h	/^struct nk_command_image {$/;"	s
nk_command_image	lib/nuklear/src/nuklear.h	/^struct nk_command_image {$/;"	s
nk_command_line	lib/nuklear/nuklear.h	/^struct nk_command_line {$/;"	s
nk_command_line	lib/nuklear/src/nuklear.h	/^struct nk_command_line {$/;"	s
nk_command_polygon	lib/nuklear/nuklear.h	/^struct nk_command_polygon {$/;"	s
nk_command_polygon	lib/nuklear/src/nuklear.h	/^struct nk_command_polygon {$/;"	s
nk_command_polygon_filled	lib/nuklear/nuklear.h	/^struct nk_command_polygon_filled {$/;"	s
nk_command_polygon_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_polygon_filled {$/;"	s
nk_command_polyline	lib/nuklear/nuklear.h	/^struct nk_command_polyline {$/;"	s
nk_command_polyline	lib/nuklear/src/nuklear.h	/^struct nk_command_polyline {$/;"	s
nk_command_rect	lib/nuklear/nuklear.h	/^struct nk_command_rect {$/;"	s
nk_command_rect	lib/nuklear/src/nuklear.h	/^struct nk_command_rect {$/;"	s
nk_command_rect_filled	lib/nuklear/nuklear.h	/^struct nk_command_rect_filled {$/;"	s
nk_command_rect_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_rect_filled {$/;"	s
nk_command_rect_multi_color	lib/nuklear/nuklear.h	/^struct nk_command_rect_multi_color {$/;"	s
nk_command_rect_multi_color	lib/nuklear/src/nuklear.h	/^struct nk_command_rect_multi_color {$/;"	s
nk_command_scissor	lib/nuklear/nuklear.h	/^struct nk_command_scissor {$/;"	s
nk_command_scissor	lib/nuklear/src/nuklear.h	/^struct nk_command_scissor {$/;"	s
nk_command_text	lib/nuklear/nuklear.h	/^struct nk_command_text {$/;"	s
nk_command_text	lib/nuklear/src/nuklear.h	/^struct nk_command_text {$/;"	s
nk_command_triangle	lib/nuklear/nuklear.h	/^struct nk_command_triangle {$/;"	s
nk_command_triangle	lib/nuklear/src/nuklear.h	/^struct nk_command_triangle {$/;"	s
nk_command_triangle_filled	lib/nuklear/nuklear.h	/^struct nk_command_triangle_filled {$/;"	s
nk_command_triangle_filled	lib/nuklear/src/nuklear.h	/^struct nk_command_triangle_filled {$/;"	s
nk_command_type	lib/nuklear/nuklear.h	/^enum nk_command_type {$/;"	g
nk_command_type	lib/nuklear/src/nuklear.h	/^enum nk_command_type {$/;"	g
nk_configuration_stacks	lib/nuklear/nuklear.h	/^struct nk_configuration_stacks {$/;"	s
nk_configuration_stacks	lib/nuklear/src/nuklear.h	/^struct nk_configuration_stacks {$/;"	s
nk_context	lib/nuklear/nuklear.h	/^struct nk_context {$/;"	s
nk_context	lib/nuklear/src/nuklear.h	/^struct nk_context {$/;"	s
nk_contextual_begin	lib/nuklear/nuklear.h	/^nk_contextual_begin(struct nk_context *ctx, nk_flags flags, struct nk_vec2 size,$/;"	f	typeref:typename:NK_API int
nk_contextual_begin	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_begin(struct nk_context *ctx, nk_flags flags, struct nk_vec2 size,$/;"	f	typeref:typename:NK_API int
nk_contextual_close	lib/nuklear/nuklear.h	/^nk_contextual_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_contextual_close	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_contextual_end	lib/nuklear/nuklear.h	/^nk_contextual_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_contextual_end	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_contextual_item_image_label	lib/nuklear/nuklear.h	/^nk_contextual_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_image_label	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_image_text	lib/nuklear/nuklear.h	/^nk_contextual_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_image_text	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_label	lib/nuklear/nuklear.h	/^nk_contextual_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_contextual_item_label	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_contextual_item_symbol_label	lib/nuklear/nuklear.h	/^nk_contextual_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_symbol_label	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_symbol_text	lib/nuklear/nuklear.h	/^nk_contextual_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_symbol_text	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type symbol,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_text	lib/nuklear/nuklear.h	/^nk_contextual_item_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API int
nk_contextual_item_text	lib/nuklear/src/nuklear_contextual.c	/^nk_contextual_item_text(struct nk_context *ctx, const char *text, int len,$/;"	f	typeref:typename:NK_API int
nk_convert	lib/nuklear/nuklear.h	/^nk_convert(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f	typeref:typename:NK_API nk_flags
nk_convert	lib/nuklear/src/nuklear_vertex.c	/^nk_convert(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f	typeref:typename:NK_API nk_flags
nk_convert_config	lib/nuklear/nuklear.h	/^struct nk_convert_config {$/;"	s
nk_convert_config	lib/nuklear/src/nuklear.h	/^struct nk_convert_config {$/;"	s
nk_convert_result	lib/nuklear/nuklear.h	/^enum nk_convert_result {$/;"	g
nk_convert_result	lib/nuklear/src/nuklear.h	/^enum nk_convert_result {$/;"	g
nk_cos	lib/nuklear/nuklear.h	/^nk_cos(float x)$/;"	f	typeref:typename:NK_LIB float
nk_cos	lib/nuklear/src/nuklear_math.c	/^nk_cos(float x)$/;"	f	typeref:typename:NK_LIB float
nk_create_image	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_create_image(struct nk_image * image, const char * frame_buffer, const int width, const int h/;"	f	typeref:typename:void
nk_create_page_element	lib/nuklear/nuklear.h	/^nk_create_page_element(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB struct nk_page_element *
nk_create_page_element	lib/nuklear/src/nuklear_page_element.c	/^nk_create_page_element(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB struct nk_page_element *
nk_create_panel	lib/nuklear/nuklear.h	/^nk_create_panel(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void *
nk_create_panel	lib/nuklear/src/nuklear_panel.c	/^nk_create_panel(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void *
nk_create_table	lib/nuklear/nuklear.h	/^nk_create_table(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB struct nk_table *
nk_create_table	lib/nuklear/src/nuklear_table.c	/^nk_create_table(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB struct nk_table *
nk_create_window	lib/nuklear/nuklear.h	/^nk_create_window(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void *
nk_create_window	lib/nuklear/src/nuklear_window.c	/^nk_create_window(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void *
nk_cursor	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	s
nk_cursor	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	s
nk_custom_cursor_data	lib/nuklear/nuklear.h	/^NK_GLOBAL const char nk_custom_cursor_data[NK_CURSOR_DATA_W * NK_CURSOR_DATA_H + 1] =$/;"	v	typeref:typename:NK_GLOBAL const char[]
nk_custom_cursor_data	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const char nk_custom_cursor_data[NK_CURSOR_DATA_W * NK_CURSOR_DATA_H + 1] =$/;"	v	typeref:typename:NK_GLOBAL const char[]
nk_d3d11_clipbard_copy	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:void
nk_d3d11_clipbard_paste	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:void
nk_d3d11_font_stash_begin	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_d3d11_font_stash_end	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_d3d11_get_projection_matrix	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_get_projection_matrix(int width, int height, float *result)$/;"	f	typeref:typename:void
nk_d3d11_handle_event	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:NK_API int
nk_d3d11_init	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_init(ID3D11Device *device, int width, int height, unsigned int max_vertex_buffer, unsig/;"	f	typeref:typename:NK_API struct nk_context *
nk_d3d11_pixel_shader	lib/nuklear/demo/d3d11/nuklear_d3d11_pixel_shader.h	/^const BYTE nk_d3d11_pixel_shader[] =$/;"	v	typeref:typename:const BYTE[]
nk_d3d11_render	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_render(ID3D11DeviceContext *context, enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_d3d11_resize	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^nk_d3d11_resize(ID3D11DeviceContext *context, int width, int height)$/;"	f	typeref:typename:NK_API void
nk_d3d11_shutdown	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^void nk_d3d11_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_d3d11_vertex	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^struct nk_d3d11_vertex {$/;"	s
nk_d3d11_vertex_shader	lib/nuklear/demo/d3d11/nuklear_d3d11_vertex_shader.h	/^const BYTE nk_d3d11_vertex_shader[] =$/;"	v	typeref:typename:const BYTE[]
nk_d3d9_clipboard_copy	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_clipboard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:void
nk_d3d9_clipboard_paste	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_clipboard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:void
nk_d3d9_create_font_texture	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_create_font_texture()$/;"	f	typeref:typename:void
nk_d3d9_create_state	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_create_state()$/;"	f	typeref:typename:NK_API void
nk_d3d9_font_stash_begin	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_d3d9_font_stash_end	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_d3d9_get_projection_matrix	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_get_projection_matrix(int width, int height, float *result)$/;"	f	typeref:typename:void
nk_d3d9_handle_event	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:NK_API int
nk_d3d9_init	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_init(IDirect3DDevice9 *device, int width, int height)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_d3d9_release	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_release(void)$/;"	f	typeref:typename:NK_API void
nk_d3d9_render	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_render(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_d3d9_resize	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^nk_d3d9_resize(int width, int height)$/;"	f	typeref:typename:NK_API void
nk_d3d9_shutdown	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^void nk_d3d9_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_d3d9_vertex	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^struct nk_d3d9_vertex {$/;"	s
nk_decode_85	lib/nuklear/nuklear.h	/^nk_decode_85(unsigned char* dst, const unsigned char* src)$/;"	f	typeref:typename:NK_INTERN void
nk_decode_85	lib/nuklear/src/nuklear_font.c	/^nk_decode_85(unsigned char* dst, const unsigned char* src)$/;"	f	typeref:typename:NK_INTERN void
nk_decode_85_byte	lib/nuklear/nuklear.h	/^nk_decode_85_byte(char c)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decode_85_byte	lib/nuklear/src/nuklear_font.c	/^nk_decode_85_byte(char c)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress	lib/nuklear/nuklear.h	/^nk_decompress(unsigned char *output, unsigned char *i, unsigned int length)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress	lib/nuklear/src/nuklear_font.c	/^nk_decompress(unsigned char *output, unsigned char *i, unsigned int length)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress_length	lib/nuklear/nuklear.h	/^nk_decompress_length(unsigned char *input)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress_length	lib/nuklear/src/nuklear_font.c	/^nk_decompress_length(unsigned char *input)$/;"	f	typeref:typename:NK_INTERN unsigned int
nk_decompress_token	lib/nuklear/nuklear.h	/^nk_decompress_token(unsigned char *i)$/;"	f	typeref:typename:NK_INTERN unsigned char *
nk_decompress_token	lib/nuklear/src/nuklear_font.c	/^nk_decompress_token(unsigned char *i)$/;"	f	typeref:typename:NK_INTERN unsigned char *
nk_default_color_style	lib/nuklear/nuklear.h	/^nk_default_color_style[NK_COLOR_COUNT] = {$/;"	v	typeref:typename:const struct nk_color[]
nk_default_color_style	lib/nuklear/src/nuklear_style.c	/^nk_default_color_style[NK_COLOR_COUNT] = {$/;"	v	typeref:typename:const struct nk_color[]
nk_delete_image	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_delete_image(struct nk_image * image)$/;"	f	typeref:typename:void
nk_do_button	lib/nuklear/nuklear.h	/^nk_do_button(nk_flags *state, struct nk_command_buffer *out, struct nk_rect r,$/;"	f	typeref:typename:NK_LIB int
nk_do_button	lib/nuklear/src/nuklear_button.c	/^nk_do_button(nk_flags *state, struct nk_command_buffer *out, struct nk_rect r,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_image	lib/nuklear/nuklear.h	/^nk_do_button_image(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_image	lib/nuklear/src/nuklear_button.c	/^nk_do_button_image(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_symbol	lib/nuklear/nuklear.h	/^nk_do_button_symbol(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_symbol	lib/nuklear/src/nuklear_button.c	/^nk_do_button_symbol(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text	lib/nuklear/nuklear.h	/^nk_do_button_text(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text	lib/nuklear/src/nuklear_button.c	/^nk_do_button_text(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text_image	lib/nuklear/nuklear.h	/^nk_do_button_text_image(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text_image	lib/nuklear/src/nuklear_button.c	/^nk_do_button_text_image(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text_symbol	lib/nuklear/nuklear.h	/^nk_do_button_text_symbol(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_button_text_symbol	lib/nuklear/src/nuklear_button.c	/^nk_do_button_text_symbol(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_color_picker	lib/nuklear/nuklear.h	/^nk_do_color_picker(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_color_picker	lib/nuklear/src/nuklear_color_picker.c	/^nk_do_color_picker(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_edit	lib/nuklear/nuklear.h	/^nk_do_edit(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB nk_flags
nk_do_edit	lib/nuklear/src/nuklear_edit.c	/^nk_do_edit(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB nk_flags
nk_do_progress	lib/nuklear/nuklear.h	/^nk_do_progress(nk_flags *state,$/;"	f	typeref:typename:NK_LIB nk_size
nk_do_progress	lib/nuklear/src/nuklear_progress.c	/^nk_do_progress(nk_flags *state,$/;"	f	typeref:typename:NK_LIB nk_size
nk_do_property	lib/nuklear/nuklear.h	/^nk_do_property(nk_flags *ws,$/;"	f	typeref:typename:NK_LIB void
nk_do_property	lib/nuklear/src/nuklear_property.c	/^nk_do_property(nk_flags *ws,$/;"	f	typeref:typename:NK_LIB void
nk_do_scrollbarh	lib/nuklear/nuklear.h	/^nk_do_scrollbarh(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_scrollbarh	lib/nuklear/src/nuklear_scrollbar.c	/^nk_do_scrollbarh(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_scrollbarv	lib/nuklear/nuklear.h	/^nk_do_scrollbarv(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_scrollbarv	lib/nuklear/src/nuklear_scrollbar.c	/^nk_do_scrollbarv(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_selectable	lib/nuklear/nuklear.h	/^nk_do_selectable(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_selectable	lib/nuklear/src/nuklear_selectable.c	/^nk_do_selectable(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_selectable_image	lib/nuklear/nuklear.h	/^nk_do_selectable_image(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_selectable_image	lib/nuklear/src/nuklear_selectable.c	/^nk_do_selectable_image(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_selectable_symbol	lib/nuklear/nuklear.h	/^nk_do_selectable_symbol(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_selectable_symbol	lib/nuklear/src/nuklear_selectable.c	/^nk_do_selectable_symbol(nk_flags *state, struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB int
nk_do_slider	lib/nuklear/nuklear.h	/^nk_do_slider(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_slider	lib/nuklear/src/nuklear_slider.c	/^nk_do_slider(nk_flags *state,$/;"	f	typeref:typename:NK_LIB float
nk_do_toggle	lib/nuklear/nuklear.h	/^nk_do_toggle(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_do_toggle	lib/nuklear/src/nuklear_toggle.c	/^nk_do_toggle(nk_flags *state,$/;"	f	typeref:typename:NK_LIB int
nk_drag_behavior	lib/nuklear/nuklear.h	/^nk_drag_behavior(nk_flags *state, const struct nk_input *in,$/;"	f	typeref:typename:NK_LIB void
nk_drag_behavior	lib/nuklear/src/nuklear_property.c	/^nk_drag_behavior(nk_flags *state, const struct nk_input *in,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button	lib/nuklear/nuklear.h	/^nk_draw_button(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB const struct nk_style_item *
nk_draw_button	lib/nuklear/src/nuklear_button.c	/^nk_draw_button(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB const struct nk_style_item *
nk_draw_button_image	lib/nuklear/nuklear.h	/^nk_draw_button_image(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_image	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_image(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_symbol	lib/nuklear/nuklear.h	/^nk_draw_button_symbol(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_symbol	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_symbol(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text	lib/nuklear/nuklear.h	/^nk_draw_button_text(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_text(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text_image	lib/nuklear/nuklear.h	/^nk_draw_button_text_image(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text_image	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_text_image(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text_symbol	lib/nuklear/nuklear.h	/^nk_draw_button_text_symbol(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_button_text_symbol	lib/nuklear/src/nuklear_button.c	/^nk_draw_button_text_symbol(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_checkbox	lib/nuklear/nuklear.h	/^nk_draw_checkbox(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_checkbox	lib/nuklear/src/nuklear_toggle.c	/^nk_draw_checkbox(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_color_picker	lib/nuklear/nuklear.h	/^nk_draw_color_picker(struct nk_command_buffer *o, const struct nk_rect *matrix,$/;"	f	typeref:typename:NK_LIB void
nk_draw_color_picker	lib/nuklear/src/nuklear_color_picker.c	/^nk_draw_color_picker(struct nk_command_buffer *o, const struct nk_rect *matrix,$/;"	f	typeref:typename:NK_LIB void
nk_draw_command	lib/nuklear/nuklear.h	/^struct nk_draw_command {$/;"	s
nk_draw_command	lib/nuklear/src/nuklear.h	/^struct nk_draw_command {$/;"	s
nk_draw_foreach	lib/nuklear/nuklear.h	/^#define nk_draw_foreach(/;"	d
nk_draw_foreach	lib/nuklear/src/nuklear.h	/^#define nk_draw_foreach(/;"	d
nk_draw_image	lib/nuklear/nuklear.h	/^nk_draw_image(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_draw_image	lib/nuklear/src/nuklear_draw.c	/^nk_draw_image(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_draw_index	lib/nuklear/nuklear.h	/^typedef nk_ushort nk_draw_index;$/;"	t	typeref:typename:nk_ushort
nk_draw_index	lib/nuklear/src/nuklear.h	/^typedef nk_ushort nk_draw_index;$/;"	t	typeref:typename:nk_ushort
nk_draw_list	lib/nuklear/nuklear.h	/^struct nk_draw_list {$/;"	s
nk_draw_list	lib/nuklear/src/nuklear.h	/^struct nk_draw_list {$/;"	s
nk_draw_list_add_clip	lib/nuklear/nuklear.h	/^nk_draw_list_add_clip(struct nk_draw_list *list, struct nk_rect rect)$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_add_clip	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_add_clip(struct nk_draw_list *list, struct nk_rect rect)$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_add_image	lib/nuklear/nuklear.h	/^nk_draw_list_add_image(struct nk_draw_list *list, struct nk_image texture,$/;"	f	typeref:typename:NK_API void
nk_draw_list_add_image	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_add_image(struct nk_draw_list *list, struct nk_image texture,$/;"	f	typeref:typename:NK_API void
nk_draw_list_add_text	lib/nuklear/nuklear.h	/^nk_draw_list_add_text(struct nk_draw_list *list, const struct nk_user_font *font,$/;"	f	typeref:typename:NK_API void
nk_draw_list_add_text	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_add_text(struct nk_draw_list *list, const struct nk_user_font *font,$/;"	f	typeref:typename:NK_API void
nk_draw_list_alloc_elements	lib/nuklear/nuklear.h	/^nk_draw_list_alloc_elements(struct nk_draw_list *list, nk_size count)$/;"	f	typeref:typename:NK_INTERN nk_draw_index *
nk_draw_list_alloc_elements	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_alloc_elements(struct nk_draw_list *list, nk_size count)$/;"	f	typeref:typename:NK_INTERN nk_draw_index *
nk_draw_list_alloc_path	lib/nuklear/nuklear.h	/^nk_draw_list_alloc_path(struct nk_draw_list *list, int count)$/;"	f	typeref:typename:NK_INTERN struct nk_vec2 *
nk_draw_list_alloc_path	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_alloc_path(struct nk_draw_list *list, int count)$/;"	f	typeref:typename:NK_INTERN struct nk_vec2 *
nk_draw_list_alloc_vertices	lib/nuklear/nuklear.h	/^nk_draw_list_alloc_vertices(struct nk_draw_list *list, nk_size count)$/;"	f	typeref:typename:NK_INTERN void *
nk_draw_list_alloc_vertices	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_alloc_vertices(struct nk_draw_list *list, nk_size count)$/;"	f	typeref:typename:NK_INTERN void *
nk_draw_list_command_last	lib/nuklear/nuklear.h	/^nk_draw_list_command_last(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_INTERN struct nk_draw_command *
nk_draw_list_command_last	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_command_last(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_INTERN struct nk_draw_command *
nk_draw_list_fill_circle	lib/nuklear/nuklear.h	/^nk_draw_list_fill_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_circle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_poly_convex	lib/nuklear/nuklear.h	/^nk_draw_list_fill_poly_convex(struct nk_draw_list *list,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_poly_convex	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_poly_convex(struct nk_draw_list *list,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_rect	lib/nuklear/nuklear.h	/^nk_draw_list_fill_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_rect	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_rect_multi_color	lib/nuklear/nuklear.h	/^nk_draw_list_fill_rect_multi_color(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_rect_multi_color	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_rect_multi_color(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_triangle	lib/nuklear/nuklear.h	/^nk_draw_list_fill_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_fill_triangle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_fill_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_foreach	lib/nuklear/nuklear.h	/^#define nk_draw_list_foreach(/;"	d
nk_draw_list_foreach	lib/nuklear/src/nuklear.h	/^#define nk_draw_list_foreach(/;"	d
nk_draw_list_init	lib/nuklear/nuklear.h	/^nk_draw_list_init(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_API void
nk_draw_list_init	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_init(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_arc_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_arc_to(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_arc_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_arc_to(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_arc_to_fast	lib/nuklear/nuklear.h	/^nk_draw_list_path_arc_to_fast(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_arc_to_fast	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_arc_to_fast(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_clear	lib/nuklear/nuklear.h	/^nk_draw_list_path_clear(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_clear	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_clear(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_curve_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_curve_to(struct nk_draw_list *list, struct nk_vec2 p2,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_curve_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_curve_to(struct nk_draw_list *list, struct nk_vec2 p2,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_fill	lib/nuklear/nuklear.h	/^nk_draw_list_path_fill(struct nk_draw_list *list, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_fill	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_fill(struct nk_draw_list *list, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_last	lib/nuklear/nuklear.h	/^nk_draw_list_path_last(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_INTERN struct nk_vec2
nk_draw_list_path_last	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_last(struct nk_draw_list *list)$/;"	f	typeref:typename:NK_INTERN struct nk_vec2
nk_draw_list_path_line_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_line_to(struct nk_draw_list *list, struct nk_vec2 pos)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_line_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_line_to(struct nk_draw_list *list, struct nk_vec2 pos)$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_rect_to	lib/nuklear/nuklear.h	/^nk_draw_list_path_rect_to(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_rect_to	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_rect_to(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_stroke	lib/nuklear/nuklear.h	/^nk_draw_list_path_stroke(struct nk_draw_list *list, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_draw_list_path_stroke	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_path_stroke(struct nk_draw_list *list, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_draw_list_push_command	lib/nuklear/nuklear.h	/^nk_draw_list_push_command(struct nk_draw_list *list, struct nk_rect clip,$/;"	f	typeref:typename:NK_INTERN struct nk_draw_command *
nk_draw_list_push_command	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_command(struct nk_draw_list *list, struct nk_rect clip,$/;"	f	typeref:typename:NK_INTERN struct nk_draw_command *
nk_draw_list_push_image	lib/nuklear/nuklear.h	/^nk_draw_list_push_image(struct nk_draw_list *list, nk_handle texture)$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_push_image	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_image(struct nk_draw_list *list, nk_handle texture)$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_push_rect_uv	lib/nuklear/nuklear.h	/^nk_draw_list_push_rect_uv(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_push_rect_uv	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_rect_uv(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_list_push_userdata	lib/nuklear/nuklear.h	/^nk_draw_list_push_userdata(struct nk_draw_list *list, nk_handle userdata)$/;"	f	typeref:typename:NK_API void
nk_draw_list_push_userdata	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_push_userdata(struct nk_draw_list *list, nk_handle userdata)$/;"	f	typeref:typename:NK_API void
nk_draw_list_setup	lib/nuklear/nuklear.h	/^nk_draw_list_setup(struct nk_draw_list *canvas, const struct nk_convert_config *config,$/;"	f	typeref:typename:NK_API void
nk_draw_list_setup	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_setup(struct nk_draw_list *canvas, const struct nk_convert_config *config,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke	lib/nuklear/nuklear.h	/^enum nk_draw_list_stroke {$/;"	g
nk_draw_list_stroke	lib/nuklear/src/nuklear.h	/^enum nk_draw_list_stroke {$/;"	g
nk_draw_list_stroke_circle	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_circle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_circle(struct nk_draw_list *list, struct nk_vec2 center,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_curve	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_curve(struct nk_draw_list *list, struct nk_vec2 p0,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_curve	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_curve(struct nk_draw_list *list, struct nk_vec2 p0,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_line	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_line(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_line	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_line(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_poly_line	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_poly_line(struct nk_draw_list *list, const struct nk_vec2 *points,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_poly_line	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_poly_line(struct nk_draw_list *list, const struct nk_vec2 *points,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_rect	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_rect	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_rect(struct nk_draw_list *list, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_triangle	lib/nuklear/nuklear.h	/^nk_draw_list_stroke_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_list_stroke_triangle	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_list_stroke_triangle(struct nk_draw_list *list, struct nk_vec2 a,$/;"	f	typeref:typename:NK_API void
nk_draw_null_texture	lib/nuklear/nuklear.h	/^struct nk_draw_null_texture {$/;"	s
nk_draw_null_texture	lib/nuklear/src/nuklear.h	/^struct nk_draw_null_texture {$/;"	s
nk_draw_option	lib/nuklear/nuklear.h	/^nk_draw_option(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_option	lib/nuklear/src/nuklear_toggle.c	/^nk_draw_option(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_progress	lib/nuklear/nuklear.h	/^nk_draw_progress(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_progress	lib/nuklear/src/nuklear_progress.c	/^nk_draw_progress(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_property	lib/nuklear/nuklear.h	/^nk_draw_property(struct nk_command_buffer *out, const struct nk_style_property *style,$/;"	f	typeref:typename:NK_LIB void
nk_draw_property	lib/nuklear/src/nuklear_property.c	/^nk_draw_property(struct nk_command_buffer *out, const struct nk_style_property *style,$/;"	f	typeref:typename:NK_LIB void
nk_draw_scrollbar	lib/nuklear/nuklear.h	/^nk_draw_scrollbar(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_scrollbar	lib/nuklear/src/nuklear_scrollbar.c	/^nk_draw_scrollbar(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_selectable	lib/nuklear/nuklear.h	/^nk_draw_selectable(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_selectable	lib/nuklear/src/nuklear_selectable.c	/^nk_draw_selectable(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_draw_slider	lib/nuklear/nuklear.h	/^nk_draw_slider(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_slider	lib/nuklear/src/nuklear_slider.c	/^nk_draw_slider(struct nk_command_buffer *out, nk_flags state,$/;"	f	typeref:typename:NK_LIB void
nk_draw_symbol	lib/nuklear/nuklear.h	/^nk_draw_symbol(struct nk_command_buffer *out, enum nk_symbol_type type,$/;"	f	typeref:typename:NK_LIB void
nk_draw_symbol	lib/nuklear/src/nuklear_button.c	/^nk_draw_symbol(struct nk_command_buffer *out, enum nk_symbol_type type,$/;"	f	typeref:typename:NK_LIB void
nk_draw_text	lib/nuklear/nuklear.h	/^nk_draw_text(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_draw_text	lib/nuklear/src/nuklear_draw.c	/^nk_draw_text(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_draw_vertex	lib/nuklear/nuklear.h	/^nk_draw_vertex(void *dst, const struct nk_convert_config *config,$/;"	f	typeref:typename:NK_INTERN void *
nk_draw_vertex	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex(void *dst, const struct nk_convert_config *config,$/;"	f	typeref:typename:NK_INTERN void *
nk_draw_vertex_color	lib/nuklear/nuklear.h	/^nk_draw_vertex_color(void *attr, const float *vals,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_vertex_color	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex_color(void *attr, const float *vals,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_vertex_element	lib/nuklear/nuklear.h	/^nk_draw_vertex_element(void *dst, const float *values, int value_count,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_vertex_element	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex_element(void *dst, const float *values, int value_count,$/;"	f	typeref:typename:NK_INTERN void
nk_draw_vertex_layout_attribute	lib/nuklear/nuklear.h	/^enum nk_draw_vertex_layout_attribute {$/;"	g
nk_draw_vertex_layout_attribute	lib/nuklear/src/nuklear.h	/^enum nk_draw_vertex_layout_attribute {$/;"	g
nk_draw_vertex_layout_element	lib/nuklear/nuklear.h	/^struct nk_draw_vertex_layout_element {$/;"	s
nk_draw_vertex_layout_element	lib/nuklear/src/nuklear.h	/^struct nk_draw_vertex_layout_element {$/;"	s
nk_draw_vertex_layout_element_is_end_of_layout	lib/nuklear/nuklear.h	/^nk_draw_vertex_layout_element_is_end_of_layout($/;"	f	typeref:typename:NK_INTERN int
nk_draw_vertex_layout_element_is_end_of_layout	lib/nuklear/src/nuklear_vertex.c	/^nk_draw_vertex_layout_element_is_end_of_layout($/;"	f	typeref:typename:NK_INTERN int
nk_draw_vertex_layout_format	lib/nuklear/nuklear.h	/^enum nk_draw_vertex_layout_format {$/;"	g
nk_draw_vertex_layout_format	lib/nuklear/src/nuklear.h	/^enum nk_draw_vertex_layout_format {$/;"	g
nk_dtoa	lib/nuklear/nuklear.h	/^nk_dtoa(char *s, double n)$/;"	f	typeref:typename:NK_LIB char *
nk_dtoa	lib/nuklear/src/nuklear_util.c	/^nk_dtoa(char *s, double n)$/;"	f	typeref:typename:NK_LIB char *
nk_edit_buffer	lib/nuklear/nuklear.h	/^nk_edit_buffer(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_buffer	lib/nuklear/src/nuklear_edit.c	/^nk_edit_buffer(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_draw_text	lib/nuklear/nuklear.h	/^nk_edit_draw_text(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_edit_draw_text	lib/nuklear/src/nuklear_edit.c	/^nk_edit_draw_text(struct nk_command_buffer *out,$/;"	f	typeref:typename:NK_LIB void
nk_edit_events	lib/nuklear/nuklear.h	/^enum nk_edit_events {$/;"	g
nk_edit_events	lib/nuklear/src/nuklear.h	/^enum nk_edit_events {$/;"	g
nk_edit_flags	lib/nuklear/nuklear.h	/^enum nk_edit_flags {$/;"	g
nk_edit_flags	lib/nuklear/src/nuklear.h	/^enum nk_edit_flags {$/;"	g
nk_edit_focus	lib/nuklear/nuklear.h	/^nk_edit_focus(struct nk_context *ctx, nk_flags flags)$/;"	f	typeref:typename:NK_API void
nk_edit_focus	lib/nuklear/src/nuklear_edit.c	/^nk_edit_focus(struct nk_context *ctx, nk_flags flags)$/;"	f	typeref:typename:NK_API void
nk_edit_state	lib/nuklear/nuklear.h	/^struct nk_edit_state {$/;"	s
nk_edit_state	lib/nuklear/src/nuklear.h	/^struct nk_edit_state {$/;"	s
nk_edit_string	lib/nuklear/nuklear.h	/^nk_edit_string(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_string	lib/nuklear/src/nuklear_edit.c	/^nk_edit_string(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_string_zero_terminated	lib/nuklear/nuklear.h	/^nk_edit_string_zero_terminated(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_string_zero_terminated	lib/nuklear/src/nuklear_edit.c	/^nk_edit_string_zero_terminated(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API nk_flags
nk_edit_types	lib/nuklear/nuklear.h	/^enum nk_edit_types {$/;"	g
nk_edit_types	lib/nuklear/src/nuklear.h	/^enum nk_edit_types {$/;"	g
nk_edit_unfocus	lib/nuklear/nuklear.h	/^nk_edit_unfocus(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_edit_unfocus	lib/nuklear/src/nuklear_edit.c	/^nk_edit_unfocus(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_end	lib/nuklear/nuklear.h	/^nk_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_end	lib/nuklear/src/nuklear_window.c	/^nk_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_false	lib/nuklear/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anond7ed09940103
nk_false	lib/nuklear/src/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon8fa426eb0103
nk_file_load	lib/nuklear/nuklear.h	/^nk_file_load(const char* path, nk_size* siz, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_LIB char *
nk_file_load	lib/nuklear/src/nuklear_util.c	/^nk_file_load(const char* path, nk_size* siz, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_LIB char *
nk_fill_arc	lib/nuklear/nuklear.h	/^nk_fill_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f	typeref:typename:NK_API void
nk_fill_arc	lib/nuklear/src/nuklear_draw.c	/^nk_fill_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f	typeref:typename:NK_API void
nk_fill_circle	lib/nuklear/nuklear.h	/^nk_fill_circle(struct nk_command_buffer *b, struct nk_rect r, struct nk_color c)$/;"	f	typeref:typename:NK_API void
nk_fill_circle	lib/nuklear/src/nuklear_draw.c	/^nk_fill_circle(struct nk_command_buffer *b, struct nk_rect r, struct nk_color c)$/;"	f	typeref:typename:NK_API void
nk_fill_polygon	lib/nuklear/nuklear.h	/^nk_fill_polygon(struct nk_command_buffer *b, float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_fill_polygon	lib/nuklear/src/nuklear_draw.c	/^nk_fill_polygon(struct nk_command_buffer *b, float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_fill_rect	lib/nuklear/nuklear.h	/^nk_fill_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_fill_rect	lib/nuklear/src/nuklear_draw.c	/^nk_fill_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_fill_rect_multi_color	lib/nuklear/nuklear.h	/^nk_fill_rect_multi_color(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_fill_rect_multi_color	lib/nuklear/src/nuklear_draw.c	/^nk_fill_rect_multi_color(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_fill_triangle	lib/nuklear/nuklear.h	/^nk_fill_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f	typeref:typename:NK_API void
nk_fill_triangle	lib/nuklear/src/nuklear_draw.c	/^nk_fill_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f	typeref:typename:NK_API void
nk_filter_ascii	lib/nuklear/nuklear.h	/^nk_filter_ascii(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_ascii	lib/nuklear/src/nuklear_edit.c	/^nk_filter_ascii(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_binary	lib/nuklear/nuklear.h	/^nk_filter_binary(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_binary	lib/nuklear/src/nuklear_edit.c	/^nk_filter_binary(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_decimal	lib/nuklear/nuklear.h	/^nk_filter_decimal(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_decimal	lib/nuklear/src/nuklear_edit.c	/^nk_filter_decimal(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_default	lib/nuklear/nuklear.h	/^nk_filter_default(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_default	lib/nuklear/src/nuklear_edit.c	/^nk_filter_default(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_float	lib/nuklear/nuklear.h	/^nk_filter_float(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_float	lib/nuklear/src/nuklear_edit.c	/^nk_filter_float(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_hex	lib/nuklear/nuklear.h	/^nk_filter_hex(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_hex	lib/nuklear/src/nuklear_edit.c	/^nk_filter_hex(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_oct	lib/nuklear/nuklear.h	/^nk_filter_oct(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_filter_oct	lib/nuklear/src/nuklear_edit.c	/^nk_filter_oct(const struct nk_text_edit *box, nk_rune unicode)$/;"	f	typeref:typename:NK_API int
nk_find_value	lib/nuklear/nuklear.h	/^nk_find_value(struct nk_window *win, nk_hash name)$/;"	f	typeref:typename:NK_LIB nk_uint *
nk_find_value	lib/nuklear/src/nuklear_table.c	/^nk_find_value(struct nk_window *win, nk_hash name)$/;"	f	typeref:typename:NK_LIB nk_uint *
nk_find_window	lib/nuklear/nuklear.h	/^nk_find_window(struct nk_context *ctx, nk_hash hash, const char *name)$/;"	f	typeref:typename:NK_LIB struct nk_window *
nk_find_window	lib/nuklear/src/nuklear_window.c	/^nk_find_window(struct nk_context *ctx, nk_hash hash, const char *name)$/;"	f	typeref:typename:NK_LIB struct nk_window *
nk_finish	lib/nuklear/nuklear.h	/^nk_finish(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_finish	lib/nuklear/src/nuklear_context.c	/^nk_finish(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_finish_buffer	lib/nuklear/nuklear.h	/^nk_finish_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f	typeref:typename:NK_LIB void
nk_finish_buffer	lib/nuklear/src/nuklear_context.c	/^nk_finish_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f	typeref:typename:NK_LIB void
nk_finish_popup	lib/nuklear/nuklear.h	/^nk_finish_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_finish_popup	lib/nuklear/src/nuklear_context.c	/^nk_finish_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_flags	lib/nuklear/nuklear.h	/^typedef nk_uint nk_flags;$/;"	t	typeref:typename:nk_uint
nk_flags	lib/nuklear/src/nuklear.h	/^typedef nk_uint nk_flags;$/;"	t	typeref:typename:nk_uint
nk_float	lib/nuklear/nuklear.h	/^#define nk_float /;"	d
nk_float	lib/nuklear/src/nuklear.h	/^#define nk_float /;"	d
nk_font	lib/nuklear/nuklear.h	/^struct nk_font {$/;"	s
nk_font	lib/nuklear/src/nuklear.h	/^struct nk_font {$/;"	s
nk_font_atlas	lib/nuklear/nuklear.h	/^struct nk_font_atlas {$/;"	s
nk_font_atlas	lib/nuklear/src/nuklear.h	/^struct nk_font_atlas {$/;"	s
nk_font_atlas_add	lib/nuklear/nuklear.h	/^nk_font_atlas_add(struct nk_font_atlas *atlas, const struct nk_font_config *config)$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add(struct nk_font_atlas *atlas, const struct nk_font_config *config)$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_compressed	lib/nuklear/nuklear.h	/^nk_font_atlas_add_compressed(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_compressed	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_compressed(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_compressed_base85	lib/nuklear/nuklear.h	/^nk_font_atlas_add_compressed_base85(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_compressed_base85	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_compressed_base85(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_default	lib/nuklear/nuklear.h	/^nk_font_atlas_add_default(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_default	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_default(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_from_file	lib/nuklear/nuklear.h	/^nk_font_atlas_add_from_file(struct nk_font_atlas *atlas, const char *file_path,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_from_file	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_from_file(struct nk_font_atlas *atlas, const char *file_path,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_from_memory	lib/nuklear/nuklear.h	/^nk_font_atlas_add_from_memory(struct nk_font_atlas *atlas, void *memory,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_add_from_memory	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_add_from_memory(struct nk_font_atlas *atlas, void *memory,$/;"	f	typeref:typename:NK_API struct nk_font *
nk_font_atlas_bake	lib/nuklear/nuklear.h	/^nk_font_atlas_bake(struct nk_font_atlas *atlas, int *width, int *height,$/;"	f	typeref:typename:NK_API const void *
nk_font_atlas_bake	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_bake(struct nk_font_atlas *atlas, int *width, int *height,$/;"	f	typeref:typename:NK_API const void *
nk_font_atlas_begin	lib/nuklear/nuklear.h	/^nk_font_atlas_begin(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_begin	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_begin(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_cleanup	lib/nuklear/nuklear.h	/^nk_font_atlas_cleanup(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_cleanup	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_cleanup(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_clear	lib/nuklear/nuklear.h	/^nk_font_atlas_clear(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_clear	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_clear(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_end	lib/nuklear/nuklear.h	/^nk_font_atlas_end(struct nk_font_atlas *atlas, nk_handle texture,$/;"	f	typeref:typename:NK_API void
nk_font_atlas_end	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_end(struct nk_font_atlas *atlas, nk_handle texture,$/;"	f	typeref:typename:NK_API void
nk_font_atlas_format	lib/nuklear/nuklear.h	/^enum nk_font_atlas_format {$/;"	g
nk_font_atlas_format	lib/nuklear/src/nuklear.h	/^enum nk_font_atlas_format {$/;"	g
nk_font_atlas_init	lib/nuklear/nuklear.h	/^nk_font_atlas_init(struct nk_font_atlas *atlas, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_init	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_init(struct nk_font_atlas *atlas, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_init_custom	lib/nuklear/nuklear.h	/^nk_font_atlas_init_custom(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API void
nk_font_atlas_init_custom	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_init_custom(struct nk_font_atlas *atlas,$/;"	f	typeref:typename:NK_API void
nk_font_atlas_init_default	lib/nuklear/nuklear.h	/^nk_font_atlas_init_default(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_atlas_init_default	lib/nuklear/src/nuklear_font.c	/^nk_font_atlas_init_default(struct nk_font_atlas *atlas)$/;"	f	typeref:typename:NK_API void
nk_font_bake	lib/nuklear/nuklear.h	/^nk_font_bake(struct nk_font_baker *baker, void *image_memory, int width, int height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake	lib/nuklear/src/nuklear_font.c	/^nk_font_bake(struct nk_font_baker *baker, void *image_memory, int width, int height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_convert	lib/nuklear/nuklear.h	/^nk_font_bake_convert(void *out_memory, int img_width, int img_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_convert	lib/nuklear/src/nuklear_font.c	/^nk_font_bake_convert(void *out_memory, int img_width, int img_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_custom_data	lib/nuklear/nuklear.h	/^nk_font_bake_custom_data(void *img_memory, int img_width, int img_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_custom_data	lib/nuklear/src/nuklear_font.c	/^nk_font_bake_custom_data(void *img_memory, int img_width, int img_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_bake_data	lib/nuklear/nuklear.h	/^struct nk_font_bake_data {$/;"	s
nk_font_bake_data	lib/nuklear/src/nuklear_font.c	/^struct nk_font_bake_data {$/;"	s	file:
nk_font_bake_pack	lib/nuklear/nuklear.h	/^nk_font_bake_pack(struct nk_font_baker *baker,$/;"	f	typeref:typename:NK_INTERN int
nk_font_bake_pack	lib/nuklear/src/nuklear_font.c	/^nk_font_bake_pack(struct nk_font_baker *baker,$/;"	f	typeref:typename:NK_INTERN int
nk_font_baker	lib/nuklear/nuklear.h	/^nk_font_baker(void *memory, int glyph_count, int count, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_INTERN struct nk_font_baker *
nk_font_baker	lib/nuklear/nuklear.h	/^struct nk_font_baker {$/;"	s
nk_font_baker	lib/nuklear/src/nuklear_font.c	/^nk_font_baker(void *memory, int glyph_count, int count, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_INTERN struct nk_font_baker *
nk_font_baker	lib/nuklear/src/nuklear_font.c	/^struct nk_font_baker {$/;"	s	file:
nk_font_baker_memory	lib/nuklear/nuklear.h	/^nk_font_baker_memory(nk_size *temp, int *glyph_count,$/;"	f	typeref:typename:NK_INTERN void
nk_font_baker_memory	lib/nuklear/src/nuklear_font.c	/^nk_font_baker_memory(nk_size *temp, int *glyph_count,$/;"	f	typeref:typename:NK_INTERN void
nk_font_chinese_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_chinese_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_chinese_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_chinese_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_config	lib/nuklear/nuklear.h	/^nk_font_config(float pixel_height)$/;"	f	typeref:typename:NK_API struct nk_font_config
nk_font_config	lib/nuklear/nuklear.h	/^struct nk_font_config {$/;"	s
nk_font_config	lib/nuklear/src/nuklear.h	/^struct nk_font_config {$/;"	s
nk_font_config	lib/nuklear/src/nuklear_font.c	/^nk_font_config(float pixel_height)$/;"	f	typeref:typename:NK_API struct nk_font_config
nk_font_coord_type	lib/nuklear/nuklear.h	/^enum nk_font_coord_type {$/;"	g
nk_font_coord_type	lib/nuklear/src/nuklear.h	/^enum nk_font_coord_type {$/;"	g
nk_font_cyrillic_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_cyrillic_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_cyrillic_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_cyrillic_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_default_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_default_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_default_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_default_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_find_glyph	lib/nuklear/nuklear.h	/^nk_font_find_glyph(struct nk_font *font, nk_rune unicode)$/;"	f	typeref:typename:NK_API const struct nk_font_glyph *
nk_font_find_glyph	lib/nuklear/src/nuklear_font.c	/^nk_font_find_glyph(struct nk_font *font, nk_rune unicode)$/;"	f	typeref:typename:NK_API const struct nk_font_glyph *
nk_font_glyph	lib/nuklear/nuklear.h	/^struct nk_font_glyph {$/;"	s
nk_font_glyph	lib/nuklear/src/nuklear.h	/^struct nk_font_glyph {$/;"	s
nk_font_init	lib/nuklear/nuklear.h	/^nk_font_init(struct nk_font *font, float pixel_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_init	lib/nuklear/src/nuklear_font.c	/^nk_font_init(struct nk_font *font, float pixel_height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_korean_glyph_ranges	lib/nuklear/nuklear.h	/^nk_font_korean_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_korean_glyph_ranges	lib/nuklear/src/nuklear_font.c	/^nk_font_korean_glyph_ranges(void)$/;"	f	typeref:typename:NK_API const nk_rune *
nk_font_query_font_glyph	lib/nuklear/nuklear.h	/^nk_font_query_font_glyph(nk_handle handle, float height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_query_font_glyph	lib/nuklear/src/nuklear_font.c	/^nk_font_query_font_glyph(nk_handle handle, float height,$/;"	f	typeref:typename:NK_INTERN void
nk_font_text_width	lib/nuklear/nuklear.h	/^nk_font_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN float
nk_font_text_width	lib/nuklear/src/nuklear_font.c	/^nk_font_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN float
nk_foreach	lib/nuklear/nuklear.h	/^#define nk_foreach(/;"	d
nk_foreach	lib/nuklear/src/nuklear.h	/^#define nk_foreach(/;"	d
nk_free	lib/nuklear/nuklear.h	/^nk_free(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_free	lib/nuklear/src/nuklear_context.c	/^nk_free(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_free_page_element	lib/nuklear/nuklear.h	/^nk_free_page_element(struct nk_context *ctx, struct nk_page_element *elem)$/;"	f	typeref:typename:NK_LIB void
nk_free_page_element	lib/nuklear/src/nuklear_page_element.c	/^nk_free_page_element(struct nk_context *ctx, struct nk_page_element *elem)$/;"	f	typeref:typename:NK_LIB void
nk_free_panel	lib/nuklear/nuklear.h	/^nk_free_panel(struct nk_context *ctx, struct nk_panel *pan)$/;"	f	typeref:typename:NK_LIB void
nk_free_panel	lib/nuklear/src/nuklear_panel.c	/^nk_free_panel(struct nk_context *ctx, struct nk_panel *pan)$/;"	f	typeref:typename:NK_LIB void
nk_free_table	lib/nuklear/nuklear.h	/^nk_free_table(struct nk_context *ctx, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_free_table	lib/nuklear/src/nuklear_table.c	/^nk_free_table(struct nk_context *ctx, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_free_window	lib/nuklear/nuklear.h	/^nk_free_window(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_free_window	lib/nuklear/src/nuklear_window.c	/^nk_free_window(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_gdi_blit	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_blit(HDC dc)$/;"	f	typeref:typename:void
nk_gdi_clear	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_clear(HDC dc, struct nk_color col)$/;"	f	typeref:typename:void
nk_gdi_clipbard_copy	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:void
nk_gdi_clipbard_paste	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:void
nk_gdi_draw_image	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_draw_image(short x, short y, unsigned short w, unsigned short h,$/;"	f	typeref:typename:void
nk_gdi_draw_text	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_draw_text(HDC dc, short x, short y, unsigned short w, unsigned short h,$/;"	f	typeref:typename:void
nk_gdi_fill_circle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_circle(HDC dc, short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdi_fill_polygon	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_polygon(HDC dc, const struct nk_vec2i *pnts, int count, struct nk_color col)$/;"	f	typeref:typename:void
nk_gdi_fill_rect	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_rect(HDC dc, short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdi_fill_triangle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_fill_triangle(HDC dc, short x0, short y0, short x1,$/;"	f	typeref:typename:void
nk_gdi_handle_event	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:NK_API int
nk_gdi_init	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_init(GdiFont *gdifont, HDC window_dc, unsigned int width, unsigned int height)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_gdi_render	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_render(struct nk_color clear)$/;"	f	typeref:typename:NK_API void
nk_gdi_scissor	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_scissor(HDC dc, float x, float y, float w, float h)$/;"	f	typeref:typename:void
nk_gdi_set_font	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_set_font(GdiFont *gdifont)$/;"	f	typeref:typename:NK_API void
nk_gdi_shutdown	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_gdi_stroke_circle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_circle(HDC dc, short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdi_stroke_curve	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_curve(HDC dc, struct nk_vec2i p1,$/;"	f	typeref:typename:void
nk_gdi_stroke_line	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_line(HDC dc, short x0, short y0, short x1,$/;"	f	typeref:typename:void
nk_gdi_stroke_polygon	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_polygon(HDC dc, const struct nk_vec2i *pnts, int count,$/;"	f	typeref:typename:void
nk_gdi_stroke_polyline	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_polyline(HDC dc, const struct nk_vec2i *pnts,$/;"	f	typeref:typename:void
nk_gdi_stroke_rect	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_rect(HDC dc, short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdi_stroke_triangle	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdi_stroke_triangle(HDC dc, short x0, short y0, short x1,$/;"	f	typeref:typename:void
nk_gdifont_create	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdifont_create(const char *name, int size)$/;"	f	typeref:typename:GdiFont *
nk_gdifont_del	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdifont_del(GdiFont *font)$/;"	f	typeref:typename:void
nk_gdifont_get_text_width	lib/nuklear/demo/gdi/nuklear_gdi.h	/^nk_gdifont_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f	typeref:typename:float
nk_gdip_blit	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_blit(GpGraphics *graphics)$/;"	f	typeref:typename:void
nk_gdip_clear	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_clear(struct nk_color col)$/;"	f	typeref:typename:void
nk_gdip_clipbard_copy	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:void
nk_gdip_clipbard_paste	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:void
nk_gdip_draw_image	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_draw_image(short x, short y, unsigned short w, unsigned short h,$/;"	f	typeref:typename:void
nk_gdip_draw_text	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_draw_text(short x, short y, unsigned short w, unsigned short h,$/;"	f	typeref:typename:void
nk_gdip_fill_circle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_circle(short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdip_fill_polygon	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_polygon(const struct nk_vec2i *pnts, int count, struct nk_color col)$/;"	f	typeref:typename:void
nk_gdip_fill_rect	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_rect(short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdip_fill_triangle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_fill_triangle(short x0, short y0, short x1,$/;"	f	typeref:typename:void
nk_gdip_getCurFontCollection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_getCurFontCollection(){$/;"	f	typeref:typename:GpFontCollection *
nk_gdip_handle_event	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_handle_event(HWND wnd, UINT msg, WPARAM wparam, LPARAM lparam)$/;"	f	typeref:typename:NK_API int
nk_gdip_image_free	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_image_free(struct nk_image image)$/;"	f	typeref:typename:void
nk_gdip_image_to_nk	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_image_to_nk(GpImage *image) {$/;"	f	typeref:struct:nk_image
nk_gdip_init	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_init(HWND hwnd, unsigned int width, unsigned int height)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_gdip_load_image_from_file	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_load_image_from_file(const WCHAR *filename)$/;"	f	typeref:struct:nk_image
nk_gdip_load_image_from_memory	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_load_image_from_memory(const void *membuf, nk_uint membufSize)$/;"	f	typeref:struct:nk_image
nk_gdip_prerender_gui	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_prerender_gui(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_gdip_render	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_render(enum nk_anti_aliasing AA, struct nk_color clear)$/;"	f	typeref:typename:NK_API void
nk_gdip_render_gui	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_render_gui(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_gdip_scissor	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_scissor(float x, float y, float w, float h)$/;"	f	typeref:typename:void
nk_gdip_set_font	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_set_font(GdipFont *gdipfont)$/;"	f	typeref:typename:NK_API void
nk_gdip_shutdown	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_gdip_stroke_circle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_circle(short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdip_stroke_curve	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_curve(struct nk_vec2i p1,$/;"	f	typeref:typename:void
nk_gdip_stroke_line	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_line(short x0, short y0, short x1,$/;"	f	typeref:typename:void
nk_gdip_stroke_polygon	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_polygon(const struct nk_vec2i *pnts, int count,$/;"	f	typeref:typename:void
nk_gdip_stroke_polyline	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_polyline(const struct nk_vec2i *pnts,$/;"	f	typeref:typename:void
nk_gdip_stroke_rect	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_rect(short x, short y, unsigned short w,$/;"	f	typeref:typename:void
nk_gdip_stroke_triangle	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdip_stroke_triangle(short x0, short y0, short x1,$/;"	f	typeref:typename:void
nk_gdipfont_create	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create(const char *name, int size)$/;"	f	typeref:typename:GdipFont *
nk_gdipfont_create_from_collection	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create_from_collection(int size){$/;"	f	typeref:typename:GdipFont *
nk_gdipfont_create_from_file	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create_from_file(const WCHAR* filename, int size)$/;"	f	typeref:typename:GdipFont *
nk_gdipfont_create_from_memory	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_create_from_memory(const void* membuf, int membufSize, int size)$/;"	f	typeref:typename:GdipFont *
nk_gdipfont_del	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_del(GdipFont *font)$/;"	f	typeref:typename:void
nk_gdipfont_get_text_width	lib/nuklear/demo/gdip/nuklear_gdip.h	/^nk_gdipfont_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f	typeref:typename:float
nk_get_null_rect	lib/nuklear/nuklear.h	/^nk_get_null_rect(void)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_get_null_rect	lib/nuklear/src/nuklear_math.c	/^nk_get_null_rect(void)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_gflw3_scroll_callback	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f	typeref:typename:NK_API void
nk_gflw3_scroll_callback	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f	typeref:typename:NK_API void
nk_gflw3_scroll_callback	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_gflw3_scroll_callback(GLFWwindow *win, double xoff, double yoff)$/;"	f	typeref:typename:NK_API void
nk_gl_ext	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_gl_ext(const char *name)$/;"	f	typeref:typename:NK_INTERN __GLXextFuncPtr
nk_glfw	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^static struct nk_glfw {$/;"	s
nk_glfw	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^static struct nk_glfw {$/;"	s
nk_glfw	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^static struct nk_glfw {$/;"	s
nk_glfw3_char_callback	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:NK_API void
nk_glfw3_char_callback	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:NK_API void
nk_glfw3_char_callback	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_char_callback(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:NK_API void
nk_glfw3_clipbard_copy	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_clipbard_copy	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_clipbard_copy	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_clipbard_paste	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_clipbard_paste	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_clipbard_paste	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_create_texture	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_create_texture(const void* image, int width, int height)$/;"	f	typeref:typename:NK_API int
nk_glfw3_destroy_texture	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_destroy_texture(int tex_index)$/;"	f	typeref:typename:NK_API void
nk_glfw3_device_create	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_device_create(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_device_create	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_device_create()$/;"	f	typeref:typename:NK_API void
nk_glfw3_device_destroy	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_device_destroy(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_device_destroy	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_device_destroy(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_device_upload_atlas	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_device_upload_atlas	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_device_upload_atlas	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_font_stash_begin	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_glfw3_font_stash_begin	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_glfw3_font_stash_begin	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_glfw3_font_stash_end	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_font_stash_end	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_font_stash_end	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_get_available_tex_index	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_get_available_tex_index()$/;"	f	typeref:typename:NK_INTERN int
nk_glfw3_get_tex_ogl_handle	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_get_tex_ogl_handle(int tex_index)$/;"	f	typeref:typename:NK_API GLuint64
nk_glfw3_get_tex_ogl_id	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_get_tex_ogl_id(int tex_index)$/;"	f	typeref:typename:NK_API GLuint
nk_glfw3_init	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_glfw3_init	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_glfw3_init	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_init(GLFWwindow *win, enum nk_glfw_init_state init_state,$/;"	f	typeref:typename:NK_API struct nk_context *
nk_glfw3_lock_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_lock_buffer()$/;"	f	typeref:typename:NK_INTERN void
nk_glfw3_mouse_button_callback	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:NK_API void
nk_glfw3_mouse_button_callback	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:NK_API void
nk_glfw3_mouse_button_callback	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_mouse_button_callback(GLFWwindow* window, int button, int action, int mods)$/;"	f	typeref:typename:NK_API void
nk_glfw3_new_frame	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_new_frame(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_new_frame	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_new_frame(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_new_frame	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_new_frame(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_render	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^nk_glfw3_render(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_glfw3_render	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^nk_glfw3_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f	typeref:typename:NK_API void
nk_glfw3_render	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_render(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_glfw3_shutdown	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^void nk_glfw3_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_shutdown	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^void nk_glfw3_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_shutdown	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^void nk_glfw3_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_glfw3_wait_for_buffer_unlock	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^nk_glfw3_wait_for_buffer_unlock()$/;"	f	typeref:typename:NK_INTERN void
nk_glfw_device	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_device	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_device	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^struct nk_glfw_device {$/;"	s
nk_glfw_init_state	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_init_state	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_init_state	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^enum nk_glfw_init_state{$/;"	g
nk_glfw_vertex	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^struct nk_glfw_vertex {$/;"	s
nk_glfw_vertex	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^struct nk_glfw_vertex {$/;"	s
nk_glfw_vertex	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^struct nk_glfw_vertex {$/;"	s
nk_glfw_vertex	lib/nuklear/example/canvas.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glfw_vertex	lib/nuklear/example/extended.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glfw_vertex	lib/nuklear/example/file_browser.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glfw_vertex	lib/nuklear/example/skinning.c	/^struct nk_glfw_vertex {$/;"	s	file:
nk_glyph	lib/nuklear/nuklear.h	/^typedef char nk_glyph[NK_UTF_SIZE];$/;"	t	typeref:typename:char[NK_UTF_SIZE]
nk_glyph	lib/nuklear/src/nuklear.h	/^typedef char nk_glyph[NK_UTF_SIZE];$/;"	t	typeref:typename:char[NK_UTF_SIZE]
nk_green	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_green = {0,255,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_green	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_green = {0,255,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_group_begin	lib/nuklear/nuklear.h	/^nk_group_begin(struct nk_context *ctx, const char *title, nk_flags flags)$/;"	f	typeref:typename:NK_API int
nk_group_begin	lib/nuklear/src/nuklear_group.c	/^nk_group_begin(struct nk_context *ctx, const char *title, nk_flags flags)$/;"	f	typeref:typename:NK_API int
nk_group_begin_titled	lib/nuklear/nuklear.h	/^nk_group_begin_titled(struct nk_context *ctx, const char *id,$/;"	f	typeref:typename:NK_API int
nk_group_begin_titled	lib/nuklear/src/nuklear_group.c	/^nk_group_begin_titled(struct nk_context *ctx, const char *id,$/;"	f	typeref:typename:NK_API int
nk_group_end	lib/nuklear/nuklear.h	/^nk_group_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_group_end	lib/nuklear/src/nuklear_group.c	/^nk_group_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_group_scrolled_begin	lib/nuklear/nuklear.h	/^nk_group_scrolled_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_group_scrolled_begin	lib/nuklear/src/nuklear_group.c	/^nk_group_scrolled_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_group_scrolled_end	lib/nuklear/nuklear.h	/^nk_group_scrolled_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_group_scrolled_end	lib/nuklear/src/nuklear_group.c	/^nk_group_scrolled_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_group_scrolled_offset_begin	lib/nuklear/nuklear.h	/^nk_group_scrolled_offset_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_group_scrolled_offset_begin	lib/nuklear/src/nuklear_group.c	/^nk_group_scrolled_offset_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_handle	lib/nuklear/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	t	typeref:union:__anond7ed0994020a
nk_handle	lib/nuklear/src/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	t	typeref:union:__anon8fa426eb020a
nk_handle_id	lib/nuklear/nuklear.h	/^nk_handle_id(int id)$/;"	f	typeref:typename:NK_API nk_handle
nk_handle_id	lib/nuklear/src/nuklear_image.c	/^nk_handle_id(int id)$/;"	f	typeref:typename:NK_API nk_handle
nk_handle_ptr	lib/nuklear/nuklear.h	/^nk_handle_ptr(void *ptr)$/;"	f	typeref:typename:NK_API nk_handle
nk_handle_ptr	lib/nuklear/src/nuklear_image.c	/^nk_handle_ptr(void *ptr)$/;"	f	typeref:typename:NK_API nk_handle
nk_hash	lib/nuklear/nuklear.h	/^typedef nk_uint nk_hash;$/;"	t	typeref:typename:nk_uint
nk_hash	lib/nuklear/src/nuklear.h	/^typedef nk_uint nk_hash;$/;"	t	typeref:typename:nk_uint
nk_heading	lib/nuklear/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	g
nk_heading	lib/nuklear/src/nuklear.h	/^enum nk_heading         {NK_UP, NK_RIGHT, NK_DOWN, NK_LEFT};$/;"	g
nk_helper	lib/nuklear/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	s
nk_helper	lib/nuklear/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	s
nk_helper	lib/nuklear/src/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	s
nk_helper	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	s
nk_hsv	lib/nuklear/nuklear.h	/^nk_hsv(int h, int s, int v)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv	lib/nuklear/src/nuklear_color.c	/^nk_hsv(int h, int s, int v)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_bv	lib/nuklear/nuklear.h	/^nk_hsv_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_bv	lib/nuklear/src/nuklear_color.c	/^nk_hsv_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_f	lib/nuklear/nuklear.h	/^nk_hsv_f(float h, float s, float v)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_f	lib/nuklear/src/nuklear_color.c	/^nk_hsv_f(float h, float s, float v)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_fv	lib/nuklear/nuklear.h	/^nk_hsv_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_fv	lib/nuklear/src/nuklear_color.c	/^nk_hsv_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_iv	lib/nuklear/nuklear.h	/^nk_hsv_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsv_iv	lib/nuklear/src/nuklear_color.c	/^nk_hsv_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva	lib/nuklear/nuklear.h	/^nk_hsva(int h, int s, int v, int a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva	lib/nuklear/src/nuklear_color.c	/^nk_hsva(int h, int s, int v, int a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_bv	lib/nuklear/nuklear.h	/^nk_hsva_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_bv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_colorf	lib/nuklear/nuklear.h	/^nk_hsva_colorf(float h, float s, float v, float a)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_hsva_colorf	lib/nuklear/src/nuklear_color.c	/^nk_hsva_colorf(float h, float s, float v, float a)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_hsva_colorfv	lib/nuklear/nuklear.h	/^nk_hsva_colorfv(float *c)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_hsva_colorfv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_colorfv(float *c)$/;"	f	typeref:typename:NK_API struct nk_colorf
nk_hsva_f	lib/nuklear/nuklear.h	/^nk_hsva_f(float h, float s, float v, float a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_f	lib/nuklear/src/nuklear_color.c	/^nk_hsva_f(float h, float s, float v, float a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_fv	lib/nuklear/nuklear.h	/^nk_hsva_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_fv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_iv	lib/nuklear/nuklear.h	/^nk_hsva_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_hsva_iv	lib/nuklear/src/nuklear_color.c	/^nk_hsva_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_iceilf	lib/nuklear/nuklear.h	/^nk_iceilf(float x)$/;"	f	typeref:typename:NK_LIB int
nk_iceilf	lib/nuklear/src/nuklear_math.c	/^nk_iceilf(float x)$/;"	f	typeref:typename:NK_LIB int
nk_ifloord	lib/nuklear/nuklear.h	/^nk_ifloord(double x)$/;"	f	typeref:typename:NK_LIB int
nk_ifloord	lib/nuklear/src/nuklear_math.c	/^nk_ifloord(double x)$/;"	f	typeref:typename:NK_LIB int
nk_ifloorf	lib/nuklear/nuklear.h	/^nk_ifloorf(float x)$/;"	f	typeref:typename:NK_LIB int
nk_ifloorf	lib/nuklear/src/nuklear_math.c	/^nk_ifloorf(float x)$/;"	f	typeref:typename:NK_LIB int
nk_image	lib/nuklear/nuklear.h	/^nk_image(struct nk_context *ctx, struct nk_image img)$/;"	f	typeref:typename:NK_API void
nk_image	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	s
nk_image	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	s
nk_image	lib/nuklear/src/nuklear_image.c	/^nk_image(struct nk_context *ctx, struct nk_image img)$/;"	f	typeref:typename:NK_API void
nk_image_blendpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_image_blendpixel(const struct rawfb_image *img,$/;"	f	typeref:typename:void
nk_image_color	lib/nuklear/nuklear.h	/^nk_image_color(struct nk_context *ctx, struct nk_image img, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_image_color	lib/nuklear/src/nuklear_image.c	/^nk_image_color(struct nk_context *ctx, struct nk_image img, struct nk_color col)$/;"	f	typeref:typename:NK_API void
nk_image_getpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_image_getpixel(const struct rawfb_image *img, const int x0, const int y0)$/;"	f	typeref:struct:nk_color
nk_image_handle	lib/nuklear/nuklear.h	/^nk_image_handle(nk_handle handle)$/;"	f	typeref:typename:NK_API struct nk_image
nk_image_handle	lib/nuklear/src/nuklear_image.c	/^nk_image_handle(nk_handle handle)$/;"	f	typeref:typename:NK_API struct nk_image
nk_image_id	lib/nuklear/nuklear.h	/^nk_image_id(int id)$/;"	f	typeref:typename:NK_API struct nk_image
nk_image_id	lib/nuklear/src/nuklear_image.c	/^nk_image_id(int id)$/;"	f	typeref:typename:NK_API struct nk_image
nk_image_is_subimage	lib/nuklear/nuklear.h	/^nk_image_is_subimage(const struct nk_image* img)$/;"	f	typeref:typename:NK_API int
nk_image_is_subimage	lib/nuklear/src/nuklear_image.c	/^nk_image_is_subimage(const struct nk_image* img)$/;"	f	typeref:typename:NK_API int
nk_image_ptr	lib/nuklear/nuklear.h	/^nk_image_ptr(void *ptr)$/;"	f	typeref:typename:NK_API struct nk_image
nk_image_ptr	lib/nuklear/src/nuklear_image.c	/^nk_image_ptr(void *ptr)$/;"	f	typeref:typename:NK_API struct nk_image
nk_init	lib/nuklear/nuklear.h	/^nk_init(struct nk_context *ctx, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_API int
nk_init	lib/nuklear/src/nuklear_context.c	/^nk_init(struct nk_context *ctx, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_API int
nk_init_custom	lib/nuklear/nuklear.h	/^nk_init_custom(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f	typeref:typename:NK_API int
nk_init_custom	lib/nuklear/src/nuklear_context.c	/^nk_init_custom(struct nk_context *ctx, struct nk_buffer *cmds,$/;"	f	typeref:typename:NK_API int
nk_init_default	lib/nuklear/nuklear.h	/^nk_init_default(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API int
nk_init_default	lib/nuklear/src/nuklear_context.c	/^nk_init_default(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API int
nk_init_fixed	lib/nuklear/nuklear.h	/^nk_init_fixed(struct nk_context *ctx, void *memory, nk_size size,$/;"	f	typeref:typename:NK_API int
nk_init_fixed	lib/nuklear/src/nuklear_context.c	/^nk_init_fixed(struct nk_context *ctx, void *memory, nk_size size,$/;"	f	typeref:typename:NK_API int
nk_input	lib/nuklear/nuklear.h	/^struct nk_input {$/;"	s
nk_input	lib/nuklear/src/nuklear.h	/^struct nk_input {$/;"	s
nk_input_any_mouse_click_in_rect	lib/nuklear/nuklear.h	/^nk_input_any_mouse_click_in_rect(const struct nk_input *in, struct nk_rect b)$/;"	f	typeref:typename:NK_API int
nk_input_any_mouse_click_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_any_mouse_click_in_rect(const struct nk_input *in, struct nk_rect b)$/;"	f	typeref:typename:NK_API int
nk_input_begin	lib/nuklear/nuklear.h	/^nk_input_begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_input_begin	lib/nuklear/src/nuklear_input.c	/^nk_input_begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_input_button	lib/nuklear/nuklear.h	/^nk_input_button(struct nk_context *ctx, enum nk_buttons id, int x, int y, int down)$/;"	f	typeref:typename:NK_API void
nk_input_button	lib/nuklear/src/nuklear_input.c	/^nk_input_button(struct nk_context *ctx, enum nk_buttons id, int x, int y, int down)$/;"	f	typeref:typename:NK_API void
nk_input_char	lib/nuklear/nuklear.h	/^nk_input_char(struct nk_context *ctx, char c)$/;"	f	typeref:typename:NK_API void
nk_input_char	lib/nuklear/src/nuklear_input.c	/^nk_input_char(struct nk_context *ctx, char c)$/;"	f	typeref:typename:NK_API void
nk_input_end	lib/nuklear/nuklear.h	/^nk_input_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_input_end	lib/nuklear/src/nuklear_input.c	/^nk_input_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_input_glyph	lib/nuklear/nuklear.h	/^nk_input_glyph(struct nk_context *ctx, const nk_glyph glyph)$/;"	f	typeref:typename:NK_API void
nk_input_glyph	lib/nuklear/src/nuklear_input.c	/^nk_input_glyph(struct nk_context *ctx, const nk_glyph glyph)$/;"	f	typeref:typename:NK_API void
nk_input_has_mouse_click	lib/nuklear/nuklear.h	/^nk_input_has_mouse_click(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_has_mouse_click	lib/nuklear/src/nuklear_input.c	/^nk_input_has_mouse_click(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_has_mouse_click_down_in_rect	lib/nuklear/nuklear.h	/^nk_input_has_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_has_mouse_click_down_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_has_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_has_mouse_click_in_rect	lib/nuklear/nuklear.h	/^nk_input_has_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_has_mouse_click_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_has_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_key_down	lib/nuklear/nuklear.h	/^nk_input_is_key_down(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_key_down	lib/nuklear/src/nuklear_input.c	/^nk_input_is_key_down(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_key_pressed	lib/nuklear/nuklear.h	/^nk_input_is_key_pressed(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_key_pressed	lib/nuklear/src/nuklear_input.c	/^nk_input_is_key_pressed(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_key_released	lib/nuklear/nuklear.h	/^nk_input_is_key_released(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_key_released	lib/nuklear/src/nuklear_input.c	/^nk_input_is_key_released(const struct nk_input *i, enum nk_keys key)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_click_down_in_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_click_down_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_click_down_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_click_in_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_click_in_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_click_in_rect(const struct nk_input *i, enum nk_buttons id,$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_down	lib/nuklear/nuklear.h	/^nk_input_is_mouse_down(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_down	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_down(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_hovering_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_hovering_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_pressed	lib/nuklear/nuklear.h	/^nk_input_is_mouse_pressed(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_pressed	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_pressed(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_prev_hovering_rect	lib/nuklear/nuklear.h	/^nk_input_is_mouse_prev_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_prev_hovering_rect	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_prev_hovering_rect(const struct nk_input *i, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_released	lib/nuklear/nuklear.h	/^nk_input_is_mouse_released(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_is_mouse_released	lib/nuklear/src/nuklear_input.c	/^nk_input_is_mouse_released(const struct nk_input *i, enum nk_buttons id)$/;"	f	typeref:typename:NK_API int
nk_input_key	lib/nuklear/nuklear.h	/^nk_input_key(struct nk_context *ctx, enum nk_keys key, int down)$/;"	f	typeref:typename:NK_API void
nk_input_key	lib/nuklear/src/nuklear_input.c	/^nk_input_key(struct nk_context *ctx, enum nk_keys key, int down)$/;"	f	typeref:typename:NK_API void
nk_input_motion	lib/nuklear/nuklear.h	/^nk_input_motion(struct nk_context *ctx, int x, int y)$/;"	f	typeref:typename:NK_API void
nk_input_motion	lib/nuklear/src/nuklear_input.c	/^nk_input_motion(struct nk_context *ctx, int x, int y)$/;"	f	typeref:typename:NK_API void
nk_input_mouse_clicked	lib/nuklear/nuklear.h	/^nk_input_mouse_clicked(const struct nk_input *i, enum nk_buttons id, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_mouse_clicked	lib/nuklear/src/nuklear_input.c	/^nk_input_mouse_clicked(const struct nk_input *i, enum nk_buttons id, struct nk_rect rect)$/;"	f	typeref:typename:NK_API int
nk_input_scroll	lib/nuklear/nuklear.h	/^nk_input_scroll(struct nk_context *ctx, struct nk_vec2 val)$/;"	f	typeref:typename:NK_API void
nk_input_scroll	lib/nuklear/src/nuklear_input.c	/^nk_input_scroll(struct nk_context *ctx, struct nk_vec2 val)$/;"	f	typeref:typename:NK_API void
nk_input_unicode	lib/nuklear/nuklear.h	/^nk_input_unicode(struct nk_context *ctx, nk_rune unicode)$/;"	f	typeref:typename:NK_API void
nk_input_unicode	lib/nuklear/src/nuklear_input.c	/^nk_input_unicode(struct nk_context *ctx, nk_rune unicode)$/;"	f	typeref:typename:NK_API void
nk_insert_window	lib/nuklear/nuklear.h	/^nk_insert_window(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB void
nk_insert_window	lib/nuklear/src/nuklear_window.c	/^nk_insert_window(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB void
nk_int	lib/nuklear/nuklear.h	/^typedef NK_INT32 nk_int;$/;"	t	typeref:typename:NK_INT32
nk_int	lib/nuklear/src/nuklear.h	/^typedef NK_INT32 nk_int;$/;"	t	typeref:typename:NK_INT32
nk_inv_sqrt	lib/nuklear/nuklear.h	/^nk_inv_sqrt(float n)$/;"	f	typeref:typename:NK_LIB float
nk_inv_sqrt	lib/nuklear/src/nuklear_math.c	/^nk_inv_sqrt(float n)$/;"	f	typeref:typename:NK_LIB float
nk_is_lower	lib/nuklear/nuklear.h	/^NK_LIB int nk_is_lower(int c) {return (c >= 'a' && c <= 'z') || (c >= 0xE0 && c <= 0xFF);}$/;"	f	typeref:typename:NK_LIB int
nk_is_lower	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_is_lower(int c) {return (c >= 'a' && c <= 'z') || (c >= 0xE0 && c <= 0xFF);}$/;"	f	typeref:typename:NK_LIB int
nk_is_upper	lib/nuklear/nuklear.h	/^NK_LIB int nk_is_upper(int c){return (c >= 'A' && c <= 'Z') || (c >= 0xC0 && c <= 0xDF);}$/;"	f	typeref:typename:NK_LIB int
nk_is_upper	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_is_upper(int c){return (c >= 'A' && c <= 'Z') || (c >= 0xC0 && c <= 0xDF);}$/;"	f	typeref:typename:NK_LIB int
nk_is_word_boundary	lib/nuklear/nuklear.h	/^nk_is_word_boundary( struct nk_text_edit *state, int idx)$/;"	f	typeref:typename:NK_INTERN int
nk_is_word_boundary	lib/nuklear/src/nuklear_text_editor.c	/^nk_is_word_boundary( struct nk_text_edit *state, int idx)$/;"	f	typeref:typename:NK_INTERN int
nk_item_is_any_active	lib/nuklear/nuklear.h	/^nk_item_is_any_active(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_item_is_any_active	lib/nuklear/src/nuklear_window.c	/^nk_item_is_any_active(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_itoa	lib/nuklear/nuklear.h	/^nk_itoa(char *s, long n)$/;"	f	typeref:typename:NK_LIB char *
nk_itoa	lib/nuklear/src/nuklear_util.c	/^nk_itoa(char *s, long n)$/;"	f	typeref:typename:NK_LIB char *
nk_key	lib/nuklear/nuklear.h	/^struct nk_key {$/;"	s
nk_key	lib/nuklear/src/nuklear.h	/^struct nk_key {$/;"	s
nk_keyboard	lib/nuklear/nuklear.h	/^struct nk_keyboard {$/;"	s
nk_keyboard	lib/nuklear/src/nuklear.h	/^struct nk_keyboard {$/;"	s
nk_keys	lib/nuklear/nuklear.h	/^enum nk_keys {$/;"	g
nk_keys	lib/nuklear/src/nuklear.h	/^enum nk_keys {$/;"	g
nk_label	lib/nuklear/nuklear.h	/^nk_label(struct nk_context *ctx, const char *str, nk_flags alignment)$/;"	f	typeref:typename:NK_API void
nk_label	lib/nuklear/src/nuklear_text.c	/^nk_label(struct nk_context *ctx, const char *str, nk_flags alignment)$/;"	f	typeref:typename:NK_API void
nk_label_colored	lib/nuklear/nuklear.h	/^nk_label_colored(struct nk_context *ctx, const char *str, nk_flags align,$/;"	f	typeref:typename:NK_API void
nk_label_colored	lib/nuklear/src/nuklear_text.c	/^nk_label_colored(struct nk_context *ctx, const char *str, nk_flags align,$/;"	f	typeref:typename:NK_API void
nk_label_colored_wrap	lib/nuklear/nuklear.h	/^nk_label_colored_wrap(struct nk_context *ctx, const char *str, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_label_colored_wrap	lib/nuklear/src/nuklear_text.c	/^nk_label_colored_wrap(struct nk_context *ctx, const char *str, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_label_wrap	lib/nuklear/nuklear.h	/^nk_label_wrap(struct nk_context *ctx, const char *str)$/;"	f	typeref:typename:NK_API void
nk_label_wrap	lib/nuklear/src/nuklear_text.c	/^nk_label_wrap(struct nk_context *ctx, const char *str)$/;"	f	typeref:typename:NK_API void
nk_labelf	lib/nuklear/nuklear.h	/^nk_labelf(struct nk_context *ctx, nk_flags flags, const char *fmt, ...)$/;"	f	typeref:typename:NK_API void
nk_labelf	lib/nuklear/src/nuklear_text.c	/^nk_labelf(struct nk_context *ctx, nk_flags flags, const char *fmt, ...)$/;"	f	typeref:typename:NK_API void
nk_labelf_colored	lib/nuklear/nuklear.h	/^nk_labelf_colored(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API void
nk_labelf_colored	lib/nuklear/src/nuklear_text.c	/^nk_labelf_colored(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API void
nk_labelf_colored_wrap	lib/nuklear/nuklear.h	/^nk_labelf_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_labelf_colored_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelf_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_labelf_wrap	lib/nuklear/nuklear.h	/^nk_labelf_wrap(struct nk_context *ctx, const char *fmt,...)$/;"	f	typeref:typename:NK_API void
nk_labelf_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelf_wrap(struct nk_context *ctx, const char *fmt,...)$/;"	f	typeref:typename:NK_API void
nk_labelfv	lib/nuklear/nuklear.h	/^nk_labelfv(struct nk_context *ctx, nk_flags flags, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_labelfv	lib/nuklear/src/nuklear_text.c	/^nk_labelfv(struct nk_context *ctx, nk_flags flags, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_labelfv_colored	lib/nuklear/nuklear.h	/^nk_labelfv_colored(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API void
nk_labelfv_colored	lib/nuklear/src/nuklear_text.c	/^nk_labelfv_colored(struct nk_context *ctx, nk_flags flags,$/;"	f	typeref:typename:NK_API void
nk_labelfv_colored_wrap	lib/nuklear/nuklear.h	/^nk_labelfv_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_labelfv_colored_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelfv_colored_wrap(struct nk_context *ctx, struct nk_color color,$/;"	f	typeref:typename:NK_API void
nk_labelfv_wrap	lib/nuklear/nuklear.h	/^nk_labelfv_wrap(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_labelfv_wrap	lib/nuklear/src/nuklear_text.c	/^nk_labelfv_wrap(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_layout_format	lib/nuklear/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	g
nk_layout_format	lib/nuklear/src/nuklear.h	/^enum nk_layout_format   {NK_DYNAMIC, NK_STATIC};$/;"	g
nk_layout_peek	lib/nuklear/nuklear.h	/^nk_layout_peek(struct nk_rect *bounds, struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_layout_peek	lib/nuklear/src/nuklear_layout.c	/^nk_layout_peek(struct nk_rect *bounds, struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_layout_ratio_from_pixel	lib/nuklear/nuklear.h	/^nk_layout_ratio_from_pixel(struct nk_context *ctx, float pixel_width)$/;"	f	typeref:typename:NK_API float
nk_layout_ratio_from_pixel	lib/nuklear/src/nuklear_layout.c	/^nk_layout_ratio_from_pixel(struct nk_context *ctx, float pixel_width)$/;"	f	typeref:typename:NK_API float
nk_layout_reset_min_row_height	lib/nuklear/nuklear.h	/^nk_layout_reset_min_row_height(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_reset_min_row_height	lib/nuklear/src/nuklear_layout.c	/^nk_layout_reset_min_row_height(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row	lib/nuklear/nuklear.h	/^nk_layout_row(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_row	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_row_begin	lib/nuklear/nuklear.h	/^nk_layout_row_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_row_begin	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_row_calculate_usable_space	lib/nuklear/nuklear.h	/^nk_layout_row_calculate_usable_space(const struct nk_style *style, enum nk_panel_type type,$/;"	f	typeref:typename:NK_LIB float
nk_layout_row_calculate_usable_space	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_calculate_usable_space(const struct nk_style *style, enum nk_panel_type type,$/;"	f	typeref:typename:NK_LIB float
nk_layout_row_dynamic	lib/nuklear/nuklear.h	/^nk_layout_row_dynamic(struct nk_context *ctx, float height, int cols)$/;"	f	typeref:typename:NK_API void
nk_layout_row_dynamic	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_dynamic(struct nk_context *ctx, float height, int cols)$/;"	f	typeref:typename:NK_API void
nk_layout_row_end	lib/nuklear/nuklear.h	/^nk_layout_row_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_end	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_push	lib/nuklear/nuklear.h	/^nk_layout_row_push(struct nk_context *ctx, float ratio_or_width)$/;"	f	typeref:typename:NK_API void
nk_layout_row_push	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_push(struct nk_context *ctx, float ratio_or_width)$/;"	f	typeref:typename:NK_API void
nk_layout_row_static	lib/nuklear/nuklear.h	/^nk_layout_row_static(struct nk_context *ctx, float height, int item_width, int cols)$/;"	f	typeref:typename:NK_API void
nk_layout_row_static	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_static(struct nk_context *ctx, float height, int item_width, int cols)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_begin	lib/nuklear/nuklear.h	/^nk_layout_row_template_begin(struct nk_context *ctx, float height)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_begin	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_begin(struct nk_context *ctx, float height)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_end	lib/nuklear/nuklear.h	/^nk_layout_row_template_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_end	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_dynamic	lib/nuklear/nuklear.h	/^nk_layout_row_template_push_dynamic(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_dynamic	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_push_dynamic(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_static	lib/nuklear/nuklear.h	/^nk_layout_row_template_push_static(struct nk_context *ctx, float width)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_static	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_push_static(struct nk_context *ctx, float width)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_variable	lib/nuklear/nuklear.h	/^nk_layout_row_template_push_variable(struct nk_context *ctx, float min_width)$/;"	f	typeref:typename:NK_API void
nk_layout_row_template_push_variable	lib/nuklear/src/nuklear_layout.c	/^nk_layout_row_template_push_variable(struct nk_context *ctx, float min_width)$/;"	f	typeref:typename:NK_API void
nk_layout_set_min_row_height	lib/nuklear/nuklear.h	/^nk_layout_set_min_row_height(struct nk_context *ctx, float height)$/;"	f	typeref:typename:NK_API void
nk_layout_set_min_row_height	lib/nuklear/src/nuklear_layout.c	/^nk_layout_set_min_row_height(struct nk_context *ctx, float height)$/;"	f	typeref:typename:NK_API void
nk_layout_space_begin	lib/nuklear/nuklear.h	/^nk_layout_space_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_space_begin	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_begin(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_API void
nk_layout_space_bounds	lib/nuklear/nuklear.h	/^nk_layout_space_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_bounds	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_end	lib/nuklear/nuklear.h	/^nk_layout_space_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_space_end	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_layout_space_push	lib/nuklear/nuklear.h	/^nk_layout_space_push(struct nk_context *ctx, struct nk_rect rect)$/;"	f	typeref:typename:NK_API void
nk_layout_space_push	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_push(struct nk_context *ctx, struct nk_rect rect)$/;"	f	typeref:typename:NK_API void
nk_layout_space_rect_to_local	lib/nuklear/nuklear.h	/^nk_layout_space_rect_to_local(struct nk_context *ctx, struct nk_rect ret)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_rect_to_local	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_rect_to_local(struct nk_context *ctx, struct nk_rect ret)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_rect_to_screen	lib/nuklear/nuklear.h	/^nk_layout_space_rect_to_screen(struct nk_context *ctx, struct nk_rect ret)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_rect_to_screen	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_rect_to_screen(struct nk_context *ctx, struct nk_rect ret)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_space_to_local	lib/nuklear/nuklear.h	/^nk_layout_space_to_local(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_layout_space_to_local	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_to_local(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_layout_space_to_screen	lib/nuklear/nuklear.h	/^nk_layout_space_to_screen(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_layout_space_to_screen	lib/nuklear/src/nuklear_layout.c	/^nk_layout_space_to_screen(struct nk_context *ctx, struct nk_vec2 ret)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_layout_widget_bounds	lib/nuklear/nuklear.h	/^nk_layout_widget_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_widget_bounds	lib/nuklear/src/nuklear_layout.c	/^nk_layout_widget_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_layout_widget_space	lib/nuklear/nuklear.h	/^nk_layout_widget_space(struct nk_rect *bounds, const struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB void
nk_layout_widget_space	lib/nuklear/src/nuklear_layout.c	/^nk_layout_widget_space(struct nk_rect *bounds, const struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB void
nk_link_page_element_into_freelist	lib/nuklear/nuklear.h	/^nk_link_page_element_into_freelist(struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB void
nk_link_page_element_into_freelist	lib/nuklear/src/nuklear_page_element.c	/^nk_link_page_element_into_freelist(struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB void
nk_list_view	lib/nuklear/nuklear.h	/^struct nk_list_view {$/;"	s
nk_list_view	lib/nuklear/src/nuklear.h	/^struct nk_list_view {$/;"	s
nk_list_view_begin	lib/nuklear/nuklear.h	/^nk_list_view_begin(struct nk_context *ctx, struct nk_list_view *view,$/;"	f	typeref:typename:NK_API int
nk_list_view_begin	lib/nuklear/src/nuklear_list_view.c	/^nk_list_view_begin(struct nk_context *ctx, struct nk_list_view *view,$/;"	f	typeref:typename:NK_API int
nk_list_view_end	lib/nuklear/nuklear.h	/^nk_list_view_end(struct nk_list_view *view)$/;"	f	typeref:typename:NK_API void
nk_list_view_end	lib/nuklear/src/nuklear_list_view.c	/^nk_list_view_end(struct nk_list_view *view)$/;"	f	typeref:typename:NK_API void
nk_load_opengl	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_load_opengl(struct opengl_info *gl)$/;"	f	typeref:typename:NK_INTERN int
nk_log10	lib/nuklear/nuklear.h	/^nk_log10(double n)$/;"	f	typeref:typename:NK_LIB int
nk_log10	lib/nuklear/src/nuklear_math.c	/^nk_log10(double n)$/;"	f	typeref:typename:NK_LIB int
nk_malloc	lib/nuklear/nuklear.h	/^nk_malloc(nk_handle unused, void *old,nk_size size)$/;"	f	typeref:typename:NK_LIB void *
nk_malloc	lib/nuklear/src/nuklear_buffer.c	/^nk_malloc(nk_handle unused, void *old,nk_size size)$/;"	f	typeref:typename:NK_LIB void *
nk_memcopy	lib/nuklear/nuklear.h	/^nk_memcopy(void *dst0, const void *src0, nk_size length)$/;"	f	typeref:typename:NK_LIB void *
nk_memcopy	lib/nuklear/src/nuklear_util.c	/^nk_memcopy(void *dst0, const void *src0, nk_size length)$/;"	f	typeref:typename:NK_LIB void *
nk_memory	lib/nuklear/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	s
nk_memory	lib/nuklear/src/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	s
nk_memory_status	lib/nuklear/nuklear.h	/^struct nk_memory_status {$/;"	s
nk_memory_status	lib/nuklear/src/nuklear.h	/^struct nk_memory_status {$/;"	s
nk_memset	lib/nuklear/nuklear.h	/^nk_memset(void *ptr, int c0, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_memset	lib/nuklear/src/nuklear_util.c	/^nk_memset(void *ptr, int c0, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_menu_begin	lib/nuklear/nuklear.h	/^nk_menu_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN int
nk_menu_begin	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin(struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_INTERN int
nk_menu_begin_image	lib/nuklear/nuklear.h	/^nk_menu_begin_image(struct nk_context *ctx, const char *id, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_image	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_image(struct nk_context *ctx, const char *id, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_image_label	lib/nuklear/nuklear.h	/^nk_menu_begin_image_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_image_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_image_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_image_text	lib/nuklear/nuklear.h	/^nk_menu_begin_image_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_image_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_image_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_label	lib/nuklear/nuklear.h	/^NK_API int nk_menu_begin_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_label	lib/nuklear/src/nuklear_menu.c	/^NK_API int nk_menu_begin_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol	lib/nuklear/nuklear.h	/^nk_menu_begin_symbol(struct nk_context *ctx, const char *id,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_symbol(struct nk_context *ctx, const char *id,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol_label	lib/nuklear/nuklear.h	/^nk_menu_begin_symbol_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_symbol_label(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol_text	lib/nuklear/nuklear.h	/^nk_menu_begin_symbol_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_symbol_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_symbol_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_text	lib/nuklear/nuklear.h	/^nk_menu_begin_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_begin_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_begin_text(struct nk_context *ctx, const char *title, int len,$/;"	f	typeref:typename:NK_API int
nk_menu_close	lib/nuklear/nuklear.h	/^NK_API void nk_menu_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menu_close	lib/nuklear/src/nuklear_menu.c	/^NK_API void nk_menu_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menu_end	lib/nuklear/nuklear.h	/^nk_menu_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menu_end	lib/nuklear/src/nuklear_menu.c	/^nk_menu_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menu_item_image_label	lib/nuklear/nuklear.h	/^nk_menu_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_item_image_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_item_image_text	lib/nuklear/nuklear.h	/^nk_menu_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_item_image_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_menu_item_label	lib/nuklear/nuklear.h	/^nk_menu_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_menu_item_label	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_label(struct nk_context *ctx, const char *label, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_menu_item_symbol_label	lib/nuklear/nuklear.h	/^NK_API int nk_menu_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_menu_item_symbol_label	lib/nuklear/src/nuklear_menu.c	/^NK_API int nk_menu_item_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_menu_item_symbol_text	lib/nuklear/nuklear.h	/^NK_API int nk_menu_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_menu_item_symbol_text	lib/nuklear/src/nuklear_menu.c	/^NK_API int nk_menu_item_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_menu_item_text	lib/nuklear/nuklear.h	/^nk_menu_item_text(struct nk_context *ctx, const char *title, int len, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_menu_item_text	lib/nuklear/src/nuklear_menu.c	/^nk_menu_item_text(struct nk_context *ctx, const char *title, int len, nk_flags align)$/;"	f	typeref:typename:NK_API int
nk_menu_state	lib/nuklear/nuklear.h	/^struct nk_menu_state {$/;"	s
nk_menu_state	lib/nuklear/src/nuklear.h	/^struct nk_menu_state {$/;"	s
nk_menubar_begin	lib/nuklear/nuklear.h	/^nk_menubar_begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menubar_begin	lib/nuklear/src/nuklear_menu.c	/^nk_menubar_begin(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menubar_end	lib/nuklear/nuklear.h	/^nk_menubar_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_menubar_end	lib/nuklear/src/nuklear_menu.c	/^nk_menubar_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_mfree	lib/nuklear/nuklear.h	/^nk_mfree(nk_handle unused, void *ptr)$/;"	f	typeref:typename:NK_LIB void
nk_mfree	lib/nuklear/src/nuklear_buffer.c	/^nk_mfree(nk_handle unused, void *ptr)$/;"	f	typeref:typename:NK_LIB void
nk_modify	lib/nuklear/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	g
nk_modify	lib/nuklear/src/nuklear.h	/^enum nk_modify          {NK_FIXED = nk_false, NK_MODIFIABLE = nk_true};$/;"	g
nk_mouse	lib/nuklear/nuklear.h	/^struct nk_mouse {$/;"	s
nk_mouse	lib/nuklear/src/nuklear.h	/^struct nk_mouse {$/;"	s
nk_mouse_button	lib/nuklear/nuklear.h	/^struct nk_mouse_button {$/;"	s
nk_mouse_button	lib/nuklear/src/nuklear.h	/^struct nk_mouse_button {$/;"	s
nk_murmur_hash	lib/nuklear/nuklear.h	/^nk_murmur_hash(const void * key, int len, nk_hash seed)$/;"	f	typeref:typename:NK_API nk_hash
nk_murmur_hash	lib/nuklear/src/nuklear_util.c	/^nk_murmur_hash(const void * key, int len, nk_hash seed)$/;"	f	typeref:typename:NK_API nk_hash
nk_nonblock_begin	lib/nuklear/nuklear.h	/^nk_nonblock_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB int
nk_nonblock_begin	lib/nuklear/src/nuklear_popup.c	/^nk_nonblock_begin(struct nk_context *ctx,$/;"	f	typeref:typename:NK_LIB int
nk_null_rect	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_rect nk_null_rect = {-8192.0f, -8192.0f, 16384, 16384};$/;"	v	typeref:typename:const struct nk_rect
nk_null_rect	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_rect nk_null_rect = {-8192.0f, -8192.0f, 16384, 16384};$/;"	v	typeref:typename:const struct nk_rect
nk_option_label	lib/nuklear/nuklear.h	/^nk_option_label(struct nk_context *ctx, const char *label, int active)$/;"	f	typeref:typename:NK_API int
nk_option_label	lib/nuklear/src/nuklear_toggle.c	/^nk_option_label(struct nk_context *ctx, const char *label, int active)$/;"	f	typeref:typename:NK_API int
nk_option_text	lib/nuklear/nuklear.h	/^nk_option_text(struct nk_context *ctx, const char *text, int len, int is_active)$/;"	f	typeref:typename:NK_API int
nk_option_text	lib/nuklear/src/nuklear_toggle.c	/^nk_option_text(struct nk_context *ctx, const char *text, int len, int is_active)$/;"	f	typeref:typename:NK_API int
nk_orientation	lib/nuklear/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	g
nk_orientation	lib/nuklear/src/nuklear.h	/^enum nk_orientation     {NK_VERTICAL, NK_HORIZONTAL};$/;"	g
nk_pad_rect	lib/nuklear/nuklear.h	/^nk_pad_rect(struct nk_rect r, struct nk_vec2 pad)$/;"	f	typeref:typename:NK_LIB struct nk_rect
nk_pad_rect	lib/nuklear/src/nuklear_math.c	/^nk_pad_rect(struct nk_rect r, struct nk_vec2 pad)$/;"	f	typeref:typename:NK_LIB struct nk_rect
nk_page	lib/nuklear/nuklear.h	/^struct nk_page {$/;"	s
nk_page	lib/nuklear/src/nuklear.h	/^struct nk_page {$/;"	s
nk_page_data	lib/nuklear/nuklear.h	/^union nk_page_data {$/;"	u
nk_page_data	lib/nuklear/src/nuklear.h	/^union nk_page_data {$/;"	u
nk_page_element	lib/nuklear/nuklear.h	/^struct nk_page_element {$/;"	s
nk_page_element	lib/nuklear/src/nuklear.h	/^struct nk_page_element {$/;"	s
nk_panel	lib/nuklear/nuklear.h	/^struct nk_panel {$/;"	s
nk_panel	lib/nuklear/src/nuklear.h	/^struct nk_panel {$/;"	s
nk_panel_alloc_row	lib/nuklear/nuklear.h	/^nk_panel_alloc_row(const struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_panel_alloc_row	lib/nuklear/src/nuklear_layout.c	/^nk_panel_alloc_row(const struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_panel_alloc_space	lib/nuklear/nuklear.h	/^nk_panel_alloc_space(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_panel_alloc_space	lib/nuklear/src/nuklear_layout.c	/^nk_panel_alloc_space(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_panel_begin	lib/nuklear/nuklear.h	/^nk_panel_begin(struct nk_context *ctx, const char *title, enum nk_panel_type panel_type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_begin	lib/nuklear/src/nuklear_panel.c	/^nk_panel_begin(struct nk_context *ctx, const char *title, enum nk_panel_type panel_type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_end	lib/nuklear/nuklear.h	/^nk_panel_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_panel_end	lib/nuklear/src/nuklear_panel.c	/^nk_panel_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_LIB void
nk_panel_flags	lib/nuklear/nuklear.h	/^enum nk_panel_flags {$/;"	g
nk_panel_flags	lib/nuklear/src/nuklear.h	/^enum nk_panel_flags {$/;"	g
nk_panel_get_border	lib/nuklear/nuklear.h	/^nk_panel_get_border(const struct nk_style *style, nk_flags flags,$/;"	f	typeref:typename:NK_LIB float
nk_panel_get_border	lib/nuklear/src/nuklear_panel.c	/^nk_panel_get_border(const struct nk_style *style, nk_flags flags,$/;"	f	typeref:typename:NK_LIB float
nk_panel_get_border_color	lib/nuklear/nuklear.h	/^nk_panel_get_border_color(const struct nk_style *style, enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB struct nk_color
nk_panel_get_border_color	lib/nuklear/src/nuklear_panel.c	/^nk_panel_get_border_color(const struct nk_style *style, enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB struct nk_color
nk_panel_get_padding	lib/nuklear/nuklear.h	/^nk_panel_get_padding(const struct nk_style *style, enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB struct nk_vec2
nk_panel_get_padding	lib/nuklear/src/nuklear_panel.c	/^nk_panel_get_padding(const struct nk_style *style, enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB struct nk_vec2
nk_panel_has_header	lib/nuklear/nuklear.h	/^nk_panel_has_header(nk_flags flags, const char *title)$/;"	f	typeref:typename:NK_LIB int
nk_panel_has_header	lib/nuklear/src/nuklear_panel.c	/^nk_panel_has_header(nk_flags flags, const char *title)$/;"	f	typeref:typename:NK_LIB int
nk_panel_is_nonblock	lib/nuklear/nuklear.h	/^nk_panel_is_nonblock(enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_is_nonblock	lib/nuklear/src/nuklear_panel.c	/^nk_panel_is_nonblock(enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_is_sub	lib/nuklear/nuklear.h	/^nk_panel_is_sub(enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_is_sub	lib/nuklear/src/nuklear_panel.c	/^nk_panel_is_sub(enum nk_panel_type type)$/;"	f	typeref:typename:NK_LIB int
nk_panel_layout	lib/nuklear/nuklear.h	/^nk_panel_layout(const struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB void
nk_panel_layout	lib/nuklear/src/nuklear_layout.c	/^nk_panel_layout(const struct nk_context *ctx, struct nk_window *win,$/;"	f	typeref:typename:NK_LIB void
nk_panel_row_layout_type	lib/nuklear/nuklear.h	/^enum nk_panel_row_layout_type {$/;"	g
nk_panel_row_layout_type	lib/nuklear/src/nuklear.h	/^enum nk_panel_row_layout_type {$/;"	g
nk_panel_set	lib/nuklear/nuklear.h	/^enum nk_panel_set {$/;"	g
nk_panel_set	lib/nuklear/src/nuklear.h	/^enum nk_panel_set {$/;"	g
nk_panel_type	lib/nuklear/nuklear.h	/^enum nk_panel_type {$/;"	g
nk_panel_type	lib/nuklear/src/nuklear.h	/^enum nk_panel_type {$/;"	g
nk_parse_hex	lib/nuklear/nuklear.h	/^nk_parse_hex(const char *p, int length)$/;"	f	typeref:typename:NK_INTERN int
nk_parse_hex	lib/nuklear/src/nuklear_color.c	/^nk_parse_hex(const char *p, int length)$/;"	f	typeref:typename:NK_INTERN int
nk_plot	lib/nuklear/nuklear.h	/^nk_plot(struct nk_context *ctx, enum nk_chart_type type, const float *values,$/;"	f	typeref:typename:NK_API void
nk_plot	lib/nuklear/src/nuklear_chart.c	/^nk_plot(struct nk_context *ctx, enum nk_chart_type type, const float *values,$/;"	f	typeref:typename:NK_API void
nk_plot_function	lib/nuklear/nuklear.h	/^nk_plot_function(struct nk_context *ctx, enum nk_chart_type type, void *userdata,$/;"	f	typeref:typename:NK_API void
nk_plot_function	lib/nuklear/src/nuklear_chart.c	/^nk_plot_function(struct nk_context *ctx, enum nk_chart_type type, void *userdata,$/;"	f	typeref:typename:NK_API void
nk_plugin_alloc	lib/nuklear/nuklear.h	/^typedef void*(*nk_plugin_alloc)(nk_handle, void *old, nk_size);$/;"	t	typeref:typename:void * (*)(nk_handle,void * old,nk_size)
nk_plugin_alloc	lib/nuklear/src/nuklear.h	/^typedef void*(*nk_plugin_alloc)(nk_handle, void *old, nk_size);$/;"	t	typeref:typename:void * (*)(nk_handle,void * old,nk_size)
nk_plugin_copy	lib/nuklear/nuklear.h	/^typedef void(*nk_plugin_copy)(nk_handle, const char*, int len);$/;"	t	typeref:typename:void (*)(nk_handle,const char *,int len)
nk_plugin_copy	lib/nuklear/src/nuklear.h	/^typedef void(*nk_plugin_copy)(nk_handle, const char*, int len);$/;"	t	typeref:typename:void (*)(nk_handle,const char *,int len)
nk_plugin_filter	lib/nuklear/nuklear.h	/^typedef int(*nk_plugin_filter)(const struct nk_text_edit*, nk_rune unicode);$/;"	t	typeref:typename:int (*)(const struct nk_text_edit *,nk_rune unicode)
nk_plugin_filter	lib/nuklear/src/nuklear.h	/^typedef int(*nk_plugin_filter)(const struct nk_text_edit*, nk_rune unicode);$/;"	t	typeref:typename:int (*)(const struct nk_text_edit *,nk_rune unicode)
nk_plugin_free	lib/nuklear/nuklear.h	/^typedef void (*nk_plugin_free)(nk_handle, void *old);$/;"	t	typeref:typename:void (*)(nk_handle,void * old)
nk_plugin_free	lib/nuklear/src/nuklear.h	/^typedef void (*nk_plugin_free)(nk_handle, void *old);$/;"	t	typeref:typename:void (*)(nk_handle,void * old)
nk_plugin_paste	lib/nuklear/nuklear.h	/^typedef void(*nk_plugin_paste)(nk_handle, struct nk_text_edit*);$/;"	t	typeref:typename:void (*)(nk_handle,struct nk_text_edit *)
nk_plugin_paste	lib/nuklear/src/nuklear.h	/^typedef void(*nk_plugin_paste)(nk_handle, struct nk_text_edit*);$/;"	t	typeref:typename:void (*)(nk_handle,struct nk_text_edit *)
nk_pool	lib/nuklear/nuklear.h	/^struct nk_pool {$/;"	s
nk_pool	lib/nuklear/src/nuklear.h	/^struct nk_pool {$/;"	s
nk_pool_alloc	lib/nuklear/nuklear.h	/^nk_pool_alloc(struct nk_pool *pool)$/;"	f	typeref:typename:NK_LIB struct nk_page_element *
nk_pool_alloc	lib/nuklear/src/nuklear_pool.c	/^nk_pool_alloc(struct nk_pool *pool)$/;"	f	typeref:typename:NK_LIB struct nk_page_element *
nk_pool_free	lib/nuklear/nuklear.h	/^nk_pool_free(struct nk_pool *pool)$/;"	f	typeref:typename:NK_LIB void
nk_pool_free	lib/nuklear/src/nuklear_pool.c	/^nk_pool_free(struct nk_pool *pool)$/;"	f	typeref:typename:NK_LIB void
nk_pool_init	lib/nuklear/nuklear.h	/^nk_pool_init(struct nk_pool *pool, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_LIB void
nk_pool_init	lib/nuklear/src/nuklear_pool.c	/^nk_pool_init(struct nk_pool *pool, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_LIB void
nk_pool_init_fixed	lib/nuklear/nuklear.h	/^nk_pool_init_fixed(struct nk_pool *pool, void *memory, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_pool_init_fixed	lib/nuklear/src/nuklear_pool.c	/^nk_pool_init_fixed(struct nk_pool *pool, void *memory, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_popup_begin	lib/nuklear/nuklear.h	/^nk_popup_begin(struct nk_context *ctx, enum nk_popup_type type,$/;"	f	typeref:typename:NK_API int
nk_popup_begin	lib/nuklear/src/nuklear_popup.c	/^nk_popup_begin(struct nk_context *ctx, enum nk_popup_type type,$/;"	f	typeref:typename:NK_API int
nk_popup_buffer	lib/nuklear/nuklear.h	/^struct nk_popup_buffer {$/;"	s
nk_popup_buffer	lib/nuklear/src/nuklear.h	/^struct nk_popup_buffer {$/;"	s
nk_popup_close	lib/nuklear/nuklear.h	/^nk_popup_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_popup_close	lib/nuklear/src/nuklear_popup.c	/^nk_popup_close(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_popup_end	lib/nuklear/nuklear.h	/^nk_popup_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_popup_end	lib/nuklear/src/nuklear_popup.c	/^nk_popup_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_popup_state	lib/nuklear/nuklear.h	/^struct nk_popup_state {$/;"	s
nk_popup_state	lib/nuklear/src/nuklear.h	/^struct nk_popup_state {$/;"	s
nk_popup_type	lib/nuklear/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	g
nk_popup_type	lib/nuklear/src/nuklear.h	/^enum nk_popup_type      {NK_POPUP_STATIC, NK_POPUP_DYNAMIC};$/;"	g
nk_pow	lib/nuklear/nuklear.h	/^nk_pow(double x, int n)$/;"	f	typeref:typename:NK_LIB double
nk_pow	lib/nuklear/src/nuklear_math.c	/^nk_pow(double x, int n)$/;"	f	typeref:typename:NK_LIB double
nk_prog	lib/nuklear/nuklear.h	/^nk_prog(struct nk_context *ctx, nk_size cur, nk_size max, int modifyable)$/;"	f	typeref:typename:NK_API nk_size
nk_prog	lib/nuklear/src/nuklear_progress.c	/^nk_prog(struct nk_context *ctx, nk_size cur, nk_size max, int modifyable)$/;"	f	typeref:typename:NK_API nk_size
nk_proggy_clean_ttf_compressed_data_base85	lib/nuklear/nuklear.h	/^NK_GLOBAL const char nk_proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v	typeref:typename:NK_GLOBAL const char[]
nk_proggy_clean_ttf_compressed_data_base85	lib/nuklear/src/nuklear_font.c	/^NK_GLOBAL const char nk_proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v	typeref:typename:NK_GLOBAL const char[]
nk_progress	lib/nuklear/nuklear.h	/^nk_progress(struct nk_context *ctx, nk_size *cur, nk_size max, int is_modifyable)$/;"	f	typeref:typename:NK_API int
nk_progress	lib/nuklear/src/nuklear_progress.c	/^nk_progress(struct nk_context *ctx, nk_size *cur, nk_size max, int is_modifyable)$/;"	f	typeref:typename:NK_API int
nk_progress_behavior	lib/nuklear/nuklear.h	/^nk_progress_behavior(nk_flags *state, struct nk_input *in,$/;"	f	typeref:typename:NK_LIB nk_size
nk_progress_behavior	lib/nuklear/src/nuklear_progress.c	/^nk_progress_behavior(nk_flags *state, struct nk_input *in,$/;"	f	typeref:typename:NK_LIB nk_size
nk_property	lib/nuklear/nuklear.h	/^nk_property(struct nk_context *ctx, const char *name, struct nk_property_variant *variant,$/;"	f	typeref:typename:NK_LIB void
nk_property	lib/nuklear/nuklear.h	/^union nk_property {$/;"	u
nk_property	lib/nuklear/src/nuklear_internal.h	/^union nk_property {$/;"	u
nk_property	lib/nuklear/src/nuklear_property.c	/^nk_property(struct nk_context *ctx, const char *name, struct nk_property_variant *variant,$/;"	f	typeref:typename:NK_LIB void
nk_property_behavior	lib/nuklear/nuklear.h	/^nk_property_behavior(nk_flags *ws, const struct nk_input *in,$/;"	f	typeref:typename:NK_LIB void
nk_property_behavior	lib/nuklear/src/nuklear_property.c	/^nk_property_behavior(nk_flags *ws, const struct nk_input *in,$/;"	f	typeref:typename:NK_LIB void
nk_property_double	lib/nuklear/nuklear.h	/^nk_property_double(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_double	lib/nuklear/src/nuklear_property.c	/^nk_property_double(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_filter	lib/nuklear/nuklear.h	/^enum nk_property_filter {$/;"	g
nk_property_filter	lib/nuklear/src/nuklear_internal.h	/^enum nk_property_filter {$/;"	g
nk_property_float	lib/nuklear/nuklear.h	/^nk_property_float(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_float	lib/nuklear/src/nuklear_property.c	/^nk_property_float(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_int	lib/nuklear/nuklear.h	/^nk_property_int(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_int	lib/nuklear/src/nuklear_property.c	/^nk_property_int(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_property_kind	lib/nuklear/nuklear.h	/^enum nk_property_kind {$/;"	g
nk_property_kind	lib/nuklear/src/nuklear_internal.h	/^enum nk_property_kind {$/;"	g
nk_property_state	lib/nuklear/nuklear.h	/^struct nk_property_state {$/;"	s
nk_property_state	lib/nuklear/src/nuklear.h	/^struct nk_property_state {$/;"	s
nk_property_status	lib/nuklear/nuklear.h	/^enum nk_property_status {$/;"	g
nk_property_status	lib/nuklear/src/nuklear_internal.h	/^enum nk_property_status {$/;"	g
nk_property_variant	lib/nuklear/nuklear.h	/^struct nk_property_variant {$/;"	s
nk_property_variant	lib/nuklear/src/nuklear_internal.h	/^struct nk_property_variant {$/;"	s
nk_property_variant_double	lib/nuklear/nuklear.h	/^nk_property_variant_double(double value, double min_value, double max_value,$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_property_variant_double	lib/nuklear/src/nuklear_property.c	/^nk_property_variant_double(double value, double min_value, double max_value,$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_property_variant_float	lib/nuklear/nuklear.h	/^nk_property_variant_float(float value, float min_value, float max_value, float step)$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_property_variant_float	lib/nuklear/src/nuklear_property.c	/^nk_property_variant_float(float value, float min_value, float max_value, float step)$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_property_variant_int	lib/nuklear/nuklear.h	/^nk_property_variant_int(int value, int min_value, int max_value, int step)$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_property_variant_int	lib/nuklear/src/nuklear_property.c	/^nk_property_variant_int(int value, int min_value, int max_value, int step)$/;"	f	typeref:typename:NK_LIB struct nk_property_variant
nk_propertyd	lib/nuklear/nuklear.h	/^nk_propertyd(struct nk_context *ctx, const char *name, double min,$/;"	f	typeref:typename:NK_API double
nk_propertyd	lib/nuklear/src/nuklear_property.c	/^nk_propertyd(struct nk_context *ctx, const char *name, double min,$/;"	f	typeref:typename:NK_API double
nk_propertyf	lib/nuklear/nuklear.h	/^nk_propertyf(struct nk_context *ctx, const char *name, float min,$/;"	f	typeref:typename:NK_API float
nk_propertyf	lib/nuklear/src/nuklear_property.c	/^nk_propertyf(struct nk_context *ctx, const char *name, float min,$/;"	f	typeref:typename:NK_API float
nk_propertyi	lib/nuklear/nuklear.h	/^nk_propertyi(struct nk_context *ctx, const char *name, int min, int val,$/;"	f	typeref:typename:NK_API int
nk_propertyi	lib/nuklear/src/nuklear_property.c	/^nk_propertyi(struct nk_context *ctx, const char *name, int min, int val,$/;"	f	typeref:typename:NK_API int
nk_ptr	lib/nuklear/nuklear.h	/^typedef NK_POINTER_TYPE nk_ptr;$/;"	t	typeref:typename:NK_POINTER_TYPE
nk_ptr	lib/nuklear/src/nuklear.h	/^typedef NK_POINTER_TYPE nk_ptr;$/;"	t	typeref:typename:NK_POINTER_TYPE
nk_ptr_add	lib/nuklear/nuklear.h	/^#define nk_ptr_add(/;"	d
nk_ptr_add	lib/nuklear/src/nuklear.h	/^#define nk_ptr_add(/;"	d
nk_ptr_add_const	lib/nuklear/nuklear.h	/^#define nk_ptr_add_const(/;"	d
nk_ptr_add_const	lib/nuklear/src/nuklear.h	/^#define nk_ptr_add_const(/;"	d
nk_push_custom	lib/nuklear/nuklear.h	/^nk_push_custom(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_push_custom	lib/nuklear/src/nuklear_draw.c	/^nk_push_custom(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_push_scissor	lib/nuklear/nuklear.h	/^nk_push_scissor(struct nk_command_buffer *b, struct nk_rect r)$/;"	f	typeref:typename:NK_API void
nk_push_scissor	lib/nuklear/src/nuklear_draw.c	/^nk_push_scissor(struct nk_command_buffer *b, struct nk_rect r)$/;"	f	typeref:typename:NK_API void
nk_push_table	lib/nuklear/nuklear.h	/^nk_push_table(struct nk_window *win, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_push_table	lib/nuklear/src/nuklear_table.c	/^nk_push_table(struct nk_window *win, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_query_font_glyph_f	lib/nuklear/nuklear.h	/^typedef void(*nk_query_font_glyph_f)(nk_handle handle, float font_height,$/;"	t	typeref:typename:void (*)(nk_handle handle,float font_height,struct nk_user_font_glyph * glyph,nk_rune codepoint,nk_rune next_codepoint)
nk_query_font_glyph_f	lib/nuklear/src/nuklear.h	/^typedef void(*nk_query_font_glyph_f)(nk_handle handle, float font_height,$/;"	t	typeref:typename:void (*)(nk_handle handle,float font_height,struct nk_user_font_glyph * glyph,nk_rune codepoint,nk_rune next_codepoint)
nk_radio_label	lib/nuklear/nuklear.h	/^nk_radio_label(struct nk_context *ctx, const char *label, int *active)$/;"	f	typeref:typename:NK_API int
nk_radio_label	lib/nuklear/src/nuklear_toggle.c	/^nk_radio_label(struct nk_context *ctx, const char *label, int *active)$/;"	f	typeref:typename:NK_API int
nk_radio_text	lib/nuklear/nuklear.h	/^nk_radio_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f	typeref:typename:NK_API int
nk_radio_text	lib/nuklear/src/nuklear_toggle.c	/^nk_radio_text(struct nk_context *ctx, const char *text, int len, int *active)$/;"	f	typeref:typename:NK_API int
nk_range_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_range_align = NK_ALIGNOF(struct nk_tt_pack_range);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_range_count	lib/nuklear/nuklear.h	/^nk_range_count(const nk_rune *range)$/;"	f	typeref:typename:NK_INTERN int
nk_range_count	lib/nuklear/src/nuklear_font.c	/^nk_range_count(const nk_rune *range)$/;"	f	typeref:typename:NK_INTERN int
nk_range_glyph_count	lib/nuklear/nuklear.h	/^nk_range_glyph_count(const nk_rune *range, int count)$/;"	f	typeref:typename:NK_INTERN int
nk_range_glyph_count	lib/nuklear/src/nuklear_font.c	/^nk_range_glyph_count(const nk_rune *range, int count)$/;"	f	typeref:typename:NK_INTERN int
nk_rawfb_clear	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_clear(const struct rawfb_context *rawfb, const struct nk_color col)$/;"	f	typeref:typename:void
nk_rawfb_draw_text	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_draw_text(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:NK_API void
nk_rawfb_drawimage	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_drawimage(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:NK_API void
nk_rawfb_fill_arc	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_arc(const struct rawfb_context *rawfb, short x0, short y0,$/;"	f	typeref:typename:void
nk_rawfb_fill_circle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_circle(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_fill_polygon	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_polygon(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_fill_rect	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_rect(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_fill_triangle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_fill_triangle(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_font_query_font_glyph	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_font_query_font_glyph(nk_handle handle, const float height,$/;"	f	typeref:typename:void
nk_rawfb_imagesetpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_imagesetpixel(const struct rawfb_image *img,$/;"	f	typeref:typename:void
nk_rawfb_init	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_init(void *fb, void *tex_mem, const unsigned int w, const unsigned int h,$/;"	f	typeref:typename:NK_API struct rawfb_context *
nk_rawfb_line_horizontal	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_line_horizontal(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_render	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_render(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:NK_API void
nk_rawfb_resize_fb	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_resize_fb(struct rawfb_context *rawfb,$/;"	f	typeref:typename:NK_API void
nk_rawfb_scissor	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_scissor(struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_setpixel	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_setpixel(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_shutdown	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_shutdown(struct rawfb_context *rawfb)$/;"	f	typeref:typename:NK_API void
nk_rawfb_stretch_image	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stretch_image(const struct rawfb_image *dst,$/;"	f	typeref:typename:void
nk_rawfb_stroke_arc	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_arc(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_stroke_circle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_circle(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_stroke_curve	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_curve(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_stroke_line	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_line(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_stroke_polygon	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_polygon(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_stroke_polyline	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_polyline(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_stroke_rect	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_rect(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rawfb_stroke_triangle	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^nk_rawfb_stroke_triangle(const struct rawfb_context *rawfb,$/;"	f	typeref:typename:void
nk_rect	lib/nuklear/nuklear.h	/^nk_rect(float x, float y, float w, float h)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rect	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	s
nk_rect	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	s
nk_rect	lib/nuklear/src/nuklear_math.c	/^nk_rect(float x, float y, float w, float h)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rect_align	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_size nk_rect_align = NK_ALIGNOF(struct nk_rp_rect);$/;"	v	typeref:typename:NK_GLOBAL const nk_size
nk_rect_height_compare	lib/nuklear/nuklear.h	/^nk_rect_height_compare(const void *a, const void *b)$/;"	f	typeref:typename:NK_INTERN int
nk_rect_height_compare	lib/nuklear/src/nuklear_font.c	/^nk_rect_height_compare(const void *a, const void *b)$/;"	f	typeref:typename:NK_INTERN int
nk_rect_original_order	lib/nuklear/nuklear.h	/^nk_rect_original_order(const void *a, const void *b)$/;"	f	typeref:typename:NK_INTERN int
nk_rect_original_order	lib/nuklear/src/nuklear_font.c	/^nk_rect_original_order(const void *a, const void *b)$/;"	f	typeref:typename:NK_INTERN int
nk_rect_pos	lib/nuklear/nuklear.h	/^nk_rect_pos(struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_rect_pos	lib/nuklear/src/nuklear_math.c	/^nk_rect_pos(struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_rect_size	lib/nuklear/nuklear.h	/^nk_rect_size(struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_rect_size	lib/nuklear/src/nuklear_math.c	/^nk_rect_size(struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_recta	lib/nuklear/nuklear.h	/^nk_recta(struct nk_vec2 pos, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_recta	lib/nuklear/src/nuklear_math.c	/^nk_recta(struct nk_vec2 pos, struct nk_vec2 size)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_recti	lib/nuklear/nuklear.h	/^nk_recti(int x, int y, int w, int h)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_recti	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	s
nk_recti	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	s
nk_recti	lib/nuklear/src/nuklear_math.c	/^nk_recti(int x, int y, int w, int h)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rectiv	lib/nuklear/nuklear.h	/^nk_rectiv(const int *r)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rectiv	lib/nuklear/src/nuklear_math.c	/^nk_rectiv(const int *r)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rectv	lib/nuklear/nuklear.h	/^nk_rectv(const float *r)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_rectv	lib/nuklear/src/nuklear_math.c	/^nk_rectv(const float *r)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_red	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_red = {255,0,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_red	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_red = {255,0,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_remove_table	lib/nuklear/nuklear.h	/^nk_remove_table(struct nk_window *win, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_remove_table	lib/nuklear/src/nuklear_table.c	/^nk_remove_table(struct nk_window *win, struct nk_table *tbl)$/;"	f	typeref:typename:NK_LIB void
nk_remove_window	lib/nuklear/nuklear.h	/^nk_remove_window(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_remove_window	lib/nuklear/src/nuklear_window.c	/^nk_remove_window(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_rgb	lib/nuklear/nuklear.h	/^nk_rgb(int r, int g, int b)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb	lib/nuklear/src/nuklear_color.c	/^nk_rgb(int r, int g, int b)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_bv	lib/nuklear/nuklear.h	/^nk_rgb_bv(const nk_byte* c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_bv	lib/nuklear/src/nuklear_color.c	/^nk_rgb_bv(const nk_byte* c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_cf	lib/nuklear/nuklear.h	/^nk_rgb_cf(struct nk_colorf c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_cf	lib/nuklear/src/nuklear_color.c	/^nk_rgb_cf(struct nk_colorf c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_f	lib/nuklear/nuklear.h	/^nk_rgb_f(float r, float g, float b)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_f	lib/nuklear/src/nuklear_color.c	/^nk_rgb_f(float r, float g, float b)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_fv	lib/nuklear/nuklear.h	/^nk_rgb_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_fv	lib/nuklear/src/nuklear_color.c	/^nk_rgb_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_hex	lib/nuklear/nuklear.h	/^nk_rgb_hex(const char *rgb)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_hex	lib/nuklear/src/nuklear_color.c	/^nk_rgb_hex(const char *rgb)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_iv	lib/nuklear/nuklear.h	/^nk_rgb_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgb_iv	lib/nuklear/src/nuklear_color.c	/^nk_rgb_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba	lib/nuklear/nuklear.h	/^nk_rgba(int r, int g, int b, int a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba	lib/nuklear/src/nuklear_color.c	/^nk_rgba(int r, int g, int b, int a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_bv	lib/nuklear/nuklear.h	/^nk_rgba_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_bv	lib/nuklear/src/nuklear_color.c	/^nk_rgba_bv(const nk_byte *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_cf	lib/nuklear/nuklear.h	/^nk_rgba_cf(struct nk_colorf c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_cf	lib/nuklear/src/nuklear_color.c	/^nk_rgba_cf(struct nk_colorf c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_f	lib/nuklear/nuklear.h	/^nk_rgba_f(float r, float g, float b, float a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_f	lib/nuklear/src/nuklear_color.c	/^nk_rgba_f(float r, float g, float b, float a)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_fv	lib/nuklear/nuklear.h	/^nk_rgba_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_fv	lib/nuklear/src/nuklear_color.c	/^nk_rgba_fv(const float *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_hex	lib/nuklear/nuklear.h	/^nk_rgba_hex(const char *rgb)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_hex	lib/nuklear/src/nuklear_color.c	/^nk_rgba_hex(const char *rgb)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_iv	lib/nuklear/nuklear.h	/^nk_rgba_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_iv	lib/nuklear/src/nuklear_color.c	/^nk_rgba_iv(const int *c)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_u32	lib/nuklear/nuklear.h	/^nk_rgba_u32(nk_uint in)$/;"	f	typeref:typename:NK_API struct nk_color
nk_rgba_u32	lib/nuklear/src/nuklear_color.c	/^nk_rgba_u32(nk_uint in)$/;"	f	typeref:typename:NK_API struct nk_color
nk_round_up_pow2	lib/nuklear/nuklear.h	/^nk_round_up_pow2(nk_uint v)$/;"	f	typeref:typename:NK_LIB nk_uint
nk_round_up_pow2	lib/nuklear/src/nuklear_math.c	/^nk_round_up_pow2(nk_uint v)$/;"	f	typeref:typename:NK_LIB nk_uint
nk_row_layout	lib/nuklear/nuklear.h	/^nk_row_layout(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_LIB void
nk_row_layout	lib/nuklear/nuklear.h	/^struct nk_row_layout {$/;"	s
nk_row_layout	lib/nuklear/src/nuklear.h	/^struct nk_row_layout {$/;"	s
nk_row_layout	lib/nuklear/src/nuklear_layout.c	/^nk_row_layout(struct nk_context *ctx, enum nk_layout_format fmt,$/;"	f	typeref:typename:NK_LIB void
nk_rp__findresult	lib/nuklear/nuklear.h	/^struct nk_rp__findresult {$/;"	s
nk_rp__findresult	lib/nuklear/src/nuklear_font.c	/^struct nk_rp__findresult {$/;"	s	file:
nk_rp__skyline_find_best_pos	lib/nuklear/nuklear.h	/^nk_rp__skyline_find_best_pos(struct nk_rp_context *c, int width, int height)$/;"	f	typeref:typename:NK_INTERN struct nk_rp__findresult
nk_rp__skyline_find_best_pos	lib/nuklear/src/nuklear_font.c	/^nk_rp__skyline_find_best_pos(struct nk_rp_context *c, int width, int height)$/;"	f	typeref:typename:NK_INTERN struct nk_rp__findresult
nk_rp__skyline_find_min_y	lib/nuklear/nuklear.h	/^nk_rp__skyline_find_min_y(struct nk_rp_context *c, struct nk_rp_node *first,$/;"	f	typeref:typename:NK_INTERN int
nk_rp__skyline_find_min_y	lib/nuklear/src/nuklear_font.c	/^nk_rp__skyline_find_min_y(struct nk_rp_context *c, struct nk_rp_node *first,$/;"	f	typeref:typename:NK_INTERN int
nk_rp__skyline_pack_rectangle	lib/nuklear/nuklear.h	/^nk_rp__skyline_pack_rectangle(struct nk_rp_context *context, int width, int height)$/;"	f	typeref:typename:NK_INTERN struct nk_rp__findresult
nk_rp__skyline_pack_rectangle	lib/nuklear/src/nuklear_font.c	/^nk_rp__skyline_pack_rectangle(struct nk_rp_context *context, int width, int height)$/;"	f	typeref:typename:NK_INTERN struct nk_rp__findresult
nk_rp_context	lib/nuklear/nuklear.h	/^struct nk_rp_context {$/;"	s
nk_rp_context	lib/nuklear/src/nuklear_font.c	/^struct nk_rp_context {$/;"	s	file:
nk_rp_coord	lib/nuklear/nuklear.h	/^typedef unsigned short nk_rp_coord;$/;"	t	typeref:typename:unsigned short
nk_rp_coord	lib/nuklear/src/nuklear_font.c	/^typedef unsigned short nk_rp_coord;$/;"	t	typeref:typename:unsigned short	file:
nk_rp_init_target	lib/nuklear/nuklear.h	/^nk_rp_init_target(struct nk_rp_context *context, int width, int height,$/;"	f	typeref:typename:NK_INTERN void
nk_rp_init_target	lib/nuklear/src/nuklear_font.c	/^nk_rp_init_target(struct nk_rp_context *context, int width, int height,$/;"	f	typeref:typename:NK_INTERN void
nk_rp_node	lib/nuklear/nuklear.h	/^struct nk_rp_node {$/;"	s
nk_rp_node	lib/nuklear/src/nuklear_font.c	/^struct nk_rp_node {$/;"	s	file:
nk_rp_pack_rects	lib/nuklear/nuklear.h	/^nk_rp_pack_rects(struct nk_rp_context *context, struct nk_rp_rect *rects, int num_rects)$/;"	f	typeref:typename:NK_INTERN void
nk_rp_pack_rects	lib/nuklear/src/nuklear_font.c	/^nk_rp_pack_rects(struct nk_rp_context *context, struct nk_rp_rect *rects, int num_rects)$/;"	f	typeref:typename:NK_INTERN void
nk_rp_qsort	lib/nuklear/nuklear.h	/^nk_rp_qsort(struct nk_rp_rect *array, unsigned int len, int(*cmp)(const void*,const void*))$/;"	f	typeref:typename:NK_INTERN void
nk_rp_qsort	lib/nuklear/src/nuklear_font.c	/^nk_rp_qsort(struct nk_rp_rect *array, unsigned int len, int(*cmp)(const void*,const void*))$/;"	f	typeref:typename:NK_INTERN void
nk_rp_rect	lib/nuklear/nuklear.h	/^struct nk_rp_rect {$/;"	s
nk_rp_rect	lib/nuklear/src/nuklear_font.c	/^struct nk_rp_rect {$/;"	s	file:
nk_rp_setup_allow_out_of_mem	lib/nuklear/nuklear.h	/^nk_rp_setup_allow_out_of_mem(struct nk_rp_context *context, int allow_out_of_mem)$/;"	f	typeref:typename:NK_INTERN void
nk_rp_setup_allow_out_of_mem	lib/nuklear/src/nuklear_font.c	/^nk_rp_setup_allow_out_of_mem(struct nk_rp_context *context, int allow_out_of_mem)$/;"	f	typeref:typename:NK_INTERN void
nk_rune	lib/nuklear/nuklear.h	/^typedef nk_uint nk_rune;$/;"	t	typeref:typename:nk_uint
nk_rune	lib/nuklear/src/nuklear.h	/^typedef nk_uint nk_rune;$/;"	t	typeref:typename:nk_uint
nk_scroll	lib/nuklear/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	s
nk_scroll	lib/nuklear/src/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	s
nk_scrollbar_behavior	lib/nuklear/nuklear.h	/^nk_scrollbar_behavior(nk_flags *state, struct nk_input *in,$/;"	f	typeref:typename:NK_LIB float
nk_scrollbar_behavior	lib/nuklear/src/nuklear_scrollbar.c	/^nk_scrollbar_behavior(nk_flags *state, struct nk_input *in,$/;"	f	typeref:typename:NK_LIB float
nk_sdl	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^static struct nk_sdl {$/;"	s
nk_sdl	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^static struct nk_sdl {$/;"	s
nk_sdl	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^static struct nk_sdl {$/;"	s
nk_sdl_clipbard_copy	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:void
nk_sdl_clipbard_copy	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:void
nk_sdl_clipbard_copy	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_clipbard_copy(nk_handle usr, const char *text, int len)$/;"	f	typeref:typename:void
nk_sdl_clipbard_paste	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:void
nk_sdl_clipbard_paste	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:void
nk_sdl_clipbard_paste	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_clipbard_paste(nk_handle usr, struct nk_text_edit *edit)$/;"	f	typeref:typename:void
nk_sdl_device	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^struct nk_sdl_device {$/;"	s
nk_sdl_device	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^struct nk_sdl_device {$/;"	s
nk_sdl_device	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^struct nk_sdl_device {$/;"	s
nk_sdl_device_create	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_device_create(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_device_create	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_device_create(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_device_destroy	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_device_destroy(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_device_destroy	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_device_destroy(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_device_upload_atlas	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_sdl_device_upload_atlas	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_sdl_device_upload_atlas	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_sdl_font_stash_begin	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_sdl_font_stash_begin	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_sdl_font_stash_begin	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_sdl_font_stash_end	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_font_stash_end	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_font_stash_end	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_handle_event	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_handle_event(SDL_Event *evt)$/;"	f	typeref:typename:NK_API int
nk_sdl_handle_event	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_handle_event(SDL_Event *evt)$/;"	f	typeref:typename:NK_API int
nk_sdl_handle_event	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_handle_event(SDL_Event *evt)$/;"	f	typeref:typename:NK_API int
nk_sdl_init	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_init(SDL_Window *win)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_sdl_init	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_init(SDL_Window *win)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_sdl_init	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_init(SDL_Window *win)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_sdl_render	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^nk_sdl_render(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_sdl_render	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^nk_sdl_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f	typeref:typename:NK_API void
nk_sdl_render	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^nk_sdl_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f	typeref:typename:NK_API void
nk_sdl_shutdown	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^void nk_sdl_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_shutdown	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^void nk_sdl_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_shutdown	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^void nk_sdl_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_sdl_vertex	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^struct nk_sdl_vertex {$/;"	s
nk_sdl_vertex	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^struct nk_sdl_vertex {$/;"	s
nk_sdl_vertex	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^struct nk_sdl_vertex {$/;"	s
nk_select_image_label	lib/nuklear/nuklear.h	/^NK_API int nk_select_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_select_image_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_image_label(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_select_image_text	lib/nuklear/nuklear.h	/^NK_API int nk_select_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_select_image_text	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_select_label	lib/nuklear/nuklear.h	/^NK_API int nk_select_label(struct nk_context *ctx, const char *str, nk_flags align, int value)$/;"	f	typeref:typename:NK_API int
nk_select_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_label(struct nk_context *ctx, const char *str, nk_flags align, int value)$/;"	f	typeref:typename:NK_API int
nk_select_symbol_label	lib/nuklear/nuklear.h	/^nk_select_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_select_symbol_label	lib/nuklear/src/nuklear_selectable.c	/^nk_select_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_select_symbol_text	lib/nuklear/nuklear.h	/^nk_select_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_select_symbol_text	lib/nuklear/src/nuklear_selectable.c	/^nk_select_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_select_text	lib/nuklear/nuklear.h	/^NK_API int nk_select_text(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API int
nk_select_text	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_select_text(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API int
nk_selectable_image_label	lib/nuklear/nuklear.h	/^NK_API int nk_selectable_image_label(struct nk_context *ctx,struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_selectable_image_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_selectable_image_label(struct nk_context *ctx,struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_selectable_image_text	lib/nuklear/nuklear.h	/^nk_selectable_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_selectable_image_text	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_image_text(struct nk_context *ctx, struct nk_image img,$/;"	f	typeref:typename:NK_API int
nk_selectable_label	lib/nuklear/nuklear.h	/^NK_API int nk_selectable_label(struct nk_context *ctx, const char *str, nk_flags align, int *val/;"	f	typeref:typename:NK_API int
nk_selectable_label	lib/nuklear/src/nuklear_selectable.c	/^NK_API int nk_selectable_label(struct nk_context *ctx, const char *str, nk_flags align, int *val/;"	f	typeref:typename:NK_API int
nk_selectable_symbol_label	lib/nuklear/nuklear.h	/^nk_selectable_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_selectable_symbol_label	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_symbol_label(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_selectable_symbol_text	lib/nuklear/nuklear.h	/^nk_selectable_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_selectable_symbol_text	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_symbol_text(struct nk_context *ctx, enum nk_symbol_type sym,$/;"	f	typeref:typename:NK_API int
nk_selectable_text	lib/nuklear/nuklear.h	/^nk_selectable_text(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API int
nk_selectable_text	lib/nuklear/src/nuklear_selectable.c	/^nk_selectable_text(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API int
nk_set_user_data	lib/nuklear/nuklear.h	/^nk_set_user_data(struct nk_context *ctx, nk_handle handle)$/;"	f	typeref:typename:NK_API void
nk_set_user_data	lib/nuklear/src/nuklear_context.c	/^nk_set_user_data(struct nk_context *ctx, nk_handle handle)$/;"	f	typeref:typename:NK_API void
nk_setup	lib/nuklear/nuklear.h	/^nk_setup(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_INTERN void
nk_setup	lib/nuklear/src/nuklear_context.c	/^nk_setup(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_INTERN void
nk_sfml	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^static struct nk_sfml {$/;"	s
nk_sfml	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^static struct nk_sfml {$/;"	s
nk_sfml_clipboard_copy	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_clipboard_copy(nk_handle usr, const char* text, int len)$/;"	f	typeref:typename:void
nk_sfml_clipboard_copy	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_clipboard_copy(nk_handle usr, const char* text, int len)$/;"	f	typeref:typename:void
nk_sfml_clipboard_paste	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_clipboard_paste(nk_handle usr, struct nk_text_edit* edit)$/;"	f	typeref:typename:void
nk_sfml_clipboard_paste	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_clipboard_paste(nk_handle usr, struct nk_text_edit* edit)$/;"	f	typeref:typename:void
nk_sfml_device	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^struct nk_sfml_device {$/;"	s
nk_sfml_device	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^struct nk_sfml_device {$/;"	s
nk_sfml_device_create	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_device_create(void)$/;"	f	typeref:typename:NK_API void
nk_sfml_device_destroy	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_device_destroy(void)$/;"	f	typeref:typename:NK_API void
nk_sfml_device_upload_atlas	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_device_upload_atlas(const void* image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_sfml_device_upload_atlas	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_device_upload_atlas(const void* image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_sfml_font_stash_begin	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_font_stash_begin(struct nk_font_atlas** atlas)$/;"	f	typeref:typename:NK_API void
nk_sfml_font_stash_begin	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_font_stash_begin(struct nk_font_atlas** atlas)$/;"	f	typeref:typename:NK_API void
nk_sfml_font_stash_end	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_font_stash_end()$/;"	f	typeref:typename:NK_API void
nk_sfml_font_stash_end	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_font_stash_end()$/;"	f	typeref:typename:NK_API void
nk_sfml_handle_event	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_handle_event(sf::Event* evt)$/;"	f	typeref:typename:NK_API int
nk_sfml_handle_event	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_handle_event(sf::Event* evt)$/;"	f	typeref:typename:NK_API int
nk_sfml_init	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_init(sf::Window* window)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_sfml_init	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_init(sf::Window* window)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_sfml_render	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^nk_sfml_render(enum nk_anti_aliasing AA)$/;"	f	typeref:typename:NK_API void
nk_sfml_render	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^nk_sfml_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f	typeref:typename:NK_API void
nk_sfml_shutdown	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^void nk_sfml_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_sfml_shutdown	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^void nk_sfml_shutdown()$/;"	f	typeref:typename:NK_API void
nk_sfml_vertex	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^struct nk_sfml_vertex {$/;"	s
nk_sfml_vertex	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^struct nk_sfml_vertex {$/;"	s
nk_short	lib/nuklear/nuklear.h	/^typedef NK_INT16 nk_short;$/;"	t	typeref:typename:NK_INT16
nk_short	lib/nuklear/src/nuklear.h	/^typedef NK_INT16 nk_short;$/;"	t	typeref:typename:NK_INT16
nk_show_states	lib/nuklear/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	g
nk_show_states	lib/nuklear/src/nuklear.h	/^enum nk_show_states     {NK_HIDDEN = nk_false, NK_SHOWN = nk_true};$/;"	g
nk_shrink_rect	lib/nuklear/nuklear.h	/^nk_shrink_rect(struct nk_rect r, float amount)$/;"	f	typeref:typename:NK_LIB struct nk_rect
nk_shrink_rect	lib/nuklear/src/nuklear_math.c	/^nk_shrink_rect(struct nk_rect r, float amount)$/;"	f	typeref:typename:NK_LIB struct nk_rect
nk_sin	lib/nuklear/nuklear.h	/^nk_sin(float x)$/;"	f	typeref:typename:NK_LIB float
nk_sin	lib/nuklear/src/nuklear_math.c	/^nk_sin(float x)$/;"	f	typeref:typename:NK_LIB float
nk_size	lib/nuklear/nuklear.h	/^typedef NK_SIZE_TYPE nk_size;$/;"	t	typeref:typename:NK_SIZE_TYPE
nk_size	lib/nuklear/src/nuklear.h	/^typedef NK_SIZE_TYPE nk_size;$/;"	t	typeref:typename:NK_SIZE_TYPE
nk_slide_float	lib/nuklear/nuklear.h	/^nk_slide_float(struct nk_context *ctx, float min, float val, float max, float step)$/;"	f	typeref:typename:NK_API float
nk_slide_float	lib/nuklear/src/nuklear_slider.c	/^nk_slide_float(struct nk_context *ctx, float min, float val, float max, float step)$/;"	f	typeref:typename:NK_API float
nk_slide_int	lib/nuklear/nuklear.h	/^nk_slide_int(struct nk_context *ctx, int min, int val, int max, int step)$/;"	f	typeref:typename:NK_API int
nk_slide_int	lib/nuklear/src/nuklear_slider.c	/^nk_slide_int(struct nk_context *ctx, int min, int val, int max, int step)$/;"	f	typeref:typename:NK_API int
nk_slider_behavior	lib/nuklear/nuklear.h	/^nk_slider_behavior(nk_flags *state, struct nk_rect *logical_cursor,$/;"	f	typeref:typename:NK_LIB float
nk_slider_behavior	lib/nuklear/src/nuklear_slider.c	/^nk_slider_behavior(nk_flags *state, struct nk_rect *logical_cursor,$/;"	f	typeref:typename:NK_LIB float
nk_slider_float	lib/nuklear/nuklear.h	/^nk_slider_float(struct nk_context *ctx, float min_value, float *value, float max_value,$/;"	f	typeref:typename:NK_API int
nk_slider_float	lib/nuklear/src/nuklear_slider.c	/^nk_slider_float(struct nk_context *ctx, float min_value, float *value, float max_value,$/;"	f	typeref:typename:NK_API int
nk_slider_int	lib/nuklear/nuklear.h	/^nk_slider_int(struct nk_context *ctx, int min, int *val, int max, int step)$/;"	f	typeref:typename:NK_API int
nk_slider_int	lib/nuklear/src/nuklear_slider.c	/^nk_slider_int(struct nk_context *ctx, int min, int *val, int max, int step)$/;"	f	typeref:typename:NK_API int
nk_spacing	lib/nuklear/nuklear.h	/^nk_spacing(struct nk_context *ctx, int cols)$/;"	f	typeref:typename:NK_API void
nk_spacing	lib/nuklear/src/nuklear_widget.c	/^nk_spacing(struct nk_context *ctx, int cols)$/;"	f	typeref:typename:NK_API void
nk_sqrt	lib/nuklear/nuklear.h	/^nk_sqrt(float x)$/;"	f	typeref:typename:NK_LIB float
nk_sqrt	lib/nuklear/src/nuklear_math.c	/^nk_sqrt(float x)$/;"	f	typeref:typename:NK_LIB float
nk_start	lib/nuklear/nuklear.h	/^nk_start(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_start	lib/nuklear/src/nuklear_context.c	/^nk_start(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_start_buffer	lib/nuklear/nuklear.h	/^nk_start_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f	typeref:typename:NK_LIB void
nk_start_buffer	lib/nuklear/src/nuklear_context.c	/^nk_start_buffer(struct nk_context *ctx, struct nk_command_buffer *buffer)$/;"	f	typeref:typename:NK_LIB void
nk_start_popup	lib/nuklear/nuklear.h	/^nk_start_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_start_popup	lib/nuklear/src/nuklear_context.c	/^nk_start_popup(struct nk_context *ctx, struct nk_window *win)$/;"	f	typeref:typename:NK_LIB void
nk_stbi_image_to_xsurf	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_stbi_image_to_xsurf(unsigned char *data, int width, int height, int channels) {$/;"	f	typeref:typename:NK_INTERN struct nk_image
nk_str	lib/nuklear/nuklear.h	/^struct nk_str {$/;"	s
nk_str	lib/nuklear/src/nuklear.h	/^struct nk_str {$/;"	s
nk_str_append_str_char	lib/nuklear/nuklear.h	/^nk_str_append_str_char(struct nk_str *s, const char *str)$/;"	f	typeref:typename:NK_API int
nk_str_append_str_char	lib/nuklear/src/nuklear_string.c	/^nk_str_append_str_char(struct nk_str *s, const char *str)$/;"	f	typeref:typename:NK_API int
nk_str_append_str_runes	lib/nuklear/nuklear.h	/^nk_str_append_str_runes(struct nk_str *str, const nk_rune *runes)$/;"	f	typeref:typename:NK_API int
nk_str_append_str_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_append_str_runes(struct nk_str *str, const nk_rune *runes)$/;"	f	typeref:typename:NK_API int
nk_str_append_str_utf8	lib/nuklear/nuklear.h	/^nk_str_append_str_utf8(struct nk_str *str, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_append_str_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_append_str_utf8(struct nk_str *str, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_char	lib/nuklear/nuklear.h	/^nk_str_append_text_char(struct nk_str *s, const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_char	lib/nuklear/src/nuklear_string.c	/^nk_str_append_text_char(struct nk_str *s, const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_runes	lib/nuklear/nuklear.h	/^nk_str_append_text_runes(struct nk_str *str, const nk_rune *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_append_text_runes(struct nk_str *str, const nk_rune *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_utf8	lib/nuklear/nuklear.h	/^nk_str_append_text_utf8(struct nk_str *str, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_append_text_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_append_text_utf8(struct nk_str *str, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_at_char	lib/nuklear/nuklear.h	/^nk_str_at_char(struct nk_str *s, int pos)$/;"	f	typeref:typename:NK_API char *
nk_str_at_char	lib/nuklear/src/nuklear_string.c	/^nk_str_at_char(struct nk_str *s, int pos)$/;"	f	typeref:typename:NK_API char *
nk_str_at_char_const	lib/nuklear/nuklear.h	/^nk_str_at_char_const(const struct nk_str *s, int pos)$/;"	f	typeref:typename:NK_API const char *
nk_str_at_char_const	lib/nuklear/src/nuklear_string.c	/^nk_str_at_char_const(const struct nk_str *s, int pos)$/;"	f	typeref:typename:NK_API const char *
nk_str_at_const	lib/nuklear/nuklear.h	/^nk_str_at_const(const struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f	typeref:typename:NK_API const char *
nk_str_at_const	lib/nuklear/src/nuklear_string.c	/^nk_str_at_const(const struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f	typeref:typename:NK_API const char *
nk_str_at_rune	lib/nuklear/nuklear.h	/^nk_str_at_rune(struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f	typeref:typename:NK_API char *
nk_str_at_rune	lib/nuklear/src/nuklear_string.c	/^nk_str_at_rune(struct nk_str *str, int pos, nk_rune *unicode, int *len)$/;"	f	typeref:typename:NK_API char *
nk_str_clear	lib/nuklear/nuklear.h	/^nk_str_clear(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_clear	lib/nuklear/src/nuklear_string.c	/^nk_str_clear(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_delete_chars	lib/nuklear/nuklear.h	/^nk_str_delete_chars(struct nk_str *s, int pos, int len)$/;"	f	typeref:typename:NK_API void
nk_str_delete_chars	lib/nuklear/src/nuklear_string.c	/^nk_str_delete_chars(struct nk_str *s, int pos, int len)$/;"	f	typeref:typename:NK_API void
nk_str_delete_runes	lib/nuklear/nuklear.h	/^nk_str_delete_runes(struct nk_str *s, int pos, int len)$/;"	f	typeref:typename:NK_API void
nk_str_delete_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_delete_runes(struct nk_str *s, int pos, int len)$/;"	f	typeref:typename:NK_API void
nk_str_free	lib/nuklear/nuklear.h	/^nk_str_free(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_free	lib/nuklear/src/nuklear_string.c	/^nk_str_free(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_get	lib/nuklear/nuklear.h	/^nk_str_get(struct nk_str *s)$/;"	f	typeref:typename:NK_API char *
nk_str_get	lib/nuklear/src/nuklear_string.c	/^nk_str_get(struct nk_str *s)$/;"	f	typeref:typename:NK_API char *
nk_str_get_const	lib/nuklear/nuklear.h	/^nk_str_get_const(const struct nk_str *s)$/;"	f	typeref:typename:NK_API const char *
nk_str_get_const	lib/nuklear/src/nuklear_string.c	/^nk_str_get_const(const struct nk_str *s)$/;"	f	typeref:typename:NK_API const char *
nk_str_init	lib/nuklear/nuklear.h	/^nk_str_init(struct nk_str *str, const struct nk_allocator *alloc, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_str_init	lib/nuklear/src/nuklear_string.c	/^nk_str_init(struct nk_str *str, const struct nk_allocator *alloc, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_str_init_default	lib/nuklear/nuklear.h	/^nk_str_init_default(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_init_default	lib/nuklear/src/nuklear_string.c	/^nk_str_init_default(struct nk_str *str)$/;"	f	typeref:typename:NK_API void
nk_str_init_fixed	lib/nuklear/nuklear.h	/^nk_str_init_fixed(struct nk_str *str, void *memory, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_str_init_fixed	lib/nuklear/src/nuklear_string.c	/^nk_str_init_fixed(struct nk_str *str, void *memory, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_str_insert_at_char	lib/nuklear/nuklear.h	/^nk_str_insert_at_char(struct nk_str *s, int pos, const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_at_char	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_at_char(struct nk_str *s, int pos, const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_at_rune	lib/nuklear/nuklear.h	/^nk_str_insert_at_rune(struct nk_str *str, int pos, const char *cstr, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_at_rune	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_at_rune(struct nk_str *str, int pos, const char *cstr, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_char	lib/nuklear/nuklear.h	/^nk_str_insert_str_char(struct nk_str *str, int pos, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_char	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_str_char(struct nk_str *str, int pos, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_runes	lib/nuklear/nuklear.h	/^nk_str_insert_str_runes(struct nk_str *str, int pos, const nk_rune *runes)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_str_runes(struct nk_str *str, int pos, const nk_rune *runes)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_utf8	lib/nuklear/nuklear.h	/^nk_str_insert_str_utf8(struct nk_str *str, int pos, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_insert_str_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_str_utf8(struct nk_str *str, int pos, const char *text)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_char	lib/nuklear/nuklear.h	/^nk_str_insert_text_char(struct nk_str *str, int pos, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_char	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_text_char(struct nk_str *str, int pos, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_runes	lib/nuklear/nuklear.h	/^nk_str_insert_text_runes(struct nk_str *str, int pos, const nk_rune *runes, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_text_runes(struct nk_str *str, int pos, const nk_rune *runes, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_utf8	lib/nuklear/nuklear.h	/^nk_str_insert_text_utf8(struct nk_str *str, int pos, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_insert_text_utf8	lib/nuklear/src/nuklear_string.c	/^nk_str_insert_text_utf8(struct nk_str *str, int pos, const char *text, int len)$/;"	f	typeref:typename:NK_API int
nk_str_len	lib/nuklear/nuklear.h	/^nk_str_len(struct nk_str *s)$/;"	f	typeref:typename:NK_API int
nk_str_len	lib/nuklear/src/nuklear_string.c	/^nk_str_len(struct nk_str *s)$/;"	f	typeref:typename:NK_API int
nk_str_len_char	lib/nuklear/nuklear.h	/^nk_str_len_char(struct nk_str *s)$/;"	f	typeref:typename:NK_API int
nk_str_len_char	lib/nuklear/src/nuklear_string.c	/^nk_str_len_char(struct nk_str *s)$/;"	f	typeref:typename:NK_API int
nk_str_match_here	lib/nuklear/nuklear.h	/^nk_str_match_here(const char *regexp, const char *text)$/;"	f	typeref:typename:NK_INTERN int
nk_str_match_here	lib/nuklear/src/nuklear_util.c	/^nk_str_match_here(const char *regexp, const char *text)$/;"	f	typeref:typename:NK_INTERN int
nk_str_match_star	lib/nuklear/nuklear.h	/^nk_str_match_star(int c, const char *regexp, const char *text)$/;"	f	typeref:typename:NK_INTERN int
nk_str_match_star	lib/nuklear/src/nuklear_util.c	/^nk_str_match_star(int c, const char *regexp, const char *text)$/;"	f	typeref:typename:NK_INTERN int
nk_str_remove_chars	lib/nuklear/nuklear.h	/^nk_str_remove_chars(struct nk_str *s, int len)$/;"	f	typeref:typename:NK_API void
nk_str_remove_chars	lib/nuklear/src/nuklear_string.c	/^nk_str_remove_chars(struct nk_str *s, int len)$/;"	f	typeref:typename:NK_API void
nk_str_remove_runes	lib/nuklear/nuklear.h	/^nk_str_remove_runes(struct nk_str *str, int len)$/;"	f	typeref:typename:NK_API void
nk_str_remove_runes	lib/nuklear/src/nuklear_string.c	/^nk_str_remove_runes(struct nk_str *str, int len)$/;"	f	typeref:typename:NK_API void
nk_str_rune_at	lib/nuklear/nuklear.h	/^nk_str_rune_at(const struct nk_str *str, int pos)$/;"	f	typeref:typename:NK_API nk_rune
nk_str_rune_at	lib/nuklear/src/nuklear_string.c	/^nk_str_rune_at(const struct nk_str *str, int pos)$/;"	f	typeref:typename:NK_API nk_rune
nk_strfilter	lib/nuklear/nuklear.h	/^nk_strfilter(const char *text, const char *regexp)$/;"	f	typeref:typename:NK_API int
nk_strfilter	lib/nuklear/src/nuklear_util.c	/^nk_strfilter(const char *text, const char *regexp)$/;"	f	typeref:typename:NK_API int
nk_strfmt	lib/nuklear/nuklear.h	/^nk_strfmt(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_LIB int
nk_strfmt	lib/nuklear/src/nuklear_util.c	/^nk_strfmt(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_LIB int
nk_stricmp	lib/nuklear/nuklear.h	/^nk_stricmp(const char *s1, const char *s2)$/;"	f	typeref:typename:NK_API int
nk_stricmp	lib/nuklear/src/nuklear_util.c	/^nk_stricmp(const char *s1, const char *s2)$/;"	f	typeref:typename:NK_API int
nk_stricmpn	lib/nuklear/nuklear.h	/^nk_stricmpn(const char *s1, const char *s2, int n)$/;"	f	typeref:typename:NK_API int
nk_stricmpn	lib/nuklear/src/nuklear_util.c	/^nk_stricmpn(const char *s1, const char *s2, int n)$/;"	f	typeref:typename:NK_API int
nk_string_float_limit	lib/nuklear/nuklear.h	/^nk_string_float_limit(char *string, int prec)$/;"	f	typeref:typename:NK_LIB int
nk_string_float_limit	lib/nuklear/src/nuklear_util.c	/^nk_string_float_limit(char *string, int prec)$/;"	f	typeref:typename:NK_LIB int
nk_strlen	lib/nuklear/nuklear.h	/^nk_strlen(const char *str)$/;"	f	typeref:typename:NK_API int
nk_strlen	lib/nuklear/src/nuklear_util.c	/^nk_strlen(const char *str)$/;"	f	typeref:typename:NK_API int
nk_strmatch_fuzzy_string	lib/nuklear/nuklear.h	/^nk_strmatch_fuzzy_string(char const *str, char const *pattern, int *out_score)$/;"	f	typeref:typename:NK_API int
nk_strmatch_fuzzy_string	lib/nuklear/src/nuklear_util.c	/^nk_strmatch_fuzzy_string(char const *str, char const *pattern, int *out_score)$/;"	f	typeref:typename:NK_API int
nk_strmatch_fuzzy_text	lib/nuklear/nuklear.h	/^nk_strmatch_fuzzy_text(const char *str, int str_len,$/;"	f	typeref:typename:NK_API int
nk_strmatch_fuzzy_text	lib/nuklear/src/nuklear_util.c	/^nk_strmatch_fuzzy_text(const char *str, int str_len,$/;"	f	typeref:typename:NK_API int
nk_stroke_arc	lib/nuklear/nuklear.h	/^nk_stroke_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f	typeref:typename:NK_API void
nk_stroke_arc	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_arc(struct nk_command_buffer *b, float cx, float cy, float radius,$/;"	f	typeref:typename:NK_API void
nk_stroke_circle	lib/nuklear/nuklear.h	/^nk_stroke_circle(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_stroke_circle	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_circle(struct nk_command_buffer *b, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_stroke_curve	lib/nuklear/nuklear.h	/^nk_stroke_curve(struct nk_command_buffer *b, float ax, float ay,$/;"	f	typeref:typename:NK_API void
nk_stroke_curve	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_curve(struct nk_command_buffer *b, float ax, float ay,$/;"	f	typeref:typename:NK_API void
nk_stroke_line	lib/nuklear/nuklear.h	/^nk_stroke_line(struct nk_command_buffer *b, float x0, float y0,$/;"	f	typeref:typename:NK_API void
nk_stroke_line	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_line(struct nk_command_buffer *b, float x0, float y0,$/;"	f	typeref:typename:NK_API void
nk_stroke_polygon	lib/nuklear/nuklear.h	/^nk_stroke_polygon(struct nk_command_buffer *b,  float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_stroke_polygon	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_polygon(struct nk_command_buffer *b,  float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_stroke_polyline	lib/nuklear/nuklear.h	/^nk_stroke_polyline(struct nk_command_buffer *b, float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_stroke_polyline	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_polyline(struct nk_command_buffer *b, float *points, int point_count,$/;"	f	typeref:typename:NK_API void
nk_stroke_rect	lib/nuklear/nuklear.h	/^nk_stroke_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_stroke_rect	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_rect(struct nk_command_buffer *b, struct nk_rect rect,$/;"	f	typeref:typename:NK_API void
nk_stroke_triangle	lib/nuklear/nuklear.h	/^nk_stroke_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f	typeref:typename:NK_API void
nk_stroke_triangle	lib/nuklear/src/nuklear_draw.c	/^nk_stroke_triangle(struct nk_command_buffer *b, float x0, float y0, float x1,$/;"	f	typeref:typename:NK_API void
nk_strrev_ascii	lib/nuklear/nuklear.h	/^nk_strrev_ascii(char *s)$/;"	f	typeref:typename:NK_INTERN void
nk_strrev_ascii	lib/nuklear/src/nuklear_util.c	/^nk_strrev_ascii(char *s)$/;"	f	typeref:typename:NK_INTERN void
nk_strtod	lib/nuklear/nuklear.h	/^nk_strtod(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API double
nk_strtod	lib/nuklear/src/nuklear_util.c	/^nk_strtod(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API double
nk_strtof	lib/nuklear/nuklear.h	/^nk_strtof(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API float
nk_strtof	lib/nuklear/src/nuklear_util.c	/^nk_strtof(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API float
nk_strtoi	lib/nuklear/nuklear.h	/^nk_strtoi(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API int
nk_strtoi	lib/nuklear/src/nuklear_util.c	/^nk_strtoi(const char *str, const char **endptr)$/;"	f	typeref:typename:NK_API int
nk_style	lib/nuklear/nuklear.h	/^struct nk_style {$/;"	s
nk_style	lib/nuklear/src/nuklear.h	/^struct nk_style {$/;"	s
nk_style_button	lib/nuklear/nuklear.h	/^struct nk_style_button {$/;"	s
nk_style_button	lib/nuklear/src/nuklear.h	/^struct nk_style_button {$/;"	s
nk_style_chart	lib/nuklear/nuklear.h	/^struct nk_style_chart {$/;"	s
nk_style_chart	lib/nuklear/src/nuklear.h	/^struct nk_style_chart {$/;"	s
nk_style_colors	lib/nuklear/nuklear.h	/^enum nk_style_colors {$/;"	g
nk_style_colors	lib/nuklear/src/nuklear.h	/^enum nk_style_colors {$/;"	g
nk_style_combo	lib/nuklear/nuklear.h	/^struct nk_style_combo {$/;"	s
nk_style_combo	lib/nuklear/src/nuklear.h	/^struct nk_style_combo {$/;"	s
nk_style_cursor	lib/nuklear/nuklear.h	/^enum nk_style_cursor {$/;"	g
nk_style_cursor	lib/nuklear/src/nuklear.h	/^enum nk_style_cursor {$/;"	g
nk_style_default	lib/nuklear/nuklear.h	/^NK_API void nk_style_default(struct nk_context *ctx){nk_style_from_table(ctx, 0);}$/;"	f	typeref:typename:NK_API void
nk_style_default	lib/nuklear/src/nuklear_style.c	/^NK_API void nk_style_default(struct nk_context *ctx){nk_style_from_table(ctx, 0);}$/;"	f	typeref:typename:NK_API void
nk_style_edit	lib/nuklear/nuklear.h	/^struct nk_style_edit {$/;"	s
nk_style_edit	lib/nuklear/src/nuklear.h	/^struct nk_style_edit {$/;"	s
nk_style_from_table	lib/nuklear/nuklear.h	/^nk_style_from_table(struct nk_context *ctx, const struct nk_color *table)$/;"	f	typeref:typename:NK_API void
nk_style_from_table	lib/nuklear/src/nuklear_style.c	/^nk_style_from_table(struct nk_context *ctx, const struct nk_color *table)$/;"	f	typeref:typename:NK_API void
nk_style_get_color_by_name	lib/nuklear/nuklear.h	/^nk_style_get_color_by_name(enum nk_style_colors c)$/;"	f	typeref:typename:NK_API const char *
nk_style_get_color_by_name	lib/nuklear/src/nuklear_style.c	/^nk_style_get_color_by_name(enum nk_style_colors c)$/;"	f	typeref:typename:NK_API const char *
nk_style_header_align	lib/nuklear/nuklear.h	/^enum nk_style_header_align {$/;"	g
nk_style_header_align	lib/nuklear/src/nuklear.h	/^enum nk_style_header_align {$/;"	g
nk_style_hide_cursor	lib/nuklear/nuklear.h	/^nk_style_hide_cursor(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_style_hide_cursor	lib/nuklear/src/nuklear_style.c	/^nk_style_hide_cursor(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_style_item	lib/nuklear/nuklear.h	/^struct nk_style_item {$/;"	s
nk_style_item	lib/nuklear/src/nuklear.h	/^struct nk_style_item {$/;"	s
nk_style_item_color	lib/nuklear/nuklear.h	/^nk_style_item_color(struct nk_color col)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_color	lib/nuklear/src/nuklear_style.c	/^nk_style_item_color(struct nk_color col)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_data	lib/nuklear/nuklear.h	/^union nk_style_item_data {$/;"	u
nk_style_item_data	lib/nuklear/src/nuklear.h	/^union nk_style_item_data {$/;"	u
nk_style_item_hide	lib/nuklear/nuklear.h	/^nk_style_item_hide(void)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_hide	lib/nuklear/src/nuklear_style.c	/^nk_style_item_hide(void)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_image	lib/nuklear/nuklear.h	/^nk_style_item_image(struct nk_image img)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_image	lib/nuklear/src/nuklear_style.c	/^nk_style_item_image(struct nk_image img)$/;"	f	typeref:typename:NK_API struct nk_style_item
nk_style_item_type	lib/nuklear/nuklear.h	/^enum nk_style_item_type {$/;"	g
nk_style_item_type	lib/nuklear/src/nuklear.h	/^enum nk_style_item_type {$/;"	g
nk_style_load_all_cursors	lib/nuklear/nuklear.h	/^nk_style_load_all_cursors(struct nk_context *ctx, struct nk_cursor *cursors)$/;"	f	typeref:typename:NK_API void
nk_style_load_all_cursors	lib/nuklear/src/nuklear_style.c	/^nk_style_load_all_cursors(struct nk_context *ctx, struct nk_cursor *cursors)$/;"	f	typeref:typename:NK_API void
nk_style_load_cursor	lib/nuklear/nuklear.h	/^nk_style_load_cursor(struct nk_context *ctx, enum nk_style_cursor cursor,$/;"	f	typeref:typename:NK_API void
nk_style_load_cursor	lib/nuklear/src/nuklear_style.c	/^nk_style_load_cursor(struct nk_context *ctx, enum nk_style_cursor cursor,$/;"	f	typeref:typename:NK_API void
nk_style_pop_font	lib/nuklear/nuklear.h	/^nk_style_pop_font(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_style_pop_font	lib/nuklear/src/nuklear_style.c	/^nk_style_pop_font(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_style_progress	lib/nuklear/nuklear.h	/^struct nk_style_progress {$/;"	s
nk_style_progress	lib/nuklear/src/nuklear.h	/^struct nk_style_progress {$/;"	s
nk_style_property	lib/nuklear/nuklear.h	/^struct nk_style_property {$/;"	s
nk_style_property	lib/nuklear/src/nuklear.h	/^struct nk_style_property {$/;"	s
nk_style_push_font	lib/nuklear/nuklear.h	/^nk_style_push_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API int
nk_style_push_font	lib/nuklear/src/nuklear_style.c	/^nk_style_push_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API int
nk_style_scrollbar	lib/nuklear/nuklear.h	/^struct nk_style_scrollbar {$/;"	s
nk_style_scrollbar	lib/nuklear/src/nuklear.h	/^struct nk_style_scrollbar {$/;"	s
nk_style_selectable	lib/nuklear/nuklear.h	/^struct nk_style_selectable {$/;"	s
nk_style_selectable	lib/nuklear/src/nuklear.h	/^struct nk_style_selectable {$/;"	s
nk_style_set_font	lib/nuklear/nuklear.h	/^nk_style_set_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API void
nk_style_set_font	lib/nuklear/src/nuklear_style.c	/^nk_style_set_font(struct nk_context *ctx, const struct nk_user_font *font)$/;"	f	typeref:typename:NK_API void
nk_style_show_cursor	lib/nuklear/nuklear.h	/^nk_style_show_cursor(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_style_show_cursor	lib/nuklear/src/nuklear_style.c	/^nk_style_show_cursor(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_style_slider	lib/nuklear/nuklear.h	/^struct nk_style_slider {$/;"	s
nk_style_slider	lib/nuklear/src/nuklear.h	/^struct nk_style_slider {$/;"	s
nk_style_tab	lib/nuklear/nuklear.h	/^struct nk_style_tab {$/;"	s
nk_style_tab	lib/nuklear/src/nuklear.h	/^struct nk_style_tab {$/;"	s
nk_style_text	lib/nuklear/nuklear.h	/^struct nk_style_text {$/;"	s
nk_style_text	lib/nuklear/src/nuklear.h	/^struct nk_style_text {$/;"	s
nk_style_toggle	lib/nuklear/nuklear.h	/^struct nk_style_toggle {$/;"	s
nk_style_toggle	lib/nuklear/src/nuklear.h	/^struct nk_style_toggle {$/;"	s
nk_style_window	lib/nuklear/nuklear.h	/^struct nk_style_window {$/;"	s
nk_style_window	lib/nuklear/src/nuklear.h	/^struct nk_style_window {$/;"	s
nk_style_window_header	lib/nuklear/nuklear.h	/^struct nk_style_window_header {$/;"	s
nk_style_window_header	lib/nuklear/src/nuklear.h	/^struct nk_style_window_header {$/;"	s
nk_subimage_handle	lib/nuklear/nuklear.h	/^nk_subimage_handle(nk_handle handle, unsigned short w, unsigned short h,$/;"	f	typeref:typename:NK_API struct nk_image
nk_subimage_handle	lib/nuklear/src/nuklear_image.c	/^nk_subimage_handle(nk_handle handle, unsigned short w, unsigned short h,$/;"	f	typeref:typename:NK_API struct nk_image
nk_subimage_id	lib/nuklear/nuklear.h	/^nk_subimage_id(int id, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_image
nk_subimage_id	lib/nuklear/src/nuklear_image.c	/^nk_subimage_id(int id, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_image
nk_subimage_ptr	lib/nuklear/nuklear.h	/^nk_subimage_ptr(void *ptr, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_image
nk_subimage_ptr	lib/nuklear/src/nuklear_image.c	/^nk_subimage_ptr(void *ptr, unsigned short w, unsigned short h, struct nk_rect r)$/;"	f	typeref:typename:NK_API struct nk_image
nk_symbol_type	lib/nuklear/nuklear.h	/^enum nk_symbol_type {$/;"	g
nk_symbol_type	lib/nuklear/src/nuklear.h	/^enum nk_symbol_type {$/;"	g
nk_table	lib/nuklear/nuklear.h	/^struct nk_table {$/;"	s
nk_table	lib/nuklear/src/nuklear.h	/^struct nk_table {$/;"	s
nk_text	lib/nuklear/nuklear.h	/^nk_text(struct nk_context *ctx, const char *str, int len, nk_flags alignment)$/;"	f	typeref:typename:NK_API void
nk_text	lib/nuklear/nuklear.h	/^struct nk_text {$/;"	s
nk_text	lib/nuklear/src/nuklear_internal.h	/^struct nk_text {$/;"	s
nk_text	lib/nuklear/src/nuklear_text.c	/^nk_text(struct nk_context *ctx, const char *str, int len, nk_flags alignment)$/;"	f	typeref:typename:NK_API void
nk_text_align	lib/nuklear/nuklear.h	/^enum nk_text_align {$/;"	g
nk_text_align	lib/nuklear/src/nuklear.h	/^enum nk_text_align {$/;"	g
nk_text_alignment	lib/nuklear/nuklear.h	/^enum nk_text_alignment {$/;"	g
nk_text_alignment	lib/nuklear/src/nuklear.h	/^enum nk_text_alignment {$/;"	g
nk_text_calculate_text_bounds	lib/nuklear/nuklear.h	/^nk_text_calculate_text_bounds(const struct nk_user_font *font,$/;"	f	typeref:typename:NK_LIB struct nk_vec2
nk_text_calculate_text_bounds	lib/nuklear/src/nuklear_util.c	/^nk_text_calculate_text_bounds(const struct nk_user_font *font,$/;"	f	typeref:typename:NK_LIB struct nk_vec2
nk_text_clamp	lib/nuklear/nuklear.h	/^nk_text_clamp(const struct nk_user_font *font, const char *text,$/;"	f	typeref:typename:NK_LIB int
nk_text_clamp	lib/nuklear/src/nuklear_util.c	/^nk_text_clamp(const struct nk_user_font *font, const char *text,$/;"	f	typeref:typename:NK_LIB int
nk_text_colored	lib/nuklear/nuklear.h	/^nk_text_colored(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API void
nk_text_colored	lib/nuklear/src/nuklear_text.c	/^nk_text_colored(struct nk_context *ctx, const char *str, int len,$/;"	f	typeref:typename:NK_API void
nk_text_edit	lib/nuklear/nuklear.h	/^struct nk_text_edit {$/;"	s
nk_text_edit	lib/nuklear/src/nuklear.h	/^struct nk_text_edit {$/;"	s
nk_text_edit_mode	lib/nuklear/nuklear.h	/^enum nk_text_edit_mode {$/;"	g
nk_text_edit_mode	lib/nuklear/src/nuklear.h	/^enum nk_text_edit_mode {$/;"	g
nk_text_edit_row	lib/nuklear/nuklear.h	/^struct nk_text_edit_row {$/;"	s
nk_text_edit_row	lib/nuklear/src/nuklear_text_editor.c	/^struct nk_text_edit_row {$/;"	s	file:
nk_text_edit_type	lib/nuklear/nuklear.h	/^enum nk_text_edit_type {$/;"	g
nk_text_edit_type	lib/nuklear/src/nuklear.h	/^enum nk_text_edit_type {$/;"	g
nk_text_find	lib/nuklear/nuklear.h	/^struct nk_text_find {$/;"	s
nk_text_find	lib/nuklear/src/nuklear_text_editor.c	/^struct nk_text_find {$/;"	s	file:
nk_text_undo_record	lib/nuklear/nuklear.h	/^struct nk_text_undo_record {$/;"	s
nk_text_undo_record	lib/nuklear/src/nuklear.h	/^struct nk_text_undo_record {$/;"	s
nk_text_undo_state	lib/nuklear/nuklear.h	/^struct nk_text_undo_state {$/;"	s
nk_text_undo_state	lib/nuklear/src/nuklear.h	/^struct nk_text_undo_state {$/;"	s
nk_text_width_f	lib/nuklear/nuklear.h	/^typedef float(*nk_text_width_f)(nk_handle, float h, const char*, int len);$/;"	t	typeref:typename:float (*)(nk_handle,float h,const char *,int len)
nk_text_width_f	lib/nuklear/src/nuklear.h	/^typedef float(*nk_text_width_f)(nk_handle, float h, const char*, int len);$/;"	t	typeref:typename:float (*)(nk_handle,float h,const char *,int len)
nk_text_wrap	lib/nuklear/nuklear.h	/^nk_text_wrap(struct nk_context *ctx, const char *str, int len)$/;"	f	typeref:typename:NK_API void
nk_text_wrap	lib/nuklear/src/nuklear_text.c	/^nk_text_wrap(struct nk_context *ctx, const char *str, int len)$/;"	f	typeref:typename:NK_API void
nk_text_wrap_colored	lib/nuklear/nuklear.h	/^nk_text_wrap_colored(struct nk_context *ctx, const char *str,$/;"	f	typeref:typename:NK_API void
nk_text_wrap_colored	lib/nuklear/src/nuklear_text.c	/^nk_text_wrap_colored(struct nk_context *ctx, const char *str,$/;"	f	typeref:typename:NK_API void
nk_textedit_clamp	lib/nuklear/nuklear.h	/^nk_textedit_clamp(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_clamp	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_clamp(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_clear_state	lib/nuklear/nuklear.h	/^nk_textedit_clear_state(struct nk_text_edit *state, enum nk_text_edit_type type,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_clear_state	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_clear_state(struct nk_text_edit *state, enum nk_text_edit_type type,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_click	lib/nuklear/nuklear.h	/^nk_textedit_click(struct nk_text_edit *state, float x, float y,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_click	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_click(struct nk_text_edit *state, float x, float y,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_create_undo_record	lib/nuklear/nuklear.h	/^nk_textedit_create_undo_record(struct nk_text_undo_state *state, int numchars)$/;"	f	typeref:typename:NK_INTERN struct nk_text_undo_record *
nk_textedit_create_undo_record	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_create_undo_record(struct nk_text_undo_state *state, int numchars)$/;"	f	typeref:typename:NK_INTERN struct nk_text_undo_record *
nk_textedit_createundo	lib/nuklear/nuklear.h	/^nk_textedit_createundo(struct nk_text_undo_state *state, int pos,$/;"	f	typeref:typename:NK_INTERN nk_rune *
nk_textedit_createundo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_createundo(struct nk_text_undo_state *state, int pos,$/;"	f	typeref:typename:NK_INTERN nk_rune *
nk_textedit_cut	lib/nuklear/nuklear.h	/^nk_textedit_cut(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API int
nk_textedit_cut	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_cut(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API int
nk_textedit_delete	lib/nuklear/nuklear.h	/^nk_textedit_delete(struct nk_text_edit *state, int where, int len)$/;"	f	typeref:typename:NK_API void
nk_textedit_delete	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_delete(struct nk_text_edit *state, int where, int len)$/;"	f	typeref:typename:NK_API void
nk_textedit_delete_selection	lib/nuklear/nuklear.h	/^nk_textedit_delete_selection(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_delete_selection	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_delete_selection(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_discard_redo	lib/nuklear/nuklear.h	/^nk_textedit_discard_redo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_discard_redo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_discard_redo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_discard_undo	lib/nuklear/nuklear.h	/^nk_textedit_discard_undo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_discard_undo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_discard_undo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_drag	lib/nuklear/nuklear.h	/^nk_textedit_drag(struct nk_text_edit *state, float x, float y,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_drag	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_drag(struct nk_text_edit *state, float x, float y,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_find_charpos	lib/nuklear/nuklear.h	/^nk_textedit_find_charpos(struct nk_text_find *find, struct nk_text_edit *state,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_find_charpos	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_find_charpos(struct nk_text_find *find, struct nk_text_edit *state,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_flush_redo	lib/nuklear/nuklear.h	/^nk_textedit_flush_redo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_flush_redo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_flush_redo(struct nk_text_undo_state *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_free	lib/nuklear/nuklear.h	/^nk_textedit_free(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_free	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_free(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_get_width	lib/nuklear/nuklear.h	/^nk_textedit_get_width(const struct nk_text_edit *edit, int line_start, int char_id,$/;"	f	typeref:typename:NK_INTERN float
nk_textedit_get_width	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_get_width(const struct nk_text_edit *edit, int line_start, int char_id,$/;"	f	typeref:typename:NK_INTERN float
nk_textedit_init	lib/nuklear/nuklear.h	/^nk_textedit_init(struct nk_text_edit *state, struct nk_allocator *alloc, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_textedit_init	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_init(struct nk_text_edit *state, struct nk_allocator *alloc, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_textedit_init_default	lib/nuklear/nuklear.h	/^nk_textedit_init_default(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_init_default	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_init_default(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_init_fixed	lib/nuklear/nuklear.h	/^nk_textedit_init_fixed(struct nk_text_edit *state, void *memory, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_textedit_init_fixed	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_init_fixed(struct nk_text_edit *state, void *memory, nk_size size)$/;"	f	typeref:typename:NK_API void
nk_textedit_key	lib/nuklear/nuklear.h	/^nk_textedit_key(struct nk_text_edit *state, enum nk_keys key, int shift_mod,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_key	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_key(struct nk_text_edit *state, enum nk_keys key, int shift_mod,$/;"	f	typeref:typename:NK_LIB void
nk_textedit_layout_row	lib/nuklear/nuklear.h	/^nk_textedit_layout_row(struct nk_text_edit_row *r, struct nk_text_edit *edit,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_layout_row	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_layout_row(struct nk_text_edit_row *r, struct nk_text_edit *edit,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_locate_coord	lib/nuklear/nuklear.h	/^nk_textedit_locate_coord(struct nk_text_edit *edit, float x, float y,$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_locate_coord	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_locate_coord(struct nk_text_edit *edit, float x, float y,$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_makeundo_delete	lib/nuklear/nuklear.h	/^nk_textedit_makeundo_delete(struct nk_text_edit *state, int where, int length)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_makeundo_delete	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_makeundo_delete(struct nk_text_edit *state, int where, int length)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_makeundo_insert	lib/nuklear/nuklear.h	/^nk_textedit_makeundo_insert(struct nk_text_edit *state, int where, int length)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_makeundo_insert	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_makeundo_insert(struct nk_text_edit *state, int where, int length)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_makeundo_replace	lib/nuklear/nuklear.h	/^nk_textedit_makeundo_replace(struct nk_text_edit *state, int where,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_makeundo_replace	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_makeundo_replace(struct nk_text_edit *state, int where,$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_first	lib/nuklear/nuklear.h	/^nk_textedit_move_to_first(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_first	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_first(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_last	lib/nuklear/nuklear.h	/^nk_textedit_move_to_last(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_last	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_last(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_move_to_word_next	lib/nuklear/nuklear.h	/^nk_textedit_move_to_word_next(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_move_to_word_next	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_word_next(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_move_to_word_previous	lib/nuklear/nuklear.h	/^nk_textedit_move_to_word_previous(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_move_to_word_previous	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_move_to_word_previous(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN int
nk_textedit_paste	lib/nuklear/nuklear.h	/^nk_textedit_paste(struct nk_text_edit *state, char const *ctext, int len)$/;"	f	typeref:typename:NK_API int
nk_textedit_paste	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_paste(struct nk_text_edit *state, char const *ctext, int len)$/;"	f	typeref:typename:NK_API int
nk_textedit_prep_selection_at_cursor	lib/nuklear/nuklear.h	/^nk_textedit_prep_selection_at_cursor(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_prep_selection_at_cursor	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_prep_selection_at_cursor(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_redo	lib/nuklear/nuklear.h	/^nk_textedit_redo(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_redo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_redo(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_select_all	lib/nuklear/nuklear.h	/^nk_textedit_select_all(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_select_all	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_select_all(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_sortselection	lib/nuklear/nuklear.h	/^nk_textedit_sortselection(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_sortselection	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_sortselection(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_INTERN void
nk_textedit_text	lib/nuklear/nuklear.h	/^nk_textedit_text(struct nk_text_edit *state, const char *text, int total_len)$/;"	f	typeref:typename:NK_API void
nk_textedit_text	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_text(struct nk_text_edit *state, const char *text, int total_len)$/;"	f	typeref:typename:NK_API void
nk_textedit_undo	lib/nuklear/nuklear.h	/^nk_textedit_undo(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_textedit_undo	lib/nuklear/src/nuklear_text_editor.c	/^nk_textedit_undo(struct nk_text_edit *state)$/;"	f	typeref:typename:NK_API void
nk_timestamp	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_timestamp(void)$/;"	f	typeref:typename:NK_INTERN long
nk_timestamp	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_timestamp(void)$/;"	f	typeref:typename:NK_INTERN long
nk_timestamp	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_timestamp(void)$/;"	f	typeref:typename:NK_INTERN long
nk_to_lower	lib/nuklear/nuklear.h	/^NK_LIB int nk_to_lower(int c) {return (c >= 'A' && c <= 'Z') ? (c - ('a' + 'A')) : c;}$/;"	f	typeref:typename:NK_LIB int
nk_to_lower	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_to_lower(int c) {return (c >= 'A' && c <= 'Z') ? (c - ('a' + 'A')) : c;}$/;"	f	typeref:typename:NK_LIB int
nk_to_upper	lib/nuklear/nuklear.h	/^NK_LIB int nk_to_upper(int c) {return (c >= 'a' && c <= 'z') ? (c - ('a' - 'A')) : c;}$/;"	f	typeref:typename:NK_LIB int
nk_to_upper	lib/nuklear/src/nuklear_util.c	/^NK_LIB int nk_to_upper(int c) {return (c >= 'a' && c <= 'z') ? (c - ('a' - 'A')) : c;}$/;"	f	typeref:typename:NK_LIB int
nk_toggle_behavior	lib/nuklear/nuklear.h	/^nk_toggle_behavior(const struct nk_input *in, struct nk_rect select,$/;"	f	typeref:typename:NK_LIB int
nk_toggle_behavior	lib/nuklear/src/nuklear_toggle.c	/^nk_toggle_behavior(const struct nk_input *in, struct nk_rect select,$/;"	f	typeref:typename:NK_LIB int
nk_toggle_type	lib/nuklear/nuklear.h	/^enum nk_toggle_type {$/;"	g
nk_toggle_type	lib/nuklear/src/nuklear_internal.h	/^enum nk_toggle_type {$/;"	g
nk_tooltip	lib/nuklear/nuklear.h	/^nk_tooltip(struct nk_context *ctx, const char *text)$/;"	f	typeref:typename:NK_API void
nk_tooltip	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltip(struct nk_context *ctx, const char *text)$/;"	f	typeref:typename:NK_API void
nk_tooltip_begin	lib/nuklear/nuklear.h	/^nk_tooltip_begin(struct nk_context *ctx, float width)$/;"	f	typeref:typename:NK_API int
nk_tooltip_begin	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltip_begin(struct nk_context *ctx, float width)$/;"	f	typeref:typename:NK_API int
nk_tooltip_end	lib/nuklear/nuklear.h	/^nk_tooltip_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tooltip_end	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltip_end(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tooltipf	lib/nuklear/nuklear.h	/^nk_tooltipf(struct nk_context *ctx, const char *fmt, ...)$/;"	f	typeref:typename:NK_API void
nk_tooltipf	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltipf(struct nk_context *ctx, const char *fmt, ...)$/;"	f	typeref:typename:NK_API void
nk_tooltipfv	lib/nuklear/nuklear.h	/^nk_tooltipfv(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_tooltipfv	lib/nuklear/src/nuklear_tooltip.c	/^nk_tooltipfv(struct nk_context *ctx, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_API void
nk_tree_base	lib/nuklear/nuklear.h	/^nk_tree_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_base	lib/nuklear/nuklear.h	/^nk_tree_element_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_image_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_element_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_element_image_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_element_image_push_hashed_base	lib/nuklear/nuklear.h	/^nk_tree_element_image_push_hashed_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_image_push_hashed_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_image_push_hashed_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_element_pop	lib/nuklear/nuklear.h	/^nk_tree_element_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_element_pop	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_element_push	lib/nuklear/nuklear.h	/^#define nk_tree_element_push(/;"	d
nk_tree_element_push	lib/nuklear/src/nuklear.h	/^#define nk_tree_element_push(/;"	d
nk_tree_element_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_element_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_element_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_element_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_element_push_id	lib/nuklear/nuklear.h	/^#define nk_tree_element_push_id(/;"	d
nk_tree_element_push_id	lib/nuklear/src/nuklear.h	/^#define nk_tree_element_push_id(/;"	d
nk_tree_image_push	lib/nuklear/nuklear.h	/^#define nk_tree_image_push(/;"	d
nk_tree_image_push	lib/nuklear/src/nuklear.h	/^#define nk_tree_image_push(/;"	d
nk_tree_image_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_image_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_image_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_image_push_id	lib/nuklear/nuklear.h	/^#define nk_tree_image_push_id(/;"	d
nk_tree_image_push_id	lib/nuklear/src/nuklear.h	/^#define nk_tree_image_push_id(/;"	d
nk_tree_pop	lib/nuklear/nuklear.h	/^nk_tree_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_pop	lib/nuklear/src/nuklear_tree.c	/^nk_tree_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_push	lib/nuklear/nuklear.h	/^#define nk_tree_push(/;"	d
nk_tree_push	lib/nuklear/src/nuklear.h	/^#define nk_tree_push(/;"	d
nk_tree_push_hashed	lib/nuklear/nuklear.h	/^nk_tree_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_push_hashed	lib/nuklear/src/nuklear_tree.c	/^nk_tree_push_hashed(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_push_id	lib/nuklear/nuklear.h	/^#define nk_tree_push_id(/;"	d
nk_tree_push_id	lib/nuklear/src/nuklear.h	/^#define nk_tree_push_id(/;"	d
nk_tree_state_base	lib/nuklear/nuklear.h	/^nk_tree_state_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_state_base	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_base(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_INTERN int
nk_tree_state_image_push	lib/nuklear/nuklear.h	/^nk_tree_state_image_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_state_image_push	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_image_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_state_pop	lib/nuklear/nuklear.h	/^nk_tree_state_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_state_pop	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_pop(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API void
nk_tree_state_push	lib/nuklear/nuklear.h	/^nk_tree_state_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_state_push	lib/nuklear/src/nuklear_tree.c	/^nk_tree_state_push(struct nk_context *ctx, enum nk_tree_type type,$/;"	f	typeref:typename:NK_API int
nk_tree_type	lib/nuklear/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	g
nk_tree_type	lib/nuklear/src/nuklear.h	/^enum nk_tree_type       {NK_TREE_NODE, NK_TREE_TAB};$/;"	g
nk_triangle_from_direction	lib/nuklear/nuklear.h	/^nk_triangle_from_direction(struct nk_vec2 *result, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_triangle_from_direction	lib/nuklear/src/nuklear_math.c	/^nk_triangle_from_direction(struct nk_vec2 *result, struct nk_rect r,$/;"	f	typeref:typename:NK_API void
nk_true	lib/nuklear/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anond7ed09940103
nk_true	lib/nuklear/src/nuklear.h	/^enum {nk_false, nk_true};$/;"	e	enum:__anon8fa426eb0103
nk_ttBYTE	lib/nuklear/nuklear.h	/^#define nk_ttBYTE(/;"	d
nk_ttBYTE	lib/nuklear/src/nuklear_font.c	/^#define nk_ttBYTE(/;"	d	file:
nk_ttCHAR	lib/nuklear/nuklear.h	/^#define nk_ttCHAR(/;"	d
nk_ttCHAR	lib/nuklear/src/nuklear_font.c	/^#define nk_ttCHAR(/;"	d	file:
nk_ttLONG	lib/nuklear/nuklear.h	/^   #define nk_ttLONG(/;"	d
nk_ttLONG	lib/nuklear/src/nuklear_font.c	/^   #define nk_ttLONG(/;"	d	file:
nk_ttSHORT	lib/nuklear/nuklear.h	/^    static nk_short nk_ttSHORT(const nk_byte *p)   { return (nk_short)(p[0]*256 + p[1]); }$/;"	f	typeref:typename:nk_short
nk_ttSHORT	lib/nuklear/nuklear.h	/^   #define nk_ttSHORT(/;"	d
nk_ttSHORT	lib/nuklear/src/nuklear_font.c	/^    static nk_short nk_ttSHORT(const nk_byte *p)   { return (nk_short)(p[0]*256 + p[1]); }$/;"	f	typeref:typename:nk_short	file:
nk_ttSHORT	lib/nuklear/src/nuklear_font.c	/^   #define nk_ttSHORT(/;"	d	file:
nk_ttULONG	lib/nuklear/nuklear.h	/^    static nk_uint nk_ttULONG(const nk_byte *p)  { return (nk_uint)((p[0]<<24) + (p[1]<<16) + (p/;"	f	typeref:typename:nk_uint
nk_ttULONG	lib/nuklear/nuklear.h	/^   #define nk_ttULONG(/;"	d
nk_ttULONG	lib/nuklear/src/nuklear_font.c	/^    static nk_uint nk_ttULONG(const nk_byte *p)  { return (nk_uint)((p[0]<<24) + (p[1]<<16) + (p/;"	f	typeref:typename:nk_uint	file:
nk_ttULONG	lib/nuklear/src/nuklear_font.c	/^   #define nk_ttULONG(/;"	d	file:
nk_ttUSHORT	lib/nuklear/nuklear.h	/^    static nk_ushort nk_ttUSHORT(const nk_byte *p) { return (nk_ushort)(p[0]*256 + p[1]); }$/;"	f	typeref:typename:nk_ushort
nk_ttUSHORT	lib/nuklear/nuklear.h	/^   #define nk_ttUSHORT(/;"	d
nk_ttUSHORT	lib/nuklear/src/nuklear_font.c	/^    static nk_ushort nk_ttUSHORT(const nk_byte *p) { return (nk_ushort)(p[0]*256 + p[1]); }$/;"	f	typeref:typename:nk_ushort	file:
nk_ttUSHORT	lib/nuklear/src/nuklear_font.c	/^   #define nk_ttUSHORT(/;"	d	file:
nk_tt_FindGlyphIndex	lib/nuklear/nuklear.h	/^nk_tt_FindGlyphIndex(const struct nk_tt_fontinfo *info, int unicode_codepoint)$/;"	f	typeref:typename:NK_INTERN int
nk_tt_FindGlyphIndex	lib/nuklear/src/nuklear_font.c	/^nk_tt_FindGlyphIndex(const struct nk_tt_fontinfo *info, int unicode_codepoint)$/;"	f	typeref:typename:NK_INTERN int
nk_tt_FlattenCurves	lib/nuklear/nuklear.h	/^nk_tt_FlattenCurves(struct nk_tt_vertex *vertices, int num_verts,$/;"	f	typeref:typename:NK_INTERN struct nk_tt__point *
nk_tt_FlattenCurves	lib/nuklear/src/nuklear_font.c	/^nk_tt_FlattenCurves(struct nk_tt_vertex *vertices, int num_verts,$/;"	f	typeref:typename:NK_INTERN struct nk_tt__point *
nk_tt_GetFontVMetrics	lib/nuklear/nuklear.h	/^nk_tt_GetFontVMetrics(const struct nk_tt_fontinfo *info,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetFontVMetrics	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetFontVMetrics(const struct nk_tt_fontinfo *info,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBitmapBox	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphBitmapBox(const struct nk_tt_fontinfo *font, int glyph,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBitmapBox	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphBitmapBox(const struct nk_tt_fontinfo *font, int glyph,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBitmapBoxSubpixel	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphBitmapBoxSubpixel(const struct nk_tt_fontinfo *font,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBitmapBoxSubpixel	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphBitmapBoxSubpixel(const struct nk_tt_fontinfo *font,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphBox	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphBox(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_GetGlyphBox	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphBox(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_GetGlyphHMetrics	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphHMetrics(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphHMetrics	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphHMetrics(const struct nk_tt_fontinfo *info, int glyph_index,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetGlyphShape	lib/nuklear/nuklear.h	/^nk_tt_GetGlyphShape(const struct nk_tt_fontinfo *info, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_GetGlyphShape	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetGlyphShape(const struct nk_tt_fontinfo *info, struct nk_allocator *alloc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_GetPackedQuad	lib/nuklear/nuklear.h	/^nk_tt_GetPackedQuad(struct nk_tt_packedchar *chardata, int pw, int ph,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_GetPackedQuad	lib/nuklear/src/nuklear_font.c	/^nk_tt_GetPackedQuad(struct nk_tt_packedchar *chardata, int pw, int ph,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_InitFont	lib/nuklear/nuklear.h	/^nk_tt_InitFont(struct nk_tt_fontinfo *info, const unsigned char *data2, int fontstart)$/;"	f	typeref:typename:NK_INTERN int
nk_tt_InitFont	lib/nuklear/src/nuklear_font.c	/^nk_tt_InitFont(struct nk_tt_fontinfo *info, const unsigned char *data2, int fontstart)$/;"	f	typeref:typename:NK_INTERN int
nk_tt_MakeGlyphBitmapSubpixel	lib/nuklear/nuklear.h	/^nk_tt_MakeGlyphBitmapSubpixel(const struct nk_tt_fontinfo *info, unsigned char *output,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_MakeGlyphBitmapSubpixel	lib/nuklear/src/nuklear_font.c	/^nk_tt_MakeGlyphBitmapSubpixel(const struct nk_tt_fontinfo *info, unsigned char *output,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_PackBegin	lib/nuklear/nuklear.h	/^nk_tt_PackBegin(struct nk_tt_pack_context *spc, unsigned char *pixels,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackBegin	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackBegin(struct nk_tt_pack_context *spc, unsigned char *pixels,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackEnd	lib/nuklear/nuklear.h	/^nk_tt_PackEnd(struct nk_tt_pack_context *spc, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_INTERN void
nk_tt_PackEnd	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackEnd(struct nk_tt_pack_context *spc, struct nk_allocator *alloc)$/;"	f	typeref:typename:NK_INTERN void
nk_tt_PackFontRangesGatherRects	lib/nuklear/nuklear.h	/^nk_tt_PackFontRangesGatherRects(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackFontRangesGatherRects	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackFontRangesGatherRects(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackFontRangesRenderIntoRects	lib/nuklear/nuklear.h	/^nk_tt_PackFontRangesRenderIntoRects(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackFontRangesRenderIntoRects	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackFontRangesRenderIntoRects(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN int
nk_tt_PackSetOversampling	lib/nuklear/nuklear.h	/^nk_tt_PackSetOversampling(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_PackSetOversampling	lib/nuklear/src/nuklear_font.c	/^nk_tt_PackSetOversampling(struct nk_tt_pack_context *spc,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_Rasterize	lib/nuklear/nuklear.h	/^nk_tt_Rasterize(struct nk_tt__bitmap *result, float flatness_in_pixels,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_Rasterize	lib/nuklear/src/nuklear_font.c	/^nk_tt_Rasterize(struct nk_tt__bitmap *result, float flatness_in_pixels,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_ScaleForMappingEmToPixels	lib/nuklear/nuklear.h	/^nk_tt_ScaleForMappingEmToPixels(const struct nk_tt_fontinfo *info, float pixels)$/;"	f	typeref:typename:NK_INTERN float
nk_tt_ScaleForMappingEmToPixels	lib/nuklear/src/nuklear_font.c	/^nk_tt_ScaleForMappingEmToPixels(const struct nk_tt_fontinfo *info, float pixels)$/;"	f	typeref:typename:NK_INTERN float
nk_tt_ScaleForPixelHeight	lib/nuklear/nuklear.h	/^nk_tt_ScaleForPixelHeight(const struct nk_tt_fontinfo *info, float height)$/;"	f	typeref:typename:NK_INTERN float
nk_tt_ScaleForPixelHeight	lib/nuklear/src/nuklear_font.c	/^nk_tt_ScaleForPixelHeight(const struct nk_tt_fontinfo *info, float height)$/;"	f	typeref:typename:NK_INTERN float
nk_tt__GetGlyfOffset	lib/nuklear/nuklear.h	/^nk_tt__GetGlyfOffset(const struct nk_tt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:NK_INTERN int
nk_tt__GetGlyfOffset	lib/nuklear/src/nuklear_font.c	/^nk_tt__GetGlyfOffset(const struct nk_tt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:NK_INTERN int
nk_tt__active_edge	lib/nuklear/nuklear.h	/^struct nk_tt__active_edge {$/;"	s
nk_tt__active_edge	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__active_edge {$/;"	s	file:
nk_tt__add_point	lib/nuklear/nuklear.h	/^nk_tt__add_point(struct nk_tt__point *points, int n, float x, float y)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__add_point	lib/nuklear/src/nuklear_font.c	/^nk_tt__add_point(struct nk_tt__point *points, int n, float x, float y)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__bitmap	lib/nuklear/nuklear.h	/^struct nk_tt__bitmap{$/;"	s
nk_tt__bitmap	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__bitmap{$/;"	s	file:
nk_tt__close_shape	lib/nuklear/nuklear.h	/^nk_tt__close_shape(struct nk_tt_vertex *vertices, int num_vertices, int was_off,$/;"	f	typeref:typename:NK_INTERN int
nk_tt__close_shape	lib/nuklear/src/nuklear_font.c	/^nk_tt__close_shape(struct nk_tt_vertex *vertices, int num_vertices, int was_off,$/;"	f	typeref:typename:NK_INTERN int
nk_tt__edge	lib/nuklear/nuklear.h	/^struct nk_tt__edge {$/;"	s
nk_tt__edge	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__edge {$/;"	s	file:
nk_tt__fill_active_edges_new	lib/nuklear/nuklear.h	/^nk_tt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__fill_active_edges_new	lib/nuklear/src/nuklear_font.c	/^nk_tt__fill_active_edges_new(float *scanline, float *scanline_fill, int len,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__find_table	lib/nuklear/nuklear.h	/^nk_tt__find_table(const nk_byte *data, nk_uint fontstart, const char *tag)$/;"	f	typeref:typename:NK_INTERN nk_uint
nk_tt__find_table	lib/nuklear/src/nuklear_font.c	/^nk_tt__find_table(const nk_byte *data, nk_uint fontstart, const char *tag)$/;"	f	typeref:typename:NK_INTERN nk_uint
nk_tt__h_prefilter	lib/nuklear/nuklear.h	/^nk_tt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__h_prefilter	lib/nuklear/src/nuklear_font.c	/^nk_tt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__handle_clipped_edge	lib/nuklear/nuklear.h	/^nk_tt__handle_clipped_edge(float *scanline, int x, struct nk_tt__active_edge *e,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__handle_clipped_edge	lib/nuklear/src/nuklear_font.c	/^nk_tt__handle_clipped_edge(float *scanline, int x, struct nk_tt__active_edge *e,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__hheap	lib/nuklear/nuklear.h	/^struct nk_tt__hheap {$/;"	s
nk_tt__hheap	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__hheap {$/;"	s	file:
nk_tt__hheap_alloc	lib/nuklear/nuklear.h	/^nk_tt__hheap_alloc(struct nk_tt__hheap *hh, nk_size size)$/;"	f	typeref:typename:NK_INTERN void *
nk_tt__hheap_alloc	lib/nuklear/src/nuklear_font.c	/^nk_tt__hheap_alloc(struct nk_tt__hheap *hh, nk_size size)$/;"	f	typeref:typename:NK_INTERN void *
nk_tt__hheap_chunk	lib/nuklear/nuklear.h	/^struct nk_tt__hheap_chunk {$/;"	s
nk_tt__hheap_chunk	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__hheap_chunk {$/;"	s	file:
nk_tt__hheap_cleanup	lib/nuklear/nuklear.h	/^nk_tt__hheap_cleanup(struct nk_tt__hheap *hh)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__hheap_cleanup	lib/nuklear/src/nuklear_font.c	/^nk_tt__hheap_cleanup(struct nk_tt__hheap *hh)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__hheap_free	lib/nuklear/nuklear.h	/^nk_tt__hheap_free(struct nk_tt__hheap *hh, void *p)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__hheap_free	lib/nuklear/src/nuklear_font.c	/^nk_tt__hheap_free(struct nk_tt__hheap *hh, void *p)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__new_active	lib/nuklear/nuklear.h	/^nk_tt__new_active(struct nk_tt__hheap *hh, struct nk_tt__edge *e,$/;"	f	typeref:typename:NK_INTERN struct nk_tt__active_edge *
nk_tt__new_active	lib/nuklear/src/nuklear_font.c	/^nk_tt__new_active(struct nk_tt__hheap *hh, struct nk_tt__edge *e,$/;"	f	typeref:typename:NK_INTERN struct nk_tt__active_edge *
nk_tt__oversample_shift	lib/nuklear/nuklear.h	/^nk_tt__oversample_shift(int oversample)$/;"	f	typeref:typename:NK_INTERN float
nk_tt__oversample_shift	lib/nuklear/src/nuklear_font.c	/^nk_tt__oversample_shift(int oversample)$/;"	f	typeref:typename:NK_INTERN float
nk_tt__point	lib/nuklear/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	s
nk_tt__point	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__point {float x,y;};$/;"	s	file:
nk_tt__rasterize	lib/nuklear/nuklear.h	/^nk_tt__rasterize(struct nk_tt__bitmap *result, struct nk_tt__point *pts,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__rasterize	lib/nuklear/src/nuklear_font.c	/^nk_tt__rasterize(struct nk_tt__bitmap *result, struct nk_tt__point *pts,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__rasterize_sorted_edges	lib/nuklear/nuklear.h	/^nk_tt__rasterize_sorted_edges(struct nk_tt__bitmap *result, struct nk_tt__edge *e,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__rasterize_sorted_edges	lib/nuklear/src/nuklear_font.c	/^nk_tt__rasterize_sorted_edges(struct nk_tt__bitmap *result, struct nk_tt__edge *e,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges	lib/nuklear/nuklear.h	/^nk_tt__sort_edges(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges	lib/nuklear/src/nuklear_font.c	/^nk_tt__sort_edges(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges_ins_sort	lib/nuklear/nuklear.h	/^nk_tt__sort_edges_ins_sort(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges_ins_sort	lib/nuklear/src/nuklear_font.c	/^nk_tt__sort_edges_ins_sort(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges_quicksort	lib/nuklear/nuklear.h	/^nk_tt__sort_edges_quicksort(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__sort_edges_quicksort	lib/nuklear/src/nuklear_font.c	/^nk_tt__sort_edges_quicksort(struct nk_tt__edge *p, int n)$/;"	f	typeref:typename:NK_INTERN void
nk_tt__tesselate_curve	lib/nuklear/nuklear.h	/^nk_tt__tesselate_curve(struct nk_tt__point *points, int *num_points,$/;"	f	typeref:typename:NK_INTERN int
nk_tt__tesselate_curve	lib/nuklear/src/nuklear_font.c	/^nk_tt__tesselate_curve(struct nk_tt__point *points, int *num_points,$/;"	f	typeref:typename:NK_INTERN int
nk_tt__v_prefilter	lib/nuklear/nuklear.h	/^nk_tt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f	typeref:typename:NK_INTERN void
nk_tt__v_prefilter	lib/nuklear/src/nuklear_font.c	/^nk_tt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes,$/;"	f	typeref:typename:NK_INTERN void
nk_tt_aligned_quad	lib/nuklear/nuklear.h	/^struct nk_tt_aligned_quad{$/;"	s
nk_tt_aligned_quad	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_aligned_quad{$/;"	s	file:
nk_tt_bakedchar	lib/nuklear/nuklear.h	/^struct nk_tt_bakedchar {$/;"	s
nk_tt_bakedchar	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_bakedchar {$/;"	s	file:
nk_tt_fontinfo	lib/nuklear/nuklear.h	/^struct nk_tt_fontinfo {$/;"	s
nk_tt_fontinfo	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_fontinfo {$/;"	s	file:
nk_tt_pack_context	lib/nuklear/nuklear.h	/^struct nk_tt_pack_context {$/;"	s
nk_tt_pack_context	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_pack_context {$/;"	s	file:
nk_tt_pack_range	lib/nuklear/nuklear.h	/^struct nk_tt_pack_range {$/;"	s
nk_tt_pack_range	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_pack_range {$/;"	s	file:
nk_tt_packedchar	lib/nuklear/nuklear.h	/^struct nk_tt_packedchar {$/;"	s
nk_tt_packedchar	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_packedchar {$/;"	s	file:
nk_tt_setvertex	lib/nuklear/nuklear.h	/^nk_tt_setvertex(struct nk_tt_vertex *v, nk_byte type, nk_int x, nk_int y, nk_int cx, nk_int cy)$/;"	f	typeref:typename:NK_INTERN void
nk_tt_setvertex	lib/nuklear/src/nuklear_font.c	/^nk_tt_setvertex(struct nk_tt_vertex *v, nk_byte type, nk_int x, nk_int y, nk_int cx, nk_int cy)$/;"	f	typeref:typename:NK_INTERN void
nk_tt_tag	lib/nuklear/nuklear.h	/^#define nk_tt_tag(/;"	d
nk_tt_tag	lib/nuklear/src/nuklear_font.c	/^#define nk_tt_tag(/;"	d	file:
nk_tt_tag4	lib/nuklear/nuklear.h	/^#define nk_tt_tag4(/;"	d
nk_tt_tag4	lib/nuklear/src/nuklear_font.c	/^#define nk_tt_tag4(/;"	d	file:
nk_tt_vertex	lib/nuklear/nuklear.h	/^struct nk_tt_vertex {$/;"	s
nk_tt_vertex	lib/nuklear/src/nuklear_font.c	/^struct nk_tt_vertex {$/;"	s	file:
nk_uchar	lib/nuklear/nuklear.h	/^typedef NK_UINT8 nk_uchar;$/;"	t	typeref:typename:NK_UINT8
nk_uchar	lib/nuklear/src/nuklear.h	/^typedef NK_UINT8 nk_uchar;$/;"	t	typeref:typename:NK_UINT8
nk_uint	lib/nuklear/nuklear.h	/^typedef NK_UINT32 nk_uint;$/;"	t	typeref:typename:NK_UINT32
nk_uint	lib/nuklear/src/nuklear.h	/^typedef NK_UINT32 nk_uint;$/;"	t	typeref:typename:NK_UINT32
nk_unify	lib/nuklear/nuklear.h	/^nk_unify(struct nk_rect *clip, const struct nk_rect *a, float x0, float y0,$/;"	f	typeref:typename:NK_LIB void
nk_unify	lib/nuklear/src/nuklear_math.c	/^nk_unify(struct nk_rect *clip, const struct nk_rect *a, float x0, float y0,$/;"	f	typeref:typename:NK_LIB void
nk_user_font	lib/nuklear/nuklear.h	/^struct nk_user_font {$/;"	s
nk_user_font	lib/nuklear/src/nuklear.h	/^struct nk_user_font {$/;"	s
nk_user_font_glyph	lib/nuklear/nuklear.h	/^struct nk_user_font_glyph {$/;"	s
nk_user_font_glyph	lib/nuklear/src/nuklear.h	/^struct nk_user_font_glyph {$/;"	s
nk_ushort	lib/nuklear/nuklear.h	/^typedef NK_UINT16 nk_ushort;$/;"	t	typeref:typename:NK_UINT16
nk_ushort	lib/nuklear/src/nuklear.h	/^typedef NK_UINT16 nk_ushort;$/;"	t	typeref:typename:NK_UINT16
nk_utf_at	lib/nuklear/nuklear.h	/^nk_utf_at(const char *buffer, int length, int index,$/;"	f	typeref:typename:NK_API const char *
nk_utf_at	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_at(const char *buffer, int length, int index,$/;"	f	typeref:typename:NK_API const char *
nk_utf_decode	lib/nuklear/nuklear.h	/^nk_utf_decode(const char *c, nk_rune *u, int clen)$/;"	f	typeref:typename:NK_API int
nk_utf_decode	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_decode(const char *c, nk_rune *u, int clen)$/;"	f	typeref:typename:NK_API int
nk_utf_decode_byte	lib/nuklear/nuklear.h	/^nk_utf_decode_byte(char c, int *i)$/;"	f	typeref:typename:NK_INTERN nk_rune
nk_utf_decode_byte	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_decode_byte(char c, int *i)$/;"	f	typeref:typename:NK_INTERN nk_rune
nk_utf_encode	lib/nuklear/nuklear.h	/^nk_utf_encode(nk_rune u, char *c, int clen)$/;"	f	typeref:typename:NK_API int
nk_utf_encode	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_encode(nk_rune u, char *c, int clen)$/;"	f	typeref:typename:NK_API int
nk_utf_encode_byte	lib/nuklear/nuklear.h	/^nk_utf_encode_byte(nk_rune u, int i)$/;"	f	typeref:typename:NK_INTERN char
nk_utf_encode_byte	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_encode_byte(nk_rune u, int i)$/;"	f	typeref:typename:NK_INTERN char
nk_utf_len	lib/nuklear/nuklear.h	/^nk_utf_len(const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_utf_len	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_len(const char *str, int len)$/;"	f	typeref:typename:NK_API int
nk_utf_validate	lib/nuklear/nuklear.h	/^nk_utf_validate(nk_rune *u, int i)$/;"	f	typeref:typename:NK_INTERN int
nk_utf_validate	lib/nuklear/src/nuklear_utf8.c	/^nk_utf_validate(nk_rune *u, int i)$/;"	f	typeref:typename:NK_INTERN int
nk_utfbyte	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfbyte[NK_UTF_SIZE+1] = {0x80, 0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:NK_GLOBAL const nk_byte[]
nk_utfbyte	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_byte nk_utfbyte[NK_UTF_SIZE+1] = {0x80, 0, 0xC0, 0xE0, 0xF0};$/;"	v	typeref:typename:NK_GLOBAL const nk_byte[]
nk_utfmask	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_byte nk_utfmask[NK_UTF_SIZE+1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:NK_GLOBAL const nk_byte[]
nk_utfmask	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_byte nk_utfmask[NK_UTF_SIZE+1] = {0xC0, 0x80, 0xE0, 0xF0, 0xF8};$/;"	v	typeref:typename:NK_GLOBAL const nk_byte[]
nk_utfmax	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmax[NK_UTF_SIZE+1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:NK_GLOBAL const nk_uint[]
nk_utfmax	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_uint nk_utfmax[NK_UTF_SIZE+1] = {0x10FFFF, 0x7F, 0x7FF, 0xFFFF, 0x10FFFF};$/;"	v	typeref:typename:NK_GLOBAL const nk_uint[]
nk_utfmin	lib/nuklear/nuklear.h	/^NK_GLOBAL const nk_uint nk_utfmin[NK_UTF_SIZE+1] = {0, 0, 0x80, 0x800, 0x10000};$/;"	v	typeref:typename:NK_GLOBAL const nk_uint[]
nk_utfmin	lib/nuklear/src/nuklear_utf8.c	/^NK_GLOBAL const nk_uint nk_utfmin[NK_UTF_SIZE+1] = {0, 0, 0x80, 0x800, 0x10000};$/;"	v	typeref:typename:NK_GLOBAL const nk_uint[]
nk_value_bool	lib/nuklear/nuklear.h	/^nk_value_bool(struct nk_context *ctx, const char *prefix, int value)$/;"	f	typeref:typename:NK_API void
nk_value_bool	lib/nuklear/src/nuklear_text.c	/^nk_value_bool(struct nk_context *ctx, const char *prefix, int value)$/;"	f	typeref:typename:NK_API void
nk_value_color_byte	lib/nuklear/nuklear.h	/^nk_value_color_byte(struct nk_context *ctx, const char *p, struct nk_color c)$/;"	f	typeref:typename:NK_API void
nk_value_color_byte	lib/nuklear/src/nuklear_text.c	/^nk_value_color_byte(struct nk_context *ctx, const char *p, struct nk_color c)$/;"	f	typeref:typename:NK_API void
nk_value_color_float	lib/nuklear/nuklear.h	/^nk_value_color_float(struct nk_context *ctx, const char *p, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_value_color_float	lib/nuklear/src/nuklear_text.c	/^nk_value_color_float(struct nk_context *ctx, const char *p, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_value_color_hex	lib/nuklear/nuklear.h	/^nk_value_color_hex(struct nk_context *ctx, const char *prefix, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_value_color_hex	lib/nuklear/src/nuklear_text.c	/^nk_value_color_hex(struct nk_context *ctx, const char *prefix, struct nk_color color)$/;"	f	typeref:typename:NK_API void
nk_value_float	lib/nuklear/nuklear.h	/^nk_value_float(struct nk_context *ctx, const char *prefix, float value)$/;"	f	typeref:typename:NK_API void
nk_value_float	lib/nuklear/src/nuklear_text.c	/^nk_value_float(struct nk_context *ctx, const char *prefix, float value)$/;"	f	typeref:typename:NK_API void
nk_value_int	lib/nuklear/nuklear.h	/^nk_value_int(struct nk_context *ctx, const char *prefix, int value)$/;"	f	typeref:typename:NK_API void
nk_value_int	lib/nuklear/src/nuklear_text.c	/^nk_value_int(struct nk_context *ctx, const char *prefix, int value)$/;"	f	typeref:typename:NK_API void
nk_value_uint	lib/nuklear/nuklear.h	/^nk_value_uint(struct nk_context *ctx, const char *prefix, unsigned int value)$/;"	f	typeref:typename:NK_API void
nk_value_uint	lib/nuklear/src/nuklear_text.c	/^nk_value_uint(struct nk_context *ctx, const char *prefix, unsigned int value)$/;"	f	typeref:typename:NK_API void
nk_vec2	lib/nuklear/nuklear.h	/^nk_vec2(float x, float y)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2	lib/nuklear/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	s
nk_vec2	lib/nuklear/src/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	s
nk_vec2	lib/nuklear/src/nuklear_math.c	/^nk_vec2(float x, float y)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2_add	lib/nuklear/nuklear.h	/^#define nk_vec2_add(/;"	d
nk_vec2_add	lib/nuklear/src/nuklear.h	/^#define nk_vec2_add(/;"	d
nk_vec2_len_sqr	lib/nuklear/nuklear.h	/^#define nk_vec2_len_sqr(/;"	d
nk_vec2_len_sqr	lib/nuklear/src/nuklear.h	/^#define nk_vec2_len_sqr(/;"	d
nk_vec2_muls	lib/nuklear/nuklear.h	/^#define nk_vec2_muls(/;"	d
nk_vec2_muls	lib/nuklear/src/nuklear.h	/^#define nk_vec2_muls(/;"	d
nk_vec2_sub	lib/nuklear/nuklear.h	/^#define nk_vec2_sub(/;"	d
nk_vec2_sub	lib/nuklear/src/nuklear.h	/^#define nk_vec2_sub(/;"	d
nk_vec2i	lib/nuklear/nuklear.h	/^nk_vec2i(int x, int y)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2i	lib/nuklear/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	s
nk_vec2i	lib/nuklear/src/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	s
nk_vec2i	lib/nuklear/src/nuklear_math.c	/^nk_vec2i(int x, int y)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2iv	lib/nuklear/nuklear.h	/^nk_vec2iv(const int *v)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2iv	lib/nuklear/src/nuklear_math.c	/^nk_vec2iv(const int *v)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2v	lib/nuklear/nuklear.h	/^nk_vec2v(const float *v)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vec2v	lib/nuklear/src/nuklear_math.c	/^nk_vec2v(const float *v)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_vsnprintf	lib/nuklear/nuklear.h	/^nk_vsnprintf(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_INTERN int
nk_vsnprintf	lib/nuklear/src/nuklear_util.c	/^nk_vsnprintf(char *buf, int buf_size, const char *fmt, va_list args)$/;"	f	typeref:typename:NK_INTERN int
nk_white	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_white = {255,255,255,255};$/;"	v	typeref:typename:const struct nk_color
nk_white	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_white = {255,255,255,255};$/;"	v	typeref:typename:const struct nk_color
nk_widget	lib/nuklear/nuklear.h	/^nk_widget(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API enum nk_widget_layout_states
nk_widget	lib/nuklear/src/nuklear_widget.c	/^nk_widget(struct nk_rect *bounds, const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API enum nk_widget_layout_states
nk_widget_bounds	lib/nuklear/nuklear.h	/^nk_widget_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_widget_bounds	lib/nuklear/src/nuklear_widget.c	/^nk_widget_bounds(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_widget_fitting	lib/nuklear/nuklear.h	/^nk_widget_fitting(struct nk_rect *bounds, struct nk_context *ctx,$/;"	f	typeref:typename:NK_API enum nk_widget_layout_states
nk_widget_fitting	lib/nuklear/src/nuklear_widget.c	/^nk_widget_fitting(struct nk_rect *bounds, struct nk_context *ctx,$/;"	f	typeref:typename:NK_API enum nk_widget_layout_states
nk_widget_has_mouse_click_down	lib/nuklear/nuklear.h	/^nk_widget_has_mouse_click_down(struct nk_context *ctx, enum nk_buttons btn, int down)$/;"	f	typeref:typename:NK_API int
nk_widget_has_mouse_click_down	lib/nuklear/src/nuklear_widget.c	/^nk_widget_has_mouse_click_down(struct nk_context *ctx, enum nk_buttons btn, int down)$/;"	f	typeref:typename:NK_API int
nk_widget_height	lib/nuklear/nuklear.h	/^nk_widget_height(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_widget_height	lib/nuklear/src/nuklear_widget.c	/^nk_widget_height(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_widget_is_hovered	lib/nuklear/nuklear.h	/^nk_widget_is_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_widget_is_hovered	lib/nuklear/src/nuklear_widget.c	/^nk_widget_is_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_widget_is_mouse_clicked	lib/nuklear/nuklear.h	/^nk_widget_is_mouse_clicked(struct nk_context *ctx, enum nk_buttons btn)$/;"	f	typeref:typename:NK_API int
nk_widget_is_mouse_clicked	lib/nuklear/src/nuklear_widget.c	/^nk_widget_is_mouse_clicked(struct nk_context *ctx, enum nk_buttons btn)$/;"	f	typeref:typename:NK_API int
nk_widget_layout_states	lib/nuklear/nuklear.h	/^enum nk_widget_layout_states {$/;"	g
nk_widget_layout_states	lib/nuklear/src/nuklear.h	/^enum nk_widget_layout_states {$/;"	g
nk_widget_position	lib/nuklear/nuklear.h	/^nk_widget_position(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_widget_position	lib/nuklear/src/nuklear_widget.c	/^nk_widget_position(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_widget_size	lib/nuklear/nuklear.h	/^nk_widget_size(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_widget_size	lib/nuklear/src/nuklear_widget.c	/^nk_widget_size(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_widget_state_reset	lib/nuklear/nuklear.h	/^#define nk_widget_state_reset(/;"	d
nk_widget_state_reset	lib/nuklear/src/nuklear_internal.h	/^#define nk_widget_state_reset(/;"	d
nk_widget_states	lib/nuklear/nuklear.h	/^enum nk_widget_states {$/;"	g
nk_widget_states	lib/nuklear/src/nuklear.h	/^enum nk_widget_states {$/;"	g
nk_widget_text	lib/nuklear/nuklear.h	/^nk_widget_text(struct nk_command_buffer *o, struct nk_rect b,$/;"	f	typeref:typename:NK_LIB void
nk_widget_text	lib/nuklear/src/nuklear_text.c	/^nk_widget_text(struct nk_command_buffer *o, struct nk_rect b,$/;"	f	typeref:typename:NK_LIB void
nk_widget_text_wrap	lib/nuklear/nuklear.h	/^nk_widget_text_wrap(struct nk_command_buffer *o, struct nk_rect b,$/;"	f	typeref:typename:NK_LIB void
nk_widget_text_wrap	lib/nuklear/src/nuklear_text.c	/^nk_widget_text_wrap(struct nk_command_buffer *o, struct nk_rect b,$/;"	f	typeref:typename:NK_LIB void
nk_widget_width	lib/nuklear/nuklear.h	/^nk_widget_width(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_widget_width	lib/nuklear/src/nuklear_widget.c	/^nk_widget_width(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window	lib/nuklear/nuklear.h	/^struct nk_window {$/;"	s
nk_window	lib/nuklear/src/nuklear.h	/^struct nk_window {$/;"	s
nk_window_close	lib/nuklear/nuklear.h	/^nk_window_close(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API void
nk_window_close	lib/nuklear/src/nuklear_window.c	/^nk_window_close(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API void
nk_window_collapse	lib/nuklear/nuklear.h	/^nk_window_collapse(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_window_collapse	lib/nuklear/src/nuklear_window.c	/^nk_window_collapse(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_window_collapse_if	lib/nuklear/nuklear.h	/^nk_window_collapse_if(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_window_collapse_if	lib/nuklear/src/nuklear_window.c	/^nk_window_collapse_if(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_window_find	lib/nuklear/nuklear.h	/^nk_window_find(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API struct nk_window *
nk_window_find	lib/nuklear/src/nuklear_window.c	/^nk_window_find(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API struct nk_window *
nk_window_flags	lib/nuklear/nuklear.h	/^enum nk_window_flags {$/;"	g
nk_window_flags	lib/nuklear/src/nuklear.h	/^enum nk_window_flags {$/;"	g
nk_window_get_bounds	lib/nuklear/nuklear.h	/^nk_window_get_bounds(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_window_get_bounds	lib/nuklear/src/nuklear_window.c	/^nk_window_get_bounds(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_window_get_canvas	lib/nuklear/nuklear.h	/^nk_window_get_canvas(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_command_buffer *
nk_window_get_canvas	lib/nuklear/src/nuklear_window.c	/^nk_window_get_canvas(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_command_buffer *
nk_window_get_content_region	lib/nuklear/nuklear.h	/^nk_window_get_content_region(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_window_get_content_region	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_rect
nk_window_get_content_region_max	lib/nuklear/nuklear.h	/^nk_window_get_content_region_max(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_content_region_max	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region_max(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_content_region_min	lib/nuklear/nuklear.h	/^nk_window_get_content_region_min(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_content_region_min	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region_min(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_content_region_size	lib/nuklear/nuklear.h	/^nk_window_get_content_region_size(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_content_region_size	lib/nuklear/src/nuklear_window.c	/^nk_window_get_content_region_size(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_height	lib/nuklear/nuklear.h	/^nk_window_get_height(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window_get_height	lib/nuklear/src/nuklear_window.c	/^nk_window_get_height(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window_get_panel	lib/nuklear/nuklear.h	/^nk_window_get_panel(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_panel *
nk_window_get_panel	lib/nuklear/src/nuklear_window.c	/^nk_window_get_panel(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_panel *
nk_window_get_position	lib/nuklear/nuklear.h	/^nk_window_get_position(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_position	lib/nuklear/src/nuklear_window.c	/^nk_window_get_position(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_size	lib/nuklear/nuklear.h	/^nk_window_get_size(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_size	lib/nuklear/src/nuklear_window.c	/^nk_window_get_size(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API struct nk_vec2
nk_window_get_width	lib/nuklear/nuklear.h	/^nk_window_get_width(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window_get_width	lib/nuklear/src/nuklear_window.c	/^nk_window_get_width(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API float
nk_window_has_focus	lib/nuklear/nuklear.h	/^nk_window_has_focus(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_has_focus	lib/nuklear/src/nuklear_window.c	/^nk_window_has_focus(const struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_insert_location	lib/nuklear/nuklear.h	/^enum nk_window_insert_location {$/;"	g
nk_window_insert_location	lib/nuklear/src/nuklear_internal.h	/^enum nk_window_insert_location {$/;"	g
nk_window_is_active	lib/nuklear/nuklear.h	/^nk_window_is_active(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_active	lib/nuklear/src/nuklear_window.c	/^nk_window_is_active(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_any_hovered	lib/nuklear/nuklear.h	/^nk_window_is_any_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_is_any_hovered	lib/nuklear/src/nuklear_window.c	/^nk_window_is_any_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_is_closed	lib/nuklear/nuklear.h	/^nk_window_is_closed(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_closed	lib/nuklear/src/nuklear_window.c	/^nk_window_is_closed(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_collapsed	lib/nuklear/nuklear.h	/^nk_window_is_collapsed(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_collapsed	lib/nuklear/src/nuklear_window.c	/^nk_window_is_collapsed(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_hidden	lib/nuklear/nuklear.h	/^nk_window_is_hidden(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_hidden	lib/nuklear/src/nuklear_window.c	/^nk_window_is_hidden(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API int
nk_window_is_hovered	lib/nuklear/nuklear.h	/^nk_window_is_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_is_hovered	lib/nuklear/src/nuklear_window.c	/^nk_window_is_hovered(struct nk_context *ctx)$/;"	f	typeref:typename:NK_API int
nk_window_set_bounds	lib/nuklear/nuklear.h	/^nk_window_set_bounds(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_set_bounds	lib/nuklear/src/nuklear_window.c	/^nk_window_set_bounds(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_set_focus	lib/nuklear/nuklear.h	/^nk_window_set_focus(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API void
nk_window_set_focus	lib/nuklear/src/nuklear_window.c	/^nk_window_set_focus(struct nk_context *ctx, const char *name)$/;"	f	typeref:typename:NK_API void
nk_window_set_position	lib/nuklear/nuklear.h	/^nk_window_set_position(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_set_position	lib/nuklear/src/nuklear_window.c	/^nk_window_set_position(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_set_size	lib/nuklear/nuklear.h	/^nk_window_set_size(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_set_size	lib/nuklear/src/nuklear_window.c	/^nk_window_set_size(struct nk_context *ctx,$/;"	f	typeref:typename:NK_API void
nk_window_show	lib/nuklear/nuklear.h	/^nk_window_show(struct nk_context *ctx, const char *name, enum nk_show_states s)$/;"	f	typeref:typename:NK_API void
nk_window_show	lib/nuklear/src/nuklear_window.c	/^nk_window_show(struct nk_context *ctx, const char *name, enum nk_show_states s)$/;"	f	typeref:typename:NK_API void
nk_window_show_if	lib/nuklear/nuklear.h	/^nk_window_show_if(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_window_show_if	lib/nuklear/src/nuklear_window.c	/^nk_window_show_if(struct nk_context *ctx, const char *name,$/;"	f	typeref:typename:NK_API void
nk_wmask	lib/nuklear/nuklear.h	/^    #define nk_wmask /;"	d
nk_wmask	lib/nuklear/src/nuklear_util.c	/^    #define nk_wmask /;"	d	file:
nk_word	lib/nuklear/nuklear.h	/^    #define nk_word /;"	d
nk_word	lib/nuklear/src/nuklear_util.c	/^    #define nk_word /;"	d	file:
nk_wsize	lib/nuklear/nuklear.h	/^    #define nk_wsize /;"	d
nk_wsize	lib/nuklear/src/nuklear_util.c	/^    #define nk_wsize /;"	d	file:
nk_x11	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^static struct nk_x11 {$/;"	s
nk_x11	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^static struct nk_x11 {$/;"	s
nk_x11_check_extension	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_check_extension(struct opengl_info *GL, const char *ext)$/;"	f	typeref:typename:NK_INTERN int
nk_x11_device	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^struct nk_x11_device {$/;"	s
nk_x11_device	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^struct nk_x11_device {$/;"	s
nk_x11_device_create	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_device_create(void)$/;"	f	typeref:typename:NK_API int
nk_x11_device_destroy	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_device_destroy(void)$/;"	f	typeref:typename:NK_API void
nk_x11_device_upload_atlas	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_x11_device_upload_atlas	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_device_upload_atlas(const void *image, int width, int height)$/;"	f	typeref:typename:NK_INTERN void
nk_x11_font_stash_begin	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_x11_font_stash_begin	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_font_stash_begin(struct nk_font_atlas **atlas)$/;"	f	typeref:typename:NK_API void
nk_x11_font_stash_end	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_x11_font_stash_end	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_font_stash_end(void)$/;"	f	typeref:typename:NK_API void
nk_x11_handle_event	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_handle_event(XEvent *evt)$/;"	f	typeref:typename:NK_API int
nk_x11_handle_event	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_handle_event(XEvent *evt)$/;"	f	typeref:typename:NK_API int
nk_x11_init	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_init(Display *dpy, Window win)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_x11_init	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_init(Display *dpy, Window win)$/;"	f	typeref:typename:NK_API struct nk_context *
nk_x11_render	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f	typeref:typename:NK_API void
nk_x11_render	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_render(enum nk_anti_aliasing AA, int max_vertex_buffer, int max_element_buffer)$/;"	f	typeref:typename:NK_API void
nk_x11_shutdown	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^nk_x11_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_x11_shutdown	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_x11_stricmpn	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^nk_x11_stricmpn(const char *a, const char *b, int len)$/;"	f	typeref:typename:NK_INTERN int
nk_x11_vertex	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^struct nk_x11_vertex {$/;"	s
nk_x11_vertex	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^struct nk_x11_vertex {$/;"	s
nk_xfont_create	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xfont_create(Display *dpy, const char *name)$/;"	f	typeref:typename:NK_API XFont *
nk_xfont_del	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xfont_del(Display *dpy, XFont *font)$/;"	f	typeref:typename:NK_API void
nk_xfont_get_text_width	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xfont_get_text_width(nk_handle handle, float height, const char *text, int len)$/;"	f	typeref:typename:NK_INTERN float
nk_xlib_copy	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_copy(nk_handle handle, const char* str, int len)$/;"	f	typeref:typename:NK_API void
nk_xlib_handle_event	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_handle_event(Display *dpy, int screen, Window win, XEvent *evt)$/;"	f	typeref:typename:NK_API int
nk_xlib_handle_event	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_handle_event(Display *dpy, int screen, Window win, XEvent *evt, struct rawfb_context *ra/;"	f	typeref:typename:NK_API int
nk_xlib_init	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_init(XFont *xfont, Display *dpy, int screen, Window root,$/;"	f	typeref:typename:NK_API struct nk_context *
nk_xlib_init	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_init(Display *dpy, Visual *vis, int screen, Window root,$/;"	f	typeref:typename:NK_API int
nk_xlib_paste	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_paste(nk_handle handle, struct nk_text_edit* edit)$/;"	f	typeref:typename:NK_API void
nk_xlib_push_font	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_push_font(XFont *xfont)$/;"	f	typeref:typename:NK_API void
nk_xlib_render	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_render(Drawable screen, struct nk_color clear)$/;"	f	typeref:typename:NK_API void
nk_xlib_render	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_render(Drawable screen)$/;"	f	typeref:typename:NK_API void
nk_xlib_set_font	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_set_font(XFont *xfont)$/;"	f	typeref:typename:NK_API void
nk_xlib_shutdown	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xlib_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_xlib_shutdown	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^nk_xlib_shutdown(void)$/;"	f	typeref:typename:NK_API void
nk_xsurf_blit	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_blit(Drawable target, XSurface *surf, unsigned int w, unsigned int h)$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_clear	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_clear(XSurface *surf, unsigned long color)$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_create	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_create(int screen, unsigned int w, unsigned int h)$/;"	f	typeref:typename:NK_INTERN XSurface *
nk_xsurf_del	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_del(XSurface *surf)$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_draw_image	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_draw_image(XSurface *surf, short x, short y, unsigned short w, unsigned short h,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_draw_text	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_draw_text(XSurface *surf, short x, short y, unsigned short w, unsigned short h,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_fill_circle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_circle(XSurface *surf, short x, short y, unsigned short w,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_fill_polygon	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_polygon(XSurface *surf,  const struct nk_vec2i *pnts, int count,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_fill_rect	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_rect(XSurface* surf, short x, short y, unsigned short w,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_fill_triangle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_fill_triangle(XSurface *surf, short x0, short y0, short x1,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_image_free	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_image_free(struct nk_image* image)$/;"	f	typeref:typename:void
nk_xsurf_load_image_from_file	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_load_image_from_file(char const *filename)$/;"	f	typeref:typename:NK_API struct nk_image
nk_xsurf_load_image_from_memory	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_load_image_from_memory(const void *membuf, nk_uint membufSize)$/;"	f	typeref:typename:NK_API struct nk_image
nk_xsurf_resize	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_resize(XSurface *surf, unsigned int w, unsigned int h)$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_scissor	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_scissor(XSurface *surf, float x, float y, float w, float h)$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_stroke_circle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_circle(XSurface *surf, short x, short y, unsigned short w,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_stroke_curve	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_curve(XSurface *surf, struct nk_vec2i p1,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_stroke_line	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_line(XSurface *surf, short x0, short y0, short x1,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_stroke_polygon	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_polygon(XSurface *surf, const struct nk_vec2i *pnts, int count,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_stroke_polyline	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_polyline(XSurface *surf, const struct nk_vec2i *pnts,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_stroke_rect	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_rect(XSurface* surf, short x, short y, unsigned short w,$/;"	f	typeref:typename:NK_INTERN void
nk_xsurf_stroke_triangle	lib/nuklear/demo/x11/nuklear_xlib.h	/^nk_xsurf_stroke_triangle(XSurface *surf, short x0, short y0, short x1,$/;"	f	typeref:typename:NK_INTERN void
nk_yellow	lib/nuklear/nuklear.h	/^NK_GLOBAL const struct nk_color nk_yellow = {255,255,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_yellow	lib/nuklear/src/nuklear_internal.h	/^NK_GLOBAL const struct nk_color nk_yellow = {255,255,0,255};$/;"	v	typeref:typename:const struct nk_color
nk_zero	lib/nuklear/nuklear.h	/^nk_zero(void *ptr, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_zero	lib/nuklear/src/nuklear_util.c	/^nk_zero(void *ptr, nk_size size)$/;"	f	typeref:typename:NK_LIB void
nk_zero_struct	lib/nuklear/nuklear.h	/^#define nk_zero_struct(/;"	d
nk_zero_struct	lib/nuklear/src/nuklear.h	/^#define nk_zero_struct(/;"	d
nkglAttachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglAttachShader)(GLuint, GLuint);$/;"	t	typeref:typename:void (*)(GLuint,GLuint)
nkglBindBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglBindBuffer)(GLenum, GLuint);$/;"	t	typeref:typename:void (*)(GLenum,GLuint)
nkglBindVertexArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void (*nkglBindVertexArray)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglBufferData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglBufferData)(GLenum, GLsizeiptr, const GLvoid*, GLenum);$/;"	t	typeref:typename:void (*)(GLenum,GLsizeiptr,const GLvoid *,GLenum)
nkglBufferSubData	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglBufferSubData)(GLenum, GLintptr, GLsizeiptr, const GLvoid*);$/;"	t	typeref:typename:void (*)(GLenum,GLintptr,GLsizeiptr,const GLvoid *)
nkglCompileShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglCompileShader)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglCreateProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLuint(*nkglCreateProgram)(void);$/;"	t	typeref:typename:GLuint (*)(void)
nkglCreateShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLuint(*nkglCreateShader)(GLenum);$/;"	t	typeref:typename:GLuint (*)(GLenum)
nkglDeleteBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDeleteBuffers)(GLsizei, GLuint*);$/;"	t	typeref:typename:void (*)(GLsizei,GLuint *)
nkglDeleteProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDeleteProgram)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglDeleteShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDeleteShader)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglDeleteVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void (*nkglDeleteVertexArrays)(GLsizei, const GLuint*);$/;"	t	typeref:typename:void (*)(GLsizei,const GLuint *)
nkglDetachShader	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDetachShader)(GLuint, GLuint);$/;"	t	typeref:typename:void (*)(GLuint,GLuint)
nkglDisableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglDisableVertexAttribArray)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglEnableVertexAttribArray	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglEnableVertexAttribArray)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglGenBuffers	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGenBuffers)(GLsizei, GLuint*);$/;"	t	typeref:typename:void (*)(GLsizei,GLuint *)
nkglGenVertexArrays	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void (*nkglGenVertexArrays)(GLsizei, GLuint*);$/;"	t	typeref:typename:void (*)(GLsizei,GLuint *)
nkglGenerateMipmap	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGenerateMipmap)(GLenum target);$/;"	t	typeref:typename:void (*)(GLenum target)
nkglGetAttribLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLint(*nkglGetAttribLocation)(GLuint, const GLchar*);$/;"	t	typeref:typename:GLint (*)(GLuint,const GLchar *)
nkglGetProgramInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetProgramInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);$/;"	t	typeref:typename:void (*)(GLuint,GLsizei,GLsizei *,GLchar *)
nkglGetProgramiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetProgramiv)(GLuint, GLenum, GLint*);$/;"	t	typeref:typename:void (*)(GLuint,GLenum,GLint *)
nkglGetShaderInfoLog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetShaderInfoLog)(GLuint, GLsizei, GLsizei*, GLchar*);$/;"	t	typeref:typename:void (*)(GLuint,GLsizei,GLsizei *,GLchar *)
nkglGetShaderiv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglGetShaderiv)(GLuint, GLenum, GLint*);$/;"	t	typeref:typename:void (*)(GLuint,GLenum,GLint *)
nkglGetUniformLocation	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLint(*nkglGetUniformLocation)(GLuint, const GLchar*);$/;"	t	typeref:typename:GLint (*)(GLuint,const GLchar *)
nkglLinkProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglLinkProgram)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglMapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void*(*nkglMapBuffer)(GLenum, GLenum);$/;"	t	typeref:typename:void * (*)(GLenum,GLenum)
nkglShaderSource	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglShaderSource)(GLuint, GLsizei, const GLchar**, const GLint*);$/;"	t	typeref:typename:void (*)(GLuint,GLsizei,const GLchar **,const GLint *)
nkglUniform1f	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniform1f)(GLint, GLfloat);$/;"	t	typeref:typename:void (*)(GLint,GLfloat)
nkglUniform1i	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniform1i)(GLint, GLint);$/;"	t	typeref:typename:void (*)(GLint,GLint)
nkglUniformMatrix3fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniformMatrix3fv)(GLint, GLsizei, GLboolean, const GLfloat*);$/;"	t	typeref:typename:void (*)(GLint,GLsizei,GLboolean,const GLfloat *)
nkglUniformMatrix4fv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUniformMatrix4fv)(GLint, GLsizei, GLboolean, const GLfloat*);$/;"	t	typeref:typename:void (*)(GLint,GLsizei,GLboolean,const GLfloat *)
nkglUnmapBuffer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef GLboolean(*nkglUnmapBuffer)(GLenum);$/;"	t	typeref:typename:GLboolean (*)(GLenum)
nkglUseProgram	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglUseProgram)(GLuint);$/;"	t	typeref:typename:void (*)(GLuint)
nkglVertexAttribPointer	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^typedef void(*nkglVertexAttribPointer)(GLuint, GLint, GLenum, GLboolean, GLsizei, const GLvoid*)/;"	t	typeref:typename:void (*)(GLuint,GLint,GLenum,GLboolean,GLsizei,const GLvoid *)
no_reconnect	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s	typeref:typename:int[4]
node	lib/klib/knhx.c	/^	knhx1_t *node;$/;"	m	struct:__anonf5ac75060108	typeref:typename:knhx1_t *	file:
node	lib/nuklear/demo/node_editor.c	/^    struct node *node;$/;"	m	struct:node_linking	typeref:struct:node *	file:
node	lib/nuklear/demo/node_editor.c	/^struct node {$/;"	s	file:
nodeEditor	lib/nuklear/demo/node_editor.c	/^static struct node_editor nodeEditor;$/;"	v	typeref:struct:node_editor	file:
node_buf	lib/nuklear/demo/node_editor.c	/^    struct node node_buf[32];$/;"	m	struct:node_editor	typeref:struct:node[32]	file:
node_count	lib/nuklear/demo/node_editor.c	/^    int node_count;$/;"	m	struct:node_editor	typeref:typename:int	file:
node_editor	lib/nuklear/demo/node_editor.c	/^node_editor(struct nk_context *ctx)$/;"	f	typeref:typename:int	file:
node_editor	lib/nuklear/demo/node_editor.c	/^struct node_editor {$/;"	s	file:
node_editor_add	lib/nuklear/demo/node_editor.c	/^node_editor_add(struct node_editor *editor, const char *name, struct nk_rect bounds,$/;"	f	typeref:typename:void	file:
node_editor_find	lib/nuklear/demo/node_editor.c	/^node_editor_find(struct node_editor *editor, int ID)$/;"	f	typeref:struct:node *	file:
node_editor_init	lib/nuklear/demo/node_editor.c	/^node_editor_init(struct node_editor *editor)$/;"	f	typeref:typename:void	file:
node_editor_link	lib/nuklear/demo/node_editor.c	/^node_editor_link(struct node_editor *editor, int in_id, int in_slot,$/;"	f	typeref:typename:void	file:
node_editor_pop	lib/nuklear/demo/node_editor.c	/^node_editor_pop(struct node_editor *editor, struct node *node)$/;"	f	typeref:typename:void	file:
node_editor_push	lib/nuklear/demo/node_editor.c	/^node_editor_push(struct node_editor *editor, struct node *node)$/;"	f	typeref:typename:void	file:
node_link	lib/nuklear/demo/node_editor.c	/^struct node_link {$/;"	s	file:
node_linking	lib/nuklear/demo/node_editor.c	/^struct node_linking {$/;"	s	file:
node_maximize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button node_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
node_maximize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button node_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
node_minimize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button node_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
node_minimize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button node_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
nodes	lib/cimgui/imgui/stb_truetype.h	/^   void  *nodes;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
nodes	lib/nuklear/nuklear.h	/^    void  *nodes;$/;"	m	struct:nk_tt_pack_context	typeref:typename:void *
nodes	lib/nuklear/src/nuklear_font.c	/^    void  *nodes;$/;"	m	struct:nk_tt_pack_context	typeref:typename:void *	file:
nomore	lib/nuklear/example/stb_image.h	/^   int            nomore;      \/\/ flag if we saw a marker so must stop$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
normal	lib/nuklear/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_progress	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_property	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_slider	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_style_item
normal	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_style_item
normalMatrix	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^    GLKMatrix3 _normalMatrix;$/;"	E	interface:GameViewController
normal_active	lib/nuklear/nuklear.h	/^    struct nk_style_item normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
normal_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
null	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:__anon70d184300108	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:__anon39ff3a1e0108	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sdl_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_sfml_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_x11_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_draw_null_texture null;$/;"	m	struct:nk_x11_device	typeref:struct:nk_draw_null_texture
null	lib/nuklear/example/canvas.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:nk_draw_null_texture	file:
null	lib/nuklear/example/extended.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:nk_draw_null_texture	file:
null	lib/nuklear/example/file_browser.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:nk_draw_null_texture	file:
null	lib/nuklear/example/skinning.c	/^    struct nk_draw_null_texture null;$/;"	m	struct:device	typeref:struct:nk_draw_null_texture	file:
null	lib/nuklear/nuklear.h	/^    struct nk_draw_null_texture null; \/* handle to texture with a white pixel for shape drawing/;"	m	struct:nk_convert_config	typeref:struct:nk_draw_null_texture
null	lib/nuklear/src/nuklear.h	/^    struct nk_draw_null_texture null; \/* handle to texture with a white pixel for shape drawing/;"	m	struct:nk_convert_config	typeref:struct:nk_draw_null_texture
numGlyphs	lib/cimgui/imgui/stb_truetype.h	/^   int numGlyphs;                     \/\/ number of glyphs, needed for range checking$/;"	m	struct:stbtt_fontinfo	typeref:typename:int
numGlyphs	lib/nuklear/nuklear.h	/^    int numGlyphs;\/* number of glyphs, needed for range checking *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int
numGlyphs	lib/nuklear/src/nuklear_font.c	/^    int numGlyphs;\/* number of glyphs, needed for range checking *\/$/;"	m	struct:nk_tt_fontinfo	typeref:typename:int	file:
num_bits	lib/nuklear/example/stb_image.h	/^   int num_bits;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:int
num_chars	lib/cimgui/imgui/stb_textedit.h	/^   int num_chars;$/;"	m	struct:__anonfd61af4b0408	typeref:typename:int
num_chars	lib/cimgui/imgui/stb_truetype.h	/^   int num_chars;$/;"	m	struct:__anonc4c159420508	typeref:typename:int
num_chars	lib/nuklear/nuklear.h	/^    int num_chars;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int
num_chars	lib/nuklear/nuklear.h	/^   int num_chars;$/;"	m	struct:nk_text_edit_row	typeref:typename:int
num_chars	lib/nuklear/src/nuklear_font.c	/^    int num_chars;$/;"	m	struct:nk_tt_pack_range	typeref:typename:int	file:
num_chars	lib/nuklear/src/nuklear_text_editor.c	/^   int num_chars;$/;"	m	struct:nk_text_edit_row	typeref:typename:int	file:
num_nodes	lib/cimgui/imgui/stb_rect_pack.h	/^   int num_nodes;$/;"	m	struct:stbrp_context	typeref:typename:int
num_nodes	lib/nuklear/nuklear.h	/^    int num_nodes;$/;"	m	struct:nk_rp_context	typeref:typename:int
num_nodes	lib/nuklear/src/nuklear_font.c	/^    int num_nodes;$/;"	m	struct:nk_rp_context	typeref:typename:int	file:
num_remaining_in_head_chunk	lib/cimgui/imgui/stb_truetype.h	/^   int    num_remaining_in_head_chunk;$/;"	m	struct:stbtt__hheap	typeref:typename:int
num_remaining_in_head_chunk	lib/nuklear/nuklear.h	/^    int    num_remaining_in_head_chunk;$/;"	m	struct:nk_tt__hheap	typeref:typename:int
num_remaining_in_head_chunk	lib/nuklear/src/nuklear_font.c	/^    int    num_remaining_in_head_chunk;$/;"	m	struct:nk_tt__hheap	typeref:typename:int	file:
num_vertices	lib/cimgui/imgui/stb_truetype.h	/^   int num_vertices;$/;"	m	struct:__anonc4c159420f08	typeref:typename:int
objects	src/Scene.h	/^    objects_v objects;$/;"	m	struct:Scene	typeref:typename:objects_v
objects_v	src/Scene.h	/^typedef kvec_t(Drawable*) objects_v;$/;"	t
obs	lib/klib/khmm.h	/^	int l, *obs;$/;"	m	struct:__anonf542711f0408	typeref:typename:int *
off0	lib/klib/kurl.c	/^	off_t off0;   \/\/ offset of the first byte in the buffer; the actual file offset equals off0 +/;"	m	struct:kurl_t	typeref:typename:off_t	file:
offset	lib/klib/knetfile.h	/^	int64_t offset;$/;"	m	struct:knetFile_s	typeref:typename:int64_t
offset	lib/nuklear/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_buffer_marker	typeref:typename:nk_size
offset	lib/nuklear/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:typename:nk_size
offset	lib/nuklear/nuklear.h	/^    struct nk_scroll offset;$/;"	m	struct:nk_menu_state	typeref:struct:nk_scroll
offset	lib/nuklear/nuklear.h	/^    struct nk_vec2 offset;$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_vec2
offset	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_vec2
offset	lib/nuklear/src/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_buffer_marker	typeref:typename:nk_size
offset	lib/nuklear/src/nuklear.h	/^    nk_size offset;$/;"	m	struct:nk_draw_vertex_layout_element	typeref:typename:nk_size
offset	lib/nuklear/src/nuklear.h	/^    struct nk_scroll offset;$/;"	m	struct:nk_menu_state	typeref:struct:nk_scroll
offset	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 offset;$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_vec2
offset	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_vec2
offset_x	lib/nuklear/nuklear.h	/^    nk_uint *offset_x;$/;"	m	struct:nk_panel	typeref:typename:nk_uint *
offset_x	lib/nuklear/src/nuklear.h	/^    nk_uint *offset_x;$/;"	m	struct:nk_panel	typeref:typename:nk_uint *
offset_y	lib/nuklear/nuklear.h	/^    nk_uint *offset_y;$/;"	m	struct:nk_panel	typeref:typename:nk_uint *
offset_y	lib/nuklear/src/nuklear.h	/^    nk_uint *offset_y;$/;"	m	struct:nk_panel	typeref:typename:nk_uint *
ogl	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw_device
ogl	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw_device
ogl	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_glfw_device ogl;$/;"	m	struct:nk_glfw	typeref:struct:nk_glfw_device
ogl	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    struct nk_sdl_device ogl;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl_device
ogl	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    struct nk_sdl_device ogl;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl_device
ogl	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    struct nk_sdl_device ogl;$/;"	m	struct:nk_sdl	typeref:struct:nk_sdl_device
ogl	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    struct nk_sfml_device ogl;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml_device
ogl	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    struct nk_sfml_device ogl;$/;"	m	struct:nk_sfml	typeref:struct:nk_sfml_device
ogl	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    struct nk_x11_device ogl;$/;"	m	struct:nk_x11	typeref:struct:nk_x11_device
ogl	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    struct nk_x11_device ogl;$/;"	m	struct:nk_x11	typeref:struct:nk_x11_device
old	lib/nuklear/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned int
old	lib/nuklear/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_property_state	typeref:typename:unsigned int
old	lib/nuklear/src/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned int
old	lib/nuklear/src/nuklear.h	/^    unsigned int old;$/;"	m	struct:nk_property_state	typeref:typename:unsigned int
old_out	lib/nuklear/example/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anonc731c3c81008	typeref:typename:stbi_uc **
omit_includes	lib/nuklear/src/build.py	/^def omit_includes(str, files):$/;"	f
onResize	src/App.c	/^onResize(GLFWwindow* win, int width, int height) {$/;"	f	typeref:typename:void	file:
onServernameTapped:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (IBAction)onServernameTapped:(id)sender;$/;"	m	interface:GameViewController
onServernameTapped:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
op	lib/klib/kexpr.c	/^	int32_t op:8, n_args:24; \/\/ op: operator, n_args: number of arguments$/;"	m	struct:ke1_s	typeref:typename:int32_t:8	file:
open_libgl	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static void open_libgl(void)$/;"	f	typeref:typename:void	file:
open_libgl	lib/gl3w/GL/gl3w.c	/^static void open_libgl(void)$/;"	f	typeref:typename:void	file:
open_mode	lib/klib/bgzf.h	/^    int open_mode:8, compress_level:8, errcode:16;$/;"	m	struct:__anone038ee1b0108	typeref:typename:int:8
opengl_info	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^struct opengl_info {$/;"	s
operator () 	lib/klib/test/ksort_test.cc	/^	inline int operator() (int a, int b) const {$/;"	f	struct:intcmp_t	typeref:typename:int	file:
operator *	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator*(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(/;"	f	typeref:typename:ImVec2
operator *	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator*(const ImVec2& lhs, const float rhs)              { return ImVec2(/;"	f	typeref:typename:ImVec2
operator *	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 operator*(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(/;"	f	typeref:typename:ImVec4
operator *=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator*=(ImVec2& lhs, const float rhs)                  { lhs.x *= rhs; /;"	f	typeref:typename:ImVec2 &
operator +	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator+(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(/;"	f	typeref:typename:ImVec2
operator +	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 operator+(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(/;"	f	typeref:typename:ImVec4
operator +=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator+=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x += rhs.x/;"	f	typeref:typename:ImVec2 &
operator -	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator-(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2(/;"	f	typeref:typename:ImVec2
operator -	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec4 operator-(const ImVec4& lhs, const ImVec4& rhs)            { return ImVec4(/;"	f	typeref:typename:ImVec4
operator -=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator-=(ImVec2& lhs, const ImVec2& rhs)                { lhs.x -= rhs.x/;"	f	typeref:typename:ImVec2 &
operator /	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator\/(const ImVec2& lhs, const ImVec2& rhs)            { return ImVec2/;"	f	typeref:typename:ImVec2
operator /	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2 operator\/(const ImVec2& lhs, const float rhs)              { return ImVec2/;"	f	typeref:typename:ImVec2
operator /=	lib/cimgui/imgui/imgui_internal.h	/^static inline ImVec2& operator\/=(ImVec2& lhs, const float rhs)                  { lhs.x \/= rhs/;"	f	typeref:typename:ImVec2 &
operator =	lib/cimgui/imgui/imgui.h	/^    inline ImVector& operator=(const ImVector<T>& src)          { clear(); resize(src.Size); mem/;"	f	class:ImVector	typeref:typename:ImVector &
operator []	lib/cimgui/imgui/imgui.h	/^    inline char         operator[](int i) { return Buf.Data[i]; }$/;"	f	struct:ImGuiTextBuffer	typeref:typename:char
operator []	lib/cimgui/imgui/imgui.h	/^    inline const value_type&    operator[](int i) const         { IM_ASSERT(i < Size); return Da/;"	f	class:ImVector	typeref:typename:const value_type &
operator []	lib/cimgui/imgui/imgui.h	/^    inline value_type&          operator[](int i)               { IM_ASSERT(i < Size); return Da/;"	f	class:ImVector	typeref:typename:value_type &
operator [] 	lib/cimgui/imgui/imgui.h	/^    float  operator[] (size_t idx) const { IM_ASSERT(idx <= 1); return (&x)[idx]; }    \/\/ We v/;"	f	struct:ImVec2	typeref:typename:float
operator delete	lib/cimgui/imgui/imgui.h	/^inline void  operator delete(void*, ImNewDummy, void*)   {} \/\/ This is only required so we can/;"	f	typeref:typename:void
operator new	lib/cimgui/imgui/imgui.h	/^inline void* operator new(size_t, ImNewDummy, void* ptr) { return ptr; }$/;"	f	typeref:typename:void *
option	lib/nuklear/example/skinning.c	/^    struct nk_image option;$/;"	m	struct:media	typeref:struct:nk_image	file:
option	lib/nuklear/nuklear.h	/^    struct nk_style_toggle option;$/;"	m	struct:nk_style	typeref:struct:nk_style_toggle
option	lib/nuklear/src/nuklear.h	/^    struct nk_style_toggle option;$/;"	m	struct:nk_style	typeref:struct:nk_style_toggle
option_cursor	lib/nuklear/example/skinning.c	/^    struct nk_image option_cursor;$/;"	m	struct:media	typeref:struct:nk_image	file:
options	lib/nuklear/demo/overview.c	/^            enum options {A,B,C};$/;"	g	function:overview	file:
order	lib/nuklear/example/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anonc731c3c80608	typeref:typename:int[4]
os.getopt	lib/klib/lua/klib.lua	/^function os.getopt(args, ostr)$/;"	f
out	lib/nuklear/demo/node_editor.c	/^    struct nk_vec2 out;$/;"	m	struct:node_link	typeref:struct:nk_vec2	file:
out	lib/nuklear/example/stb_image.h	/^   stbi_uc *idata, *expanded, *out;$/;"	m	struct:__anonc731c3c80c08	typeref:typename:stbi_uc ***
out	lib/nuklear/example/stb_image.h	/^   stbi_uc *out, *old_out;             \/\/ output buffer (always 4 components)$/;"	m	struct:__anonc731c3c81008	typeref:typename:stbi_uc *
outliterals	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void outliterals(stb_uchar *in, int numlit)$/;"	f	typeref:typename:void	file:
output_count	lib/nuklear/demo/node_editor.c	/^    int output_count;$/;"	m	struct:node	typeref:typename:int	file:
output_id	lib/nuklear/demo/node_editor.c	/^    int output_id;$/;"	m	struct:node_link	typeref:typename:int	file:
output_slot	lib/nuklear/demo/node_editor.c	/^    int output_slot;$/;"	m	struct:node_link	typeref:typename:int	file:
outro_files	lib/nuklear/src/build.py	/^        outro_files = parse_files(sys.argv[cur_arg])$/;"	v
outro_files	lib/nuklear/src/build.py	/^outro_files = []$/;"	v
overlay	lib/nuklear/nuklear.h	/^    struct nk_command_buffer overlay;$/;"	m	struct:nk_context	typeref:struct:nk_command_buffer
overlay	lib/nuklear/src/nuklear.h	/^    struct nk_command_buffer overlay;$/;"	m	struct:nk_context	typeref:struct:nk_command_buffer
oversample_h	lib/nuklear/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
oversample_h	lib/nuklear/src/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
oversample_v	lib/nuklear/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
oversample_v	lib/nuklear/src/nuklear.h	/^    unsigned char oversample_v, oversample_h;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
overview	lib/nuklear/demo/overview.c	/^overview(struct nk_context *ctx)$/;"	f	typeref:typename:int	file:
p	lib/klib/kbtree.h	/^	kbpos_t stack[KB_MAX_DEPTH], *p;$/;"	m	struct:__anon929281af0308	typeref:typename:kbpos_t[]*
p	lib/klib/khmm.h	/^	int *p; \/\/ posterior decoding$/;"	m	struct:__anonf542711f0208	typeref:typename:int *
p	lib/klib/kstring.h	/^	const char *p; \/\/ end of the current token$/;"	m	struct:__anon959017540108	typeref:typename:const char *
p	lib/nuklear/nuklear.h	/^    struct nk_font_config *p;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
p	lib/nuklear/src/nuklear.h	/^    struct nk_font_config *p;$/;"	m	struct:nk_font_config	typeref:struct:nk_font_config *
p	src/Scene.h	/^    mat4x4 p,v;$/;"	m	struct:Scene	typeref:typename:mat4x4
p_buf	lib/klib/kurl.c	/^	int p_buf;    \/\/ file position in the buffer; p_buf <= l_buf$/;"	m	struct:kurl_t	typeref:typename:int	file:
packInt32	lib/klib/bgzf.c	/^static inline void packInt32(uint8_t *buffer, uint32_t value)$/;"	f	typeref:typename:void	file:
pack_info	lib/cimgui/imgui/stb_truetype.h	/^   void *pack_info;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
pack_info	lib/nuklear/nuklear.h	/^    void *pack_info;$/;"	m	struct:nk_tt_pack_context	typeref:typename:void *
pack_info	lib/nuklear/src/nuklear_font.c	/^    void *pack_info;$/;"	m	struct:nk_tt_pack_context	typeref:typename:void *	file:
packed_chars	lib/nuklear/nuklear.h	/^    struct nk_tt_packedchar *packed_chars;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_packedchar *
packed_chars	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_packedchar *packed_chars;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_packedchar *	file:
padding	lib/cimgui/imgui/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anonc4c159420708	typeref:typename:unsigned char
padding	lib/cimgui/imgui/stb_truetype.h	/^   int   padding;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
padding	lib/nuklear/nuklear.h	/^    int   padding;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_chart	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_edit	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_progress	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_property	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_tab	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_text	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_text	typeref:struct:nk_vec2
padding	lib/nuklear/nuklear.h	/^    unsigned char padding[3];$/;"	m	struct:nk_font_config	typeref:typename:unsigned char[3]
padding	lib/nuklear/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	typeref:typename:unsigned char
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_chart	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_edit	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_progress	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_property	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_scrollbar	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_tab	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_text	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
padding	lib/nuklear/src/nuklear.h	/^    unsigned char padding[3];$/;"	m	struct:nk_font_config	typeref:typename:unsigned char[3]
padding	lib/nuklear/src/nuklear_font.c	/^    int   padding;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int	file:
padding	lib/nuklear/src/nuklear_font.c	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	typeref:typename:unsigned char	file:
padding	lib/nuklear/src/nuklear_internal.h	/^    struct nk_vec2 padding;$/;"	m	struct:nk_text	typeref:struct:nk_vec2
padding1	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
padding1	lib/nuklear/nuklear.h	/^    unsigned char padding1;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
padding1	lib/nuklear/src/nuklear.h	/^    unsigned char padding1;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
padding2	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
padding3	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char padding1, padding2, padding3;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
page_count	lib/nuklear/nuklear.h	/^    unsigned int page_count;$/;"	m	struct:nk_pool	typeref:typename:unsigned int
page_count	lib/nuklear/src/nuklear.h	/^    unsigned int page_count;$/;"	m	struct:nk_pool	typeref:typename:unsigned int
pages	lib/nuklear/nuklear.h	/^    struct nk_page *pages;$/;"	m	struct:nk_pool	typeref:struct:nk_page *
pages	lib/nuklear/src/nuklear.h	/^    struct nk_page *pages;$/;"	m	struct:nk_pool	typeref:struct:nk_page *
painter	lib/nuklear/example/canvas.c	/^    struct nk_command_buffer *painter;$/;"	m	struct:nk_canvas	typeref:struct:nk_command_buffer *	file:
pal	lib/nuklear/example/stb_image.h	/^   stbi_uc  pal[256][4];$/;"	m	struct:__anonc731c3c81008	typeref:typename:stbi_uc[256][4]
pan	lib/nuklear/nuklear.h	/^    struct nk_panel pan;$/;"	m	union:nk_page_data	typeref:struct:nk_panel
pan	lib/nuklear/src/nuklear.h	/^    struct nk_panel pan;$/;"	m	union:nk_page_data	typeref:struct:nk_panel
panel_padding	lib/nuklear/example/canvas.c	/^    struct nk_vec2 panel_padding;$/;"	m	struct:nk_canvas	typeref:struct:nk_vec2	file:
panic	lib/klib/kalloc.c	/^static void panic(const char *s)$/;"	f	typeref:typename:void	file:
parent	lib/klib/knhx.h	/^	int parent, n;$/;"	m	struct:__anonf5ac750b0108	typeref:typename:int
parent	lib/nuklear/nuklear.h	/^    nk_size parent;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
parent	lib/nuklear/nuklear.h	/^    struct nk_panel *parent;$/;"	m	struct:nk_panel	typeref:struct:nk_panel *
parent	lib/nuklear/nuklear.h	/^    struct nk_window *parent;$/;"	m	struct:nk_window	typeref:struct:nk_window *
parent	lib/nuklear/src/nuklear.h	/^    nk_size parent;$/;"	m	struct:nk_popup_buffer	typeref:typename:nk_size
parent	lib/nuklear/src/nuklear.h	/^    struct nk_panel *parent;$/;"	m	struct:nk_panel	typeref:struct:nk_panel *
parent	lib/nuklear/src/nuklear.h	/^    struct nk_window *parent;$/;"	m	struct:nk_window	typeref:struct:nk_window *
parse	lib/nuklear/example/stb_image.h	/^   int parse, step;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
parse_files	lib/nuklear/src/build.py	/^def parse_files(arg):$/;"	f
parse_version	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^static int parse_version(void)$/;"	f	typeref:typename:int	file:
parse_version	lib/gl3w/GL/gl3w.c	/^static int parse_version(void)$/;"	f	typeref:typename:int	file:
paste	lib/nuklear/nuklear.h	/^    nk_plugin_paste paste;$/;"	m	struct:nk_clipboard	typeref:typename:nk_plugin_paste
paste	lib/nuklear/src/nuklear.h	/^    nk_plugin_paste paste;$/;"	m	struct:nk_clipboard	typeref:typename:nk_plugin_paste
pasv_ip	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s	typeref:typename:int[4]
pasv_port	lib/klib/knetfile.h	/^	int ctrl_fd, pasv_ip[4], pasv_port, max_response, no_reconnect, is_ready;$/;"	m	struct:knetFile_s	typeref:typename:int[4]
pat_len	lib/klib/test/kstring_bench2.c	/^static int pat_len = 30;$/;"	v	typeref:typename:int	file:
path	lib/klib/knetfile.h	/^	char *path, *http_host;$/;"	m	struct:knetFile_s	typeref:typename:char *
path_count	lib/nuklear/nuklear.h	/^    unsigned int path_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
path_count	lib/nuklear/src/nuklear.h	/^    unsigned int path_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
path_offset	lib/nuklear/nuklear.h	/^    unsigned int path_offset;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
path_offset	lib/nuklear/src/nuklear.h	/^    unsigned int path_offset;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
pause	lib/nuklear/example/extended.c	/^    struct nk_image pause;$/;"	m	struct:media	typeref:struct:nk_image	file:
pen	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpPen *pen;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:GpPen *
pen	lib/nuklear/example/extended.c	/^    struct nk_image pen;$/;"	m	struct:media	typeref:struct:nk_image	file:
permanent	lib/nuklear/nuklear.h	/^    struct nk_allocator permanent;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_allocator
permanent	lib/nuklear/src/nuklear.h	/^    struct nk_allocator permanent;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_allocator
pid	lib/klib/kopen.c	/^	pid_t pid;$/;"	m	struct:__anonae17a10a0208	typeref:typename:pid_t	file:
pipeline_cache	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^    VkPipelineCache        pipeline_cache;$/;"	m	struct:ImGui_ImplGlfwVulkan_Init_Data	typeref:typename:VkPipelineCache
pipeline_t	lib/klib/test/kthread_test2.c	/^} pipeline_t;$/;"	t	typeref:struct:__anon03438e700108	file:
pitch	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    int w, h, pitch;$/;"	m	struct:rawfb_image	typeref:typename:int
pixel	lib/nuklear/nuklear.h	/^    void *pixel;$/;"	m	struct:nk_font_atlas	typeref:typename:void *
pixel	lib/nuklear/src/nuklear.h	/^    void *pixel;$/;"	m	struct:nk_font_atlas	typeref:typename:void *
pixel_shader	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11PixelShader *pixel_shader;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11PixelShader *
pixel_snap	lib/nuklear/nuklear.h	/^    unsigned char pixel_snap;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
pixel_snap	lib/nuklear/src/nuklear.h	/^    unsigned char pixel_snap;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
pixels	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned char* pixels;$/;"	m	struct:GLFWimage	typeref:typename:unsigned char *
pixels	lib/cimgui/imgui/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:__anonc4c159420808	typeref:typename:unsigned char *
pixels	lib/cimgui/imgui/stb_truetype.h	/^   unsigned char *pixels;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned char *
pixels	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    void *pixels;$/;"	m	struct:rawfb_image	typeref:typename:void *
pixels	lib/nuklear/nuklear.h	/^    unsigned char *pixels;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned char *
pixels	lib/nuklear/nuklear.h	/^   unsigned char *pixels;$/;"	m	struct:nk_tt__bitmap	typeref:typename:unsigned char *
pixels	lib/nuklear/src/nuklear_font.c	/^    unsigned char *pixels;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned char *	file:
pixels	lib/nuklear/src/nuklear_font.c	/^   unsigned char *pixels;$/;"	m	struct:nk_tt__bitmap	typeref:typename:unsigned char *	file:
pl	lib/klib/kthread.c	/^	struct ktp_t *pl;$/;"	m	struct:__anone5c783700308	typeref:struct:ktp_t *	file:
play	lib/nuklear/example/extended.c	/^    struct nk_image play;$/;"	m	struct:media	typeref:struct:nk_image	file:
point_count	lib/nuklear/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon	typeref:typename:unsigned short
point_count	lib/nuklear/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon_filled	typeref:typename:unsigned short
point_count	lib/nuklear/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polyline	typeref:typename:unsigned short
point_count	lib/nuklear/src/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon	typeref:typename:unsigned short
point_count	lib/nuklear/src/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polygon_filled	typeref:typename:unsigned short
point_count	lib/nuklear/src/nuklear.h	/^    unsigned short point_count;$/;"	m	struct:nk_command_polyline	typeref:typename:unsigned short
points	lib/nuklear/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon	typeref:struct:nk_vec2i[1]
points	lib/nuklear/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_vec2i[1]
points	lib/nuklear/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polyline	typeref:struct:nk_vec2i[1]
points	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon	typeref:struct:nk_vec2i[1]
points	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polygon_filled	typeref:struct:nk_vec2i[1]
points	lib/nuklear/src/nuklear.h	/^    struct nk_vec2i points[1];$/;"	m	struct:nk_command_polyline	typeref:struct:nk_vec2i[1]
pool	lib/nuklear/nuklear.h	/^    struct nk_allocator pool;$/;"	m	struct:nk_buffer	typeref:struct:nk_allocator
pool	lib/nuklear/nuklear.h	/^    struct nk_pool pool;$/;"	m	struct:nk_context	typeref:struct:nk_pool
pool	lib/nuklear/src/nuklear.h	/^    struct nk_allocator pool;$/;"	m	struct:nk_buffer	typeref:struct:nk_allocator
pool	lib/nuklear/src/nuklear.h	/^    struct nk_pool pool;$/;"	m	struct:nk_context	typeref:struct:nk_pool
pop_back	lib/cimgui/imgui/imgui.h	/^    inline void         pop_back()                                      { IM_ASSERT(Size > 0); S/;"	f	class:ImVector	typeref:typename:void
popup	lib/nuklear/nuklear.h	/^    struct nk_popup_state popup;$/;"	m	struct:nk_window	typeref:struct:nk_popup_state
popup	lib/nuklear/src/nuklear.h	/^    struct nk_popup_state popup;$/;"	m	struct:nk_window	typeref:struct:nk_popup_state
popup_border	lib/nuklear/nuklear.h	/^    float popup_border;$/;"	m	struct:nk_style_window	typeref:typename:float
popup_border	lib/nuklear/src/nuklear.h	/^    float popup_border;$/;"	m	struct:nk_style_window	typeref:typename:float
popup_border_color	lib/nuklear/nuklear.h	/^    struct nk_color popup_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
popup_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color popup_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
popup_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 popup_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
popup_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 popup_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
port	lib/klib/knetfile.h	/^	char *host, *port;$/;"	m	struct:knetFile_s	typeref:typename:char **
pos	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 pos;$/;"	m	struct:ImDrawVert	typeref:struct:ImVec2
pos	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^    ImVec2 pos;$/;"	m	struct:ImDrawVertAllegro	typeref:typename:ImVec2	file:
pos	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^    float    pos[3];$/;"	m	struct:CUSTOMVERTEX	typeref:typename:float[3]	file:
pos	lib/cimgui/imgui/imgui.h	/^    ImVec2  pos;$/;"	m	struct:ImDrawVert	typeref:typename:ImVec2
pos	lib/nuklear/nuklear.h	/^    struct nk_vec2 pos;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
pos	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 pos;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
pos	src/Shader.h	/^    GLuint pos;$/;"	m	struct:__anon74bd45490108	typeref:typename:GLuint
position	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    float position[2];$/;"	m	struct:nk_d3d11_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    float position[3];$/;"	m	struct:nk_d3d9_vertex	typeref:typename:float[3]
position	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    float position[2];$/;"	m	struct:nk_sdl_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    float position[2];$/;"	m	struct:nk_sdl_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLfloat position[2];$/;"	m	struct:nk_sdl_vertex	typeref:typename:GLfloat[2]
position	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    float position[2];$/;"	m	struct:nk_sfml_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    float position[2];$/;"	m	struct:nk_sfml_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    float position[2];$/;"	m	struct:nk_x11_vertex	typeref:typename:float[2]
position	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    float position[2];$/;"	m	struct:nk_x11_vertex	typeref:typename:float[2]
position	lib/nuklear/example/canvas.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
position	lib/nuklear/example/extended.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
position	lib/nuklear/example/file_browser.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
position	lib/nuklear/example/skinning.c	/^    float position[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
preferred_x	lib/cimgui/imgui/stb_textedit.h	/^   float preferred_x; \/\/ this determines where the cursor up\/down tries to seek to along x$/;"	m	struct:__anonfd61af4b0308	typeref:typename:float
preferred_x	lib/nuklear/nuklear.h	/^    float preferred_x;$/;"	m	struct:nk_text_edit	typeref:typename:float
preferred_x	lib/nuklear/src/nuklear.h	/^    float preferred_x;$/;"	m	struct:nk_text_edit	typeref:typename:float
prefersStatusBarHidden	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (BOOL)prefersStatusBarHidden {$/;"	m	implementation:GameViewController
prefix	lib/nuklear/example/stb_image.h	/^   stbi__int16 prefix;$/;"	m	struct:__anonc731c3c80f08	typeref:typename:stbi__int16
preinstall	build/Makefile	/^preinstall: all$/;"	t
preinstall/fast	build/Makefile	/^preinstall\/fast:$/;"	t
prepare	lib/klib/kurl.c	/^static int prepare(kurl_t *ku, int do_seek)$/;"	f	typeref:typename:int	file:
prepare	lib/nuklear/demo/sdl_opengles2/Makefile	/^prepare:$/;"	t
present	lib/nuklear/demo/d3d9/main.c	/^static D3DPRESENT_PARAMETERS present;$/;"	v	typeref:typename:D3DPRESENT_PARAMETERS	file:
pressed	lib/nuklear/nuklear.h	/^    struct nk_style_item pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
pressed	lib/nuklear/src/nuklear.h	/^    struct nk_style_item pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
pressed_active	lib/nuklear/nuklear.h	/^    struct nk_style_item pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
pressed_active	lib/nuklear/src/nuklear.h	/^    struct nk_style_item pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_style_item
prev	lib/nuklear/demo/node_editor.c	/^    struct node *prev;$/;"	m	struct:node	typeref:struct:node *	file:
prev	lib/nuklear/example/extended.c	/^    struct nk_image prev;$/;"	m	struct:media	typeref:struct:nk_image	file:
prev	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state	typeref:typename:int
prev	lib/nuklear/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state	typeref:typename:int
prev	lib/nuklear/nuklear.h	/^    struct nk_page_element *prev;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element *
prev	lib/nuklear/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table **
prev	lib/nuklear/nuklear.h	/^    struct nk_vec2 prev;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
prev	lib/nuklear/nuklear.h	/^    struct nk_window *prev;$/;"	m	struct:nk_window	typeref:struct:nk_window *
prev	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_edit_state	typeref:typename:int
prev	lib/nuklear/src/nuklear.h	/^    int active, prev;$/;"	m	struct:nk_property_state	typeref:typename:int
prev	lib/nuklear/src/nuklear.h	/^    struct nk_page_element *prev;$/;"	m	struct:nk_page_element	typeref:struct:nk_page_element *
prev	lib/nuklear/src/nuklear.h	/^    struct nk_table *next, *prev;$/;"	m	struct:nk_table	typeref:struct:nk_table **
prev	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 prev;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
prev	lib/nuklear/src/nuklear.h	/^    struct nk_window *prev;$/;"	m	struct:nk_window	typeref:struct:nk_window *
prev_first	lib/cimgui/imgui/stb_textedit.h	/^   int prev_first;  \/\/ first char of previous row$/;"	m	struct:__anonfd61af4b0508	typeref:typename:int
prev_first	lib/nuklear/nuklear.h	/^   int prev_first;  \/*_ first char of previous row *\/$/;"	m	struct:nk_text_find	typeref:typename:int
prev_first	lib/nuklear/src/nuklear_text_editor.c	/^   int prev_first;  \/*_ first char of previous row *\/$/;"	m	struct:nk_text_find	typeref:typename:int	file:
prev_link	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_node **prev_link;$/;"	m	struct:__anon5e304a0c0308	typeref:typename:stbrp_node **
prev_link	lib/nuklear/nuklear.h	/^    struct nk_rp_node **prev_link;$/;"	m	struct:nk_rp__findresult	typeref:struct:nk_rp_node **
prev_link	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_node **prev_link;$/;"	m	struct:nk_rp__findresult	typeref:struct:nk_rp_node **	file:
print_help	lib/nuklear/src/build.py	/^def print_help():$/;"	f
priv_files	lib/nuklear/src/build.py	/^        priv_files = parse_files(sys.argv[cur_arg])$/;"	v
priv_files	lib/nuklear/src/build.py	/^priv_files = []$/;"	v
prog	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
prog	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint prog;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
prog	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
prog	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint prog;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
prog	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
prog	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint prog;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
prog	lib/nuklear/example/canvas.c	/^    GLuint prog;$/;"	m	struct:device	typeref:typename:GLuint	file:
prog	lib/nuklear/example/extended.c	/^    GLuint prog;$/;"	m	struct:device	typeref:typename:GLuint	file:
prog	lib/nuklear/example/file_browser.c	/^    GLuint prog;$/;"	m	struct:device	typeref:typename:GLuint	file:
prog	lib/nuklear/example/skinning.c	/^    GLuint prog;$/;"	m	struct:device	typeref:typename:GLuint	file:
prog	src/Shader.h	/^    GLuint prog;$/;"	m	struct:__anon74bd45490108	typeref:typename:GLuint
proggy_clean_ttf_compressed_data_base85	lib/cimgui/imgui/imgui_draw.cpp	/^static const char proggy_clean_ttf_compressed_data_base85[11980+1] =$/;"	v	typeref:typename:const char[]	file:
program	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^    GLuint _program;$/;"	E	interface:GameViewController
progress	lib/nuklear/nuklear.h	/^    struct nk_style_progress progress;$/;"	m	struct:nk_style	typeref:struct:nk_style_progress
progress	lib/nuklear/src/nuklear.h	/^    struct nk_style_progress progress;$/;"	m	struct:nk_style	typeref:struct:nk_style_progress
progressive	lib/nuklear/example/stb_image.h	/^   int            progressive;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
projection	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    D3DMATRIX projection;$/;"	m	struct:__anon39ff3a1e0108	typeref:typename:D3DMATRIX
property	lib/nuklear/nuklear.h	/^    struct nk_property_state property;$/;"	m	struct:nk_window	typeref:struct:nk_property_state
property	lib/nuklear/nuklear.h	/^    struct nk_style_property property;$/;"	m	struct:nk_style	typeref:struct:nk_style_property
property	lib/nuklear/src/nuklear.h	/^    struct nk_property_state property;$/;"	m	struct:nk_window	typeref:struct:nk_property_state
property	lib/nuklear/src/nuklear.h	/^    struct nk_style_property property;$/;"	m	struct:nk_style	typeref:struct:nk_style_property
ptr	lib/klib/kalloc.c	/^	struct header_t *ptr;$/;"	m	struct:header_t	typeref:struct:header_t *	file:
ptr	lib/nuklear/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory	typeref:typename:void *
ptr	lib/nuklear/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anond7ed0994020a	typeref:typename:void *
ptr	lib/nuklear/src/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory	typeref:typename:void *
ptr	lib/nuklear/src/nuklear.h	/^typedef union {void *ptr; int id;} nk_handle;$/;"	m	union:__anon8fa426eb020a	typeref:typename:void *
pub_files	lib/nuklear/src/build.py	/^        pub_files = parse_files(sys.argv[cur_arg])$/;"	v
pub_files	lib/nuklear/src/build.py	/^pub_files = []$/;"	v
pump_input	lib/nuklear/example/canvas.c	/^pump_input(struct nk_context *ctx, GLFWwindow *win)$/;"	f	typeref:typename:void	file:
push_back	lib/cimgui/imgui/imgui.h	/^    inline void         push_back(const value_type& v)                  { if (Size == Capacity) /;"	f	class:ImVector	typeref:typename:void
push_back	lib/klib/kexpr.c	/^static inline ke1_t *push_back(ke1_t **a, int *n, int *m)$/;"	f	typeref:typename:ke1_t *	file:
push_cigar	lib/klib/ksw.c	/^static inline uint32_t *push_cigar(int *n_cigar, int *m_cigar, uint32_t *cigar, int op, int len)$/;"	f	typeref:typename:uint32_t *	file:
push_front	lib/cimgui/imgui/imgui.h	/^    inline void         push_front(const value_type& v)                 { if (Size == 0) push_ba/;"	f	class:ImVector	typeref:typename:void
pvertices	lib/cimgui/imgui/stb_truetype.h	/^   stbtt_vertex *pvertices;$/;"	m	struct:__anonc4c159420f08	typeref:typename:stbtt_vertex *
qb	lib/klib/ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon7bd1e0a70108	typeref:typename:int
qe	lib/klib/ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon7bd1e0a70108	typeref:typename:int
qlen	lib/klib/ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	typeref:typename:int	file:
qnxnto	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qnxnto	build/CMakeFiles/3.11.2/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v	typeref:typename:char const *
qp	lib/klib/ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	typeref:typename:__m128i *	file:
quat	lib/linmath/linmath.h	/^typedef float quat[4];$/;"	t	typeref:typename:float[4]
quat_add	lib/linmath/linmath.h	/^static inline void quat_add(quat r, quat a, quat b)$/;"	f	typeref:typename:void
quat_conj	lib/linmath/linmath.h	/^static inline void quat_conj(quat r, quat q)$/;"	f	typeref:typename:void
quat_from_mat4x4	lib/linmath/linmath.h	/^static inline void quat_from_mat4x4(quat q, mat4x4 M)$/;"	f	typeref:typename:void
quat_identity	lib/linmath/linmath.h	/^static inline void quat_identity(quat q)$/;"	f	typeref:typename:void
quat_inner_product	lib/linmath/linmath.h	/^static inline float quat_inner_product(quat a, quat b)$/;"	f	typeref:typename:float
quat_mul	lib/linmath/linmath.h	/^static inline void quat_mul(quat r, quat p, quat q)$/;"	f	typeref:typename:void
quat_mul_vec3	lib/linmath/linmath.h	/^static inline void quat_mul_vec3(vec3 r, quat q, vec3 v)$/;"	f	typeref:typename:void
quat_norm	lib/linmath/linmath.h	/^#define quat_norm /;"	d
quat_rotate	lib/linmath/linmath.h	/^static inline void quat_rotate(quat r, float angle, vec3 axis) {$/;"	f	typeref:typename:void
quat_scale	lib/linmath/linmath.h	/^static inline void quat_scale(quat r, quat v, float s)$/;"	f	typeref:typename:void
quat_sub	lib/linmath/linmath.h	/^static inline void quat_sub(quat r, quat a, quat b)$/;"	f	typeref:typename:void
query	lib/nuklear/nuklear.h	/^    nk_query_font_glyph_f query;$/;"	m	struct:nk_user_font	typeref:typename:nk_query_font_glyph_f
query	lib/nuklear/src/nuklear.h	/^    nk_query_font_glyph_f query;$/;"	m	struct:nk_user_font	typeref:typename:nk_query_font_glyph_f
quickSort	lib/klib/test/ksort_test.cc	/^void quickSort (int numbers[], int qty) {$/;"	f	typeref:typename:void
quickSortRecurse	lib/klib/test/ksort_test.cc	/^static void quickSortRecurse (int * numbers, int left, int right) {$/;"	f	typeref:typename:void	file:
r	lib/klib/kexpr.c	/^	double r;$/;"	m	struct:ke1_s	typeref:typename:double	file:
r	lib/nuklear/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc	typeref:typename:unsigned short
r	lib/nuklear/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc_filled	typeref:typename:unsigned short
r	lib/nuklear/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
r	lib/nuklear/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
r	lib/nuklear/src/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc	typeref:typename:unsigned short
r	lib/nuklear/src/nuklear.h	/^    unsigned short r;$/;"	m	struct:nk_command_arc_filled	typeref:typename:unsigned short
r	lib/nuklear/src/nuklear.h	/^struct nk_color {nk_byte r,g,b,a;};$/;"	m	struct:nk_color	typeref:typename:nk_byte
r	lib/nuklear/src/nuklear.h	/^struct nk_colorf {float r,g,b,a;};$/;"	m	struct:nk_colorf	typeref:typename:float
radix_sort	lib/klib/test/ksort_test.cc	/^void radix_sort(unsigned *array, int offset, int end, int shift) {$/;"	f	typeref:typename:void
range	lib/nuklear/nuklear.h	/^    const nk_rune *range;$/;"	m	struct:nk_font_config	typeref:typename:const nk_rune *
range	lib/nuklear/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
range	lib/nuklear/src/nuklear.h	/^    const nk_rune *range;$/;"	m	struct:nk_font_config	typeref:typename:const nk_rune *
range	lib/nuklear/src/nuklear.h	/^    float min, max, range;$/;"	m	struct:nk_chart_slot	typeref:typename:float
range_count	lib/nuklear/nuklear.h	/^    nk_rune range_count;$/;"	m	struct:nk_font_bake_data	typeref:typename:nk_rune
range_count	lib/nuklear/src/nuklear_font.c	/^    nk_rune range_count;$/;"	m	struct:nk_font_bake_data	typeref:typename:nk_rune	file:
ranges	lib/nuklear/nuklear.h	/^    const nk_rune *ranges;$/;"	m	struct:nk_baked_font	typeref:typename:const nk_rune *
ranges	lib/nuklear/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_tt_pack_range *
ranges	lib/nuklear/nuklear.h	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_pack_range *
ranges	lib/nuklear/src/nuklear.h	/^    const nk_rune *ranges;$/;"	m	struct:nk_baked_font	typeref:typename:const nk_rune *
ranges	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_tt_pack_range *	file:
ranges	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_pack_range *ranges;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_pack_range *	file:
rasterizer_state	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11RasterizerState *rasterizer_state;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11RasterizerState *
ratio	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
ratio	lib/nuklear/nuklear.h	/^    const float *ratio;$/;"	m	struct:nk_row_layout	typeref:typename:const float *
ratio	lib/nuklear/src/nuklear.h	/^    const float *ratio;$/;"	m	struct:nk_row_layout	typeref:typename:const float *
ratio	src/Scene.h	/^    float ratio; $/;"	m	struct:Scene	typeref:typename:float
raw_coeff	lib/nuklear/example/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:void **
raw_data	lib/nuklear/example/stb_image.h	/^      void *raw_data, *raw_coeff;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:void *
rawfb_context	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^struct rawfb_context {$/;"	s
rawfb_image	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^struct rawfb_image {$/;"	s
read	lib/nuklear/example/stb_image.h	/^   int      (*read)  (void *user,char *data,int size);   \/\/ fill 'data' with 'size' bytes.  re/;"	m	struct:__anonc731c3c80208	typeref:typename:int (*)(void * user,char * data,int size)
read_from_callbacks	lib/nuklear/example/stb_image.h	/^   int read_from_callbacks;$/;"	m	struct:__anonc731c3c80308	typeref:typename:int
readseq	lib/klib/lua/bio.lua	/^local function readseq(fp)$/;"	f
real_func1	lib/klib/kexpr.c	/^		double (*real_func1)(double);$/;"	m	union:ke1_s::__anon975ae7f7010a	typeref:typename:double (*)(double)	file:
real_func2	lib/klib/kexpr.c	/^		double (*real_func2)(double, double);$/;"	m	union:ke1_s::__anon975ae7f7010a	typeref:typename:double (*)(double,double)	file:
rebuild_cache	build/Makefile	/^rebuild_cache:$/;"	t
rebuild_cache/fast	build/Makefile	/^rebuild_cache\/fast: rebuild_cache$/;"	t
rect_height_compare	lib/cimgui/imgui/stb_rect_pack.h	/^static int STBRP__CDECL rect_height_compare(const void *a, const void *b)$/;"	f	typeref:typename:int STBRP__CDECL
rect_original_order	lib/cimgui/imgui/stb_rect_pack.h	/^static int STBRP__CDECL rect_original_order(const void *a, const void *b)$/;"	f	typeref:typename:int STBRP__CDECL
rects	lib/nuklear/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_rp_rect *
rects	lib/nuklear/nuklear.h	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_baker	typeref:struct:nk_rp_rect *
rects	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_bake_data	typeref:struct:nk_rp_rect *	file:
rects	lib/nuklear/src/nuklear_font.c	/^    struct nk_rp_rect *rects;$/;"	m	struct:nk_font_baker	typeref:struct:nk_rp_rect *	file:
red	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned short* red;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned short *
redBits	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int redBits;$/;"	m	struct:GLFWvidmode	typeref:typename:int
redo_char_point	lib/cimgui/imgui/stb_textedit.h	/^   short undo_char_point, redo_char_point;$/;"	m	struct:__anonfd61af4b0208	typeref:typename:short
redo_char_point	lib/nuklear/nuklear.h	/^   short redo_char_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
redo_char_point	lib/nuklear/src/nuklear.h	/^   short redo_char_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
redo_point	lib/cimgui/imgui/stb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anonfd61af4b0208	typeref:typename:short
redo_point	lib/nuklear/nuklear.h	/^   short redo_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
redo_point	lib/nuklear/src/nuklear.h	/^   short redo_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
refreshRate	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int refreshRate;$/;"	m	struct:GLFWvidmode	typeref:typename:int
region	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short[4]
region	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short[4]
render	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.h	/^- (void)render;$/;"	m	interface:ImGuiHelper
render	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
render_pass	lib/cimgui/imgui/examples/vulkan_example/imgui_impl_glfw_vulkan.h	/^    VkRenderPass           render_pass;$/;"	m	struct:ImGui_ImplGlfwVulkan_Init_Data	typeref:typename:VkRenderPass
renderer_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *renderer_str;$/;"	m	struct:opengl_info	typeref:typename:const char *
repeat	lib/klib/test/kstring_bench2.c	/^static int repeat = 50;$/;"	v	typeref:typename:int	file:
repo	lib/nuklear/package.json	/^  "repo": "vurtun\/nuklear",$/;"	s
resample	lib/nuklear/example/stb_image.h	/^   resample_row_func resample;$/;"	m	struct:__anonc731c3c80808	typeref:typename:resample_row_func
resample_row_1	lib/nuklear/example/stb_image.h	/^static stbi_uc *resample_row_1(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, int hs)$/;"	f	typeref:typename:stbi_uc *
resample_row_func	lib/nuklear/example/stb_image.h	/^typedef stbi_uc *(*resample_row_func)(stbi_uc *out, stbi_uc *in0, stbi_uc *in1,$/;"	t	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in0,stbi_uc * in1,int w,int hs)
resample_row_hv_2_kernel	lib/nuklear/example/stb_image.h	/^   stbi_uc *(*resample_row_hv_2_kernel)(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	m	struct:__anonc731c3c80608	typeref:typename:stbi_uc * (*)(stbi_uc * out,stbi_uc * in_near,stbi_uc * in_far,int w,int hs)
reserve	lib/cimgui/imgui/imgui.h	/^    inline void         reserve(int new_capacity)$/;"	f	class:ImVector	typeref:typename:void
reserve	lib/cimgui/imgui/imgui.h	/^    void                reserve(int capacity) { Buf.reserve(capacity); }$/;"	f	struct:ImGuiTextBuffer	typeref:typename:void
resize	lib/cimgui/imgui/imgui.h	/^    inline void         resize(int new_size)                    { if (new_size > Capacity) reser/;"	f	class:ImVector	typeref:typename:void
resize	lib/cimgui/imgui/imgui.h	/^    inline void         resize(int new_size,const value_type& v){ if (new_size > Capacity) reser/;"	f	class:ImVector	typeref:typename:void
resize_grip_def	lib/cimgui/imgui/imgui.cpp	/^const ImGuiResizeGripDef resize_grip_def[4] =$/;"	v	typeref:typename:const ImGuiResizeGripDef[4]
resize_vulkan	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void resize_vulkan(int w, int h)$/;"	f	typeref:typename:void	file:
response	lib/klib/knetfile.h	/^	char *response, *retr, *size_cmd;$/;"	m	struct:knetFile_s	typeref:typename:char *
response	lib/klib/kopen.c	/^	char *response;$/;"	m	struct:__anonae17a10a0108	typeref:typename:char *	file:
restart_interval	lib/nuklear/example/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
retr	lib/klib/knetfile.h	/^	char *response, *retr, *size_cmd;$/;"	m	struct:knetFile_s	typeref:typename:char **
revseq	lib/klib/ksw.c	/^static void revseq(int l, uint8_t *s)$/;"	f	typeref:typename:void	file:
right	lib/klib/ksort.h	/^	void *left, *right;$/;"	m	struct:__anonb76165850108	typeref:typename:void **
right	lib/nuklear/nuklear.h	/^    struct nk_color right;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
right	lib/nuklear/src/nuklear.h	/^    struct nk_color right;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
rocket	lib/nuklear/example/extended.c	/^    struct nk_image rocket;$/;"	m	struct:media	typeref:struct:nk_image	file:
rol32	lib/klib/kurl.c	/^#define rol32(/;"	d	file:
root	lib/klib/kson.h	/^	kson_node_t *root;$/;"	m	struct:__anonf60a9bad0208	typeref:typename:kson_node_t *
root	lib/nuklear/demo/x11/main.c	/^    Window root;$/;"	m	struct:XWindow	typeref:typename:Window	file:
root	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Window root;$/;"	m	struct:XSurface	typeref:typename:Window
root	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Window root;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:Window
root	lib/nuklear/demo/x11_rawfb/main.c	/^    Window root;$/;"	m	struct:XWindow	typeref:typename:Window	file:
root	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    Window root;$/;"	m	struct:__anon88f201100108	typeref:typename:Window
rotation	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^    float _rotation;$/;"	E	interface:GameViewController
rotation_speed	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^    float rotation_speed;$/;"	m	struct:DebugHUD	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_button	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_chart	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_combo	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_edit	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_progress	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_property	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_selectable	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_slider	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_tab	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_window	typeref:typename:float
rounding	lib/nuklear/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
rounding	lib/nuklear/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_button	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_chart	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_combo	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_edit	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_progress	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_property	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_selectable	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_slider	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_tab	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    float rounding;$/;"	m	struct:nk_style_window	typeref:typename:float
rounding	lib/nuklear/src/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
rounding	lib/nuklear/src/nuklear.h	/^    unsigned short rounding;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
rounding_cursor	lib/nuklear/nuklear.h	/^    float rounding_cursor;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
rounding_cursor	lib/nuklear/src/nuklear.h	/^    float rounding_cursor;$/;"	m	struct:nk_style_scrollbar	typeref:typename:float
row	lib/nuklear/nuklear.h	/^    struct nk_row_layout row;$/;"	m	struct:nk_panel	typeref:struct:nk_row_layout
row	lib/nuklear/src/nuklear.h	/^    struct nk_row_layout row;$/;"	m	struct:nk_panel	typeref:struct:nk_row_layout
row_padding	lib/nuklear/nuklear.h	/^    float row_padding;$/;"	m	struct:nk_style_edit	typeref:typename:float
row_padding	lib/nuklear/src/nuklear.h	/^    float row_padding;$/;"	m	struct:nk_style_edit	typeref:typename:float
rs_insertsort	lib/klib/test/ksort_test.cc	/^static inline void rs_insertsort(rstype_t *s, rstype_t *t)$/;"	f	typeref:typename:void	file:
rs_sort	lib/klib/test/ksort_test.cc	/^void rs_sort(rstype_t *beg, rstype_t *end, int n_bits, int s)$/;"	f	typeref:typename:void
rsbucket_t	lib/klib/test/ksort_test.cc	/^} rsbucket_t;$/;"	t	typeref:struct:__anonef293a910108	file:
rskey	lib/klib/test/ksort_test.cc	/^#define rskey(/;"	d	file:
rstype_t	lib/klib/test/ksort_test.cc	/^#define rstype_t /;"	d	file:
rt_view	lib/nuklear/demo/d3d11/main.c	/^static ID3D11RenderTargetView* rt_view;$/;"	v	typeref:typename:ID3D11RenderTargetView *	file:
running	lib/nuklear/demo/sdl_opengles2/main.c	/^int running = nk_true;$/;"	v	typeref:typename:int
s	lib/klib/bgzf.h	/^	char *s;$/;"	m	struct:__kstring_t	typeref:typename:char *
s	lib/klib/kexpr.c	/^	char *s;$/;"	m	struct:ke1_s	typeref:typename:char *	file:
s	lib/klib/khmm.h	/^	FLOAT **f, **b, *s;$/;"	m	struct:__anonf542711f0208	typeref:typename:FLOAT *****
s	lib/klib/knhx.h	/^	char *s;$/;"	m	struct:__kstring_t	typeref:typename:char *
s	lib/klib/kseq.h	/^	char *s;$/;"	m	struct:__kstring_t	typeref:typename:char *
s	lib/klib/kstring.h	/^	char *s;$/;"	m	struct:__kstring_t	typeref:typename:char *
s	lib/klib/kurl.c	/^typedef struct { int l, m; char *s; } kstring_t;$/;"	m	struct:__anonf630694b0408	typeref:typename:char *	file:
s	lib/klib/test/kseq_bench2.c	/^		char *s;$/;"	v	typeref:typename:char *
s	lib/klib/test/kseq_bench2.c	/^		kstring_t s;$/;"	v	typeref:typename:kstring_t
s	lib/nuklear/example/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anonc731c3c80608	typeref:typename:stbi__context *
s	lib/nuklear/example/stb_image.h	/^   stbi__context *s;$/;"	m	struct:__anonc731c3c80c08	typeref:typename:stbi__context *
s0	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anonc4c159420308	typeref:typename:float
s0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
s0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
s1	lib/cimgui/imgui/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anonc4c159420308	typeref:typename:float
s1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
s1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
s3_parse	lib/klib/kurl.c	/^s3aux_t s3_parse(const char *url, const char *_id, const char *_secret, const char *fn_secret)$/;"	f	typeref:typename:s3aux_t
s3_read_awssecret	lib/klib/kurl.c	/^static char *s3_read_awssecret(const char *fn)$/;"	f	typeref:typename:char *	file:
s3_sign	lib/klib/kurl.c	/^static void s3_sign(const char *key, const char *data, char out[29])$/;"	f	typeref:typename:void	file:
s3aux_t	lib/klib/kurl.c	/^} s3aux_t;$/;"	t	typeref:struct:__anonf630694b0108	file:
s3key_fn	lib/klib/kurl.h	/^	const char *s3key_fn;$/;"	m	struct:__anonf63069500108	typeref:typename:const char *
s3keyid	lib/klib/kurl.h	/^	const char *s3keyid;$/;"	m	struct:__anonf63069500108	typeref:typename:const char *
s3secretkey	lib/klib/kurl.h	/^	const char *s3secretkey;$/;"	m	struct:__anonf63069500108	typeref:typename:const char *
sAddString	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddString(uSynergyContext *context, const char *string)$/;"	f	typeref:typename:void	file:
sAddUInt16	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddUInt16(uSynergyContext *context, uint16_t value)$/;"	f	typeref:typename:void	file:
sAddUInt32	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddUInt32(uSynergyContext *context, uint32_t value)$/;"	f	typeref:typename:void	file:
sAddUInt8	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sAddUInt8(uSynergyContext *context, uint8_t value)$/;"	f	typeref:typename:void	file:
sNetToNative16	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static int16_t sNetToNative16(const unsigned char *value)$/;"	f	typeref:typename:int16_t	file:
sNetToNative32	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static int32_t sNetToNative32(const unsigned char *value)$/;"	f	typeref:typename:int32_t	file:
sProcessMessage	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sProcessMessage(uSynergyContext *context, const uint8_t *message)$/;"	f	typeref:typename:void	file:
sSendJoystickCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSendJoystickCallback(uSynergyContext *context, uint8_t joyNum)$/;"	f	typeref:typename:void	file:
sSendKeyboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSendKeyboardCallback(uSynergyContext *context, uint16_t key, uint16_t modifiers, uS/;"	f	typeref:typename:void	file:
sSendMouseCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSendMouseCallback(uSynergyContext *context)$/;"	f	typeref:typename:void	file:
sSendReply	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static uSynergyBool sSendReply(uSynergyContext *context)$/;"	f	typeref:typename:uSynergyBool	file:
sSetDisconnected	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sSetDisconnected(uSynergyContext *context)$/;"	f	typeref:typename:void	file:
sTrace	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sTrace(uSynergyContext *context, const char* text)$/;"	f	typeref:typename:void	file:
sUpdateContext	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^static void sUpdateContext(uSynergyContext *context)$/;"	f	typeref:typename:void	file:
saint_t	lib/klib/ksa.c	/^typedef int saint_t;$/;"	t	typeref:typename:int	file:
saint_t	lib/klib/ksa.c	/^typedef int64_t saint_t;$/;"	t	typeref:typename:int64_t	file:
sampler_state	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11SamplerState *sampler_state;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11SamplerState *
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.10
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.6
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.8
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.0
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.11
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.12
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.2
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.4
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.7
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.9
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "3x"$/;"	s	object:images.1
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "3x"$/;"	s	object:images.3
scale	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "3x"$/;"	s	object:images.5
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.0
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.2
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.4
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.6
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "1x"$/;"	s	object:images.8
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.1
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.10
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.3
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.5
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.7
scale	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "scale" : "2x"$/;"	s	object:images.9
scale	lib/nuklear/nuklear.h	/^    float scale;$/;"	m	struct:nk_font	typeref:typename:float
scale	lib/nuklear/src/nuklear.h	/^    float scale;$/;"	m	struct:nk_font	typeref:typename:float
scaler	lib/nuklear/nuklear.h	/^    struct nk_style_item scaler;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_item
scaler	lib/nuklear/src/nuklear.h	/^    struct nk_style_item scaler;$/;"	m	struct:nk_style_window	typeref:struct:nk_style_item
scan_n	lib/nuklear/example/stb_image.h	/^   int scan_n, order[4];$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
scene	src/App.c	/^Scene* scene;$/;"	v	typeref:typename:Scene *
scissors	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    struct nk_rect scissors;$/;"	m	struct:rawfb_context	typeref:struct:nk_rect
score	lib/klib/ksw.h	/^	int score; \/\/ best score$/;"	m	struct:__anon7bd1e0a70108	typeref:typename:int
score2	lib/klib/ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon7bd1e0a70108	typeref:typename:int
screen	lib/nuklear/demo/x11/main.c	/^    int screen;$/;"	m	struct:XWindow	typeref:typename:int	file:
screen	lib/nuklear/demo/x11/nuklear_xlib.h	/^    int screen;$/;"	m	struct:XSurface	typeref:typename:int
screen	lib/nuklear/demo/x11_rawfb/main.c	/^    int screen;$/;"	m	struct:XWindow	typeref:typename:int	file:
scroll	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    struct nk_vec2 scroll;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
scroll	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    struct nk_vec2 scroll;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
scroll	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_vec2 scroll;$/;"	m	struct:nk_glfw	typeref:struct:nk_vec2
scroll_delta	lib/nuklear/nuklear.h	/^    struct nk_vec2 scroll_delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
scroll_delta	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scroll_delta;$/;"	m	struct:nk_mouse	typeref:struct:nk_vec2
scroll_input	lib/nuklear/example/canvas.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	typeref:typename:void	file:
scroll_input	lib/nuklear/example/extended.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	typeref:typename:void	file:
scroll_input	lib/nuklear/example/file_browser.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	typeref:typename:void	file:
scroll_input	lib/nuklear/example/skinning.c	/^static void scroll_input(GLFWwindow *win, double _, double yoff)$/;"	f	typeref:typename:void	file:
scroll_pointer	lib/nuklear/nuklear.h	/^    nk_uint *scroll_pointer;$/;"	m	struct:nk_list_view	typeref:typename:nk_uint *
scroll_pointer	lib/nuklear/src/nuklear.h	/^    nk_uint *scroll_pointer;$/;"	m	struct:nk_list_view	typeref:typename:nk_uint *
scroll_value	lib/nuklear/nuklear.h	/^    nk_uint scroll_value;$/;"	m	struct:nk_list_view	typeref:typename:nk_uint
scroll_value	lib/nuklear/src/nuklear.h	/^    nk_uint scroll_value;$/;"	m	struct:nk_list_view	typeref:typename:nk_uint
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_edit_state	typeref:struct:nk_scroll
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_window	typeref:struct:nk_scroll
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_style_scrollbar scrollbar;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_scrollbar
scrollbar	lib/nuklear/nuklear.h	/^    struct nk_vec2 scrollbar;$/;"	m	struct:nk_text_edit	typeref:struct:nk_vec2
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_edit_state	typeref:struct:nk_scroll
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_scroll scrollbar;$/;"	m	struct:nk_window	typeref:struct:nk_scroll
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_style_scrollbar scrollbar;$/;"	m	struct:nk_style_edit	typeref:struct:nk_style_scrollbar
scrollbar	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scrollbar;$/;"	m	struct:nk_text_edit	typeref:struct:nk_vec2
scrollbar_dec_button	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_dec_button;$/;"	m	struct:media	typeref:struct:nk_image	file:
scrollbar_dec_button_hover	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_dec_button_hover;$/;"	m	struct:media	typeref:struct:nk_image	file:
scrollbar_hiding_timer	lib/nuklear/nuklear.h	/^    float scrollbar_hiding_timer;$/;"	m	struct:nk_window	typeref:typename:float
scrollbar_hiding_timer	lib/nuklear/src/nuklear.h	/^    float scrollbar_hiding_timer;$/;"	m	struct:nk_window	typeref:typename:float
scrollbar_inc_button	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_inc_button;$/;"	m	struct:media	typeref:struct:nk_image	file:
scrollbar_inc_button_hover	lib/nuklear/example/skinning.c	/^    struct nk_image scrollbar_inc_button_hover;$/;"	m	struct:media	typeref:struct:nk_image	file:
scrollbar_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_edit	typeref:struct:nk_vec2
scrollbar_size	lib/nuklear/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
scrollbar_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_edit	typeref:struct:nk_vec2
scrollbar_size	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 scrollbar_size;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
scrolled	lib/nuklear/nuklear.h	/^    unsigned int scrolled;$/;"	m	struct:nk_window	typeref:typename:unsigned int
scrolled	lib/nuklear/src/nuklear.h	/^    unsigned int scrolled;$/;"	m	struct:nk_window	typeref:typename:unsigned int
scrollh	lib/nuklear/nuklear.h	/^    struct nk_style_scrollbar scrollh;$/;"	m	struct:nk_style	typeref:struct:nk_style_scrollbar
scrollh	lib/nuklear/src/nuklear.h	/^    struct nk_style_scrollbar scrollh;$/;"	m	struct:nk_style	typeref:struct:nk_style_scrollbar
scrolling	lib/nuklear/demo/node_editor.c	/^    struct nk_vec2 scrolling;$/;"	m	struct:node_editor	typeref:struct:nk_vec2	file:
scrollv	lib/nuklear/nuklear.h	/^    struct nk_style_scrollbar scrollv;$/;"	m	struct:nk_style	typeref:struct:nk_style_scrollbar
scrollv	lib/nuklear/src/nuklear.h	/^    struct nk_style_scrollbar scrollv;$/;"	m	struct:nk_style	typeref:struct:nk_style_scrollbar
sdl	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^} sdl;$/;"	v	typeref:struct:nk_sdl
sdl	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^} sdl;$/;"	v	typeref:struct:nk_sdl
sdl	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^} sdl;$/;"	v	typeref:struct:nk_sdl
seek_offset	lib/klib/knetfile.h	/^	int64_t seek_offset; \/\/ for lazy seek$/;"	m	struct:knetFile_s	typeref:typename:int64_t
sel_end	lib/nuklear/nuklear.h	/^    int sel_end;$/;"	m	struct:nk_edit_state	typeref:typename:int
sel_end	lib/nuklear/src/nuklear.h	/^    int sel_end;$/;"	m	struct:nk_edit_state	typeref:typename:int
sel_start	lib/nuklear/nuklear.h	/^    int sel_start;$/;"	m	struct:nk_edit_state	typeref:typename:int
sel_start	lib/nuklear/src/nuklear.h	/^    int sel_start;$/;"	m	struct:nk_edit_state	typeref:typename:int
select_end	lib/cimgui/imgui/stb_textedit.h	/^   int select_end;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:int
select_end	lib/nuklear/nuklear.h	/^    int select_end;$/;"	m	struct:nk_property_state	typeref:typename:int
select_end	lib/nuklear/nuklear.h	/^    int select_end;$/;"	m	struct:nk_text_edit	typeref:typename:int
select_end	lib/nuklear/src/nuklear.h	/^    int select_end;$/;"	m	struct:nk_property_state	typeref:typename:int
select_end	lib/nuklear/src/nuklear.h	/^    int select_end;$/;"	m	struct:nk_text_edit	typeref:typename:int
select_start	lib/cimgui/imgui/stb_textedit.h	/^   int select_start;          \/\/ selection start point$/;"	m	struct:__anonfd61af4b0308	typeref:typename:int
select_start	lib/nuklear/nuklear.h	/^    int select_start;$/;"	m	struct:nk_property_state	typeref:typename:int
select_start	lib/nuklear/nuklear.h	/^    int select_start;$/;"	m	struct:nk_text_edit	typeref:typename:int
select_start	lib/nuklear/src/nuklear.h	/^    int select_start;$/;"	m	struct:nk_property_state	typeref:typename:int
select_start	lib/nuklear/src/nuklear.h	/^    int select_start;$/;"	m	struct:nk_text_edit	typeref:typename:int
selectable	lib/nuklear/nuklear.h	/^    struct nk_style_selectable selectable;$/;"	m	struct:nk_style	typeref:struct:nk_style_selectable
selectable	lib/nuklear/src/nuklear.h	/^    struct nk_style_selectable selectable;$/;"	m	struct:nk_style	typeref:struct:nk_style_selectable
selected	lib/nuklear/demo/node_editor.c	/^    struct node *selected;$/;"	m	struct:node_editor	typeref:struct:node *	file:
selected_color	lib/nuklear/nuklear.h	/^    struct nk_color selected_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
selected_color	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_color;$/;"	m	struct:nk_style_chart	typeref:struct:nk_color
selected_hover	lib/nuklear/nuklear.h	/^    struct nk_color selected_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_normal	lib/nuklear/nuklear.h	/^    struct nk_color selected_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_text_hover	lib/nuklear/nuklear.h	/^    struct nk_color selected_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_text_normal	lib/nuklear/nuklear.h	/^    struct nk_color selected_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
selected_text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color selected_text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
sep	lib/klib/kstring.h	/^	int sep, finished;$/;"	m	struct:__anon959017540108	typeref:typename:int
seq	lib/klib/khmm.h	/^	char *seq;$/;"	m	struct:__anonf542711f0208	typeref:typename:char *
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_context	typeref:typename:unsigned int
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned int
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_property_state	typeref:typename:unsigned int
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_table	typeref:typename:unsigned int
seq	lib/nuklear/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_window	typeref:typename:unsigned int
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_context	typeref:typename:unsigned int
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned int
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_property_state	typeref:typename:unsigned int
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_table	typeref:typename:unsigned int
seq	lib/nuklear/src/nuklear.h	/^    unsigned int seq;$/;"	m	struct:nk_window	typeref:typename:unsigned int
serverName	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^@property (strong, nonatomic) NSString *serverName;$/;"	p	interface:GameViewController
serverName	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^@property (nonatomic, strong) NSString *serverName;$/;"	p	interface:ImGuiHelper
set	lib/nuklear/demo/x11/nuklear_xlib.h	/^    XFontSet set;$/;"	m	struct:XFont	typeref:typename:XFontSet
setCustomKeyboardEventSource:	lib/nuklear/demo/allegro5/KeyboardHandleriOS.h	/^-(void)setCustomKeyboardEventSource:(ALLEGRO_EVENT_SOURCE*)ev_src;$/;"	m	interface:KeyboardHandleriOS
setCustomKeyboardEventSource:	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^- (void)setCustomKeyboardEventSource:(ALLEGRO_EVENT_SOURCE *)ev_src {$/;"	m	implementation:KeyboardHandleriOS
set_style	lib/nuklear/demo/style.c	/^set_style(struct nk_context *ctx, enum theme theme)$/;"	f	typeref:typename:void	file:
set_swap_chain_size	lib/nuklear/demo/d3d11/main.c	/^set_swap_chain_size(int width, int height)$/;"	f	typeref:typename:void	file:
setupGL	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (void)setupGL;$/;"	m	interface:GameViewController
setupGL	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
setupImGuiHooks	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
setupKeymaps	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
setup_vulkan	lib/cimgui/imgui/examples/vulkan_example/main.cpp	/^static void setup_vulkan(GLFWwindow* window)$/;"	f	typeref:typename:void	file:
sfml	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^} sfml;$/;"	v	typeref:struct:nk_sfml
sfml	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^} sfml;$/;"	v	typeref:struct:nk_sfml
sha1_add	lib/klib/kurl.c	/^static inline void sha1_add(sha1nfo *s, uint8_t data)$/;"	f	typeref:typename:void	file:
sha1_final	lib/klib/kurl.c	/^const uint8_t *sha1_final(sha1nfo *s)$/;"	f	typeref:typename:const uint8_t *
sha1_final_hmac	lib/klib/kurl.c	/^const uint8_t *sha1_final_hmac(sha1nfo *s)$/;"	f	typeref:typename:const uint8_t *
sha1_hashBlock	lib/klib/kurl.c	/^static void sha1_hashBlock(sha1nfo *s)$/;"	f	typeref:typename:void	file:
sha1_init	lib/klib/kurl.c	/^void sha1_init(sha1nfo *s)$/;"	f	typeref:typename:void
sha1_init_hmac	lib/klib/kurl.c	/^void sha1_init_hmac(sha1nfo *s, const uint8_t* key, int l_key)$/;"	f	typeref:typename:void
sha1_write	lib/klib/kurl.c	/^void sha1_write(sha1nfo *s, const char *data, size_t len)$/;"	f	typeref:typename:void
sha1_write1	lib/klib/kurl.c	/^void sha1_write1(sha1nfo *s, uint8_t data)$/;"	f	typeref:typename:void
sha1nfo	lib/klib/kurl.c	/^typedef struct sha1nfo {$/;"	s	file:
sha1nfo	lib/klib/kurl.c	/^} sha1nfo;$/;"	t	typeref:struct:sha1nfo	file:
shader	src/Scene.c	/^Shader* shader;$/;"	v	typeref:typename:Shader *
shape_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing shape_AA; \/* shape anti-aliasing flag can be turned off if you are ti/;"	m	struct:nk_convert_config	typeref:enum:nk_anti_aliasing
shape_AA	lib/nuklear/nuklear.h	/^    enum nk_anti_aliasing shape_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_anti_aliasing
shape_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing shape_AA; \/* shape anti-aliasing flag can be turned off if you are ti/;"	m	struct:nk_convert_config	typeref:enum:nk_anti_aliasing
shape_AA	lib/nuklear/src/nuklear.h	/^    enum nk_anti_aliasing shape_AA;$/;"	m	struct:nk_draw_list	typeref:enum:nk_anti_aliasing
shared	lib/klib/kthread.c	/^	void *shared;$/;"	m	struct:ktp_t	typeref:typename:void *	file:
shift	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	typeref:typename:uint8_t	file:
show	lib/nuklear/demo/allegro5/KeyboardHandleriOS.h	/^-(void)show;$/;"	m	interface:KeyboardHandleriOS
show	lib/nuklear/demo/allegro5/KeyboardHandleriOS.m	/^-(void)show {$/;"	m	implementation:KeyboardHandleriOS
show_another_window	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^    bool show_another_window;$/;"	m	struct:DebugHUD	typeref:typename:bool
show_buttons	lib/nuklear/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_scrollbar	typeref:typename:int
show_buttons	lib/nuklear/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_slider	typeref:typename:int
show_buttons	lib/nuklear/src/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_scrollbar	typeref:typename:int
show_buttons	lib/nuklear/src/nuklear.h	/^    int show_buttons;$/;"	m	struct:nk_style_slider	typeref:typename:int
show_demo_window	lib/cimgui/imgui/examples/apple_example/imguiex-ios/debug_hud.h	/^    bool show_demo_window;$/;"	m	struct:DebugHUD	typeref:typename:bool
show_grid	lib/nuklear/demo/node_editor.c	/^    int show_grid;$/;"	m	struct:node_editor	typeref:typename:int	file:
shuffle	lib/klib/test/kavl_test.c	/^void shuffle(int n, char a[])$/;"	f	typeref:typename:void
siftDown	lib/klib/test/ksort_test.cc	/^static void siftDown (int numbers[], int top, int last) {$/;"	f	typeref:typename:void	file:
siftDown0	lib/klib/test/ksort_test.cc	/^static void siftDown0 (int numbers[], int last) {$/;"	f	typeref:typename:void	file:
single_line	lib/cimgui/imgui/stb_textedit.h	/^   unsigned char single_line;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:unsigned char
single_line	lib/nuklear/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned char
single_line	lib/nuklear/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
single_line	lib/nuklear/src/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_edit_state	typeref:typename:unsigned char
single_line	lib/nuklear/src/nuklear.h	/^    unsigned char single_line;$/;"	m	struct:nk_text_edit	typeref:typename:unsigned char
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "29x29",$/;"	s	object:images.0
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "29x29",$/;"	s	object:images.1
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "29x29",$/;"	s	object:images.6
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "29x29",$/;"	s	object:images.7
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "40x40",$/;"	s	object:images.2
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "40x40",$/;"	s	object:images.3
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "40x40",$/;"	s	object:images.8
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "40x40",$/;"	s	object:images.9
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "60x60",$/;"	s	object:images.4
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "60x60",$/;"	s	object:images.5
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "76x76",$/;"	s	object:images.10
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "76x76",$/;"	s	object:images.11
size	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "83.5x83.5",$/;"	s	object:images.12
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "128x128",$/;"	s	object:images.4
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "128x128",$/;"	s	object:images.5
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "16x16",$/;"	s	object:images.0
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "16x16",$/;"	s	object:images.1
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "256x256",$/;"	s	object:images.6
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "256x256",$/;"	s	object:images.7
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "32x32",$/;"	s	object:images.2
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "32x32",$/;"	s	object:images.3
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "512x512",$/;"	s	object:images.10
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "512x512",$/;"	s	object:images.8
size	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^      "size" : "512x512",$/;"	s	object:images.9
size	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    unsigned int size;$/;"	m	struct:GLFWgammaramp	typeref:typename:unsigned int
size	lib/cimgui/imgui/imgui.h	/^    inline int                  size() const                    { return Size; }$/;"	f	class:ImVector	typeref:typename:int
size	lib/cimgui/imgui/imgui.h	/^    int                 size() const { return Buf.Size - 1; }$/;"	f	struct:ImGuiTextBuffer	typeref:typename:int
size	lib/cimgui/imgui/stb_truetype.h	/^   int size;$/;"	m	struct:__anonc4c159420108	typeref:typename:int
size	lib/klib/bgzf.c	/^	int size;$/;"	m	struct:__anone038ee160108	typeref:typename:int	file:
size	lib/klib/kalloc.c	/^	size_t size;$/;"	m	struct:header_t	typeref:typename:size_t	file:
size	lib/klib/ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	typeref:typename:uint8_t	file:
size	lib/nuklear/example/stb_image.h	/^   stbi_uc  size[257];$/;"	m	struct:__anonc731c3c80508	typeref:typename:stbi_uc[257]
size	lib/nuklear/example/stb_image.h	/^   stbi_uc  size[288];$/;"	m	struct:__anonc731c3c80908	typeref:typename:stbi_uc[288]
size	lib/nuklear/example/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonc731c3c80e08	typeref:typename:stbi_uc
size	lib/nuklear/nuklear.h	/^    float size;$/;"	m	struct:nk_font_config	typeref:typename:float
size	lib/nuklear/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
size	lib/nuklear/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
size	lib/nuklear/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_pool	typeref:typename:nk_size
size	lib/nuklear/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_page	typeref:typename:unsigned int
size	lib/nuklear/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_table	typeref:typename:unsigned int
size	lib/nuklear/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_vec2
size	lib/nuklear/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory	typeref:typename:nk_size
size	lib/nuklear/src/nuklear.h	/^    float size;$/;"	m	struct:nk_font_config	typeref:typename:float
size	lib/nuklear/src/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_buffer	typeref:typename:nk_size
size	lib/nuklear/src/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_memory_status	typeref:typename:nk_size
size	lib/nuklear/src/nuklear.h	/^    nk_size size;$/;"	m	struct:nk_pool	typeref:typename:nk_size
size	lib/nuklear/src/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_page	typeref:typename:unsigned int
size	lib/nuklear/src/nuklear.h	/^    unsigned int size;$/;"	m	struct:nk_table	typeref:typename:unsigned int
size	lib/nuklear/src/nuklear.h	/^struct nk_cursor {struct nk_image img; struct nk_vec2 size, offset;};$/;"	m	struct:nk_cursor	typeref:struct:nk_vec2
size	lib/nuklear/src/nuklear.h	/^struct nk_memory {void *ptr;nk_size size;};$/;"	m	struct:nk_memory	typeref:typename:nk_size
size	src/Drawable.h	/^    GLsizei size;$/;"	m	struct:Drawable	typeref:typename:GLsizei
size_cmd	lib/klib/knetfile.h	/^	char *response, *retr, *size_cmd;$/;"	m	struct:knetFile_s	typeref:typename:char ***
skin	lib/nuklear/example/skinning.c	/^    GLint skin;$/;"	m	struct:media	typeref:typename:GLint	file:
skinning	lib/nuklear/example/Makefile	/^skinning: generate$/;"	t
skip	lib/nuklear/example/stb_image.h	/^   void     (*skip)  (void *user,int n);                 \/\/ skip the next 'n' bytes, or 'unget/;"	m	struct:__anonc731c3c80208	typeref:typename:void (*)(void * user,int n)
sleep_for	lib/nuklear/demo/x11/main.c	/^sleep_for(long t)$/;"	f	typeref:typename:void	file:
sleep_for	lib/nuklear/demo/x11_rawfb/main.c	/^sleep_for(long t)$/;"	f	typeref:typename:void	file:
slen	lib/klib/ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	typeref:typename:int	file:
slider	lib/nuklear/example/skinning.c	/^    struct nk_image slider;$/;"	m	struct:media	typeref:struct:nk_image	file:
slider	lib/nuklear/nuklear.h	/^    struct nk_style_slider slider;$/;"	m	struct:nk_style	typeref:struct:nk_style_slider
slider	lib/nuklear/src/nuklear.h	/^    struct nk_style_slider slider;$/;"	m	struct:nk_style	typeref:struct:nk_style_slider
slider_active	lib/nuklear/example/skinning.c	/^    struct nk_image slider_active;$/;"	m	struct:media	typeref:struct:nk_image	file:
slider_hover	lib/nuklear/example/skinning.c	/^    struct nk_image slider_hover;$/;"	m	struct:media	typeref:struct:nk_image	file:
slot	lib/nuklear/nuklear.h	/^    int slot;$/;"	m	struct:nk_chart	typeref:typename:int
slot	lib/nuklear/src/nuklear.h	/^    int slot;$/;"	m	struct:nk_chart	typeref:typename:int
slots	lib/nuklear/nuklear.h	/^    struct nk_chart_slot slots[NK_CHART_MAX_SLOT];$/;"	m	struct:nk_chart	typeref:struct:nk_chart_slot[]
slots	lib/nuklear/src/nuklear.h	/^    struct nk_chart_slot slots[NK_CHART_MAX_SLOT];$/;"	m	struct:nk_chart	typeref:struct:nk_chart_slot[]
snprintf	lib/cimgui/cimgui/cimgui.h	/^#define snprintf /;"	d
snprintf	lib/cimgui/imgui/imgui_demo.cpp	/^#define snprintf /;"	d	file:
socket_connect	lib/klib/knetfile.c	/^static SOCKET socket_connect(const char *host, const char *port)$/;"	f	typeref:typename:SOCKET	file:
socket_connect	lib/klib/knetfile.c	/^static int socket_connect(const char *host, const char *port)$/;"	f	typeref:typename:int	file:
socket_connect	lib/klib/kopen.c	/^static int socket_connect(const char *host, const char *port)$/;"	f	typeref:typename:int	file:
socket_wait	lib/klib/knetfile.c	/^static int socket_wait(int fd, int is_read)$/;"	f	typeref:typename:int	file:
socket_wait	lib/klib/kopen.c	/^static int socket_wait(int fd, int is_read)$/;"	f	typeref:typename:int	file:
sort2	lib/klib/test/ksort_test.cc	/^static inline void sort2 (int * numbers) {$/;"	f	typeref:typename:void	file:
sort3	lib/klib/test/ksort_test.cc	/^static inline void sort3 (int * numbers) {$/;"	f	typeref:typename:void	file:
sort4	lib/klib/test/ksort_test.cc	/^static inline void sort4 (int * num) {$/;"	f	typeref:typename:void	file:
sortAlt2	lib/klib/test/ksort_test.cc	/^static inline void sortAlt2 (int * numbers, int * altNumbers) {$/;"	f	typeref:typename:void	file:
sortAlt3	lib/klib/test/ksort_test.cc	/^static inline void sortAlt3 (int * numbers, int * altNumbers) {$/;"	f	typeref:typename:void	file:
spacing	lib/nuklear/nuklear.h	/^    float spacing;$/;"	m	struct:nk_style_toggle	typeref:typename:float
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_font_config	typeref:struct:nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_tab	typeref:struct:nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
spacing	lib/nuklear/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    float spacing;$/;"	m	struct:nk_style_toggle	typeref:typename:float
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_font_config	typeref:struct:nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_combo	typeref:struct:nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_slider	typeref:struct:nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_tab	typeref:struct:nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
spacing	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 spacing;$/;"	m	struct:nk_style_window_header	typeref:struct:nk_vec2
spc	lib/nuklear/nuklear.h	/^    struct nk_tt_pack_context spc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_pack_context
spc	lib/nuklear/src/nuklear_font.c	/^    struct nk_tt_pack_context spc;$/;"	m	struct:nk_font_baker	typeref:struct:nk_tt_pack_context	file:
spec_end	lib/nuklear/example/stb_image.h	/^   int            spec_end;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
spec_start	lib/nuklear/example/stb_image.h	/^   int            spec_start;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
split	lib/cimgui/imgui/imgui.cpp	/^void ImGuiTextFilter::TextRange::split(char separator, ImVector<TextRange>& out)$/;"	f	class:ImGuiTextFilter::TextRange	typeref:typename:void
src	lib/nuklear/package.json	/^  "src": ["nuklear.h"]$/;"	a
src/App.c.i	build/Makefile	/^src\/App.c.i:$/;"	t
src/App.c.o	build/Makefile	/^src\/App.c.o:$/;"	t
src/App.c.s	build/Makefile	/^src\/App.c.s:$/;"	t
src/App.i	build/Makefile	/^src\/App.i: src\/App.c.i$/;"	t
src/App.o	build/Makefile	/^src\/App.o: src\/App.c.o$/;"	t
src/App.s	build/Makefile	/^src\/App.s: src\/App.c.s$/;"	t
src/Drawable.c.i	build/Makefile	/^src\/Drawable.c.i:$/;"	t
src/Drawable.c.o	build/Makefile	/^src\/Drawable.c.o:$/;"	t
src/Drawable.c.s	build/Makefile	/^src\/Drawable.c.s:$/;"	t
src/Drawable.i	build/Makefile	/^src\/Drawable.i: src\/Drawable.c.i$/;"	t
src/Drawable.o	build/Makefile	/^src\/Drawable.o: src\/Drawable.c.o$/;"	t
src/Drawable.s	build/Makefile	/^src\/Drawable.s: src\/Drawable.c.s$/;"	t
src/Gui.c.i	build/Makefile	/^src\/Gui.c.i:$/;"	t
src/Gui.c.o	build/Makefile	/^src\/Gui.c.o:$/;"	t
src/Gui.c.s	build/Makefile	/^src\/Gui.c.s:$/;"	t
src/Gui.i	build/Makefile	/^src\/Gui.i: src\/Gui.c.i$/;"	t
src/Gui.o	build/Makefile	/^src\/Gui.o: src\/Gui.c.o$/;"	t
src/Gui.s	build/Makefile	/^src\/Gui.s: src\/Gui.c.s$/;"	t
src/Scene.c.i	build/Makefile	/^src\/Scene.c.i:$/;"	t
src/Scene.c.o	build/Makefile	/^src\/Scene.c.o:$/;"	t
src/Scene.c.s	build/Makefile	/^src\/Scene.c.s:$/;"	t
src/Scene.i	build/Makefile	/^src\/Scene.i: src\/Scene.c.i$/;"	t
src/Scene.o	build/Makefile	/^src\/Scene.o: src\/Scene.c.o$/;"	t
src/Scene.s	build/Makefile	/^src\/Scene.s: src\/Scene.c.s$/;"	t
src/Shader.c.i	build/Makefile	/^src\/Shader.c.i:$/;"	t
src/Shader.c.o	build/Makefile	/^src\/Shader.c.o:$/;"	t
src/Shader.c.s	build/Makefile	/^src\/Shader.c.s:$/;"	t
src/Shader.i	build/Makefile	/^src\/Shader.i: src\/Shader.c.i$/;"	t
src/Shader.o	build/Makefile	/^src\/Shader.o: src\/Shader.c.o$/;"	t
src/Shader.s	build/Makefile	/^src\/Shader.s: src\/Shader.c.s$/;"	t
src/Shape.c.i	build/Makefile	/^src\/Shape.c.i:$/;"	t
src/Shape.c.o	build/Makefile	/^src\/Shape.c.o:$/;"	t
src/Shape.c.s	build/Makefile	/^src\/Shape.c.s:$/;"	t
src/Shape.i	build/Makefile	/^src\/Shape.i: src\/Shape.c.i$/;"	t
src/Shape.o	build/Makefile	/^src\/Shape.o: src\/Shape.c.o$/;"	t
src/Shape.s	build/Makefile	/^src\/Shape.s: src\/Shape.c.s$/;"	t
src/main.c.i	build/Makefile	/^src\/main.c.i:$/;"	t
src/main.c.o	build/Makefile	/^src\/main.c.o:$/;"	t
src/main.c.s	build/Makefile	/^src\/main.c.s:$/;"	t
src/main.i	build/Makefile	/^src\/main.i: src\/main.c.i$/;"	t
src/main.o	build/Makefile	/^src\/main.o: src\/main.c.o$/;"	t
src/main.s	build/Makefile	/^src\/main.s: src\/main.c.s$/;"	t
sse2_bit_count32	lib/klib/test/kbit_test.c	/^static uint32_t sse2_bit_count32(const __m128i* block, const __m128i* block_end)$/;"	f	typeref:typename:uint32_t	file:
stack	lib/klib/kbtree.h	/^	kbpos_t stack[KB_MAX_DEPTH], *p;$/;"	m	struct:__anon929281af0308	typeref:typename:kbpos_t[]
stacks	lib/nuklear/nuklear.h	/^    struct nk_configuration_stacks stacks;$/;"	m	struct:nk_context	typeref:struct:nk_configuration_stacks
stacks	lib/nuklear/src/nuklear.h	/^    struct nk_configuration_stacks stacks;$/;"	m	struct:nk_context	typeref:struct:nk_configuration_stacks
start_x	lib/nuklear/example/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
start_y	lib/nuklear/example/stb_image.h	/^   int start_x, start_y;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
started	lib/cimgui/imgui/stb_truetype.h	/^   int started;$/;"	m	struct:__anonc4c159420f08	typeref:typename:int
state	lib/klib/kurl.c	/^	union { uint8_t b[HASH_LENGTH]; uint32_t w[HASH_LENGTH\/4]; } state;$/;"	m	struct:sha1nfo	typeref:union:sha1nfo::__anonf630694b030a	file:
state	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    IDirect3DStateBlock9 *state;$/;"	m	struct:__anon39ff3a1e0108	typeref:typename:IDirect3DStateBlock9 *
state	lib/nuklear/nuklear.h	/^    int state;$/;"	m	struct:nk_property_state	typeref:typename:int
state	lib/nuklear/src/nuklear.h	/^    int state;$/;"	m	struct:nk_property_state	typeref:typename:int
status	lib/klib/khmm.h	/^	unsigned status;$/;"	m	struct:__anonf542711f0208	typeref:typename:unsigned
stb__barrier_in_b	lib/cimgui/imgui/imgui_draw.cpp	/^static const unsigned char *stb__barrier_in_b;$/;"	v	typeref:typename:const unsigned char *	file:
stb__barrier_out_b	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;$/;"	v	typeref:typename:unsigned char **	file:
stb__barrier_out_e	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned char *stb__barrier_out_e, *stb__barrier_out_b;$/;"	v	typeref:typename:unsigned char *	file:
stb__dout	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned char *stb__dout;$/;"	v	typeref:typename:unsigned char *	file:
stb__hashsize	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static  stb_uint stb__hashsize = 32768;$/;"	v	typeref:typename:stb_uint	file:
stb__hc	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define stb__hc(/;"	d	file:
stb__hc2	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define stb__hc2(/;"	d	file:
stb__hc3	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define stb__hc3(/;"	d	file:
stb__in2	lib/cimgui/imgui/imgui_draw.cpp	/^#define stb__in2(/;"	d	file:
stb__in3	lib/cimgui/imgui/imgui_draw.cpp	/^#define stb__in3(/;"	d	file:
stb__in4	lib/cimgui/imgui/imgui_draw.cpp	/^#define stb__in4(/;"	d	file:
stb__lit	lib/cimgui/imgui/imgui_draw.cpp	/^static void stb__lit(const unsigned char *data, unsigned int length)$/;"	f	typeref:typename:void	file:
stb__match	lib/cimgui/imgui/imgui_draw.cpp	/^static void stb__match(const unsigned char *data, unsigned int length)$/;"	f	typeref:typename:void	file:
stb__nc	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define stb__nc(/;"	d	file:
stb__out	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static stb_uchar *stb__out;$/;"	v	typeref:typename:stb_uchar *	file:
stb__outbytes	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static stb_uint   stb__outbytes;$/;"	v	typeref:typename:stb_uint	file:
stb__outfile	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static FILE      *stb__outfile;$/;"	v	typeref:typename:FILE *	file:
stb__running_adler	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static unsigned int stb__running_adler;$/;"	v	typeref:typename:unsigned int	file:
stb__window	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb__window = 0x40000; \/\/ 256K$/;"	v	typeref:typename:int	file:
stb__write	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb__write(unsigned char v)$/;"	f	typeref:typename:void	file:
stb_adler32	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int stb_adler32(unsigned int adler32, unsigned char *buffer, unsigned int buflen/;"	f	typeref:typename:unsigned int	file:
stb_adler32	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static stb_uint stb_adler32(stb_uint adler32, stb_uchar *buffer, stb_uint buflen)$/;"	f	typeref:typename:stb_uint	file:
stb_compress	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^stb_uint stb_compress(stb_uchar *out, stb_uchar *input, stb_uint length)$/;"	f	typeref:typename:stb_uint
stb_compress_chunk	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb_compress_chunk(stb_uchar *history,$/;"	f	typeref:typename:int	file:
stb_compress_inner	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb_compress_inner(stb_uchar *input, stb_uint length)$/;"	f	typeref:typename:int	file:
stb_decompress	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int stb_decompress(unsigned char *output, const unsigned char *i, unsigned int \//;"	f	typeref:typename:unsigned int	file:
stb_decompress_length	lib/cimgui/imgui/imgui_draw.cpp	/^static unsigned int stb_decompress_length(const unsigned char *input)$/;"	f	typeref:typename:unsigned int	file:
stb_decompress_token	lib/cimgui/imgui/imgui_draw.cpp	/^static const unsigned char *stb_decompress_token(const unsigned char *i)$/;"	f	typeref:typename:const unsigned char *	file:
stb_matchlen	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static unsigned int stb_matchlen(stb_uchar *m1, stb_uchar *m2, stb_uint maxlen)$/;"	f	typeref:typename:unsigned int	file:
stb_not_crap	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static int stb_not_crap(int best, int dist)$/;"	f	typeref:typename:int	file:
stb_out	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^#define stb_out(/;"	d	file:
stb_out2	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb_out2(stb_uint v) { stb_out(v >> 8); stb_out(v); }$/;"	f	typeref:typename:void	file:
stb_out3	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb_out3(stb_uint v) { stb_out(v >> 16); stb_out(v >> 8); stb_out(v); }$/;"	f	typeref:typename:void	file:
stb_out4	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^static void stb_out4(stb_uint v) { stb_out(v >> 24); stb_out(v >> 16); stb_out(v >> 8 ); stb_out/;"	f	typeref:typename:void	file:
stb_text_create_undo_record	lib/cimgui/imgui/stb_textedit.h	/^static StbUndoRecord *stb_text_create_undo_record(StbUndoState *state, int numchars)$/;"	f	typeref:typename:StbUndoRecord *
stb_text_createundo	lib/cimgui/imgui/stb_textedit.h	/^static STB_TEXTEDIT_CHARTYPE *stb_text_createundo(StbUndoState *state, int pos, int insert_len, /;"	f	typeref:typename:STB_TEXTEDIT_CHARTYPE *
stb_text_locate_coord	lib/cimgui/imgui/stb_textedit.h	/^static int stb_text_locate_coord(STB_TEXTEDIT_STRING *str, float x, float y)$/;"	f	typeref:typename:int
stb_text_makeundo_delete	lib/cimgui/imgui/stb_textedit.h	/^static void stb_text_makeundo_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int whe/;"	f	typeref:typename:void
stb_text_makeundo_insert	lib/cimgui/imgui/stb_textedit.h	/^static void stb_text_makeundo_insert(STB_TexteditState *state, int where, int length)$/;"	f	typeref:typename:void
stb_text_makeundo_replace	lib/cimgui/imgui/stb_textedit.h	/^static void stb_text_makeundo_replace(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int wh/;"	f	typeref:typename:void
stb_text_redo	lib/cimgui/imgui/stb_textedit.h	/^static void stb_text_redo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_text_undo	lib/cimgui/imgui/stb_textedit.h	/^static void stb_text_undo(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_clamp	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_clamp(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_clear_state	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_clear_state(STB_TexteditState *state, int is_single_line)$/;"	f	typeref:typename:void
stb_textedit_click	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_click(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, floa/;"	f	typeref:typename:void
stb_textedit_cut	lib/cimgui/imgui/stb_textedit.h	/^static int stb_textedit_cut(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:int
stb_textedit_delete	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_delete(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int where, i/;"	f	typeref:typename:void
stb_textedit_delete_selection	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_delete_selection(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_discard_redo	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_discard_redo(StbUndoState *state)$/;"	f	typeref:typename:void
stb_textedit_discard_undo	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_discard_undo(StbUndoState *state)$/;"	f	typeref:typename:void
stb_textedit_drag	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_drag(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, float x, float/;"	f	typeref:typename:void
stb_textedit_find_charpos	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_find_charpos(StbFindState *find, STB_TEXTEDIT_STRING *str, int n, int s/;"	f	typeref:typename:void
stb_textedit_flush_redo	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_flush_redo(StbUndoState *state)$/;"	f	typeref:typename:void
stb_textedit_initialize_state	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_initialize_state(STB_TexteditState *state, int is_single_line)$/;"	f	typeref:typename:void
stb_textedit_key	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_key(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, int key)$/;"	f	typeref:typename:void
stb_textedit_move_to_first	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_move_to_first(STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_move_to_last	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_move_to_last(STB_TEXTEDIT_STRING *str, STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_move_to_word_next	lib/cimgui/imgui/stb_textedit.h	/^static int stb_textedit_move_to_word_next( STB_TEXTEDIT_STRING *str, int c )$/;"	f	typeref:typename:int
stb_textedit_move_to_word_previous	lib/cimgui/imgui/stb_textedit.h	/^static int stb_textedit_move_to_word_previous( STB_TEXTEDIT_STRING *str, int c )$/;"	f	typeref:typename:int
stb_textedit_paste	lib/cimgui/imgui/stb_textedit.h	/^static int stb_textedit_paste(STB_TEXTEDIT_STRING *str, STB_TexteditState *state, STB_TEXTEDIT_C/;"	f	typeref:typename:int
stb_textedit_prep_selection_at_cursor	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_prep_selection_at_cursor(STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_textedit_sortselection	lib/cimgui/imgui/stb_textedit.h	/^static void stb_textedit_sortselection(STB_TexteditState *state)$/;"	f	typeref:typename:void
stb_uchar	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^typedef unsigned char stb_uchar;$/;"	t	typeref:typename:unsigned char	file:
stb_uint	lib/cimgui/imgui/misc/fonts/binary_to_compressed_c.cpp	/^typedef unsigned int stb_uint;$/;"	t	typeref:typename:unsigned int	file:
stbi__DNL	lib/nuklear/example/stb_image.h	/^#define stbi__DNL(/;"	d
stbi__EOI	lib/nuklear/example/stb_image.h	/^#define stbi__EOI(/;"	d
stbi__SOF	lib/nuklear/example/stb_image.h	/^#define stbi__SOF(/;"	d
stbi__SOF_progressive	lib/nuklear/example/stb_image.h	/^#define stbi__SOF_progressive(/;"	d
stbi__SOI	lib/nuklear/example/stb_image.h	/^#define stbi__SOI(/;"	d
stbi__SOS	lib/nuklear/example/stb_image.h	/^#define stbi__SOS(/;"	d
stbi__YCbCr_to_RGB_row	lib/nuklear/example/stb_image.h	/^static void stbi__YCbCr_to_RGB_row(stbi_uc *out, const stbi_uc *y, const stbi_uc *pcb, const stb/;"	f	typeref:typename:void
stbi__YCbCr_to_RGB_simd	lib/nuklear/example/stb_image.h	/^static void stbi__YCbCr_to_RGB_simd(stbi_uc *out, stbi_uc const *y, stbi_uc const *pcb, stbi_uc /;"	f	typeref:typename:void
stbi__at_eof	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__at_eof(stbi__context *s)$/;"	f	typeref:typename:stbi_inline int
stbi__bit_reverse	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__bit_reverse(int v, int bits)$/;"	f	typeref:typename:stbi_inline int
stbi__bitcount	lib/nuklear/example/stb_image.h	/^static int stbi__bitcount(unsigned int a)$/;"	f	typeref:typename:int
stbi__bitreverse16	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__bitreverse16(int n)$/;"	f	typeref:typename:stbi_inline int
stbi__bmask	lib/nuklear/example/stb_image.h	/^static stbi__uint32 stbi__bmask[17]={0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,3276/;"	v	typeref:typename:stbi__uint32[17]
stbi__bmp_info	lib/nuklear/example/stb_image.h	/^static int stbi__bmp_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__bmp_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__bmp_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
stbi__bmp_test	lib/nuklear/example/stb_image.h	/^static int stbi__bmp_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__bmp_test_raw	lib/nuklear/example/stb_image.h	/^static int stbi__bmp_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__build_fast_ac	lib/nuklear/example/stb_image.h	/^static void stbi__build_fast_ac(stbi__int16 *fast_ac, stbi__huffman *h)$/;"	f	typeref:typename:void
stbi__build_huffman	lib/nuklear/example/stb_image.h	/^static int stbi__build_huffman(stbi__huffman *h, int *count)$/;"	f	typeref:typename:int
stbi__check_png_header	lib/nuklear/example/stb_image.h	/^static int stbi__check_png_header(stbi__context *s)$/;"	f	typeref:typename:int
stbi__clamp	lib/nuklear/example/stb_image.h	/^stbi_inline static stbi_uc stbi__clamp(int x)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__cleanup_jpeg	lib/nuklear/example/stb_image.h	/^static void stbi__cleanup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__compute_huffman_codes	lib/nuklear/example/stb_image.h	/^static int stbi__compute_huffman_codes(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__compute_transparency	lib/nuklear/example/stb_image.h	/^static int stbi__compute_transparency(stbi__png *z, stbi_uc tc[3], int out_n)$/;"	f	typeref:typename:int
stbi__compute_y	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__compute_y(int r, int g, int b)$/;"	f	typeref:typename:stbi_uc
stbi__context	lib/nuklear/example/stb_image.h	/^} stbi__context;$/;"	t	typeref:struct:__anonc731c3c80308
stbi__convert_format	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__convert_format(unsigned char *data, int img_n, int req_comp, unsigne/;"	f	typeref:typename:unsigned char *
stbi__copyval	lib/nuklear/example/stb_image.h	/^static void stbi__copyval(int channel,stbi_uc *dest,const stbi_uc *src)$/;"	f	typeref:typename:void
stbi__cpuid3	lib/nuklear/example/stb_image.h	/^static int stbi__cpuid3(void)$/;"	f	typeref:typename:int
stbi__create_png_image	lib/nuklear/example/stb_image.h	/^static int stbi__create_png_image(stbi__png *a, stbi_uc *image_data, stbi__uint32 image_data_len/;"	f	typeref:typename:int
stbi__create_png_image_raw	lib/nuklear/example/stb_image.h	/^static int stbi__create_png_image_raw(stbi__png *a, stbi_uc *raw, stbi__uint32 raw_len, int out_/;"	f	typeref:typename:int
stbi__de_iphone	lib/nuklear/example/stb_image.h	/^static void stbi__de_iphone(stbi__png *z)$/;"	f	typeref:typename:void
stbi__de_iphone_flag	lib/nuklear/example/stb_image.h	/^static int stbi__de_iphone_flag = 0;$/;"	v	typeref:typename:int
stbi__decode_jpeg_header	lib/nuklear/example/stb_image.h	/^static int stbi__decode_jpeg_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__decode_jpeg_image	lib/nuklear/example/stb_image.h	/^static int stbi__decode_jpeg_image(stbi__jpeg *j)$/;"	f	typeref:typename:int
stbi__depth_scale_table	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__depth_scale_table[9] = { 0, 0xff, 0x55, 0, 0x11, 0,0,0, 0x01 };$/;"	v	typeref:typename:stbi_uc[9]
stbi__div16	lib/nuklear/example/stb_image.h	/^#define stbi__div16(/;"	d
stbi__div4	lib/nuklear/example/stb_image.h	/^#define stbi__div4(/;"	d
stbi__do_png	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__do_png(stbi__png *p, int *x, int *y, int *n, int req_comp)$/;"	f	typeref:typename:unsigned char *
stbi__do_zlib	lib/nuklear/example/stb_image.h	/^static int stbi__do_zlib(stbi__zbuf *a, char *obuf, int olen, int exp, int parse_header)$/;"	f	typeref:typename:int
stbi__err	lib/nuklear/example/stb_image.h	/^   #define stbi__err(/;"	d
stbi__err	lib/nuklear/example/stb_image.h	/^static int stbi__err(const char *str)$/;"	f	typeref:typename:int
stbi__errpf	lib/nuklear/example/stb_image.h	/^#define stbi__errpf(/;"	d
stbi__errpuc	lib/nuklear/example/stb_image.h	/^#define stbi__errpuc(/;"	d
stbi__expand_png_palette	lib/nuklear/example/stb_image.h	/^static int stbi__expand_png_palette(stbi__png *a, stbi_uc *palette, int len, int pal_img_n)$/;"	f	typeref:typename:int
stbi__extend_receive	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__extend_receive(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__f2f	lib/nuklear/example/stb_image.h	/^#define stbi__f2f(/;"	d
stbi__fill_bits	lib/nuklear/example/stb_image.h	/^static void stbi__fill_bits(stbi__zbuf *z)$/;"	f	typeref:typename:void
stbi__fill_gif_background	lib/nuklear/example/stb_image.h	/^static void stbi__fill_gif_background(stbi__gif *g, int x0, int y0, int x1, int y1)$/;"	f	typeref:typename:void
stbi__float2int	lib/nuklear/example/stb_image.h	/^#define stbi__float2int(/;"	d
stbi__float_postprocess	lib/nuklear/example/stb_image.h	/^static void stbi__float_postprocess(float *result, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:void
stbi__fopen	lib/nuklear/example/stb_image.h	/^static FILE *stbi__fopen(char const *filename, char const *mode)$/;"	f	typeref:typename:FILE *
stbi__fsh	lib/nuklear/example/stb_image.h	/^#define stbi__fsh(/;"	d
stbi__g_failure_reason	lib/nuklear/example/stb_image.h	/^static const char *stbi__g_failure_reason;$/;"	v	typeref:typename:const char *
stbi__get16be	lib/nuklear/example/stb_image.h	/^static int stbi__get16be(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get16le	lib/nuklear/example/stb_image.h	/^static int stbi__get16le(stbi__context *s)$/;"	f	typeref:typename:int
stbi__get32be	lib/nuklear/example/stb_image.h	/^static stbi__uint32 stbi__get32be(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get32le	lib/nuklear/example/stb_image.h	/^static stbi__uint32 stbi__get32le(stbi__context *s)$/;"	f	typeref:typename:stbi__uint32
stbi__get8	lib/nuklear/example/stb_image.h	/^stbi_inline static stbi_uc stbi__get8(stbi__context *s)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__get_chunk_header	lib/nuklear/example/stb_image.h	/^static stbi__pngchunk stbi__get_chunk_header(stbi__context *s)$/;"	f	typeref:typename:stbi__pngchunk
stbi__get_marker	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__get_marker(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_uc
stbi__getn	lib/nuklear/example/stb_image.h	/^static int stbi__getn(stbi__context *s, stbi_uc *buffer, int n)$/;"	f	typeref:typename:int
stbi__gif	lib/nuklear/example/stb_image.h	/^} stbi__gif;$/;"	t	typeref:struct:__anonc731c3c81008
stbi__gif_header	lib/nuklear/example/stb_image.h	/^static int stbi__gif_header(stbi__context *s, stbi__gif *g, int *comp, int is_info)$/;"	f	typeref:typename:int
stbi__gif_info	lib/nuklear/example/stb_image.h	/^static int stbi__gif_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_info_raw	lib/nuklear/example/stb_image.h	/^static int stbi__gif_info_raw(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__gif_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__gif_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
stbi__gif_load_next	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__gif_load_next(stbi__context *s, stbi__gif *g, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
stbi__gif_lzw	lib/nuklear/example/stb_image.h	/^} stbi__gif_lzw;$/;"	t	typeref:struct:__anonc731c3c80f08
stbi__gif_parse_colortable	lib/nuklear/example/stb_image.h	/^static void stbi__gif_parse_colortable(stbi__context *s, stbi_uc pal[256][4], int num_entries, i/;"	f	typeref:typename:void
stbi__gif_test	lib/nuklear/example/stb_image.h	/^static int stbi__gif_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__gif_test_raw	lib/nuklear/example/stb_image.h	/^static int stbi__gif_test_raw(stbi__context *s)$/;"	f	typeref:typename:int
stbi__grow_buffer_unsafe	lib/nuklear/example/stb_image.h	/^static void stbi__grow_buffer_unsafe(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__h2l_gamma_i	lib/nuklear/example/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__h2l_scale_i	lib/nuklear/example/stb_image.h	/^static float stbi__h2l_gamma_i=1.0f\/2.2f, stbi__h2l_scale_i=1.0f;$/;"	v	typeref:typename:float
stbi__hdr_convert	lib/nuklear/example/stb_image.h	/^static void stbi__hdr_convert(float *output, stbi_uc *input, int req_comp)$/;"	f	typeref:typename:void
stbi__hdr_gettoken	lib/nuklear/example/stb_image.h	/^static char *stbi__hdr_gettoken(stbi__context *z, char *buffer)$/;"	f	typeref:typename:char *
stbi__hdr_info	lib/nuklear/example/stb_image.h	/^static int stbi__hdr_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__hdr_load	lib/nuklear/example/stb_image.h	/^static float *stbi__hdr_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi__hdr_test	lib/nuklear/example/stb_image.h	/^static int stbi__hdr_test(stbi__context* s)$/;"	f	typeref:typename:int
stbi__hdr_test_core	lib/nuklear/example/stb_image.h	/^static int stbi__hdr_test_core(stbi__context *s)$/;"	f	typeref:typename:int
stbi__hdr_to_ldr	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__hdr_to_ldr(float   *data, int x, int y, int comp)$/;"	f	typeref:typename:stbi_uc *
stbi__high_bit	lib/nuklear/example/stb_image.h	/^static int stbi__high_bit(unsigned int z)$/;"	f	typeref:typename:int
stbi__huffman	lib/nuklear/example/stb_image.h	/^} stbi__huffman;$/;"	t	typeref:struct:__anonc731c3c80508
stbi__idct_block	lib/nuklear/example/stb_image.h	/^static void stbi__idct_block(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__idct_simd	lib/nuklear/example/stb_image.h	/^static void stbi__idct_simd(stbi_uc *out, int out_stride, short data[64])$/;"	f	typeref:typename:void
stbi__info_main	lib/nuklear/example/stb_image.h	/^static int stbi__info_main(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__init_zdefaults	lib/nuklear/example/stb_image.h	/^static void stbi__init_zdefaults(void)$/;"	f	typeref:typename:void
stbi__int16	lib/nuklear/example/stb_image.h	/^typedef   signed short stbi__int16;$/;"	t	typeref:typename:signed short
stbi__int16	lib/nuklear/example/stb_image.h	/^typedef int16_t  stbi__int16;$/;"	t	typeref:typename:int16_t
stbi__int32	lib/nuklear/example/stb_image.h	/^typedef   signed int   stbi__int32;$/;"	t	typeref:typename:signed int
stbi__int32	lib/nuklear/example/stb_image.h	/^typedef int32_t  stbi__int32;$/;"	t	typeref:typename:int32_t
stbi__jbias	lib/nuklear/example/stb_image.h	/^static int const stbi__jbias[16] = {0,-1,-3,-7,-15,-31,-63,-127,-255,-511,-1023,-2047,-4095,-819/;"	v	typeref:typename:int const[16]
stbi__jpeg	lib/nuklear/example/stb_image.h	/^} stbi__jpeg;$/;"	t	typeref:struct:__anonc731c3c80608
stbi__jpeg_decode_block	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_decode_block(stbi__jpeg *j, short data[64], stbi__huffman *hdc, stbi__huff/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_ac	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_decode_block_prog_ac(stbi__jpeg *j, short data[64], stbi__huffman *hac, st/;"	f	typeref:typename:int
stbi__jpeg_decode_block_prog_dc	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_decode_block_prog_dc(stbi__jpeg *j, short data[64], stbi__huffman *hdc, in/;"	f	typeref:typename:int
stbi__jpeg_dequantize	lib/nuklear/example/stb_image.h	/^static void stbi__jpeg_dequantize(short *data, stbi_uc *dequant)$/;"	f	typeref:typename:void
stbi__jpeg_dezigzag	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__jpeg_dezigzag[64+15] =$/;"	v	typeref:typename:stbi_uc[]
stbi__jpeg_finish	lib/nuklear/example/stb_image.h	/^static void stbi__jpeg_finish(stbi__jpeg *z)$/;"	f	typeref:typename:void
stbi__jpeg_get_bit	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bit(stbi__jpeg *j)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_get_bits	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__jpeg_get_bits(stbi__jpeg *j, int n)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_huff_decode	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__jpeg_huff_decode(stbi__jpeg *j, stbi__huffman *h)$/;"	f	typeref:typename:stbi_inline int
stbi__jpeg_info	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_info_raw	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_info_raw(stbi__jpeg *j, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__jpeg_load	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__jpeg_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *
stbi__jpeg_reset	lib/nuklear/example/stb_image.h	/^static void stbi__jpeg_reset(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__jpeg_test	lib/nuklear/example/stb_image.h	/^static int stbi__jpeg_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__l2h_gamma	lib/nuklear/example/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__l2h_scale	lib/nuklear/example/stb_image.h	/^static float stbi__l2h_gamma=2.2f, stbi__l2h_scale=1.0f;$/;"	v	typeref:typename:float
stbi__ldr_to_hdr	lib/nuklear/example/stb_image.h	/^static float   *stbi__ldr_to_hdr(stbi_uc *data, int x, int y, int comp)$/;"	f	typeref:typename:float *
stbi__load_flip	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__load_flip(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *
stbi__load_main	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__load_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *
stbi__loadf_main	lib/nuklear/example/stb_image.h	/^static float *stbi__loadf_main(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:float *
stbi__malloc	lib/nuklear/example/stb_image.h	/^static void *stbi__malloc(size_t size)$/;"	f	typeref:typename:void *
stbi__out_gif_code	lib/nuklear/example/stb_image.h	/^static void stbi__out_gif_code(stbi__gif *g, stbi__uint16 code)$/;"	f	typeref:typename:void
stbi__paeth	lib/nuklear/example/stb_image.h	/^static int stbi__paeth(int a, int b, int c)$/;"	f	typeref:typename:int
stbi__parse_entropy_coded_data	lib/nuklear/example/stb_image.h	/^static int stbi__parse_entropy_coded_data(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__parse_huffman_block	lib/nuklear/example/stb_image.h	/^static int stbi__parse_huffman_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_png_file	lib/nuklear/example/stb_image.h	/^static int stbi__parse_png_file(stbi__png *z, int scan, int req_comp)$/;"	f	typeref:typename:int
stbi__parse_uncomperssed_block	lib/nuklear/example/stb_image.h	/^static int stbi__parse_uncomperssed_block(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__parse_zlib	lib/nuklear/example/stb_image.h	/^static int stbi__parse_zlib(stbi__zbuf *a, int parse_header)$/;"	f	typeref:typename:int
stbi__parse_zlib_header	lib/nuklear/example/stb_image.h	/^static int stbi__parse_zlib_header(stbi__zbuf *a)$/;"	f	typeref:typename:int
stbi__pic_info	lib/nuklear/example/stb_image.h	/^static int stbi__pic_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pic_is4	lib/nuklear/example/stb_image.h	/^static int stbi__pic_is4(stbi__context *s,const char *str)$/;"	f	typeref:typename:int
stbi__pic_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__pic_load(stbi__context *s,int *px,int *py,int *comp,int req_comp)$/;"	f	typeref:typename:stbi_uc *
stbi__pic_load_core	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__pic_load_core(stbi__context *s,int width,int height,int *comp, stbi_uc *re/;"	f	typeref:typename:stbi_uc *
stbi__pic_packet	lib/nuklear/example/stb_image.h	/^} stbi__pic_packet;$/;"	t	typeref:struct:__anonc731c3c80e08
stbi__pic_test	lib/nuklear/example/stb_image.h	/^static int stbi__pic_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pic_test_core	lib/nuklear/example/stb_image.h	/^static int stbi__pic_test_core(stbi__context *s)$/;"	f	typeref:typename:int
stbi__png	lib/nuklear/example/stb_image.h	/^} stbi__png;$/;"	t	typeref:struct:__anonc731c3c80c08
stbi__png_info	lib/nuklear/example/stb_image.h	/^static int stbi__png_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_info_raw	lib/nuklear/example/stb_image.h	/^static int stbi__png_info_raw(stbi__png *p, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__png_load	lib/nuklear/example/stb_image.h	/^static unsigned char *stbi__png_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:unsigned char *
stbi__png_test	lib/nuklear/example/stb_image.h	/^static int stbi__png_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__pngchunk	lib/nuklear/example/stb_image.h	/^} stbi__pngchunk;$/;"	t	typeref:struct:__anonc731c3c80b08
stbi__pnm_getinteger	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_getinteger(stbi__context *s, char *c)$/;"	f	typeref:typename:int
stbi__pnm_info	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__pnm_isdigit	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_isdigit(char c)$/;"	f	typeref:typename:int
stbi__pnm_isspace	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_isspace(char c)$/;"	f	typeref:typename:int
stbi__pnm_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__pnm_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
stbi__pnm_skip_whitespace	lib/nuklear/example/stb_image.h	/^static void     stbi__pnm_skip_whitespace(stbi__context *s, char *c)$/;"	f	typeref:typename:void
stbi__pnm_test	lib/nuklear/example/stb_image.h	/^static int      stbi__pnm_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__process_frame_header	lib/nuklear/example/stb_image.h	/^static int stbi__process_frame_header(stbi__jpeg *z, int scan)$/;"	f	typeref:typename:int
stbi__process_gif_raster	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__process_gif_raster(stbi__context *s, stbi__gif *g)$/;"	f	typeref:typename:stbi_uc *
stbi__process_marker	lib/nuklear/example/stb_image.h	/^static int stbi__process_marker(stbi__jpeg *z, int m)$/;"	f	typeref:typename:int
stbi__process_scan_header	lib/nuklear/example/stb_image.h	/^static int stbi__process_scan_header(stbi__jpeg *z)$/;"	f	typeref:typename:int
stbi__psd_info	lib/nuklear/example/stb_image.h	/^static int stbi__psd_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__psd_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__psd_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
stbi__psd_test	lib/nuklear/example/stb_image.h	/^static int stbi__psd_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__readval	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__readval(stbi__context *s, int channel, stbi_uc *dest)$/;"	f	typeref:typename:stbi_uc *
stbi__refill_buffer	lib/nuklear/example/stb_image.h	/^static void stbi__refill_buffer(stbi__context *s)$/;"	f	typeref:typename:void
stbi__resample	lib/nuklear/example/stb_image.h	/^} stbi__resample;$/;"	t	typeref:struct:__anonc731c3c80808
stbi__resample_row_generic	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__resample_row_generic(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_h_2	lib/nuklear/example/stb_image.h	/^static stbi_uc*  stbi__resample_row_h_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, /;"	f	typeref:typename:stbi_uc *
stbi__resample_row_hv_2_simd	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__resample_row_hv_2_simd(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, in/;"	f	typeref:typename:stbi_uc *
stbi__resample_row_v_2	lib/nuklear/example/stb_image.h	/^static stbi_uc* stbi__resample_row_v_2(stbi_uc *out, stbi_uc *in_near, stbi_uc *in_far, int w, i/;"	f	typeref:typename:stbi_uc *
stbi__rewind	lib/nuklear/example/stb_image.h	/^static void stbi__rewind(stbi__context *s)$/;"	f	typeref:typename:void
stbi__setup_jpeg	lib/nuklear/example/stb_image.h	/^static void stbi__setup_jpeg(stbi__jpeg *j)$/;"	f	typeref:typename:void
stbi__shiftsigned	lib/nuklear/example/stb_image.h	/^static int stbi__shiftsigned(int v, int shift, int bits)$/;"	f	typeref:typename:int
stbi__skip	lib/nuklear/example/stb_image.h	/^static void stbi__skip(stbi__context *s, int n)$/;"	f	typeref:typename:void
stbi__sse2_available	lib/nuklear/example/stb_image.h	/^static int stbi__sse2_available()$/;"	f	typeref:typename:int
stbi__start_callbacks	lib/nuklear/example/stb_image.h	/^static void stbi__start_callbacks(stbi__context *s, stbi_io_callbacks *c, void *user)$/;"	f	typeref:typename:void
stbi__start_file	lib/nuklear/example/stb_image.h	/^static void stbi__start_file(stbi__context *s, FILE *f)$/;"	f	typeref:typename:void
stbi__start_mem	lib/nuklear/example/stb_image.h	/^static void stbi__start_mem(stbi__context *s, stbi_uc const *buffer, int len)$/;"	f	typeref:typename:void
stbi__stdio_callbacks	lib/nuklear/example/stb_image.h	/^static stbi_io_callbacks stbi__stdio_callbacks =$/;"	v	typeref:typename:stbi_io_callbacks
stbi__stdio_eof	lib/nuklear/example/stb_image.h	/^static int stbi__stdio_eof(void *user)$/;"	f	typeref:typename:int
stbi__stdio_read	lib/nuklear/example/stb_image.h	/^static int stbi__stdio_read(void *user, char *data, int size)$/;"	f	typeref:typename:int
stbi__stdio_skip	lib/nuklear/example/stb_image.h	/^static void stbi__stdio_skip(void *user, int n)$/;"	f	typeref:typename:void
stbi__tga_info	lib/nuklear/example/stb_image.h	/^static int stbi__tga_info(stbi__context *s, int *x, int *y, int *comp)$/;"	f	typeref:typename:int
stbi__tga_load	lib/nuklear/example/stb_image.h	/^static stbi_uc *stbi__tga_load(stbi__context *s, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:stbi_uc *
stbi__tga_test	lib/nuklear/example/stb_image.h	/^static int stbi__tga_test(stbi__context *s)$/;"	f	typeref:typename:int
stbi__uint16	lib/nuklear/example/stb_image.h	/^typedef uint16_t stbi__uint16;$/;"	t	typeref:typename:uint16_t
stbi__uint16	lib/nuklear/example/stb_image.h	/^typedef unsigned short stbi__uint16;$/;"	t	typeref:typename:unsigned short
stbi__uint32	lib/nuklear/example/stb_image.h	/^typedef uint32_t stbi__uint32;$/;"	t	typeref:typename:uint32_t
stbi__uint32	lib/nuklear/example/stb_image.h	/^typedef unsigned int   stbi__uint32;$/;"	t	typeref:typename:unsigned int
stbi__unpremultiply_on_load	lib/nuklear/example/stb_image.h	/^static int stbi__unpremultiply_on_load = 0;$/;"	v	typeref:typename:int
stbi__vertically_flip_on_load	lib/nuklear/example/stb_image.h	/^static int stbi__vertically_flip_on_load = 0;$/;"	v	typeref:typename:int
stbi__zbuf	lib/nuklear/example/stb_image.h	/^} stbi__zbuf;$/;"	t	typeref:struct:__anonc731c3c80a08
stbi__zbuild_huffman	lib/nuklear/example/stb_image.h	/^static int stbi__zbuild_huffman(stbi__zhuffman *z, stbi_uc *sizelist, int num)$/;"	f	typeref:typename:int
stbi__zdefault_distance	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v	typeref:typename:stbi_uc[288][32]
stbi__zdefault_length	lib/nuklear/example/stb_image.h	/^static stbi_uc stbi__zdefault_length[288], stbi__zdefault_distance[32];$/;"	v	typeref:typename:stbi_uc[288]
stbi__zdist_base	lib/nuklear/example/stb_image.h	/^static int stbi__zdist_base[32] = { 1,2,3,4,5,7,9,13,17,25,33,49,65,97,129,193,$/;"	v	typeref:typename:int[32]
stbi__zdist_extra	lib/nuklear/example/stb_image.h	/^static int stbi__zdist_extra[32] =$/;"	v	typeref:typename:int[32]
stbi__zexpand	lib/nuklear/example/stb_image.h	/^static int stbi__zexpand(stbi__zbuf *z, char *zout, int n)  \/\/ need to make room for n bytes$/;"	f	typeref:typename:int
stbi__zget8	lib/nuklear/example/stb_image.h	/^stbi_inline static stbi_uc stbi__zget8(stbi__zbuf *z)$/;"	f	typeref:typename:stbi_inline stbi_uc
stbi__zhuffman	lib/nuklear/example/stb_image.h	/^} stbi__zhuffman;$/;"	t	typeref:struct:__anonc731c3c80908
stbi__zhuffman_decode	lib/nuklear/example/stb_image.h	/^stbi_inline static int stbi__zhuffman_decode(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:stbi_inline int
stbi__zhuffman_decode_slowpath	lib/nuklear/example/stb_image.h	/^static int stbi__zhuffman_decode_slowpath(stbi__zbuf *a, stbi__zhuffman *z)$/;"	f	typeref:typename:int
stbi__zlength_base	lib/nuklear/example/stb_image.h	/^static int stbi__zlength_base[31] = {$/;"	v	typeref:typename:int[31]
stbi__zlength_extra	lib/nuklear/example/stb_image.h	/^static int stbi__zlength_extra[31]=$/;"	v	typeref:typename:int[31]
stbi__zreceive	lib/nuklear/example/stb_image.h	/^stbi_inline static unsigned int stbi__zreceive(stbi__zbuf *z, int n)$/;"	f	typeref:typename:stbi_inline unsigned int
stbi_convert_iphone_png_to_rgb	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_convert_iphone_png_to_rgb(int flag_true_if_should_convert)$/;"	f	typeref:typename:STBIDEF void
stbi_failure_reason	lib/nuklear/example/stb_image.h	/^STBIDEF const char *stbi_failure_reason(void)$/;"	f	typeref:typename:STBIDEF const char *
stbi_hdr_to_ldr_gamma	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_gamma(float gamma) { stbi__h2l_gamma_i = 1\/gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_hdr_to_ldr_scale	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_hdr_to_ldr_scale(float scale) { stbi__h2l_scale_i = 1\/scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_image_free	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_image_free(void *retval_from_stbi_load)$/;"	f	typeref:typename:STBIDEF void
stbi_info	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info(char const *filename, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info_from_callbacks(stbi_io_callbacks const *c, void *user, int *x, int *y, int/;"	f	typeref:typename:STBIDEF int
stbi_info_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info_from_file(FILE *f, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_info_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_info_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp)$/;"	f	typeref:typename:STBIDEF int
stbi_inline	lib/nuklear/example/stb_image.h	/^   #define stbi_inline /;"	d
stbi_inline	lib/nuklear/example/stb_image.h	/^   #define stbi_inline$/;"	d
stbi_io_callbacks	lib/nuklear/example/stb_image.h	/^} stbi_io_callbacks;$/;"	t	typeref:struct:__anonc731c3c80208
stbi_is_hdr	lib/nuklear/example/stb_image.h	/^STBIDEF int      stbi_is_hdr          (char const *filename)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_callbacks(stbi_io_callbacks const *clbk, void *user)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF int      stbi_is_hdr_from_file(FILE *f)$/;"	f	typeref:typename:STBIDEF int
stbi_is_hdr_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_is_hdr_from_memory(stbi_uc const *buffer, int len)$/;"	f	typeref:typename:STBIDEF int
stbi_ldr_to_hdr_gamma	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_gamma(float gamma) { stbi__l2h_gamma = gamma; }$/;"	f	typeref:typename:STBIDEF void
stbi_ldr_to_hdr_scale	lib/nuklear/example/stb_image.h	/^STBIDEF void   stbi_ldr_to_hdr_scale(float scale) { stbi__l2h_scale = scale; }$/;"	f	typeref:typename:STBIDEF void
stbi_load	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_load_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF stbi_uc *stbi_load_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp/;"	f	typeref:typename:STBIDEF stbi_uc *
stbi_loadf	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf(char const *filename, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_callbacks	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf_from_callbacks(stbi_io_callbacks const *clbk, void *user, int *x, int /;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_file	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf_from_file(FILE *f, int *x, int *y, int *comp, int req_comp)$/;"	f	typeref:typename:STBIDEF float *
stbi_loadf_from_memory	lib/nuklear/example/stb_image.h	/^STBIDEF float *stbi_loadf_from_memory(stbi_uc const *buffer, int len, int *x, int *y, int *comp,/;"	f	typeref:typename:STBIDEF float *
stbi_lrot	lib/nuklear/example/stb_image.h	/^   #define stbi_lrot(/;"	d
stbi_set_flip_vertically_on_load	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_set_flip_vertically_on_load(int flag_true_if_should_flip)$/;"	f	typeref:typename:STBIDEF void
stbi_set_unpremultiply_on_load	lib/nuklear/example/stb_image.h	/^STBIDEF void stbi_set_unpremultiply_on_load(int flag_true_if_should_unpremultiply)$/;"	f	typeref:typename:STBIDEF void
stbi_uc	lib/nuklear/example/stb_image.h	/^typedef unsigned char stbi_uc;$/;"	t	typeref:typename:unsigned char
stbi_zlib_decode_buffer	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_zlib_decode_buffer(char *obuffer, int olen, char const *ibuffer, int ilen)$/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_malloc	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize(const char *buffer, int len, int initial_size, i/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_malloc_guesssize_headerflag	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_malloc_guesssize_headerflag(const char *buffer, int len, int init/;"	f	typeref:typename:STBIDEF char *
stbi_zlib_decode_noheader_buffer	lib/nuklear/example/stb_image.h	/^STBIDEF int stbi_zlib_decode_noheader_buffer(char *obuffer, int olen, const char *ibuffer, int i/;"	f	typeref:typename:STBIDEF int
stbi_zlib_decode_noheader_malloc	lib/nuklear/example/stb_image.h	/^STBIDEF char *stbi_zlib_decode_noheader_malloc(char const *buffer, int len, int *outlen)$/;"	f	typeref:typename:STBIDEF char *
stbrp__findresult	lib/cimgui/imgui/stb_rect_pack.h	/^} stbrp__findresult;$/;"	t	typeref:struct:__anon5e304a0c0308
stbrp__skyline_find_best_pos	lib/cimgui/imgui/stb_rect_pack.h	/^static stbrp__findresult stbrp__skyline_find_best_pos(stbrp_context *c, int width, int height)$/;"	f	typeref:typename:stbrp__findresult
stbrp__skyline_find_min_y	lib/cimgui/imgui/stb_rect_pack.h	/^static int stbrp__skyline_find_min_y(stbrp_context *c, stbrp_node *first, int x0, int width, int/;"	f	typeref:typename:int
stbrp__skyline_pack_rectangle	lib/cimgui/imgui/stb_rect_pack.h	/^static stbrp__findresult stbrp__skyline_pack_rectangle(stbrp_context *context, int width, int he/;"	f	typeref:typename:stbrp__findresult
stbrp_context	lib/cimgui/imgui/stb_rect_pack.h	/^struct stbrp_context$/;"	s
stbrp_context	lib/cimgui/imgui/stb_rect_pack.h	/^typedef struct stbrp_context stbrp_context;$/;"	t	typeref:struct:stbrp_context
stbrp_context	lib/cimgui/imgui/stb_truetype.h	/^} stbrp_context;$/;"	t	typeref:struct:__anonc4c159421108
stbrp_coord	lib/cimgui/imgui/stb_rect_pack.h	/^typedef int            stbrp_coord;$/;"	t	typeref:typename:int
stbrp_coord	lib/cimgui/imgui/stb_rect_pack.h	/^typedef unsigned short stbrp_coord;$/;"	t	typeref:typename:unsigned short
stbrp_coord	lib/cimgui/imgui/stb_truetype.h	/^typedef int stbrp_coord;$/;"	t	typeref:typename:int
stbrp_init_target	lib/cimgui/imgui/stb_rect_pack.h	/^STBRP_DEF void stbrp_init_target(stbrp_context *context, int width, int height, stbrp_node *node/;"	f	typeref:typename:STBRP_DEF void
stbrp_init_target	lib/cimgui/imgui/stb_truetype.h	/^static void stbrp_init_target(stbrp_context *con, int pw, int ph, stbrp_node *nodes, int num_nod/;"	f	typeref:typename:void
stbrp_node	lib/cimgui/imgui/stb_rect_pack.h	/^struct stbrp_node$/;"	s
stbrp_node	lib/cimgui/imgui/stb_rect_pack.h	/^typedef struct stbrp_node    stbrp_node;$/;"	t	typeref:struct:stbrp_node
stbrp_node	lib/cimgui/imgui/stb_truetype.h	/^} stbrp_node;$/;"	t	typeref:struct:__anonc4c159421208
stbrp_pack_rects	lib/cimgui/imgui/stb_rect_pack.h	/^STBRP_DEF int stbrp_pack_rects(stbrp_context *context, stbrp_rect *rects, int num_rects)$/;"	f	typeref:typename:STBRP_DEF int
stbrp_pack_rects	lib/cimgui/imgui/stb_truetype.h	/^static void stbrp_pack_rects(stbrp_context *con, stbrp_rect *rects, int num_rects)$/;"	f	typeref:typename:void
stbrp_rect	lib/cimgui/imgui/stb_rect_pack.h	/^struct stbrp_rect$/;"	s
stbrp_rect	lib/cimgui/imgui/stb_rect_pack.h	/^typedef struct stbrp_rect    stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_rect	lib/cimgui/imgui/stb_truetype.h	/^struct stbrp_rect$/;"	s
stbrp_rect	lib/cimgui/imgui/stb_truetype.h	/^typedef struct stbrp_rect stbrp_rect;$/;"	t	typeref:struct:stbrp_rect
stbrp_setup_allow_out_of_mem	lib/cimgui/imgui/stb_rect_pack.h	/^STBRP_DEF void stbrp_setup_allow_out_of_mem(stbrp_context *context, int allow_out_of_mem)$/;"	f	typeref:typename:STBRP_DEF void
stbrp_setup_heuristic	lib/cimgui/imgui/stb_rect_pack.h	/^STBRP_DEF void stbrp_setup_heuristic(stbrp_context *context, int heuristic)$/;"	f	typeref:typename:STBRP_DEF void
stbtt_BakeFontBitmap	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_BakeFontBitmap(const unsigned char *data, int offset,$/;"	f	typeref:typename:STBTT_DEF int
stbtt_BakeFontBitmap_internal	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt_BakeFontBitmap_internal(unsigned char *data, int offset,  \/\/ font location (u/;"	f	typeref:typename:int
stbtt_CompareUTF8toUTF16_bigendian	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_CompareUTF8toUTF16_bigendian(const char *s1, int len1, const char *s2, int l/;"	f	typeref:typename:STBTT_DEF int
stbtt_CompareUTF8toUTF16_bigendian_internal	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt_CompareUTF8toUTF16_bigendian_internal(char *s1, int len1, char *s2, int len2) $/;"	f	typeref:typename:int
stbtt_FindGlyphIndex	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_FindGlyphIndex(const stbtt_fontinfo *info, int unicode_codepoint)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_FindMatchingFont(const unsigned char *fontdata, const char *name, int flags)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_FindMatchingFont_internal	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt_FindMatchingFont_internal(unsigned char *font_collection, char *name_utf8, stbt/;"	f	typeref:typename:int
stbtt_FlattenCurves	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__point *stbtt_FlattenCurves(stbtt_vertex *vertices, int num_verts, float objspace_f/;"	f	typeref:typename:stbtt__point *
stbtt_FreeBitmap	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_FreeBitmap(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeSDF	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_FreeSDF(unsigned char *bitmap, void *userdata)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_FreeShape	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_FreeShape(const stbtt_fontinfo *info, stbtt_vertex *v)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetBakedQuad	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetBakedQuad(const stbtt_bakedchar *chardata, int pw, int ph, int char_inde/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmap	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmap(const stbtt_fontinfo *info, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBitmapBox	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBox(const stbtt_fontinfo *font, int codepoint, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapBoxSubpixel	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointBitmapBoxSubpixel(const stbtt_fontinfo *font, int codepoint, fl/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointBitmapSubpixel	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetCodepointBitmapSubpixel(const stbtt_fontinfo *info, float scal/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointBox	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointBox(const stbtt_fontinfo *info, int codepoint, int *x0, int *y0,/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointHMetrics	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetCodepointHMetrics(const stbtt_fontinfo *info, int codepoint, int *advanc/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetCodepointKernAdvance	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int  stbtt_GetCodepointKernAdvance(const stbtt_fontinfo *info, int ch1, int ch2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetCodepointSDF	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetCodepointSDF(const stbtt_fontinfo *info, float scale, int cod/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetCodepointShape	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_GetCodepointShape(const stbtt_fontinfo *info, int unicode_codepoint, stbtt_v/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontBoundingBox	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontBoundingBox(const stbtt_fontinfo *info, int *x0, int *y0, int *x1, i/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontNameString	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF const char *stbtt_GetFontNameString(const stbtt_fontinfo *font, int *length, int platf/;"	f	typeref:typename:STBTT_DEF const char *
stbtt_GetFontOffsetForIndex	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_GetFontOffsetForIndex(const unsigned char *data, int index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetFontOffsetForIndex_internal	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt_GetFontOffsetForIndex_internal(unsigned char *font_collection, int index)$/;"	f	typeref:typename:int
stbtt_GetFontVMetrics	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetFontVMetrics(const stbtt_fontinfo *info, int *ascent, int *descent, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_GetFontVMetricsOS2	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int  stbtt_GetFontVMetricsOS2(const stbtt_fontinfo *info, int *typoAscent, int *typoDe/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphBitmap	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmap(const stbtt_fontinfo *info, float scale_x, float s/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBitmapBox	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBox(const stbtt_fontinfo *font, int glyph, float scale_x, flo/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapBoxSubpixel	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphBitmapBoxSubpixel(const stbtt_fontinfo *font, int glyph, float scal/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphBitmapSubpixel	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF unsigned char *stbtt_GetGlyphBitmapSubpixel(const stbtt_fontinfo *info, float scale_x,/;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphBox	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphBox(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, i/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphHMetrics	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetGlyphHMetrics(const stbtt_fontinfo *info, int glyph_index, int *advanceW/;"	f	typeref:typename:STBTT_DEF void
stbtt_GetGlyphKernAdvance	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int  stbtt_GetGlyphKernAdvance(const stbtt_fontinfo *info, int g1, int g2)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetGlyphSDF	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF unsigned char * stbtt_GetGlyphSDF(const stbtt_fontinfo *info, float scale, int glyph, /;"	f	typeref:typename:STBTT_DEF unsigned char *
stbtt_GetGlyphShape	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_GetGlyphShape(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_GetNumberOfFonts(const unsigned char *data)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_GetNumberOfFonts_internal	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt_GetNumberOfFonts_internal(unsigned char *font_collection)$/;"	f	typeref:typename:int
stbtt_GetPackedQuad	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_GetPackedQuad(const stbtt_packedchar *chardata, int pw, int ph, int char_in/;"	f	typeref:typename:STBTT_DEF void
stbtt_InitFont	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_InitFont(stbtt_fontinfo *info, const unsigned char *data, int offset)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_InitFont_internal	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt_InitFont_internal(stbtt_fontinfo *info, unsigned char *data, int fontstart)$/;"	f	typeref:typename:int
stbtt_IsGlyphEmpty	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_IsGlyphEmpty(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:STBTT_DEF int
stbtt_MakeCodepointBitmap	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmap(const stbtt_fontinfo *info, unsigned char *output, int /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixel	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *outp/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeCodepointBitmapSubpixelPrefilter	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_MakeCodepointBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned c/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmap	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmap(const stbtt_fontinfo *info, unsigned char *output, int out_/;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixel	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixel(const stbtt_fontinfo *info, unsigned char *output, /;"	f	typeref:typename:STBTT_DEF void
stbtt_MakeGlyphBitmapSubpixelPrefilter	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_MakeGlyphBitmapSubpixelPrefilter(const stbtt_fontinfo *info, unsigned char /;"	f	typeref:typename:STBTT_DEF void
stbtt_PackBegin	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_PackBegin(stbtt_pack_context *spc, unsigned char *pixels, int pw, int ph, in/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackEnd	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_PackEnd  (stbtt_pack_context *spc)$/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRange	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRange(stbtt_pack_context *spc, const unsigned char *fontdata, int fo/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRanges	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRanges(stbtt_pack_context *spc, const unsigned char *fontdata, int f/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesGatherRects	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesGatherRects(stbtt_pack_context *spc, const stbtt_fontinfo *inf/;"	f	typeref:typename:STBTT_DEF int
stbtt_PackFontRangesPackRects	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_PackFontRangesPackRects(stbtt_pack_context *spc, stbrp_rect *rects, int num/;"	f	typeref:typename:STBTT_DEF void
stbtt_PackFontRangesRenderIntoRects	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF int stbtt_PackFontRangesRenderIntoRects(stbtt_pack_context *spc, const stbtt_fontinfo /;"	f	typeref:typename:STBTT_DEF int
stbtt_PackSetOversampling	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_PackSetOversampling(stbtt_pack_context *spc, unsigned int h_oversample, uns/;"	f	typeref:typename:STBTT_DEF void
stbtt_Rasterize	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF void stbtt_Rasterize(stbtt__bitmap *result, float flatness_in_pixels, stbtt_vertex *ve/;"	f	typeref:typename:STBTT_DEF void
stbtt_ScaleForMappingEmToPixels	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForMappingEmToPixels(const stbtt_fontinfo *info, float pixels)$/;"	f	typeref:typename:STBTT_DEF float
stbtt_ScaleForPixelHeight	lib/cimgui/imgui/stb_truetype.h	/^STBTT_DEF float stbtt_ScaleForPixelHeight(const stbtt_fontinfo *info, float height)$/;"	f	typeref:typename:STBTT_DEF float
stbtt__CompareUTF8toUTF16_bigendian_prefix	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_int32 stbtt__CompareUTF8toUTF16_bigendian_prefix(stbtt_uint8 *s1, stbtt_int32 len1,/;"	f	typeref:typename:stbtt_int32
stbtt__GetCoverageIndex	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_int32  stbtt__GetCoverageIndex(stbtt_uint8 *coverageTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyfOffset	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__GetGlyfOffset(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:int
stbtt__GetGlyphClass	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_int32  stbtt__GetGlyphClass(stbtt_uint8 *classDefTable, int glyph)$/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphGPOSInfoAdvance	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_int32  stbtt__GetGlyphGPOSInfoAdvance(const stbtt_fontinfo *info, int glyph1, int g/;"	f	typeref:typename:stbtt_int32
stbtt__GetGlyphInfoT2	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__GetGlyphInfoT2(const stbtt_fontinfo *info, int glyph_index, int *x0, int *y0, /;"	f	typeref:typename:int
stbtt__GetGlyphKernInfoAdvance	lib/cimgui/imgui/stb_truetype.h	/^static int  stbtt__GetGlyphKernInfoAdvance(const stbtt_fontinfo *info, int glyph1, int glyph2)$/;"	f	typeref:typename:int
stbtt__GetGlyphShapeT2	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__GetGlyphShapeT2(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__GetGlyphShapeTT	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__GetGlyphShapeTT(const stbtt_fontinfo *info, int glyph_index, stbtt_vertex **pv/;"	f	typeref:typename:int
stbtt__active_edge	lib/cimgui/imgui/stb_truetype.h	/^typedef struct stbtt__active_edge$/;"	s
stbtt__active_edge	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__active_edge;$/;"	t	typeref:struct:stbtt__active_edge
stbtt__add_point	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__add_point(stbtt__point *points, int n, float x, float y)$/;"	f	typeref:typename:void
stbtt__bitmap	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__bitmap;$/;"	t	typeref:struct:__anonc4c159420808
stbtt__buf	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__buf;$/;"	t	typeref:struct:__anonc4c159420108
stbtt__buf_get	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_uint32 stbtt__buf_get(stbtt__buf *b, int n)$/;"	f	typeref:typename:stbtt_uint32
stbtt__buf_get16	lib/cimgui/imgui/stb_truetype.h	/^#define stbtt__buf_get16(/;"	d
stbtt__buf_get32	lib/cimgui/imgui/stb_truetype.h	/^#define stbtt__buf_get32(/;"	d
stbtt__buf_get8	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_get8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_peek8	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_uint8 stbtt__buf_peek8(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint8
stbtt__buf_range	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__buf_range(const stbtt__buf *b, int o, int s)$/;"	f	typeref:typename:stbtt__buf
stbtt__buf_seek	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__buf_seek(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__buf_skip	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__buf_skip(stbtt__buf *b, int o)$/;"	f	typeref:typename:void
stbtt__cff_get_index	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__cff_get_index(stbtt__buf *b)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_index_count	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__cff_index_count(stbtt__buf *b)$/;"	f	typeref:typename:int
stbtt__cff_index_get	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__cff_index_get(stbtt__buf b, int i)$/;"	f	typeref:typename:stbtt__buf
stbtt__cff_int	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_uint32 stbtt__cff_int(stbtt__buf *b)$/;"	f	typeref:typename:stbtt_uint32
stbtt__cff_skip_operand	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__cff_skip_operand(stbtt__buf *b) {$/;"	f	typeref:typename:void
stbtt__check_size16	lib/cimgui/imgui/stb_truetype.h	/^   typedef char stbtt__check_size16[sizeof(stbtt_int16)==2 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int16)==2?1:-1]
stbtt__check_size32	lib/cimgui/imgui/stb_truetype.h	/^   typedef char stbtt__check_size32[sizeof(stbtt_int32)==4 ? 1 : -1];$/;"	t	typeref:typename:char[sizeof (stbtt_int32)==4?1:-1]
stbtt__cid_get_glyph_subrs	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__cid_get_glyph_subrs(const stbtt_fontinfo *info, int glyph_index)$/;"	f	typeref:typename:stbtt__buf
stbtt__close_shape	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__close_shape(stbtt_vertex *vertices, int num_vertices, int was_off, int start_o/;"	f	typeref:typename:int
stbtt__compute_crossings_x	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__compute_crossings_x(float x, float y, int nverts, stbtt_vertex *verts)$/;"	f	typeref:typename:int
stbtt__csctx	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__csctx;$/;"	t	typeref:struct:__anonc4c159420f08
stbtt__csctx_close_shape	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__csctx_close_shape(stbtt__csctx *ctx)$/;"	f	typeref:typename:void
stbtt__csctx_rccurve_to	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__csctx_rccurve_to(stbtt__csctx *ctx, float dx1, float dy1, float dx2, float dy/;"	f	typeref:typename:void
stbtt__csctx_rline_to	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__csctx_rline_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_rmove_to	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__csctx_rmove_to(stbtt__csctx *ctx, float dx, float dy)$/;"	f	typeref:typename:void
stbtt__csctx_v	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__csctx_v(stbtt__csctx *c, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stbt/;"	f	typeref:typename:void
stbtt__cuberoot	lib/cimgui/imgui/stb_truetype.h	/^static float stbtt__cuberoot( float x )$/;"	f	typeref:typename:float
stbtt__dict_get	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__dict_get(stbtt__buf *b, int key)$/;"	f	typeref:typename:stbtt__buf
stbtt__dict_get_ints	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__dict_get_ints(stbtt__buf *b, int key, int outcount, stbtt_uint32 *out)$/;"	f	typeref:typename:void
stbtt__edge	lib/cimgui/imgui/stb_truetype.h	/^typedef struct stbtt__edge {$/;"	s
stbtt__edge	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__edge;$/;"	t	typeref:struct:stbtt__edge
stbtt__fill_active_edges	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__fill_active_edges(unsigned char *scanline, int len, stbtt__active_edge *e, in/;"	f	typeref:typename:void
stbtt__fill_active_edges_new	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__fill_active_edges_new(float *scanline, float *scanline_fill, int len, stbtt__/;"	f	typeref:typename:void
stbtt__find_table	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_uint32 stbtt__find_table(stbtt_uint8 *data, stbtt_uint32 fontstart, const char *tag/;"	f	typeref:typename:stbtt_uint32
stbtt__get_subr	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__get_subr(stbtt__buf idx, int n)$/;"	f	typeref:typename:stbtt__buf
stbtt__get_subrs	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__get_subrs(stbtt__buf cff, stbtt__buf fontdict)$/;"	f	typeref:typename:stbtt__buf
stbtt__h_prefilter	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__h_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt__handle_clipped_edge	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__handle_clipped_edge(float *scanline, int x, stbtt__active_edge *e, float x0, /;"	f	typeref:typename:void
stbtt__hheap	lib/cimgui/imgui/stb_truetype.h	/^typedef struct stbtt__hheap$/;"	s
stbtt__hheap	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__hheap;$/;"	t	typeref:struct:stbtt__hheap
stbtt__hheap_alloc	lib/cimgui/imgui/stb_truetype.h	/^static void *stbtt__hheap_alloc(stbtt__hheap *hh, size_t size, void *userdata)$/;"	f	typeref:typename:void *
stbtt__hheap_chunk	lib/cimgui/imgui/stb_truetype.h	/^typedef struct stbtt__hheap_chunk$/;"	s
stbtt__hheap_chunk	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__hheap_chunk;$/;"	t	typeref:struct:stbtt__hheap_chunk
stbtt__hheap_cleanup	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__hheap_cleanup(stbtt__hheap *hh, void *userdata)$/;"	f	typeref:typename:void
stbtt__hheap_free	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__hheap_free(stbtt__hheap *hh, void *p)$/;"	f	typeref:typename:void
stbtt__isfont	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__isfont(stbtt_uint8 *font)$/;"	f	typeref:typename:int
stbtt__matches	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__matches(stbtt_uint8 *fc, stbtt_uint32 offset, stbtt_uint8 *name, stbtt_int32 f/;"	f	typeref:typename:int
stbtt__matchpair	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__matchpair(stbtt_uint8 *fc, stbtt_uint32 nm, stbtt_uint8 *name, stbtt_int32 nle/;"	f	typeref:typename:int
stbtt__new_active	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__active_edge *stbtt__new_active(stbtt__hheap *hh, stbtt__edge *e, int off_x, float /;"	f	typeref:typename:stbtt__active_edge *
stbtt__new_buf	lib/cimgui/imgui/stb_truetype.h	/^static stbtt__buf stbtt__new_buf(const void *p, size_t size)$/;"	f	typeref:typename:stbtt__buf
stbtt__oversample_shift	lib/cimgui/imgui/stb_truetype.h	/^static float stbtt__oversample_shift(int oversample)$/;"	f	typeref:typename:float
stbtt__point	lib/cimgui/imgui/stb_truetype.h	/^} stbtt__point;$/;"	t	typeref:struct:__anonc4c159421008
stbtt__rasterize	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__rasterize(stbtt__bitmap *result, stbtt__point *pts, int *wcount, int windings/;"	f	typeref:typename:void
stbtt__rasterize_sorted_edges	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__rasterize_sorted_edges(stbtt__bitmap *result, stbtt__edge *e, int n, int vsub/;"	f	typeref:typename:void
stbtt__ray_intersect_bezier	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__ray_intersect_bezier(float orig[2], float ray[2], float q0[2], float q1[2], fl/;"	f	typeref:typename:int
stbtt__run_charstring	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__run_charstring(const stbtt_fontinfo *info, int glyph_index, stbtt__csctx *c)$/;"	f	typeref:typename:int
stbtt__solve_cubic	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__solve_cubic(float a, float b, float c, float* r)$/;"	f	typeref:typename:int
stbtt__sort_edges	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__sort_edges(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_ins_sort	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__sort_edges_ins_sort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__sort_edges_quicksort	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__sort_edges_quicksort(stbtt__edge *p, int n)$/;"	f	typeref:typename:void
stbtt__tesselate_cubic	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__tesselate_cubic(stbtt__point *points, int *num_points, float x0, float y0, fl/;"	f	typeref:typename:void
stbtt__tesselate_curve	lib/cimgui/imgui/stb_truetype.h	/^static int stbtt__tesselate_curve(stbtt__point *points, int *num_points, float x0, float y0, flo/;"	f	typeref:typename:int
stbtt__test_oversample_pow2	lib/cimgui/imgui/stb_truetype.h	/^typedef int stbtt__test_oversample_pow2[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1)) == 0 ?/;"	t	typeref:typename:int[(STBTT_MAX_OVERSAMPLE & (STBTT_MAX_OVERSAMPLE-1))==0?1:-1]
stbtt__track_vertex	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__track_vertex(stbtt__csctx *c, stbtt_int32 x, stbtt_int32 y)$/;"	f	typeref:typename:void
stbtt__v_prefilter	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt__v_prefilter(unsigned char *pixels, int w, int h, int stride_in_bytes, unsigne/;"	f	typeref:typename:void
stbtt_aligned_quad	lib/cimgui/imgui/stb_truetype.h	/^} stbtt_aligned_quad;$/;"	t	typeref:struct:__anonc4c159420308
stbtt_bakedchar	lib/cimgui/imgui/stb_truetype.h	/^} stbtt_bakedchar;$/;"	t	typeref:struct:__anonc4c159420208
stbtt_fontinfo	lib/cimgui/imgui/stb_truetype.h	/^struct stbtt_fontinfo$/;"	s
stbtt_fontinfo	lib/cimgui/imgui/stb_truetype.h	/^typedef struct stbtt_fontinfo stbtt_fontinfo;$/;"	t	typeref:struct:stbtt_fontinfo
stbtt_int16	lib/cimgui/imgui/stb_truetype.h	/^   typedef signed   short  stbtt_int16;$/;"	t	typeref:typename:signed short
stbtt_int32	lib/cimgui/imgui/stb_truetype.h	/^   typedef signed   int    stbtt_int32;$/;"	t	typeref:typename:signed int
stbtt_int8	lib/cimgui/imgui/stb_truetype.h	/^   typedef signed   char   stbtt_int8;$/;"	t	typeref:typename:signed char
stbtt_pack_context	lib/cimgui/imgui/stb_truetype.h	/^struct stbtt_pack_context {$/;"	s
stbtt_pack_context	lib/cimgui/imgui/stb_truetype.h	/^typedef struct stbtt_pack_context stbtt_pack_context;$/;"	t	typeref:struct:stbtt_pack_context
stbtt_pack_range	lib/cimgui/imgui/stb_truetype.h	/^} stbtt_pack_range;$/;"	t	typeref:struct:__anonc4c159420508
stbtt_packedchar	lib/cimgui/imgui/stb_truetype.h	/^} stbtt_packedchar;$/;"	t	typeref:struct:__anonc4c159420408
stbtt_setvertex	lib/cimgui/imgui/stb_truetype.h	/^static void stbtt_setvertex(stbtt_vertex *v, stbtt_uint8 type, stbtt_int32 x, stbtt_int32 y, stb/;"	f	typeref:typename:void
stbtt_tag	lib/cimgui/imgui/stb_truetype.h	/^#define stbtt_tag(/;"	d
stbtt_tag4	lib/cimgui/imgui/stb_truetype.h	/^#define stbtt_tag4(/;"	d
stbtt_uint16	lib/cimgui/imgui/stb_truetype.h	/^   typedef unsigned short  stbtt_uint16;$/;"	t	typeref:typename:unsigned short
stbtt_uint32	lib/cimgui/imgui/stb_truetype.h	/^   typedef unsigned int    stbtt_uint32;$/;"	t	typeref:typename:unsigned int
stbtt_uint8	lib/cimgui/imgui/stb_truetype.h	/^   typedef unsigned char   stbtt_uint8;$/;"	t	typeref:typename:unsigned char
stbtt_vertex	lib/cimgui/imgui/stb_truetype.h	/^   } stbtt_vertex;$/;"	t	typeref:struct:__anonc4c159420708
stbtt_vertex_type	lib/cimgui/imgui/stb_truetype.h	/^   #define stbtt_vertex_type /;"	d
steal_work	lib/klib/kthread.c	/^static inline long steal_work(kt_for_t *t)$/;"	f	typeref:typename:long	file:
step	lib/klib/kthread.c	/^	int step;$/;"	m	struct:__anone5c783700308	typeref:typename:int	file:
step	lib/nuklear/example/stb_image.h	/^   int parse, step;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
step	lib/nuklear/nuklear.h	/^    union nk_property step;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
step	lib/nuklear/src/nuklear_internal.h	/^    union nk_property step;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
step_t	lib/klib/test/kthread_test2.c	/^} step_t;$/;"	t	typeref:struct:__anon03438e700208	file:
stop	lib/nuklear/example/extended.c	/^    struct nk_image stop;$/;"	m	struct:media	typeref:struct:nk_image	file:
str	lib/klib/kson.h	/^		char *str;$/;"	m	union:kson_node_s::__anonf60a9bad010a	typeref:typename:char *
str_data	lib/klib/test/kbtree_test.c	/^static char **str_data;$/;"	v	typeref:typename:char **	file:
str_data	lib/klib/test/khash_test.c	/^static char **str_data;$/;"	v	typeref:typename:char **	file:
str_duplicate	lib/nuklear/example/file_browser.c	/^str_duplicate(const char *src)$/;"	f	typeref:typename:char *	file:
str_len	lib/klib/test/kstring_bench2.c	/^static int str_len = 1024*1024*128;$/;"	v	typeref:typename:int	file:
str_t	lib/klib/test/kbtree_test.c	/^typedef const char *str_t;$/;"	t	typeref:typename:const char *	file:
stride	lib/cimgui/imgui/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anonc4c159420808	typeref:typename:int
stride	lib/nuklear/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int
stride	lib/nuklear/src/nuklear_font.c	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int	file:
stride_in_bytes	lib/cimgui/imgui/stb_truetype.h	/^   int   stride_in_bytes;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
stride_in_bytes	lib/nuklear/nuklear.h	/^    int   stride_in_bytes;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
stride_in_bytes	lib/nuklear/src/nuklear_font.c	/^    int   stride_in_bytes;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int	file:
string	lib/nuklear/nuklear.h	/^    char string[1];$/;"	m	struct:nk_command_text	typeref:typename:char[1]
string	lib/nuklear/nuklear.h	/^    struct nk_str string;$/;"	m	struct:nk_text_edit	typeref:struct:nk_str
string	lib/nuklear/src/nuklear.h	/^    char string[1];$/;"	m	struct:nk_command_text	typeref:typename:char[1]
string	lib/nuklear/src/nuklear.h	/^    struct nk_str string;$/;"	m	struct:nk_text_edit	typeref:struct:nk_str
string:split	lib/klib/lua/klib.lua	/^function string:split(sep, n)$/;"	f
strtoint64	lib/klib/knetfile.c	/^int64_t strtoint64(const char *buf)$/;"	f	typeref:typename:int64_t
style	lib/nuklear/nuklear.h	/^    struct nk_style style;$/;"	m	struct:nk_context	typeref:struct:nk_style
style	lib/nuklear/src/nuklear.h	/^    struct nk_style style;$/;"	m	struct:nk_context	typeref:struct:nk_style
style_items	lib/nuklear/nuklear.h	/^    struct nk_config_stack_style_item style_items;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_style_item
style_items	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_style_item style_items;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_style_item
subrs	lib/cimgui/imgui/stb_truetype.h	/^   stbtt__buf subrs;                  \/\/ private charstring subroutines index$/;"	m	struct:stbtt_fontinfo	typeref:typename:stbtt__buf
succ_high	lib/nuklear/example/stb_image.h	/^   int            succ_high;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
succ_low	lib/nuklear/example/stb_image.h	/^   int            succ_low;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
suffix	lib/nuklear/example/file_browser.c	/^    const char *suffix;$/;"	m	struct:file	typeref:typename:const char *	file:
suffix	lib/nuklear/example/stb_image.h	/^   stbi_uc suffix;$/;"	m	struct:__anonc731c3c80f08	typeref:typename:stbi_uc
surf	lib/nuklear/demo/x11/nuklear_xlib.h	/^    struct XSurface *surf;$/;"	m	struct:__anon50fc9fff0108	typeref:struct:XSurface *
surf	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    struct XSurface *surf;$/;"	m	struct:__anon88f201100108	typeref:struct:XSurface *
swa	lib/nuklear/demo/x11/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	typeref:typename:XSetWindowAttributes	file:
swa	lib/nuklear/demo/x11_opengl2/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	typeref:typename:XSetWindowAttributes	file:
swa	lib/nuklear/demo/x11_opengl3/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	typeref:typename:XSetWindowAttributes	file:
swa	lib/nuklear/demo/x11_rawfb/main.c	/^    XSetWindowAttributes swa;$/;"	m	struct:XWindow	typeref:typename:XSetWindowAttributes	file:
swap	lib/cimgui/imgui/imgui.h	/^    inline void                 swap(ImVector<value_type>& rhs) { int rhs_size = rhs.Size; rhs.S/;"	f	class:ImVector	typeref:typename:void
swap_chain	lib/nuklear/demo/d3d11/main.c	/^static IDXGISwapChain *swap_chain;$/;"	v	typeref:typename:IDXGISwapChain *	file:
sy	lib/cimgui/imgui/stb_truetype.h	/^   float sy;$/;"	m	struct:stbtt__active_edge	typeref:typename:float
sy	lib/nuklear/nuklear.h	/^    float sy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float
sy	lib/nuklear/src/nuklear_font.c	/^    float sy;$/;"	m	struct:nk_tt__active_edge	typeref:typename:float	file:
sym_active	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_active;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_active	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_active;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_hover	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_hover;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_hover	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_hover;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_left	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_left;$/;"	m	struct:nk_style_property	typeref:enum:nk_symbol_type
sym_left	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_left;$/;"	m	struct:nk_style_property	typeref:enum:nk_symbol_type
sym_maximize	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_maximize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_symbol_type
sym_maximize	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_maximize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_symbol_type
sym_minimize	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_minimize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_symbol_type
sym_minimize	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_minimize;$/;"	m	struct:nk_style_tab	typeref:enum:nk_symbol_type
sym_normal	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_normal;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_normal	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_normal;$/;"	m	struct:nk_style_combo	typeref:enum:nk_symbol_type
sym_right	lib/nuklear/nuklear.h	/^    enum nk_symbol_type sym_right;$/;"	m	struct:nk_style_property	typeref:enum:nk_symbol_type
sym_right	lib/nuklear/src/nuklear.h	/^    enum nk_symbol_type sym_right;$/;"	m	struct:nk_style_property	typeref:enum:nk_symbol_type
symbol_active	lib/nuklear/nuklear.h	/^    struct nk_color symbol_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
symbol_active	lib/nuklear/src/nuklear.h	/^    struct nk_color symbol_active;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
symbol_hover	lib/nuklear/nuklear.h	/^    struct nk_color symbol_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
symbol_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color symbol_hover;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
symbol_normal	lib/nuklear/nuklear.h	/^    struct nk_color symbol_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
symbol_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color symbol_normal;$/;"	m	struct:nk_style_combo	typeref:struct:nk_color
synergyCtx	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^    uSynergyContext _synergyCtx;$/;"	E	interface:ImGuiHelper
synergyQueue	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^    dispatch_queue_t _synergyQueue;$/;"	E	interface:ImGuiHelper
t	lib/klib/kthread.c	/^	struct kt_for_t *t;$/;"	m	struct:__anone5c783700108	typeref:struct:kt_for_t *	file:
t	lib/klib/kthread.c	/^	struct kt_forpool_t *t;$/;"	m	struct:__anone5c783700208	typeref:struct:kt_forpool_t *	file:
t	lib/klib/test/kseq_bench2.c	/^	clock_t t;$/;"	v	typeref:typename:clock_t
t0	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anonc4c159420308	typeref:typename:float
t0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
t0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
t1	lib/cimgui/imgui/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anonc4c159420308	typeref:typename:float
t1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
t1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
tab	lib/klib/kstring.h	/^	uint64_t tab[4];$/;"	m	struct:__anon959017540108	typeref:typename:uint64_t[4]
tab	lib/nuklear/nuklear.h	/^    struct nk_style_tab tab;$/;"	m	struct:nk_style	typeref:struct:nk_style_tab
tab	lib/nuklear/src/nuklear.h	/^    struct nk_style_tab tab;$/;"	m	struct:nk_style	typeref:struct:nk_style_tab
tab_maximize	lib/nuklear/example/skinning.c	/^    struct nk_image tab_maximize;$/;"	m	struct:media	typeref:struct:nk_image	file:
tab_maximize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button tab_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
tab_maximize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button tab_maximize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
tab_minimize	lib/nuklear/example/skinning.c	/^    struct nk_image tab_minimize;$/;"	m	struct:media	typeref:struct:nk_image	file:
tab_minimize_button	lib/nuklear/nuklear.h	/^    struct nk_style_button tab_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
tab_minimize_button	lib/nuklear/src/nuklear.h	/^    struct nk_style_button tab_minimize_button;$/;"	m	struct:nk_style_tab	typeref:struct:nk_style_button
table.ksmall	lib/klib/lua/klib.lua	/^function table.ksmall(arr, k)$/;"	f
table.shuffle	lib/klib/lua/klib.lua	/^function table.shuffle(a)$/;"	f
table_count	lib/nuklear/nuklear.h	/^    unsigned int table_count;$/;"	m	struct:nk_window	typeref:typename:unsigned int
table_count	lib/nuklear/src/nuklear.h	/^    unsigned int table_count;$/;"	m	struct:nk_window	typeref:typename:unsigned int
tables	lib/nuklear/nuklear.h	/^    struct nk_table *tables;$/;"	m	struct:nk_window	typeref:struct:nk_table *
tables	lib/nuklear/src/nuklear.h	/^    struct nk_table *tables;$/;"	m	struct:nk_window	typeref:struct:nk_table *
tb	lib/klib/ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon7bd1e0a70108	typeref:typename:int
tbl	lib/nuklear/nuklear.h	/^    struct nk_table tbl;$/;"	m	union:nk_page_data	typeref:struct:nk_table
tbl	lib/nuklear/src/nuklear.h	/^    struct nk_table tbl;$/;"	m	union:nk_page_data	typeref:struct:nk_table
te	lib/klib/ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon7bd1e0a70108	typeref:typename:int
te2	lib/klib/ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon7bd1e0a70108	typeref:typename:int
tearDownGL	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (void)tearDownGL;$/;"	m	interface:GameViewController
tearDownGL	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
templates	lib/nuklear/nuklear.h	/^    float templates[NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS];$/;"	m	struct:nk_row_layout	typeref:typename:float[]
templates	lib/nuklear/src/nuklear.h	/^    float templates[NK_MAX_LAYOUT_ROW_TEMPLATE_COLUMNS];$/;"	m	struct:nk_row_layout	typeref:typename:float[]
temporary	lib/nuklear/nuklear.h	/^    struct nk_allocator temporary;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_allocator
temporary	lib/nuklear/src/nuklear.h	/^    struct nk_allocator temporary;$/;"	m	struct:nk_font_atlas	typeref:struct:nk_allocator
test_kgetline	lib/klib/test/kstring_test.c	/^void test_kgetline(kstring_t *ks, const char *text, ...)$/;"	f	typeref:typename:void
test_kputl	lib/klib/test/kstring_test.c	/^void test_kputl(kstring_t *ks, long n)$/;"	f	typeref:typename:void
test_kputw	lib/klib/test/kstring_test.c	/^void test_kputw(kstring_t *ks, int n)$/;"	f	typeref:typename:void
tex_handles	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint64 tex_handles[NK_GLFW_MAX_TEXTURES];$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint64[]
tex_height	lib/nuklear/demo/glfw_opengl4/main.c	/^    enum {tex_width = 256, tex_height = 256};$/;"	e	enum:main::__anon15b14e0d0103	file:
tex_height	lib/nuklear/nuklear.h	/^    int tex_height;$/;"	m	struct:nk_font_atlas	typeref:typename:int
tex_height	lib/nuklear/src/nuklear.h	/^    int tex_height;$/;"	m	struct:nk_font_atlas	typeref:typename:int
tex_ids	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint tex_ids[NK_GLFW_MAX_TEXTURES];$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint[]
tex_width	lib/nuklear/demo/glfw_opengl4/main.c	/^    enum {tex_width = 256, tex_height = 256};$/;"	e	enum:main::__anon15b14e0d0103	file:
tex_width	lib/nuklear/nuklear.h	/^    int tex_width;$/;"	m	struct:nk_font_atlas	typeref:typename:int
tex_width	lib/nuklear/src/nuklear.h	/^    int tex_width;$/;"	m	struct:nk_font_atlas	typeref:typename:int
text	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw	typeref:typename:unsigned int[]
text	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw	typeref:typename:unsigned int[]
text	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    unsigned int text[NK_GLFW_TEXT_MAX];$/;"	m	struct:nk_glfw	typeref:typename:unsigned int[]
text	lib/nuklear/nuklear.h	/^    char text[NK_INPUT_MAX];$/;"	m	struct:nk_keyboard	typeref:typename:char[]
text	lib/nuklear/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_style_tab	typeref:struct:nk_color
text	lib/nuklear/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_text	typeref:struct:nk_color
text	lib/nuklear/nuklear.h	/^    struct nk_style_text text;$/;"	m	struct:nk_style	typeref:struct:nk_style_text
text	lib/nuklear/src/nuklear.h	/^    char text[NK_INPUT_MAX];$/;"	m	struct:nk_keyboard	typeref:typename:char[]
text	lib/nuklear/src/nuklear.h	/^    struct nk_color text;$/;"	m	struct:nk_style_tab	typeref:struct:nk_color
text	lib/nuklear/src/nuklear.h	/^    struct nk_style_text text;$/;"	m	struct:nk_style	typeref:struct:nk_style_text
text	lib/nuklear/src/nuklear_internal.h	/^    struct nk_color text;$/;"	m	struct:nk_text	typeref:struct:nk_color
text_active	lib/nuklear/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_active	lib/nuklear/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_active	lib/nuklear/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_active;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_alignment	lib/nuklear/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_button	typeref:typename:nk_flags
text_alignment	lib/nuklear/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_selectable	typeref:typename:nk_flags
text_alignment	lib/nuklear/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_toggle	typeref:typename:nk_flags
text_alignment	lib/nuklear/src/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_button	typeref:typename:nk_flags
text_alignment	lib/nuklear/src/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_selectable	typeref:typename:nk_flags
text_alignment	lib/nuklear/src/nuklear.h	/^    nk_flags text_alignment;$/;"	m	struct:nk_style_toggle	typeref:typename:nk_flags
text_background	lib/nuklear/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_background	lib/nuklear/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_background	lib/nuklear/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_background	lib/nuklear/src/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_background	lib/nuklear/src/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_background	lib/nuklear/src/nuklear.h	/^    struct nk_color text_background;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_edit	lib/nuklear/nuklear.h	/^    struct nk_text_edit text_edit;$/;"	m	struct:nk_context	typeref:struct:nk_text_edit
text_edit	lib/nuklear/src/nuklear.h	/^    struct nk_text_edit text_edit;$/;"	m	struct:nk_context	typeref:struct:nk_text_edit
text_file	lib/nuklear/example/file_browser.c	/^    struct nk_image text_file;$/;"	m	struct:icons	typeref:struct:nk_image	file:
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_hover	lib/nuklear/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_hover	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_hover_active	lib/nuklear/nuklear.h	/^    struct nk_color text_hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_hover_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_hover_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_input	lib/nuklear/example/canvas.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:void	file:
text_input	lib/nuklear/example/extended.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:void	file:
text_input	lib/nuklear/example/file_browser.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:void	file:
text_input	lib/nuklear/example/skinning.c	/^static void text_input(GLFWwindow *win, unsigned int codepoint)$/;"	f	typeref:typename:void	file:
text_len	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int text_len;$/;"	m	struct:nk_glfw	typeref:typename:int
text_len	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int text_len;$/;"	m	struct:nk_glfw	typeref:typename:int
text_len	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int text_len;$/;"	m	struct:nk_glfw	typeref:typename:int
text_len	lib/nuklear/nuklear.h	/^    int text_len;$/;"	m	struct:nk_keyboard	typeref:typename:int
text_len	lib/nuklear/src/nuklear.h	/^    int text_len;$/;"	m	struct:nk_keyboard	typeref:typename:int
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_normal	lib/nuklear/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_button	typeref:struct:nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_edit	typeref:struct:nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_normal	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_color
text_normal_active	lib/nuklear/nuklear.h	/^    struct nk_color text_normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_normal_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_normal_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_pressed	lib/nuklear/nuklear.h	/^    struct nk_color text_pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_pressed	lib/nuklear/src/nuklear.h	/^    struct nk_color text_pressed;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_pressed_active	lib/nuklear/nuklear.h	/^    struct nk_color text_pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
text_pressed_active	lib/nuklear/src/nuklear.h	/^    struct nk_color text_pressed_active;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_color
texture	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    IDirect3DTexture9 *texture;$/;"	m	struct:__anon39ff3a1e0108	typeref:typename:IDirect3DTexture9 *
texture	lib/nuklear/nuklear.h	/^    nk_handle texture; \/* texture handle to a texture with a white pixel *\/$/;"	m	struct:nk_draw_null_texture	typeref:typename:nk_handle
texture	lib/nuklear/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_draw_command	typeref:typename:nk_handle
texture	lib/nuklear/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_font	typeref:typename:nk_handle
texture	lib/nuklear/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_user_font	typeref:typename:nk_handle
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture; \/* texture handle to a texture with a white pixel *\/$/;"	m	struct:nk_draw_null_texture	typeref:typename:nk_handle
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_draw_command	typeref:typename:nk_handle
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_font	typeref:typename:nk_handle
texture	lib/nuklear/src/nuklear.h	/^    nk_handle texture;$/;"	m	struct:nk_user_font	typeref:typename:nk_handle
theme	lib/nuklear/demo/style.c	/^enum theme {THEME_BLACK, THEME_WHITE, THEME_RED, THEME_BLUE, THEME_DARK};$/;"	g	file:
thr	lib/klib/khmm.h	/^	FLOAT *thr;$/;"	m	struct:__anonf542711f0408	typeref:typename:FLOAT *
tid	lib/klib/kthread.c	/^	pthread_t *tid;$/;"	m	struct:kt_forpool_t	typeref:typename:pthread_t *	file:
timestamp	lib/nuklear/demo/x11/main.c	/^timestamp(void)$/;"	f	typeref:typename:long	file:
timestamp	lib/nuklear/demo/x11_rawfb/main.c	/^timestamp(void)$/;"	f	typeref:typename:long	file:
todo	lib/nuklear/example/stb_image.h	/^   int restart_interval, todo;$/;"	m	struct:__anonc731c3c80608	typeref:typename:int
token	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    ULONG_PTR token;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:ULONG_PTR
tools	lib/nuklear/example/extended.c	/^    struct nk_image tools;$/;"	m	struct:media	typeref:struct:nk_image	file:
tooltip_border	lib/nuklear/nuklear.h	/^    float tooltip_border;$/;"	m	struct:nk_style_window	typeref:typename:float
tooltip_border	lib/nuklear/src/nuklear.h	/^    float tooltip_border;$/;"	m	struct:nk_style_window	typeref:typename:float
tooltip_border_color	lib/nuklear/nuklear.h	/^    struct nk_color tooltip_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
tooltip_border_color	lib/nuklear/src/nuklear.h	/^    struct nk_color tooltip_border_color;$/;"	m	struct:nk_style_window	typeref:struct:nk_color
tooltip_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 tooltip_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
tooltip_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 tooltip_padding;$/;"	m	struct:nk_style_window	typeref:struct:nk_vec2
top	lib/nuklear/nuklear.h	/^    struct nk_color top;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
top	lib/nuklear/src/nuklear.h	/^    struct nk_color top;$/;"	m	struct:nk_command_rect_multi_color	typeref:struct:nk_color
total_height	lib/nuklear/nuklear.h	/^    int total_height;$/;"	m	struct:nk_list_view	typeref:typename:int
total_height	lib/nuklear/src/nuklear.h	/^    int total_height;$/;"	m	struct:nk_list_view	typeref:typename:int
touchPos	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^    CGPoint _touchPos;$/;"	E	interface:ImGuiHelper
touch_down_id	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    int touch_down_id;$/;"	m	struct:nk_allegro5	typeref:typename:int
touch_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
touch_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
touch_padding	lib/nuklear/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_vec2
touch_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_button	typeref:struct:nk_vec2
touch_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_selectable	typeref:struct:nk_vec2
touch_padding	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 touch_padding;$/;"	m	struct:nk_style_toggle	typeref:struct:nk_vec2
tq	lib/nuklear/example/stb_image.h	/^      int tq;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
transparent	lib/nuklear/example/stb_image.h	/^   int flags, bgindex, ratio, transparent, eflags, delay;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
traverse_f	lib/klib/test/kbtree_test.c	/^#define traverse_f(/;"	d	file:
tree_depth	lib/nuklear/nuklear.h	/^    int tree_depth;$/;"	m	struct:nk_row_layout	typeref:typename:int
tree_depth	lib/nuklear/src/nuklear.h	/^    int tree_depth;$/;"	m	struct:nk_row_layout	typeref:typename:int
trim_blanks	lib/cimgui/imgui/imgui.h	/^        void trim_blanks() { while (b < e && is_blank(*b)) b++; while (e > b && is_blank(*(e-1))/;"	f	struct:ImGuiTextFilter::TextRange	typeref:typename:void
ttBYTE	lib/cimgui/imgui/stb_truetype.h	/^#define ttBYTE(/;"	d
ttCHAR	lib/cimgui/imgui/stb_truetype.h	/^#define ttCHAR(/;"	d
ttFixed	lib/cimgui/imgui/stb_truetype.h	/^#define ttFixed(/;"	d
ttLONG	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_int32 ttLONG(stbtt_uint8 *p)    { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_int32
ttSHORT	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_int16 ttSHORT(stbtt_uint8 *p)   { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_int16
ttULONG	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_uint32 ttULONG(stbtt_uint8 *p)  { return (p[0]<<24) + (p[1]<<16) + (p[2]<<8) + p[3]/;"	f	typeref:typename:stbtt_uint32
ttUSHORT	lib/cimgui/imgui/stb_truetype.h	/^static stbtt_uint16 ttUSHORT(stbtt_uint8 *p) { return p[0]*256 + p[1]; }$/;"	f	typeref:typename:stbtt_uint16
ttf_blob	lib/nuklear/nuklear.h	/^    void *ttf_blob;$/;"	m	struct:nk_font_config	typeref:typename:void *
ttf_blob	lib/nuklear/src/nuklear.h	/^    void *ttf_blob;$/;"	m	struct:nk_font_config	typeref:typename:void *
ttf_data_owned_by_atlas	lib/nuklear/nuklear.h	/^    unsigned char ttf_data_owned_by_atlas;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
ttf_data_owned_by_atlas	lib/nuklear/src/nuklear.h	/^    unsigned char ttf_data_owned_by_atlas;$/;"	m	struct:nk_font_config	typeref:typename:unsigned char
ttf_size	lib/nuklear/nuklear.h	/^    nk_size ttf_size;$/;"	m	struct:nk_font_config	typeref:typename:nk_size
ttf_size	lib/nuklear/src/nuklear.h	/^    nk_size ttf_size;$/;"	m	struct:nk_font_config	typeref:typename:nk_size
ttype	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	typeref:typename:uint32_t:16	file:
type	lib/cimgui/imgui/stb_truetype.h	/^      unsigned char type,padding;$/;"	m	struct:__anonc4c159420708	typeref:typename:unsigned char
type	lib/klib/knetfile.h	/^	int type, fd;$/;"	m	struct:knetFile_s	typeref:typename:int
type	lib/klib/kopen.c	/^	int type, fd;$/;"	m	struct:__anonae17a10a0208	typeref:typename:int	file:
type	lib/klib/kson.h	/^	unsigned long long type:3, n:61;$/;"	m	struct:kson_node_s	typeref:typename:unsigned long long:3
type	lib/nuklear/example/file_browser.c	/^    enum file_types type;$/;"	m	struct:file	typeref:enum:file_types	file:
type	lib/nuklear/example/stb_image.h	/^   stbi__uint32 type;$/;"	m	struct:__anonc731c3c80b08	typeref:typename:stbi__uint32
type	lib/nuklear/example/stb_image.h	/^   stbi_uc size,type,channel;$/;"	m	struct:__anonc731c3c80e08	typeref:typename:stbi_uc
type	lib/nuklear/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_buffer	typeref:enum:nk_allocation_type
type	lib/nuklear/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_pool	typeref:enum:nk_allocation_type
type	lib/nuklear/nuklear.h	/^    enum nk_chart_type type;$/;"	m	struct:nk_chart_slot	typeref:enum:nk_chart_type
type	lib/nuklear/nuklear.h	/^    enum nk_command_type type;$/;"	m	struct:nk_command	typeref:enum:nk_command_type
type	lib/nuklear/nuklear.h	/^    enum nk_panel_row_layout_type type;$/;"	m	struct:nk_row_layout	typeref:enum:nk_panel_row_layout_type
type	lib/nuklear/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_panel	typeref:enum:nk_panel_type
type	lib/nuklear/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_popup_state	typeref:enum:nk_panel_type
type	lib/nuklear/nuklear.h	/^    enum nk_style_item_type type;$/;"	m	struct:nk_style_item	typeref:enum:nk_style_item_type
type	lib/nuklear/nuklear.h	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	typeref:typename:unsigned char
type	lib/nuklear/nuklear.h	/^    unsigned int type;$/;"	m	struct:nk_memory_status	typeref:typename:unsigned int
type	lib/nuklear/src/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_buffer	typeref:enum:nk_allocation_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_allocation_type type;$/;"	m	struct:nk_pool	typeref:enum:nk_allocation_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_chart_type type;$/;"	m	struct:nk_chart_slot	typeref:enum:nk_chart_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_command_type type;$/;"	m	struct:nk_command	typeref:enum:nk_command_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_panel_row_layout_type type;$/;"	m	struct:nk_row_layout	typeref:enum:nk_panel_row_layout_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_panel	typeref:enum:nk_panel_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_panel_type type;$/;"	m	struct:nk_popup_state	typeref:enum:nk_panel_type
type	lib/nuklear/src/nuklear.h	/^    enum nk_style_item_type type;$/;"	m	struct:nk_style_item	typeref:enum:nk_style_item_type
type	lib/nuklear/src/nuklear.h	/^    unsigned int type;$/;"	m	struct:nk_memory_status	typeref:typename:unsigned int
type	lib/nuklear/src/nuklear_font.c	/^    unsigned char type,padding;$/;"	m	struct:nk_tt_vertex	typeref:typename:unsigned char	file:
u0	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
u0	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
u1	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
u1	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
uSynergyBool	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef int			uSynergyBool;$/;"	t	typeref:typename:int
uSynergyClipboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyClipboardCallback)(uSynergyCookie cookie, enum uSynergyClipboardFormat f/;"	t	typeref:typename:void (*)(uSynergyCookie cookie,enum uSynergyClipboardFormat format,const uint8_t * data,uint32_t size)
uSynergyClipboardFormat	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^enum uSynergyClipboardFormat$/;"	g
uSynergyConnectFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uSynergyBool (*uSynergyConnectFunc)(uSynergyCookie cookie);$/;"	t	typeref:typename:uSynergyBool (*)(uSynergyCookie cookie)
uSynergyContext	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^} uSynergyContext;$/;"	t	typeref:struct:__anon77dd0a3a0208
uSynergyCookie	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef struct { int ignored; } *					uSynergyCookie;$/;"	t	typeref:struct:__anon77dd0a3a0108 *
uSynergyGetTimeFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uint32_t	(*uSynergyGetTimeFunc)();$/;"	t	typeref:typename:uint32_t (*)()
uSynergyInit	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^void uSynergyInit(uSynergyContext *context)$/;"	f	typeref:typename:void
uSynergyJoystickCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyJoystickCallback)(uSynergyCookie cookie, uint8_t joyNum, uint16_t button/;"	t	typeref:typename:void (*)(uSynergyCookie cookie,uint8_t joyNum,uint16_t buttons,int8_t leftStickX,int8_t leftStickY,int8_t rightStickX,int8_t rightStickY)
uSynergyKeyboardCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyKeyboardCallback)(uSynergyCookie cookie, uint16_t key, uint16_t modifier/;"	t	typeref:typename:void (*)(uSynergyCookie cookie,uint16_t key,uint16_t modifiers,uSynergyBool down,uSynergyBool repeat)
uSynergyMouseCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyMouseCallback)(uSynergyCookie cookie, uint16_t x, uint16_t y, int16_t wh/;"	t	typeref:typename:void (*)(uSynergyCookie cookie,uint16_t x,uint16_t y,int16_t wheelX,int16_t wheelY,uSynergyBool buttonLeft,uSynergyBool buttonRight,uSynergyBool buttonMiddle)
uSynergyReceiveFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uSynergyBool (*uSynergyReceiveFunc)(uSynergyCookie cookie, uint8_t *buffer, int maxLengt/;"	t	typeref:typename:uSynergyBool (*)(uSynergyCookie cookie,uint8_t * buffer,int maxLength,int * outLength)
uSynergyScreenActiveCallback	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyScreenActiveCallback)(uSynergyCookie cookie, uSynergyBool active);$/;"	t	typeref:typename:void (*)(uSynergyCookie cookie,uSynergyBool active)
uSynergySendClipboard	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^void uSynergySendClipboard(uSynergyContext *context, const char *text)$/;"	f	typeref:typename:void
uSynergySendFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef uSynergyBool (*uSynergySendFunc)(uSynergyCookie cookie, const uint8_t *buffer, int lengt/;"	t	typeref:typename:uSynergyBool (*)(uSynergyCookie cookie,const uint8_t * buffer,int length)
uSynergySleepFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergySleepFunc)(uSynergyCookie cookie, int timeMs);$/;"	t	typeref:typename:void (*)(uSynergyCookie cookie,int timeMs)
uSynergyTraceFunc	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.h	/^typedef void		(*uSynergyTraceFunc)(uSynergyCookie cookie, const char *text);$/;"	t	typeref:typename:void (*)(uSynergyCookie cookie,const char * text)
uSynergyUpdate	lib/cimgui/imgui/examples/libs/usynergy/uSynergy.c	/^void uSynergyUpdate(uSynergyContext *context)$/;"	f	typeref:typename:void
ubyte_t	lib/klib/kstring.c	/^typedef unsigned char ubyte_t;$/;"	t	typeref:typename:unsigned char	file:
ui_header	lib/nuklear/example/extended.c	/^ui_header(struct nk_context *ctx, struct media *media, const char *title)$/;"	f	typeref:typename:void	file:
ui_piemenu	lib/nuklear/example/extended.c	/^ui_piemenu(struct nk_context *ctx, struct nk_vec2 pos, float radius,$/;"	f	typeref:typename:int	file:
ui_widget	lib/nuklear/example/extended.c	/^ui_widget(struct nk_context *ctx, struct media *media, float height)$/;"	f	typeref:typename:void	file:
ui_widget_centered	lib/nuklear/example/extended.c	/^ui_widget_centered(struct nk_context *ctx, struct media *media, float height)$/;"	f	typeref:typename:void	file:
uint64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	lib/cimgui/imgui/examples/libs/gl3w/GL/glcorearb.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
uint64_t	lib/gl3w/GL/glcorearb.h	/^typedef unsigned __int64 uint64_t;$/;"	t	typeref:typename:unsigned __int64
uint64_t	lib/gl3w/GL/glcorearb.h	/^typedef unsigned long int uint64_t;$/;"	t	typeref:typename:unsigned long int
uint64_t	lib/gl3w/GL/glcorearb.h	/^typedef unsigned long long int uint64_t;$/;"	t	typeref:typename:unsigned long long int
unchecked	lib/nuklear/example/extended.c	/^    struct nk_image unchecked;$/;"	m	struct:media	typeref:struct:nk_image	file:
uncompressed_block	lib/klib/bgzf.h	/^    void *uncompressed_block, *compressed_block;$/;"	m	struct:__anone038ee1b0108	typeref:typename:void *
undo	lib/nuklear/nuklear.h	/^    struct nk_text_undo_state undo;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_undo_state
undo	lib/nuklear/src/nuklear.h	/^    struct nk_text_undo_state undo;$/;"	m	struct:nk_text_edit	typeref:struct:nk_text_undo_state
undo_char	lib/cimgui/imgui/stb_textedit.h	/^   STB_TEXTEDIT_CHARTYPE  undo_char[STB_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:__anonfd61af4b0208	typeref:typename:STB_TEXTEDIT_CHARTYPE[]
undo_char	lib/nuklear/nuklear.h	/^   nk_rune undo_char[NK_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:nk_text_undo_state	typeref:typename:nk_rune[]
undo_char	lib/nuklear/src/nuklear.h	/^   nk_rune undo_char[NK_TEXTEDIT_UNDOCHARCOUNT];$/;"	m	struct:nk_text_undo_state	typeref:typename:nk_rune[]
undo_char_point	lib/cimgui/imgui/stb_textedit.h	/^   short undo_char_point, redo_char_point;$/;"	m	struct:__anonfd61af4b0208	typeref:typename:short
undo_char_point	lib/nuklear/nuklear.h	/^   short undo_char_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
undo_char_point	lib/nuklear/src/nuklear.h	/^   short undo_char_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
undo_point	lib/cimgui/imgui/stb_textedit.h	/^   short undo_point, redo_point;$/;"	m	struct:__anonfd61af4b0208	typeref:typename:short
undo_point	lib/nuklear/nuklear.h	/^   short undo_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
undo_point	lib/nuklear/src/nuklear.h	/^   short undo_point;$/;"	m	struct:nk_text_undo_state	typeref:typename:short
undo_rec	lib/cimgui/imgui/stb_textedit.h	/^   StbUndoRecord          undo_rec [STB_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:__anonfd61af4b0208	typeref:typename:StbUndoRecord[]
undo_rec	lib/nuklear/nuklear.h	/^   struct nk_text_undo_record undo_rec[NK_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:nk_text_undo_state	typeref:struct:nk_text_undo_record[]
undo_rec	lib/nuklear/src/nuklear.h	/^   struct nk_text_undo_record undo_rec[NK_TEXTEDIT_UNDOSTATECOUNT];$/;"	m	struct:nk_text_undo_state	typeref:struct:nk_text_undo_record[]
undostate	lib/cimgui/imgui/stb_textedit.h	/^   StbUndoState undostate;$/;"	m	struct:__anonfd61af4b0308	typeref:typename:StbUndoState
ungrab	lib/nuklear/nuklear.h	/^    unsigned char ungrab;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
ungrab	lib/nuklear/src/nuklear.h	/^    unsigned char ungrab;$/;"	m	struct:nk_mouse	typeref:typename:unsigned char
uniform_proj	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
uniform_proj	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint uniform_proj;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
uniform_proj	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
uniform_proj	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint uniform_proj;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
uniform_proj	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_sfml_device	typeref:typename:GLint
uniform_proj	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint uniform_proj;$/;"	m	struct:nk_x11_device	typeref:typename:GLint
uniform_proj	lib/nuklear/example/canvas.c	/^    GLint uniform_proj;$/;"	m	struct:device	typeref:typename:GLint	file:
uniform_proj	lib/nuklear/example/extended.c	/^    GLint uniform_proj;$/;"	m	struct:device	typeref:typename:GLint	file:
uniform_proj	lib/nuklear/example/file_browser.c	/^    GLint uniform_proj;$/;"	m	struct:device	typeref:typename:GLint	file:
uniform_proj	lib/nuklear/example/skinning.c	/^    GLint uniform_proj;$/;"	m	struct:device	typeref:typename:GLint	file:
uniform_tex	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
uniform_tex	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLint uniform_tex;$/;"	m	struct:nk_glfw_device	typeref:typename:GLint
uniform_tex	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
uniform_tex	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLint uniform_tex;$/;"	m	struct:nk_sdl_device	typeref:typename:GLint
uniform_tex	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_sfml_device	typeref:typename:GLint
uniform_tex	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLint uniform_tex;$/;"	m	struct:nk_x11_device	typeref:typename:GLint
uniform_tex	lib/nuklear/example/canvas.c	/^    GLint uniform_tex;$/;"	m	struct:device	typeref:typename:GLint	file:
uniform_tex	lib/nuklear/example/extended.c	/^    GLint uniform_tex;$/;"	m	struct:device	typeref:typename:GLint	file:
uniform_tex	lib/nuklear/example/file_browser.c	/^    GLint uniform_tex;$/;"	m	struct:device	typeref:typename:GLint	file:
uniform_tex	lib/nuklear/example/skinning.c	/^    GLint uniform_tex;$/;"	m	struct:device	typeref:typename:GLint	file:
unpackInt16	lib/klib/bgzf.c	/^static inline int unpackInt16(const uint8_t *buffer)$/;"	f	typeref:typename:int	file:
update	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
url	lib/klib/kurl.c	/^	char *url, *date, *auth;$/;"	m	struct:__anonf630694b0108	typeref:typename:char *	file:
use_clipping	lib/nuklear/nuklear.h	/^    int use_clipping;$/;"	m	struct:nk_command_buffer	typeref:typename:int
use_clipping	lib/nuklear/src/nuklear.h	/^    int use_clipping;$/;"	m	struct:nk_command_buffer	typeref:typename:int
use_pool	lib/nuklear/nuklear.h	/^    int use_pool;$/;"	m	struct:nk_context	typeref:typename:int
use_pool	lib/nuklear/src/nuklear.h	/^    int use_pool;$/;"	m	struct:nk_context	typeref:typename:int
user_allocator_context	lib/cimgui/imgui/stb_truetype.h	/^   void *user_allocator_context;$/;"	m	struct:stbtt_pack_context	typeref:typename:void *
user_func	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	typeref:typename:uint32_t:5	file:
userdata	lib/cimgui/imgui/stb_truetype.h	/^   void           * userdata;$/;"	m	struct:stbtt_fontinfo	typeref:typename:void *
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_allocator	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_clipboard	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_context	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_command	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_list	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_button	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_progress	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_property	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_scrollbar	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_selectable	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_slider	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_toggle	typeref:typename:nk_handle
userdata	lib/nuklear/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_user_font	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_allocator	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_clipboard	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_command_buffer	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_context	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_command	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_draw_list	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_button	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_progress	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_property	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_scrollbar	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_selectable	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_slider	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_style_toggle	typeref:typename:nk_handle
userdata	lib/nuklear/src/nuklear.h	/^    nk_handle userdata;$/;"	m	struct:nk_user_font	typeref:typename:nk_handle
uv	lib/cimgui/cimgui/cimgui.h	/^    struct ImVec2 uv;$/;"	m	struct:ImDrawVert	typeref:struct:ImVec2
uv	lib/cimgui/imgui/examples/allegro5_example/imgui_impl_a5.cpp	/^    ImVec2 uv;$/;"	m	struct:ImDrawVertAllegro	typeref:typename:ImVec2	file:
uv	lib/cimgui/imgui/examples/directx9_example/imgui_impl_dx9.cpp	/^    float    uv[2];$/;"	m	struct:CUSTOMVERTEX	typeref:typename:float[2]	file:
uv	lib/cimgui/imgui/imgui.h	/^    ImVec2  uv;$/;"	m	struct:ImDrawVert	typeref:typename:ImVec2
uv	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    float uv[2];$/;"	m	struct:nk_d3d11_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    float uv[2];$/;"	m	struct:nk_d3d9_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    float uv[2];$/;"	m	struct:nk_sdl_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    float uv[2];$/;"	m	struct:nk_sdl_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLfloat uv[2];$/;"	m	struct:nk_sdl_vertex	typeref:typename:GLfloat[2]
uv	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    float uv[2];$/;"	m	struct:nk_sfml_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    float uv[2];$/;"	m	struct:nk_sfml_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    float uv[2];$/;"	m	struct:nk_x11_vertex	typeref:typename:float[2]
uv	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    float uv[2];$/;"	m	struct:nk_x11_vertex	typeref:typename:float[2]
uv	lib/nuklear/example/canvas.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
uv	lib/nuklear/example/extended.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
uv	lib/nuklear/example/file_browser.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
uv	lib/nuklear/example/skinning.c	/^    float uv[2];$/;"	m	struct:nk_glfw_vertex	typeref:typename:float[2]	file:
uv	lib/nuklear/nuklear.h	/^    struct nk_vec2 uv; \/* coordinates to a white pixel in the texture  *\/$/;"	m	struct:nk_draw_null_texture	typeref:struct:nk_vec2
uv	lib/nuklear/nuklear.h	/^    struct nk_vec2 uv[2];$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_vec2[2]
uv	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 uv; \/* coordinates to a white pixel in the texture  *\/$/;"	m	struct:nk_draw_null_texture	typeref:struct:nk_vec2
uv	lib/nuklear/src/nuklear.h	/^    struct nk_vec2 uv[2];$/;"	m	struct:nk_user_font_glyph	typeref:struct:nk_vec2[2]
v	lib/klib/khmm.h	/^	int *v; \/\/ Viterbi path$/;"	m	struct:__anonf542711f0208	typeref:typename:int *
v	lib/klib/kson.h	/^	} v;$/;"	m	struct:kson_node_s	typeref:union:kson_node_s::__anonf60a9bad010a
v	lib/nuklear/example/stb_image.h	/^      int h,v;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
v	src/Scene.h	/^    mat4x4 p,v;$/;"	m	struct:Scene	typeref:typename:mat4x4
v0	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
v0	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
v1	lib/nuklear/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
v1	lib/nuklear/src/nuklear.h	/^    float u0, v0, u1, v1;$/;"	m	struct:nk_font_glyph	typeref:typename:float
v_oversample	lib/cimgui/imgui/stb_truetype.h	/^   unsigned char h_oversample, v_oversample; \/\/ don't set these, they're used internally$/;"	m	struct:__anonc4c159420508	typeref:typename:unsigned char
v_oversample	lib/cimgui/imgui/stb_truetype.h	/^   unsigned int   h_oversample, v_oversample;$/;"	m	struct:stbtt_pack_context	typeref:typename:unsigned int
v_oversample	lib/nuklear/nuklear.h	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	typeref:typename:unsigned char
v_oversample	lib/nuklear/nuklear.h	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned int
v_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned char h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_range	typeref:typename:unsigned char	file:
v_oversample	lib/nuklear/src/nuklear_font.c	/^    unsigned int   h_oversample, v_oversample;$/;"	m	struct:nk_tt_pack_context	typeref:typename:unsigned int	file:
va_copy	lib/cimgui/imgui/imgui.cpp	/^#define va_copy(/;"	d	file:
val	lib/klib/test/khash_test.c	/^	unsigned char val;$/;"	m	struct:__anon468a694a0108	typeref:typename:unsigned char	file:
val	lib/klib/test/khash_test.c	/^	unsigned char val;$/;"	m	struct:__anon468a694a0208	typeref:typename:unsigned char	file:
val_f	lib/cimgui/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::Pair::__anon90981fb3010a	typeref:typename:float
val_i	lib/cimgui/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::Pair::__anon90981fb3010a	typeref:typename:int
val_p	lib/cimgui/imgui/imgui.h	/^        union { int val_i; float val_f; void* val_p; };$/;"	m	union:ImGuiStorage::Pair::__anon90981fb3010a	typeref:typename:void *
validateProgram:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^- (BOOL)validateProgram:(GLuint)prog;$/;"	m	interface:GameViewController
validateProgram:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
validate_uint32	lib/nuklear/example/stb_image.h	/^typedef unsigned char validate_uint32[sizeof(stbi__uint32)==4 ? 1 : -1];$/;"	t	typeref:typename:unsigned char[sizeof (stbi__uint32)==4?1:-1]
value	lib/nuklear/demo/node_editor.c	/^    float value;$/;"	m	struct:node	typeref:typename:float	file:
value	lib/nuklear/example/stb_image.h	/^   stbi__uint16 value[288];$/;"	m	struct:__anonc731c3c80908	typeref:typename:stbi__uint16[288]
value	lib/nuklear/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anond7ed09940503
value	lib/nuklear/nuklear.h	/^    union nk_property value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
value	lib/nuklear/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	e	enum:nk_helper::__anond7ed09940303
value	lib/nuklear/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	e	enum:nk_helper::__anond7ed09940403
value	lib/nuklear/src/nuklear.h	/^    diff = sizeof(Big) - sizeof(T), value = nk_helper<Big, diff>::value};};$/;"	e	enum:nk_alignof::__anon8fa426eb0503
value	lib/nuklear/src/nuklear.h	/^template<typename T, int size_diff> struct nk_helper{enum {value = size_diff};};$/;"	e	enum:nk_helper::__anon8fa426eb0303
value	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_helper<T,0>{enum {value = nk_alignof<T>::value};};$/;"	e	enum:nk_helper::__anon8fa426eb0403
value	lib/nuklear/src/nuklear_internal.h	/^    union nk_property value;$/;"	m	struct:nk_property_variant	typeref:union:nk_property
value_type	lib/cimgui/imgui/imgui.h	/^    typedef T                   value_type;$/;"	t	class:ImVector	typeref:typename:T
values	lib/nuklear/example/stb_image.h	/^   stbi_uc  values[256];$/;"	m	struct:__anonc731c3c80508	typeref:typename:stbi_uc[256]
values	lib/nuklear/nuklear.h	/^    nk_uint values[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table	typeref:typename:nk_uint[]
values	lib/nuklear/src/nuklear.h	/^    nk_uint values[NK_VALUE_PAGE_CAPACITY];$/;"	m	struct:nk_table	typeref:typename:nk_uint[]
vao	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
vao	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
vao	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
vao	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
vao	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
vao	lib/nuklear/example/canvas.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vao	lib/nuklear/example/extended.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vao	lib/nuklear/example/file_browser.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vao	lib/nuklear/example/skinning.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vao	src/Drawable.h	/^    GLuint  vao;$/;"	m	struct:Drawable	typeref:typename:GLuint
vbo	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
vbo	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
vbo	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
vbo	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint vbo, ebo;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
vbo	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
vbo	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vbo, vao, ebo;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
vbo	lib/nuklear/example/canvas.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vbo	lib/nuklear/example/extended.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vbo	lib/nuklear/example/file_browser.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vbo	lib/nuklear/example/skinning.c	/^    GLuint vbo, vao, ebo;$/;"	m	struct:device	typeref:typename:GLuint	file:
vbo	src/Drawable.h	/^    GLuint  vbo;$/;"	m	struct:Drawable	typeref:typename:GLuint
vc	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    size_t vp, vt, vc;$/;"	m	struct:nk_sdl_device	typeref:typename:size_t
vec3_mul_cross	lib/linmath/linmath.h	/^static inline void vec3_mul_cross(vec3 r, vec3 const a, vec3 const b)$/;"	f
vec3_reflect	lib/linmath/linmath.h	/^static inline void vec3_reflect(vec3 r, vec3 const v, vec3 const n)$/;"	f	typeref:typename:void
vec4_mul_cross	lib/linmath/linmath.h	/^static inline void vec4_mul_cross(vec4 r, vec4 a, vec4 b)$/;"	f	typeref:typename:void
vec4_reflect	lib/linmath/linmath.h	/^static inline void vec4_reflect(vec4 r, vec4 v, vec4 n)$/;"	f	typeref:typename:void
vectors	lib/nuklear/nuklear.h	/^    struct nk_config_stack_vec2 vectors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_vec2
vectors	lib/nuklear/src/nuklear.h	/^    struct nk_config_stack_vec2 vectors;$/;"	m	struct:nk_configuration_stacks	typeref:struct:nk_config_stack_vec2
vendor	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    enum graphics_card_vendors vendor;$/;"	m	struct:opengl_info	typeref:enum:graphics_card_vendors
vendor_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *vendor_str;$/;"	m	struct:opengl_info	typeref:typename:const char *
version	lib/cimgui/imgui/examples/apple_example/imguiex-ios/Images.xcassets/AppIcon.appiconset/Contents.json	/^    "version" : 1,$/;"	n	object:info
version	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/AppIcon.appiconset/Contents.json	/^    "version" : 1,$/;"	n	object:info
version	lib/cimgui/imgui/examples/apple_example/imguiex-osx/Assets.xcassets/Contents.json	/^    "version" : 1,$/;"	n	object:info
version	lib/cimgui/imgui/examples/libs/gl3w/GL/gl3w.c	/^} version;$/;"	v	typeref:struct:__anon38bea1050108
version	lib/gl3w/GL/gl3w.c	/^} version;$/;"	v	typeref:struct:__anon0d481e870108
version	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    float version;$/;"	m	struct:opengl_info	typeref:typename:float
version	lib/nuklear/package.json	/^  "version": "1.0.0",$/;"	s
version_str	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    const char *version_str;$/;"	m	struct:opengl_info	typeref:typename:const char *
vert_buffer	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    struct nk_glfw_vertex *vert_buffer;$/;"	m	struct:nk_glfw_device	typeref:struct:nk_glfw_vertex *
vert_shdr	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
vert_shdr	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_glfw_device	typeref:typename:GLuint
vert_shdr	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
vert_shdr	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_sdl_device	typeref:typename:GLuint
vert_shdr	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_sfml_device	typeref:typename:GLuint
vert_shdr	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    GLuint vert_shdr;$/;"	m	struct:nk_x11_device	typeref:typename:GLuint
vert_shdr	lib/nuklear/example/canvas.c	/^    GLuint vert_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
vert_shdr	lib/nuklear/example/extended.c	/^    GLuint vert_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
vert_shdr	lib/nuklear/example/file_browser.c	/^    GLuint vert_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
vert_shdr	lib/nuklear/example/skinning.c	/^    GLuint vert_shdr;$/;"	m	struct:device	typeref:typename:GLuint	file:
vertexArray	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^    GLuint _vertexArray;$/;"	E	interface:GameViewController
vertexBuffer	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^    GLuint _vertexBuffer;$/;"	E	interface:GameViewController
vertex_alignment	lib/nuklear/nuklear.h	/^    nk_size vertex_alignment; \/* vertex alignment: Can be obtained by NK_ALIGNOF *\/$/;"	m	struct:nk_convert_config	typeref:typename:nk_size
vertex_alignment	lib/nuklear/src/nuklear.h	/^    nk_size vertex_alignment; \/* vertex alignment: Can be obtained by NK_ALIGNOF *\/$/;"	m	struct:nk_convert_config	typeref:typename:nk_size
vertex_array_obj_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int vertex_array_obj_available;$/;"	m	struct:opengl_info	typeref:typename:int
vertex_buffer	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11Buffer *vertex_buffer;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11Buffer *
vertex_buffer_obj_available	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    int vertex_buffer_obj_available;$/;"	m	struct:opengl_info	typeref:typename:int
vertex_count	lib/nuklear/nuklear.h	/^    unsigned int vertex_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
vertex_count	lib/nuklear/src/nuklear.h	/^    unsigned int vertex_count;$/;"	m	struct:nk_draw_list	typeref:typename:unsigned int
vertex_layout	lib/nuklear/nuklear.h	/^    const struct nk_draw_vertex_layout_element *vertex_layout; \/* describes the vertex output f/;"	m	struct:nk_convert_config	typeref:typename:const struct nk_draw_vertex_layout_element *
vertex_layout	lib/nuklear/src/nuklear.h	/^    const struct nk_draw_vertex_layout_element *vertex_layout; \/* describes the vertex output f/;"	m	struct:nk_convert_config	typeref:typename:const struct nk_draw_vertex_layout_element *
vertex_shader	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    ID3D11VertexShader *vertex_shader;$/;"	m	struct:__anon70d184300108	typeref:typename:ID3D11VertexShader *
vertex_size	lib/nuklear/nuklear.h	/^    nk_size vertex_size; \/* sizeof one vertex for vertex packing *\/$/;"	m	struct:nk_convert_config	typeref:typename:nk_size
vertex_size	lib/nuklear/src/nuklear.h	/^    nk_size vertex_size; \/* sizeof one vertex for vertex packing *\/$/;"	m	struct:nk_convert_config	typeref:typename:nk_size
vertex_t	lib/klib/test/kgraph_test.c	/^} vertex_t;$/;"	t	typeref:struct:__anon3cfbb3980108	file:
vertices	lib/nuklear/nuklear.h	/^    struct nk_buffer *vertices;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
vertices	lib/nuklear/src/nuklear.h	/^    struct nk_buffer *vertices;$/;"	m	struct:nk_draw_list	typeref:struct:nk_buffer *
view	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^@property (nonatomic, weak) UIView *view;$/;"	p	interface:ImGuiHelper
viewDidLoad	lib/cimgui/imgui/examples/apple_example/imguiex-ios/GameViewController.m	/^{$/;"	m	implementation:GameViewController
viewDidPan:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
viewDidTap:	lib/cimgui/imgui/examples/apple_example/imguiex-ios/imgui_impl_ios.mm	/^{$/;"	m	implementation:ImGuiHelper
viewport	lib/nuklear/demo/d3d11/nuklear_d3d11.h	/^    D3D11_VIEWPORT viewport;$/;"	m	struct:__anon70d184300108	typeref:typename:D3D11_VIEWPORT
viewport	lib/nuklear/demo/d3d9/nuklear_d3d9.h	/^    D3DVIEWPORT9 viewport;$/;"	m	struct:__anon39ff3a1e0108	typeref:typename:D3DVIEWPORT9
vis	lib/nuklear/demo/x11/main.c	/^    Visual *vis;$/;"	m	struct:XWindow	typeref:typename:Visual *	file:
vis	lib/nuklear/demo/x11_opengl2/main.c	/^    XVisualInfo *vis;$/;"	m	struct:XWindow	typeref:typename:XVisualInfo *	file:
vis	lib/nuklear/demo/x11_opengl3/main.c	/^    XVisualInfo *vis;$/;"	m	struct:XWindow	typeref:typename:XVisualInfo *	file:
vis	lib/nuklear/demo/x11_rawfb/main.c	/^    Visual *vis;$/;"	m	struct:XWindow	typeref:typename:Visual *	file:
volatile	build/CMakeFiles/3.11.2/CompilerIdC/CMakeCCompilerId.c	/^# define volatile$/;"	d	file:
vp	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    size_t vp, vt, vc;$/;"	m	struct:nk_sdl_device	typeref:typename:size_t
vs	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    GLsizei vs;$/;"	m	struct:nk_sdl_device	typeref:typename:GLsizei
vs	lib/nuklear/example/stb_image.h	/^   int hs,vs;   \/\/ expansion factor in each axis$/;"	m	struct:__anonc731c3c80808	typeref:typename:int
vt	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    size_t vp, vt, vc;$/;"	m	struct:nk_sdl_device	typeref:typename:size_t
vtype	lib/klib/kexpr.c	/^	uint32_t ttype:16, vtype:10, assigned:1, user_func:5; \/\/ ttype: token type; vtype: value type$/;"	m	struct:ke1_s	typeref:typename:uint32_t:10	file:
w	lib/cimgui/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
w	lib/cimgui/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
w	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_coord    w, h;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
w	lib/cimgui/imgui/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
w	lib/cimgui/imgui/stb_truetype.h	/^   int w,h,stride;$/;"	m	struct:__anonc4c159420808	typeref:typename:int
w	lib/klib/kthread.c	/^	ktf_worker_t *w;$/;"	m	struct:kt_for_t	typeref:typename:ktf_worker_t *	file:
w	lib/klib/kthread.c	/^	kto_worker_t *w;$/;"	m	struct:kt_forpool_t	typeref:typename:kto_worker_t *	file:
w	lib/klib/kurl.c	/^	union { uint8_t b[BLOCK_LENGTH]; uint32_t w[BLOCK_LENGTH\/4]; } buf;$/;"	m	union:sha1nfo::__anonf630694b020a	typeref:typename:uint32_t[]	file:
w	lib/klib/kurl.c	/^	union { uint8_t b[HASH_LENGTH]; uint32_t w[HASH_LENGTH\/4]; } state;$/;"	m	union:sha1nfo::__anonf630694b030a	typeref:typename:uint32_t[]	file:
w	lib/klib/test/kthread_test.c	/^	int max_iter, w, h;$/;"	m	struct:__anone8d3801e0108	typeref:typename:int	file:
w	lib/nuklear/demo/x11/nuklear_xlib.h	/^    unsigned int w, h;$/;"	m	struct:XSurface	typeref:typename:unsigned int
w	lib/nuklear/demo/x11_rawfb/nuklear_rawfb.h	/^    int w, h, pitch;$/;"	m	struct:rawfb_image	typeref:typename:int
w	lib/nuklear/example/stb_image.h	/^   int w,h;$/;"	m	struct:__anonc731c3c81008	typeref:typename:int
w	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
w	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
w	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
w	lib/nuklear/nuklear.h	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int
w	lib/nuklear/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short
w	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
w	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
w	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
w	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
w	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_circle_filled	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_custom	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_image	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_filled	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_scissor	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^    unsigned short w, h;$/;"	m	struct:nk_command_text	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^struct nk_image {nk_handle handle;unsigned short w,h;unsigned short region[4];};$/;"	m	struct:nk_image	typeref:typename:unsigned short
w	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
w	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
w	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord w, h;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord	file:
w	lib/nuklear/src/nuklear_font.c	/^   int w,h,stride;$/;"	m	struct:nk_tt__bitmap	typeref:typename:int	file:
w2	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
w_lores	lib/nuklear/example/stb_image.h	/^   int w_lores; \/\/ horizontal pixels pre-expansion$/;"	m	struct:__anonc731c3c80808	typeref:typename:int
was_packed	lib/cimgui/imgui/stb_rect_pack.h	/^   int            was_packed;  \/\/ non-zero if valid packing$/;"	m	struct:stbrp_rect	typeref:typename:int
was_packed	lib/cimgui/imgui/stb_truetype.h	/^   int id,w,h,was_packed;$/;"	m	struct:stbrp_rect	typeref:typename:int
was_packed	lib/nuklear/nuklear.h	/^    int was_packed;$/;"	m	struct:nk_rp_rect	typeref:typename:int
was_packed	lib/nuklear/src/nuklear_font.c	/^    int was_packed;$/;"	m	struct:nk_rp_rect	typeref:typename:int	file:
web	lib/nuklear/demo/sdl_opengles2/Makefile	/^web: prepare$/;"	t
where	lib/cimgui/imgui/stb_textedit.h	/^   STB_TEXTEDIT_POSITIONTYPE  where;$/;"	m	struct:__anonfd61af4b0108	typeref:typename:STB_TEXTEDIT_POSITIONTYPE
where	lib/nuklear/nuklear.h	/^   int where;$/;"	m	struct:nk_text_undo_record	typeref:typename:int
where	lib/nuklear/src/nuklear.h	/^   int where;$/;"	m	struct:nk_text_undo_record	typeref:typename:int
width	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWimage	typeref:typename:int
width	lib/cimgui/imgui/examples/libs/glfw/include/GLFW/glfw3.h	/^    int width;$/;"	m	struct:GLFWvidmode	typeref:typename:int
width	lib/cimgui/imgui/stb_rect_pack.h	/^   int width;$/;"	m	struct:stbrp_context	typeref:typename:int
width	lib/cimgui/imgui/stb_truetype.h	/^   int   width;$/;"	m	struct:stbtt_pack_context	typeref:typename:int
width	lib/cimgui/imgui/stb_truetype.h	/^   int width,height;$/;"	m	struct:__anonc4c159421108	typeref:typename:int
width	lib/nuklear/demo/allegro5/nuklear_allegro5.h	/^    unsigned int width;$/;"	m	struct:nk_allegro5	typeref:typename:unsigned int
width	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    unsigned int width;$/;"	m	struct:__anonc4120a9e0108	typeref:typename:unsigned int
width	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
width	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
width	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    int width, height;$/;"	m	struct:nk_glfw	typeref:typename:int
width	lib/nuklear/demo/x11/main.c	/^    unsigned int width;$/;"	m	struct:XWindow	typeref:typename:unsigned int	file:
width	lib/nuklear/demo/x11_opengl2/main.c	/^    int width, height;$/;"	m	struct:XWindow	typeref:typename:int	file:
width	lib/nuklear/demo/x11_opengl3/main.c	/^    int width, height;$/;"	m	struct:XWindow	typeref:typename:int	file:
width	lib/nuklear/demo/x11_rawfb/main.c	/^    unsigned int width;$/;"	m	struct:XWindow	typeref:typename:unsigned int	file:
width	lib/nuklear/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
width	lib/nuklear/nuklear.h	/^    int   width;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int
width	lib/nuklear/nuklear.h	/^    int width;$/;"	m	struct:nk_rp_context	typeref:typename:int
width	lib/nuklear/nuklear.h	/^    nk_text_width_f width;$/;"	m	struct:nk_user_font	typeref:typename:nk_text_width_f
width	lib/nuklear/src/nuklear.h	/^    float width, height;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
width	lib/nuklear/src/nuklear.h	/^    nk_text_width_f width;$/;"	m	struct:nk_user_font	typeref:typename:nk_text_width_f
width	lib/nuklear/src/nuklear_font.c	/^    int   width;$/;"	m	struct:nk_tt_pack_context	typeref:typename:int	file:
width	lib/nuklear/src/nuklear_font.c	/^    int width;$/;"	m	struct:nk_rp_context	typeref:typename:int	file:
width	src/App.c	/^int width = 0, height = 0;$/;"	v	typeref:typename:int
win	lib/nuklear/demo/glfw_opengl2/nuklear_glfw_gl2.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw	typeref:typename:GLFWwindow *
win	lib/nuklear/demo/glfw_opengl3/nuklear_glfw_gl3.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw	typeref:typename:GLFWwindow *
win	lib/nuklear/demo/glfw_opengl4/nuklear_glfw_gl4.h	/^    GLFWwindow *win;$/;"	m	struct:nk_glfw	typeref:typename:GLFWwindow *
win	lib/nuklear/demo/sdl_opengl2/nuklear_sdl_gl2.h	/^    SDL_Window *win;$/;"	m	struct:nk_sdl	typeref:typename:SDL_Window *
win	lib/nuklear/demo/sdl_opengl3/nuklear_sdl_gl3.h	/^    SDL_Window *win;$/;"	m	struct:nk_sdl	typeref:typename:SDL_Window *
win	lib/nuklear/demo/sdl_opengles2/main.c	/^SDL_Window *win;$/;"	v	typeref:typename:SDL_Window *
win	lib/nuklear/demo/sdl_opengles2/nuklear_sdl_gles2.h	/^    SDL_Window *win;$/;"	m	struct:nk_sdl	typeref:typename:SDL_Window *
win	lib/nuklear/demo/x11/main.c	/^    Window win;$/;"	m	struct:XWindow	typeref:typename:Window	file:
win	lib/nuklear/demo/x11_opengl2/main.c	/^    Window win;$/;"	m	struct:XWindow	typeref:typename:Window	file:
win	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^    Window win;$/;"	m	struct:nk_x11	typeref:typename:Window
win	lib/nuklear/demo/x11_opengl3/main.c	/^    Window win;$/;"	m	struct:XWindow	typeref:typename:Window	file:
win	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^    Window win;$/;"	m	struct:nk_x11	typeref:typename:Window
win	lib/nuklear/demo/x11_rawfb/main.c	/^    Window win;$/;"	m	struct:XWindow	typeref:typename:Window	file:
win	lib/nuklear/nuklear.h	/^    struct nk_page_element win[1];$/;"	m	struct:nk_page	typeref:struct:nk_page_element[1]
win	lib/nuklear/nuklear.h	/^    struct nk_window *win;$/;"	m	struct:nk_popup_state	typeref:struct:nk_window *
win	lib/nuklear/nuklear.h	/^    struct nk_window win;$/;"	m	union:nk_page_data	typeref:struct:nk_window
win	lib/nuklear/src/nuklear.h	/^    struct nk_page_element win[1];$/;"	m	struct:nk_page	typeref:struct:nk_page_element[1]
win	lib/nuklear/src/nuklear.h	/^    struct nk_window *win;$/;"	m	struct:nk_popup_state	typeref:struct:nk_window *
win	lib/nuklear/src/nuklear.h	/^    struct nk_window win;$/;"	m	union:nk_page_data	typeref:struct:nk_window
win	src/App.c	/^static GLFWwindow *win;$/;"	v	typeref:typename:GLFWwindow *	file:
window	lib/cimgui/imgui/examples/apple_example/imguiex-ios/AppDelegate.h	/^@property (strong, nonatomic) UIWindow *window;$/;"	p	interface:AppDelegate
window	lib/cimgui/imgui/examples/apple_example/imguiex-osx/AppDelegate.m	/^@property (weak) IBOutlet NSWindow *window;$/;"	p	interface:AppDelegate
window	lib/nuklear/demo/gdip/nuklear_gdip.h	/^    GpGraphics *window;$/;"	m	struct:__anon66f154fe0d08	typeref:typename:GpGraphics *
window	lib/nuklear/demo/sfml_opengl2/nuklear_sfml_gl2.h	/^    sf::Window* window;$/;"	m	struct:nk_sfml	typeref:typename:sf::Window *
window	lib/nuklear/demo/sfml_opengl3/nuklear_sfml_gl3.h	/^    sf::Window* window;$/;"	m	struct:nk_sfml	typeref:typename:sf::Window *
window	lib/nuklear/example/skinning.c	/^    struct nk_image window;$/;"	m	struct:media	typeref:struct:nk_image	file:
window	lib/nuklear/nuklear.h	/^    struct nk_style_window window;$/;"	m	struct:nk_style	typeref:struct:nk_style_window
window	lib/nuklear/src/nuklear.h	/^    struct nk_style_window window;$/;"	m	struct:nk_style	typeref:struct:nk_style_window
window_background	lib/nuklear/example/canvas.c	/^    struct nk_style_item window_background;$/;"	m	struct:nk_canvas	typeref:struct:nk_style_item	file:
window_dc	lib/nuklear/demo/gdi/nuklear_gdi.h	/^    HDC window_dc;$/;"	m	struct:__anonc4120a9e0108	typeref:typename:HDC
wm_delete_window	lib/nuklear/demo/x11/main.c	/^    Atom wm_delete_window;$/;"	m	struct:XWindow	typeref:typename:Atom	file:
wm_delete_window	lib/nuklear/demo/x11_opengl2/main.c	/^    Atom wm_delete_window;$/;"	m	struct:XWindow	typeref:typename:Atom	file:
wm_delete_window	lib/nuklear/demo/x11_opengl3/main.c	/^    Atom wm_delete_window;$/;"	m	struct:XWindow	typeref:typename:Atom	file:
worker_for	lib/klib/test/kthread_test2.c	/^static void worker_for(void *_data, long i, int tid) \/\/ kt_for() callback$/;"	f	typeref:typename:void	file:
worker_pipeline	lib/klib/test/kthread_test2.c	/^static void *worker_pipeline(void *shared, int step, void *in) \/\/ kt_pipeline() callback$/;"	f	typeref:typename:void *	file:
workers	lib/klib/kthread.c	/^	ktp_worker_t *workers;$/;"	m	struct:ktp_t	typeref:typename:ktp_worker_t *	file:
write_cb	lib/klib/kurl.c	/^static size_t write_cb(char *ptr, size_t size, size_t nmemb, void *data) \/\/ callback required /;"	f	typeref:typename:size_t	file:
x	lib/cimgui/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
x	lib/cimgui/cimgui/cimgui.h	/^    float x, y;$/;"	m	struct:ImVec2	typeref:typename:float
x	lib/cimgui/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
x	lib/cimgui/imgui/imgui.h	/^    float x, y;$/;"	m	struct:ImVec2	typeref:typename:float
x	lib/cimgui/imgui/stb_rect_pack.h	/^   int x,y;$/;"	m	struct:__anon5e304a0c0308	typeref:typename:int
x	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
x	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node	typeref:typename:stbrp_coord
x	lib/cimgui/imgui/stb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anonfd61af4b0508	typeref:typename:float
x	lib/cimgui/imgui/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anonc4c159420708	typeref:typename:stbtt_vertex_type
x	lib/cimgui/imgui/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:float
x	lib/cimgui/imgui/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anonc4c159421008	typeref:typename:float
x	lib/cimgui/imgui/stb_truetype.h	/^   int x,dx;$/;"	m	struct:stbtt__active_edge	typeref:typename:int
x	lib/cimgui/imgui/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anonc4c159421108	typeref:typename:int
x	lib/cimgui/imgui/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
x	lib/cimgui/imgui/stb_truetype.h	/^   unsigned char x;$/;"	m	struct:__anonc4c159421208	typeref:typename:unsigned char
x	lib/klib/kbtree.h	/^	kbnode_t *x;$/;"	m	struct:__anon929281af0208	typeref:typename:kbnode_t *
x	lib/klib/kbtree.h	/^	kbnode_t *x;$/;"	m	struct:__anon929281af0408	typeref:typename:kbnode_t *
x	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
x	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
x	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
x	lib/nuklear/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult	typeref:typename:int
x	lib/nuklear/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	typeref:typename:nk_rp_coord
x	lib/nuklear/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text	typeref:typename:short
x	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
x	lib/nuklear/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	typeref:typename:float
x	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
x	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
x	lib/nuklear/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll	typeref:typename:nk_uint
x	lib/nuklear/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	typeref:typename:float
x	lib/nuklear/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2	typeref:typename:float
x	lib/nuklear/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i	typeref:typename:short
x	lib/nuklear/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big	typeref:typename:T
x	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
x	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
x	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll	typeref:typename:nk_uint
x	lib/nuklear/src/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2	typeref:typename:float
x	lib/nuklear/src/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i	typeref:typename:short
x	lib/nuklear/src/nuklear.h	/^template<typename T> struct nk_alignof{struct Big {T x; char c;}; enum {$/;"	m	struct:nk_alignof::Big	typeref:typename:T
x	lib/nuklear/src/nuklear_font.c	/^    int x,y;$/;"	m	struct:nk_rp__findresult	typeref:typename:int	file:
x	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	typeref:typename:nk_rp_coord	file:
x	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord	file:
x	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short	file:
x	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	typeref:typename:float	file:
x	lib/nuklear/src/nuklear_text_editor.c	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	typeref:typename:float	file:
x0	lib/cimgui/imgui/stb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, et/;"	m	struct:__anonfd61af4b0408	typeref:typename:float
x0	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x0	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anonc4c159420308	typeref:typename:float
x0	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420208	typeref:typename:unsigned short
x0	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420408	typeref:typename:unsigned short
x0	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
x0	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
x0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
x0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
x0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
x0	lib/nuklear/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
x0	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
x0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float	file:
x0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
x0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short	file:
x0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short	file:
x0	lib/nuklear/src/nuklear_text_editor.c	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	typeref:typename:float	file:
x1	lib/cimgui/imgui/stb_textedit.h	/^   float x0,x1;             \/\/ starting x location, end x location (allows for align=right, et/;"	m	struct:__anonfd61af4b0408	typeref:typename:float
x1	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
x1	lib/cimgui/imgui/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anonc4c159420308	typeref:typename:float
x1	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420208	typeref:typename:unsigned short
x1	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420408	typeref:typename:unsigned short
x1	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
x1	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
x1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
x1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
x1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
x1	lib/nuklear/nuklear.h	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
x1	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
x1	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float	file:
x1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
x1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short	file:
x1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short	file:
x1	lib/nuklear/src/nuklear_text_editor.c	/^   float x0,x1;$/;"	m	struct:nk_text_edit_row	typeref:typename:float	file:
x11	lib/nuklear/demo/x11_opengl2/nuklear_xlib_gl2.h	/^} x11;$/;"	v	typeref:struct:nk_x11
x11	lib/nuklear/demo/x11_opengl3/nuklear_xlib_gl3.h	/^} x11;$/;"	v	typeref:struct:nk_x11
xa_clipboard	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_clipboard;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:Atom
xa_targets	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_targets;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:Atom
xa_text	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_text;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:Atom
xa_utf8_string	lib/nuklear/demo/x11/nuklear_xlib.h	/^    Atom xa_utf8_string;$/;"	m	struct:__anon50fc9fff0108	typeref:typename:Atom
xadvance	lib/cimgui/imgui/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anonc4c159420208	typeref:typename:float
xadvance	lib/cimgui/imgui/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anonc4c159420408	typeref:typename:float
xadvance	lib/nuklear/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_font_glyph	typeref:typename:float
xadvance	lib/nuklear/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
xadvance	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float
xadvance	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
xadvance	lib/nuklear/src/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_font_glyph	typeref:typename:float
xadvance	lib/nuklear/src/nuklear.h	/^    float xadvance;$/;"	m	struct:nk_user_font_glyph	typeref:typename:float
xadvance	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float	file:
xadvance	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float	file:
xfont	lib/nuklear/demo/x11/nuklear_xlib.h	/^    XFontStruct *xfont;$/;"	m	struct:XFont	typeref:typename:XFontStruct *
ximage	lib/nuklear/demo/x11/nuklear_xlib.h	/^    XImage* ximage;$/;"	m	struct:XImageWithAlpha	typeref:typename:XImage *
ximg	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    XImage *ximg;$/;"	m	struct:__anon88f201100108	typeref:typename:XImage *
xlib	lib/nuklear/demo/x11/nuklear_xlib.h	/^} xlib;$/;"	v	typeref:struct:__anon50fc9fff0108
xlib	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^} xlib;$/;"	v	typeref:struct:__anon88f201100108
xmax	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anone8d3801e0108	typeref:typename:double	file:
xmin	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anone8d3801e0108	typeref:typename:double	file:
xoff	lib/cimgui/imgui/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anonc4c159420208	typeref:typename:float
xoff	lib/cimgui/imgui/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anonc4c159420408	typeref:typename:float
xoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float
xoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
xoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float	file:
xoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float	file:
xoff2	lib/cimgui/imgui/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anonc4c159420408	typeref:typename:float
xoff2	lib/nuklear/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
xoff2	lib/nuklear/src/nuklear_font.c	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float	file:
xsi	lib/nuklear/demo/x11_rawfb/nuklear_xlib.h	/^    XShmSegmentInfo xsi;$/;"	m	struct:__anon88f201100108	typeref:typename:XShmSegmentInfo
y	lib/cimgui/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
y	lib/cimgui/cimgui/cimgui.h	/^    float x, y;$/;"	m	struct:ImVec2	typeref:typename:float
y	lib/cimgui/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
y	lib/cimgui/imgui/imgui.h	/^    float x, y;$/;"	m	struct:ImVec2	typeref:typename:float
y	lib/cimgui/imgui/stb_rect_pack.h	/^   int x,y;$/;"	m	struct:__anon5e304a0c0308	typeref:typename:int
y	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_coord    x, y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
y	lib/cimgui/imgui/stb_rect_pack.h	/^   stbrp_coord  x,y;$/;"	m	struct:stbrp_node	typeref:typename:stbrp_coord
y	lib/cimgui/imgui/stb_textedit.h	/^   float x,y;    \/\/ position of n'th character$/;"	m	struct:__anonfd61af4b0508	typeref:typename:float
y	lib/cimgui/imgui/stb_truetype.h	/^      stbtt_vertex_type x,y,cx,cy,cx1,cy1;$/;"	m	struct:__anonc4c159420708	typeref:typename:stbtt_vertex_type
y	lib/cimgui/imgui/stb_truetype.h	/^   float x, y;$/;"	m	struct:__anonc4c159420f08	typeref:typename:float
y	lib/cimgui/imgui/stb_truetype.h	/^   float x,y;$/;"	m	struct:__anonc4c159421008	typeref:typename:float
y	lib/cimgui/imgui/stb_truetype.h	/^   int x,y,bottom_y;$/;"	m	struct:__anonc4c159421108	typeref:typename:int
y	lib/cimgui/imgui/stb_truetype.h	/^   stbrp_coord x,y;$/;"	m	struct:stbrp_rect	typeref:typename:stbrp_coord
y	lib/nuklear/example/stb_image.h	/^      int x,y,w2,h2;$/;"	m	struct:__anonc731c3c80608::__anonc731c3c80708	typeref:typename:int
y	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
y	lib/nuklear/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
y	lib/nuklear/nuklear.h	/^    int x,y;$/;"	m	struct:nk_rp__findresult	typeref:typename:int
y	lib/nuklear/nuklear.h	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	typeref:typename:nk_rp_coord
y	lib/nuklear/nuklear.h	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text	typeref:typename:short
y	lib/nuklear/nuklear.h	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short
y	lib/nuklear/nuklear.h	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	typeref:typename:float
y	lib/nuklear/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
y	lib/nuklear/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
y	lib/nuklear/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll	typeref:typename:nk_uint
y	lib/nuklear/nuklear.h	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	typeref:typename:float
y	lib/nuklear/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2	typeref:typename:float
y	lib/nuklear/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_chart	typeref:typename:float
y	lib/nuklear/src/nuklear.h	/^    float x, y, w, h;$/;"	m	struct:nk_menu_state	typeref:typename:float
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_circle_filled	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_custom	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_image	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_filled	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_rect_multi_color	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_scissor	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^    short x, y;$/;"	m	struct:nk_command_text	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^struct nk_rect {float x,y,w,h;};$/;"	m	struct:nk_rect	typeref:typename:float
y	lib/nuklear/src/nuklear.h	/^struct nk_recti {short x,y,w,h;};$/;"	m	struct:nk_recti	typeref:typename:short
y	lib/nuklear/src/nuklear.h	/^struct nk_scroll {nk_uint x, y;};$/;"	m	struct:nk_scroll	typeref:typename:nk_uint
y	lib/nuklear/src/nuklear.h	/^struct nk_vec2 {float x,y;};$/;"	m	struct:nk_vec2	typeref:typename:float
y	lib/nuklear/src/nuklear.h	/^struct nk_vec2i {short x, y;};$/;"	m	struct:nk_vec2i	typeref:typename:short
y	lib/nuklear/src/nuklear_font.c	/^    int x,y;$/;"	m	struct:nk_rp__findresult	typeref:typename:int	file:
y	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord  x,y;$/;"	m	struct:nk_rp_node	typeref:typename:nk_rp_coord	file:
y	lib/nuklear/src/nuklear_font.c	/^    nk_rp_coord x, y;$/;"	m	struct:nk_rp_rect	typeref:typename:nk_rp_coord	file:
y	lib/nuklear/src/nuklear_font.c	/^    short x,y,cx,cy;$/;"	m	struct:nk_tt_vertex	typeref:typename:short	file:
y	lib/nuklear/src/nuklear_font.c	/^struct nk_tt__point {float x,y;};$/;"	m	struct:nk_tt__point	typeref:typename:float	file:
y	lib/nuklear/src/nuklear_text_editor.c	/^   float x,y;    \/* position of n'th character *\/$/;"	m	struct:nk_text_find	typeref:typename:float	file:
y0	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y0	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0,s0,t0; \/\/ top-left$/;"	m	struct:__anonc4c159420308	typeref:typename:float
y0	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420208	typeref:typename:unsigned short
y0	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420408	typeref:typename:unsigned short
y0	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
y0	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
y0	lib/nuklear/nuklear.h	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
y0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
y0	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
y0	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
y0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float	file:
y0	lib/nuklear/src/nuklear_font.c	/^    float x0,y0,s0,t0; \/* top-left *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
y0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short	file:
y0	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short	file:
y1	lib/cimgui/imgui/stb_truetype.h	/^   float x0,y0, x1,y1;$/;"	m	struct:stbtt__edge	typeref:typename:float
y1	lib/cimgui/imgui/stb_truetype.h	/^   float x1,y1,s1,t1; \/\/ bottom-right$/;"	m	struct:__anonc4c159420308	typeref:typename:float
y1	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420208	typeref:typename:unsigned short
y1	lib/cimgui/imgui/stb_truetype.h	/^   unsigned short x0,y0,x1,y1; \/\/ coordinates of bbox in bitmap$/;"	m	struct:__anonc4c159420408	typeref:typename:unsigned short
y1	lib/nuklear/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
y1	lib/nuklear/nuklear.h	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float
y1	lib/nuklear/nuklear.h	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float
y1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short
y1	lib/nuklear/nuklear.h	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short
y1	lib/nuklear/src/nuklear.h	/^    float x0, y0, x1, y1, w, h;$/;"	m	struct:nk_font_glyph	typeref:typename:float
y1	lib/nuklear/src/nuklear_font.c	/^    float x0,y0, x1,y1;$/;"	m	struct:nk_tt__edge	typeref:typename:float	file:
y1	lib/nuklear/src/nuklear_font.c	/^    float x1,y1,s1,t1; \/* bottom-right *\/$/;"	m	struct:nk_tt_aligned_quad	typeref:typename:float	file:
y1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:unsigned short	file:
y1	lib/nuklear/src/nuklear_font.c	/^    unsigned short x0,y0,x1,y1;$/;"	m	struct:nk_tt_packedchar	typeref:typename:unsigned short	file:
ymax	lib/cimgui/imgui/stb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anonfd61af4b0408	typeref:typename:float
ymax	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anone8d3801e0108	typeref:typename:double	file:
ymax	lib/nuklear/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
ymax	lib/nuklear/src/nuklear_text_editor.c	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	typeref:typename:float	file:
ymin	lib/cimgui/imgui/stb_textedit.h	/^   float ymin,ymax;         \/\/ height of row above and below baseline$/;"	m	struct:__anonfd61af4b0408	typeref:typename:float
ymin	lib/klib/test/kthread_test.c	/^	double xmin, xmax, ymin, ymax;$/;"	m	struct:__anone8d3801e0108	typeref:typename:double	file:
ymin	lib/nuklear/nuklear.h	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	typeref:typename:float
ymin	lib/nuklear/src/nuklear_text_editor.c	/^   float ymin,ymax;$/;"	m	struct:nk_text_edit_row	typeref:typename:float	file:
yoff	lib/cimgui/imgui/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anonc4c159420208	typeref:typename:float
yoff	lib/cimgui/imgui/stb_truetype.h	/^   float xoff,yoff,xadvance;$/;"	m	struct:__anonc4c159420408	typeref:typename:float
yoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float
yoff	lib/nuklear/nuklear.h	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
yoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_bakedchar	typeref:typename:float	file:
yoff	lib/nuklear/src/nuklear_font.c	/^    float xoff,yoff,xadvance;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float	file:
yoff2	lib/cimgui/imgui/stb_truetype.h	/^   float xoff2,yoff2;$/;"	m	struct:__anonc4c159420408	typeref:typename:float
yoff2	lib/nuklear/nuklear.h	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float
yoff2	lib/nuklear/src/nuklear_font.c	/^    float xoff2,yoff2;$/;"	m	struct:nk_tt_packedchar	typeref:typename:float	file:
ypos	lib/nuklear/example/stb_image.h	/^   int ypos;    \/\/ which pre-expansion row we're on$/;"	m	struct:__anonc731c3c80808	typeref:typename:int
ystep	lib/nuklear/example/stb_image.h	/^   int ystep;   \/\/ how far through vertical expansion we are$/;"	m	struct:__anonc731c3c80808	typeref:typename:int
z	lib/cimgui/cimgui/cimgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
z	lib/cimgui/imgui/imgui.h	/^    float x, y, z, w;$/;"	m	struct:ImVec4	typeref:typename:float
z_distance	lib/nuklear/example/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:stbi__zhuffman
z_expandable	lib/nuklear/example/stb_image.h	/^   int   z_expandable;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:int
z_length	lib/nuklear/example/stb_image.h	/^   stbi__zhuffman z_length, z_distance;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:stbi__zhuffman
zbuffer	lib/nuklear/example/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:stbi_uc *
zbuffer_end	lib/nuklear/example/stb_image.h	/^   stbi_uc *zbuffer, *zbuffer_end;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:stbi_uc **
zout	lib/nuklear/example/stb_image.h	/^   char *zout;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:char *
zout_end	lib/nuklear/example/stb_image.h	/^   char *zout_end;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:char *
zout_start	lib/nuklear/example/stb_image.h	/^   char *zout_start;$/;"	m	struct:__anonc731c3c80a08	typeref:typename:char *
~ExampleAppConsole	lib/cimgui/imgui/imgui_demo.cpp	/^    ~ExampleAppConsole()$/;"	f	struct:ExampleAppConsole	file:
~ImDrawData	lib/cimgui/imgui/imgui.h	/^    ~ImDrawData()   { Clear(); }$/;"	f	struct:ImDrawData
~ImDrawList	lib/cimgui/imgui/imgui.h	/^    ~ImDrawList() { ClearFreeMemory(); }$/;"	f	struct:ImDrawList
~ImFont	lib/cimgui/imgui/imgui_draw.cpp	/^ImFont::~ImFont()$/;"	f	class:ImFont
~ImFontAtlas	lib/cimgui/imgui/imgui_draw.cpp	/^ImFontAtlas::~ImFontAtlas()$/;"	f	class:ImFontAtlas
~ImGuiListClipper	lib/cimgui/imgui/imgui.h	/^    ~ImGuiListClipper()                                                 { IM_ASSERT(ItemsCount =/;"	f	struct:ImGuiListClipper
~ImGuiWindow	lib/cimgui/imgui/imgui.cpp	/^ImGuiWindow::~ImGuiWindow()$/;"	f	class:ImGuiWindow
~ImVector	lib/cimgui/imgui/imgui.h	/^    inline ~ImVector()          { if (Data) ImGui::MemFree(Data); }$/;"	f	class:ImVector
